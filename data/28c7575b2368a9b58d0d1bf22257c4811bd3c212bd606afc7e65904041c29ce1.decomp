sub_23f403
lea esp [ esp + 0x8 ]
ja rwxdata
stc
cmp bp cx
sub edi 0x4
call sub_276281
clc
pushfd
cmp cx bp
sub ebx edi
and di bx
add esp 0x4
add ebx esp
mov edi 0x382454cb
mov edi ebx
lea edi [ esp + 0x421b8b61 ]
movsx edi dl
mov edi ebx
pushfd
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
test ah dh
inc al
mov al 0x2e
stc
clc
[ edi ]
pushad
mov [ esp + 0x8 ] ch
push esi
mov [ esp + 0xc ] esi
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_24057e
push 0x47182010
not ah
lea esp [ esp + 0x4 ]
ja rwxdata
push ebp
jmp sub_273b2a
mov [ edi - 0x1 ] 0x0
setle ah
push ebx
jmp rwxdata
lea eax [ rwxdata ]
test eax 0x8d41605a
mov [ 0xffffffffdf07fb64 ] al
sti
jne rwxdata
cmp al [ edx ]
add [ ebx ] ch
fisub [ eax - 0x2f ]
push ebp
jo rwxdata
xor edx ecx
sbb [ ebx - 0x2e12b44d ] dh
loope rwxdata
mov edi 0x131738f6
inc eax
stosb [ edi ]
loop rwxdata
dec esp
or edx [ edi + 0x62e37c74 ]
pop eax
inc ebx
mov esi 0x4550d7d4
cwde
cmpsd [ esi ] [ edi ]
enter 0x5aa9 0x60
inc ecx
lea esp [ edx - 0x20f8049c ]
xchg esi eax
sbb al cl
inc esi
fmul st6
nop
out 0x88 eax
arpl [ esi ] bp
add al 0x69
add al 0x63
call sub_276950
sub ebx edx
pushad
ror [ esi + 0x37cb0035 ] 0x1
or al bl
lodsd [ esi ]
xchg ecx eax
cli
push edx
std
mov ch 0x7
and cl [ esi ]
pop esi
adc eax 0x607ea1f
daa
jl rwxdata
loope rwxdata
dec ebp
les ebx [ edx ]
mov esp 0xebac36db
insb
mov [ 0x711888da ] al
lodsd [ esi ]
bswap esp
xlat
sub bl [ ecx - 0x78 ]
js rwxdata
add ch [ ecx ]
bound ebx [ esi + ebp * 4 - 0x30 ]
0xeaa4
int3
xchg esp eax
imul esi [ ebx ] 0x15
les edx [ edi + 0x6ccd2c2b ]
sub [ edx + 0x2816a8a4 ] eax
dec ebx
rol [ ecx - 0x3f01d7b5 ] 0xbe
mov al [ 0xfffffffff1117ca8 ]
and [ esp ] al
pop es
fstp [ esi + 0x35 ]
test [ edx + ebp * 2 + 0x7 ] ecx
cmp al 0x7a
inc edx
pop ecx
rcl [ eax + 0x289049f9 ] cl
out dx eax
add esp [ edx + 0x1 ]
fnstenv [ ebp - 0x764ad23f ]
sub_23f43a
lea esp [ esp + 0x30 ]
je rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
test dl 0x9f
jmp rwxdata
add eax edi
clc
stc
cmp eax edx
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
clc
cmp bl 0x3c
cmp bx si
cmc
cmp eax [ ebp - 0x10 ]
jle rwxdata
call sub_273cfc
push 0x1c86ec4
lea esp [ esp + 0x4 ]
jae rwxdata
shr bx cl
push ebx
mov ebx eax
add esp 0x4
shl di 0xb
bts di 0x1
ror ch 0x3
adc cl 0x29
mov edi eax
bswap ecx
mov ecx 0x104
cmp ch 0x86
pushad
xor al al
test ah 0x77
cmp dh 0x75
push ebx
jmp rwxdata
[ edi ]
pushfd
mov [ esp ] dx
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x28 ]
jne rwxdata
cmp ch cl
bsf cx si
adc ch 0x3a
mov ecx edi
rcl si 0x3
ror si 0xa
bsf si dx
rcr si cl
sub ecx ebx
sbb si bx
mov esi esp
stc
cmp bp cx
sub edi 0x4
call sub_276281
sub_23f4c9
lea esp [ esp + 0x34 ]
jbe rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
shr di cl
lea edi [ ebx - 0x452f582c ]
sub ecx 0x1
sub esi esi
mov [ ebp - 0x4 ] ecx
test ch dl
adc edi 0xcaf49b4d
mov ecx [ ebp - 0x8 ]
cmp al 0x1e
movsx di dl
add ecx [ ebp - 0x4 ]
bswap di
pushad
movzx edi cl
movsx edi cl
shr ecx 0x1
bsr si si
neg esi
mov edi [ ebx + ecx * 4 ]
bsr esi ebx
shrd si di 0x3
bts si di
add edi eax
lea esp [ esp + 0x20 ]
jl rwxdata
bswap si
mov si 0x60c4
mov esi [ ebp + 0xc ]
pushfd
jmp rwxdata
lea esi [ ebp - 0x3a838ae0 ]
lea esi [ ebp * 2 + 0x8b99478 ]
mov si sp
mov esi [ ebp + 0xc ]
jmp rwxdata
lea esp [ esp + 0x4 ]
jno rwxdata
call sub_253a05
jmp rwxdata
push esi
mov [ esp ] eax
setge al
pushad
call sub_26cece
push ebx
pushfd
mov [ esp + 0x4 ] eax
push [ esp ]
pushfd
pushad
lodsb [ esi ]
stc
bt ax cx
rol al 0x6
push [ esp ]
jmp rwxdata
clc
sub al 0x6f
clc
clc
bt ecx 0x17
bt edx 0x1c
rol al 0x7
call sub_2709ef
sub_23f53d
setg bl
xchg di cx
pop edi
pushad
pushfd
xchg bl ch
pushfd
mov ebx [ esp + 0x28 ]
pushfd
mov ch dh
pop ecx
mov ecx [ esp + 0x2c ]
push ebx
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushad
push ecx
push [ esp + 0x30 ]
retn 0x44
sub_23f567
push ecx
clc
add edi eax
push esi
mov [ esp ] 0x42
clc
stc
mov edi [ edi + ecx * 4 ]
stc
jmp rwxdata
jmp rwxdata
cmp dh 0xcb
test edi edi
jmp rwxdata
lea esp [ esp + 0x38 ]
je rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
bt bx 0x8
clc
add eax edi
push esi
test ebp esi
cmp eax edx
mov [ esp ] dl
pushfd
jmp rwxdata
lea esp [ esp + 0x8 ]
jb rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
stc
pushfd
bt sp 0x4
push [ esp ]
cmp eax [ ebp - 0x10 ]
push ebx
lea esp [ esp + 0xc ]
jae rwxdata
push esi
call sub_240181
sub_23f6af
lea esp [ esp + 0x10 ]
ja rwxdata
stc
cmp bp cx
sub edi 0x4
call sub_276281
push 0x73957a01
pushad
sub ebx edi
pushad
mov [ esp ] 0x27
push 0x227760a9
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
call sub_240662
sub_23f9a0
lea eax [ ebp - 0x8 ]
mov [ esp + 0x4 ] bl
pushad
call sub_275057
adc bl bl
shl [ ebx - 0x78 ] 0x1
fild [ edi + 0x11 ]
out 0xb6 al
mov bl 0x9a
add [ edi ] 0xa5
push 0x31604f80
pop ecx
scasb [ edi ]
push ebx
into
xor edi [ esi - 0x38878fc1 ]
sub [ ebp - 0x5c0fa86 ] ah
xor [ ecx ] cl
mov al 0x7a
dec ebx
sub_23fcd3
mov eax [ ebp + 0x8 ]
pushfd
stc
test eax eax
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
je rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
or dx 0x2edf
call sub_276869
sub_24014b
lea esp [ esp + 0x4 ]
je rwxdata
setg bh
jmp rwxdata
ror di cl
add [ ebp - 0x4 ] ecx
btr di dx
sub ecx 0x8
neg bx
shr ecx 0x1
movsx edi dl
mov edi [ esi ]
shr bh 0x1
setns bh
seta bh
or bx 0x4fd5
add edi [ ebp + 0x10 ]
jmp rwxdata
movsx esi al
pop esi
push esp
xchg ecx edi
lea esp [ esp + 0x4 ]
jpe rwxdata
sar bh cl
shl bh 0x6
push 0x1fc4e2b9
add esi 0x8
movsx bx bl
mov bx [ esi ]
cmp cl 0xf8
shr ebx 0xc
cmc
cmp ebp eax
pushad
push ebx
cmp ebx 0x1
mov [ esp ] 0xef
mov [ esp ] bl
jmp rwxdata
jo rwxdata
pop edi
push eax
mov ebx [ esp + 0x4 ]
pushad
setno cl
mov ecx [ esp + 0x28 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
jmp sub_23f53d
not di
pop edi
not bl
call sub_27847e
mov esp ebp
pushad
call sub_240d36
call 0xffffffffc96ba9d3
jl rwxdata
shld bx si 0x1
push eax
rcl bx 0x2
setbe bl
mov bx [ esi ]
call sub_27864f
pushfd
cmp ebx 0x2
pushfd
jmp rwxdata
pop esi
inc ebp
int1
dec eax
and cl [ ecx - 0x33 ]
loope rwxdata
insb
mov ah 0xa9
mov esi 0x27bd304e
inc [ ecx + edx ]
mov esi 0xab76f3d6
push esi
into
pop ebp
aaa
mov bh bl
pop esp
and al 0x7
add ebx [ eax + 0x42127e0 ]
adc esp [ edi ]
mov es bx
imul esp [ ebx ] 0x4b
rcr [ eax - 0x4cf47c62 ] 0x1
mov [ esp + 0x4 ] 0xa
lea esp [ esp + 0x8 ]
je rwxdata
out dx eax
0x6855
jmp 0x608884b5
jmp rwxdata
jmp rwxdata
mov bx [ esi ]
clc
stc
clc
and ebx 0xfff
pushad
cmp ax cx
mov [ esp ] 0x13
bt sp ax
add [ ebx + edi ] dx
pushad
push edx
mov [ esp ] 0xd7
mov [ esp ] ax
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp ebx 0x3
jmp sub_26e907
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_240181
mov ebx eax
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
shl di 0xb
bts di 0x1
ror ch 0x3
adc cl 0x29
mov edi eax
bswap ecx
mov ecx 0x104
cmp ch 0x86
pushad
xor al al
test ah 0x77
cmp dh 0x75
push ebx
jmp rwxdata
[ edi ]
pushfd
mov [ esp ] dx
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
cmp ch cl
bsf cx si
adc ch 0x3a
mov ecx edi
rcl si 0x3
ror si 0xa
bsf si dx
rcr si cl
sub ecx ebx
sbb si bx
mov esi esp
stc
cmp bp cx
sub edi 0x4
call sub_276281
sub_240397
lea esp [ esp + 0x4 ]
jb rwxdata
stc
clc
push 0xdf81cdfc
cmp ecx [ ebp - 0x8 ]
pushfd
push edx
lea esp [ esp + 0xc ]
jae rwxdata
cmp dh dh
stc
cmp [ edi - 0x1 ] 0x0
pushad
mov [ esp + 0x8 ] 0x45c8
mov [ esp ] 0xc020
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jbe rwxdata
jbe rwxdata
push 0xb8d9604f
pushfd
call sub_274563
call sub_279927
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
adc si ax
push 0x77e5f851
sub ecx 0x1
adc di cx
mov [ ebp - 0x4 ] ecx
lea edi [ ebp - 0xfbf5a28 ]
mov ecx [ ebp - 0x8 ]
shl si 0x1
rcr di 0xd
jmp sub_26eb32
and di 0x5cd1
rcr di 0x4
sub ecx 0x1
bswap si
shr di 0x9
btc di 0x6
mov [ ebp - 0x4 ] ecx
bsr cx bx
shl si 0x5
not cl
bts cx si
mov ecx [ ebp - 0x8 ]
neg di
xor di 0xa55b
shrd si bp 0x1
add ecx [ ebp - 0x4 ]
bswap di
jmp rwxdata
dec di
sar si 0xd
shr ecx 0x1
test bh cl
btr si ax
ror di cl
ror di 0xc
mov edi [ ebx + ecx * 4 ]
cmp bx 0x9c6f
or si bp
cmc
add edi eax
pushad
movsx esi dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x20 ]
sub_2403cb
movzx ecx [ edi + ecx * 2 ]
add esp 0x28
mov edi 0xfe5606ab
mov edi [ edx + 0x1c ]
clc
jmp rwxdata
test ebx ecx
test bh 0x94
add edi eax
pushfd
push [ esp ]
mov edi [ edi + ecx * 4 ]
pushfd
clc
pushad
cmp ah ah
test edi edi
mov [ esp + 0x8 ] cl
call sub_23f43a
sub_24057e
pushad
push 0xadf67200
mov esp esi
push 0xf9a7a1b6
lea esp [ esp + 0x4 ]
jmp rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
sub_240662
xor al 0xa2
add al 0xba
cmc
add esp 0x4
add ebx esp
sar di 0x1
mov edi ebx
test ah dh
inc al
mov al 0x2e
stc
clc
[ edi ]
pushad
mov [ esp + 0x8 ] ch
push esi
mov [ esp + 0xc ] esi
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_24057e
push 0x47182010
not ah
lea esp [ esp + 0x4 ]
ja rwxdata
push ebp
jmp sub_273b2a
mov [ edi - 0x1 ] 0x0
setle ah
push ebx
jmp rwxdata
lea eax [ rwxdata ]
test eax 0x8d41605a
mov [ 0xffffffffdf07fb64 ] al
sti
jne rwxdata
cmp al [ edx ]
add [ ebx ] ch
fisub [ eax - 0x2f ]
push ebp
jo rwxdata
xor edx ecx
sbb [ ebx - 0x2e12b44d ] dh
loope rwxdata
mov edi 0x131738f6
inc eax
stosb [ edi ]
loop rwxdata
dec esp
or edx [ edi + 0x62e37c74 ]
pop eax
inc ebx
mov esi 0x4550d7d4
cwde
cmpsd [ esi ] [ edi ]
enter 0x5aa9 0x60
inc ecx
lea esp [ edx - 0x20f8049c ]
xchg esi eax
sbb al cl
inc esi
fmul st6
nop
out 0x88 eax
arpl [ esi ] bp
add al 0x69
add al 0x63
call sub_276950
sub ebx edx
pushad
ror [ esi + 0x37cb0035 ] 0x1
or al bl
lodsd [ esi ]
xchg ecx eax
cli
push edx
std
mov ch 0x7
and cl [ esi ]
pop esi
adc eax 0x607ea1f
daa
jl rwxdata
loope rwxdata
dec ebp
les ebx [ edx ]
mov esp 0xebac36db
insb
mov [ 0x711888da ] al
lodsd [ esi ]
bswap esp
xlat
sub bl [ ecx - 0x78 ]
js rwxdata
add ch [ ecx ]
bound ebx [ esi + ebp * 4 - 0x30 ]
0xeaa4
int3
xchg esp eax
imul esi [ ebx ] 0x15
les edx [ edi + 0x6ccd2c2b ]
sub [ edx + 0x2816a8a4 ] eax
dec ebx
rol [ ecx - 0x3f01d7b5 ] 0xbe
mov al [ 0xfffffffff1117ca8 ]
and [ esp ] al
pop es
fstp [ esi + 0x35 ]
test [ edx + ebp * 2 + 0x7 ] ecx
cmp al 0x7a
inc edx
pop ecx
rcl [ eax + 0x289049f9 ] cl
out dx eax
add esp [ edx + 0x1 ]
fnstenv [ ebp - 0x764ad23f ]
sub_240800
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
neg bl
clc
bts di 0xf
test ah al
mov ebx eax
pushad
adc cx di
adc di sp
mov edi eax
bswap cx
mov ecx 0x104
pushfd
xor al al
clc
jmp rwxdata
pushfd
jmp rwxdata
[ edi ]
jmp rwxdata
mov [ esp + 0x4 ] ah
jmp rwxdata
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
clc
push ebp
shrd cx di 0xd
mov ecx edi
shld si bx cl
movzx si al
not esi
bsf si si
sub ecx ebx
inc esi
lea esi [ esp + 0x4 ]
test ecx 0xd48838a3
cmp ecx esp
push edx
sub edi 0x4
push 0x8a251ae6
push [ edi ]
pop [ esp + 0x8 ]
stc
push ecx
mov [ esp ] 0xcf
cmc
cmp edi ebx
call sub_23f6af
sub_240833
push edi
lea esp [ esp + 0x28 ]
je rwxdata
shl bh 0x7
bt dx bp
shr bh cl
mov bx [ esi ]
stc
and ebx 0xfff
pushfd
clc
cmp ch ah
add [ ebx + edi ] edx
add esp 0x4
push ebx
push 0xd0d4fdc
mov [ esp ] 0x9e
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_24093c
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
jae rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
or ebx 0x8b3aca29
rol di 0x8
shrd ebx esi 0x3
mov ebx eax
sar cl 0x5
call sub_240d16
clc
pushfd
call sub_2763e5
sub_240969
lea esp [ esp + 0x10 ]
jae rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
pushad
mov [ esp + 0x8 ] 0xb2
lea esp [ esp + 0x20 ]
jmp rwxdata
mov edi 0xfe5606ab
mov edi [ edx + 0x1c ]
clc
jmp rwxdata
test ebx ecx
test bh 0x94
add edi eax
pushfd
push [ esp ]
mov edi [ edi + ecx * 4 ]
pushfd
clc
pushad
cmp ah ah
test edi edi
mov [ esp + 0x8 ] cl
call sub_23f43a
sub_2409b7
pushfd
lea esi [ edx + 0x4afa6d68 ]
mov edi [ esp + 0x30 ]
mov [ esp ] di
call sub_241a32
push ebx
pushfd
mov [ esp + 0x4 ] eax
push [ esp ]
pushfd
pushad
lodsb [ esi ]
stc
bt ax cx
rol al 0x6
push [ esp ]
jmp rwxdata
clc
sub al 0x6f
clc
clc
bt ecx 0x17
bt edx 0x1c
rol al 0x7
call sub_2709ef
sub_240ac0
lea eax [ ebp - 0x8 ]
pushfd
xchg [ esp + 0xc ] eax
bswap ax
push [ ebp - 0x4 ]
pop [ esp + 0x8 ]
pushad
mov [ esp ] al
movzx eax al
mov [ esp + 0x24 ] ebx
lea eax [ eax * 2 + 0x4538868f ]
cwde
push [ esp ]
mov [ esp + 0x24 ] 0xb
call sub_275dd0
sub_240c71
lea esp [ esp + 0x30 ]
ja rwxdata
call sub_24057e
cmc
pushfd
mov [ esp ] 0xc4
jmp rwxdata
imul edx edx 0xa
bt cx bp
bt ebx 0x6
add edx eax
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
mov al cl
sbb al cl
bt sp 0x8
add edi 0x1
shl al cl
shr al cl
pushad
mov al [ edi ]
pushfd
pushad
test al al
pushfd
mov [ esp + 0x4 ] 0x27
lea esp [ esp + 0x48 ]
je rwxdata
bswap di
movsx di dl
mov di 0x75bb
jmp rwxdata
bt edi edi
push edi
cmp bh dl
sub al 0x30
pushad
cmp al 0x9
pushfd
push 0x6233fbe2
call sub_240c71
mov edi edx
movzx cx bl
mov ecx edi
push ecx
mov al [ ecx ]
mov [ esp ] cx
pushad
mov ah al
pushad
mov [ esp ] cl
dec al
pushfd
ror al 0x7
mov [ esp ] 0x73
cmp dl 0x47
bt edi edi
add al 0x6f
push 0x18b64918
bt si 0x2
jmp rwxdata
bt ax bp
ror al 0x6
mov [ esp + 0x4 ] 0x33
mov [ ecx ] al
pushfd
mov [ esp ] 0x89
bt bx sp
cmp bx si
add ecx 0x1
bt dx 0xb
test ah ah
jmp rwxdata
lea esp [ esp + 0x50 ]
jne rwxdata
jmp rwxdata
pushfd
pushfd
push 0x73cc8b40
mov [ esp + 0x8 ] edi
pushfd
mov [ esp + 0x8 ] ebx
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_26ccd6
sub_240cb7
push 0xd1e9fa4e
lea esp [ esp + 0x4c ]
jbe rwxdata
test ecx 0x30be9b83
stc
clc
clc
sub ecx [ edx + 0x10 ]
cmp ah ch
test bl bh
pushfd
pushfd
cmp ecx [ edx + 0x14 ]
push 0xcffb2c54
mov [ esp + 0x8 ] 0x256a
call sub_240969
rcr di 0x9
movsx di dl
mov edi [ edx + 0x24 ]
bsr ebx ecx
setg cl
bt ebx 0x1f
bsf cx di
add edi eax
pushfd
pop ebx
call sub_273d15
sub_240d5a
push ebp
movzx ecx [ edi + ecx * 2 ]
stc
add di ax
add di cx
mov edi [ edx + 0x1c ]
push 0x7b8ec40c
mov [ esp ] dh
add edi eax
test cx 0xc094
mov edi [ edi + ecx * 4 ]
cmc
clc
clc
test edi edi
pushfd
lea esp [ esp + 0x3c ]
je rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
call j_sub_278687
sub_240e45
lea esp [ esp + 0xc ]
jne rwxdata
push 0xcd492531
push [ esp + 0x4 ]
retn 0x8
call j_sub_26cfd2
mov [ esp + 0x4 ] ah
jmp rwxdata
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
clc
push ebp
shrd cx di 0xd
mov ecx edi
shld si bx cl
movzx si al
not esi
bsf si si
sub ecx ebx
inc esi
lea esi [ esp + 0x4 ]
test ecx 0xd48838a3
cmp ecx esp
push edx
sub edi 0x4
push 0x8a251ae6
push [ edi ]
pop [ esp + 0x8 ]
stc
push ecx
mov [ esp ] 0xcf
cmc
cmp edi ebx
call sub_23f6af
sub_240f00
pushfd
lea esp [ esp + 0xc ]
call j_sub_277134
push 0x3c1eb38d
lea esp [ esp + 0x4 ]
jae rwxdata
pushfd
xchg bl al
not al
pushad
lodsb [ esi ]
sbb bl bl
jmp rwxdata
cmp ah cl
cmc
xor ecx ecx
call j_sub_2765be
shr bl 0x7
neg al
call sub_241be5
sub_2411d0
pushfd
pushad
push [ esp ]
lea esp [ esp + 0x2c ]
jne rwxdata
push 0xb8d9604f
pushfd
call sub_274563
pushad
shrd di bx cl
bt si dx
mov edi [ edx + 0x24 ]
test ah dh
pushfd
bt esp ebx
push [ esp ]
add edi eax
cmp cx 0x3b6e
bt bx 0x8
movzx ecx [ edi + ecx * 2 ]
neg edi
call sub_274861
sub_241553
mov [ esp + 0x1c ] eax
jmp rwxdata
lodsb [ esi ]
bt edi ecx
stc
cmc
rol al 0x6
push edx
bt ax 0x6
sub al 0x6f
pushad
clc
mov [ esp + 0x8 ] 0xe36b
stc
rol al 0x7
push [ esp ]
inc al
stc
push [ esp ]
test cl 0x2c
sub esp 0xffffffb8
jl rwxdata
jmp rwxdata
cmp al [ edi ]
lahf
cwde
push ebx
lahf
lea edi [ edi + 0x1 ]
pushad
push esp
mov eax [ esp + 0x28 ]
pushfd
lea esp [ esp + 0x30 ]
ja rwxdata
cmc
push ebp
cmp al [ edi ]
lea eax [ eax + 0x3e47386 ]
not al
pop eax
lea edi [ edi + 0x1 ]
setl al
call sub_275300
pushad
jmp sub_26d36b
pushad
push esp
mov [ esp + 0x4 ] 0x38
lea esp [ esp + 0x24 ]
jb rwxdata
stc
clc
push 0xdf81cdfc
cmp ecx [ ebp - 0x8 ]
pushfd
push edx
lea esp [ esp + 0xc ]
jae rwxdata
pushad
pushfd
cmp [ edi - 0x1 ] 0x0
call sub_26e948
pushad
lea esp [ esp + 0x20 ]
jbe rwxdata
jbe rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
adc si ax
push 0x77e5f851
sub ecx 0x1
adc di cx
mov [ ebp - 0x4 ] ecx
lea edi [ ebp - 0xfbf5a28 ]
mov ecx [ ebp - 0x8 ]
shl si 0x1
rcr di 0xd
jmp sub_26eb32
and di 0x5cd1
rcr di 0x4
sub ecx 0x1
bswap si
shr di 0x9
btc di 0x6
mov [ ebp - 0x4 ] ecx
bsr cx bx
shl si 0x5
not cl
bts cx si
mov ecx [ ebp - 0x8 ]
neg di
xor di 0xa55b
shrd si bp 0x1
add ecx [ ebp - 0x4 ]
bswap di
jmp rwxdata
dec di
sar si 0xd
shr ecx 0x1
test bh cl
btr si ax
ror di cl
ror di 0xc
mov edi [ ebx + ecx * 4 ]
cmp bx 0x9c6f
or si bp
cmc
add edi eax
pushad
movsx esi dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x20 ]
push 0xb8d9604f
pushfd
call sub_274563
sub_241767
adc al 0xb6
rcr al cl
mov al [ edi ]
clc
clc
cmp al 0x41
pushad
push [ esp ]
push [ esp ]
lea esp [ esp + 0x28 ]
jb rwxdata
shl ah cl
and ah 0x2c
add ah 0x4
pushad
mov ah [ esi ]
stc
jmp rwxdata
test ax cx
pushfd
cmp al 0x5a
pushfd
push eax
lea esp [ esp + 0xc ]
ja rwxdata
cmp ah 0x41
pushfd
pushfd
push 0x767f1d36
lea esp [ esp + 0x2c ]
jb rwxdata
rol ah 0x1
add al 0x20
test di dx
cmp si 0x6af8
cmp dl bl
or al al
jg rwxdata
cmp bp 0x4e31
pushfd
mov [ esp ] 0x75fe
cmp ah 0x5a
push [ esp ]
jmp rwxdata
jmp sub_2784c5
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
je rwxdata
lea esp [ esp + 0x8 ]
ja rwxdata
stc
push 0xc8e75c9e
or ah ah
push esp
lea esp [ esp + 0x8 ]
je rwxdata
push 0x1c9246ef
mov [ esp ] bl
cmc
pushfd
cmp al ah
call sub_240e45
clc
call sub_275bcf
mov [ esp ] ah
pushad
jmp rwxdata
push 0xcd492531
push [ esp + 0x4 ]
retn 0x8
cmc
cmp ah 0x2e
lea esp [ esp + 0x24 ]
je rwxdata
jmp rwxdata
test sp dx
clc
stc
push ebp
cmp ebx 0x3
pushfd
call sub_27717f
mov bx [ esi ]
clc
stc
clc
and ebx 0xfff
pushad
cmp ax cx
mov [ esp ] 0x13
bt sp ax
add [ ebx + edi ] dx
pushad
push edx
mov [ esp ] 0xd7
mov [ esp ] ax
lea esp [ esp + 0x44 ]
jmp rwxdata
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_24189b
pushad
mov [ esp + 0x10 ] esi
lea esp [ esp + 0x2c ]
ja rwxdata
jmp rwxdata
je rwxdata
pushad
pushad
pushfd
lea esp [ esp + 0x44 ]
je rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
pushad
bt ax cx
add edx eax
rcl ch cl
sbb ecx 0xd6eb89fa
pop ecx
btc cx 0xc
mov ecx [ esi + 0x7c ]
pushad
clc
add ecx edx
stc
bt esi ebx
jmp rwxdata
lea ecx [ eax + 0x443ffb13 ]
rcr cx 0x3
rcr cl cl
not ecx
add edx eax
sub cx sp
movzx cx al
mov ecx [ esi + 0x7c ]
jmp sub_2784df
stc
mov [ ebp - 0x10 ] ecx
add esp 0x3c
jo rwxdata
inc ecx
mov ecx [ ebp + 0xc ]
stc
test ah dh
call sub_274482
mov ecx [ ebp + 0xc ]
pushad
stc
pushad
push ebp
cmp ecx 0xffff
mov [ esp ] 0xb77a6d41
call sub_240cb7
sub_241be5
pushfd
push 0x9729fc5
dec al
clc
sbb bl dh
xor al 0xcc
shr bl 0x1
dec bl
sub al 0xde
mov [ esp + 0x1c ] ah
mov bl 0x28
pushfd
mov [ esp ] cl
stosb [ edi ]
push [ esp + 0x4 ]
call sub_252f87
sub_241d2b
cmp si 0x6ee
cmp al ah
call sub_275052
cmc
leave
push ss
inc ebp
in al dx
in al dx
xchg esi eax
sar [ 0x4c9233d7 ] 0x1
mov al 0xcc
pop esp
shl [ ecx ] 0xcc
mov eax [ 0xffffffffb5dd255c ]
mov bh 0x55
sub [ ebp - 0x47 ] ebx
xchg ebp eax
sub eax 0x1195bd5d
pop ebp
mov esp 0xa05d1595
xchg ebp eax
sbb [ esp - 0x22 ] ebx
out dx al
and cl ah
pop ebp
jno rwxdata
std
sbb [ ebx - 0x24 ] edi
jmp 0xdf112c9
sub_2520fa
xchg [ esp + 0x2c ] eax
push [ esp + 0x4 ]
mov [ esp + 0x2c ] 0xb
movsx eax cl
cwde
lea eax [ rwxdata ]
push edx
pushfd
mov [ esp + 0x30 ] rwxdata
call j_sub_275d9e
jpe rwxdata
jpe rwxdata
dec ecx
daa
xchg ecx eax
add [ ebp + 0x61 ] bh
xchg ecx eax
enter 0x38c3 0x72
adc eax 0x44a1f16d
cmpsb [ esi ] [ edi ]
push ecx
sbb ebp eax
or eax 0x3aa8cda1
sbb eax 0x6e40112d
and [ edi ] cl
xchg esi eax
into
ja rwxdata
outsd
mov esi 0x2b55a269
cwde
dec edi
sbb [ ebx ] 0x55
xor [ esi ] bl
and eax 0xea3a245
cmpsd [ esi ] [ edi ]
hlt
test [ ebp - 0x5d ] cl
cmp eax 0x9744d10
push esp
dec esp
inc edi
push ecx
cld
mov dh 0x9b
add eax 0x65986528
or eax 0x9439bf28
sbb al 0xff
dec edx
or dh dl
xchg [ ebx ] ebx
mov [ 0xffffffffa3899147 ] al
push 0xffffff8b
fdivr [ ebp - 0x4f ]
sahf
cmp [ edi - 0x6a ] dh
inc esi
mov ebp 0xb0113e00
cmp bl al
js rwxdata
mov bh 0x37
mov eax [ 0xffffffff9831d360 ]
mov edx 0xa8f1c284
cmp [ esi ] ebp
sub_25254f
bt sp dx
cmp ebx 0x2
jmp rwxdata
mov [ esp ] ah
pushad
jmp rwxdata
lea esp [ esp + 0x24 ]
je rwxdata
jmp rwxdata
test sp dx
clc
stc
push ebp
cmp ebx 0x3
pushfd
call sub_27717f
mov bx [ esi ]
clc
stc
clc
and ebx 0xfff
pushad
cmp ax cx
mov [ esp ] 0x13
bt sp ax
add [ ebx + edi ] dx
pushad
push edx
mov [ esp ] 0xd7
mov [ esp ] ax
lea esp [ esp + 0x44 ]
jmp rwxdata
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_25255b
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x2c ]
jne rwxdata
call sub_24057e
mov al bl
pushad
mov [ edi - 0x1 ] 0x0
movzx ax bl
movzx ax dl
cwde
mov al cl
mov [ esp + 0x1c ] ebx
push 0x1b6f8a6d
lea eax [ rwxdata ]
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp ] 0x1b942d5c
mov [ esp + 0x20 ] rwxdata
pushfd
call sub_252d82
sub_252853
mov esi [ esp + 0x14 ]
pushfd
pushad
bswap bx
not bl
mov ebx [ esp + 0x3c ]
pushfd
push 0x825a12d3
lea esp [ esp + 0x48 ]
jbe rwxdata
call sub_27047e
add [ eax ] esp
push 0xffffffe0
std
dec esp
sbb ebx ecx
shr [ ebx + 0x57 ] 0x1
ja rwxdata
pushfd
mov esp ebp
not bp
jo rwxdata
add [ ebp + ecx * 4 + 0xf042464 ] bl
sahf
xor bh [ ecx + 0x31129d76 ]
into
xor ebx ebp
and bl dl
mov ebp 0x113ee627
dec esi
adc [ esi - 0x5f ] edi
outsb
ror [ ecx ] 0x7e
push eax
dec edx
jmp 0x5a32c644
pushad
movsx ebp cl
lea ebp [ 0xffffffff925244b7 ]
mov ebp [ esp + 0x20 ]
mov [ esp ] eax
push [ esp + 0x24 ]
retn 0x2c
pop ebp
push ebp
pushfd
pushad
mov [ esp + 0x4 ] 0x9005
push [ esp + 0x28 ]
retn 0x30
_start
pushfd
mov [ esp ] 0xbb1ba6d6
jmp rwxdata
call sub_270095
lea esp [ esp + 0x8 ]
je rwxdata
bswap di
movsx di dl
mov di 0x75bb
jmp rwxdata
cmc
sub al 0x30
pushad
test ah cl
cmp al 0x9
call sub_240725
mov edi edx
movzx cx bl
mov ecx edi
push ecx
mov al [ ecx ]
mov [ esp ] cx
pushad
mov ah al
pushad
mov [ esp ] cl
dec al
pushfd
ror al 0x7
mov [ esp ] 0x73
cmp dl 0x47
bt edi edi
add al 0x6f
push 0x18b64918
bt si 0x2
jmp rwxdata
bt ax bp
ror al 0x6
mov [ esp + 0x4 ] 0x33
mov [ ecx ] al
pushfd
mov [ esp ] 0x89
bt bx sp
cmp bx si
add ecx 0x1
bt dx 0xb
test ah ah
jmp rwxdata
lea esp [ esp + 0x50 ]
jne rwxdata
jmp rwxdata
pushfd
pushfd
push 0x73cc8b40
mov [ esp + 0x8 ] edi
pushfd
mov [ esp + 0x8 ] ebx
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_26ccd6
sub_252a6f
push ebx
push [ esp ]
pushfd
lea esp [ esp + 0x18 ]
jbe rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
shr si cl
push ecx
sub ecx 0x1
bt cx bp
xchg edi esi
shl di 0xd
mov [ ebp - 0x4 ] ecx
pushfd
bswap ecx
stc
neg edi
mov ecx [ ebp - 0x8 ]
stc
add ecx [ ebp - 0x4 ]
rcl di cl
jmp rwxdata
shr ecx 0x1
dec di
mov edi [ ebx + ecx * 4 ]
pushfd
ror si cl
add edi eax
pop esi
mov esi [ ebp + 0xc ]
pushfd
call sub_2750e1
sub_252ac9
not bl
mov [ esp ] 0xc
inc ecx
and bl 0xe4
xchg ebp eax
and al dl
daa
rol al 0x4
sar bl 0x5
mov eax ebp
rcl bl cl
pushfd
rcr bl 0x6
mov bl 0x1
call sub_26eb95
sub_252cc2
push eax
pushfd
lea esp [ esp + 0x14 ]
je rwxdata
setg bh
jmp rwxdata
xor eax esp
pushfd
and cl ah
bsr cx si
xor ebx ebx
cwde
pushad
rol al 0x6
mov [ ebp - 0x4 ] ebx
bt edi 0x17
mov eax edx
rcr cx 0xe
cmp bh 0x3b
rcr ch cl
shr eax 0x10
sub esp 0xffffffdc
bsr cx dx
movzx ecx bl
mov ecx [ esi + 0x4 ]
clc
or ecx ecx
push 0x74776d8
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
movsx esi al
pop esi
push esp
xchg ecx edi
lea esp [ esp + 0x4 ]
jpe rwxdata
or di si
and bh 0x12
pushfd
add [ ebp - 0x4 ] ecx
bt di 0x1
sub edi ebp
xor di si
xadd di bx
sub ecx 0x8
btc bx ax
btc bx ax
not edi
neg bl
shr ecx 0x1
test dl 0xf8
adc bh cl
mov edi [ esi ]
movzx bx cl
shl bh cl
add edi [ ebp + 0x10 ]
add bh bl
call sub_26cbc7
jo rwxdata
pop edi
push eax
mov ebx [ esp + 0x4 ]
pushad
setno cl
mov ecx [ esp + 0x28 ]
jmp rwxdata
jmp sub_23f53d
not di
pop edi
not bl
call sub_27847e
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
mov esp ebp
pushad
call sub_240d36
call 0xffffffffc96ba9d3
jl rwxdata
shld bx si 0x1
push eax
rcl bx 0x2
setbe bl
mov bx [ esi ]
call sub_27864f
pushfd
cmp ebx 0x2
pushfd
jmp rwxdata
pop esi
inc ebp
int1
dec eax
and cl [ ecx - 0x33 ]
loope rwxdata
insb
mov ah 0xa9
mov esi 0x27bd304e
inc [ ecx + edx ]
mov esi 0xab76f3d6
push esi
into
pop ebp
aaa
mov bh bl
pop esp
and al 0x7
add ebx [ eax + 0x42127e0 ]
adc esp [ edi ]
mov es bx
imul esp [ ebx ] 0x4b
rcr [ eax - 0x4cf47c62 ] 0x1
mov [ esp + 0x4 ] 0xa
lea esp [ esp + 0x8 ]
je rwxdata
out dx eax
0x6855
jmp 0x608884b5
jmp rwxdata
jmp rwxdata
mov bx [ esi ]
clc
stc
clc
and ebx 0xfff
pushad
cmp ax cx
mov [ esp ] 0x13
bt sp ax
add [ ebx + edi ] dx
pushad
push edx
mov [ esp ] 0xd7
mov [ esp ] ax
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp ebx 0x3
jmp sub_26e907
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_253582
pushfd
mov [ esp + 0x20 ] 0x8c66a612
push 0xfb3c8160
pushad
push [ esp + 0xc ]
push [ esp ]
lea esp [ esp + 0x4c ]
jmp rwxdata
jmp rwxdata
push ecx
mov [ esp ] edx
pushfd
mov [ esp ] dh
pushfd
mov [ esp + 0x4 ] edi
call sub_4e74fc
call sub_4e8e9e
sub_2535b0
mov [ esp + 0x20 ] esi
shl si cl
mov esi edi
mov [ esp + 0xc ] bl
sub esi eax
mov [ esp ] 0xf1230c52
[ edi ] [ esi ]
pushad
mov [ esp + 0x4 ] sp
pushfd
not si
mov esi [ esp + 0x44 ]
mov [ esp + 0x8 ] 0x80
mov [ esp ] dx
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
pushfd
call sub_240f00
sub_25370d
cmp dl al
bt esp esp
xor al 0xcc
cmc
cmp cl dl
cmp al 0x5a
stc
sub al 0xde
pushad
cmc
push 0x29492b2f
shr eax 0x1
jmp rwxdata
call sub_277f52
sub_253a1a
sub esi eax
pushfd
pushfd
[ edi ] [ esi ]
jmp rwxdata
movsx si bl
movzx si dl
mov esi [ esp + 0x34 ]
mov [ esp + 0x4 ] 0x7547
mov [ esp ] eax
push 0x769b1f37
push [ esp ]
lea esp [ esp + 0x40 ]
jmp rwxdata
pushfd
call sub_240f00
sub_26ccd6
sbb eax eax
stc
push ebp
and bp si
mov ebp esp
aaa
sub esp 0x18
sub ah ch
cmp dx dx
push esi
lahf
sar ah cl
test dl ah
push edi
rcr ax cl
setae ah
shl eax cl
push ebx
rcr eax 0x2
push edx
pushad
rol ah cl
pushfd
call sub_23fcd3
sub_26cd17
lea esp [ esp + 0x2c ]
je rwxdata
call sub_26e8e1
not esi
mov esi eax
lea eax [ edi - 0x35d9055 ]
not ah
push ebx
cwde
lea eax [ LocalFree@IAT ]
jmp rwxdata
push rwxdata
pushfd
pushfd
pushfd
push [ eax ]
pop [ esp + 0x8 ]
mov [ esp ] ebx
push edi
pushfd
push 0xd3524b6b
push [ esp + 0x14 ]
retn 0x18
sub_26cece
pushfd
lodsb [ esi ]
mov [ esp + 0x4 ] cl
cmc
push edx
rol al 0x6
test al 0x1e
cmc
mov [ esp + 0x8 ] 0xabbc
pushfd
sub al 0x6f
push [ esp + 0x8 ]
mov [ esp + 0x4 ] 0xcf
cmc
rol al 0x7
push 0x15887fbf
pushfd
jmp rwxdata
push [ esp + 0x8 ]
inc al
bt bp si
cmp al [ edi ]
sets al
lahf
cwde
not ax
lea edi [ edi + 0x1 ]
movsx ax al
not ah
pop eax
mov [ esp + 0x8 ] 0x31
mov eax [ esp + 0x3c ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] al
lea esp [ esp + 0x40 ]
ja rwxdata
pushad
jmp sub_26d36b
push ebp
jmp rwxdata
lea esp [ esp + 0x4 ]
jb rwxdata
stc
clc
push 0xdf81cdfc
cmp ecx [ ebp - 0x8 ]
pushfd
push edx
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
cmp [ edi - 0x1 ] 0x0
push 0x5d4654b7
lea esp [ esp + 0x28 ]
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jbe rwxdata
jbe rwxdata
push 0xb8d9604f
pushfd
call sub_274563
rol di cl
bt si di
rcl edi cl
pushfd
mov edi [ edx + 0x24 ]
cmc
call j_sub_2763cb
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
adc si ax
push 0x77e5f851
sub ecx 0x1
adc di cx
mov [ ebp - 0x4 ] ecx
lea edi [ ebp - 0xfbf5a28 ]
mov ecx [ ebp - 0x8 ]
shl si 0x1
rcr di 0xd
jmp sub_26eb32
and di 0x5cd1
rcr di 0x4
sub ecx 0x1
bswap si
shr di 0x9
btc di 0x6
mov [ ebp - 0x4 ] ecx
bsr cx bx
shl si 0x5
not cl
bts cx si
mov ecx [ ebp - 0x8 ]
neg di
xor di 0xa55b
shrd si bp 0x1
add ecx [ ebp - 0x4 ]
bswap di
jmp rwxdata
dec di
sar si 0xd
shr ecx 0x1
test bh cl
btr si ax
ror di cl
ror di 0xc
mov edi [ ebx + ecx * 4 ]
cmp bx 0x9c6f
or si bp
cmc
add edi eax
pushad
movsx esi dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x20 ]
sub_26d17d
mov [ esp ] 0xd4
lea esp [ esp + 0x28 ]
je rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
stc
stc
add eax edi
pushad
cmp eax edx
pushad
mov [ esp + 0x8 ] al
push [ esp ]
mov [ esp + 0x4 ] ax
lea esp [ esp + 0x44 ]
jb rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
cmp bh 0x7e
jmp rwxdata
test edi esi
cmp eax [ ebp - 0x10 ]
call sub_240800
sub_26d36b
cmp ecx [ ebp - 0x4 ]
push ebx
lea esp [ esp + 0x24 ]
jae rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
stc
bt sp 0xd
test cx 0xc89c
push 0xeb7e213f
add ecx 0x1
pushfd
jmp rwxdata
pushad
mov [ ebp - 0x8 ] ecx
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
bsr cx bx
shl si 0x5
not cl
bts cx si
mov ecx [ ebp - 0x8 ]
neg di
xor di 0xa55b
shrd si bp 0x1
add ecx [ ebp - 0x4 ]
bswap di
jmp rwxdata
dec di
sar si 0xd
shr ecx 0x1
test bh cl
btr si ax
ror di cl
ror di 0xc
mov edi [ ebx + ecx * 4 ]
cmp bx 0x9c6f
or si bp
cmc
add edi eax
pushad
movsx esi dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x20 ]
push 0xb8d9604f
pushfd
call sub_274563
sub_26e1e7
pushfd
inc al
cmp bp 0xbef
cmp al [ edi ]
not ah
movzx ax al
mov [ esp ] 0xaa
lea edi [ edi + 0x1 ]
mov ax sp
not ax
pushad
push 0xa5b997bf
mov eax [ esp + 0x40 ]
push 0xfa504076
call sub_26e77e
sub_26e8f1
lea esp [ esp + 0x8 ]
je rwxdata
shld bx si 0x1
push eax
rcl bx 0x2
setbe bl
mov bx [ esi ]
call sub_27864f
cmc
test ah al
cmc
cmp ebx 0x2
jmp rwxdata
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
jmp rwxdata
stc
clc
push ebx
cmp ebx 0x3
pushfd
call sub_2765f5
mov bx [ esi ]
clc
stc
clc
and ebx 0xfff
pushad
cmp ax cx
mov [ esp ] 0x13
bt sp ax
add [ ebx + edi ] dx
pushad
push edx
mov [ esp ] 0xd7
mov [ esp ] ax
lea esp [ esp + 0x44 ]
jmp rwxdata
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_26e948
pushfd
lea esp [ esp + 0x2c ]
jne rwxdata
push 0xb8d9604f
pushfd
call sub_274563
bsr di di
and edi ebx
mov edi [ edx + 0x24 ]
pushfd
pushfd
push [ esp + 0x4 ]
push edx
add edi eax
cmc
jmp rwxdata
movzx ecx [ edi + ecx * 2 ]
mov di 0xac77
and di sp
mov edi [ edx + 0x1c ]
cmc
jmp rwxdata
test dx 0x59aa
add edi eax
jmp rwxdata
clc
call sub_2417a9
sub_26e989
shr ebx 0xc
mov [ esp + 0x8 ] cl
stc
cmp ebx 0x1
pushfd
pushfd
push 0x22e87451
lea esp [ esp + 0x30 ]
je rwxdata
shld bx si 0x1
push eax
rcl bx 0x2
setbe bl
mov bx [ esi ]
call sub_27864f
stc
call sub_25254f
sub_26eb32
push edi
add ecx [ ebp - 0x4 ]
xchg di si
dec si
shr ecx 0x1
cmc
cmc
mov edi [ ebx + ecx * 4 ]
shld si di cl
add edi eax
not si
push esp
pushfd
mov esi [ ebp + 0xc ]
push esi
call sub_275493
sub_26eb57
lea esp [ esp + 0x24 ]
jb rwxdata
stc
clc
push 0xdf81cdfc
cmp ecx [ ebp - 0x8 ]
pushfd
push edx
lea esp [ esp + 0xc ]
jae rwxdata
cmc
bt bx dx
pushfd
cmp [ edi - 0x1 ] 0x0
push edi
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jbe rwxdata
jbe rwxdata
push 0xb8d9604f
pushfd
call sub_274563
shl di 0x1
shr di cl
dec edi
rol di 0x4
mov edi [ edx + 0x24 ]
call sub_26e9e5
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
adc si ax
push 0x77e5f851
sub ecx 0x1
adc di cx
mov [ ebp - 0x4 ] ecx
lea edi [ ebp - 0xfbf5a28 ]
mov ecx [ ebp - 0x8 ]
shl si 0x1
rcr di 0xd
jmp sub_26eb32
and di 0x5cd1
rcr di 0x4
sub ecx 0x1
bswap si
shr di 0x9
btc di 0x6
mov [ ebp - 0x4 ] ecx
bsr cx bx
shl si 0x5
not cl
bts cx si
mov ecx [ ebp - 0x8 ]
neg di
xor di 0xa55b
shrd si bp 0x1
add ecx [ ebp - 0x4 ]
bswap di
jmp rwxdata
dec di
sar si 0xd
shr ecx 0x1
test bh cl
btr si ax
ror di cl
ror di 0xc
mov edi [ ebx + ecx * 4 ]
cmp bx 0x9c6f
or si bp
cmc
add edi eax
pushad
movsx esi dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x20 ]
sub_26eb95
pushfd
pushfd
xchg [ esp + 0x1c ] esi
jmp rwxdata
bt dx 0x1
shrd si sp 0xc
pop esi
mov esi edi
stc
cmc
mov [ esp ] 0xece2
sub esi eax
mov [ esp ] dh
pushad
[ edi ] [ esi ]
push 0xefb14538
lea esi [ eax + 0x3321432e ]
jmp rwxdata
mov esi [ esp + 0x3c ]
pushfd
mov [ esp ] 0xb7
push eax
lea esp [ esp + 0x48 ]
jmp rwxdata
pushfd
call sub_240f00
sub_26f161
bt bx 0xa
imul edx edx 0xa
cmc
bt sp si
add edx eax
mov [ esp ] bp
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
mov al cl
sbb al cl
bt sp 0x8
add edi 0x1
shl al cl
shr al cl
pushad
mov al [ edi ]
pushfd
pushad
test al al
pushfd
mov [ esp + 0x4 ] 0x27
lea esp [ esp + 0x48 ]
je rwxdata
bswap di
movsx di dl
mov di 0x75bb
jmp rwxdata
bt edi edi
push edi
cmp bh dl
sub al 0x30
pushad
cmp al 0x9
pushfd
push 0x6233fbe2
call sub_240c71
mov edi edx
movzx cx bl
mov ecx edi
push ecx
mov al [ ecx ]
mov [ esp ] cx
pushad
mov ah al
pushad
mov [ esp ] cl
dec al
pushfd
ror al 0x7
mov [ esp ] 0x73
cmp dl 0x47
bt edi edi
add al 0x6f
push 0x18b64918
bt si 0x2
jmp rwxdata
bt ax bp
ror al 0x6
mov [ esp + 0x4 ] 0x33
mov [ ecx ] al
pushfd
mov [ esp ] 0x89
bt bx sp
cmp bx si
add ecx 0x1
bt dx 0xb
test ah ah
jmp rwxdata
lea esp [ esp + 0x50 ]
jne rwxdata
jmp rwxdata
pushfd
pushfd
push 0x73cc8b40
mov [ esp + 0x8 ] edi
pushfd
mov [ esp + 0x8 ] ebx
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_26ccd6
sub_26f845
lea esp [ esp + 0x24 ]
je rwxdata
jmp sub_2730b3
jae rwxdata
je rwxdata
add edx 0x11c
pushad
pushfd
pushad
lea esp [ esp + 0x44 ]
jmp sub_273998
pushad
stc
jmp rwxdata
bt dx di
clc
add edx 0x11c
push 0x3a28461d
lea esp [ esp + 0x4 ]
jmp sub_273998
jmp rwxdata
add edx 0x11c
pushfd
lea esp [ esp + 0x24 ]
jmp sub_273998
sub_26fa83
[ edi ]
pushad
pushfd
mov [ esp + 0x4 ] si
lea esp [ esp + 0x2c ]
jne rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
rcr si 0x1
add esi 0x295e8468
mov ecx edi
mov si sp
shrd si dx 0x5
dec si
add si dx
sub ecx ebx
bsf si dx
and si sp
mov esi esp
push ebx
test ah ch
pushfd
sub edi 0x4
bt dx cx
mov [ esp + 0x4 ] ebp
push [ edi ]
pop [ esp + 0x4 ]
clc
cmp edi ebx
call sub_23f403
ror [ edx + 0xb ] 0xf4
imul ebx [ eax + 0x43 ] 0xcbcafdd2
pop ecx
and eax 0x2ff52e76
jb rwxdata
fdivr [ ebx ]
mov [ 0x16e93b26 ] eax
xlat
test al 0x13
stosb [ edi ]
mov ch 0xde
inc esp
sbb edx [ edx ]
mov esp 0xcd916d56
sbb ebp ecx
mov [ 0x43dbcb26 ] al
cmovg esi [ edi + 0x27 ]
pop ebx
mov bl 0xeb
adc edx [ esi - 0x67e5ca27 ]
rol ah 0xb2
add [ edx ] 0xff258c1b
scasb [ edi ]
sub_26fd3c
lea esp [ esp + 0x24 ]
je rwxdata
setg bh
jmp rwxdata
shr di cl
bsf bx bp
add [ ebp - 0x4 ] ecx
rcl di cl
xor di 0x36ff
sub ecx 0x8
sar bl cl
shl di 0xe
shr ecx 0x1
btc bx 0x7
shr bl cl
ror di cl
mov edi [ esi ]
clc
add edi [ ebp + 0x10 ]
call sub_2752dd
movsx esi al
pop esi
push esp
xchg ecx edi
lea esp [ esp + 0x4 ]
jpe rwxdata
jo rwxdata
pop edi
push eax
mov ebx [ esp + 0x4 ]
pushad
setno cl
mov ecx [ esp + 0x28 ]
jmp rwxdata
jmp sub_23f53d
not di
pop edi
not bl
call sub_27847e
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
mov esp ebp
pushad
call sub_240d36
call 0xffffffffc96ba9d3
jl rwxdata
shld bx si 0x1
push eax
rcl bx 0x2
setbe bl
mov bx [ esi ]
call sub_27864f
pushfd
cmp ebx 0x2
pushfd
jmp rwxdata
pop esi
inc ebp
int1
dec eax
and cl [ ecx - 0x33 ]
loope rwxdata
insb
mov ah 0xa9
mov esi 0x27bd304e
inc [ ecx + edx ]
mov esi 0xab76f3d6
push esi
into
pop ebp
aaa
mov bh bl
pop esp
and al 0x7
add ebx [ eax + 0x42127e0 ]
adc esp [ edi ]
mov es bx
imul esp [ ebx ] 0x4b
rcr [ eax - 0x4cf47c62 ] 0x1
mov [ esp + 0x4 ] 0xa
lea esp [ esp + 0x8 ]
je rwxdata
out dx eax
0x6855
jmp 0x608884b5
jmp rwxdata
jmp rwxdata
mov bx [ esi ]
clc
stc
clc
and ebx 0xfff
pushad
cmp ax cx
mov [ esp ] 0x13
bt sp ax
add [ ebx + edi ] dx
pushad
push edx
mov [ esp ] 0xd7
mov [ esp ] ax
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp ebx 0x3
jmp sub_26e907
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_2709c3
cmp edi 0x8286a20d
stc
stc
add [ ebx + edi ] ax
push ecx
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_270b01
pushfd
jmp rwxdata
lea esp [ esp + 0x8 ]
jb rwxdata
stc
clc
push 0xdf81cdfc
cmp ecx [ ebp - 0x8 ]
pushfd
push edx
lea esp [ esp + 0xc ]
jae rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jbe rwxdata
jbe rwxdata
cmp [ edi - 0x1 ] 0x0
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
adc si ax
push 0x77e5f851
sub ecx 0x1
adc di cx
mov [ ebp - 0x4 ] ecx
lea edi [ ebp - 0xfbf5a28 ]
mov ecx [ ebp - 0x8 ]
shl si 0x1
rcr di 0xd
jmp sub_26eb32
and di 0x5cd1
rcr di 0x4
sub ecx 0x1
bswap si
shr di 0x9
btc di 0x6
mov [ ebp - 0x4 ] ecx
bsr cx bx
shl si 0x5
not cl
bts cx si
mov ecx [ ebp - 0x8 ]
neg di
xor di 0xa55b
shrd si bp 0x1
add ecx [ ebp - 0x4 ]
bswap di
jmp rwxdata
push 0xb8d9604f
pushfd
call sub_274563
and di 0x1170
mov edi [ edx + 0x24 ]
cmp sp bx
stc
add edi eax
test cx 0x2419
jmp rwxdata
dec di
sar si 0xd
shr ecx 0x1
test bh cl
btr si ax
ror di cl
ror di 0xc
mov edi [ ebx + ecx * 4 ]
cmp bx 0x9c6f
or si bp
cmc
add edi eax
pushad
movsx esi dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x20 ]
movzx ecx [ edi + ecx * 2 ]
cmp ah al
shld di di cl
lea edi [ edi + 0x3552cf5 ]
mov edi [ edx + 0x1c ]
jmp rwxdata
add edi eax
pushad
pushfd
bt bx 0x6
call sub_27447a
sub_270b0f
lea esp [ esp + 0x28 ]
jne rwxdata
movzx bx bl
shl bh 0x1
adc bh 0x47
mov bx [ esi ]
test cl dl
pushad
call sub_26e989
sar ecx 0x11
shld cx cx 0x9
mov ecx [ ebp - 0x4 ]
pushad
test bh 0xc9
call sub_276307
sub_270b2d
not ax
mov [ esp + 0x1c ] 0xb
push ebx
lea eax [ rwxdata ]
call sub_273008
add [ eax ] al
inc edi
je rwxdata
pushad
mov ebx [ esp + 0x40 ]
bswap bp
pushfd
mov [ esp + 0x4 ] 0xbf9c
mov edi [ esp + 0x48 ]
movsx bp al
jmp rwxdata
outsd
jne rwxdata
movsx ebp cl
pop ebp
mov esi [ esp + 0x48 ]
jmp rwxdata
inc esi
imul ebp [ ebp + 0x4e ] 0x57656d61
add [ ebp + 0xf582464 ] cl
test cl al
in al 0xff
dec [ edi ]
mov [ 0xfffffffffe8060cc ] eax
cmp al bh
add eax edi
mov [ esp + 0x10 ] eax
cmp eax edx
pushfd
pushfd
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
jb rwxdata
bswap bp
call sub_2740e3
mov dh 0x7f
jl rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
bt dx 0x6
cmp dl bl
cmp eax [ ebp - 0x10 ]
call sub_2709b2
cmp al 0x8f
stc
jmp rwxdata
je rwxdata
jmp rwxdata
mov dh 0x51
sbb [ edx ] esi
pop esp
or ch [ ebp + 0x2879553e ]
mov [ 0x37a0d675 ] al
dec eax
cdq
pushad
xor [ ebx - 0x1b ] esi
fnsave [ edi - 0x43 ]
and al 0x2a
add eax 0x62fc5201
push ecx
add al [ ebx - 0x20 ]
or [ eax - 0x47 ] esi
fiadd [ edi + ebp * 8 + 0x3d ]
sub eax 0x8339f527
daa
inc edi
jpe rwxdata
lahf
mov [ 0xffffffff88a621e7 ] al
dec ecx
fdiv st4
aaa
shl [ eax - 0x430e78f6 ] 0x1
idiv [ ebx ]
adc bh ah
xchg ecx eax
insb
jge rwxdata
cmp dh 0xcb
test edi edi
jmp rwxdata
aas
mov ebx eax
call sub_240ac0
jns rwxdata
retn 0x44
retn
lea esp [ esp + 0x38 ]
je rwxdata
push ecx
or ebx [ edi - 0x1b ]
xlat
inc eax
push es
retn 0x5574
mov eax 0xd2adb1c6
jmp 0xffffffffe583013c
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
bt bx 0x8
clc
add eax edi
push esi
test ebp esi
cmp eax edx
mov [ esp ] dl
pushfd
jmp rwxdata
lea esp [ esp + 0x8 ]
jb rwxdata
stc
pushfd
bt sp 0x4
push [ esp ]
cmp eax [ ebp - 0x10 ]
push ebx
lea esp [ esp + 0xc ]
jae rwxdata
push esi
call sub_240181
sub_270b59
lea esp [ esp + 0x58 ]
je rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
bt esp ecx
pushad
cmp dh 0x38
clc
add eax edi
mov [ esp + 0x10 ] eax
cmp eax edx
pushfd
pushfd
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
jb rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
bt dx 0x6
cmp dl bl
cmp eax [ ebp - 0x10 ]
call sub_2709b2
sub_2730d6
pushfd
pushad
lea esp [ esp + 0x28 ]
je rwxdata
jmp rwxdata
push 0xbd1b662c
pushfd
mov [ esp ] 0x263d3796
pushfd
lea esp [ esp + 0x4 ]
jmp sub_4e74f7
push ebx
mov [ esp ] 0xbd1b662c
call sub_2528bd
sub_2732be
mov [ esp ] di
lea esp [ esp + 0x10 ]
jae rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
or cx bp
adc di ax
shl ebx 0x11
and ch ah
mov ebx eax
shld cx dx cl
pushfd
cmp dh 0x24
and ch 0xf1
mov edi eax
shl ch 0x1
xor ecx ecx
rcl cl cl
setno ch
mov ecx 0x104
cmp dl ah
xor al al
call sub_26fa83
nop
jg rwxdata
0x73a0
push ss
inc esi
xchg ebp eax
or bh [ ecx + 0x7d38a2b1 ]
retn 0xa1a9
sub_273847
cmp ebx 0x2
pushad
pushad
push ecx
mov [ esp ] 0x81
lea esp [ esp + 0x48 ]
je rwxdata
jmp rwxdata
bt cx 0x1
cmp ebx 0x3
jmp rwxdata
mov bx [ esi ]
clc
stc
clc
and ebx 0xfff
pushad
cmp ax cx
mov [ esp ] 0x13
bt sp ax
add [ ebx + edi ] dx
pushad
push edx
mov [ esp ] 0xd7
mov [ esp ] ax
lea esp [ esp + 0x44 ]
jmp rwxdata
jmp rwxdata
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
push ebx
lea esp [ esp + 0x4 ]
je rwxdata
shl bh 0x7
bt dx bp
shr bh cl
mov bx [ esi ]
stc
and ebx 0xfff
pushfd
clc
cmp ch ah
add [ ebx + edi ] edx
add esp 0x4
pushfd
pushfd
pushfd
push esi
lea esp [ esp + 0x10 ]
jmp rwxdata
sub_2739a2
pushfd
mov [ esp + 0x24 ] 0xcb0bd71c
pushad
push [ esp ]
push edx
lea esp [ esp + 0x4c ]
jmp rwxdata
pushfd
pushfd
pushad
mov [ esp + 0x24 ] edx
jmp rwxdata
mov [ esp + 0x20 ] edi
mov [ esp + 0x18 ] cx
push ebx
mov [ esp + 0x4 ] dx
mov [ esp + 0x20 ] ecx
call sub_4e7413
sub_273b2a
mov [ edi - 0x1 ] 0x0
cwde
movzx eax cl
mov [ esp ] ebx
not ax
push eax
push edx
lea eax [ rwxdata ]
jmp rwxdata
mov [ esp ] 0xf737
pushad
pushfd
mov [ esp + 0x28 ] rwxdata
jmp rwxdata
pushfd
pushfd
mov [ esp + 0x2c ] eax
mov [ esp ] 0x19
mov [ esp ] ecx
push [ esp + 0x2c ]
retn 0x30
sub_273d15
cmp cl ch
mov ebx [ edx + 0x20 ]
bsf ecx esi
dec cl
or cl bl
mov [ esp ] dh
add ebx eax
bsr ecx edx
movzx cx dl
jmp rwxdata
rcl cl 0x3
mov [ ebp - 0x8 ] 0x0
push 0x54aa071d
add ecx ecx
neg cx
test di 0xce40
mov ecx [ edx + 0x18 ]
lea esp [ esp + 0x8 ]
stc
clc
push 0xdf81cdfc
cmp ecx [ ebp - 0x8 ]
pushfd
push edx
lea esp [ esp + 0xc ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
jbe rwxdata
jbe rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
adc si ax
push 0x77e5f851
sub ecx 0x1
adc di cx
mov [ ebp - 0x4 ] ecx
lea edi [ ebp - 0xfbf5a28 ]
mov ecx [ ebp - 0x8 ]
shl si 0x1
rcr di 0xd
jmp sub_26eb32
and di 0x5cd1
rcr di 0x4
sub ecx 0x1
bswap si
shr di 0x9
btc di 0x6
mov [ ebp - 0x4 ] ecx
bsr cx bx
shl si 0x5
not cl
bts cx si
mov ecx [ ebp - 0x8 ]
neg di
xor di 0xa55b
shrd si bp 0x1
add ecx [ ebp - 0x4 ]
bswap di
jmp rwxdata
dec di
sar si 0xd
shr ecx 0x1
test bh cl
btr si ax
ror di cl
ror di 0xc
mov edi [ ebx + ecx * 4 ]
cmp bx 0x9c6f
or si bp
cmc
add edi eax
pushad
movsx esi dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x20 ]
push 0xb8d9604f
pushfd
call sub_274563
sub_274482
pushad
cmp ecx 0xffff
pushfd
mov [ esp + 0x4 ] 0x9a
jmp rwxdata
push eax
lea esp [ esp + 0x2c ]
jbe rwxdata
test ecx 0x30be9b83
stc
clc
clc
sub ecx [ edx + 0x10 ]
cmp ah ch
test bl bh
pushfd
pushfd
cmp ecx [ edx + 0x14 ]
push 0xcffb2c54
mov [ esp + 0x8 ] 0x256a
call sub_240969
bsr di cx
mov edi [ edx + 0x24 ]
cmc
cmp cl al
add edi eax
shrd ebx ebp 0x2
sar cl 0x3
mov ebx [ edx + 0x20 ]
test bh 0xc7
add ebx eax
jmp rwxdata
sar cl cl
movzx cx al
mov [ ebp - 0x8 ] 0x0
pushfd
test cl 0x26
mov ecx [ edx + 0x18 ]
call sub_2762ed
sub_2747df
mov [ esp ] 0x92
push 0x415eab8
lea esp [ esp + 0x14 ]
jbe rwxdata
test ecx 0x30be9b83
stc
clc
clc
sub ecx [ edx + 0x10 ]
cmp ah ch
test bl bh
pushfd
pushfd
cmp ecx [ edx + 0x14 ]
push 0xcffb2c54
mov [ esp + 0x8 ] 0x256a
call sub_240969
bts bx bp
neg edi
xchg di bx
mov edi [ edx + 0x24 ]
add bh 0x7d
shld bx sp cl
add edi eax
test cl 0xa6
mov ebx [ edx + 0x20 ]
adc ch 0x3b
shld cx si 0xe
add ebx eax
bsr cx di
mov [ ebp - 0x8 ] 0x0
lea ecx [ ecx * 2 + 0x795cd77f ]
dec ch
pushfd
mov ecx [ edx + 0x18 ]
test esi 0x49f0bafa
pushad
bt dx di
clc
cmp ecx [ ebp - 0x8 ]
push esi
call sub_26f01f
sub_274844
lea esp [ esp + 0x2c ]
jae rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
pushfd
pushad
mov ebx eax
pushfd
push ebx
push [ esp ]
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
shl di 0xb
bts di 0x1
ror ch 0x3
adc cl 0x29
mov edi eax
bswap ecx
mov ecx 0x104
cmp ch 0x86
pushad
xor al al
test ah 0x77
cmp dh 0x75
push ebx
jmp rwxdata
[ edi ]
pushfd
mov [ esp ] dx
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
cmp ch cl
bsf cx si
adc ch 0x3a
mov ecx edi
rcl si 0x3
ror si 0xa
bsf si dx
rcr si cl
sub ecx ebx
sbb si bx
mov esi esp
stc
cmp bp cx
sub edi 0x4
call sub_276281
sub_274877
push ecx
lea esp [ esp + 0x8 ]
jb rwxdata
stc
clc
push 0xdf81cdfc
cmp ecx [ ebp - 0x8 ]
pushfd
push edx
lea esp [ esp + 0xc ]
jae rwxdata
call sub_2535e9
pushad
lea esp [ esp + 0x20 ]
jbe rwxdata
jbe rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
adc si ax
push 0x77e5f851
sub ecx 0x1
adc di cx
mov [ ebp - 0x4 ] ecx
lea edi [ ebp - 0xfbf5a28 ]
mov ecx [ ebp - 0x8 ]
shl si 0x1
rcr di 0xd
jmp sub_26eb32
and di 0x5cd1
rcr di 0x4
sub ecx 0x1
bswap si
shr di 0x9
btc di 0x6
mov [ ebp - 0x4 ] ecx
bsr cx bx
shl si 0x5
not cl
bts cx si
mov ecx [ ebp - 0x8 ]
neg di
xor di 0xa55b
shrd si bp 0x1
add ecx [ ebp - 0x4 ]
bswap di
jmp rwxdata
dec di
sar si 0xd
shr ecx 0x1
test bh cl
btr si ax
ror di cl
ror di 0xc
mov edi [ ebx + ecx * 4 ]
cmp bx 0x9c6f
or si bp
cmc
add edi eax
pushad
movsx esi dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x20 ]
push 0xb8d9604f
pushfd
call sub_274563
sub_2751be
pushad
lea esp [ esp + 0x28 ]
jb rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
stc
cmp eax [ ebp - 0x10 ]
pushfd
push 0x1b41d0e8
lea esp [ esp + 0x8 ]
jae rwxdata
mov ebx esi
lea ebx [ eax * 8 - 0x7cc3bfdc ]
mov ebx eax
pushad
mov [ esp ] 0xf1
pushfd
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x24 ]
jmp rwxdata
shl di 0xb
bts di 0x1
ror ch 0x3
adc cl 0x29
mov edi eax
bswap ecx
mov ecx 0x104
cmp ch 0x86
pushad
xor al al
test ah 0x77
cmp dh 0x75
push ebx
jmp rwxdata
[ edi ]
pushfd
mov [ esp ] dx
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
cmp ch cl
bsf cx si
adc ch 0x3a
mov ecx edi
rcl si 0x3
ror si 0xa
bsf si dx
rcr si cl
sub ecx ebx
sbb si bx
mov esi esp
stc
cmp bp cx
sub edi 0x4
call sub_276281
sub_275bcf
pushad
add ah 0x20
lea esp [ esp + 0x24 ]
test di dx
cmp si 0x6af8
cmp dl bl
or al al
jg rwxdata
jmp sub_2784c5
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
je rwxdata
stc
push 0xc8e75c9e
or ah ah
push esp
lea esp [ esp + 0x8 ]
je rwxdata
push 0x1c9246ef
mov [ esp ] bl
cmc
pushfd
cmp al ah
call sub_240e45
push 0xcd492531
push [ esp + 0x4 ]
retn 0x8
cmc
cmp ah 0x2e
sub_275c07
lea esp [ esp + 0x34 ]
jb rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
stc
jmp rwxdata
push ecx
pushfd
cmp eax [ ebp - 0x10 ]
pushfd
call sub_2732be
xchg edi eax
test al 0xa5
sub_275dd0
lea eax [ rwxdata ]
call sub_2700f2
jmp rwxdata
pushfd
cmp cl 0x5
or ecx ecx
call j_sub_252cc2
mov [ esp + 0x4 ] al
lea esp [ esp + 0x40 ]
ja rwxdata
pushad
jmp sub_26d36b
push ebp
jmp rwxdata
lea esp [ esp + 0x4 ]
jb rwxdata
stc
clc
push 0xdf81cdfc
cmp ecx [ ebp - 0x8 ]
pushfd
push edx
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
cmp [ edi - 0x1 ] 0x0
push 0x5d4654b7
lea esp [ esp + 0x28 ]
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jbe rwxdata
jbe rwxdata
push 0xb8d9604f
pushfd
call sub_274563
rol di cl
bt si di
rcl edi cl
pushfd
mov edi [ edx + 0x24 ]
cmc
call j_sub_2763cb
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
adc si ax
push 0x77e5f851
sub ecx 0x1
adc di cx
mov [ ebp - 0x4 ] ecx
lea edi [ ebp - 0xfbf5a28 ]
mov ecx [ ebp - 0x8 ]
shl si 0x1
rcr di 0xd
jmp sub_26eb32
and di 0x5cd1
rcr di 0x4
sub ecx 0x1
bswap si
shr di 0x9
btc di 0x6
mov [ ebp - 0x4 ] ecx
bsr cx bx
shl si 0x5
not cl
bts cx si
mov ecx [ ebp - 0x8 ]
neg di
xor di 0xa55b
shrd si bp 0x1
add ecx [ ebp - 0x4 ]
bswap di
jmp rwxdata
dec di
sar si 0xd
shr ecx 0x1
test bh cl
btr si ax
ror di cl
ror di 0xc
mov edi [ ebx + ecx * 4 ]
cmp bx 0x9c6f
or si bp
cmc
add edi eax
pushad
movsx esi dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x20 ]
sub_276294
push 0xb00fbc14
lea esp [ esp + 0x48 ]
ja rwxdata
pushad
jmp sub_26d36b
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
stc
clc
push 0xdf81cdfc
cmp ecx [ ebp - 0x8 ]
pushfd
push edx
lea esp [ esp + 0xc ]
jae rwxdata
cmp cx 0x7deb
cmp [ edi - 0x1 ] 0x0
pushad
pushfd
pushad
mov [ esp ] 0xfd
lea esp [ esp + 0x44 ]
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jbe rwxdata
jbe rwxdata
push 0xb8d9604f
pushfd
call sub_274563
bt di ax
shl di cl
shl di cl
mov edi [ edx + 0x24 ]
clc
jmp rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
adc si ax
push 0x77e5f851
sub ecx 0x1
adc di cx
mov [ ebp - 0x4 ] ecx
lea edi [ ebp - 0xfbf5a28 ]
mov ecx [ ebp - 0x8 ]
shl si 0x1
rcr di 0xd
jmp sub_26eb32
and di 0x5cd1
rcr di 0x4
sub ecx 0x1
bswap si
shr di 0x9
btc di 0x6
mov [ ebp - 0x4 ] ecx
bsr cx bx
shl si 0x5
not cl
bts cx si
mov ecx [ ebp - 0x8 ]
neg di
xor di 0xa55b
shrd si bp 0x1
add ecx [ ebp - 0x4 ]
bswap di
jmp rwxdata
clc
clc
add edi eax
clc
clc
bt bp cx
pushad
movzx ecx [ edi + ecx * 2 ]
movsx di dl
rol di cl
bsf edi edi
mov edi [ edx + 0x1c ]
pushad
test si dx
pushfd
clc
add edi eax
pushfd
pushfd
jmp rwxdata
dec di
sar si 0xd
shr ecx 0x1
test bh cl
btr si ax
ror di cl
ror di 0xc
mov edi [ ebx + ecx * 4 ]
cmp bx 0x9c6f
or si bp
cmc
add edi eax
pushad
movsx esi dl
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x20 ]
mov [ esp ] cl
mov edi [ edi + ecx * 4 ]
clc
test edi edi
pushfd
call sub_274f97
sub_2763cb
cmp dl dh
add edi eax
bt ecx edx
stc
push esp
movzx ecx [ edi + ecx * 2 ]
add di bp
mov edi [ edx + 0x1c ]
cmc
stc
jmp rwxdata
push [ esp ]
add edi eax
stc
mov edi [ edi + ecx * 4 ]
test esp esi
pushad
pushfd
test edi edi
push edi
lea esp [ esp + 0x38 ]
je rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
cmc
cmc
add eax edi
cmp cx bp
cmp cl dh
jmp rwxdata
pushfd
cmp eax edx
call sub_2751be
sub_2763e5
rol al 0x7
push esi
inc al
pushfd
cmp al [ edi ]
lahf
jmp rwxdata
lea edi [ edi + 0x1 ]
not eax
push 0x6ed15eb3
cwde
seta al
mov eax [ esp + 0x30 ]
call sub_26e791
sub_2765be
lea esp [ esp + 0x4 ]
call j_sub_277134
pushad
pushfd
mov [ esp + 0x8 ] ch
lea esp [ esp + 0x24 ]
jae rwxdata
push 0xbbe95402
mov [ esp ] ah
pushfd
pushad
lea esp [ esp + 0x28 ]
call j_sub_270aea
clc
pushad
xor eax eax
push [ esp ]
pushad
mov [ esp ] bp
mov [ esp ] 0x16
lea esp [ esp + 0x44 ]
call j_sub_277134
call sub_2764c1
sub_2765f5
lea esp [ esp + 0xc ]
je rwxdata
shl bh 0x7
bt dx bp
shr bh cl
mov bx [ esi ]
stc
and ebx 0xfff
pushfd
clc
cmp ch ah
add [ ebx + edi ] edx
add esp 0x4
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_27661d
pushad
lea esp [ esp + 0x2c ]
jne rwxdata
movzx cx bl
mov ecx edi
cmc
aas
aas
sub edx edx
mov ah 0xf6
mov eax edx
mov al 0x8e
add edi 0x1
dec al
and al 0x25
sar al cl
shl al 0x4
mov al [ edi ]
cmp dl 0x4d
bt sp 0x5
test bl bl
bt cx si
test al al
jmp rwxdata
push ecx
mov al [ ecx ]
mov [ esp ] cx
pushad
mov ah al
pushad
mov [ esp ] cl
dec al
pushfd
ror al 0x7
mov [ esp ] 0x73
cmp dl 0x47
bt edi edi
add al 0x6f
push 0x18b64918
bt si 0x2
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
bt ax bp
ror al 0x6
mov [ esp + 0x4 ] 0x33
mov [ ecx ] al
pushfd
mov [ esp ] 0x89
bt bx sp
cmp bx si
add ecx 0x1
bt dx 0xb
test ah ah
jmp rwxdata
bswap di
movsx di dl
mov di 0x75bb
jmp rwxdata
call sub_273b45
lea esp [ esp + 0x50 ]
jne rwxdata
mov edi edx
jmp rwxdata
pushfd
pushfd
push 0x73cc8b40
mov [ esp + 0x8 ] edi
pushfd
mov [ esp + 0x8 ] ebx
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_26ccd6
sub_27666f
dec al
mov [ esp + 0xc ] dl
pushfd
jmp rwxdata
cmc
xor al 0xcc
cmc
sub al 0xde
push [ esp ]
mov [ esp + 0x4 ] bp
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x4c ]
call sub_26e7d1
sub_27667b
push [ esp + 0x8 ]
push [ esp ]
lea esp [ esp + 0x34 ]
ja rwxdata
bsr cx dx
movzx ecx bl
mov ecx [ esi + 0x4 ]
clc
or ecx ecx
push 0x74776d8
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
setg bh
jmp rwxdata
or di si
and bh 0x12
pushfd
add [ ebp - 0x4 ] ecx
bt di 0x1
sub edi ebp
xor di si
xadd di bx
sub ecx 0x8
btc bx ax
btc bx ax
not edi
neg bl
shr ecx 0x1
test dl 0xf8
adc bh cl
mov edi [ esi ]
movzx bx cl
shl bh cl
add edi [ ebp + 0x10 ]
add bh bl
call sub_26cbc7
movsx esi al
pop esi
push esp
xchg ecx edi
lea esp [ esp + 0x4 ]
jpe rwxdata
jo rwxdata
pop edi
push eax
mov ebx [ esp + 0x4 ]
pushad
setno cl
mov ecx [ esp + 0x28 ]
jmp rwxdata
jmp sub_23f53d
not di
pop edi
not bl
call sub_27847e
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
mov esp ebp
pushad
call sub_240d36
call 0xffffffffc96ba9d3
jl rwxdata
shld bx si 0x1
push eax
rcl bx 0x2
setbe bl
mov bx [ esi ]
call sub_27864f
pushfd
cmp ebx 0x2
pushfd
jmp rwxdata
pop esi
inc ebp
int1
dec eax
and cl [ ecx - 0x33 ]
loope rwxdata
insb
mov ah 0xa9
mov esi 0x27bd304e
inc [ ecx + edx ]
mov esi 0xab76f3d6
push esi
into
pop ebp
aaa
mov bh bl
pop esp
and al 0x7
add ebx [ eax + 0x42127e0 ]
adc esp [ edi ]
mov es bx
imul esp [ ebx ] 0x4b
rcr [ eax - 0x4cf47c62 ] 0x1
mov [ esp + 0x4 ] 0xa
lea esp [ esp + 0x8 ]
je rwxdata
out dx eax
0x6855
jmp 0x608884b5
jmp rwxdata
jmp rwxdata
mov bx [ esi ]
clc
stc
clc
and ebx 0xfff
pushad
cmp ax cx
mov [ esp ] 0x13
bt sp ax
add [ ebx + edi ] dx
pushad
push edx
mov [ esp ] 0xd7
mov [ esp ] ax
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp ebx 0x3
jmp sub_26e907
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_276950
lea esp [ esp + 0x4 ]
ja rwxdata
push 0x6096391b
mov [ esp ] rwxdata
jmp rwxdata
push eax
push 0xf0425e82
mov [ esp + 0x4 ] rwxdata
pushfd
jmp rwxdata
push eax
push 0xab2de4e2
pushad
mov [ esp + 0x4 ] dh
pushad
push [ esp + 0x44 ]
retn 0x48
push [ esp ]
pushad
mov [ esp + 0x28 ] eax
mov [ esp ] dx
push [ esp + 0x28 ]
retn 0x2c
sub_276b45
add edx eax
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
mov al cl
sbb al cl
bt sp 0x8
add edi 0x1
shl al cl
shr al cl
pushad
mov al [ edi ]
pushfd
pushad
test al al
pushfd
mov [ esp + 0x4 ] 0x27
lea esp [ esp + 0x48 ]
je rwxdata
bswap di
movsx di dl
mov di 0x75bb
jmp rwxdata
bt edi edi
push edi
cmp bh dl
sub al 0x30
pushad
cmp al 0x9
pushfd
push 0x6233fbe2
call sub_240c71
mov edi edx
movzx cx bl
mov ecx edi
push ecx
mov al [ ecx ]
mov [ esp ] cx
pushad
mov ah al
pushad
mov [ esp ] cl
dec al
pushfd
ror al 0x7
mov [ esp ] 0x73
cmp dl 0x47
bt edi edi
add al 0x6f
push 0x18b64918
bt si 0x2
jmp rwxdata
bt ax bp
ror al 0x6
mov [ esp + 0x4 ] 0x33
mov [ ecx ] al
pushfd
mov [ esp ] 0x89
bt bx sp
cmp bx si
add ecx 0x1
bt dx 0xb
test ah ah
jmp rwxdata
lea esp [ esp + 0x50 ]
jne rwxdata
jmp rwxdata
pushfd
pushfd
push 0x73cc8b40
mov [ esp + 0x8 ] edi
pushfd
mov [ esp + 0x8 ] ebx
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_26ccd6
sub_277134
pushfd
clc
add dl dl
mov [ esp ] 0xfec6e0eb
lea esp [ esp + 0x4 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
pushfd
pushf
pop [ esp + 0x2 ]
sar dl cl
mov dl [ esi ]
stc
neg dl
push 0x2f2e9ff6
dec dl
test dl 0xf1
cmc
pushad
xor dl 0xcc
bt di sp
sub dl 0xde
cld
std
push [ esp + 0x26 ]
popf
push edx
inc esi
pushfd
call sub_2536f3
sub_27717f
lea esp [ esp + 0xc ]
je rwxdata
shl bh 0x7
bt dx bp
shr bh cl
mov bx [ esi ]
stc
and ebx 0xfff
pushfd
clc
cmp ch ah
add [ ebx + edi ] edx
add esp 0x4
push 0xedb3725
pushad
push [ esp + 0x4 ]
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_277b28
pushfd
pushad
mov [ esp + 0x28 ] 0xaa0b178f
mov [ esp ] dh
mov [ esp ] 0xfdfb
mov [ esp ] dh
mov [ esp ] cl
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
push ecx
mov [ esp ] edx
pushfd
mov [ esp ] dh
pushfd
mov [ esp + 0x4 ] edi
call sub_4e74fc
call sub_4e8e9e
sub_277c7c
movzx esi [ edx + 0x1a ]
mov di sp
pushad
mov di [ esp + 0x4 ]
pushfd
lea esi [ esi + edx + 0x1c ]
movsx di dl
jmp rwxdata
movsx di bl
movzx di dl
mov edi [ ebp + 0x8 ]
push eax
lea esp [ esp + 0x4c ]
call sub_241767
pushfd
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0xc ]
jne rwxdata
pushad
push ebx
clc
add ecx 0xffffffff
jmp sub_26f845
pushfd
not al
movsx ax al
mov eax [ edx + 0x8 ]
pushfd
pushad
mov [ esp ] cl
lea esp [ esp + 0x28 ]
jmp rwxdata
bt sp si
ja rwxdata
jmp sub_2709da
or ebx ebx
pushfd
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
call sub_26e8e1
call sub_26f563
sub_277f52
lea esp [ esp + 0x30 ]
je rwxdata
pushad
bswap di
pushad
mov ebx [ esp + 0x40 ]
bswap bp
pushfd
mov [ esp + 0x4 ] 0xbf9c
mov edi [ esp + 0x48 ]
movsx bp al
jmp rwxdata
push eax
adc ecx ecx
pushad
pushad
mov [ esp ] di
mov [ esp + 0x8 ] dh
lea esp [ esp + 0x44 ]
jmp rwxdata
movsx ebp cl
pop ebp
mov esi [ esp + 0x48 ]
jmp rwxdata
mov bl 0xc
inc ecx
setno bl
inc ecx
jmp sub_24018d
bswap bp
call sub_2740e3
mov dh 0x7f
jl rwxdata
cmp al 0x8f
stc
jmp rwxdata
je rwxdata
jmp rwxdata
mov dh 0x51
sbb [ edx ] esi
pop esp
or ch [ ebp + 0x2879553e ]
mov [ 0x37a0d675 ] al
dec eax
cdq
pushad
xor [ ebx - 0x1b ] esi
fnsave [ edi - 0x43 ]
and al 0x2a
add eax 0x62fc5201
push ecx
add al [ ebx - 0x20 ]
or [ eax - 0x47 ] esi
fiadd [ edi + ebp * 8 + 0x3d ]
sub eax 0x8339f527
daa
inc edi
jpe rwxdata
lahf
mov [ 0xffffffff88a621e7 ] al
dec ecx
fdiv st4
aaa
shl [ eax - 0x430e78f6 ] 0x1
idiv [ ebx ]
adc bh ah
xchg ecx eax
insb
jge rwxdata
cmp dh 0xcb
test edi edi
jmp rwxdata
aas
mov ebx eax
call sub_240ac0
jns rwxdata
retn 0x44
retn
lea esp [ esp + 0x38 ]
je rwxdata
push ecx
or ebx [ edi - 0x1b ]
xlat
inc eax
push es
retn 0x5574
mov eax 0xd2adb1c6
jmp 0xffffffffe583013c
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
bt bx 0x8
clc
add eax edi
push esi
test ebp esi
cmp eax edx
mov [ esp ] dl
pushfd
jmp rwxdata
lea esp [ esp + 0x8 ]
jb rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
stc
pushfd
bt sp 0x4
push [ esp ]
cmp eax [ ebp - 0x10 ]
push ebx
lea esp [ esp + 0xc ]
jae rwxdata
push esi
call sub_240181
sub_27847e
lea ebx [ edx + 0x2cc037be ]
mov ebx [ esp + 0x4 ]
lea ecx [ esi + 0x5aaed0b3 ]
setae ch
lea ecx [ ebp + 0x9fee34 ]
mov ecx [ esp + 0x8 ]
pushad
push [ esp + 0x4 ]
push 0xbcf3ce62
mov esp ebp
pushfd
bswap ebp
bswap bp
mov bp 0x1eaa
mov ebp [ esp + 0x4 ]
push 0x5a9d0644
pushfd
mov [ esp ] cl
push [ esp + 0x10 ]
retn 0x24
sub_2784c5
je rwxdata
stc
push 0xc8e75c9e
or ah ah
push esp
lea esp [ esp + 0x8 ]
je rwxdata
call j_sub_241d2b
push 0xcd492531
push [ esp + 0x4 ]
retn 0x8
cmc
cmp ah 0x2e
sub_278b3b
lea esp [ esp + 0xc ]
jne rwxdata
push 0xcd492531
push [ esp + 0x4 ]
retn 0x8
push 0xdcbac658
push 0xd8da0d75
inc esi
push 0xd2b0f02d
call sub_273416
pushad
pushad
pushfd
lea esp [ esp + 0x44 ]
je rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
lea ecx [ eax + 0x443ffb13 ]
rcr cx 0x3
rcr cl cl
not ecx
add edx eax
sub cx sp
movzx cx al
mov ecx [ esi + 0x7c ]
jmp sub_2784df
sub_278b8c
push 0x41be663
jmp rwxdata
pushfd
jmp rwxdata
jmp rwxdata
mov [ esp ] 0x634ca45b
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
call sub_4e8bff
call sub_4e8545
mov [ esp ] 0xcf
mov [ esp ] edi
pushfd
mov [ esp ] ecx
jmp rwxdata
push eax
pushfd
mov [ esp ] ebx
call sub_4e88e7
call sub_4e8118
mov [ esp + 0x4 ] dh
mov [ esp + 0x4 ] ebx
mov [ esp ] 0x8740
push 0x14dcc18a
jmp rwxdata
pushad
mov [ esp + 0x24 ] esi
push 0xe51281a7
mov [ esp ] 0x29
push ebx
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_278b96
push 0x21b11757
lea esp [ esp + 0xc ]
je rwxdata
jmp sub_2730b3
push 0x9f9b1110
mov ebx eax
call sub_23f9a0
jmp rwxdata
push ebx
lea esp [ esp + 0x4 ]
je rwxdata
shl bh 0x7
bt dx bp
shr bh cl
mov bx [ esi ]
stc
and ebx 0xfff
pushfd
clc
cmp ch ah
add [ ebx + edi ] edx
add esp 0x4
pushfd
pushfd
pushfd
push esi
lea esp [ esp + 0x10 ]
jmp rwxdata
pushad
add esi 0x2
mov [ esp + 0x8 ] bh
push [ esp + 0x4 ]
call sub_273410
sub_279904
jmp rwxdata
push [ esp ]
test edi edi
jmp rwxdata
push [ esp + 0x4 ]
pushad
lea esp [ esp + 0x40 ]
je rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
pushfd
bt cx 0xd
bt di dx
pushfd
add eax edi
push ebx
cmp eax edx
jmp rwxdata
lea esp [ esp + 0xc ]
jb rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
stc
cmp eax [ ebp - 0x10 ]
call sub_275499
sub_279958
pushfd
lea esp [ esp + 0x2c ]
call j_sub_277134
jmp rwxdata
jmp rwxdata
pushad
push 0x6ab63236
lea esp [ esp + 0x24 ]
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
call j_sub_277134
pushad
pushfd
call sub_274c67
pushad
pushad
push [ esp + 0x40 ]
retn 0x44
sub_279b02
push [ esp ]
pushfd
lea esp [ esp + 0x30 ]
jne rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
cmp ebp 0x54f1f839
pushad
pop esi
bt bp ax
mov ecx edi
lea esi [ eax * 8 + 0xff1a778 ]
shl si cl
sub ecx ebx
bsr si si
add si 0xd7f
lea esi [ esp + 0x1c ]
cmp ch 0xf9
mov [ esp ] dh
pushad
bt bp dx
sub edi 0x4
bt sp 0x1
test ch al
test cx si
push [ edi ]
pop [ esp + 0x38 ]
jmp rwxdata
cmp edi ebx
mov [ esp + 0x14 ] 0xea
jmp rwxdata
pushfd
mov [ esp + 0x4 ] 0x32
lea esp [ esp + 0x3c ]
ja rwxdata
stc
cmp bp cx
sub edi 0x4
call sub_276281
test bl cl
bt ebx 0x12
bt eax esi
pushfd
sub ebx edi
pushad
sub esp 0xffffffdc
add ebx esp
pushfd
movzx di al
mov edi ebx
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
test ah dh
inc al
mov al 0x2e
stc
clc
[ edi ]
pushad
mov [ esp + 0x8 ] ch
push esi
mov [ esp + 0xc ] esi
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_24057e
push 0x47182010
not ah
lea esp [ esp + 0x4 ]
ja rwxdata
push ebp
jmp sub_273b2a
mov [ edi - 0x1 ] 0x0
setle ah
push ebx
jmp rwxdata
lea eax [ rwxdata ]
test eax 0x8d41605a
mov [ 0xffffffffdf07fb64 ] al
sti
jne rwxdata
cmp al [ edx ]
add [ ebx ] ch
fisub [ eax - 0x2f ]
push ebp
jo rwxdata
xor edx ecx
sbb [ ebx - 0x2e12b44d ] dh
loope rwxdata
mov edi 0x131738f6
inc eax
stosb [ edi ]
loop rwxdata
dec esp
or edx [ edi + 0x62e37c74 ]
pop eax
inc ebx
mov esi 0x4550d7d4
cwde
cmpsd [ esi ] [ edi ]
enter 0x5aa9 0x60
inc ecx
lea esp [ edx - 0x20f8049c ]
xchg esi eax
sbb al cl
inc esi
fmul st6
nop
out 0x88 eax
arpl [ esi ] bp
add al 0x69
add al 0x63
call sub_276950
sub ebx edx
pushad
ror [ esi + 0x37cb0035 ] 0x1
or al bl
lodsd [ esi ]
xchg ecx eax
cli
push edx
std
mov ch 0x7
and cl [ esi ]
pop esi
adc eax 0x607ea1f
daa
jl rwxdata
loope rwxdata
dec ebp
les ebx [ edx ]
mov esp 0xebac36db
insb
mov [ 0x711888da ] al
lodsd [ esi ]
bswap esp
xlat
sub bl [ ecx - 0x78 ]
js rwxdata
add ch [ ecx ]
bound ebx [ esi + ebp * 4 - 0x30 ]
0xeaa4
int3
xchg esp eax
imul esi [ ebx ] 0x15
les edx [ edi + 0x6ccd2c2b ]
sub [ edx + 0x2816a8a4 ] eax
dec ebx
rol [ ecx - 0x3f01d7b5 ] 0xbe
mov al [ 0xfffffffff1117ca8 ]
and [ esp ] al
pop es
fstp [ esi + 0x35 ]
test [ edx + ebp * 2 + 0x7 ] ecx
cmp al 0x7a
inc edx
pop ecx
rcl [ eax + 0x289049f9 ] cl
out dx eax
add esp [ edx + 0x1 ]
fnstenv [ ebp - 0x764ad23f ]
sub_279b69
lea esp [ esp + 0x2c ]
jae rwxdata
not bl
movsx dx bl
pop edx
setge bh
pushad
push [ esp + 0xc ]
mov ebx [ esp + 0x24 ]
movzx di cl
call sub_2409b7
bswap edi
mov ebx eax
inc di
mov edi eax
test edi 0xe2e8b66e
mov ecx 0x104
clc
pushad
sub al al
clc
[ edi ]
pushad
pushfd
lea esp [ esp + 0x44 ]
jne rwxdata
pushfd
btr bx 0x5
adc dh ch
and dx di
xor eax eax
lea esp [ esp + 0x4 ]
or si 0x89ad
mov cx ax
mov ecx edi
bts si 0x2
movsx si cl
test cl ah
test al ah
sub ecx ebx
bsf si sp
sbb si si
mov esi esp
cmp bh bh
stc
sub edi 0x4
pushad
push ebp
cmp al 0x41
mov [ esp + 0x4 ] edi
push [ edi ]
pop [ esp + 0x20 ]
jmp rwxdata
cmc
cmp edi ebx
mov [ esp ] ah
pushad
pushfd
call sub_27079f
sub_4e6ddb
[ edi ] [ esi ]
btc edi 0xa
mov edi [ esp + 0x48 ]
pushfd
mov [ esp + 0x4 ] dx
sub si cx
and si dx
mov esi [ esp + 0x50 ]
mov [ esp + 0x4 ] 0x61
call sub_4e9228
mov [ eax ] dx
pushfd
pushad
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e6e73
bswap esi
bsr di cx
and bh cl
sub esi 0x32e61207
rcl ebp 0x14
rol di cl
rcl di 0x5
btr di 0xf
ror esi 0x16
xchg di bx
dec di
lea ebp [ ebp * 4 + 0x36a4994 ]
lea ebp [ esp + 0x20 ]
setle bl
pop ebx
pop edi
or di 0xcd47
sub esp 0xa8
shr edi 0x2
mov edi esp
call sub_4e82b2
sub_4e6ebe
bt cx cx
mov [ esp ] 0x22
test ah dl
sub ecx 0x1
mov [ esp ] 0x20
pushfd
jmp rwxdata
call sub_4e7eca
push eax
push esi
push 0x6b6e5c0
pushad
mov [ esp + 0x24 ] ebx
pushfd
jmp rwxdata
mov [ esp + 0x24 ] esi
mov [ esp ] esi
pushad
pushfd
mov [ esp + 0x14 ] ah
lea esp [ esp + 0x48 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e6ed5
cmc
mov [ esp ] 0x5f
call sub_4e721b
clc
add ebp 0x2
jmp rwxdata
mov ax [ ss : eax ]
push [ esp ]
mov [ esp ] ah
push 0x82bfc3f8
pushfd
mov [ ebp ] ax
push 0x939577ab
push 0x4ad70586
lea esp [ esp + 0x18 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e6eed
lea esp [ esp + 0x18 ]
jg rwxdata
call sub_4e91b2
mov [ ebp ] ax
call sub_4e833a
pushfd
pop [ esp + 0x20 ]
push 0x98c5d5f9
pushad
push 0x5e1f58e7
push [ esp + 0x48 ]
pop [ ebp ]
mov [ esp ] sp
lea esp [ esp + 0x4c ]
jmp sub_4e80bc
sub_4e6f4a
push ebp
dec esi
bt esi 0x14
clc
test bp 0x5f00
cmp dl dh
mov ax [ eax + edi ]
cmp bh dh
cmc
sub ebp 0x2
lea esp [ esp + 0x38 ]
js rwxdata
call sub_4e745f
mov [ ebp ] ax
pushad
push [ esp + 0x4 ]
lea esp [ esp + 0x24 ]
jmp sub_4e80bc
sub_4e6f7e
not dx
call sub_4e8187
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
bt cx 0x5
add bl al
pushad
sub ebp 0x2
lea esp [ esp + 0x40 ]
jbe rwxdata
add bl al
clc
sub ebp 0x2
pushad
pushad
call sub_4e7cca
push eax
pushfd
mov [ esp ] ebx
call sub_4e88e7
call sub_4e8118
mov [ esp + 0x4 ] dh
mov [ esp + 0x4 ] ebx
mov [ esp ] 0x8740
push 0x14dcc18a
jmp rwxdata
call sub_4e82d9
push eax
mov [ esp ] 0x49
mov [ ebp ] ax
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
mov [ esp + 0x24 ] esi
push 0xe51281a7
mov [ esp ] 0x29
push ebx
lea esp [ esp + 0x2c ]
jmp rwxdata
pushad
call sub_4e8fef
pushad
mov [ esp ] ch
pushad
dec esi
pushfd
lea esp [ esp + 0x44 ]
jmp sub_4e80bc
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e706a
mov [ esp + 0x24 ] esi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e709f
call sub_4e7278
call sub_4e7ccf
mov [ esp ] 0x84
pushfd
jmp rwxdata
push [ esp + 0x3c ]
pop [ ebp ]
pushfd
pushfd
pushfd
mov [ esp ] 0x79
lea esp [ esp + 0x4c ]
jmp sub_4e80bc
sub_4e70e9
mov [ esp + 0x4 ] dx
pushfd
pushfd
pop [ esp + 0x8 ]
mov [ esp ] 0xe2
pushfd
pushfd
call sub_4e762e
push 0x275a6bfe
call sub_4e8371
clc
pushfd
and eax edx
pushad
mov [ esp ] 0x361b
mov [ esp + 0x8 ] cx
mov [ ebp + 0x4 ] eax
lea esp [ esp + 0x28 ]
je rwxdata
jmp sub_4e7eb9
pushfd
pushfd
jmp rwxdata
mov [ esp ] cl
call sub_4e8e8b
sub_4e720d
mov [ esp ] 0x42
call sub_4e6ddb
jmp rwxdata
pushfd
mov [ esp ] ebx
pushfd
mov [ esp ] edx
mov [ esp ] esi
push 0x4871933
pushfd
mov [ esp ] 0x51
mov [ esp ] 0xb2
lea esp [ esp + 0x8 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e721b
ror al 0x1
bt di bp
sub bl al
stc
mov [ esp ] 0x8d
mov al [ eax + edi ]
pushfd
sub ebp 0x2
call sub_4e6eed
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x30 ]
jns rwxdata
stc
call sub_4e8101
mov [ esp ] cl
pushfd
pop [ esp + 0x44 ]
call sub_4e73dd
bswap eax
pushfd
call sub_4e914a
mov [ fs : eax ] edx
push 0xb7c59963
mov [ esp + 0x8 ] ah
lea esp [ esp + 0xc ]
jmp rwxdata
cmp edx esp
stc
or ecx ecx
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
push edi
lea esp [ esp + 0x4 ]
je rwxdata
call sub_4e7f99
pushfd
pushad
xor bx ax
cmc
cwde
test al 0x11
sub ebp 0x4
pushfd
mov [ ebp ] eax
pushfd
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_4e80bc
cmp al 0xd
clc
jmp rwxdata
sub eax eax
bt bx 0xd
xchg [ ebp + ecx * 4 ] eax
cmp edx esi
cmc
cmp sp bp
push eax
bt dx 0x7
call sub_4e7db6
add [ eax ] al
add [ eax ] al
pushad
mov [ esp + 0x20 ] edx
mov [ esp ] esi
call sub_4e8a85
btc ax 0x8
btr ax 0xb
shl ah 0x5
fnstsw ax
cmp ch dh
sub ebp 0x2
jmp rwxdata
jmp rwxdata
push 0xb9ca40c1
push 0xaf6c5336
mov [ ebp ] ax
pushad
pushfd
push 0x99663303
lea esp [ esp + 0x30 ]
jmp sub_4e80bc
sub_4e7278
mov [ esp + 0x44 ] eax
pushfd
pushfd
mov [ esp + 0x48 ] ebx
push 0x9a001948
mov [ esp + 0x8 ] dh
mov [ esp + 0x4 ] 0x2
mov [ esp + 0x48 ] esi
mov [ esp ] 0x60a8
mov [ esp ] 0x5
push [ esp ]
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e72eb
test dl ah
cmp ebp eax
call j_sub_4e90e1
shld dx di cl
xchg al dl
movzx eax [ esi - 0x1 ]
bsr dx cx
adc dl 0x3
sub al bl
movzx dx al
clc
movzx dx dl
bts dx bp
add al 0x9e
pushfd
rcl dx 0x5
shl dx 0xb
lea esi [ esi - 0x1 ]
add dx 0x93a7
neg al
jmp sub_4e7654
sub_4e732e
pushfd
jmp rwxdata
mov [ fs : eax ] edx
push 0xb7c59963
mov [ esp + 0x8 ] ah
lea esp [ esp + 0xc ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e73c0
and ebx 0xff0
pushfd
cmc
test edx edx
cmp ebx 0xfe0
jmp rwxdata
push 0x6d6bf94a
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_4e80bc
bsr ebx edi
adc bh ch
rcl bh cl
rcr bx 0xe
xor [ ebp + 0xc ] 0x20
sub_4e7406
push [ esp ]
call sub_4e8b39
jmp rwxdata
pushfd
add al bl
clc
clc
cmp ah 0x92
mov [ esp ] dl
not al
stc
neg al
bt esi ebx
cmc
bt bx di
add al 0x13
stc
stc
add bl al
cmp ebp 0x2b5313d6
sub ebp 0x2
mov [ esp ] 0x6e
mov [ ebp ] ax
mov [ esp ] 0xf6b4
dec esi
pushfd
mov [ esp + 0x4 ] 0x30666113
mov [ esp ] dh
lea esp [ esp + 0x8 ]
jmp sub_4e80bc
sub_4e7413
pushad
mov [ esp + 0x40 ] eax
jmp rwxdata
mov [ esp + 0x3c ] ebx
pushfd
jmp rwxdata
mov [ esp + 0x3c ] esi
mov [ esp + 0x4 ] ch
mov [ esp ] 0xac
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e74c7
bswap edx
pushfd
add edx 0x0
push 0xdf3492e8
mov [ esp ] al
push [ esp + 0x4 ]
pushfd
mov [ esp + 0x18 ] edx
pushad
push 0x13b38fc
mov [ esp ] bl
push [ esp + 0x3c ]
retn 0x40
sub_4e74fc
push 0x1ddf60e7
mov [ esp + 0x8 ] ecx
pushfd
mov [ esp + 0x8 ] eax
pushad
call sub_4e7c17
jmp rwxdata
pushfd
mov [ esp ] dl
mov [ ebp + 0x4 ] eax
call j_sub_4e87d9
push [ esp + 0xc ]
pop [ ebp ]
push ebp
push edx
lea esp [ esp + 0x18 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e751b
mov [ esp + 0x24 ] ebx
mov [ esp + 0x4 ] 0xab72cc10
pushad
call sub_4e8695
mov dx [ ebp ]
cmc
pushfd
call j_sub_4e73b7
pushfd
jmp rwxdata
clc
push [ ebp ]
pop [ esp ]
pushad
jmp rwxdata
pushfd
pushfd
add ebp 0x4
bt dx ax
call sub_4e820a
push ebp
mov [ ebp ] eax
push eax
mov [ esp ] dl
lea esp [ esp + 0x2c ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e753e
push edx
mov [ esp + 0x8 ] dh
mov [ esp + 0x2c ] ecx
jmp rwxdata
mov [ esp + 0x28 ] eax
mov [ esp + 0x4 ] ah
jmp rwxdata
push ebx
push [ esp + 0x4 ]
mov [ esp + 0x2c ] ebx
pushfd
call j_sub_4e76a3
pushfd
sub ebp 0x4
push 0x9923aa
mov [ ebp ] eax
pushad
mov [ esp ] ch
lea esp [ esp + 0x30 ]
jmp sub_4e80bc
sub_4e7654
movsx dx bl
rcl dh cl
ror al 0x1
sets dh
sbb dx 0x1f32
sub bl al
bts dx 0x4
mov dx [ ebp ]
test al cl
call sub_4e825f
pushad
call sub_4e8fef
pushad
mov [ esp + 0x24 ] esi
push 0xe51281a7
mov [ esp ] 0x29
push ebx
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e76a3
mov [ esp + 0x30 ] esi
push edi
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e7ab2
mov [ esp + 0x8 ] edx
pushfd
mov [ esp + 0x8 ] edi
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x8 ] ecx
push [ esp + 0x4 ]
mov [ esp + 0x8 ] eax
jmp rwxdata
mov [ esp + 0x4 ] dh
mov [ esp + 0x4 ] ebx
mov [ esp ] 0x8740
push 0x14dcc18a
jmp rwxdata
pushad
mov [ esp + 0x24 ] esi
push 0xe51281a7
mov [ esp ] 0x29
push ebx
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e7c46
mov [ esp + 0xc ] esi
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e7ccf
dec al
pushad
cmc
call sub_4e71bf
pushfd
pop [ esp + 0x24 ]
lea esp [ esp + 0x24 ]
jno rwxdata
jmp rwxdata
push 0x4aab8746
mov [ esp ] 0xc0
pushfd
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
push 0x82b5739
push 0x5468477c
lea esp [ esp + 0x18 ]
jmp sub_4e80bc
pushfd
push [ esp + 0x4 ]
pop [ ebp ]
pushad
mov [ esp ] 0x6e86
push esp
pushfd
lea esp [ esp + 0x30 ]
jmp sub_4e80bc
sub_4e7e3d
ror al 0x2
cmc
cmc
lea esi [ esi - 0x1 ]
lea edx [ eax + 0x7978602b ]
xor bl al
rcl dx cl
rcl edx 0x4
or dl bl
mov dx 0x2ffa
movzx eax al
bsr dx sp
mov edx [ eax * 4 + rwxdata ]
call sub_4e74c7
sub_4e7e6c
cmp dh 0xd5
call sub_4e847e
cmc
cmp si sp
xor ax bx
bt edx ecx
clc
push 0x704c3e28
xor ax 0x5fa
cmp esp edi
test ch ch
clc
neg ax
jmp rwxdata
lea esi [ esi - 0x2 ]
cmp cl 0xfe
call sub_4e7e6c
push eax
mov eax [ fs : eax ]
push ebp
mov [ ebp ] eax
push edx
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e7e9d
pushad
push 0x3a4676f0
mov [ esp + 0x2c ] rwxdata
call sub_4e87c6
mov [ esp + 0x28 ] eax
jmp rwxdata
push eax
push [ esp ]
mov [ esp + 0x2c ] ebx
mov [ esp + 0x4 ] 0x39
push edx
jmp rwxdata
mov [ esp + 0x2c ] esi
push 0xad29083b
lea esp [ esp + 0x30 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e7eca
lea esp [ esp + 0x50 ]
jne rwxdata
cmp al 0xd
clc
jmp rwxdata
pushfd
xor eax eax
pushfd
call sub_4e7556
inc dx
rdtsc
stc
test ch ch
test bl 0x26
sub ebp 0x8
pushad
mov [ ebp ] edx
pushad
mov [ ebp + 0x4 ] eax
mov [ esp ] si
mov [ esp + 0x4 ] dx
lea esp [ esp + 0x40 ]
jmp sub_4e80bc
sub eax eax
bt bx 0xd
xchg [ ebp + ecx * 4 ] eax
cmp edx esi
cmc
cmp sp bp
push eax
bt dx 0x7
call sub_4e7db6
add [ eax ] al
add [ eax ] al
pushad
mov [ esp + 0x20 ] edx
mov [ esp ] esi
call sub_4e8a85
btc ax 0x8
btr ax 0xb
shl ah 0x5
fnstsw ax
cmp ch dh
sub ebp 0x2
jmp rwxdata
jmp rwxdata
push 0xb9ca40c1
push 0xaf6c5336
mov [ ebp ] ax
pushad
pushfd
push 0x99663303
lea esp [ esp + 0x30 ]
jmp sub_4e80bc
sub_4e7f99
cmp cl 0xf3
sub eax eax
call sub_4e6ee8
call sub_4e7eca
push eax
push esi
push 0x6b6e5c0
pushad
mov [ esp + 0x24 ] ebx
pushfd
jmp rwxdata
mov [ esp + 0x24 ] esi
mov [ esp ] esi
pushad
pushfd
mov [ esp + 0x14 ] ah
lea esp [ esp + 0x48 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e7fca
xchg [ esp + 0x24 ] edx
pushad
call sub_4e6f7e
mov [ eax ] dl
push edi
mov [ esp ] bp
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8118
pushad
not cl
mov ecx [ ebp - 0x4 ]
pushad
lea ebp [ ebp + ecx * 4 ]
pushfd
mov [ ebp ] eax
mov [ esp + 0x8 ] 0xc53f3d1a
push [ esp + 0x1c ]
lea esp [ esp + 0x4c ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8187
xchg [ esp + 0x48 ] edi
xchg di dx
lea esp [ esp + 0x48 ]
jb rwxdata
jmp rwxdata
lea edx [ esp + 0x4cb7f81c ]
push 0xfcb5a768
mov [ esp ] ecx
bswap edi
push eax
pushad
pushad
bswap dx
mov [ esp + 0x3c ] ebx
movzx bx dl
mov [ esp + 0x38 ] esi
lea esp [ esp + 0x38 ]
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push ecx
mov edi 0x93680f97
lea edx [ ecx - 0x4040bdb0 ]
movzx dx al
push eax
pushad
pushad
mov [ esp + 0x3c ] ebx
movzx dx dl
mov [ esp + 0x1c ] 0x8ddf
xchg dh al
lea edi [ ebx + 0x71cc5b1c ]
mov [ esp + 0x38 ] esi
not edi
xchg [ esp + 0x34 ] ebp
push [ esp + 0x1c ]
pushfd
pop [ esp + 0x34 ]
bswap bp
xchg [ esp + 0x30 ] esi
push 0x6836a8a6
push [ rwxdata ]
pop [ esp + 0x30 ]
shr dl cl
movzx bp dl
lea esi [ 0xffffffffac10a1cd ]
mov [ esp + 0x2c ] 0x0
or esi ebp
push 0x2ca37ad8
mov esi [ esp + 0x60 ]
call sub_4e86e4
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e820a
cmc
cmc
push [ esp + 0x2c ]
popfd
pushfd
mov [ esp + 0x4 ] cx
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e825f
add ebp 0x2
lea esp [ esp + 0x8 ]
jle rwxdata
push 0x3193d122
mov [ esp ] cl
pushad
mov [ eax + edi ] dl
mov [ esp ] cl
lea esp [ esp + 0x24 ]
jmp rwxdata
mov [ eax + edi ] dl
push esp
lea esp [ esp + 0x4 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e82b2
call sub_4e8da0
pushad
jmp rwxdata
pushad
mov [ esp + 0x3c ] edx
push 0xf50ae366
jmp rwxdata
mov [ esp + 0x3c ] edi
pushfd
call sub_4e7de4
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4e9025
not [ ebp ]
or ax ax
shl al cl
mov ax [ ebp ]
jmp rwxdata
bt sp 0xc
pushad
sub ebp 0x2
cmp bh 0x77
cmp cl 0x4e
pushfd
cmc
and [ ebp + 0x4 ] ax
jmp rwxdata
pushfd
pop [ esp + 0x24 ]
lea esp [ esp + 0x24 ]
jno rwxdata
jmp rwxdata
push 0x4aab8746
mov [ esp ] 0xc0
pushfd
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
push 0x82b5739
push 0x5468477c
lea esp [ esp + 0x18 ]
jmp sub_4e80bc
pushfd
push [ esp + 0x4 ]
pop [ ebp ]
pushad
mov [ esp ] 0x6e86
push esp
pushfd
lea esp [ esp + 0x30 ]
jmp sub_4e80bc
sub_4e82bd
pushfd
mov [ esp + 0x4 ] edx
jmp rwxdata
push edi
pushfd
mov [ esp + 0x8 ] edi
pushad
pushfd
mov [ esp + 0x28 ] ecx
jmp rwxdata
lea esp [ esp + 0x28 ]
jns rwxdata
jmp rwxdata
pushfd
mov [ esp ] eax
call sub_4e892d
adc dx sp
aad 0xde
test dl bl
mov eax [ ebp ]
shrd edx esp 0x1e
shl edx 0x19
bts dx 0xe
mov edx [ ebp + 0x4 ]
stc
jmp rwxdata
push eax
push 0x1263d467
pushad
call sub_4e751b
bt bx 0x2
add ebp 0x8
call sub_4e732e
push ebp
mov [ esp + 0x20 ] ecx
pushfd
push [ esp ]
mov [ esp ] bh
mov [ esp + 0x24 ] eax
pushad
pushfd
mov [ esp ] ch
mov [ esp + 0x44 ] ebx
push 0x64406dd
jmp rwxdata
push [ esp ]
pushfd
mov [ esp + 0x4c ] esi
mov [ esp + 0x4 ] dh
mov [ esp + 0x4 ] 0x93
lea esp [ esp + 0x4c ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e833a
pushad
call sub_4e707d
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e8371
fild [ ebp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8396
lea esp [ esp + 0x4 ]
je rwxdata
jmp rwxdata
push 0x69cc5f22
mov [ esp ] ebx
pushad
push edx
jmp rwxdata
pushfd
mov [ esp ] ebx
pushfd
mov [ esp ] edx
mov [ esp ] esi
push 0x4871933
pushfd
mov [ esp ] 0x51
mov [ esp ] 0xb2
lea esp [ esp + 0x8 ]
jmp rwxdata
mov [ esp ] ah
mov [ esp + 0x20 ] esi
push [ esp ]
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e83f0
call j_sub_4e85d2
mov al bh
ror al cl
inc al
cmc
mov al [ esi - 0x1 ]
test bh 0x7b
cmp bl 0x59
call j_sub_4e8c55
shl al cl
xor al 0x36
shl dx 0xd
ror dx cl
movzx eax [ esi - 0x1 ]
pushfd
btc dx sp
ror dx 0x9
sub al bl
rcl edx 0xa
rol dl 0x6
push [ esp ]
ror al 0x2
pushad
call sub_4e8c39
push 0x58a04c24
mov [ esp + 0x4c ] esi
pushfd
mov [ esp ] bl
lea esp [ esp + 0x50 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e844c
lea esp [ esp + 0x8 ]
je rwxdata
call sub_4e7f99
pushfd
pushad
xor bx ax
cmc
cwde
test al 0x11
sub ebp 0x4
pushfd
mov [ ebp ] eax
pushfd
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_4e80bc
clc
bt dx dx
jmp rwxdata
pushad
sub eax eax
cmc
call sub_4e8ece
pushad
mov [ esp + 0x3c ] edx
push 0xf50ae366
jmp rwxdata
mov [ esp + 0x3c ] edi
pushfd
call sub_4e7de4
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4e9025
not [ ebp ]
or ax ax
shl al cl
mov ax [ ebp ]
jmp rwxdata
bt sp 0xc
pushad
sub ebp 0x2
cmp bh 0x77
cmp cl 0x4e
pushfd
cmc
and [ ebp + 0x4 ] ax
jmp rwxdata
pushfd
pop [ esp + 0x24 ]
lea esp [ esp + 0x24 ]
jno rwxdata
jmp rwxdata
push 0x4aab8746
mov [ esp ] 0xc0
pushfd
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
push 0x82b5739
push 0x5468477c
lea esp [ esp + 0x18 ]
jmp sub_4e80bc
pushfd
push [ esp + 0x4 ]
pop [ ebp ]
pushad
mov [ esp ] 0x6e86
push esp
pushfd
lea esp [ esp + 0x30 ]
jmp sub_4e80bc
sub_4e8529
push [ esp + 0x50 ]
pop [ ebp ]
mov [ esp ] 0x3c
mov [ esp + 0x4 ] ah
mov [ esp + 0xc ] bh
lea esp [ esp + 0x54 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8592
pop edx
dec esi
seta dh
movzx dx bl
neg al
lea esp [ esp + 0x28 ]
jo rwxdata
lea edx [ esi + 0x655a8d97 ]
sub bl al
shl dx cl
stc
neg dl
bsr dx dx
mov edx [ eax + edi ]
pushfd
pushfd
sub ebp 0x4
call sub_4e80c7
rol dh cl
sub bl al
ror edx 0x15
and dl 0x47
mov edx [ eax + edi ]
pushfd
push 0x3088bc5
sub ebp 0x4
mov [ esp + 0x4 ] ah
mov [ ebp ] edx
push 0x6e9cc5c8
lea esp [ esp + 0xc ]
jmp sub_4e80bc
sub_4e85d2
mov [ esp + 0x4 ] edx
jmp rwxdata
mov [ esp ] 0xcf
mov [ esp ] edi
pushfd
mov [ esp ] ecx
jmp rwxdata
push eax
pushfd
mov [ esp ] ebx
call sub_4e88e7
call sub_4e8118
mov [ esp + 0x4 ] dh
mov [ esp + 0x4 ] ebx
mov [ esp ] 0x8740
push 0x14dcc18a
jmp rwxdata
pushad
mov [ esp + 0x24 ] esi
push 0xe51281a7
mov [ esp ] 0x29
push ebx
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e85ff
pushfd
mov [ ss : eax ] dx
push esp
lea esp [ esp + 0x10 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8622
call sub_4e82bd
movzx bx cl
mov ebx [ esp + 0x30 ]
movzx ax dl
pop ecx
mov eax [ esp + 0x30 ]
mov [ esp + 0x8 ] 0x4f60166
bswap dx
movsx cx al
mov cx 0x5cc7
mov ecx [ esp + 0x34 ]
seta dh
mov dl 0xa2
mov di [ esp + 0x4 ]
pop edx
mov edi [ esp + 0x34 ]
lea edx [ eax * 8 - 0x1b96b969 ]
not dx
lea esp [ esp + 0x38 ]
jl rwxdata
pushad
lea esp [ esp + 0x20 ]
jns rwxdata
pop edx
pushfd
mov [ esp ] ah
push [ esp + 0x4 ]
retn 0x8
mov dh bl
jmp rwxdata
pushad
mov edx [ esp + 0x20 ]
push ecx
mov [ esp + 0x8 ] cl
mov [ esp + 0x8 ] dl
push [ esp ]
push [ esp + 0x2c ]
retn 0x30
call sub_4e914f
dec dl
mov dl 0x46
mov eax [ ebp ]
dec dl
adc dl dh
mov dl [ ebp + 0x4 ]
clc
add ebp 0x6
push 0xfa0b514b
pushfd
pushad
jmp rwxdata
mov [ eax ] dl
push edi
mov [ esp ] bp
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8695
mov [ esp + 0x44 ] esi
pushfd
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e86a4
pushfd
mov [ ebp + 0x4 ] edx
push 0x16192d20
call sub_4e8d0a
shld eax esp cl
mov eax ebp
bt si dx
pushfd
pushad
sub ebp 0x2
pushfd
mov [ esp ] 0xfd35
call sub_4e7082
push 0x3193d122
mov [ esp ] cl
pushad
mov [ eax + edi ] dl
mov [ esp ] cl
lea esp [ esp + 0x24 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e86e4
adc bp dx
neg di
pop ebx
bswap esi
bswap bp
sete bh
cmp al 0xe8
sub esi 0x32e61207
setpe bh
ror esi 0x16
movsx bx cl
rcl bh cl
and di 0xb529
lea ebp [ esp + 0x30 ]
shl di 0xa
sub esp 0x90
rol di cl
dec edi
mov edi esp
neg edx
rcl bx cl
dec bh
mov ebx esi
rcl al 0x4
btc edx esi
adc al 0x7e
add esi [ ebp ]
push 0xfaee17b8
mov al [ esi - 0x1 ]
dec dl
xor al bl
lea edx [ ecx * 4 - 0x5fc4b0f3 ]
add al 0xb4
sbb dh cl
not dh
cmc
neg al
bt ebx eax
call j_sub_4e7e3d
mov [ esp + 0x4 ] 0xa2
push [ esp + 0x40 ]
pop [ ebp ]
mov [ esp + 0x8 ] 0x29
lea esp [ esp + 0x44 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e87a9
add ebp 0x4
pushfd
pushfd
mov [ eax + edi ] edx
mov [ esp ] bh
push [ esp ]
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e88ba
push [ esp + 0x8 ]
lea edi [ ecx + eax - 0x40 ]
push esi
pushfd
mov [ esp ] 0x9a
mov [ esp + 0x18 ] edi
pushad
mov [ esp ] 0xf88c
jmp rwxdata
push [ esp ]
mov edi eax
jmp rwxdata
std
cld
pushfd
call sub_4e720d
sub_4e88e7
mov [ esp ] 0x4f35
mov [ esp ] 0x1d54
mov [ esp ] esi
pushfd
push [ esp ]
pushad
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e8922
jmp rwxdata
mov [ esp + 0x4 ] 0xa2
push [ esp + 0x40 ]
pop [ ebp ]
mov [ esp + 0x8 ] 0x29
lea esp [ esp + 0x44 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e892d
call sub_4e89f8
setpe ah
jl rwxdata
mov ah bl
push ebp
mov edx [ ebp ]
setl al
lea eax [ eax - 0x7e088ab5 ]
mov eax [ ebp + 0x4 ]
pushad
div [ ebp + 0x8 ]
pushad
push 0xb126472c
push ebx
mov [ ebp + 0x4 ] edx
pushfd
mov [ esp ] 0x7
mov [ esp ] bh
mov [ ebp + 0x8 ] eax
lea esp [ esp + 0x50 ]
jg rwxdata
not al
pushad
mov edx [ ebp ]
lahf
mov ax [ esp + 0x8 ]
mov eax [ ebp + 0x4 ]
pushad
pushfd
mov [ esp + 0x8 ] eax
div [ ebp + 0x8 ]
call sub_4e86a4
dec al
shr dl cl
sub dx cx
neg al
clc
sub bl al
push esi
mov edx [ ebp ]
cmp al 0xa6
cmp cl cl
call sub_4e87a9
not ax
aam 0x28
mov ax [ ebp ]
bt bp cx
jmp rwxdata
pushfd
pushfd
pop [ esp ]
jmp rwxdata
pushfd
push 0x5c2cae31
push [ esp ]
pushfd
push [ esp + 0xc ]
pop [ ebp ]
pushad
mov [ esp + 0xc ] 0x4f
push eax
lea esp [ esp + 0x34 ]
jmp rwxdata
cmc
sub ebp 0x2
test cl al
cmc
add [ ebp + 0x4 ] ax
call sub_4e8b48
push 0xc8c4a31a
call sub_4e8eb8
pushfd
mov [ esp ] ebx
pushfd
mov [ esp ] edx
mov [ esp ] esi
push 0x4871933
pushfd
mov [ esp ] 0x51
mov [ esp ] 0xb2
lea esp [ esp + 0x8 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e8a85
pushfd
call sub_4e71b6
jmp rwxdata
mov [ ebp ] ax
pushad
lea esp [ esp + 0x2c ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8ad6
fistp [ ebp ]
pushad
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8b1a
xor bx ax
push 0x76e978f6
sub esp 0xffffffec
jne rwxdata
call sub_4e8ab2
stc
mov [ esp + 0x4 ] 0xf0
add ebp 0x4
jmp rwxdata
cmp esp 0x7c3a5ea0
sub ebp 0x2
call sub_4e8474
push [ esp ]
mov [ esp + 0x4 ] 0x99
mov [ esp + 0x8 ] ch
mov [ esp + 0x24 ] rwxdata
pushad
mov [ esp + 0x14 ] eax
pushfd
mov [ esp + 0x44 ] edx
push edx
mov [ esp + 0x4 ] dl
push 0x9d918b10
push [ esp + 0x4c ]
retn 0x50
sub_4e8b39
mov eax [ ss : eax ]
pushfd
pushad
jmp rwxdata
push [ esp ]
mov [ ebp ] eax
pushfd
push 0x46941476
push 0x590807af
lea esp [ esp + 0x40 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8bff
mov [ esp ] 0xb4
pushfd
call sub_4e7ab2
stc
call sub_4e8101
mov [ esp ] cl
pushfd
pop [ esp + 0x44 ]
call sub_4e73dd
bswap eax
pushfd
call sub_4e914a
mov [ fs : eax ] edx
push 0xb7c59963
mov [ esp + 0x8 ] ah
lea esp [ esp + 0xc ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8c55
sub al bl
clc
push esp
cmp bh 0x17
add al 0x9e
stc
cmp cl 0xdc
stc
cmc
neg al
call sub_4e6ed5
mov [ ebp + 0x4 ] eax
call j_sub_4e90ba
sub_4e8c73
lea esp [ esp + 0x8 ]
jne rwxdata
cmp al 0xd
clc
jmp rwxdata
call sub_4e7f99
pushfd
pushad
xor bx ax
cmc
cwde
test al 0x11
sub ebp 0x4
pushfd
mov [ ebp ] eax
pushfd
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_4e80bc
sub eax eax
bt bx 0xd
xchg [ ebp + ecx * 4 ] eax
cmp edx esi
cmc
cmp sp bp
push eax
bt dx 0x7
call sub_4e7db6
add [ eax ] al
add [ eax ] al
pushad
mov [ esp + 0x20 ] edx
mov [ esp ] esi
call sub_4e8a85
btc ax 0x8
btr ax 0xb
shl ah 0x5
fnstsw ax
cmp ch dh
sub ebp 0x2
jmp rwxdata
jmp rwxdata
push 0xb9ca40c1
push 0xaf6c5336
mov [ ebp ] ax
pushad
pushfd
push 0x99663303
lea esp [ esp + 0x30 ]
jmp sub_4e80bc
sub_4e8da0
pushad
mov ebx esi
bt dx sp
add esi [ ebp ]
add esp 0x28
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8e8b
push [ esp + 0x8 ]
pop [ ebp ]
mov [ esp ] ah
lea esp [ esp + 0xc ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8e9e
mov [ ebp ] eax
mov [ esp ] cl
pushfd
mov [ esp + 0x10 ] 0xda
push 0xad95d563
lea esp [ esp + 0x18 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8eb8
push [ esp + 0x8 ]
pop [ ebp ]
pushad
push 0x67ed3577
lea esp [ esp + 0x30 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e8ee1
dec eax
clc
mov [ esp ] bh
ror eax 0xd
cmp di 0xa0a7
test sp cx
test ch al
pushfd
add ebx eax
stc
cmp ch bh
clc
sub ebp 0x4
clc
call sub_4e7f05
call sub_4e8bff
call sub_4e8545
mov [ esp ] 0xcf
mov [ esp ] edi
pushfd
mov [ esp ] ecx
jmp rwxdata
push eax
pushfd
mov [ esp ] ebx
call sub_4e88e7
call sub_4e8118
mov [ esp + 0x4 ] dh
mov [ esp + 0x4 ] ebx
mov [ esp ] 0x8740
push 0x14dcc18a
jmp rwxdata
pushad
mov [ esp + 0x24 ] esi
push 0xe51281a7
mov [ esp ] 0x29
push ebx
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_4e8f51
mov [ eax + edi ] dx
mov [ esp + 0x4 ] 0xf
lea esp [ esp + 0x38 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e9025
push [ esp + 0x10 ]
lea esp [ esp + 0x20 ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_4e80bc
xor bl 0x74
mov ebx eax
cmc
test dl 0x2f
call sub_4e73c0
xor al 0xb
dec dx
pushad
bswap dx
bswap dx
dec esi
sub dl 0x2a
sub dh dl
xor bl al
jmp rwxdata
mov dx [ ebp ]
cmc
pushfd
call j_sub_4e73b7
pushfd
jmp rwxdata
clc
push [ ebp ]
pop [ esp ]
pushad
jmp rwxdata
pushfd
pushfd
add ebp 0x4
bt dx ax
call sub_4e820a
push ebp
mov [ ebp ] eax
push eax
mov [ esp ] dl
lea esp [ esp + 0x2c ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e90ba
pushfd
pop [ esp + 0x8 ]
lea esp [ esp + 0x8 ]
jo rwxdata
pushad
mov [ esp ] cl
jmp rwxdata
pushad
push [ esp + 0x20 ]
pop [ ebp ]
pushfd
push 0x17206289
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
push [ esp + 0x20 ]
pop [ ebp ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e90e1
mov [ esp ] 0x13
push 0xd972d630
lea esp [ esp + 0x8 ]
ja rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
or dh bl
daa
mov edx esp
clc
xor ax 0x9cf3
lea ecx [ edi + 0x40 ]
lea edi [ ebx - 0x41ead9ef ]
test si bx
adc eax 0xcd7c7b8a
sub ecx edx
xchg edi eax
xchg di ax
lea eax [ ebp - 0x80 ]
cmp ch 0x25
adc di 0xebf8
and al 0xfc
jmp rwxdata
shrd di cx 0x5
dec di
sub eax ecx
bswap di
not edi
pushad
movzx di bl
mov esp eax
lea edi [ eax - 0x778e0c21 ]
movzx di al
bswap di
push ebp
pushfd
pop [ esp ]
movsx di dl
push esi
movzx esi al
push esp
pushfd
mov esi edx
push [ esp + 0x4 ]
call sub_4e88ba
call sub_4e91b2
sub_4e9228
push [ esp + 0x58 ]
popfd
mov [ esp ] 0x1a
lea esp [ esp + 0x5c ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e929b
pushfd
pushfd
mov [ ss : eax ] dl
mov [ esp + 0x18 ] 0xe4c3
lea esp [ esp + 0x38 ]
jmp rwxdata
btc dx 0xb
cmc
ror al cl
mov al [ esi - 0x1 ]
bsf dx dx
bswap dx
xor al bl
movzx edx cl
add al 0xb4
sub dl ah
shrd dx dx 0xa
cmp esi esi
rcr dh 0x1
neg al
rcl dx 0xa
pushad
ror al 0x2
lea edx [ edi - 0x3fe56ec1 ]
bswap dx
sar dl 0x4
lea esi [ esi - 0x1 ]
movzx edx cl
xor bl al
shrd edx ecx 0x10
setb dl
shl dh 0x1
shl dx cl
movzx eax al
btr edx 0x6
rcr dx 0x8
shr dl cl
rcr dl cl
mov edx [ eax * 4 + rwxdata ]
mov [ esp ] 0xdf
pushfd
bswap edx
mov [ esp ] al
bt ax 0xb
stc
add edx 0x0
pushad
mov [ esp + 0x40 ] edx
push ecx
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4e92b0
call sub_4e709f
mov [ esp + 0x24 ] esi
mov [ esp ] esi
pushad
pushfd
mov [ esp + 0x14 ] ah
lea esp [ esp + 0x48 ]
jmp rwxdata
movzx di cl
mov di 0x8fd6
push ebp
sete bh
pushfd
btc bx ax
dec di
sub bp 0xb036
jmp rwxdata
push esi
btc di si
rcl di cl
neg si
push [ rwxdata ]
dec bp
inc ebp
pushad
mov [ esp + 0x1c ] 0x0
bt bx 0x8
mov esi [ esp + 0x4c ]
adc bp 0xd698
call sub_4e6e73
sub_23f312
mov eax [ esp + 0x8 ]
mov [ esp + 0x4 ] ah
lea esp [ esp + 0xc ]
ja rwxdata
pushad
jmp sub_26d36b
jmp rwxdata
call sub_240397
sub_23f666
call sub_2756a6
sub_23f680
mov esp ebp
lea ebp [ eax + 0x40a3dbed ]
bswap bp
push eax
mov ebp [ esp + 0x4 ]
pushfd
push esi
pushfd
push [ esp + 0x14 ]
retn 0x20
j_sub_252cc2
jmp sub_252cc2
sub_23fd16
cmp ebx 0x1
mov [ esp ] 0xc1
call j_sub_26c844
sub_23fdf0
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
call sub_2535b0
push ebp
jmp sub_26e22e
sub_240134
cwde
lea edi [ edi + 0x1 ]
lahf
lahf
mov eax [ esp + 0x4c ]
mov [ esp + 0xc ] 0xb9f99779
call sub_2740d0
sub_24018d
bt si 0x4
xchg ebp eax
inc ah
stc
mov eax ebp
not bl
jmp sub_241397
sub_2403e0
ror bl 0x2
sbb bl dh
xchg ebp eax
bt bp 0x2
aam 0x2
mov eax ebp
neg bl
mov bl 0x1
bt ax cx
cmp ebx ebx
stc
call sub_275df4
j_sub_275d9e
jmp sub_275d9e
sub_240725
call sub_273be2
sub_240851
rol al 0x6
pushfd
call sub_2735a5
sub_240c8b
test edx edx
jmp sub_24189b
sub_240c92
stc
stc
cmp ecx 0xffff
call j_sub_2747df
sub_240c9f
pushad
mov [ esp + 0x14 ] ah
jmp rwxdata
lea esp [ esp + 0x44 ]
ja rwxdata
jmp sub_24018d
mov bl 0xc
inc ecx
setno bl
inc ecx
sub_240d00
lea esp [ esp + 0x8 ]
jae rwxdata
setno bl
inc ecx
jmp sub_24018d
pushad
cmc
cmp eax 0x7f
call sub_240c9f
sub_240d16
neg di
mov edi eax
btc cx 0x8
movzx cx dl
mov ecx 0x104
pushad
xor al al
bt edx esp
[ edi ]
call j_sub_279b02
sub_240d36
mov ebp [ esp + 0x24 ]
pushfd
push [ esp + 0x2c ]
retn 0x40
sub_241178
call sub_273878
sub_24120b
call sub_26e8f1
sub_241397
mov bl 0x1
pushad
call sub_2535b0
sub_2417a9
clc
mov edi [ edi + ecx * 4 ]
call sub_279904
sub_241a32
mov esi [ esp + 0x38 ]
call sub_23f680
pushad
movsx ebp cl
lea ebp [ 0xffffffff925244b7 ]
mov ebp [ esp + 0x20 ]
mov [ esp ] eax
push [ esp + 0x24 ]
retn 0x2c
sub_241c0c
call sub_2743e5
sub_2528a4
call sub_279b69
sub_2528bd
pushad
pushfd
mov [ esp + 0x24 ] 0x263d3796
pushad
push 0xc54c375c
lea esp [ esp + 0x48 ]
jmp sub_4e74f7
sub_252d82
mov [ esp + 0x24 ] eax
pushfd
push [ esp + 0x28 ]
retn 0x2c
sub_252f87
pushfd
jmp rwxdata
mov bl 0x2
lea esp [ esp + 0x40 ]
pushfd
call sub_240f00
sub_2535e9
cmp [ edi - 0x1 ] 0x0
jmp sub_2411d0
sub_2536f3
mov [ esp + 0x4 ] cx
mov [ esp + 0x4 ] 0xf321
adc dl dl
lea esp [ esp + 0x34 ]
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_253a05
mov [ esp ] eax
jmp sub_241178
sub_253a0d
mov [ esp + 0x24 ] 0xb91b267a
jmp sub_26f867
sub_26c844
mov [ esp + 0x14 ] 0xfb
lea esp [ esp + 0x50 ]
je rwxdata
shld bx si 0x1
push eax
rcl bx 0x2
setbe bl
mov bx [ esi ]
call sub_27864f
call sub_273847
sub_26cbc7
stc
bsr bx ax
add esi 0x8
lea esp [ esp + 0x8 ]
movzx bx bl
shl bh 0x1
adc bh 0x47
mov bx [ esi ]
test cl dl
pushad
call sub_26e989
sub_26cfd2
push [ esp ]
push [ esp + 0x4 ]
inc esi
push [ esp + 0x8 ]
pushad
pushfd
call sub_2762fb
cmp esi esp
mov esp 0xd2cc8798
out dx eax
push eax
sub_26dcd3
mov [ esp + 0x4 ] bl
pushfd
rol al 0x7
push 0x5188ba5e
call sub_279b5a
sub_26de21
lea esp [ esp + 0x2c ]
ja rwxdata
call sub_24057e
clc
jmp rwxdata
call sub_26f161
sub_26e1c9
neg al
call sub_27666f
sub_26e1d5
ja rwxdata
stc
cmp bp cx
sub edi 0x4
call sub_276281
test ax di
add al 0x40
sub ebx edi
call sub_240662
sub_26e218
add ecx edx
cmp al ah
mov [ ebp - 0x10 ] ecx
bts ecx 0x13
rcl cx cl
mov ecx [ ebp + 0xc ]
jmp sub_240c92
sub_26e22e
push 0x8f3c5b7
stosb [ edi ]
mov [ esp ] dl
mov [ esp + 0x4 ] 0xba
pushad
push edi
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
call sub_240f00
j_sub_253582
jmp sub_253582
sub_26e77e
push [ esp ]
lea esp [ esp + 0x50 ]
ja rwxdata
pushad
jmp sub_26d36b
pushad
call sub_26eb57
sub_26e791
pushfd
lea esp [ esp + 0x3c ]
ja rwxdata
pushad
jmp sub_26d36b
call sub_274877
sub_26e7d1
pushfd
test dh ah
sub ecx ecx
lea esp [ esp + 0x4 ]
j_sub_270aea
jmp sub_270aea
sub_26e7df
cmp al 0x9
jmp sub_2748f4
sub_26e8c1
mov edi ebx
add al 0xa9
rcl al 0x6
shr al 0x4
setbe al
mov al 0x2e
cmc
push ebp
jmp rwxdata
[ edi ]
pushad
call sub_25255b
sub_26e8e1
not di
bswap si
mov edi [ esp + 0x4 ]
pushfd
call sub_2755a8
sub_26e907
pushad
call sub_240833
sub_26e96b
push 0x534cc118
cmp eax 0x7f
push 0x18e93c4b
lea esp [ esp + 0xc ]
ja rwxdata
jmp sub_24018d
call sub_27357d
sub_26e9dd
cmp [ ebp + 0x14 ] ecx
call sub_27667b
sub_26e9e5
mov [ esp ] ax
bt edi ecx
pushad
add edi eax
cmc
bt cx ax
call sub_2403cb
sub_26ec83
lea esp [ esp + 0x4 ]
jae rwxdata
setno bl
inc ecx
jmp sub_24018d
call sub_26e96b
j_sub_2765be
jmp sub_2765be
sub_26f01f
call sub_2767b3
j_sub_2763cb
jmp sub_2763cb
j_sub_279b02
jmp sub_279b02
sub_26f24b
adc al al
pushfd
mov [ esp ] ch
pushfd
pushfd
lea esp [ esp + 0x34 ]
jae rwxdata
pushad
call sub_27993f
call sub_23fdf0
sub_26f563
mov esi eax
cwde
mov [ esp ] ebx
lea eax [ eax - 0x17ac94ad ]
lea eax [ eax - 0x359f59b5 ]
lea eax [ LocalFree@IAT ]
jmp j_sub_276609
sub_26f867
pushfd
mov [ esp + 0x24 ] 0x914812a8
push 0xe1844a57
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_4e8622
sub_26fc1b
movsx eax dl
setpe ah
push [ ebp - 0x4 ]
pop [ esp + 0x24 ]
movzx ax al
mov [ esp + 0x20 ] ebx
jmp sub_270b2d
sub_270095
mov [ esp ] 0x562f0cdb
pushad
lea esp [ esp + 0x20 ]
jmp sub_4e74f7
sub_2700f2
push 0x79b9a2e2
mov [ esp + 0x2c ] rwxdata
push 0x5629c931
pushfd
push [ eax ]
pop [ esp + 0x30 ]
push edi
push 0xec520c11
pushfd
mov [ esp + 0x4 ] bh
push [ esp + 0x3c ]
retn 0x40
sub_27047e
mov esp ebp
push ebx
push [ esp ]
mov ebp [ esp + 0x8 ]
push [ esp ]
push [ esp + 0x10 ]
retn 0x18
sub_270663
call sub_26e1c9
j_sub_278687
jmp sub_278687
sub_27079f
lea esp [ esp + 0x48 ]
ja rwxdata
stc
cmp bp cx
sub edi 0x4
call sub_276281
shr al cl
sub ebx edi
clc
lea edi [ ecx + 0x6b2e8faf ]
add ebx esp
call sub_26e8c1
sub_2709b2
pushad
pushfd
call sub_274844
j_sub_240d00
jmp sub_240d00
j_sub_278b8c
jmp sub_278b8c
sub_2709da
pushad
bt ax cx
or ebx ebx
pushfd
push 0xead119cb
mov [ esp ] ecx
call sub_26cd17
sub_2709ef
inc al
push 0x551eb9a
cmp al [ edi ]
not ax
bswap ax
setns al
lea edi [ edi + 0x1 ]
pushfd
mov eax [ esp + 0x3c ]
call sub_276294
sub_270aea
pushfd
inc ecx
lea esp [ esp + 0x4 ]
pushad
lea esp [ esp + 0x20 ]
call j_sub_277134
pushad
pushfd
call sub_274c67
j_sub_276609
jmp sub_276609
sub_273008
jmp rwxdata
mov [ esp + 0x20 ] rwxdata
call sub_27598c
pushfd
pushfd
jmp rwxdata
push [ eax ]
pop [ esp + 0x18 ]
mov [ esp + 0x8 ] 0x0
push [ esp + 0x18 ]
retn 0x1c
sub_2730b3
bt ax cx
sub eax eax
bt sp si
ja rwxdata
jmp sub_2709da
or ebx ebx
pushfd
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
call sub_26e8e1
call sub_26f563
sub_273410
dec ecx
jmp sub_270b0f
sub_273416
mov [ esp + 0x4 ] cl
push [ esp + 0x4 ]
inc edi
pushfd
pushfd
lea esp [ esp + 0x1c ]
jmp sub_241767
sub_27357d
not bl
pushfd
inc ecx
inc bl
pushad
mov [ esp + 0x8 ] 0xcd
sete bl
inc ecx
rcl bl cl
call sub_2403e0
sub_2735a5
cmc
sub al 0x6f
jmp rwxdata
clc
pushfd
call sub_2763e5
sub_27379b
neg al
jmp sub_275eca
sub_273878
pushfd
pushfd
lodsb [ esi ]
call sub_2784d0
sub_273998
mov si 0xdda4
pushad
call sub_277c7c
sub_273b45
pushfd
pushfd
sub al 0x30
pushad
jmp rwxdata
call sub_26e7df
j_sub_26d17d
jmp sub_26d17d
sub_273be2
call sub_26de21
sub_273ce6
pushfd
inc ecx
setpe al
push 0xc5c25fa5
mov al 0x10
lea esp [ esp + 0x14 ]
pushad
call sub_27993f
sub_273cfc
pushad
call sub_2528a4
sub_2740bf
lodsb [ esi ]
bt ax bx
rol al 0x6
push ebp
pushfd
sub al 0x6f
jmp rwxdata
pushfd
rol al 0x7
mov [ esp ] ah
mov [ esp ] 0xa3
call sub_26e1e7
sub_2740d0
mov [ esp + 0x8 ] dl
lea esp [ esp + 0x54 ]
ja rwxdata
pushad
jmp sub_26d36b
jmp rwxdata
call sub_270b01
sub_2740e3
mov ebp [ esp + 0x50 ]
mov [ esp + 0x8 ] esp
mov [ esp + 0x4 ] bx
push [ esp + 0x54 ]
retn 0x60
sub_2743e5
push [ esp ]
dec eax
mov [ esp ] sp
shl eax 0x8
setge al
pushad
push 0x6d0be620
lodsb [ esi ]
call sub_270663
sub_27447a
mov edi [ edi + ecx * 4 ]
jmp sub_27599e
sub_274563
mov [ esp + 0x8 ] eax
jmp sub_2740bf
sub_274711
lea esp [ esp + 0x2c ]
call j_sub_277134
pushad
pushfd
call sub_26f24b
sub_274861
mov edi [ edx + 0x1c ]
stc
call sub_23f567
sub_2748e9
add edi eax
cmp bh 0x4c
pushad
call sub_240d5a
sub_2748f4
lea esp [ esp + 0x30 ]
ja rwxdata
call sub_24057e
pushad
cmc
imul edx edx 0xa
call sub_276b45
sub_274c67
adc ecx ecx
jmp sub_279958
j_sub_25370d
jmp sub_25370d
sub_274e22
mov [ esp + 0x20 ] 0xd51b26c9
jmp j_sub_253582
sub_274f97
mov [ esp ] esi
call sub_270b59
sub_275052
call sub_278b3b
sub_275057
mov [ esp + 0x28 ] eax
cwde
jmp sub_26fc1b
sub_2750e1
mov [ esp + 0xc ] eax
sete al
pushad
setno al
lodsb [ esi ]
bt di sp
rol al 0x6
push edi
sub al 0x6f
pushfd
call sub_26dcd3
sub_2752dd
pushad
shrd bx si 0xb
cmp al 0x7d
add esi 0x8
rcl bl cl
mov bx [ esi ]
pushad
shr ebx 0xc
push 0x1a94da9f
bt bx 0xa
call sub_23fd16
sub_275300
call sub_23f312
sub_275493
pushfd
call sub_241553
sub_275499
call j_sub_24093c
sub_2755a8
movzx esi al
call sub_252853
j_sub_26cfd2
jmp sub_26cfd2
j_sub_24093c
jmp sub_24093c
_TLS_Entry_0
pushad
jmp rwxdata
push [ esp ]
call sub_253a0d
sub_2756a6
mov [ esp ] 0xdd
inc ecx
push 0x35c3a695
call sub_252ac9
sub_27598c
pushfd
push eax
push [ eax ]
pop [ esp + 0x28 ]
pushfd
push esp
push esp
push [ esp + 0x34 ]
retn 0x38
sub_27599e
test edi edi
jmp j_sub_26d17d
sub_275d9e
mov [ esp ] 0xc5
push [ eax ]
pop [ esp + 0x30 ]
push 0xc0f46d37
pushfd
pushfd
pushfd
push [ esp + 0x40 ]
retn 0x44
sub_275df4
mov [ esp + 0x2c ] esi
rcr si cl
or esi 0x4f3423ea
mov esi edi
bt bp ax
cmp al 0x86
cmp ah bl
jmp sub_253a1a
sub_275eca
dec al
call j_sub_25370d
j_sub_241d2b
jmp sub_241d2b
sub_276270
push [ esp ]
not al
mov bl 0x2
call sub_273ce6
sub_27627c
call sub_275c07
sub_276281
push [ edi ]
pop [ esp ]
clc
stc
cmp edi ebx
jmp sub_26e1d5
sub_2762ad
call sub_26e218
sub_2762ed
stc
bt si 0xe
cmp ecx [ ebp - 0x8 ]
call sub_252a6f
sub_2762fb
inc edi
pushfd
push ecx
lea esp [ esp + 0x40 ]
jmp sub_241767
sub_276307
call sub_26e9dd
sub_2764c1
lea esp [ esp + 0x4 ]
jae rwxdata
pushfd
setae al
mov al [ esp ]
jmp sub_278464
call sub_276270
sub_276609
push rwxdata
pushfd
push [ eax ]
pop [ esp ]
pushad
pushfd
push [ esp + 0x24 ]
retn 0x28
sub_2767b3
call sub_23f4c9
j_sub_24014b
jmp sub_24014b
sub_276869
mov esi [ eax + 0x3c ]
dec dh
rol dl cl
add esi eax
test si dx
xor dl ah
clc
mov edx [ esi + 0x78 ]
cmc
pushfd
call sub_240c8b
sub_278464
lodsb [ esi ]
jmp sub_27379b
sub_2784d0
call sub_240851
sub_2784df
push ecx
call sub_2762ad
sub_27864f
clc
stc
and ebx 0xfff
call sub_2709c3
sub_278687
cmc
pushfd
add eax edi
pushad
cmp eax edx
pushfd
call sub_27627c
j_sub_2747df
jmp sub_2747df
sub_279927
rcl edi cl
clc
push ecx
mov edi [ edx + 0x24 ]
mov [ esp + 0x4 ] al
bt cx 0x9
test cx dx
call sub_2748e9
sub_27993f
pushfd
call sub_274711
sub_279b5a
pushfd
inc al
bt si si
clc
cmp al [ edi ]
call sub_240134
j_sub_26c844
jmp sub_26c844
sub_4e6e5d
pushfd
not eax
call sub_4e8ee1
mov [ ebp + 0x4 ] ax
jmp sub_4e8c50
j_sub_4e844c
jmp sub_4e844c
sub_4e6ee8
call sub_4e7135
j_sub_4e706a
jmp sub_4e706a
sub_4e707d
call sub_4e7d95
sub_4e7082
mov [ ebp ] ax
mov [ esp ] 0x20
lea esp [ esp + 0x2c ]
jmp sub_4e80bc
sub_4e70c4
mov [ esp ] 0xc4
jmp sub_4e7f28
sub_4e7135
xchg [ ebp ] eax
jmp sub_4e7e9d
sub_4e71b6
mov [ esp + 0x28 ] edi
call sub_4e753e
sub_4e71bf
xor al 0xb
clc
xor bl al
jmp rwxdata
call j_sub_4e6f4a
jmp sub_4e8529
sub_4e72e2
mov [ esp + 0x4 ] dl
call sub_4e83c5
sub_4e7334
mov [ esp ] 0x38
add eax ebx
jmp j_sub_4e6e5d
sub_4e73b7
add ebp 0x2
pushfd
call sub_4e8f51
sub_4e73dd
push [ esp + 0x4 ]
pushfd
push [ esp + 0x50 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0x1419bd2e
mov [ esp + 0x8 ] dl
mov [ esp ] esp
lea esp [ esp + 0x54 ]
jmp sub_4e80bc
sub_4e745f
pushfd
pushad
mov [ ebp ] ax
pushfd
push esi
pushfd
mov [ esp ] cl
lea esp [ esp + 0x34 ]
jmp sub_4e80bc
sub_4e74f7
call sub_4e7515
sub_4e7515
pushad
call sub_4e7fca
sub_4e7556
xchg [ ebp ] eax
pushfd
pushad
push 0xf613d03c
call sub_4e8b58
call sub_4e929b
sub_4e756a
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x50 ]
jmp sub_4e80bc
j_sub_4e6e5d
jmp sub_4e6e5d
sub_4e75d3
mov [ ebp ] ax
jmp sub_4e8772
sub_4e762e
push [ esp + 0x14 ]
pop [ ebp ]
mov [ esp + 0x4 ] ecx
push [ esp + 0x4 ]
lea esp [ esp + 0x1c ]
jmp sub_4e80bc
sub_4e7b12
push [ esp + 0x14 ]
pop [ ebp ]
mov [ esp ] 0x54
push edi
lea esp [ esp + 0x1c ]
jmp sub_4e80bc
j_sub_4e90e1
jmp sub_4e90e1
j_sub_4e85d2
jmp sub_4e85d2
j_sub_4e7e3d
jmp sub_4e7e3d
sub_4e7c17
mov [ esp + 0x4 ] 0xf770b11
mov [ esp + 0x4 ] 0x5372
mov [ esp + 0x28 ] ebx
jmp j_sub_4e706a
j_sub_4e87d9
jmp sub_4e87d9
sub_4e7cca
call sub_4e75d3
j_sub_4e73b7
jmp sub_4e73b7
sub_4e7d95
lea esi [ esi - 0x1 ]
push 0xa0bd6eee
push 0xa6adeca8
mov [ esp ] 0x7f1e
mov [ esp + 0x8 ] 0xe4
lea esp [ esp + 0x34 ]
jmp sub_4e80bc
sub_4e7db6
call sub_4e87e4
jmp sub_4e9250
j_sub_4e8c73
jmp sub_4e8c73
sub_4e7de4
mov [ esp + 0x40 ] ecx
jmp sub_4e92b0
sub_4e7eb9
pushad
pushad
pushfd
pop [ esp + 0x3c ]
call sub_4e8922
sub_4e7ec5
call sub_4e810c
sub_4e7f05
sub esi 0x4
pushfd
call sub_4e756a
pushfd
push [ esp + 0x4 ]
pop [ ebp ]
pushad
mov [ esp ] 0x6e86
push esp
pushfd
lea esp [ esp + 0x30 ]
jmp sub_4e80bc
sub_4e7f28
mov [ esp + 0x4 ] bh
mov [ esp + 0x30 ] eax
pushfd
push 0xd80c67b7
mov [ esp ] bp
pushfd
push [ esp + 0x3c ]
retn 0x40
sub_4e80c7
mov [ esp ] 0x7e
mov [ ebp ] edx
push 0xedb752b8
lea esp [ esp + 0x10 ]
jmp sub_4e80bc
j_sub_4e6f4a
jmp sub_4e6f4a
sub_4e8101
cmp bx si
clc
or ecx ecx
call j_sub_4e844c
sub_4e810c
mov [ esp + 0x4 ] 0xf198
jmp sub_4e8ad6
j_sub_4e76a3
jmp sub_4e76a3
sub_4e82d9
pushad
pushad
mov [ ebp ] ax
push 0x900c345f
dec esi
pushfd
push 0xecf66cf3
mov [ esp + 0x8 ] bh
lea esp [ esp + 0x50 ]
jmp sub_4e80bc
sub_4e83c5
mov [ esp + 0x8 ] edi
mov [ esp + 0x4 ] 0xf60
mov [ esp + 0x4 ] ecx
mov [ esp ] 0xcf
mov [ esp ] 0x68
mov [ esp ] eax
call sub_4e8396
cmc
cmp bh 0x2c
add ebp 0x6
call sub_4e85ff
sub_4e8474
call sub_4e8f35
call sub_4e7ec5
sub_4e847e
not ax
jmp sub_4e8b1a
sub_4e8545
mov ebp [ ebp ]
push esp
mov [ esp ] 0xeaf8
pushad
lea esp [ esp + 0x34 ]
jmp sub_4e80bc
j_sub_4e90ba
jmp sub_4e90ba
sub_4e8613
mov [ esp + 0x4 ] si
pushfd
pop [ esp + 0x14 ]
jmp sub_4e7b12
sub_4e8772
push esi
push 0x2707995e
mov [ esp ] 0xb93d1824
dec esi
mov [ esp + 0xc ] si
lea esp [ esp + 0x50 ]
jmp sub_4e80bc
sub_4e87c6
push esp
pushfd
mov [ esp + 0x34 ] eax
pushfd
push [ esp + 0x38 ]
retn 0x3c
sub_4e87d9
push ebp
pushfd
pop [ esp + 0x8 ]
jmp rwxdata
push [ esp + 0x8 ]
pop [ ebp ]
pushad
push edi
lea esp [ esp + 0x30 ]
jmp sub_4e80bc
sub_4e87e4
sub ecx 0x1
jmp j_sub_4e8c73
sub_4e89f8
pushfd
mov [ esp + 0x8 ] ebx
call sub_4e9223
call j_sub_4e6f4a
jmp sub_4e8529
sub_4e8ab2
cmp dh 0x6a
pushad
clc
sub ebp 0x2
pushad
mov [ esp ] 0x9f23
mov [ esp ] cx
pushfd
mov [ ebp ] ax
mov [ esp ] cl
lea esp [ esp + 0x48 ]
jmp sub_4e80bc
j_sub_4e8c55
jmp sub_4e8c55
sub_4e8b48
call sub_4e70e9
bswap ax
mov eax [ ebp ]
call sub_4e7406
sub_4e8b58
mov [ esp + 0x34 ] rwxdata
jmp sub_4e70c4
sub_4e8c39
movzx dx al
mov dx 0x3397
dec al
inc dh
lea edx [ ebp + 0x2f58791a ]
jmp sub_4e8592
sub_4e8c50
call sub_4e8613
sub_4e8d0a
mov [ ebp + 0x8 ] eax
mov [ esp ] dh
mov [ esp + 0x4 ] 0x66cd
pushfd
pop [ esp + 0x50 ]
jmp rwxdata
jmp sub_4e8529
sub_4e8ece
clc
pushad
xchg [ ebp + ecx * 4 ] eax
clc
push [ esp ]
mov [ esp + 0x44 ] eax
call sub_4e6ebe
sub_4e8f35
push ebp
mov [ ebp ] ax
mov [ esp + 0x8 ] ebx
mov [ esp + 0x4 ] 0x77
lea esp [ esp + 0xc ]
jmp sub_4e80bc
sub_4e8fef
dec esi
pushad
push [ esp ]
push 0x89da9cd2
pushfd
lea esp [ esp + 0x50 ]
jmp sub_4e80bc
sub_4e914a
call sub_4e7334
sub_4e914f
movsx dx dl
mov edx [ esp + 0x4 ]
pushad
push 0x7a9168d6
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_4e91b2
mov [ ebp ] ax
mov [ esp ] 0xe02d7026
pushfd
mov [ esp + 0x4 ] 0x5ef8
lea esi [ esi - 0x1 ]
mov [ esp ] 0xd350
mov [ esp + 0x4 ] cx
lea esp [ esp + 0x8 ]
jmp sub_4e80bc
sub_4e9223
call sub_4e7c46
sub_4e9250
pushfd
pushfd
mov [ esp + 0x4 ] edx
push eax
jmp sub_4e72e2
