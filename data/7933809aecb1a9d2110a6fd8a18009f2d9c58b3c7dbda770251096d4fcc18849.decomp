sub_10001006
push esi
push [ esp + 0xc ]
call sub_1001516f
mov esi eax
inc esi
xor ecx ecx
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10014015
mov ecx [ esp + 0x10 ]
mov [ ecx ] eax
lea ecx [ esi + esi ]
push ecx
push [ esp + 0x18 ]
push eax
call sub_10015190
add esp 0x14
push [ esp + 0xc ]
call [ CoTaskMemFree@IAT ]
pop esi
retn
sub_1000104c
push esi
push [ esp + 0xc ]
call sub_1001516f
mov esi eax
inc esi
xor ecx ecx
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10014015
mov ecx [ esp + 0x10 ]
mov [ ecx ] eax
lea ecx [ esi + esi ]
push ecx
push [ esp + 0x18 ]
push eax
call sub_10015190
add esp 0x14
pop esi
retn
sub_10001093
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor al al
retn
push r--data
push [ eax + 0x4 ]
push eax
call sub_10015640
add esp 0xc
neg eax
sbb al al
inc al
retn
sub_100010b4
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
je r-xdata
pop esi
pop ebx
leave
retn
lea ebx [ edi + 0x18 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax edi
call sub_10001093
test al al
je r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
lea eax [ edi + 0x8 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ edi + 0x16 ]
push eax
movzx eax [ edi + 0x14 ]
push eax
movzx eax [ edi + 0x12 ]
push eax
movzx eax [ edi + 0x10 ]
push eax
push r--data
push [ edi ]
call sub_10015693
mov eax [ ebp + 0xc ]
add esp 0x18
test eax eax
jne r-xdata
lea eax [ eax * 4 + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov [ ebp - 0x8 ] eax
push esi
push ecx
push edx
push eax
mov ecx [ ebp + 0xc ]
shl ecx 0x2
sub esp ecx
mov edx esp
lea esi [ ebp + 0xc ]
add esi 0x4
shr ecx 0x2
push [ ebp + 0x8 ]
push [ edi ]
call sub_10015693
pop ecx
pop ecx
jmp r-xdata
mov eax [ esi ]
mov [ edx ] eax
add esi 0x4
add edx 0x4
dec ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov eax [ ebp - 0x8 ]
push eax
call sub_10015693
mov eax [ ebp - 0x4 ]
add esp eax
pop eax
pop edx
pop ecx
pop esi
push [ edi ]
call sub_10015725
pop ecx
sub_1000117c
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
je r-xdata
pop esi
pop ebx
leave
retn
lea ebx [ edi + 0x18 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax edi
call sub_10001093
test al al
je r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
lea eax [ eax * 4 + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov [ ebp - 0x8 ] eax
push esi
push ecx
push edx
push eax
mov ecx [ ebp + 0xc ]
shl ecx 0x2
sub esp ecx
mov edx esp
lea esi [ ebp + 0xc ]
add esi 0x4
shr ecx 0x2
push [ ebp + 0x8 ]
push [ edi ]
call sub_10015693
pop ecx
pop ecx
jmp r-xdata
mov eax [ esi ]
mov [ edx ] eax
add esi 0x4
add edx 0x4
dec ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov eax [ ebp - 0x8 ]
push eax
call sub_10015693
mov eax [ ebp - 0x4 ]
add esp eax
pop eax
pop edx
pop ecx
pop esi
push [ edi ]
call sub_10015725
pop ecx
sub_10001213
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push 0x1
call sub_10001213
push esi
call sub_100157ac
pop ecx
mov eax esi
pop esi
retn 0x4
push eax
call sub_100157a1
pop ecx
sub_1000123e
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0x1
call sub_1000123e
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_100157a1
pop ecx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_100157a1
pop ecx
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_100157a1
pop ecx
push esi
call sub_100157ac
pop ecx
mov eax esi
pop esi
retn 0x4
push eax
call sub_100157a1
pop ecx
sub_100012ae
push esi
mov esi ecx
mov ecx [ esi + 0x28 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push 0x1
call sub_100012ae
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_100157a1
pop ecx
lea eax [ esi + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
push eax
call sub_100157a1
pop ecx
push esi
call sub_100157ac
pop ecx
mov eax esi
pop esi
retn 0x4
push eax
call [ VariantClear@IAT ]
sub_1000130e
push esi
mov esi ecx
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
push edi
mov edi [ esi + 0x18 ]
test edi edi
je r-xdata
push 0x1
call sub_100012ae
mov edi [ esi + 0x14 ]
test edi edi
je r-xdata
mov ecx edi
call sub_1000130e
push edi
call sub_100157ac
pop ecx
mov eax [ esi ]
pop edi
test eax eax
je r-xdata
mov ecx edi
call sub_1000130e
push edi
call sub_100157ac
pop ecx
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call sub_100157a1
pop ecx
pop esi
retn
push esi
call sub_100157a1
pop ecx
sub_10001381
push 0x4
mov eax sub_1002caf6
call sub_1001948c
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x38 ]
test edi edi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx edi
call sub_10001381
push edi
call sub_100157ac
pop ecx
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_100157a1
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x18 ]
call sub_1000130e
call sub_1001952b
retn
push eax
call [ CoTaskMemFree@IAT ]
sub_100013e6
push ebp
push edi
mov edi [ esi ]
xor ebp ebp
push ebp
push r--data
call sub_1000117c
mov edi [ esi ]
push ebp
push r--data
call sub_100010b4
add esp 0x10
push ebp
push ebp
mov ecx esi
call sub_10001526
mov edi [ esi ]
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebp
je r-xdata
push ebp
push r--data
call sub_100010b4
pop ecx
pop ecx
xor al al
jmp r-xdata
push ebp
push r--data
call sub_100010b4
pop ecx
pop ecx
push eax
push 0x1
push r--data
call sub_100010b4
add esp 0xc
jmp r-xdata
pop edi
pop ebp
retn
mov al 0x1
push ebx
mov eax [ esi + 0x8 ]
xor ecx ecx
cmp [ esi + 0x4 ] ebp
mov [ esi + 0xc ] eax
jle r-xdata
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
xor edx edx
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax ebp
jne r-xdata
pop ebx
mov edi [ esi ]
push edx
lea ebx [ ecx + 0x1 ]
push ebx
push 0x2
push r--data
call sub_1000117c
mov ecx ebx
add esp 0x10
cmp ecx [ esi + 0x4 ]
jl r-xdata
sub_10001491
push 0x4
mov eax sub_1002ca3f
call sub_1001948c
xor ebx ebx
push 0x8
cmp [ edi + 0x4 ] ebx
jne r-xdata
call sub_100157d2
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
call sub_100157d2
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
cmp [ ebp + 0x8 ] ebx
je r-xdata
xor esi esi
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ esi ] ebx
push [ ebp + 0x8 ]
push esi
call sub_1000104c
pop ecx
pop ecx
jmp r-xdata
inc [ edi + 0x4 ]
call sub_1001952b
retn 0x4
mov [ esi ] ebx
push [ ebp + 0x8 ]
push esi
call sub_1000104c
pop ecx
pop ecx
jmp r-xdata
mov eax [ edi + 0xc ]
mov [ eax + 0x4 ] esi
mov eax [ edi + 0xc ]
mov eax [ eax + 0x4 ]
mov [ edi + 0xc ] eax
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
jmp r-xdata
mov [ esi + 0x4 ] ebx
jmp r-xdata
sub_10001526
push 0x14
mov eax sub_1002cad0
call sub_1001948c
mov [ ebp - 0x18 ] ecx
mov eax 0x7d00
xor ebx ebx
push eax
mov [ ebp - 0x10 ] 0x3e8
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] ebx
call sub_10014015
mov edi eax
pop ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
push ebx
push ebx
push 0x2
call WNetOpenEnumW
test eax eax
je r-xdata
xor al al
lea eax [ ebp - 0x20 ]
push eax
push edi
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x14 ]
call WNetEnumResourceW
push [ ebp - 0x14 ]
mov esi eax
call WNetCloseEnum
cmp esi ebx
je r-xdata
push edi
call sub_100157a1
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x2
jae r-xdata
push edi
call sub_100157a1
pop ecx
mov al bl
jmp r-xdata
jne r-xdata
xor esi esi
cmp [ ebp - 0x10 ] ebx
jbe r-xdata
call sub_1001952b
retn 0x8
mov edi [ ebp - 0x1c ]
mov bl 0x1
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
jbe r-xdata
mov ebx [ ebp - 0x1c ]
lea edi [ eax + 0x1 ]
lea esi [ edi + 0x14 ]
mov ecx [ ebp - 0x18 ]
push ebx
push edi
call sub_10001526
inc esi
add ebx 0x20
cmp esi [ ebp - 0x10 ]
jb r-xdata
jmp r-xdata
push [ esi ]
mov edi [ ebp - 0x18 ]
call sub_10001491
inc ebx
add esi 0x20
cmp ebx [ ebp - 0x10 ]
jb r-xdata
sub_100015fb
push ebx
push 0x1c
push 0x0
push esi
call sub_10015500
xor ecx ecx
push 0x4
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10014015
mov ebx edi
shl ebx 0x2
push ebx
push 0x0
push eax
mov [ esi ] eax
call sub_10015500
xor ecx ecx
push 0x4
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10014015
push ebx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_10015500
xor ecx ecx
push 0x4
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10014015
push ebx
push 0x0
push eax
mov [ esi + 0x8 ] eax
call sub_10015500
xor ecx ecx
push 0x10
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10014015
add esp 0x40
mov ecx edi
shl ecx 0x4
push ecx
push 0x0
push eax
mov [ esi + 0xc ] eax
call sub_10015500
xor ecx ecx
push 0x4
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10014015
mov [ esi + 0x10 ] eax
push ebx
push 0x0
push eax
call sub_10015500
xor ecx ecx
push 0x4
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10014015
push ebx
push 0x0
push eax
mov [ esi + 0x14 ] eax
call sub_10015500
add esp 0x2c
mov [ esi + 0x18 ] edi
mov eax esi
pop ebx
retn
sub_100016e8
push esi
push edi
mov esi eax
xor edi edi
cmp [ esi + 0x18 ] edi
jle r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_100157a1
pop ecx
inc edi
cmp edi [ esi + 0x18 ]
jl r-xdata
push [ eax ]
call [ CloseHandle@IAT ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_100157a1
pop ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_100157a1
pop ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_100157a1
pop ecx
mov esi [ esi + 0x14 ]
test esi esi
je r-xdata
push eax
call sub_100157a1
pop ecx
pop edi
pop esi
retn
push esi
call sub_100157a1
pop ecx
sub_10001761
xor eax eax
xor edx edx
cmp [ ecx + 0x18 ] eax
jle r-xdata
mov ecx [ ecx + 0x4 ]
mov edx [ esp + 0x4 ]
mov [ edx ] ecx
retn 0x4
push esi
push edi
inc edx
cmp edx [ ecx + 0x18 ]
jl r-xdata
mov esi [ ecx ]
mov edi [ ecx + 0x4 ]
mov esi [ esi + edx * 4 ]
mov [ edi + eax * 4 ] esi
inc eax
mov esi [ ecx + 0x10 ]
cmp [ esi + edx * 4 ] 0x0
jl r-xdata
pop edi
pop esi
sub_10001795
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ eax ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
push [ eax + ecx * 4 ]
call [ GetExitCodeThread@IAT ]
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
leave
retn 0x4
sub_100017c0
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebx + 0x10 ]
push edi
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
xor edi edi
push 0x28
cmp [ ebx + 0x8 ] edi
jne r-xdata
call sub_100157d2
mov esi eax
pop ecx
cmp esi edi
je r-xdata
call sub_100157d2
mov esi eax
pop ecx
cmp esi edi
je r-xdata
xor esi esi
push 0x28
push edi
push esi
call sub_10015500
add esp 0xc
jmp r-xdata
xor eax eax
push 0x28
push edi
push esi
call sub_10015500
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
push [ ebp + 0xc ]
add eax 0x10
push eax
call sub_1000104c
pop ecx
pop ecx
mov eax [ ebx + 0xc ]
mov [ eax + 0x24 ] esi
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x24 ]
cmp [ ebp + 0xc ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebx + 0xc ] eax
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
je r-xdata
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax ]
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0xc ]
add eax 0x18
push eax
call sub_10001006
pop ecx
pop ecx
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0xc ]
add eax 0x1c
push eax
call sub_10001006
pop ecx
pop ecx
mov eax [ ebx + 0xc ]
mov ecx [ ebp + 0x10 ]
add [ eax + 0x14 ] ecx
push [ ebp - 0x4 ]
inc [ ebx + 0x28 ]
call [ LeaveCriticalSection@IAT ]
leave
retn 0x18
push eax
mov eax [ ebx + 0xc ]
add eax 0x20
push eax
call sub_10001006
pop ecx
pop ecx
sub_100018ad
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebx + 0x4 ]
xor esi esi
push esi
push r--data
call sub_1000117c
mov edi [ ebx + 0x4 ]
push esi
push r--data
call sub_100010b4
add esp 0x10
cmp [ ebx ] esi
je r-xdata
mov edi [ ebx + 0x4 ]
push esi
push r--data
call sub_100010b4
pop ecx
pop ecx
xor al al
push ebx
call sub_100019e7
cmp eax esi
je r-xdata
mov edi [ ebx + 0x4 ]
push eax
push 0x1
push r--data
call sub_100010b4
and [ ebp - 0x14 ] 0x0
mov esi [ ebx + 0x8 ]
add esp 0xc
xor eax eax
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x6 ] ax
jmp r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push esi
call [ StringFromCLSID@IAT ]
push [ ebp - 0x14 ]
mov edi [ ebx + 0x4 ]
push [ esi + 0x18 ]
push [ esi + 0x10 ]
push [ ebp - 0x10 ]
push 0x4
push r--data
call sub_1000117c
add esp 0x18
push [ ebp - 0x14 ]
call [ CoTaskMemFree@IAT ]
push [ esi + 0x20 ]
mov edi [ ebx + 0x4 ]
push [ esi + 0x1c ]
push 0x2
push r--data
call sub_1000117c
add esp 0x10
test [ esi + 0x14 ] 0x1
je r-xdata
mov al 0x1
jmp r-xdata
push 0x2d
push 0x2b
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10015160
leave
retn
push 0x2d
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0xc ] ax
test [ esi + 0x14 ] 0x2
je r-xdata
push 0x2d
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0xa ] ax
test [ esi + 0x14 ] 0x4
je r-xdata
mov edi [ ebx + 0x4 ]
pop eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
push 0x1
push r--data
call sub_1000117c
mov esi [ esi + 0x24 ]
add esp 0xc
inc [ ebp - 0x10 ]
sub_100019e7
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push edi
mov edi [ eax + 0x4 ]
xor ebx ebx
mov [ ebp - 0x4 ] edi
cmp edi ebx
jne r-xdata
mov ecx [ eax + 0x8 ]
push esi
lea esi [ ebp - 0x24 ]
mov [ eax + 0xc ] ecx
call sub_100015fb
xor esi esi
cmp edi ebx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x8 ] ebx
call sub_10001761
push 0xffffffff
push 0x1
push [ ebp - 0x8 ]
push eax
call [ WaitForMultipleObjects@IAT ]
xor esi esi
cmp edi ebx
jle r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop edi
pop ebx
leave
retn 0x4
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x28 ]
lea eax [ ebp - 0x24 ]
call sub_100016e8
mov eax esi
pop esi
push esi
lea eax [ ebp - 0x24 ]
call sub_10001795
cmp eax ebx
je r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
lea eax [ eax + esi * 4 ]
jmp r-xdata
inc esi
cmp esi [ ebp - 0x4 ]
jl r-xdata
push eax
lea eax [ esi + 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
push 0x2
push r--data
call sub_100010b4
add esp 0x10
inc esi
cmp esi edi
jl r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ecx + esi * 4 ] eax
push eax
push ebx
push [ ebp + 0x8 ]
push sub_10001ada
push ebx
push ebx
call [ CreateThread@IAT ]
cmp esi [ ebp - 0xc ]
jge r-xdata
sub_10001ab5
push esi
mov esi eax
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop esi
jmp [ CoUninitialize@IAT ]
mov esi [ esi + 0x4 ]
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_10001ada
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1002ca03
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0xc ]
xor edi edi
cmp eax edi
jne r-xdata
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ecx + 0xc ] eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x14 ] edi
jmp r-xdata
mov esi [ esp + 0x44 ]
cmp esi edi
jne r-xdata
mov esi eax
push 0x28
lea eax [ esp + 0x28 ]
push edi
push eax
call sub_10015500
mov eax [ esp + 0x20 ]
add esp 0xc
push edi
push edi
mov [ esp + 0x38 ] eax
mov [ esp + 0x44 ] r--data
mov [ esp + 0x48 ] edi
mov [ esp + 0x4c ] edi
call [ CoInitializeEx@IAT ]
lea eax [ esp + 0x3c ]
push eax
xor ebx ebx
inc ebx
push ebx
lea eax [ esp + 0x34 ]
push eax
push 0x17
push edi
push r--data
mov [ esp + 0xa0 ] edi
call [ CoCreateInstanceEx@IAT ]
mov [ esp + 0x48 ] eax
cmp eax edi
je r-xdata
mov ecx [ esp + 0x24 ]
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov [ esp + 0x24 ] ecx
xor esi esi
cmp esi edi
je r-xdata
mov eax [ esp + 0x28 ]
mov [ esp + 0x5c ] r--data
mov [ esp + 0x60 ] r--data
mov [ esp + 0x64 ] r--data
mov [ esp + 0x18 ] ebx
mov [ esp + 0x10 ] edi
jmp r-xdata
or [ esp + 0x88 ] 0xffffffff
cmp ecx edi
je r-xdata
mov edx [ esp + 0x10 ]
mov esi [ esp + edx * 4 + 0x5c ]
mov [ esp + 0x48 ] ebx
cmp eax edi
je r-xdata
mov eax [ esp + 0x28 ]
cmp eax edi
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
cmp ecx edi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ esp + 0x24 ]
xor eax eax
mov [ esp + 0x28 ] eax
call [ CoUninitialize@IAT ]
mov eax esi
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_10015160
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ esp + 0x4c ] eax
cmp [ esp + 0x48 ] edi
jne r-xdata
mov eax [ ecx ]
lea edx [ esp + 0x28 ]
push edx
push edi
push edi
push esi
push 0x1
push ecx
mov ebx ecx
call [ eax + 0xc ]
mov esi eax
cmp esi edi
jge r-xdata
shl [ esp + 0x18 ] 0x1
inc [ esp + 0x10 ]
cmp [ esp + 0x10 ] 0x3
jl r-xdata
mov ecx [ eax ]
push eax
mov esi eax
call [ ecx + 0x14 ]
cmp eax edi
jge r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x48 ] esi
push r--data
push ebx
push esi
call sub_10014fd0
xor ebx ebx
inc ebx
or [ esp + 0x88 ] 0xffffffff
cmp ecx edi
je r-xdata
mov [ esp + 0x20 ] edi
push r--data
push esi
push eax
call sub_10014fd0
cmp eax edi
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ esp + 0x28 ]
jne r-xdata
push r--data
push ebx
push esi
call sub_10014fd0
cmp esi edi
xor esi esi
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ esp + 0x20 ] edi
jne r-xdata
mov eax [ esp + 0x1c ]
mov esi [ eax + 0x8 ]
jmp r-xdata
mov ebx [ esp + 0x4c ]
mov eax [ ebx ]
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x6c ]
push ecx
push 0x1
push ebx
call [ eax + 0xc ]
mov esi eax
cmp esi edi
jge r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
cmp esi edi
jne r-xdata
push 0x10
lea eax [ esp + 0x6c ]
push esi
push eax
mov bl 0x1
call sub_10015837
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0x48 ] 0x1
cmp eax edi
je r-xdata
xor bl bl
xor ecx ecx
mov ebx [ esp + 0x1c ]
lea eax [ esp + 0x54 ]
push eax
lea eax [ esp + 0x5c ]
push eax
lea eax [ esp + 0x58 ]
push eax
push [ esp + 0x24 ]
lea eax [ esp + 0x78 ]
push [ esp + 0x24 ]
push eax
call sub_100017c0
xor edi edi
mov ecx [ eax ]
lea edx [ esp + 0x54 ]
push edx
lea edx [ esp + 0x5c ]
push edx
lea edx [ esp + 0x58 ]
push edx
lea edx [ esp + 0x74 ]
push edx
push eax
mov ebx eax
call [ ecx + 0x10 ]
mov esi eax
cmp esi edi
jge r-xdata
mov eax [ esp + 0x18 ]
or [ esi + 0x14 ] eax
jmp r-xdata
mov esi [ esi + 0x24 ]
test bl bl
jne r-xdata
mov edx [ esi + 0x10 ]
cmp ax [ edx + ecx * 2 ]
jne r-xdata
mov [ esp + 0x48 ] esi
push r--data
push ebx
push esi
call sub_10014fd0
xor bl bl
cmp ecx 0x80
jle r-xdata
mov eax [ esp + 0x14 ]
movzx eax [ eax + ecx * 2 ]
cmp ax di
je r-xdata
jmp r-xdata
inc ecx
test bl bl
jne r-xdata
sub_10001df3
push 0x0
mov eax sub_1002cba6
call sub_1001948c
mov ebx [ ebp + 0x8 ]
lea esi [ ebx + 0x4 ]
mov [ ebx ] r--data
call sub_10001368
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
and [ ebx + 0x50 ] 0x0
mov esi [ ebp + 0x18 ]
push [ ebp + 0x14 ]
mov [ ebx + 0x4c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x40 ] eax
mov [ ebx ] r--data
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebx + 0x4 ]
push eax
movsd [ edi ] [ esi ]
call sub_1000104c
pop ecx
pop ecx
mov eax ebx
call sub_1001952b
retn 0x14
sub_10001e4c
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi [ edi + 0x40 ]
mov [ edi + 0x44 ] eax
lea eax [ edi + 0x18 ]
push eax
mov [ edi + 0x48 ] 0x1
call sub_10003d10
mov esi [ edi + 0x4c ]
mov eax [ esi ]
lea ecx [ edi + 0x54 ]
push ecx
push esi
call [ eax + 0xc ]
mov ebx eax
test ebx ebx
jge r-xdata
mov [ edi + 0x48 ] ebx
test ebx ebx
je r-xdata
push r--data
push esi
push ebx
call sub_10014fd0
mov eax [ edi + 0x4c ]
mov ecx [ eax ]
lea edx [ edi + 0x50 ]
push edx
push r--data
push eax
call [ ecx ]
mov eax [ edi + 0x48 ]
test eax eax
jne r-xdata
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
retn
push eax
lea eax [ edi + 0x1c ]
push eax
mov ecx edi
call sub_10001f80
xor eax eax
sub_10001ec1
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ eax + 0x50 ]
push edi
mov edi ecx
test esi esi
je r-xdata
pop edi
pop esi
leave
retn 0x4
push ebx
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
push 0x3
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ ebp - 0x8 ] 0x5
mov eax [ esi ]
push esi
call [ eax + 0x10 ]
mov ebx eax
test ebx ebx
jge r-xdata
pop ebx
jne r-xdata
push r--data
push esi
push ebx
call sub_10014fd0
test ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
mov esi [ VariantClear@IAT ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
movsx ecx [ eax + 0x8 ]
push eax
mov [ edi + 0x8 ] ecx
call esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
movsx ecx [ eax + 0x28 ]
add eax 0x20
push eax
mov [ edi + 0xc ] ecx
call esi
push [ ebp - 0x4 ]
call [ CoTaskMemFree@IAT ]
mov eax [ ebp + 0x8 ]
add eax 0x10
push eax
add edi 0x10
push edi
call [ VariantCopy@IAT ]
mov eax [ ebp + 0x8 ]
add eax 0x10
push eax
call esi
sub_10001f80
push 0x30
mov eax sub_1002c96c
call sub_100194bf
mov edi ecx
mov [ ebp - 0x20 ] edi
mov eax [ edi + 0x44 ]
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x30 ] 0x2
mov [ ebp - 0x24 ] ebx
cmp eax ebx
je r-xdata
cmp [ edi + 0x54 ] 0x1
jne r-xdata
inc [ eax ]
mov [ ebp - 0x30 ] 0x3
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] ebx
mov esi [ edi + 0x4c ]
push 0x1
call sub_10003ce0
or [ ebp - 0x4 ] 0xffffffff
mov [ edi + 0x48 ] eax
cmp eax ebx
jne r-xdata
xor eax eax
call sub_1001952b
retn 0x8
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov esi eax
push eax
mov [ ebp + 0x8 ] esi
call [ ecx + 0x14 ]
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x1c ]
push ecx
push 0x1
mov [ ebp - 0x4 ] 0x9
mov eax [ esi ]
push esi
call [ eax + 0xc ]
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov esi eax
push eax
mov [ ebp - 0x2c ] esi
call [ ecx + 0x14 ]
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x1c ]
push ecx
push 0x1
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
push esi
call [ eax + 0xc ]
mov ebx [ ebp + 0x8 ]
mov [ edi + 0x48 ] eax
test eax eax
jge r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x18 ] eax
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x7
mov esi [ edi + 0x4c ]
call sub_10003ce0
or [ ebp - 0x4 ] 0xffffffff
mov [ edi + 0x48 ] eax
test eax eax
jne r-xdata
push 0x20
cmp [ ebx + 0x18 ] eax
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
push 0x30
jne r-xdata
call sub_100157d2
pop ecx
test eax eax
je r-xdata
call sub_100157d2
pop ecx
test eax eax
je r-xdata
call sub_100157d2
pop ecx
test eax eax
je r-xdata
call sub_100157d2
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
call sub_100012f7
jmp r-xdata
xor eax eax
push eax
call sub_100012f7
jmp r-xdata
xor eax eax
mov esi eax
call sub_10001294
jmp r-xdata
xor eax eax
mov esi eax
call sub_10001294
jmp r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx [ esi ]
mov eax [ edi + 0x4c ]
mov edx [ eax ]
push ecx
push 0x2
push eax
mov [ ebp - 0x38 ] eax
call [ edx + 0x10 ]
mov [ ebp - 0x3c ] eax
test eax eax
jge r-xdata
push r--data
push eax
call sub_10016eb7
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x14 ] eax
mov [ ebp - 0x14 ] eax
mov esi eax
push [ ebp - 0x1c ]
push esi
call sub_10001006
inc [ ebx + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov eax [ esi ]
pop ecx
pop ecx
jne r-xdata
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ ebx + 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
push [ ebp - 0x34 ]
mov [ edi + 0x48 ] eax
lea eax [ esi + 0x4 ]
push eax
call sub_10001006
pop ecx
pop ecx
push [ esi + 0x4 ]
mov ecx esi
mov eax edi
call sub_10001ec1
mov eax [ ebp + 0x8 ]
inc [ ebx + 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0x18 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
push r--data
push [ ebp + 0xc ]
push eax
call sub_10014fd0
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x28 ] eax
mov [ ebp - 0x28 ] eax
mov esi eax
push [ ebp - 0x1c ]
push esi
call sub_10001006
mov eax [ edi + 0x4c ]
pop ecx
pop ecx
mov ecx [ eax ]
lea edx [ ebp - 0x34 ]
push edx
push [ esi ]
mov [ ebp + 0xc ] eax
push eax
call [ ecx + 0x18 ]
mov [ ebp - 0x3c ] eax
test eax eax
jge r-xdata
mov esi eax
mov [ ebp - 0x28 ] esi
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov [ edi + 0x48 ] eax
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
push r--data
push [ ebp - 0x38 ]
push eax
call sub_10014fd0
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
lea edx [ ebp - 0x18 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
mov esi [ ebp - 0x2c ]
jmp r-xdata
cmp [ edi + 0x48 ] 0x0
jl r-xdata
mov [ edi + 0x48 ] eax
xor eax eax
cmp [ edi + 0x48 ] eax
jl r-xdata
mov eax [ ebp + 0xc ]
inc eax
push eax
push esi
mov ecx edi
call sub_10001f80
mov eax [ esi + 0x8 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0xc ]
add [ ebx + 0xc ] eax
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
mov esi [ edi + 0x4c ]
mov ecx [ esi ]
push eax
push 0x1
push esi
call [ ecx + 0x10 ]
test eax eax
jge r-xdata
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
push r--data
push esi
push eax
call sub_10014fd0
sub_100022f0
push 0x0
mov eax sub_1002cba6
call sub_1001948c
mov ebx [ ebp + 0x8 ]
lea esi [ ebx + 0x4 ]
mov [ ebx ] r--data
call sub_10001368
and [ ebp - 0x4 ] 0x0
and [ ebx + 0x40 ] 0x0
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebx + 0x4c ] eax
mov [ ebx ] r--data
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebx + 0x4 ]
push eax
movsd [ edi ] [ esi ]
call sub_1000104c
pop ecx
pop ecx
mov eax ebx
call sub_1001952b
retn 0x10
sub_10002343
mov eax [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0xc ]
lea esi [ edi + 0x40 ]
push esi
mov [ edi + 0x44 ] eax
mov eax [ edi + 0x4c ]
push r--data
mov [ edi + 0x48 ] 0x1
mov ecx [ eax ]
push eax
call [ ecx ]
mov [ edi + 0x48 ] eax
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov esi [ esi ]
lea eax [ edi + 0x18 ]
push eax
call sub_10003d10
push 0x1
mov [ edi + 0x48 ] eax
push 0x0
lea eax [ edi + 0x1c ]
push eax
mov ecx edi
call sub_10002391
xor eax eax
sub_10002391
push 0x28
mov eax sub_1002c941
call sub_100194bf
mov esi ecx
mov [ ebp - 0x28 ] esi
mov ebx [ ebp + 0x8 ]
xor edx edx
mov eax r--data
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x24 ] eax
cmp [ ebp + 0xc ] edx
je r-xdata
mov ecx [ esi + 0x44 ]
mov [ esi + 0x48 ] 0x1
cmp ecx edx
je r-xdata
mov ecx [ ebx + 0x4 ]
mov [ ebp - 0x24 ] ecx
lea edi [ ebp - 0x14 ]
push edi
lea edi [ ebp - 0x20 ]
push edi
lea edi [ ebp - 0x2c ]
push edi
lea edi [ ebp - 0x30 ]
push edi
push edx
push 0x1
push 0x1
push eax
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x34 ]
push edx
push eax
push [ ebp - 0x24 ]
mov [ ebp - 0x4 ] edx
mov esi [ esi + 0x4c ]
mov ecx [ esi ]
push esi
call [ ecx + 0x10 ]
mov edi eax
test edi edi
jge r-xdata
inc [ ecx ]
mov eax [ ebp - 0x28 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax + 0x48 ] edi
test edi edi
jne r-xdata
push r--data
push esi
push edi
call sub_10014fd0
xor eax eax
call sub_1001952b
retn 0xc
mov [ ebp + 0x8 ] edi
cmp [ ebp - 0x20 ] edi
jbe r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
shl edi 0x5
mov eax [ edi + eax + 0x8 ]
sub eax 0x0
mov [ ebp + 0x10 ] 0x1
je r-xdata
push [ ebp - 0x14 ]
call [ CoTaskMemFree@IAT ]
mov [ ebp + 0x10 ] 0x3
dec eax
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov esi [ ebp - 0x1c ]
push 0x20
call sub_100157d2
pop ecx
test esi esi
jne r-xdata
dec eax
jne r-xdata
xor eax eax
push eax
call sub_100012f7
jmp r-xdata
xor eax eax
push eax
call sub_100012f7
jmp r-xdata
mov edi [ ebp + 0x8 ]
inc edi
mov [ ebp + 0x8 ] edi
cmp edi [ ebp - 0x20 ]
jb r-xdata
push 0x30
call sub_100157d2
cmp [ ebp - 0x18 ] 0x0
pop ecx
jne r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp - 0x28 ]
inc edi
push edi
push esi
call sub_10002391
mov eax [ esi + 0x8 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0xc ]
add [ ebx + 0xc ] eax
push r--data
push eax
call sub_10016eb7
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi + 0x14 ] eax
mov [ ebp - 0x1c ] eax
mov esi eax
mov eax [ ebp - 0x14 ]
push [ edi + eax ]
push esi
call sub_1000104c
mov eax [ ebp - 0x14 ]
push [ edi + eax + 0x4 ]
lea eax [ esi + 0x4 ]
push eax
call sub_1000104c
mov eax [ ebp - 0x14 ]
mov eax [ edi + eax ]
mov edi [ ebp + 0xc ]
add esp 0x10
test edi edi
jne r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebx + 0x18 ] eax
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
xor eax eax
mov esi eax
call sub_10001294
jmp r-xdata
xor eax eax
mov esi eax
call sub_10001294
jmp r-xdata
inc [ ebx + 0xc ]
jmp r-xdata
mov edx [ eax + 0x18 ]
mov ecx edi
imul ecx ecx 0x28
add ecx edx
mov edx [ ecx + 0x4 ]
dec edx
je r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x28 ] eax
mov [ ebp - 0x18 ] eax
mov esi eax
mov eax [ ebp - 0x14 ]
push [ edi + eax ]
push esi
call sub_1000104c
mov eax [ ebp - 0x14 ]
push [ edi + eax + 0x4 ]
lea eax [ esi + 0x4 ]
push eax
call sub_1000104c
mov eax [ ebp - 0x14 ]
add eax edi
xor edi edi
add esp 0x10
cmp [ eax + 0x14 ] edi
jbe r-xdata
mov esi eax
mov [ ebp - 0x18 ] esi
mov [ ebx + 0x1c ] eax
jmp r-xdata
movsx ecx [ ecx + 0x18 ]
mov [ esi + 0x8 ] ecx
sub edx 0x4
jne r-xdata
inc edi
cmp edi [ eax + 0x14 ]
jb r-xdata
movsx ecx [ ecx + 0x18 ]
mov [ esi + 0xc ] ecx
jmp r-xdata
sub_100025d8
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
test edi edi
je r-xdata
pop edi
leave
retn
lea eax [ ebx + 0x10 ]
push esi
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
cmp [ ebx + 0x8 ] 0x0
push 0x3c
jne r-xdata
call sub_100157d2
pop ecx
test eax eax
je r-xdata
call sub_100157d2
pop ecx
test eax eax
je r-xdata
xor eax eax
mov esi eax
call sub_10001368
jmp r-xdata
xor eax eax
mov esi eax
call sub_10001368
jmp r-xdata
mov ecx [ ebx + 0xc ]
mov [ ecx + 0x38 ] eax
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x38 ]
mov [ ebx + 0xc ] eax
mov ecx [ edi + 0x14 ]
mov [ eax + 0x14 ] ecx
push [ edi ]
xor esi esi
mov [ edi + 0x14 ] esi
push [ ebx + 0xc ]
call sub_1000104c
mov eax [ ebx + 0xc ]
pop ecx
pop ecx
mov ecx [ edi + 0x30 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edi + 0x34 ]
mov [ edi + 0x30 ] esi
mov eax [ ebx + 0xc ]
mov [ eax + 0x34 ] ecx
mov ecx [ edi + 0x20 ]
mov [ edi + 0x34 ] esi
mov eax [ ebx + 0xc ]
push [ ebp - 0x4 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edi + 0x24 ]
mov eax [ ebx + 0xc ]
mov [ eax + 0x24 ] ecx
lea esi [ edi + 0x4 ]
mov edi [ ebx + 0xc ]
add edi 0x4
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc [ ebx + 0x28 ]
call [ LeaveCriticalSection@IAT ]
pop esi
mov [ ebx + 0x8 ] eax
jmp r-xdata
sub_10002699
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
push 0x9
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
pop eax
cmp ecx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x18 ] ax
test ecx ecx
jbe r-xdata
push edx
lea eax [ ebp - 0x18 ]
push eax
push r--data
push [ ebp - 0x1c ]
call sub_10015693
add esp 0x10
push eax
push edx
lea eax [ ebp - 0x18 ]
push eax
push r--data
push [ ebp - 0x1c ]
call sub_10015693
add esp 0x14
jmp r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + ecx * 2 - 0x18 ] ax
jmp r-xdata
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
shr ecx 0x1
lea edi [ ebp - 0x18 ]
[ edi ]
adc ecx ecx
[ edi ]
mov esi [ ebx + 0x1c ]
jmp r-xdata
mov edi [ ebp + 0x14 ]
inc edi
mov esi [ ebx + 0x18 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov ecx [ ebp - 0x20 ]
push edi
push esi
push [ esi ]
push [ ebp - 0x1c ]
call sub_10002699
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
push [ esi + 0x4 ]
lea eax [ ebp - 0x18 ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi ]
push eax
push r--data
push [ ebp - 0x1c ]
call sub_10015693
mov esi [ esi + 0x28 ]
add esp 0x1c
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn 0x10
sub_10002782
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
inc eax
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x20
push eax
mov esi ecx
call sub_10016eee
push r--data
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_10015640
add esp 0x1c
test eax eax
jg r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10015160
leave
retn 0x4
mov eax [ esi + 0x14 ]
movzx ecx [ eax + 0x28 ]
push ecx
movzx ecx [ eax + 0x26 ]
push ecx
movzx ecx [ eax + 0x24 ]
push ecx
push [ eax + 0x2c ]
push [ esi ]
push r--data
push [ ebp - 0x48 ]
call sub_10015693
mov eax [ esi + 0x14 ]
push [ eax + 0x18 ]
push r--data
push [ ebp - 0x48 ]
call sub_10015693
mov eax [ esi + 0x14 ]
push [ eax + 0x1c ]
push r--data
push [ ebp - 0x48 ]
call sub_10015693
mov eax [ esi + 0x14 ]
push [ eax + 0x20 ]
push r--data
push [ ebp - 0x48 ]
call sub_10015693
add esp 0x40
push 0x0
add esi 0x18
push esi
push r--data
push [ ebp - 0x48 ]
mov ecx edi
call sub_10002699
push [ ebp - 0x48 ]
call sub_10015725
pop ecx
sub_10002850
push edi
mov edi [ esi ]
push 0x0
push r--data
call sub_1000117c
mov edi [ esi ]
push 0x0
push r--data
call sub_100010b4
add esp 0x10
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov al 0x1
pop edi
retn
push esi
call sub_100028f9
test eax eax
je r-xdata
cmp [ esi + 0x28 ] 0x0
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
jle r-xdata
push ebx
xor ebx ebx
inc ebx
push [ eax ]
push ebx
push 0x2
push r--data
call sub_1000117c
add esp 0x10
push [ ecx + 0x2c ]
push [ eax ]
push ebx
push 0x3
push r--data
call sub_1000117c
mov edi [ esi ]
push ebx
push 0x1
push r--data
call sub_1000117c
mov ecx [ esi + 0xc ]
add esp 0x20
lea eax [ ebx - 0x1 ]
push eax
mov edi esi
call sub_10002782
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x14 ]
mov edi [ esi ]
test ecx ecx
je r-xdata
pop ebx
mov eax [ esi + 0xc ]
mov eax [ eax + 0x38 ]
inc ebx
mov [ esi + 0xc ] eax
lea eax [ ebx - 0x1 ]
cmp eax [ esi + 0x28 ]
jl r-xdata
sub_100028f9
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
push edi
mov edi [ eax + 0x28 ]
mov [ ebp - 0x4 ] edi
test edi edi
jne r-xdata
mov ecx [ eax + 0x8 ]
push esi
lea esi [ ebp - 0x28 ]
mov [ eax + 0xc ] ecx
call sub_100015fb
xor esi esi
xor edi edi
cmp [ ebp - 0x4 ] esi
jle r-xdata
or eax 0xffffffff
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10001761
mov [ ebp - 0xc ] 0x2710
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ ebp - 0x1c ]
mov [ esi + ecx + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + eax + 0x4 ] edi
mov eax [ ebp - 0x1c ]
mov [ esi + eax ] ebx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + edi * 4 ]
mov [ esi + ecx + 0x8 ] eax
cmp edi [ ebp - 0x10 ]
jge r-xdata
pop edi
pop ebx
leave
retn 0x4
xor esi esi
cmp [ ebp - 0x4 ] esi
jle r-xdata
push [ ebp - 0xc ]
push 0x1
push [ ebp - 0x8 ]
push eax
call [ WaitForMultipleObjects@IAT ]
xor ebx ebx
cmp [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] 0x3e8
jle r-xdata
xor eax eax
mov eax [ ebp - 0x20 ]
lea eax [ eax + edi * 4 ]
jmp r-xdata
mov ebx [ ebx + 0x28 ]
lea eax [ ebp - 0x28 ]
call sub_100016e8
mov eax ebx
pop esi
push esi
lea eax [ ebp - 0x28 ]
call sub_10001795
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10001761
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
mov esi ebx
shl esi 0x2
mov eax [ esi + eax ]
test eax eax
jl r-xdata
inc edi
add esi 0x10
cmp edi [ ebp - 0x4 ]
jl r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ecx + edi * 4 ] eax
mov ecx [ ebp - 0x1c ]
push eax
xor eax eax
push eax
add ecx esi
push ecx
push sub_10002c4d
push eax
push eax
call [ CreateThread@IAT ]
cmp edi [ ebp - 0x10 ]
jge r-xdata
inc esi
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov edi [ ebx ]
push eax
lea eax [ esi + 0x1 ]
push eax
push 0x2
push r--data
call sub_100010b4
add esp 0x10
mov ebx [ ebp + 0x8 ]
inc ebx
cmp ebx [ ebp - 0x4 ]
jl r-xdata
mov ecx [ ebp - 0x14 ]
add ecx esi
cmp eax [ ecx ]
jle r-xdata
mov eax [ ebp - 0x28 ]
push 0xfffffffe
push [ esi + eax ]
call [ TerminateThread@IAT ]
mov eax [ ebp - 0x18 ]
or [ esi + eax ] 0xffffffff
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
push 0x1
push r--data
call sub_100010b4
add esp 0xc
mov [ ecx ] eax
jmp r-xdata
sub_10002a6c
push esi
mov esi eax
mov eax [ esi ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call sub_10002ba0
pop esi
jmp [ CoUninitialize@IAT ]
push esi
call sub_10002bfd
sub_10002a8f
push 0x4
mov eax sub_1002cd38
call sub_1001948c
mov esi ecx
mov ebx [ CoCreateInstanceEx@IAT ]
or [ esi + 0x30 ] 0xffffffff
lea edi [ esi + 0x18 ]
push edi
push 0x1
lea eax [ esi + 0x8 ]
push eax
push 0x17
lea ecx [ esi + 0x34 ]
push 0x0
push ecx
mov [ edi ] r--data
call ebx
or [ ebp - 0x4 ] 0xffffffff
xor ecx ecx
mov [ esi + 0x30 ] eax
cmp eax ecx
je r-xdata
push 0x50
call sub_100157d2
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
push edi
push 0x2
lea eax [ esi + 0x8 ]
push eax
push 0x17
mov [ edi ] r--data
push ecx
lea edi [ esi + 0x34 ]
push edi
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ecx
call ebx
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x30 ] eax
test eax eax
je r-xdata
xor eax eax
lea eax [ esi + 0x34 ]
push eax
push [ esi + 0xc ]
push [ esi + 0x1c ]
push [ ebp - 0x10 ]
call sub_100022f0
jmp r-xdata
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov eax 0xffffff03
jmp r-xdata
mov [ esi + 0x4 ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov eax 0xffffff04
jmp r-xdata
call sub_1001952b
retn 0x4
push 0x58
call sub_100157d2
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
mov esi [ esi + 0x1c ]
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
mov eax 0xffffff05
jmp r-xdata
xor eax eax
push edi
push [ esi + 0xc ]
push [ esi + 0x28 ]
push [ esi + 0x1c ]
push eax
call sub_10001df3
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ esi + 0x30 ]
mov [ esi ] eax
jmp r-xdata
sub_10002ba0
push 0x0
mov eax sub_1002cba6
call sub_1001948c
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_10001381
push esi
call sub_100157ac
pop ecx
mov eax esi
call sub_1001952b
retn 0x4
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_10002bfd
push 0x0
mov eax sub_1002cba6
call sub_1001948c
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_10001381
push esi
call sub_100157ac
pop ecx
mov eax esi
call sub_1001952b
retn 0x4
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_10002c4d
push 0x68
mov eax sub_1002d0fa
call sub_100194f5
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
and [ ebp - 0x6c ] 0x0
mov esi [ ebx ]
mov edi [ ebx + 0xc ]
inc eax
push eax
push 0x1
push r--data
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
call sub_100010b4
add esp 0xc
lea eax [ esi + 0x10 ]
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x4 ]
mov esi [ eax + 0xc ]
mov eax [ esi + 0x10 ]
mov edx [ ebp - 0x68 ]
lea edi [ ebp - 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x70 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
test ecx ecx
je r-xdata
lea eax [ edx + 0x10 ]
push eax
call [ LeaveCriticalSection@IAT ]
push 0x44
lea eax [ ebp - 0x54 ]
push 0x0
push eax
call sub_10015500
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x48 ] eax
lea esi [ ebp - 0x64 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0xc
movsd [ edi ] [ esi ]
push 0x2
xor edi edi
push edi
call [ CoInitializeEx@IAT ]
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] edi
call sub_10002a8f
mov esi eax
cmp esi edi
je r-xdata
mov ecx [ ecx + 0x24 ]
mov [ eax + 0xc ] ecx
mov eax [ ebx + 0x8 ]
inc [ eax ]
push [ ebx + 0x8 ]
mov esi [ ebp - 0x6c ]
mov eax [ esi ]
push esi
call [ eax ]
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov ebx [ ebp - 0x68 ]
add esp 0xc
call sub_100025d8
mov esi [ ebp - 0x74 ]
mov eax [ esi + 0x4 ]
mov edi [ esi + 0xc ]
inc eax
push eax
push 0x1
push r--data
call sub_100010b4
mov eax [ esi + 0x8 ]
or [ eax ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
xor esi esi
add esp 0xc
cmp [ ebp - 0x54 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x54 ] edi
je r-xdata
cmp [ ebp - 0x50 ] esi
jmp r-xdata
push [ ebp - 0x54 ]
call sub_10002ba0
cmp [ ebp - 0x50 ] edi
push [ ebp - 0x54 ]
call sub_10002ba0
je r-xdata
call [ CoUninitialize@IAT ]
mov eax esi
call sub_1001953f
retn 0x4
push [ ebp - 0x50 ]
call sub_10002bfd
sub_10002d80
push ebx
push edi
push 0x10
xor ebx ebx
push ebx
push esi
call sub_10015500
mov eax [ esp + 0x18 ]
add esp 0xc
push ebx
push ebx
mov [ esi ] eax
call [ CoInitializeEx@IAT ]
push 0x10
call sub_100157d2
mov edi eax
pop ecx
cmp edi ebx
je r-xdata
xor edi edi
mov ebx [ esi ]
push 0x10
push 0x0
push edi
call sub_10015500
add esp 0xc
mov [ edi ] ebx
jmp r-xdata
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop ebx
retn 0x4
sub_10002dcb
push ebp
mov ebp [ DeleteCriticalSection@IAT ]
push esi
push edi
mov edi eax
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
push ebx
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov edi [ edi + 0x4 ]
test edi edi
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call ebp
push esi
call sub_100157ac
pop ecx
pop ebx
mov ecx ebx
call sub_10001381
push ebx
call sub_100157ac
pop ecx
pop edi
pop esi
pop ebp
jmp [ CoUninitialize@IAT ]
mov ecx [ edi + 0x8 ]
test ecx ecx
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call ebp
push esi
call sub_100157ac
pop ecx
push 0x1
call sub_1000123e
push edi
call sub_100157ac
pop ecx
push 0x1
call sub_10001213
sub_10002e48
push ebp
mov ebp esp
push ecx
cmp [ edi + 0x4 ] 0x0
push ebx
push esi
je r-xdata
mov ebx [ edi + 0x8 ]
test ebx ebx
je r-xdata
push 0x2c
call sub_100157d2
mov esi eax
pop ecx
test esi esi
je r-xdata
xor al al
call sub_100018ad
mov bl al
test bl bl
je r-xdata
xor esi esi
mov eax [ edi + 0x4 ]
mov ebx [ edi ]
push 0x2c
push 0x0
push esi
mov [ ebp - 0x4 ] eax
call sub_10015500
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
add esp 0xc
lea eax [ esi + 0x10 ]
push eax
mov [ esi + 0x4 ] ebx
call [ InitializeCriticalSection@IAT ]
jmp r-xdata
mov al bl
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov [ edi + 0x8 ] esi
pop esi
pop ebx
leave
retn
and [ edi + 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
push esi
call sub_100157ac
pop ecx
push 0x1
call sub_10001213
sub_10002ecc
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi eax
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov edi [ edi + 0xc ]
test edi edi
je r-xdata
push 0x2c
call sub_100157d2
mov esi eax
pop ecx
test esi esi
je r-xdata
xor al al
mov esi edi
call sub_10002850
test al al
je r-xdata
xor esi esi
mov eax [ edi + 0x8 ]
push ebx
mov ebx [ edi ]
push 0x2c
push 0x0
push esi
mov [ ebp - 0x4 ] eax
call sub_10015500
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
add esp 0xc
lea eax [ esi + 0x10 ]
push eax
mov [ esi ] ebx
call [ InitializeCriticalSection@IAT ]
pop ebx
jmp r-xdata
mov al 0x1
jmp r-xdata
mov [ edi + 0xc ] esi
pop edi
pop esi
leave
retn
sub_10002f34
push 0x58
mov eax sub_1002d889
call sub_1001948c
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] r--data
call sub_10012d76
mov edi eax
mov [ ebp - 0x28 ] edi
push r--data
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x1
call sub_100032b9
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x4c ] 0x8
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x18 ] edi
jae r-xdata
push eax
push 0x215
push edi
call [ FindResourceW@IAT ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
call sub_100038ef
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x1c ] ebx
sete al
cmp al bl
je r-xdata
lea eax [ ebp - 0x60 ]
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10003c5b
push ebx
push 0x1
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000339d
lea ebx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
call sub_10012e83
push r--data
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x4
call sub_100032b9
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x24 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
call sub_10012d22
pop ecx
xor eax eax
add eax 0x4
jmp r-xdata
mov ebx [ ebp - 0x10 ]
lea ecx [ ebp - 0x48 ]
push ecx
push eax
call sub_10004133
pop ecx
pop ecx
xor ebx ebx
inc ebx
push 0x0
push ebx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x14 ] ebx
call sub_1000339d
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] bl
call sub_10003cb0
mov eax [ ebp - 0x10 ]
call sub_1001952b
retn
sub_1000303f
push esi
push 0x0
push 0x1
lea ecx [ edi + 0x38 ]
call sub_10003c5b
push 0x0
push 0x1
lea esi [ edi + 0x1c ]
call sub_1000339d
push 0x0
push 0x1
mov esi edi
call sub_1000339d
pop esi
retn
sub_10003065
push 0xe0
mov eax sub_1002da62
call sub_100194f5
mov eax [ ebp + 0x8 ]
xor edi edi
push r--data
lea esi [ ebp - 0xd0 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x70 ] edi
call sub_100032b9
xor ebx ebx
lea eax [ ebp - 0x4c ]
inc ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_10012fb1
pop ecx
push edi
push ebx
mov [ ebp - 0x4 ] 0x3
call sub_1000339d
lea edx [ ebp - 0x4c ]
lea ecx [ ebp - 0xec ]
call sub_100130da
push r--data
push eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10003675
add esp 0xc
push edi
push ebx
lea esi [ ebp - 0xec ]
call sub_1000339d
cmp [ ebp - 0x18 ] 0x8
mov esi [ ebp - 0x2c ]
jae r-xdata
push 0x34
lea eax [ ebp - 0xb4 ]
push edi
push eax
call sub_10015500
add esp 0xc
push r--data
lea eax [ ebp - 0xb4 ]
push esi
push eax
mov [ ebp - 0xb0 ] esi
call sub_10015640
add esp 0xc
test eax eax
jg r-xdata
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x84 ] 0x0
jne r-xdata
lea eax [ ebp - 0xac ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0xa0 ]
push eax
movzx eax [ ebp - 0xa2 ]
push eax
movzx eax [ ebp - 0xa4 ]
push eax
push r--data
push [ ebp - 0xb4 ]
call sub_10015693
add esp 0x14
push [ ebp - 0xb4 ]
call sub_10015725
pop ecx
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x84 ] bl
call [ InitializeCriticalSection@IAT ]
lea eax [ ebp - 0xb4 ]
push eax
lea esi [ ebp - 0x80 ]
call sub_10002d80
mov [ ebp - 0x4 ] 0x8
mov esi [ ebp - 0x7c ]
call sub_100013e6
lea edi [ ebp - 0x80 ]
call sub_10002e48
mov eax edi
call sub_10002ecc
lea ecx [ ebp - 0x30 ]
lea edi [ ebp - 0x68 ]
call sub_100131f3
mov [ ebp - 0x4 ] 0x9
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x6c ]
push r--data
call sub_100038ef
jmp r-xdata
push eax
call [ DeleteFileW@IAT ]
mov ecx [ ebp - 0x6c ]
lea eax [ ebp - 0x68 ]
push eax
call sub_10003bfd
xor edi edi
push edi
push ebx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x70 ] ebx
call sub_10003c5b
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_10002dcb
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x9c ]
push eax
call [ DeleteCriticalSection@IAT ]
push edi
push ebx
lea esi [ ebp - 0x30 ]
call sub_1000339d
push edi
push ebx
lea esi [ ebp - 0x4c ]
call sub_1000339d
mov eax [ ebp - 0x6c ]
call sub_1001953f
retn
runDll
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x9c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x98 ] eax
lea eax [ esp + 0x3c ]
push edi
push eax
call sub_10002f34
pop ecx
lea eax [ esp + 0x8 ]
push eax
call sub_10003065
pop ecx
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x60 ]
push eax
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x4c ]
call sub_100042e9
lea eax [ esp + 0x30 ]
add esp 0xc
push eax
call sub_10008bd6
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x2c ]
call sub_10003c5b
push 0x0
push 0x1
lea ecx [ esp + 0x10 ]
call sub_10003c5b
lea edi [ esp + 0x40 ]
call sub_1000303f
mov ecx [ esp + 0x9c ]
pop edi
xor ecx esp
xor eax eax
call sub_10015160
mov esp ebp
pop ebp
retn
sub_10003311
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
cmp [ ebx + 0x14 ] eax
jae r-xdata
mov edi [ ebx + 0x14 ]
mov eax [ ebp + 0x8 ]
sub edi eax
cmp [ ebp + 0xc ] edi
jae r-xdata
call sub_100140a7
cmp esi ebx
jne r-xdata
mov edi [ ebp + 0xc ]
call sub_100034e0
test al al
je r-xdata
push 0xffffffff
add edi eax
call sub_1000344d
push [ ebp + 0x8 ]
xor edi edi
call sub_1000344d
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0x8 ]
lea edx [ ebx + edx * 2 ]
push edx
push ecx
push eax
mov eax edi
call sub_10003806
add esp 0xc
mov ecx edi
mov eax esi
call sub_100034c8
sub_1000339d
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
mov eax esi
mov [ esi + 0x18 ] 0x7
call sub_100034c8
retn 0x8
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ esp + 0x8 ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_100157ac
pop ecx
pop edi
push edi
push 0x8
push eax
mov eax [ esp + 0x18 ]
call sub_10003806
add esp 0xc
sub_100033e4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
push ebx
mov ecx esi
mov edi eax
call sub_100035ef
test al al
je r-xdata
call sub_100034e0
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub ebx eax
push edi
sar ebx 0x1
push ebx
mov eax esi
mov ecx esi
call sub_10003311
jmp r-xdata
push ebx
push ecx
push eax
mov eax edi
call sub_10003806
add esp 0xc
mov ecx edi
mov eax esi
call sub_100034c8
sub_1000344d
push ebp
mov ebp esp
push ecx
push ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0x8 ]
jae r-xdata
call sub_100140a7
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov [ ebp + 0x8 ] eax
mov eax esi
leave
retn 0x4
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ ebp - 0x4 ] edx
mov ebx [ edx ]
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
sub eax ebx
add eax eax
push eax
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x4 ]
lea eax [ edi + ebx ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ ebp - 0x8 ]
sub ecx edi
add ecx ecx
push ecx
lea eax [ eax + edi * 2 ]
push eax
call sub_10017193
mov ecx [ esi + 0x14 ]
add esp 0x10
sub ecx ebx
mov eax esi
call sub_100034c8
pop ebx
mov edx [ edx ]
cmp ecx 0x8
jb r-xdata
sub_100034e0
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_1001406f
test edi edi
jne r-xdata
push [ esi + 0x14 ]
push edi
push esi
call sub_10003514
jmp r-xdata
xor eax eax
cmp eax edi
sbb eax eax
neg eax
retn
xor ecx ecx
mov eax esi
call sub_100034c8
sub_10003514
push 0x8
mov eax sub_1002cb11
call sub_100194bf
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax edi
pop ebx
div ebx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov edi [ ebp + 0xc ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ edi + 0x1 ]
call sub_1000362b
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
lea edi [ edx + ecx ]
push 0x0
push 0x1
call sub_1000339d
mov ecx [ ebp + 0x10 ]
mov eax esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x18 ] edi
call sub_100034c8
call sub_1001952b
retn 0xc
cmp [ esi + 0x18 ] 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp + 0x10 ]
push ebx
call sub_10003806
add esp 0xc
sub_100035ef
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_1000362b
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea eax [ ecx + ecx ]
push eax
call sub_100157d2
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10017015
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_1001905a
int3
sub_10003675
push 0x20
mov eax sub_1002cb83
call sub_1001948c
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea esi [ ebp - 0x2c ]
call sub_100032e3
mov esi eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
call sub_1001516f
pop ecx
push [ ebp + 0x10 ]
mov ebx eax
mov eax esi
call sub_100036c9
mov esi [ ebp + 0x8 ]
push eax
call sub_100032e3
push 0x0
push 0x1
lea esi [ ebp - 0x2c ]
call sub_1000339d
mov eax [ ebp + 0x8 ]
call sub_1001952b
retn
sub_100036c9
push esi
push edi
mov edi [ esp + 0xc ]
mov esi eax
push edi
mov ecx esi
call sub_100035ef
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_1001406f
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
retn 0x4
sub edi eax
push ebx
sar edi 0x1
push edi
mov eax esi
mov ecx esi
call sub_1000375f
jmp r-xdata
mov eax esi
mov edi [ esi + 0x14 ]
add edi ebx
call sub_100034e0
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push [ esp + 0xc ]
sub eax ecx
push eax
lea eax [ edx + ecx * 2 ]
push eax
mov eax ebx
call sub_10003806
add esp 0xc
mov ecx edi
mov eax esi
call sub_100034c8
sub_1000375f
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebx + 0x14 ]
sub eax [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
call sub_100140a7
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax edi
jbe r-xdata
mov edi eax
mov [ ebp + 0xc ] edi
call sub_1001406f
mov eax [ esi + 0x14 ]
lea ecx [ eax + edi ]
cmp ecx eax
jae r-xdata
test edi edi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x14 ]
add eax edi
mov edi eax
mov [ ebp - 0x4 ] eax
call sub_100034e0
test al al
je r-xdata
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
mov ecx [ esi + 0x14 ]
mov edi [ ebp + 0x8 ]
sub eax ecx
lea edi [ ebx + edi * 2 ]
push edi
push eax
lea eax [ edx + ecx * 2 ]
push eax
mov eax [ ebp + 0xc ]
call sub_10003806
mov ecx [ ebp - 0x4 ]
add esp 0xc
mov eax esi
call sub_100034c8
sub_10003825
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x10
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x10
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
add ecx eax
cmp ecx [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_10003860
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10003825
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_10003b0d
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_10003b6b
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_10003c23
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_10003c3f
sub_1000392d
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_100140a7
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ebx edx
mov ebx [ edx ]
jmp r-xdata
sub eax [ ebp + 0xc ]
add ebx edi
add ebx [ ebp + 0xc ]
push eax
push ebx
sub ecx edi
push ecx
add edx edi
push edx
call sub_10003911
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
add esp 0x10
push eax
mov ecx esi
call sub_10003c3f
pop ebx
mov edx [ edx ]
cmp ecx 0x10
jb r-xdata
sub_100039e1
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
push ecx
call sub_100157d2
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10017015
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1001905a
int3
sub_10003a2b
push 0xc
mov eax sub_1002caad
call sub_100194bf
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_100039e1
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
push 0xfffffffe
pop eax
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_10003c5b
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_10003c3f
call sub_1001952b
retn 0x8
cmp [ edi + 0x18 ] 0x10
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_10003c23
add esp 0x10
sub_10003a86
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100039e1
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_10003b0d
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xfffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_1001406f
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_10003a2b
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_10003c3f
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_10003c5b
jmp r-xdata
mov eax edi
sub_10003b6b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_100140a7
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_10003b0d
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_1000392d
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_1000392d
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
add edi edx
push edi
push ecx
push eax
call sub_10003c23
add esp 0x10
push esi
mov ecx ebx
call sub_10003c3f
sub_10003bfd
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_10003c3f
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_10003b6b
mov eax esi
pop esi
retn 0x4
sub_10003c5b
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10003c3f
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x10
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_100157ac
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x10
push eax
call sub_10003c23
add esp 0x10
sub_10003cb0
push esi
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
pop esi
jmp [ eax + 0x8 ]
sub_10003ce0
mov eax [ esi ]
push edi
push [ esp + 0xc ]
push 0x3
push 0x0
push r--data
push [ esp + 0x18 ]
push esi
call [ eax + 0x14 ]
mov edi eax
test edi edi
jge r-xdata
mov eax edi
pop edi
retn 0x8
push r--data
push esi
push edi
call sub_10014fd0
sub_10003d10
mov eax [ esi ]
push edi
push [ esp + 0x8 ]
push esi
call [ eax + 0x18 ]
mov edi eax
test edi edi
jge r-xdata
mov eax edi
pop edi
retn 0x4
push r--data
push esi
push edi
call sub_10014fd0
sub_10003d4f
push 0xc
mov eax sub_1002d4de
call sub_1001948c
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1001335e
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
xor eax eax
add eax 0x4
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
call sub_10003b6b
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x14 ]
call sub_10003cb0
call sub_1001952b
retn
sub_10003d9a
push 0x70
mov eax sub_1002d387
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov ebx ecx
fild [ ebx + 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebx + 0x14 ]
test eax eax
jge r-xdata
fmul [ r--data ]
call sub_1002c696
mov edi 0x258
sub edi eax
push 0x0
lea esi [ ebp - 0x30 ]
call sub_10004426
and [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebx + 0x14 ]
jb r-xdata
fadd [ r--data ]
lea ecx [ ebx + 0x4 ]
mov ecx [ ebx + 0x4 ]
jmp r-xdata
push eax
push ecx
lea eax [ ebp - 0x34 ]
call sub_1000b274
xor edi edi
cmp eax edi
je r-xdata
lea ebx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ebx [ ebp - 0x2c ]
jae r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push eax
lea esi [ ebp - 0x54 ]
call sub_1000448c
mov ecx [ ebp - 0x38 ]
push 0xffffffff
push edi
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10003b6b
push edi
push 0x1
mov ecx esi
call sub_10003c5b
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
call sub_1001953f
retn
push r--data
lea ecx [ ebp - 0x54 ]
call sub_100038ef
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10008a36
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_1001905a
sub_10003e77
push 0x70
mov eax sub_1002d387
call sub_100194f5
mov eax [ ebp + 0x8 ]
push 0x20
pop edi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x18 ] 0xf
call sub_10003c3f
and [ ebp - 0x4 ] 0x0
lea ebx [ esi + 0x4 ]
mov edx ebx
mov edx [ ebx ]
jmp r-xdata
push eax
push edx
lea eax [ ebp - 0x34 ]
call sub_1000b2ea
cmp eax 0xfffffff8
je r-xdata
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov eax [ esi + 0x14 ]
add edi edi
imul eax edi
lea ecx [ ebp - 0x30 ]
call sub_10004469
cmp [ esi + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x14 ]
jb r-xdata
xor edi edi
cmp eax edi
je r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push eax
lea esi [ ebp - 0x54 ]
call sub_1000448c
mov ecx [ ebp - 0x38 ]
push 0xffffffff
push edi
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10003b6b
push edi
push 0x1
mov ecx esi
call sub_10003c5b
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
call sub_1001953f
retn
push r--data
lea ecx [ ebp - 0x54 ]
call sub_100038ef
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10008a36
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_1001905a
sub_10003f52
push 0x50
mov eax sub_1002d5e4
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x5c ]
mov ebx ecx
call sub_10004810
mov esi eax
lea eax [ ebp - 0x54 ]
mov ecx ebx
call sub_10008abc
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x48 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10007428
xor esi esi
mov [ ebp - 0x4 ] esi
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_10003c3f
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10003d4f
mov ebx [ ebp - 0x4c ]
pop ecx
pop ecx
lea ecx [ ebp - 0x2c ]
mov edx edi
call sub_10003fdd
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10003c5b
call sub_1001953f
retn
sub_10003fdd
push 0x54
mov eax sub_1002d354
call sub_1001948c
mov edi ecx
mov esi edx
mov eax [ edi + 0x14 ]
mov [ ebp - 0x1c ] eax
test eax eax
ja r-xdata
mov eax [ esi + 0x14 ]
mov ecx ebx
mov [ ebp - 0x18 ] eax
call sub_10004469
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push r--data
lea ecx [ ebp - 0x38 ]
call sub_100038ef
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call sub_10008a36
push r--data
lea eax [ ebp - 0x60 ]
push eax
call sub_1001905a
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov [ ebp - 0x14 ] edi
mov edx [ edi + 0x4 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ edi + 0x18 ] 0x10
mov [ ebp - 0x10 ] eax
jb r-xdata
call sub_1001952b
retn
mov edi ecx
sub edi eax
jmp r-xdata
xor esi esi
cmp [ ebp - 0x18 ] esi
jbe r-xdata
lea ecx [ esi + eax ]
xor edx edx
mov eax esi
div [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov al [ edx + eax ]
xor al [ edi + ecx ]
inc esi
mov [ ecx ] al
cmp esi [ ebp - 0x18 ]
jb r-xdata
mov eax [ ebp - 0x10 ]
sub_10004094
push 0x54
mov eax sub_1002d9e3
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x50 ] eax
xor ebx ebx
lea eax [ ebp - 0x58 ]
mov edi ecx
mov [ ebp - 0x54 ] ebx
call sub_10004810
mov esi eax
lea eax [ ebp - 0x60 ]
mov ecx edi
call sub_10008abc
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x48 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10007428
mov [ ebp - 0x4 ] ebx
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_10003c3f
lea eax [ ebp - 0x2c ]
push eax
mov eax esi
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10003d4f
cmp [ ebp - 0x14 ] 0x10
mov edx [ ebp - 0x28 ]
pop ecx
pop ecx
jae r-xdata
mov ecx [ ebp - 0x50 ]
mov edi [ ebp - 0x4c ]
call sub_10009c11
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10003c5b
mov eax edi
call sub_1001953f
retn
lea edx [ ebp - 0x28 ]
sub_10004133
push 0xd4
mov eax sub_1002d820
call sub_100194f5
mov eax [ ebp + 0x8 ]
and [ ebp - 0x50 ] 0x0
push 0xf
pop edi
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x14 ] edi
call sub_10003c3f
xor esi esi
inc esi
mov [ ebp - 0x4 ] esi
push 0x0
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] edi
call sub_10003c3f
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x4c ]
push eax
call sub_10003e77
pop ecx
mov ecx [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
push eax
lea edi [ ebp - 0x48 ]
call sub_10003f52
pop ecx
push 0x0
push esi
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_10003c5b
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_100048f5
push 0x7
pop esi
mov [ ebp - 0x4 ] 0x3
xor ecx ecx
mov eax ebx
mov [ ebx + 0x18 ] esi
call sub_100034c8
lea edi [ ebx + 0x1c ]
xor ecx ecx
mov eax edi
mov [ edi + 0x18 ] esi
call sub_100034c8
lea esi [ ebx + 0x38 ]
call sub_10008a6b
and [ ebp - 0x4c ] 0x0
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
mov [ ebp - 0x50 ] 0x1
call sub_1000463c
lea eax [ ebp - 0xe0 ]
push eax
call sub_10004749
mov eax [ ebp - 0x4c ]
mov ecx ebx
call sub_10004836
cmp [ ebx + 0x18 ] 0x8
mov eax [ ebx + 0x14 ]
jb r-xdata
lea ecx [ ebx + 0x4 ]
mov ecx [ ebx + 0x4 ]
jmp r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
add eax eax
push eax
push ecx
lea eax [ ebp - 0xe0 ]
push eax
call sub_10004f3b
and [ ebp - 0x4c ] 0x0
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
call sub_1000463c
lea eax [ ebp - 0xe0 ]
push eax
call sub_10004749
mov eax [ ebp - 0x4c ]
mov ecx edi
call sub_10004836
cmp [ edi + 0x18 ] 0x8
mov eax [ ebx + 0x30 ]
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
add eax eax
push eax
push edi
lea eax [ ebp - 0xe0 ]
push eax
call sub_10004f3b
and [ ebp - 0x4c ] 0x0
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
call sub_1000463c
lea eax [ ebp - 0xe0 ]
push eax
call sub_10004749
mov eax [ ebp - 0x4c ]
mov ecx esi
call sub_10004469
cmp [ esi + 0x18 ] 0x10
mov eax [ ebx + 0x4c ]
jb r-xdata
push eax
push esi
lea eax [ ebp - 0xe0 ]
push eax
call sub_10004f3b
lea eax [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0x1
call sub_10003d33
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov eax ebx
call sub_1001953f
retn
sub_100042e9
push 0xd8
mov eax sub_1002db09
call sub_100194f5
mov eax [ ebp + 0x8 ]
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x10 ]
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x34 ] 0xf
call sub_10003c3f
mov ecx [ ebp - 0x58 ]
xor edi edi
lea eax [ ebp - 0x4c ]
inc edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10003d9a
pop ecx
mov ecx [ ebp - 0x5c ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10004094
pop ecx
pop ecx
lea eax [ ebp - 0xe4 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000488d
mov [ ebp - 0x4 ] 0x3
push [ esi + 0x14 ]
lea eax [ ebp - 0xdc ]
push eax
call sub_100044b9
push eax
call sub_10007456
cmp [ esi + 0x18 ] 0x8
mov eax [ esi + 0x14 ]
pop ecx
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xdc ]
push eax
call sub_10004597
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0xe4 ]
call sub_100049be
lea eax [ ebp - 0xe4 ]
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x4 ] 0x2
call sub_10003d33
push 0x0
push edi
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
push 0x0
push edi
lea ecx [ ebp - 0x4c ]
call sub_10003c5b
mov eax [ ebp - 0x50 ]
call sub_1001953f
retn
lea eax [ ebp - 0x2c ]
add eax eax
push eax
push esi
lea eax [ ebp - 0xdc ]
push eax
call sub_10004597
push [ ebp - 0x1c ]
lea eax [ ebp - 0xdc ]
push eax
call sub_100044b9
push eax
call sub_10007456
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
pop ecx
jae r-xdata
sub_10004426
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10003c3f
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_10003b0d
test al al
je r-xdata
call sub_1001406f
mov eax esi
retn 0x4
mov dl [ esp + 0x4 ]
push edi
xor ecx ecx
mov eax esi
call sub_1000605e
push edi
mov ecx esi
call sub_10003c3f
sub_10004469
push ebx
mov ebx eax
mov eax [ ecx + 0x14 ]
cmp ebx eax
ja r-xdata
push edi
push 0x0
sub ebx eax
mov edi ecx
call sub_10004ef7
pop edi
pop ebx
retn
push 0xffffffff
push ebx
call sub_1000392d
pop ebx
retn
sub_1000448c
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10003c3f
push [ ebp + 0xc ]
mov ecx esi
push 0x0
push [ ebp + 0x8 ]
call sub_10003b6b
mov eax esi
leave
retn 0x8
sub_100044b9
push 0x24
mov eax sub_1002d7d1
call sub_100194bf
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_10008927
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x1c ]
call sub_10008742
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000757b
pop ecx
lea ecx [ ebp - 0x1c ]
mov esi eax
call sub_1000872a
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x30 ] bl
mov cl [ ecx + 0x30 ]
mov [ ebp - 0x20 ] cl
push [ ebp - 0x20 ]
add eax edi
push eax
push edx
push [ ebp - 0x30 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0x18 ]
cmp [ ebp - 0x30 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_10008780
mov eax edi
call sub_1001952b
retn 0x8
push ebx
push [ ebp - 0x18 ]
call sub_100088cd
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
sub_10004597
push 0x10
mov eax sub_1002d7a4
call sub_100194bf
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10008927
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
jne r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x20 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
call sub_10008780
mov eax edi
call sub_1001952b
retn 0xc
push ebx
push [ ebp - 0x14 ]
call sub_100088cd
sub_1000463c
push 0x2c
mov eax sub_1002d77f
call sub_100194bf
mov edi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x18 ] ebx
call sub_1000867c
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x1c ] ebx
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x20 ]
call sub_10008742
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10007619
pop ecx
lea ecx [ ebp - 0x20 ]
mov esi eax
call sub_1000872a
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x28 ]
cmp ecx ebx
lea ebx [ ebp - 0x1c ]
push ebx
lea ebx [ ebp - 0x18 ]
push ebx
push eax
sete dl
mov [ ebp - 0x2c ] 0x1
push [ ebp - 0x2c ]
xor eax eax
push eax
mov [ ebp - 0x34 ] dl
push [ ebp - 0x34 ]
mov edx [ esi ]
push ecx
lea eax [ ebp - 0x38 ]
push eax
mov ecx esi
call [ edx + 0x20 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x18 ]
call sub_100088cd
test [ ebp - 0x18 ] 0x2
jne r-xdata
mov eax edi
call sub_1001952b
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_100141e4
or [ ebp - 0x18 ] 0x2
mov eax [ ebp - 0x1c ]
lea ecx [ eax - 0x80000000 ]
cmp ecx 0xffffffff
ja r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
sub_10004749
push 0x18
mov eax sub_1002d754
call sub_100194bf
mov esi [ ebp + 0x8 ]
push 0xa
xor eax eax
pop edi
inc eax
push eax
mov [ ebp - 0x1c ] eax
push esi
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
mov [ esi + 0x4 ] ebx
call sub_1000867c
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] bl
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x18 ]
call sub_100088cd
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
call sub_100084ee
cmp eax 0xffffffff
jne r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
call sub_1001952b
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_100141e4
inc [ esi + 0x4 ]
cmp eax edi
jne r-xdata
or [ ebp - 0x18 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x7fffffff
je r-xdata
sub_10004810
push ebx
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x8
push edi
mov edi eax
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
lea ebx [ eax + ecx * 2 ]
call sub_10008a7e
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_10004836
push esi
push edi
mov edi eax
mov esi ecx
cmp edi [ esi + 0x14 ]
ja r-xdata
mov eax [ esi + 0x14 ]
sub edi eax
or ecx 0xffffffff
push ebx
mov ebx edi
sub ecx eax
cmp ecx ebx
ja r-xdata
push 0xffffffff
call sub_1000344d
jmp r-xdata
test ebx ebx
jbe r-xdata
call sub_1001406f
pop edi
pop esi
retn
pop ebx
mov edi [ esi + 0x14 ]
add edi ebx
call sub_100034e0
test al al
je r-xdata
mov ecx [ esi + 0x14 ]
push ebx
mov eax esi
call sub_10006132
pop ebx
mov ecx edi
pop edi
mov eax esi
pop esi
jmp sub_100034c8
sub_1000488d
push 0x8
mov eax sub_1002d5b9
call sub_1001948c
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
xor ebx ebx
push edi
inc ebx
push esi
mov [ ebp - 0x10 ] ebx
call sub_10004ff1
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_100060d8
and [ edi + 0x3c ] 0x0
and [ edi + 0x40 ] 0x0
mov [ edi ] r--data
mov eax esi
call sub_1001952b
retn 0x4
sub_100048f5
push 0x8
mov eax sub_1002d5b9
call sub_1001948c
mov ebx ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0xc ]
xor esi esi
push eax
inc esi
push edi
mov [ ebp - 0x10 ] esi
call sub_10004ff1
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea esi [ edi + 0xc ]
push esi
mov [ edi + eax ] r--data
mov [ ebp - 0x14 ] esi
call sub_100060d8
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
cmp [ ebx + 0x18 ] 0x10
mov eax [ ebx + 0x14 ]
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
mov eax edi
call sub_1001952b
retn 0x4
push ebx
mov ebx eax
call sub_10006185
and [ esi + 0x3c ] 0x0
and [ esi + 0x40 ] 0x0
test eax eax
je r-xdata
sub_10004986
push 0x4
mov eax sub_1002c9e0
call sub_1001948c
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_100049ff
mov ecx esi
call sub_100049d4
call sub_1001952b
retn
sub_100049ff
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_10008017
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_100157ac
pop ecx
sub_10004a48
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
test edi edi
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp edi edx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edi
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
mov [ ecx ] eax
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
jmp r-xdata
pop ebx
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov [ ecx ] al
test eax eax
jbe r-xdata
push 0x20
pop eax
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
jne r-xdata
mov ecx 0x7fffffff
sub ecx eax
cmp ecx ebx
jae r-xdata
add eax ebx
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_100039e1
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test eax eax
shr eax 0x1
jne r-xdata
jne r-xdata
push ebx
push edx
push [ ebp - 0x4 ]
push edi
call sub_10003c23
mov edx [ ebp - 0x8 ]
add esp 0x10
test ebx ebx
mov ecx [ esi + 0x14 ]
mov eax edi
sub eax edx
add [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
push edx
call sub_100157ac
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_10004be5
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ esp + 0x4 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] dl
mov eax edx
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
retn 0x4
sub_10004c2d
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
add ebx esi
cmp esi ebx
jae r-xdata
or eax 0xffffffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ edi ]
jmp r-xdata
or eax 0xffffffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_10004c8a
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_10004dc1
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_10004eaa
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_100049d4
push esi
mov [ esi ] r--data
call sub_1001416e
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_100157ac
pop ecx
sub_10004ef7
or eax 0xffffffff
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_1001406f
mov eax edi
retn 0x4
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_10003b0d
test al al
je r-xdata
pop esi
mov dl [ esp + 0x8 ]
mov ecx [ edi + 0x14 ]
push ebx
mov eax edi
call sub_1000605e
push esi
mov ecx edi
call sub_10003c3f
sub_10004f3b
push 0x10
mov eax sub_1002d731
call sub_100194bf
mov esi [ ebp + 0x8 ]
push 0x1
push esi
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
mov [ esi + 0x4 ] ebx
call sub_1000867c
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push 0xffffffff
push [ ebp + 0xc ]
call [ eax + 0x1c ]
add [ esi + 0x4 ] eax
cmp eax [ ebp + 0x10 ]
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x14 ]
call sub_100088cd
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x3
mov eax esi
call sub_1001952b
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_100141e4
sub_10004ff1
push 0x4
mov eax sub_1002d56f
call sub_1001948c
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push esi
call sub_1000609c
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax esi
call sub_1001952b
retn 0x8
sub_10005031
push 0x40
mov eax sub_1002d0cd
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0xf
call sub_10003c3f
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_10003bfd
lea ecx [ ebp - 0x48 ]
mov edx [ eax + 0x20 ]
cmp [ edx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov ecx [ eax + 0x30 ]
mov ecx [ ecx ]
mov eax [ eax + 0x10 ]
add ecx [ edx ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea esi [ ebp - 0x2c ]
call sub_10004402
xor esi esi
lea eax [ ebp - 0x2c ]
inc esi
push eax
mov ecx ebx
mov [ ebp - 0x4 ] esi
call sub_10003bfd
push edi
push esi
lea ecx [ ebp - 0x2c ]
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea esi [ ebp - 0x2c ]
call sub_10004402
mov eax esi
push eax
mov ecx ebx
mov [ ebp - 0x4 ] edi
call sub_10003bfd
mov ecx esi
jmp r-xdata
mov ecx edx
call sub_10003c5b
mov eax ebx
call sub_1001953f
retn 0x4
push edi
push 0x1
sub_100050f4
push 0x54
mov eax sub_1002d090
call sub_100194f5
mov edi [ ebp + 0x14 ]
test [ edi + 0x10 ] 0x4000
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x3c ] esi
jne r-xdata
lea esi [ ebp - 0x30 ]
mov eax edi
call sub_10008742
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_100076b7
pop ecx
mov ecx esi
mov [ ebp - 0x34 ] eax
call sub_1000872a
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_10003c3f
mov ecx [ ebp - 0x34 ]
xor esi esi
inc esi
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x4 ] esi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ eax + 0x1c ]
jmp r-xdata
call sub_10007088
mov [ ebp - 0x4 ] 0x3
call sub_1000709f
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov eax esi
call sub_1001953f
retn 0x18
mov [ ebp - 0x30 ] ebx
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10003b6b
push ebx
push esi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_10003c5b
mov eax [ edi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x30 ]
lea esi [ ebp - 0x44 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_100068de
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x30 ] ebx
sub eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x44 ] ecx
cmp eax ebx
jbe r-xdata
lea eax [ ebp - 0x28 ]
mov eax [ edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push [ ebp - 0x30 ]
mov eax [ ebp - 0x44 ]
push [ ebp + 0x18 ]
mov [ ebp + 0x10 ] esi
push esi
mov esi [ ebp - 0x3c ]
push eax
mov [ ebp + 0xc ] eax
mov [ edi + 0x18 ] ebx
call sub_100068de
add esp 0x10
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov eax [ ebp - 0x38 ]
mov dl [ eax ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x44 ] 0x1
mov ecx esi
call sub_10007d1f
cmp eax 0xffffffff
jne r-xdata
dec [ ebp - 0x34 ]
inc [ ebp - 0x38 ]
cmp [ ebp - 0x34 ] ebx
ja r-xdata
sub_1000525f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
push [ ebp + 0x1c ]
mov [ esp + 0x18 ] eax
call sub_100066a3
push eax
lea eax [ esp + 0x28 ]
push 0x40
push eax
call sub_100176c4
add esp 0x10
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x28 ]
push [ esp + 0x1c ]
mov ecx esi
call sub_10006708
mov ecx [ esp + 0x70 ]
mov eax [ esp + 0x20 ]
add esp 0x14
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10015160
mov esp ebp
pop ebp
retn 0x18
sub_100052d8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
push [ ebp + 0x1c ]
mov [ esp + 0x18 ] eax
call sub_100066a3
push eax
lea eax [ esp + 0x28 ]
push 0x40
push eax
call sub_100176c4
add esp 0x10
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x28 ]
push [ esp + 0x1c ]
mov ecx esi
call sub_10006708
mov ecx [ esp + 0x70 ]
mov eax [ esp + 0x20 ]
add esp 0x14
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10015160
mov esp ebp
pop ebp
retn 0x18
sub_10005351
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
push [ ebp + 0x20 ]
mov [ esp + 0x18 ] eax
push [ ebp + 0x1c ]
call sub_100066a3
push eax
lea eax [ esp + 0x2c ]
push 0x40
push eax
call sub_100176c4
add esp 0x14
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x28 ]
push [ esp + 0x1c ]
mov ecx esi
call sub_10006708
mov ecx [ esp + 0x70 ]
mov eax [ esp + 0x20 ]
add esp 0x14
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10015160
mov esp ebp
pop ebp
retn 0x1c
sub_100053cd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
push [ ebp + 0x20 ]
mov [ esp + 0x18 ] eax
push [ ebp + 0x1c ]
call sub_100066a3
push eax
lea eax [ esp + 0x2c ]
push 0x40
push eax
call sub_100176c4
add esp 0x14
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x28 ]
push [ esp + 0x1c ]
mov ecx esi
call sub_10006708
mov ecx [ esp + 0x70 ]
mov eax [ esp + 0x20 ]
add esp 0x14
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10015160
mov esp ebp
pop ebp
retn 0x1c
sub_10005449
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ecx [ edi + 0x14 ]
mov [ esp + 0x1c ] eax
mov eax 0x2000
test ecx ecx
jg r-xdata
mov ebx ecx
push 0x24
pop ecx
cmp ebx ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ edi + 0x10 ] eax
jne r-xdata
mov ecx [ edi + 0x10 ]
fld [ ebp + 0x1c ]
sub ebx [ esp + 0x20 ]
and [ esp + 0x14 ] 0x0
and [ esp + 0x18 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] ebx
push 0x6
pop ecx
push [ ebp + 0x10 ]
xor al al
push [ ebp + 0xc ]
lea esi [ esp + 0x28 ]
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x30 ]
call sub_10006208
push eax
lea eax [ esp + 0x40 ]
push 0x6c
push eax
call sub_100176c4
add esp 0x18
push eax
push ebx
push [ esp + 0x28 ]
lea edx [ esp + 0x3c ]
push [ esp + 0x28 ]
mov ecx edi
push [ ebp + 0x18 ]
push [ esp + 0x38 ]
call sub_10006264
mov ecx [ esp + 0xbc ]
mov eax [ esp + 0x3c ]
add esp 0x20
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10015160
mov esp ebp
pop ebp
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ esp + 0x13 ] 0x0
fxch st1
fxch st1
mov [ esp + 0x13 ] 0x1
fchs
jmp r-xdata
cmp [ esp + 0x14 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop esi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ esp + 0x14 ] esi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x13 ] 0x0
fstp st1
je r-xdata
cmp ebx esi
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x18 ] edx
jae r-xdata
sub ebx esi
fmul st1
add [ esp + 0x18 ] esi
jmp r-xdata
sub_100055c4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ecx [ edi + 0x14 ]
mov [ esp + 0x1c ] eax
mov eax 0x2000
test ecx ecx
jg r-xdata
mov ebx ecx
push 0x24
pop ecx
cmp ebx ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ edi + 0x10 ] eax
jne r-xdata
mov ecx [ edi + 0x10 ]
sub ebx [ esp + 0x20 ]
and [ esp + 0x14 ] 0x0
and [ esp + 0x18 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] ebx
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0x13 ] 0x0
jmp r-xdata
mov [ esp + 0x13 ] 0x1
fchs
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop esi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x14 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ esp + 0x14 ] esi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x13 ] 0x0
fstp st1
je r-xdata
cmp ebx esi
jl r-xdata
push [ ebp + 0x10 ]
mov al 0x4c
push [ ebp + 0xc ]
lea esi [ esp + 0x28 ]
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x30 ]
call sub_10006208
push eax
lea eax [ esp + 0x40 ]
push 0x6c
push eax
call sub_100176c4
add esp 0x18
push eax
push ebx
push [ esp + 0x28 ]
lea edx [ esp + 0x3c ]
push [ esp + 0x28 ]
mov ecx edi
push [ ebp + 0x18 ]
push [ esp + 0x38 ]
call sub_10006264
mov ecx [ esp + 0xbc ]
mov eax [ esp + 0x3c ]
add esp 0x20
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10015160
mov esp ebp
pop ebp
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x18 ] edx
jae r-xdata
sub ebx esi
fmul st1
add [ esp + 0x18 ] esi
jmp r-xdata
sub_1000572b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
call sub_100176c4
mov ecx [ ebp + 0x14 ]
add esp 0x10
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x18 ]
push esi
call sub_10006708
mov ecx [ esp + 0x60 ]
add esp 0x14
mov eax esi
pop esi
xor ecx esp
call sub_10015160
mov esp ebp
pop ebp
retn 0x18
sub_10005789
push 0x60
mov eax sub_1002d04b
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x68 ] eax
mov eax [ edi + 0x10 ]
test eax 0x4000
mov eax edi
je r-xdata
and [ ebp - 0x58 ] 0x0
lea esi [ ebp - 0x5c ]
call sub_10008742
lea ecx [ ebp - 0x58 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x4
mov edi [ edi + 0x10 ]
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_10006913
add esp 0xc
push eax
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001486f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x5c ]
mov esi eax
call sub_1000872a
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x6c ] eax
je r-xdata
lea esi [ ebp - 0x64 ]
call sub_10008742
and [ ebp - 0x4 ] 0x0
push eax
call sub_100076b7
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1000872a
xor ebx ebx
inc ebx
push 0x0
mov edi ebx
lea esi [ ebp - 0x4c ]
call sub_10004426
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10007088
push 0xffffffff
xor edi edi
push edi
mov [ ebp - 0x4 ] 0x2
call sub_10007def
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10003c5b
push edi
mov edi esi
call sub_10004ef7
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000709f
push 0xffffffff
xor edi edi
push edi
mov [ ebp - 0x4 ] 0x3
call sub_10007def
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10003c5b
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_100078bb
test al al
mov eax [ ebp - 0x54 ]
je r-xdata
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10007753
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
push edi
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
call sub_10003c5b
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
or [ eax ] 0x1
cmp esi 0x1
ja r-xdata
mov ecx [ ebp - 0x68 ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x60 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_10005919
push 0x40
mov eax sub_1002cffe
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x3c ] 0x0
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x48 ] eax
lea esi [ ebp - 0x40 ]
mov eax edi
call sub_10008742
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x10 ]
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_10006913
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
lea ecx [ ebp - 0x40 ]
mov esi eax
call sub_1000872a
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x3c ]
push eax
push esi
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x34 ]
call sub_1001486f
add esp 0x10
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
mov esi eax
call sub_100078bb
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
cmp [ ebp - 0x4c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x44 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_100059ea
push 0x40
mov eax sub_1002cffe
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x3c ] 0x0
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x48 ] eax
lea esi [ ebp - 0x40 ]
mov eax edi
call sub_10008742
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x10 ]
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_10006913
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
lea ecx [ ebp - 0x40 ]
mov esi eax
call sub_1000872a
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x3c ]
push eax
push esi
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x34 ]
call sub_1001486f
add esp 0x10
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
mov esi eax
call sub_100078bb
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
cmp [ ebp - 0x4c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x44 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_10005ab7
push 0x3c
mov eax sub_1002cfd1
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x44 ] eax
lea esi [ ebp - 0x48 ]
mov eax edi
call sub_10008742
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_10006913
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10014a0a
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_1000872a
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_100078bb
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x3c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_10005b67
push 0x3c
mov eax sub_1002cfd1
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x44 ] eax
lea esi [ ebp - 0x48 ]
mov eax edi
call sub_10008742
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_10006913
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001486f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_1000872a
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_100078bb
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x3c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_10005c17
push 0x44
mov eax sub_1002cfa4
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x48 ] eax
lea esi [ ebp - 0x44 ]
mov eax edi
call sub_10008742
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_10006913
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10014aaf
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x44 ]
mov esi eax
mov [ ebp - 0x4c ] edx
call sub_1000872a
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_100078bb
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x3c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x4c ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_10005cd0
push 0x44
mov eax sub_1002cfa4
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x48 ] eax
lea esi [ ebp - 0x44 ]
mov eax edi
call sub_10008742
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_10006913
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10014b72
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x44 ]
mov esi eax
mov [ ebp - 0x4c ] edx
call sub_1000872a
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_100078bb
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x3c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x4c ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_10005d89
push 0x5c
mov eax sub_1002cf77
call sub_100194f5
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x50 ] 0x0
mov [ ebp - 0x54 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x1c ]
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x5c ] ecx
call sub_10008742
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x4c ]
call sub_10006bdc
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10014d77
fstp [ ebp - 0x64 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
mov ecx esi
call sub_1000872a
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_100078bb
test al al
mov eax [ ebp - 0x54 ]
je r-xdata
lea ecx [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x64 ]
mov eax [ ebp - 0x5c ]
fstp [ eax ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x60 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_10005e35
push 0x60
mov eax sub_1002cf4a
call sub_100194f5
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x50 ] 0x0
mov [ ebp - 0x54 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
lea esi [ ebp - 0x60 ]
mov [ ebp - 0x64 ] ecx
call sub_10008742
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x4c ]
call sub_10006bdc
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10014d99
fstp [ ebp - 0x6c ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
mov ecx esi
call sub_1000872a
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_100078bb
test al al
mov eax [ ebp - 0x54 ]
je r-xdata
lea ecx [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x6c ]
mov eax [ ebp - 0x64 ]
fstp [ eax ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x5c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_10005ee1
push 0x60
mov eax sub_1002cf4a
call sub_100194f5
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x50 ] 0x0
mov [ ebp - 0x54 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
lea esi [ ebp - 0x60 ]
mov [ ebp - 0x64 ] ecx
call sub_10008742
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x4c ]
call sub_10006bdc
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10014e02
fstp [ ebp - 0x6c ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
mov ecx esi
call sub_1000872a
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_100078bb
test al al
mov eax [ ebp - 0x54 ]
je r-xdata
lea ecx [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x6c ]
mov eax [ ebp - 0x64 ]
fstp [ eax ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x5c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_10005f8d
push 0x44
mov eax sub_1002cfa4
call sub_100194f5
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x1c ]
xor edi edi
lea esi [ ebp - 0x44 ]
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x34 ] edi
call sub_10008742
push eax
lea eax [ ebp + 0x14 ]
push 0x800
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] edi
call sub_10006913
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
lea ecx [ ebp - 0x44 ]
mov esi eax
call sub_1000872a
lea eax [ ebp - 0x34 ]
push eax
push esi
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001486f
mov [ ebp - 0x4c ] edi
add esp 0x10
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
mov esi eax
call sub_100078bb
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x3c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001953f
retn 0x20
sub_1000605e
cmp [ esp + 0x4 ] 0x1
jne r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push [ esp + 0x4 ]
movsx edx dl
push edx
add eax ecx
push eax
call sub_10015500
add esp 0xc
retn 0x4
mov [ eax + ecx ] dl
jmp r-xdata
sub_1000609c
push 0x4
mov eax sub_1002d549
call sub_1001948c
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push [ ebp + 0xc ]
mov [ esi + eax ] r--data
mov eax [ esi ]
and [ esi + 0x4 ] 0x0
mov edi [ eax + 0x4 ]
add edi esi
call sub_1000720f
mov eax esi
call sub_1001952b
retn 0x8
sub_100060d8
push 0x0
mov eax sub_1002c926
call sub_1001948c
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_100141aa
and [ ebp - 0x4 ] 0x0
push 0x4
call sub_100157d2
mov edi eax
pop ecx
test edi edi
je r-xdata
xor edi edi
call sub_100144fa
mov [ edi ] eax
call sub_10014328
mov ecx eax
call sub_100086c0
jmp r-xdata
mov eax esi
mov [ esi + 0x38 ] edi
call sub_100072bb
mov eax esi
call sub_1001952b
retn 0x4
sub_10006132
cmp [ esp + 0x4 ] 0x1
jne r-xdata
cmp [ eax + 0x18 ] 0x8
jb r-xdata
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
pop edi
mov ecx [ esp + 0x8 ]
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
cmp [ esp + 0x4 ] 0x0
push edi
lea edi [ eax + ecx * 2 ]
jbe r-xdata
retn 0x4
xor edx edx
mov [ eax + ecx * 2 ] dx
jmp r-xdata
sub_10006185
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
retn 0x4
push edi
push 0x0
push ebx
call sub_100039e1
push ebx
push [ esp + 0x14 ]
mov edi eax
push ebx
push edi
call sub_10003c23
add esp 0x18
test [ esi + 0x40 ] 0x4
lea eax [ edi + ebx ]
mov [ esi + 0x3c ] eax
jne r-xdata
mov ecx [ esi + 0x40 ]
test cl 0x2
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov ecx [ esi + 0x30 ]
mov [ ecx ] ebx
or [ esi + 0x40 ] 0x1
pop edi
test cl 0x10
jne r-xdata
mov ecx [ esi + 0x14 ]
mov [ ecx ] edi
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx edi
sub ecx eax
mov eax [ esi + 0x34 ]
add ecx ebx
mov [ eax ] ecx
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
sub_10006208
push ebx
mov ebx ecx
mov [ esi ] 0x25
lea ecx [ esi + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test al al
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] al
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
mov eax esi
pop ebx
retn
sub_10006264
push 0x6c
mov eax sub_1002cf1d
call sub_100194f5
mov edi ecx
mov ebx edx
lea esi [ ebp - 0x74 ]
mov eax edi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x50 ] ebx
call sub_10008742
and [ ebp - 0x4 ] 0x0
push eax
call sub_100076b7
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov esi eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x6c ] esi
call sub_1000872a
lea eax [ ebp - 0x4c ]
push eax
mov ecx esi
call sub_100073f1
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
push 0x0
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x64 ] al
mov [ ebp - 0x18 ] 0xf
call sub_10003c3f
mov [ ebp - 0x4 ] 0x2
mov al [ ebx ]
cmp al 0x2b
je r-xdata
mov [ ebp - 0x68 ] 0x1
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
and [ ebp + 0x18 ] eax
and [ ebp - 0x68 ] 0x0
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_100176e2
mov eax [ eax ]
push [ ebp + 0x1c ]
mov al [ eax ]
push 0x65
push ebx
mov [ ebp - 0x54 ] al
mov [ ebp - 0x53 ] 0x65
mov [ ebp - 0x52 ] 0x0
call sub_10017710
add esp 0xc
push [ ebp + 0x1c ]
mov esi eax
movsx eax [ ebp - 0x54 ]
push eax
push ebx
call sub_10017710
add esp 0xc
mov [ ebp - 0x58 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
add eax ecx
add eax [ ebp + 0x18 ]
mov ecx [ edi + 0x18 ]
add eax [ ebp + 0x1c ]
test ecx ecx
jle r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
and [ ebp - 0x50 ] 0x0
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x54 ]
push [ ebp + 0x1c ]
push eax
push ebx
call sub_10017710
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ ebp - 0x50 ] ecx
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push ebx
call sub_10007d55
test esi esi
jne r-xdata
push [ ebp + 0x1c ]
push 0x65
push ebx
call sub_10017710
add esp 0xc
test eax eax
je r-xdata
push [ ebp + 0x24 ]
sub eax ebx
push [ ebp + 0x20 ]
inc eax
push [ ebp - 0x64 ]
mov edi eax
lea eax [ edi - 0x1 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax ebx
call sub_10007336
mov ecx [ eax ]
add esp 0x14
push [ ebp + 0x10 ]
mov [ ebp + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x24 ] ecx
push 0x30
push [ eax + 0x4 ]
lea esi [ ebp - 0x5c ]
push [ eax ]
call sub_100068de
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x6c ]
mov [ ebp + 0x24 ] eax
mov eax [ ecx ]
add esp 0x10
call [ eax + 0x4 ]
push 0x1
mov [ ebp - 0x6c ] al
push [ ebp - 0x6c ]
lea esi [ ebp - 0x5c ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
call sub_100068de
mov ecx [ eax ]
push [ ebp + 0x14 ]
mov [ ebp + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x24 ] ecx
push 0x30
push [ eax + 0x4 ]
lea esi [ ebp - 0x70 ]
push [ eax ]
call sub_100068de
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
add ebx edi
add esp 0x20
sub [ ebp + 0x1c ] edi
mov edi [ ebp - 0x60 ]
mov [ ebp + 0x24 ] eax
push [ ebp - 0x50 ]
lea esi [ ebp - 0x5c ]
push [ ebp + 0xc ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
call sub_100068de
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
and [ ebp - 0x50 ] 0x0
mov [ ebp + 0x24 ] eax
cmp [ ebp - 0x68 ] 0x0
jbe r-xdata
mov eax [ edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x18 ]
push 0x30
lea edi [ ebp - 0x30 ]
call sub_10004ef7
mov ebx [ ebp - 0x50 ]
jmp r-xdata
push [ ebp + 0x24 ]
lea eax [ ebp - 0x70 ]
push [ ebp + 0x20 ]
push [ ebp - 0x64 ]
push [ ebp + 0x1c ]
push eax
mov eax ebx
call sub_10007336
mov ecx [ eax ]
add esp 0x14
push [ ebp + 0x18 ]
mov [ ebp + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x24 ] ecx
push 0x30
push [ eax + 0x4 ]
lea esi [ ebp - 0x5c ]
push [ eax ]
call sub_100068de
mov ecx [ eax ]
push [ ebp - 0x50 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
push eax
xor ebx ebx
push ecx
mov [ ebp + 0x24 ] eax
mov [ edi + 0x18 ] ebx
call sub_100068de
add esp 0x20
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_10003c5b
mov eax esi
call sub_1001953f
retn
push [ ebp + 0x24 ]
sub eax ebx
push [ ebp + 0x20 ]
inc eax
push [ ebp - 0x64 ]
mov [ ebp - 0x6c ] eax
dec eax
push eax
lea eax [ ebp - 0x78 ]
push eax
mov eax ebx
call sub_10007336
mov ecx [ eax ]
add esp 0x14
push [ ebp + 0x18 ]
mov [ ebp + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x24 ] ecx
push 0x30
push [ eax + 0x4 ]
lea esi [ ebp - 0x78 ]
push [ eax ]
call sub_100068de
mov ecx [ eax ]
and [ ebp + 0x18 ] 0x0
mov [ ebp + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x10
test [ edi + 0x10 ] 0x4
mov [ ebp + 0x24 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push [ ebp + 0x24 ]
mov eax ebx
push [ ebp + 0x20 ]
lea edi [ ebp - 0x5c ]
call sub_100072fd
mov ecx [ eax ]
mov edi [ ebp - 0x60 ]
add esp 0xc
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
inc ebx
dec [ ebp + 0x1c ]
mov [ ebp + 0x24 ] eax
push 0x30
push [ ebp + 0x18 ]
mov edi esi
sub edi ebx
lea esi [ ebp - 0x30 ]
call sub_10007154
mov ebx [ ebp + 0x10 ]
push 0x30
lea edi [ ebp - 0x30 ]
call sub_10004ef7
and [ ebp + 0x10 ] 0x0
mov ebx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
push 0x30
test eax eax
jne r-xdata
push 0x1
push [ eax + 0x4 ]
lea edi [ ebp - 0x78 ]
push [ eax ]
mov eax ecx
call sub_100072fd
mov ecx [ eax ]
mov edi [ ebp - 0x60 ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax [ ebp - 0x6c ]
add esp 0xc
add ebx eax
sub [ ebp + 0x1c ] eax
mov ecx r--data
push [ ebp + 0x14 ]
sub eax ebx
lea edi [ eax + 0x1 ]
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x58 ] eax
call sub_10007154
mov edi [ ebp - 0x58 ]
push 0x30
push [ ebp + 0x10 ]
call sub_10007154
and [ ebp + 0x14 ] 0x0
mov ebx [ ebp + 0x10 ]
lea edi [ ebp - 0x30 ]
call sub_10004ef7
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
push 0x0
lea ecx [ ebp - 0x30 ]
call sub_100071e7
push eax
call sub_100177c0
pop ecx
pop ecx
mov edi eax
jmp r-xdata
lea ebx [ ebp - 0x48 ]
and [ ebp + 0x10 ] 0x0
cmp [ ebp - 0x34 ] 0x10
mov ebx [ ebp - 0x48 ]
jae r-xdata
mov al [ ebx ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push 0x0
lea ecx [ ebp - 0x30 ]
call sub_100071e7
and [ ebp + 0x18 ] 0x0
mov edi [ ebp - 0x60 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x1c ]
mov ebx [ ebp - 0x50 ]
mov [ ebp + 0x1c ] eax
mov ecx edi
sub ecx [ ebp - 0x68 ]
movsx eax al
cmp eax ecx
jae r-xdata
push 0x0
sub edi eax
push 0x1
lea esi [ ebp - 0x30 ]
call sub_10007154
lea eax [ ebx + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov ebx eax
sub_100066a3
mov [ edi ] 0x25
lea ecx [ edi + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov al [ ebx ]
cmp al 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] al
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
push esi
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ ebx + 0x1 ]
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
mov eax edi
pop esi
retn
sub_10006708
push 0x40
mov eax sub_1002cee0
call sub_100194f5
mov edi ecx
lea esi [ ebp - 0x38 ]
mov eax edi
mov [ ebp - 0x48 ] edi
mov ebx edx
call sub_10008742
and [ ebp - 0x4 ] 0x0
push eax
call sub_100076b7
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ecx esi
mov [ ebp - 0x44 ] eax
call sub_1000872a
mov ecx [ ebp - 0x44 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073f1
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov al [ ebx ]
cmp al 0x2b
je r-xdata
mov [ ebp - 0x30 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
cmp al 0x30
jne r-xdata
mov esi [ edi + 0x18 ]
test esi esi
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0x0
jmp r-xdata
mov al [ ebx + 0x1 ]
cmp al 0x78
je r-xdata
xor esi esi
cmp esi [ ebp + 0x10 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x30 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x38 ] al
push [ ebp + 0x14 ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x38 ]
push [ ebp + 0x10 ]
push eax
mov eax ebx
call sub_10007336
mov ecx [ eax ]
add esp 0x14
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp + 0x14 ] ecx
mov eax [ eax + 0x4 ]
and [ edi + 0x18 ] 0x0
push eax
push ecx
mov [ ebp + 0x18 ] eax
call sub_100068de
add esp 0x10
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov eax esi
call sub_1001953f
retn
cmp eax 0x100
je r-xdata
sub esi [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x30 ]
mov eax ebx
push [ ebp + 0x18 ]
lea edi [ ebp - 0x40 ]
push [ ebp + 0x14 ]
call sub_100072fd
mov ecx [ eax ]
add esp 0xc
mov [ ebp + 0x14 ] ecx
mov ecx [ eax + 0x4 ]
push esi
push [ ebp + 0xc ]
mov [ ebp + 0x18 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x30 ]
push [ eax ]
sub [ ebp + 0x10 ] ecx
lea esi [ ebp - 0x34 ]
add ebx ecx
call sub_100068de
mov edi [ ebp - 0x48 ]
push esi
push [ ebp + 0xc ]
lea esi [ ebp - 0x4c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_100068de
jmp r-xdata
mov eax [ edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x3c ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x14 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
xor esi esi
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov esi [ ebp + 0x10 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx esi
sub ecx [ ebp - 0x30 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub esi eax
mov eax [ ebp + 0x10 ]
sub eax esi
inc eax
push eax
lea edi [ ebx + esi ]
push edi
push eax
lea eax [ ebx + esi + 0x1 ]
push eax
call sub_10017193
mov eax [ ebp - 0x3c ]
add esp 0x10
inc [ ebp + 0x10 ]
inc eax
mov [ edi ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov edi [ ebp - 0x48 ]
mov [ ebp - 0x3c ] eax
sub_100068de
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] 0x1
mov dl [ ebp + 0x10 ]
call sub_10007d1f
cmp eax 0xffffffff
jne r-xdata
dec [ ebp + 0x14 ]
jne r-xdata
sub_10006913
push 0x64
mov eax sub_1002ceab
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x10 ]
mov esi ecx
mov ebx edx
push eax
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x58 ] ebx
call sub_100076b7
mov edi eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_100073f1
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x34 ] eax
je r-xdata
mov edi [ ebp - 0x60 ]
mov [ ebp - 0x4a ] al
mov [ ebp - 0x54 ] esi
call sub_100078bb
test al al
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov eax [ ebp + 0xc ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
mov eax ebx
call sub_100073be
cmp al 0x2b
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
mov eax ebx
call sub_100073be
cmp al 0x2d
jne r-xdata
mov [ esi ] al
jmp r-xdata
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_100078bb
test al al
jne r-xdata
mov [ esi ] al
inc esi
mov [ ebp - 0x54 ] esi
mov esi ebx
call sub_100073d1
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov eax ebx
call sub_100073be
cmp al 0x30
jne r-xdata
mov [ ebp - 0x6c ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
mov esi ebx
mov [ ebp - 0x5c ] 0x1
call sub_100073d1
mov esi [ ebp - 0x58 ]
mov ebx esi
call sub_100078bb
test al al
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x58 ]
call sub_100073be
mov edi [ ebp - 0x54 ]
push [ ebp - 0x6c ]
mov [ edi ] al
movsx eax al
push eax
push r--data
call sub_10017710
add esp 0xc
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x6c ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov eax esi
call sub_100073be
cmp al 0x78
je r-xdata
cmp [ ebp - 0x5c ] bl
je r-xdata
lea edi [ ebp - 0x44 ]
push esi
lea ecx [ ebp - 0x2c ]
call sub_100071e7
xor ebx ebx
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x5c ]
xor edi edi
inc edi
lea esi [ ebp - 0x2c ]
call sub_10004426
mov eax [ ebp - 0x68 ]
mov edi [ ebp - 0x60 ]
mov ebx [ ebp - 0x58 ]
add eax 0x1f
xor esi esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x70 ] eax
call sub_100078bb
test al al
jne r-xdata
mov [ ebp - 0x50 ] 0x8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov eax esi
call sub_100073be
cmp al 0x58
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x54 ] eax
cmp esi ebx
jbe r-xdata
cmp esi ebx
je r-xdata
cmp [ ebp - 0x4a ] bl
je r-xdata
cmp edi [ ebp - 0x70 ]
jae r-xdata
cmp [ edi ] 0x30
je r-xdata
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x5c ] 0x0
call sub_100073d1
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] bl
jne r-xdata
cmp [ edi ] 0x7f
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov edi [ ebp - 0x44 ]
jae r-xdata
push esi
lea ecx [ ebp - 0x2c ]
call sub_100071e7
cmp [ eax ] bl
jle r-xdata
mov eax [ ebp - 0x58 ]
call sub_100073be
cmp al [ ebp - 0x4a ]
jne r-xdata
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x5c ] 0x1
call sub_100071e7
cmp [ eax ] 0x7f
je r-xdata
inc edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x54 ]
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] bl
call sub_10003c5b
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10003c5b
mov eax [ ebp - 0x50 ]
call sub_1001953f
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec esi
je r-xdata
mov [ ebp - 0x5c ] bl
jmp r-xdata
inc esi
jmp r-xdata
push ebx
inc ebx
lea edi [ ebp - 0x2c ]
call sub_10004ef7
inc esi
mov [ ebp - 0x64 ] esi
mov esi [ ebp - 0x58 ]
call sub_100073d1
mov edi [ ebp - 0x60 ]
mov ebx esi
call sub_100078bb
mov esi [ ebp - 0x64 ]
test al al
je r-xdata
push esi
lea ecx [ ebp - 0x2c ]
call sub_100071e7
inc [ eax ]
jmp r-xdata
cmp esi ebx
jne r-xdata
push esi
lea ecx [ ebp - 0x2c ]
call sub_100071e7
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
xor ebx ebx
lea eax [ edi + 0x1 ]
cmp [ eax ] bl
jle r-xdata
push esi
lea ecx [ ebp - 0x2c ]
call sub_100071e7
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov edi eax
jmp r-xdata
sub_10006bdc
push 0x68
mov eax sub_1002ce76
call sub_100194f5
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ebx edx
push eax
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x60 ] edi
call sub_100076b7
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x70 ] ecx
call sub_100073f1
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x55 ] 0x0
call sub_100078bb
test al al
jne r-xdata
mov eax [ ebp - 0x28 ]
xor ebx ebx
cmp [ ebp - 0x14 ] 0x10
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] ebx
jae r-xdata
mov eax ebx
call sub_100073be
cmp al 0x2b
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
mov eax ebx
call sub_100073be
cmp al 0x2d
jne r-xdata
mov [ esi ] al
jmp r-xdata
mov edi [ ebp - 0x60 ]
mov ebx [ ebp - 0x54 ]
call sub_100078bb
test al al
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov [ esi ] al
inc esi
mov [ ebp - 0x50 ] esi
mov esi ebx
call sub_100073d1
mov esi [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
mov ebx esi
call sub_100078bb
test al al
jne r-xdata
mov esi [ ebp - 0x54 ]
mov eax esi
call sub_100073be
cmp al 0x30
jl r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov bl al
mov eax esi
call sub_100073be
cmp al bl
jne r-xdata
xor ebx ebx
mov eax esi
call sub_100073be
cmp al 0x39
jg r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
xor edi edi
push ebx
inc edi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x61 ] al
call sub_10004426
mov esi [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
mov [ ebp - 0x68 ] ebx
mov ebx esi
mov [ ebp - 0x4 ] 0x1
call sub_100078bb
test al al
je r-xdata
mov ebx [ ebp - 0x54 ]
jmp r-xdata
jmp r-xdata
call sub_100176e2
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
call sub_100073d1
cmp [ ebp - 0x5c ] ebx
jne r-xdata
cmp [ ebp - 0x5c ] 0x24
jl r-xdata
mov eax esi
call sub_100073be
cmp al 0x30
jl r-xdata
xor ebx ebx
mov edi [ ebp - 0x60 ]
call sub_100078bb
test al al
je r-xdata
mov ebx esi
call sub_100078bb
test al al
je r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov eax esi
call sub_100073be
cmp al 0x30
jne r-xdata
inc [ ebp - 0x6c ]
jmp r-xdata
push [ ebp - 0x68 ]
lea ecx [ ebp - 0x48 ]
call sub_100071e7
xor ebx ebx
cmp [ eax ] bl
je r-xdata
mov eax esi
call sub_100073be
cmp al 0x39
jg r-xdata
cmp [ ebp - 0x55 ] bl
jne r-xdata
lea edi [ ebp - 0x28 ]
mov esi [ ebp - 0x54 ]
mov eax esi
call sub_100073be
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov esi [ ebp - 0x54 ]
mov eax esi
call sub_100073be
cmp al 0x30
jne r-xdata
cmp [ ebp - 0x6c ] 0x0
jge r-xdata
mov eax esi
call sub_100073be
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov [ ebp - 0x49 ] 0x1
call sub_100073d1
mov edi [ ebp - 0x60 ]
mov ebx esi
call sub_100078bb
test al al
je r-xdata
cmp [ ebp - 0x68 ] ebx
je r-xdata
cmp [ ebp - 0x61 ] bl
je r-xdata
cmp [ ebp - 0x5c ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
call sub_10003c5b
jmp r-xdata
mov esi [ ebp - 0x68 ]
mov eax esi
call sub_100073be
cmp al 0x39
jg r-xdata
xor eax eax
cmp [ ebp - 0x55 ] al
jne r-xdata
mov esi [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
mov ebx esi
call sub_100078bb
test al al
jne r-xdata
dec [ ebp - 0x6c ]
mov [ ebp - 0x49 ] 0x1
call sub_100073d1
mov edi [ ebp - 0x60 ]
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x6c ]
mov [ eax ] 0x30
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x68 ]
lea ecx [ ebp - 0x48 ]
call sub_100071e7
cmp [ eax ] bl
jle r-xdata
mov eax esi
call sub_100073be
cmp al [ ebp - 0x61 ]
jne r-xdata
mov eax esi
call sub_100073be
cmp al 0x30
jne r-xdata
inc [ ebp - 0x6c ]
jmp r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
cmp [ edi ] 0x7f
je r-xdata
cmp [ ebp - 0x5c ] 0x24
jge r-xdata
mov ecx [ ebp - 0x74 ]
mov [ ebp - 0x50 ] ecx
cmp [ ebp - 0x49 ] al
jne r-xdata
mov eax esi
call sub_100073be
cmp al 0x65
je r-xdata
mov [ ebp - 0x55 ] 0x1
jmp r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
push ebx
inc ebx
lea edi [ ebp - 0x48 ]
call sub_10004ef7
inc [ ebp - 0x68 ]
mov eax esi
call sub_100073be
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push [ ebp - 0x68 ]
lea ecx [ ebp - 0x48 ]
call sub_100071e7
cmp [ eax ] 0x7f
je r-xdata
dec esi
je r-xdata
mov [ ebp - 0x49 ] 0x1
call sub_100073d1
mov ebx esi
mov eax esi
call sub_100073be
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
mov ecx [ ebp - 0x50 ]
push eax
mov [ ecx ] al
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov eax [ ebp - 0x6c ]
call sub_1001953f
retn
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x65
call sub_100073d1
and [ ebp - 0x5c ] 0x0
mov [ ebp - 0x49 ] 0x0
mov esi ebx
call sub_100078bb
test al al
jne r-xdata
mov eax esi
call sub_100073be
cmp al 0x45
jne r-xdata
mov esi ebx
xor ebx ebx
call sub_100073d1
mov edi [ ebp - 0x60 ]
mov ebx [ ebp - 0x54 ]
call sub_100078bb
test al al
je r-xdata
push [ ebp - 0x68 ]
lea ecx [ ebp - 0x48 ]
call sub_100071e7
inc [ eax ]
jmp r-xdata
cmp esi ebx
jne r-xdata
push esi
lea ecx [ ebp - 0x48 ]
call sub_100071e7
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
call sub_100078bb
test al al
jne r-xdata
mov eax esi
call sub_100073be
cmp al 0x2b
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] bl
jle r-xdata
push esi
lea ecx [ ebp - 0x48 ]
call sub_100071e7
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x55 ] 0x1
mov ebx [ ebp - 0x54 ]
jmp r-xdata
mov esi [ ebp - 0x54 ]
mov eax esi
call sub_100073be
cmp al 0x30
jne r-xdata
mov eax esi
call sub_100073be
cmp al 0x2d
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov edi eax
jmp r-xdata
mov edi [ ebp - 0x60 ]
call sub_100078bb
test al al
je r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov [ ebp - 0x49 ] 0x1
call sub_100073d1
mov edi [ ebp - 0x60 ]
mov ebx esi
call sub_100078bb
test al al
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ ebp - 0x50 ]
call sub_100073d1
mov esi [ ebp - 0x54 ]
mov eax esi
call sub_100073be
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov eax esi
call sub_100073be
cmp al 0x39
jg r-xdata
cmp [ ebp - 0x5c ] 0x8
jge r-xdata
mov [ ebp - 0x49 ] 0x1
call sub_100073d1
mov ebx esi
mov eax esi
call sub_100073be
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
sub_100070b6
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_100157a1
push [ esi + 0x10 ]
call sub_100157a1
push [ esi + 0x14 ]
call sub_100157a1
add esp 0xc
mov [ esi ] r--data
pop esi
retn
sub_10007154
push ebp
mov ebp esp
push ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
call sub_100140a7
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_1001406f
mov eax esi
leave
retn 0x8
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx esi
call sub_10003b0d
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x10
jb r-xdata
mov [ ebp - 0x4 ] ecx
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp - 0x4 ]
sub eax edi
sub eax [ ebp + 0x8 ]
add edx edi
push edx
add ecx edi
add ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10003911
mov dl [ ebp + 0xc ]
add esp 0x10
push [ ebp + 0x8 ]
mov ecx edi
mov eax esi
call sub_1000605e
push ebx
mov ecx esi
call sub_10003c3f
mov ecx [ ecx ]
cmp eax 0x10
jb r-xdata
sub_100071e7
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10017626
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop edi
pop esi
retn 0x4
sub_1000720f
push 0x0
mov eax sub_1002d52e
call sub_1001948c
xor ebx ebx
push 0x4
mov [ edi + 0x24 ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] 0x201
mov [ edi + 0x14 ] 0x6
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ edi + 0x20 ] ebx
mov [ edi + 0x8 ] ebx
call sub_100157d2
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor eax eax
call sub_100144fa
mov [ esi ] eax
call sub_10014328
mov ecx eax
call sub_100086c0
mov eax esi
jmp r-xdata
mov [ edi + 0x4 ] ebx
call sub_1001952b
retn 0x4
push ebx
push 0x4
mov ecx edi
call sub_100088cd
mov [ edi + 0x24 ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x28 ] eax
lea esi [ ebp + 0x8 ]
mov eax edi
mov [ edi + 0x2c ] ebx
call sub_10008742
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000842b
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp + 0x8 ]
mov esi eax
call sub_1000872a
mov eax [ esi ]
push 0x20
mov ecx esi
call [ eax + 0x18 ]
mov [ edi + 0x30 ] al
cmp [ edi + 0x28 ] ebx
jne r-xdata
sub_100072bb
lea edx [ eax + 0x18 ]
mov [ eax + 0x20 ] edx
lea edx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
lea edx [ eax + 0x28 ]
mov [ eax + 0x30 ] edx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
lea edx [ eax + 0x2c ]
mov [ eax + 0x34 ] edx
xor edx edx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] ecx
mov [ ecx ] edx
mov ecx [ eax + 0x24 ]
mov [ ecx ] edx
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov ecx [ eax + 0x10 ]
mov [ ecx ] edx
mov ecx [ eax + 0x20 ]
mov [ ecx ] edx
mov eax [ eax + 0x30 ]
mov [ eax ] edx
retn
sub_100072fd
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
mov ecx [ ebp + 0xc ]
mov dl [ esi ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x4 ] eax
mov eax edi
pop esi
pop ebp
retn
mov [ ebp + 0x8 ] 0x1
call sub_10007d1f
cmp eax 0xffffffff
jne r-xdata
dec [ ebp + 0x10 ]
inc esi
sub_10007336
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov ebx eax
push esi
push [ ebp + 0x18 ]
mov eax ebx
push [ ebp + 0x14 ]
lea edi [ ebp - 0xc ]
call sub_100072fd
mov ecx [ eax ]
mov [ ebp + 0x14 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0xc
add ebx esi
sub [ ebp + 0xc ] esi
mov [ ebp + 0x18 ] ecx
je r-xdata
sub eax ebx
mov esi eax
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
inc ebx
dec [ ebp + 0xc ]
jmp r-xdata
push 0x1
push [ ebp + 0x10 ]
lea esi [ ebp - 0x14 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_100068de
mov ecx [ eax ]
mov [ ebp + 0x14 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
mov [ ebp + 0x18 ] eax
mov esi [ ebp + 0xc ]
push esi
push 0x0
push ebx
call sub_10017710
add esp 0xc
test eax eax
je r-xdata
sub_10007428
push ebp
mov ebp esp
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10003c3f
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push esi
call sub_10007bd0
mov eax esi
pop ebp
retn 0x10
sub_10007456
push 0x10
mov eax sub_1002d70e
call sub_100194bf
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
xor esi esi
push eax
mov bl 0xa
mov [ ebp - 0x14 ] esi
call sub_10008927
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
xor edx edx
mov [ eax + 0x18 ] edx
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
cmp [ ebp - 0x14 ] edx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x18 ]
cmp ecx 0x1
jle r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
call sub_10008780
mov eax edi
call sub_1001952b
retn
push edx
push [ ebp - 0x14 ]
call sub_100088cd
mov [ ebp - 0x4 ] 0x1
mov eax [ eax + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea esi [ ecx - 0x1 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
mov dl bl
call sub_10007d1f
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] 0x4
and [ ebp - 0x4 ] 0x0
test esi esi
jle r-xdata
test esi esi
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov dl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_10007d1f
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov dl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_10007d1f
cmp eax 0xffffffff
jne r-xdata
dec esi
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
dec esi
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_1000757b
push 0x14
mov eax sub_1002d294
call sub_1001948c
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001424c
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_100080ca
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_100080fb
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10014274
mov eax esi
call sub_1001952b
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100078ea
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086c0
push esi
call sub_100143ed
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10017105
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1001905a
sub_10007619
push 0x14
mov eax sub_1002d294
call sub_1001948c
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001424c
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_100080ca
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_100080fb
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10014274
mov eax esi
call sub_1001952b
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100079a2
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086c0
push esi
call sub_100143ed
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10017105
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1001905a
sub_100076b7
push 0x14
mov eax sub_1002d294
call sub_1001948c
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001424c
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_100080ca
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_100080fb
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10014274
mov eax esi
call sub_1001952b
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
call sub_10007a5a
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086c0
push esi
call sub_100143ed
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10017105
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1001905a
sub_10007753
push 0x40
mov eax sub_1002ccff
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
mov al [ ebx ]
mov [ ebp - 0x38 ] 0x2
test al al
je r-xdata
mov edi [ ebp - 0x38 ]
push 0x0
lea esi [ ebp - 0x2c ]
call sub_10004426
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x44 ] 0xfffffffe
mov [ ebp - 0x3c ] 0x1
mov cl al
mov edx ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov eax [ ebp - 0x44 ]
call sub_1001953f
retn
mov al [ edi + ebx ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp - 0x38 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_100071e7
cmp [ eax ] 0x0
je r-xdata
mov cl [ ebx ]
cmp cl al
jne r-xdata
add edi [ ebp - 0x3c ]
lea esi [ edi + ebx ]
mov al [ esi ]
mov [ ebp - 0x40 ] edi
cmp al [ ebx ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_100071e7
movsx eax [ eax ]
add edi eax
jmp r-xdata
inc edi
mov al [ edi + ebx ]
test al al
jne r-xdata
mov eax [ ebp - 0x3c ]
push 0x7f
pop ecx
mov [ ebp - 0x40 ] eax
cmp eax ecx
jb r-xdata
test al al
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x38 ]
jb r-xdata
cmp al cl
je r-xdata
mov esi [ ebp - 0x34 ]
push esi
lea ecx [ ebp - 0x2c ]
call sub_100071e7
mov cl [ ebp - 0x40 ]
mov [ eax ] cl
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] ecx
mov edi [ ebp - 0x4c ]
mov ebx [ ebp - 0x48 ]
call sub_100078bb
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
mov ebx [ ebp - 0x3c ]
cmp ebx 0x7f
jb r-xdata
mov eax ebx
call sub_100073be
cmp [ esi ] al
jne r-xdata
mov esi [ ebp - 0x48 ]
mov edi [ ebp - 0x4c ]
mov ebx esi
call sub_100078bb
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_100071e7
mov [ eax ] bl
jmp r-xdata
push 0x7f
pop ebx
mov [ ebp - 0x2d ] 0x1
inc [ ebp - 0x3c ]
call sub_100073d1
or [ ebp - 0x44 ] 0xffffffff
mov ebx [ ebp + 0x10 ]
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp - 0x40 ]
jmp r-xdata
xor edi edi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] edi
cmp [ ebp - 0x38 ] edi
jbe r-xdata
sub_100078bb
cmp [ ebx + 0x4 ] 0x0
push esi
jne r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov esi ebx
call sub_10007408
xor eax eax
pop esi
cmp [ ebx ] eax
jne r-xdata
mov esi edi
call sub_10007408
cmp [ edi ] eax
je r-xdata
cmp [ edi ] eax
je r-xdata
retn
xor eax eax
inc eax
retn
sub_100078ea
push 0x98
mov eax sub_1002ce48
call sub_1001948c
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_1001952b
retn
cmp [ eax ] edi
jne r-xdata
push 0x10
call sub_100157d2
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0xc ]
call sub_100082ea
push eax
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp - 0x10 ] 0x1
call sub_10008295
mov [ ebp - 0x10 ] 0x3
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
call sub_10014e0d
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_10008307
mov ecx [ ebp + 0x8 ]
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ ecx ] esi
test [ ebp - 0x10 ] al
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
sub_100079a2
push 0x98
mov eax sub_1002ce48
call sub_1001948c
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_1001952b
retn
cmp [ eax ] edi
jne r-xdata
push 0x10
call sub_100157d2
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0xc ]
call sub_100082ea
push eax
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp - 0x10 ] 0x1
call sub_10008295
mov [ ebp - 0x10 ] 0x3
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
call sub_10014e0d
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_10008307
mov ecx [ ebp + 0x8 ]
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ ecx ] esi
test [ ebp - 0x10 ] al
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
sub_10007a5a
push 0x98
mov eax sub_1002ce07
call sub_1001948c
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
push 0x4
pop eax
call sub_1001952b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x18
call sub_100157d2
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_100082ea
push eax
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] bl
push eax
mov [ ebp - 0x10 ] ebx
call sub_10008295
and [ esi + 0x4 ] 0x0
push 0x3
pop eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
push esi
mov [ esi ] r--data
call sub_10007b07
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_10008307
mov [ ebp - 0x4 ] 0x4
test [ ebp - 0x10 ] 0x2
mov [ edi ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
sub_10007b07
push 0x4
mov eax sub_1002c900
call sub_100194bf
mov esi [ ebp + 0x8 ]
call sub_100176e2
mov edi eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] eax
call sub_10014e0d
mov eax [ edi + 0x8 ]
call sub_10007cd2
mov [ esi + 0x8 ] eax
call sub_10014e0d
mov eax r--data
call sub_10007cd2
mov [ esi + 0x10 ] eax
call sub_10014e0d
mov eax r--data
call sub_10007cd2
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x14 ] eax
call sub_10014e0d
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_10014e0d
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
call sub_10014e0d
mov eax r--data
call sub_10007cd2
mov [ esi + 0x8 ] eax
call sub_10014e0d
mov [ esi + 0xc ] 0x2e
call sub_10014e0d
mov [ esi + 0xd ] 0x2c
call sub_1001952b
retn 0x4
sub_10007ba8
mov esi [ ebp + 0x8 ]
push [ esi + 0x8 ]
call sub_100157a1
push [ esi + 0x10 ]
call sub_100157a1
push [ esi + 0x14 ]
call sub_100157a1
add esp 0xc
xor eax eax
push eax
push eax
call sub_1001905a
int3
sub_10007bd0
push 0xc
mov eax sub_1002ccdc
call sub_100194bf
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x18 ] ecx
cmp eax 0xfffffffc
je r-xdata
sub esi edi
sar esi 0x1
mov eax esi
mov esi [ ebp + 0x8 ]
call sub_10007cf9
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
test eax eax
je r-xdata
call sub_10017626
cmp eax ecx
je r-xdata
call sub_1001952b
retn 0x18
cmp eax 0xfffffffc
je r-xdata
call sub_10017626
mov eax [ ebp + 0x10 ]
cmp eax [ ebp + 0x18 ]
je r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
push eax
inc ebx
call sub_10004ef7
mov eax [ ebp + 0x10 ]
cmp eax 0xfffffffc
je r-xdata
test eax eax
jne r-xdata
add [ ebp + 0x14 ] 0x2
jmp r-xdata
test eax eax
jne r-xdata
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10017626
mov eax [ ebp + 0x10 ]
cmp eax 0xfffffffc
je r-xdata
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10017626
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10017626
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ ebp + 0x14 ] eax
jb r-xdata
call sub_10017626
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x14 ]
lea ecx [ ecx + edx * 2 ]
cmp [ ebp + 0x14 ] ecx
jb r-xdata
sub_10007cd2
push esi
push edi
mov edi eax
push edi
call sub_100171f0
mov esi eax
inc esi
push esi
call sub_10014015
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
test esi esi
ja r-xdata
mov dl [ edi ]
dec esi
mov [ ecx ] dl
inc ecx
inc edi
pop edi
pop esi
retn
sub_10007cf9
push edi
mov edi [ esi + 0x14 ]
cmp edi eax
ja r-xdata
pop edi
retn
cmp [ esi + 0x18 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10003b0d
test al al
je r-xdata
push edi
mov ecx esi
call sub_10003c3f
sub_10007d1f
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
movzx edx dl
push edx
call [ eax + 0x4 ]
retn
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
push esi
lea esi [ eax + 0x1 ]
mov [ ecx ] esi
mov [ eax ] dl
movzx eax dl
pop esi
retn
test eax eax
jle r-xdata
sub_10007d55
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi eax
push edi
mov ecx esi
call sub_10003825
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_1001406f
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebx
retn 0x8
sub edi eax
push ebx
push edi
mov eax esi
call sub_10007def
jmp r-xdata
mov eax esi
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_10003b0d
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ esp + 0x14 ]
sub eax ecx
push eax
add ecx edx
push ecx
call sub_10003c23
add esp 0x10
push edi
mov ecx esi
call sub_10003c3f
sub_10007def
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x14 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax [ ebp + 0x8 ]
cmp eax ebx
jae r-xdata
call sub_100140a7
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0xc ] ebx
call sub_1001406f
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10003b0d
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
push [ ebp + 0xc ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0x8 ]
add edi ebx
sub eax ecx
push edi
push eax
add ecx edx
push ecx
call sub_10003c23
add esp 0x10
push [ ebp - 0x4 ]
mov ecx esi
call sub_10003c3f
sub_10007ec1
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_10003c23
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_10007f42
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_10003c23
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_10008017
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_100141c4
mov ecx edi
call sub_1000872a
push edi
call sub_100157ac
pop ecx
sub_10008040
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_1001416e
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10008085
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_1001416e
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_100080ca
push ebp
mov ebp esp
push ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1001424c
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_10014274
inc [ rw-data ]
mov eax [ rw-data ]
mov [ esi ] eax
sub_100080fb
mov ecx [ eax ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
retn
cmp [ ecx + 0x14 ] al
je r-xdata
test eax eax
jne r-xdata
call sub_10014328
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
retn
sub_10008145
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jge r-xdata
push [ esi + 0x10 ]
call sub_10017636
jmp r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_100157a1
pop ecx
sub_10008172
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100145f0
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_100081b1
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1001475d
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_10008213
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10016f87
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x10
call sub_10017626
sub_10008241
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x28 ]
pop ebp
retn 0x10
sub_10008267
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_10016f87
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x14
call sub_10017626
sub_10008295
push 0x0
mov eax sub_1002cb60
call sub_1001948c
mov edi [ ebp + 0x8 ]
push 0x0
mov ecx edi
call sub_1001424c
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x4 ]
call sub_10008a6b
lea esi [ edi + 0x20 ]
call sub_10008a6b
lea esi [ edi + 0x3c ]
call sub_10008a6b
lea esi [ edi + 0x58 ]
call sub_10008a6b
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x4
push edi
call sub_10014594
pop ecx
pop ecx
mov eax edi
call sub_1001952b
retn 0x8
sub_10008307
push 0x0
mov eax sub_1002cb60
call sub_1001948c
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x4
call sub_1001442b
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x58 ]
call sub_10003c5b
push 0x0
push 0x1
lea ecx [ esi + 0x3c ]
call sub_10003c5b
push 0x0
push 0x1
lea ecx [ esi + 0x20 ]
call sub_10003c5b
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_10003c5b
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_10014274
call sub_1001952b
retn 0x4
sub_10008367
push 0xa8
mov eax sub_1002d32e
call sub_1001948c
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_1001952b
retn
cmp [ esi ] edi
jne r-xdata
push 0x18
call sub_100157d2
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] edi
cmp ebx edi
je r-xdata
xor ebx ebx
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0xc ]
call sub_100082ea
push eax
lea eax [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp - 0x10 ] 0x1
call sub_10008295
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x10 ] 0x3
mov [ ebx + 0x4 ] edi
mov [ ebx ] r--data
call sub_100146fd
lea edi [ ebx + 0x8 ]
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
pop ecx
xor edi edi
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xb4 ]
push eax
call sub_10008307
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] ebx
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
sub_1000842b
push 0x14
mov eax sub_1002d294
call sub_1001948c
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001424c
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_100080ca
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_100080fb
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10014274
mov eax esi
call sub_1001952b
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10008367
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086c0
push esi
call sub_100143ed
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10017105
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1001905a
sub_100084c9
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_100084ee
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x14 ]
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_1000851f
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x10 ]
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_1000853f
push 0xc
mov eax sub_1002d6c6
call sub_100194bf
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea ecx [ eax + edi ]
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x2
call sub_100088cd
xor al al
mov ecx [ ecx + 0x2c ]
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi ecx
call sub_100088f6
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea ecx [ eax + edi ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x10 ]
test cl 0x1
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp + 0xc ]
call sub_10008742
and [ ebp - 0x4 ] 0x0
push eax
call sub_1000842b
pop ecx
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_1000872a
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
call sub_1000851f
or ebx 0xffffffff
call sub_1001952b
retn 0x8
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x10 ]
movzx eax al
test [ ecx + eax * 2 ] 0x48
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push 0x0
add ecx edi
push 0x1
call sub_100088cd
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi + 0x28 ]
mov ecx [ esi + 0x20 ]
xor eax eax
cmp [ ecx ] eax
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp eax 0x1
jle r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax ]
mov ecx esi
call sub_100084ee
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
inc [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov ecx esi
call sub_1000851f
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax ebx
jne r-xdata
sub_1000867c
push 0x0
mov eax sub_1002d6e9
call sub_1001948c
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_1000853f
mov [ esi + 0x4 ] al
mov eax esi
call sub_1001952b
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_100141db
sub_100086c0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1001424c
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_10014274
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_100086e8
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1001424c
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_10014274
pop edi
mov eax esi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_10008780
push 0x0
mov eax sub_1002d6e9
call sub_1001948c
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call j_sub_100197ea
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_10008751
call sub_1001952b
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_100141e4
sub_10008826
push 0x88
mov eax sub_1002d2ed
call sub_1001948c
xor ebx ebx
cmp [ ebp + 0x8 ] bl
je r-xdata
mov eax [ ecx + 0xc ]
and eax [ ecx + 0x8 ]
test al 0x4
je r-xdata
push ebx
push ebx
push 0x2
pop ebx
test bl al
je r-xdata
push r--data
lea ecx [ ebp - 0x50 ]
call sub_100038ef
mov [ ebp - 0x4 ] ebx
push r--data
lea ecx [ ebp - 0x94 ]
call sub_100038ef
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10008a36
mov [ ebp - 0x78 ] r--data
push r--data
lea eax [ ebp - 0x78 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x50 ]
call sub_100038ef
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
call sub_1001905a
push eax
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_10008a36
mov [ ebp - 0x34 ] r--data
push r--data
lea eax [ ebp - 0x34 ]
sub_100088cd
push ecx
mov eax [ ecx + 0x8 ]
or eax [ esp + 0x8 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0x8 ] eax
test [ ecx + 0xc ] eax
je r-xdata
or eax 0x4
pop ecx
retn 0x8
push [ esp + 0xc ]
call sub_10008826
sub_100088f6
push ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax esi
pop ecx
retn
mov eax [ eax + 0x28 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push 0x0
push 0x4
add ecx esi
call sub_100088cd
sub_10008927
push 0x0
mov eax sub_1002d6e9
call sub_1001948c
mov ebx [ ebp + 0x8 ]
mov [ ebx ] edi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ eax + 0x4 ]
call sub_100141db
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0x8 ] 0x0
sete al
mov [ ebx + 0x4 ] al
mov eax ebx
call sub_1001952b
retn 0x4
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov esi eax
call sub_100088f6
sub_10008986
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_1001416e
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_100089e0
push 0x4
mov eax sub_1002cda4
call sub_1001948c
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10017085
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10003bfd
mov eax esi
call sub_1001952b
retn 0x4
sub_10008a36
push 0x0
mov eax sub_1002cd81
call sub_1001948c
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_10017004
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10003bfd
mov eax esi
call sub_1001952b
retn 0x8
sub_10008a7e
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10017626
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
retn
sub_10008abc
push ebx
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x8
push edi
mov edi eax
jb r-xdata
lea ebx [ esi + 0x4 ]
mov ebx [ esi + 0x4 ]
jmp r-xdata
call sub_10008a7e
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_10008af8
push 0xd0
mov eax sub_1002d9b5
call sub_1001948c
mov esi ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ esi + 0x18 ] 0x10
mov eax [ esi + 0x14 ]
jb r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100038ef
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0xdc ]
push eax
call sub_10009576
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xdc ]
call sub_10008bba
call sub_1001952b
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100038ef
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
push eax
push esi
lea eax [ ebp - 0xdc ]
push eax
call sub_10004597
mov eax [ ebp - 0xdc ]
mov eax [ eax + 0x4 ]
cmp [ ebp + eax - 0xd4 ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call sub_10008a36
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_1001905a
sub_10008bd6
push 0x78
mov eax sub_1002daad
call sub_100194f5
mov eax [ ebp + 0x8 ]
push r--data
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x4c ] eax
call sub_100032b9
lea eax [ ebp - 0x48 ]
xor edi edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_10012fb1
pop ecx
push edi
push 0x1
mov [ ebp - 0x4 ] 0x2
call sub_1000339d
lea edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x84 ]
call sub_100130da
push r--data
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10003675
add esp 0xc
push edi
push 0x1
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000339d
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10008af8
pop ecx
push edi
push 0x1
lea esi [ ebp - 0x2c ]
call sub_1000339d
push edi
push 0x1
lea esi [ ebp - 0x48 ]
call sub_1000339d
call sub_1001953f
retn
sub_10008c71
push ebp
mov ebp esp
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
sub esp 0x18
push esi
push edi
push 0x6
pop ecx
test [ edx + ebx + 0x8 ] cl
jne r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
mov eax [ ecx + 0x28 ]
neg eax
sbb eax eax
and eax 0xfffffffc
add eax 0x4
and eax 0x17
mov [ ecx + 0x8 ] eax
test [ ecx + 0xc ] eax
je r-xdata
push 0x1
sub esp 0x18
mov edi esp
mov eax edx
mov eax [ eax + ebx + 0x28 ]
mov edx [ eax ]
lea esi [ ebp + 0x8 ]
[ edi ] [ esi ]
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx eax
call [ edx + 0x28 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
add eax ecx
cmp eax [ r--data ]
jne r-xdata
pop edi
mov eax ebx
pop esi
leave
retn 0x18
push 0x0
call sub_10008826
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push 0x0
push 0x2
add ecx ebx
call sub_100088cd
jmp r-xdata
sub_10008cf4
push ebp
mov ebp esp
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
sub esp 0x18
test [ ecx + esi + 0x8 ] 0x6
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
mov eax [ ecx + 0x28 ]
neg eax
sbb eax eax
and eax 0xfffffffc
add eax 0x4
and eax 0x17
mov [ ecx + 0x8 ] eax
test [ ecx + 0xc ] eax
je r-xdata
push 0x1
mov eax ecx
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push 0x2
push 0x0
lea edx [ ebp - 0x18 ]
push edx
call [ eax + 0x24 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
add ecx eax
cmp ecx [ r--data ]
jne r-xdata
mov eax esi
leave
retn
push 0x0
call sub_10008826
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push 0x0
push 0x2
add ecx esi
call sub_100088cd
jmp r-xdata
sub_10008d67
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add eax ecx
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax [ r--data ]
mov [ esi ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov eax [ eax + 0x28 ]
mov edx [ eax ]
push 0x1
push 0x1
push 0x0
push esi
mov ecx eax
call [ edx + 0x24 ]
jmp r-xdata
mov eax esi
retn
sub_10008d9c
push 0x4
mov eax sub_1002d688
call sub_1001948c
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x58 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x8 ]
xor ebx ebx
push esi
inc ebx
push edi
mov [ ebp - 0x10 ] ebx
call sub_1000609c
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push esi
mov [ edi + eax ] r--data
call sub_100060d8
mov eax esi
mov [ esi ] r--data
mov [ esi + 0x48 ] 0x0
mov [ esi + 0x41 ] 0x0
call sub_100072bb
mov eax [ rw-data ]
and [ esi + 0x4c ] 0x0
and [ esi + 0x3c ] 0x0
mov [ esi + 0x44 ] eax
push 0x21
push [ ebp + 0xc ]
mov ebx esi
mov [ ebp - 0x4 ] 0x2
call sub_100096f0
test eax eax
jne r-xdata
mov eax edi
call sub_1001952b
retn 0x8
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push 0x2
add ecx edi
call sub_100088cd
sub_10008e37
push 0x4
mov eax sub_1002ccc1
call sub_1001948c
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x58 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x58 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_10008e76
mov eax [ esi - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
call sub_1001952b
retn
sub_10008e76
push 0x4
mov eax sub_1002cc9b
call sub_1001948c
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x48 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_10008017
call sub_1001952b
retn
call sub_10009769
sub_10008ead
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1002cc6b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
or esi 0xffffffff
mov ebx ecx
mov [ esp + 0x28 ] ebx
cmp eax esi
jne r-xdata
mov ecx [ ebx + 0x24 ]
mov edx [ ecx ]
test edx edx
je r-xdata
xor eax eax
mov ecx [ ebx + 0x4c ]
test ecx ecx
jne r-xdata
mov ecx [ ebx + 0x34 ]
mov edi [ ecx ]
add edi edx
cmp edx edi
jae r-xdata
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov eax esi
jmp r-xdata
dec [ ecx ]
mov ebx [ ebx + 0x24 ]
mov ecx [ ebx ]
lea edx [ ecx + 0x1 ]
mov [ ebx ] edx
mov [ ecx ] al
jmp r-xdata
push 0x0
push 0x8
pop edi
lea esi [ esp + 0x50 ]
mov [ esp + 0x1b ] al
call sub_10004426
and [ esp + 0x78 ] 0x0
mov eax [ esp + 0x60 ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x34 ]
mov ecx esi
call sub_10009bf1
mov esi eax
call sub_100096bd
mov edi eax
add edi [ esp + 0x18 ]
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0x4c ]
call sub_10009bf1
mov esi eax
call sub_100096bd
mov ecx [ ebx + 0x3c ]
lea esi [ esp + 0x1c ]
push esi
push edi
mov [ esp + 0x20 ] eax
push [ esp + 0x20 ]
mov eax [ ecx ]
lea esi [ esp + 0x2c ]
push esi
lea esi [ esp + 0x28 ]
push esi
lea edx [ ebx + 0x44 ]
lea esi [ esp + 0x2b ]
push esi
push edx
mov [ esp + 0x40 ] edx
call [ eax + 0x14 ]
jmp r-xdata
movsx eax al
push ecx
push eax
call sub_10017806
pop ecx
cmp eax esi
mov eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_10015160
mov esp ebp
pop ebp
retn 0x4
test eax eax
jge r-xdata
jmp r-xdata
cmp eax 0x1
jg r-xdata
or esi 0xffffffff
cmp eax 0x3
jne r-xdata
lea eax [ esp + 0x3c ]
lea ecx [ esp + 0x4c ]
call sub_10009bf1
mov esi eax
call sub_100096bd
mov edi [ esp + 0x1c ]
sub edi eax
je r-xdata
movsx eax [ esp + 0x17 ]
push [ ebx + 0x4c ]
push eax
call sub_10017806
or esi 0xffffffff
pop ecx
pop ecx
cmp eax esi
je r-xdata
lea eax [ esp + 0x17 ]
mov [ ebx + 0x41 ] 0x1
cmp [ esp + 0x20 ] eax
jne r-xdata
push [ ebx + 0x4c ]
lea eax [ esp + 0x48 ]
push edi
push 0x1
lea ecx [ esp + 0x58 ]
call sub_10009bf1
mov esi eax
call sub_100096bd
push eax
call sub_10017a74
add esp 0x10
cmp edi eax
jne r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x54 ]
call sub_10003c5b
jmp r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
test edi edi
ja r-xdata
mov eax [ esp + 0x60 ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x34 ]
lea ecx [ esp + 0x4c ]
call sub_10009bf1
mov esi eax
call sub_100096bd
mov edi eax
add edi [ esp + 0x18 ]
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0x4c ]
call sub_10009bf1
mov esi eax
call sub_100096bd
mov ecx [ ebx + 0x3c ]
mov edx [ ecx ]
lea esi [ esp + 0x1c ]
push esi
push edi
push eax
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x2b ]
push eax
push [ esp + 0x3c ]
call [ edx + 0x14 ]
cmp [ esp + 0x60 ] 0x20
jae r-xdata
push 0x0
push 0x8
pop ebx
lea edi [ esp + 0x50 ]
call sub_10004ef7
mov ebx [ esp + 0x28 ]
sub_100090f2
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
push ebx
mov ebx [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov edx [ ecx + 0x10 ]
cmp [ edx ] eax
jae r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ ecx + 0x3c ] 0x0
jne r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov ecx [ ecx + 0x20 ]
dec [ ecx ]
mov eax ebx
inc eax
neg eax
sbb eax eax
and eax ebx
jmp r-xdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne r-xdata
push eax
movzx eax bl
push eax
call sub_10017be7
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
pop ebx
retn 0x4
mov eax ebx
jmp r-xdata
sub_10009157
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x14 ]
mov edi eax
or eax 0xffffffff
cmp edi eax
je r-xdata
mov edx [ esi + 0x30 ]
mov eax [ eax ]
mov edx [ edx ]
add edx eax
cmp eax edx
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x8 ]
mov eax edi
movzx eax [ ecx ]
pop esi
retn
sub_10009193
push 0x5c
mov eax sub_1002cc3e
call sub_100194f5
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
xor edi edi
mov [ ebp - 0x38 ] esi
cmp eax edi
je r-xdata
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x30 ]
mov eax [ eax ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
cmp [ esi + 0x3c ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
movzx eax [ eax ]
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_10003c3f
mov [ ebp - 0x4 ] edi
push [ esi + 0x4c ]
call sub_10017c59
pop ecx
cmp eax 0xffffffff
je r-xdata
push eax
call sub_10017c59
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1001953f
retn
or esi 0xffffffff
add esi 0x44
mov [ ebp - 0x40 ] esi
movzx eax al
jmp r-xdata
xor edi edi
inc edi
cmp eax edi
jle r-xdata
lea eax [ ebp - 0x2d ]
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x3c ] eax
jne r-xdata
cmp eax 0x3
jne r-xdata
mov edi [ ebp - 0x18 ]
lea eax [ ebp - 0x58 ]
call sub_10009bf1
mov esi eax
call sub_100096bd
sub edi [ ebp - 0x34 ]
mov esi eax
add esi edi
jmp r-xdata
lea eax [ ebp - 0x60 ]
call sub_10009bf1
mov esi eax
call sub_100096bd
mov ecx [ ebp - 0x34 ]
sub ecx eax
push ecx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1000392d
cmp [ ebp - 0x18 ] edi
jb r-xdata
test esi esi
jg r-xdata
xor ebx ebx
push eax
inc ebx
lea edi [ ebp - 0x2c ]
call sub_10004ef7
mov ebx [ ebp - 0x18 ]
lea eax [ ebp - 0x48 ]
mov ecx edi
call sub_10009bf1
mov esi eax
call sub_100096bd
mov edi eax
lea eax [ ebp - 0x68 ]
lea ecx [ ebp - 0x2c ]
add edi ebx
call sub_10009bf1
mov esi eax
call sub_100096bd
mov ebx [ ebp - 0x38 ]
mov ecx [ ebx + 0x3c ]
mov edx [ ecx ]
lea esi [ ebp - 0x3c ]
push esi
lea esi [ ebp - 0x2c ]
push esi
lea esi [ ebp - 0x2d ]
push esi
lea esi [ ebp - 0x34 ]
push esi
push edi
push eax
push [ ebp - 0x40 ]
call [ edx + 0x10 ]
test eax eax
jl r-xdata
push [ ebx + 0x4c ]
call sub_10017c59
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
lea eax [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
call sub_10009bf1
mov esi eax
call sub_100096bd
push eax
lea eax [ ebp - 0x2d ]
push edi
push eax
call sub_10016f87
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x34 ]
push [ ebx + 0x4c ]
dec esi
movsx eax [ esi + eax ]
push eax
call sub_10017be7
pop ecx
pop ecx
movzx esi [ ebp - 0x2d ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov eax esi
jmp r-xdata
sub_1000933f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
lea edi [ esi + 0x40 ]
xor ebx ebx
cmp [ eax ] edi
jne r-xdata
cmp [ esi + 0x4c ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_100097f6
test al al
je r-xdata
cmp [ esi + 0x3c ] ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
dec [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x4c ]
call sub_10017de7
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10017e6c
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
cmp [ eax ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10009400
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi ecx
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ esp + 0x14 ] eax
cmp [ esi + 0x4c ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_100097f6
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10017eda
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10017e6c
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x1
push edi
push [ esi + 0x4c ]
call sub_10017de7
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x20 ]
lea ecx [ esi + 0x40 ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] ecx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_100094d4
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
cmp [ esp + 0x8 ] ecx
jne r-xdata
push [ esp + 0xc ]
push ecx
push [ esp + 0x10 ]
push eax
call sub_10017f1f
add esp 0x10
test eax eax
jne r-xdata
cmp [ esp + 0xc ] ecx
jne r-xdata
push edi
mov edi [ esi + 0x4c ]
push 0x1
call sub_100097b2
mov eax esi
pop edi
jmp r-xdata
push 0x4
pop ecx
pop esi
retn 0x8
sub_1000951b
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x4c ]
call sub_100181a7
pop ecx
test eax eax
jge r-xdata
or eax 0xffffffff
pop esi
retn
sub_10009546
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_10009961
mov esi eax
mov eax [ esi ]
pop ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax edi
mov [ edi + 0x3c ] esi
call sub_100072bb
and [ edi + 0x3c ] 0x0
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_10009576
push 0x4
mov eax sub_1002d63b
call sub_1001948c
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov edi [ eax + 0x4 ]
lea ebx [ esi + 0x4 ]
push ebx
add edi esi
mov [ ebp - 0x10 ] 0x1
call sub_1000720f
push 0x2
pop edi
mov [ ebp - 0x4 ] edi
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push ebx
mov [ esi + eax ] r--data
call sub_100060d8
mov eax ebx
mov [ ebx ] r--data
mov [ ebx + 0x48 ] 0x0
mov [ ebx + 0x41 ] 0x0
call sub_100072bb
mov eax [ rw-data ]
and [ ebx + 0x4c ] 0x0
and [ ebx + 0x3c ] 0x0
mov [ ebx + 0x44 ] eax
push 0x22
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x3
call sub_100096f0
test eax eax
jne r-xdata
mov eax esi
call sub_1001952b
retn 0x8
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push edi
add ecx esi
call sub_100088cd
sub_10009624
push 0x4
mov eax sub_1002cd5e
call sub_1001948c
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_10008e76
mov eax [ esi - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x4 ] r--data
call sub_1001952b
retn
sub_100096bd
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_10017626
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10017626
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_100096f0
push 0x0
mov eax sub_1002d2b7
call sub_1001948c
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
xor eax eax
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10014e23
add esp 0xc
test eax eax
je r-xdata
push 0x1
mov edi eax
mov esi ebx
call sub_100097b2
lea esi [ ebp + 0xc ]
mov eax ebx
call sub_10009952
and [ ebp - 0x4 ] 0x0
push eax
call sub_10009961
mov esi eax
mov eax [ esi ]
pop ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax ebx
mov [ ebx + 0x3c ] esi
call sub_100072bb
and [ ebx + 0x3c ] 0x0
jmp r-xdata
call sub_1001952b
retn 0x8
lea ecx [ ebp + 0xc ]
call sub_1000872a
mov eax ebx
jmp r-xdata
sub_10009769
push ecx
push ebx
xor ebx ebx
push edi
mov edi esi
cmp [ esi + 0x4c ] ebx
je r-xdata
xor edi edi
mov ecx esi
call sub_100097f6
test al al
jne r-xdata
push [ esi + 0x4c ]
call sub_10015725
pop ecx
test eax eax
je r-xdata
xor edi edi
mov eax esi
mov [ esi + 0x48 ] bl
mov [ esi + 0x41 ] bl
call sub_100072bb
mov eax [ rw-data ]
mov [ esi + 0x44 ] eax
mov eax edi
pop edi
mov [ esi + 0x4c ] ebx
mov [ esi + 0x3c ] ebx
pop ebx
pop ecx
retn
sub_100097b2
cmp [ esp + 0x4 ] 0x1
mov [ esi + 0x41 ] 0x0
sete al
mov [ esi + 0x48 ] al
mov eax esi
call sub_100072bb
test edi edi
je r-xdata
mov eax [ rw-data ]
and [ esi + 0x3c ] 0x0
mov [ esi + 0x4c ] edi
mov [ esi + 0x44 ] eax
retn 0x4
lea eax [ edi + 0x8 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
lea eax [ edi + 0x4 ]
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
sub_100097f6
push 0x54
mov eax sub_1002cc11
call sub_100194f5
mov ebx ecx
cmp [ ebx + 0x3c ] 0x0
mov [ ebp - 0x38 ] ebx
je r-xdata
mov al 0x1
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax [ ebx ]
push 0xffffffff
call [ eax + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push 0x0
push 0x8
pop edi
lea esi [ ebp - 0x30 ]
call sub_10004426
and [ ebp - 0x4 ] 0x0
lea eax [ ebx + 0x44 ]
mov [ ebp - 0x3c ] eax
xor al al
jmp r-xdata
mov [ ebx + 0x41 ] 0x0
dec eax
je r-xdata
call sub_1001953f
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
push [ ebx + 0x4c ]
lea eax [ ebp - 0x50 ]
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10009bf1
mov esi eax
call sub_100096bd
push eax
call sub_10017a74
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x58 ]
lea ecx [ ebp - 0x30 ]
call sub_10009bf1
mov esi eax
call sub_100096bd
mov edi [ ebp - 0x34 ]
sub edi eax
je r-xdata
dec eax
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
test edi edi
jne r-xdata
xor bl bl
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
mov al bl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x48 ]
lea ecx [ ebp - 0x30 ]
call sub_10009bf1
mov esi eax
call sub_100096bd
mov edi eax
add edi [ ebp - 0x40 ]
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x30 ]
call sub_10009bf1
mov esi eax
call sub_100096bd
mov ecx [ ebx + 0x3c ]
mov edx [ ecx ]
lea esi [ ebp - 0x34 ]
push esi
push edi
push eax
push [ ebp - 0x3c ]
call [ edx + 0x18 ]
sub eax 0x0
je r-xdata
push edi
push 0x8
pop ebx
lea edi [ ebp - 0x30 ]
call sub_10004ef7
mov ebx [ ebp - 0x38 ]
jmp r-xdata
sub_10009961
push 0x14
mov eax sub_1002d294
call sub_1001948c
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001424c
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_100080ca
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_100080fb
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10014274
mov eax esi
call sub_1001952b
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
call sub_100099fd
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086c0
push esi
call sub_100143ed
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10017105
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1001905a
sub_100099fd
push 0x98
mov eax sub_1002ce48
call sub_1001948c
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
push 0x2
pop eax
call sub_1001952b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_100157d2
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_100082ea
push eax
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] bl
push eax
mov [ ebp - 0x10 ] ebx
call sub_10008295
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_10008307
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ edi ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
sub_10009abd
push 0x4
mov eax sub_1002cda4
call sub_1001948c
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10017085
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10003bfd
mov eax esi
call sub_1001952b
retn 0x4
sub_10009af7
push 0x4
mov eax sub_1002cda4
call sub_1001948c
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10017004
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10003bfd
mov eax esi
call sub_1001952b
retn 0x4
sub_10009bb4
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10017626
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
retn
sub_10009bf1
push ebx
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
push edi
mov edi eax
jb r-xdata
lea ebx [ esi + 0x4 ]
mov ebx [ esi + 0x4 ]
jmp r-xdata
call sub_10009bb4
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_10009c11
push 0x3e4
mov eax sub_1002d972
call sub_100194f5
and [ ebp - 0x2b0 ] 0x0
lea eax [ ebp - 0x3f0 ]
push eax
mov [ ebp - 0x2b4 ] edi
mov ebx edx
call sub_100048f5
lea eax [ ebp - 0x368 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000488d
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x3f0 ]
mov ecx [ eax + 0x4 ]
lea ecx [ ebp + ecx - 0x3f0 ]
call sub_10009ee4
mov eax [ ebp - 0x368 ]
mov ecx [ eax + 0x4 ]
lea ecx [ ebp + ecx - 0x368 ]
call sub_10009ee4
lea esi [ ebp - 0xf8 ]
call sub_10010a13
lea eax [ ebp - 0xd0 ]
mov [ ebp - 0x2a8 ] eax
lea eax [ ebp - 0x2ac ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x2a8 ]
mov [ ebp - 0x2ac ] ebx
mov ecx esi
push eax
lea ebx [ ebp - 0x2a4 ]
lea esi [ ebp - 0x2a0 ]
call sub_10010aeb
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x2a4 ]
lea eax [ ebp - 0x360 ]
push eax
call sub_100044b9
push eax
call sub_10007456
pop ecx
push [ ebp - 0x2a4 ]
lea eax [ ebp - 0xd0 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
call sub_10004597
push 0x8
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
call sub_10004597
xor ebx ebx
inc ebx
jmp r-xdata
push r--data
lea ecx [ ebp - 0xec ]
call sub_100038ef
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x3f0 ]
mov eax [ eax + 0x4 ]
test [ ebp + eax - 0x3e8 ] bl
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x3f0 ]
call sub_10009e3c
test eax eax
jbe r-xdata
lea eax [ ebp - 0x2a4 ]
push eax
lea edx [ ebp - 0x38 ]
lea esi [ ebp - 0x2a0 ]
call sub_10010c80
pop ecx
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x2a4 ]
lea esi [ ebp - 0x2a0 ]
call sub_10010bb8
add esp 0xc
test eax eax
jne r-xdata
push [ ebp - 0x2a4 ]
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
call sub_10004597
mov ecx edi
lea eax [ ebp - 0x368 ]
call sub_100049be
lea eax [ ebp - 0x368 ]
mov [ ebp - 0x2b0 ] ebx
mov [ ebp - 0x4 ] bl
call sub_10003d33
lea eax [ ebp - 0x3f0 ]
mov [ ebp - 0x4 ] 0x0
call sub_10003d33
mov eax edi
call sub_1001953f
retn
push r--data
lea ecx [ ebp - 0xec ]
call sub_100038ef
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
push r--data
lea ecx [ ebp - 0xec ]
call sub_100038ef
mov [ ebp - 0x4 ] 0x4
jmp r-xdata
push [ ebp - 0x2a4 ]
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
call sub_10004597
lea eax [ ebp - 0xec ]
push eax
lea eax [ ebp - 0x2dc ]
push eax
call sub_10008a36
push r--data
lea eax [ ebp - 0x2dc ]
push eax
call sub_1001905a
sub_10009e3c
push 0x8
mov eax sub_1002d8fe
call sub_1001948c
mov esi ecx
push 0x1
push esi
lea eax [ ebp - 0x14 ]
xor ebx ebx
push eax
xor edi edi
mov [ esi + 0x4 ] ebx
call sub_1000867c
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x10 ] bl
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx + 0x20 ]
cmp [ eax ] ebx
je r-xdata
push 0x2
pop edi
jmp r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp edi ebx
je r-xdata
cmp eax 0x18
jl r-xdata
mov eax [ ecx ]
call [ eax + 0xc ]
cmp eax ebx
jge r-xdata
cmp eax ebx
jg r-xdata
mov esi [ esi + 0x4 ]
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push edi
call sub_100088cd
push eax
push [ ebp + 0x8 ]
push esi
call sub_10004f3b
push 0x18
pop eax
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
mov eax esi
call sub_1001952b
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_100141e4
sub_10009efd
push r--data
push [ esp + 0x8 ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0x10
cmp [ esp + 0x4 ] 0x3ef
jne r-xdata
push 0x3
call sub_10018c98
int3
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
pop ecx
pop ecx
sub_10009f66
or [ esi + 0x260 ] 0xffffffff
xor ecx ecx
push 0x100
lea eax [ esi + 0x58 ]
push ecx
push eax
mov [ esi + 0x44 ] ecx
mov [ esi + 0x4c ] ecx
mov [ esi + 0x50 ] ecx
call sub_10015500
add esp 0xc
inc [ esi + 0x26c ]
retn
sub_10009fa6
push ebx
xor ebx ebx
push esi
cmp edi ebx
je r-xdata
push 0xfffffffe
cmp [ edi + 0x24 ] ebx
jne r-xdata
cmp [ edi + 0x28 ] ebx
jne r-xdata
mov [ edi + 0x24 ] sub_10009f43
push 0x1
push 0xd9b0
push [ edi + 0x2c ]
call [ edi + 0x24 ]
mov esi eax
add esp 0xc
cmp esi ebx
jne r-xdata
mov [ edi + 0x28 ] sub_10009f54
push 0x1
mov [ esi ] edi
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
push 0x36ee80
push [ edi + 0x2c ]
call [ edi + 0x24 ]
push 0x1
mov [ esi + 0x10 ] eax
push 0x36ef08
push [ edi + 0x2c ]
call [ edi + 0x24 ]
push 0x1
mov [ esi + 0x14 ] eax
push 0x40004
push [ edi + 0x2c ]
call [ edi + 0x24 ]
mov ecx [ esi + 0x10 ]
add esp 0x24
mov [ esi + 0x18 ] eax
cmp ecx ebx
je r-xdata
push 0xfffffffd
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x14 ]
cmp edx ebx
je r-xdata
pop eax
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
push eax
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
cmp ecx ebx
je r-xdata
cmp eax ebx
je r-xdata
push esi
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
jmp r-xdata
push eax
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
push ecx
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
mov [ esi + 0x26c ] ebx
mov [ esi + 0x264 ] ebx
mov [ esi + 0x270 ] 0x9
mov [ esi + 0x48 ] 0xdbb8d
mov [ esi + 0x268 ] ebx
mov [ esi + 0x30 ] 0x1e
mov [ esi + 0x24 ] edx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x20 ] ecx
push 0x2
pop eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ edi + 0x20 ] esi
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ esi + 0x34 ] 0x100
mov [ esi + 0x38 ] ebx
call sub_10009f66
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_1000a0d9
mov cl [ eax + 0x34 ]
push esi
xor esi esi
cmp [ eax + 0x38 ] esi
push edi
jle r-xdata
mov edx [ eax + 0x34 ]
mov [ eax + edx + 0x58 ] 0x1
mov edx [ eax + 0x38 ]
mov esi edx
dec esi
je r-xdata
movzx edi cl
push ebx
mov edx [ eax + 0x24 ]
mov esi [ eax + 0x44 ]
dec esi
je r-xdata
mov edx [ eax + 0x260 ]
mov ebx edx
shr ebx 0x18
xor ebx edi
shl edx 0x8
xor edx [ ebx * 4 + rw-data ]
inc esi
mov [ eax + 0x260 ] edx
cmp esi [ eax + 0x38 ]
jl r-xdata
pop ebx
mov edi [ eax + 0x24 ]
lea edx [ eax + 0x44 ]
mov esi [ edx ]
mov [ esi + edi ] cl
inc [ edx ]
mov esi [ edx ]
mov eax [ eax + 0x24 ]
mov [ esi + eax ] cl
inc [ edx ]
jmp r-xdata
dec esi
je r-xdata
pop edi
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
jmp r-xdata
mov [ edx + eax + 0x54 ] 0x1
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov dl [ eax + 0x38 ]
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
sub dl 0x4
mov [ ecx + esi ] dl
jmp r-xdata
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
sub_1000a1b5
push ebp
mov ebp esp
push ecx
push ecx
cmp [ esi + 0x4 ] 0x2
mov eax [ esi + 0x44 ]
push ebx
push edi
mov [ ebp - 0x1 ] 0x0
jne r-xdata
cmp eax [ esi + 0x48 ]
jl r-xdata
jmp r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop ebx
leave
retn
cmp eax [ esi + 0x48 ]
jl r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ eax ]
movzx edi [ eax ]
mov eax [ esi + 0x34 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp edi eax
je r-xdata
mov eax [ eax ]
movzx edi [ eax ]
mov eax [ esi + 0x34 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp edi eax
je r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx 0xff
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx 0xff
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
cmp eax 0x100
jae r-xdata
inc ecx
mov [ esi + 0x38 ] ecx
jmp r-xdata
cmp edi eax
jne r-xdata
mov dl al
lea ecx [ esi + 0x260 ]
mov eax [ ecx ]
mov edi eax
movzx ebx dl
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
mov [ ecx ] eax
mov eax [ esi + 0x34 ]
mov [ eax + esi + 0x58 ] 0x1
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x8 ]
inc [ esi + 0x44 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
cmp eax 0x100
jae r-xdata
inc ecx
mov [ esi + 0x38 ] ecx
jmp r-xdata
cmp edi eax
jne r-xdata
mov dl al
lea ecx [ esi + 0x260 ]
mov eax [ ecx ]
mov edi eax
movzx ebx dl
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
mov [ ecx ] eax
mov eax [ esi + 0x34 ]
mov [ eax + esi + 0x58 ] 0x1
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x8 ]
inc [ esi + 0x44 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
mov eax esi
call sub_1000a0d9
mov eax [ esi ]
inc [ eax ]
mov eax [ esi ]
dec [ eax + 0x4 ]
mov eax [ esi ]
inc [ eax + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
mov eax esi
call sub_1000a0d9
mov eax [ esi ]
inc [ eax ]
mov eax [ esi ]
dec [ eax + 0x4 ]
mov eax [ esi ]
inc [ eax + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ esi + 0xc ]
mov eax [ esi + 0x44 ]
inc [ eax + 0xc ]
mov eax [ esi + 0x44 ]
inc [ eax + 0xc ]
sub_1000a351
push ecx
push ebx
push ebp
push esi
mov esi [ eax + 0x20 ]
xor ebx ebx
push edi
mov [ esp + 0x12 ] bl
mov [ esp + 0x13 ] bl
cmp [ esi + 0x8 ] 0x2
jne r-xdata
xor cl cl
jmp r-xdata
xor edi edi
inc edi
cmp [ esi + 0x8 ] edi
jne r-xdata
call sub_1000a1b5
or [ esp + 0x12 ] al
cmp [ esi + 0x4 ] 0x2
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ esi + 0x44 ]
cmp eax [ esi + 0x48 ]
jl r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax [ esi + 0x50 ]
cmp eax [ esi + 0x4c ]
jge r-xdata
mov eax [ esi + 0x50 ]
or [ esp + 0x13 ] cl
cmp eax [ esi + 0x4c ]
jl r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
push ebx
mov ebp 0x100
cmp [ esi + 0x34 ] ebp
jae r-xdata
mov edx [ esi + 0x2c ]
mov al [ eax + edx ]
mov ebp [ esi ]
mov ebp [ ebp + 0x10 ]
mov [ ebp ] al
mov eax [ esi ]
inc [ esi + 0x50 ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
mov cl 0x1
cmp [ eax + 0x18 ] ebx
jne r-xdata
cmp [ esp + 0x12 ] bl
jne r-xdata
cmp [ esi + 0x4 ] 0x4
jne r-xdata
cmp [ esi + 0x4 ] 0x4
mov [ esi + 0x34 ] ebp
sete al
movzx eax al
mov [ esi + 0x38 ] ebx
push eax
jmp r-xdata
mov eax esi
call sub_1000a0d9
inc [ eax + 0x1c ]
mov eax edi
cmp [ esp + 0x13 ] bl
jne r-xdata
call sub_10009f66
cmp [ esi + 0x4 ] 0x3
mov [ esi + 0x8 ] 0x2
jne r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax esi
call sub_1000ce8b
pop ecx
mov [ esi + 0x8 ] edi
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax esi
call sub_10009f91
test al al
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax esi
call sub_10009f91
test al al
jne r-xdata
sub_1000a478
push esi
test eax eax
jne r-xdata
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
mov edx [ esi ]
cmp edx eax
jne r-xdata
mov ecx [ esi + 0x4 ]
dec ecx
je r-xdata
or eax 0xffffffff
pop esi
retn
dec ecx
jne r-xdata
dec ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x4 ] 0x4
jmp r-xdata
dec ecx
je r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
retn
call sub_1000a351
test al al
je r-xdata
cmp [ esi + 0xc ] 0x0
ja r-xdata
push 0x3
jmp r-xdata
mov eax esi
call sub_10009f91
test al al
je r-xdata
pop eax
pop esi
retn
mov eax [ esi + 0x50 ]
cmp eax [ esi + 0x4c ]
jl r-xdata
mov [ esi + 0x4 ] 0x1
push 0x4
jmp r-xdata
sub_1000a4ef
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0x18 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_1000a54b
push ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ esi + 0x24 ] ebx
jne r-xdata
push 0xfffffffe
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x24 ] sub_10009f43
push 0x1
push 0xfa74
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
cmp eax ebx
jne r-xdata
mov [ esi + 0x28 ] sub_10009f54
mov [ eax ] esi
mov [ esi + 0x20 ] eax
mov [ eax + 0x20 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0xc64 ] ebx
mov [ eax + 0x4 ] 0xa
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ eax + 0x28 ] bl
mov [ eax + 0xc54 ] ebx
mov [ eax + 0xc50 ] ebx
mov [ eax + 0xc4c ] ebx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
xor eax eax
pop ebx
retn
push 0xfffffffd
jmp r-xdata
pop eax
pop ebx
retn
sub_1000a5ca
push ebp
mov ebp esp
sub esp 0x28
cmp [ ecx + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax [ ecx + 0xc60 ]
mov ebx [ ecx + 0xc4c ]
mov esi [ ecx + 0xc ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x14 ] eax
mov al [ ecx + 0x8 ]
mov [ ebp - 0x1 ] al
mov eax [ ecx + 0x440 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ecx ]
mov edi [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x18 ] edi
mov edi [ ecx + 0x24 ]
mov [ ebp - 0x24 ] edi
mov edi [ ecx + 0xfa40 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x28 ] eax
inc edi
mov edx [ ecx ]
xor edi edi
cmp [ edx + 0x14 ] edi
je r-xdata
cmp [ ebp - 0x8 ] edi
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ecx + 0xc ] edi
je r-xdata
mov al 0x1
je r-xdata
mov eax [ ecx ]
mov edi [ eax + 0x18 ]
mov [ ebp - 0x24 ] edi
sub edi [ ebp - 0x10 ]
add edi [ ebp - 0x28 ]
mov [ eax + 0x18 ] edi
mov eax [ ecx ]
mov edi [ ebp - 0x24 ]
cmp [ eax + 0x18 ] edi
jae r-xdata
cmp esi 0x1
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx + 0xfa40 ]
mov esi [ ecx + 0x440 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp esi eax
je r-xdata
mov eax [ edx + 0x10 ]
mov dl [ ecx + 0x8 ]
mov [ eax ] dl
movzx ebx [ ecx + 0x8 ]
lea esi [ ecx + 0xc60 ]
mov edx [ esi ]
mov eax edx
shl edx 0x8
shr eax 0x18
xor eax ebx
xor edx [ eax * 4 + rw-data ]
dec [ ecx + 0xc ]
mov [ esi ] edx
mov edx [ ecx ]
inc [ edx + 0x10 ]
mov edx [ ecx ]
dec [ edx + 0x14 ]
mov edx [ ecx ]
inc [ edx + 0x18 ]
mov edx [ ecx ]
cmp [ edx + 0x18 ] edi
jne r-xdata
xor esi esi
jmp r-xdata
mov al [ ebp - 0xc ]
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x14 ]
mov [ ecx + 0xc60 ] eax
mov al [ ebp - 0x1 ]
mov [ ecx + 0x8 ] al
mov eax [ ebp - 0x8 ]
mov [ ecx + 0x440 ] eax
mov eax [ ebp - 0xc ]
mov [ ecx + 0x3c ] eax
mov eax [ ecx ]
mov [ ecx + 0x38 ] edx
mov edx [ ebp - 0x18 ]
mov [ ecx + 0xc ] esi
mov [ ecx + 0xc4c ] ebx
mov [ eax + 0x10 ] edx
mov eax [ ecx ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x14 ] ecx
inc [ eax + 0x1c ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ ebx ] al
mov ebx [ ebp - 0x14 ]
movzx eax al
shr ebx 0x18
xor ebx eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
dec esi
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
jg r-xdata
inc [ edx + 0x1c ]
jmp r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx eax al
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] eax
je r-xdata
xor esi esi
inc esi
mov esi [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ esi ] al
mov esi [ ebp - 0x14 ]
movzx eax al
shr esi 0x18
xor esi eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ esi * 4 + rw-data ]
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov al [ ecx + 0x3c ]
mov edx [ ecx + 0x38 ]
mov [ ecx + 0x8 ] al
mov eax [ ecx + 0x24 ]
imul eax eax 0x186a0
mov [ ecx + 0xc ] 0x1
mov [ ebp - 0x1c ] eax
cmp edx eax
jae r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ebx [ ecx + 0xc4c ]
mov edx [ ebx + edx * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
cmp [ ecx + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
push 0x2
pop esi
mov [ ebp - 0x20 ] eax
cmp edx eax
jae r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
test esi esi
jle r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x2
cmp eax [ ebp - 0x1c ]
jae r-xdata
push 0x3
pop esi
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov ebx [ ebp - 0x1c ]
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x3
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx esi al
shr edx 0x8
add esi 0x4
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov edx [ ebx + edx * 4 ]
movzx eax dl
shr edx 0x8
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
je r-xdata
and [ ecx + 0x18 ] 0x0
mov eax [ ecx + 0x38 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
xor edx edx
inc esi
cmp edi 0x1
sete dl
movzx eax al
mov [ ecx + 0x440 ] esi
xor edx eax
add edx 0x4
mov [ ecx + 0xc ] edx
mov edx [ ecx + 0x38 ]
cmp edx [ ebp - 0x1c ]
jae r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov eax [ ebx + edx * 4 ]
mov [ ecx + 0x38 ] eax
shr [ ecx + 0x38 ] 0x8
movzx eax al
mov [ ecx + 0x3c ] eax
test edi edi
jne r-xdata
and [ ecx + 0x18 ] 0x0
dec [ ecx + 0x14 ]
mov eax [ ecx + 0x14 ]
xor edx edx
cmp eax 0x1
sete dl
xor [ ecx + 0x3c ] edx
inc esi
mov [ ecx + 0x440 ] esi
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov edx [ eax * 4 + rw-data ]
inc eax
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] eax
cmp eax 0x200
jne r-xdata
and [ ecx + 0x18 ] edi
sub_1000aa76
push esi
xor eax eax
mov edx 0x100
push edi
mov edx ecx
mov eax ecx
jmp r-xdata
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
lea ecx [ edx + eax ]
sar ecx 0x1
cmp esi [ edi + ecx * 4 ]
jl r-xdata
pop edi
pop esi
retn
mov ecx edx
sub ecx eax
cmp ecx 0x1
jne r-xdata
sub_1000aaa3
push ebp
mov ebp esp
sub esp 0x10
cmp [ esi + 0x10 ] 0x0
push ebx
push edi
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
xor al al
jmp r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
pop edi
pop ebx
leave
retn
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
mov al 0x1
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000aa76
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x440 ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000aa76
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ esi + 0x440 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000aa76
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000aa76
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000aa76
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000aa76
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000aa76
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
movzx eax [ ebp - 0x1 ]
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_1000aa76
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edi ]
movzx ecx al
movzx eax [ ebx + eax * 2 ]
and cl 0x1
shl cl 0x2
shr edx cl
and edx 0xf
shl edx 0x10
or edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x38 ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
and [ esi + 0x18 ] 0x0
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000aa76
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
dec [ esi + 0x14 ]
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x14 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
xor eax eax
cmp ecx 0x1
movzx ecx [ ebp - 0x1 ]
sete al
xor eax ecx
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_1000aa76
mov edx [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx edx
shr ecx 0x1
mov [ esi + 0x3c ] eax
movzx edi [ ecx + edi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
movzx ecx [ ebx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
mov ecx [ esi + 0x14 ]
mov [ esi + 0x38 ] edi
test ecx ecx
jne r-xdata
and [ esi + 0x18 ] 0x0
dec [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
xor edx edx
cmp ecx 0x1
sete dl
xor edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x3c ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx * 4 + rw-data ]
inc ecx
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] ecx
cmp ecx 0x200
jne r-xdata
and [ esi + 0x18 ] 0x0
sub_1000b0c3
test eax eax
jne r-xdata
push esi
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop esi
retn
cmp [ esi ] eax
je r-xdata
mov ecx [ esi + 0x4 ]
push ebx
cmp ecx 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ecx 0x2
jne r-xdata
pop ebx
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp ecx 0xa
jl r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov ebx esi
call sub_1000d05e
cmp eax 0x4
je r-xdata
mov ecx esi
call sub_1000a5ca
call sub_1000aaa3
jmp r-xdata
cmp [ esi + 0x30 ] 0x3
jl r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx 0x2
jne r-xdata
push 0xfffffffc
pop eax
jmp r-xdata
mov eax [ esi + 0xfa40 ]
inc eax
cmp [ esi + 0x440 ] eax
jne r-xdata
test al al
jne r-xdata
mov eax [ esi + 0xc64 ]
sub eax [ esi + 0xc5c ]
neg eax
sbb eax eax
and eax 0xfffffff8
add eax 0x4
push [ esi + 0xc64 ]
push [ esi + 0xc5c ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0x10
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x30 ] 0x3
mov eax [ esi + 0xc60 ]
not eax
mov [ esi + 0xc60 ] eax
jl r-xdata
cmp [ esi + 0x30 ] 0x2
jl r-xdata
push eax
push [ esi + 0xc58 ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0x10
mov ecx [ esi + 0xc60 ]
cmp ecx [ esi + 0xc58 ]
jne r-xdata
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
pop ecx
pop ecx
lea eax [ esi + 0xc64 ]
mov edx [ eax ]
rol edx 0x1
xor edx ecx
mov [ eax ] edx
mov [ esi + 0x4 ] 0xe
sub_1000b20f
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0xc4c ]
test eax eax
je r-xdata
mov eax [ edi + 0xc50 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0xc54 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_1000b274
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi eax
xor eax eax
push edi
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp esi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea edi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_10009fa6
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ esi ]
mov [ ebp - 0x1c ] eax
mov eax edi
mov [ ebp - 0x20 ] ebx
call sub_1000a478
mov edi eax
cmp edi 0x3
jne r-xdata
cmp edi 0x4
jne r-xdata
push 0xfffffff8
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_1000a4ef
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub [ esi ] eax
xor edi edi
sub_1000b2ea
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov edi eax
mov ebx ecx
xor eax eax
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp edi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea esi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_1000a54b
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ edi ]
mov [ ebp - 0x1c ] eax
mov eax esi
mov [ ebp - 0x20 ] ebx
call sub_1000b0c3
mov ebx eax
test ebx ebx
jne r-xdata
cmp ebx 0x4
je r-xdata
cmp [ ebp - 0x1c ] eax
jbe r-xdata
mov eax [ ebp - 0x1c ]
sub [ edi ] eax
xor edi edi
lea esi [ ebp - 0x30 ]
call sub_1000b20f
mov eax ebx
jmp r-xdata
push 0xfffffff8
jmp r-xdata
push 0xfffffff9
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_1000b20f
mov eax edi
jmp r-xdata
sub_1000b378
cmp [ eax + 0x25c ] 0x8
push esi
push edi
mov esi ecx
jl r-xdata
mov edx [ eax + 0x25c ]
mov edi [ esp + 0xc ]
push 0x20
pop ecx
sub ecx edx
sub ecx edi
shl esi cl
add edx edi
pop edi
mov [ eax + 0x25c ] edx
or [ eax + 0x258 ] esi
pop esi
retn
lea ecx [ eax + 0x258 ]
push ebx
mov edi [ eax + 0x4c ]
mov bl [ ecx + 0x3 ]
mov edx [ eax + 0x2c ]
mov [ edx + edi ] bl
inc [ eax + 0x4c ]
shl [ ecx ] 0x8
add [ eax + 0x25c ] 0xfffffff8
cmp [ eax + 0x25c ] 0x8
jge r-xdata
pop ebx
sub_1000b3d3
push esi
mov ecx ebx
shr ecx 0x18
push 0x8
call sub_1000b378
mov ecx ebx
shr ecx 0x10
mov esi 0xff
and ecx esi
push 0x8
call sub_1000b378
mov ecx ebx
shr ecx 0x8
and ecx esi
push 0x8
call sub_1000b378
movzx ecx bl
push 0x8
call sub_1000b378
add esp 0x10
pop esi
retn
sub_1000b410
push ebp
lea ebp [ esp - 0x9c ]
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x98 ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x80 ] eax
mov eax [ esi + 0x24 ]
push ebx
mov ebx [ esi + 0x28 ]
mov [ ebp - 0x7c ] eax
xor eax eax
push edi
mov [ esi + 0x54 ] eax
inc eax
cmp eax 0x100
jl r-xdata
mov cl [ esi + 0x54 ]
mov [ eax + esi + 0x158 ] cl
inc [ esi + 0x54 ]
cmp [ esi + eax + 0x58 ] 0x0
je r-xdata
mov edx [ esi + 0x54 ]
inc edx
mov [ ebp - 0x78 ] edx
js r-xdata
xor eax eax
xor edi edi
cmp [ esi + 0x54 ] eax
mov [ ebp - 0x70 ] eax
jle r-xdata
lea edi [ esi + 0x278 ]
lea ecx [ edx + 0x1 ]
xor eax eax
[ edi ]
and [ ebp - 0x74 ] 0x0
cmp [ esi + 0x44 ] 0x0
jle r-xdata
mov ecx [ esi + 0x54 ]
mov ecx [ ebp + 0x98 ]
mov [ ebx + edi * 2 ] dx
lea eax [ esi + edx * 4 + 0x278 ]
inc [ eax ]
inc edi
mov [ esi + 0x274 ] edi
pop edi
xor ecx ebp
pop ebx
call sub_10015160
add ebp 0x9c
leave
retn
mov eax [ ebp - 0x80 ]
mov ecx [ ebp - 0x74 ]
mov eax [ eax + ecx * 4 ]
dec eax
jns r-xdata
mov [ ebp + eax - 0x68 ] al
inc eax
cmp eax ecx
jl r-xdata
mov ecx [ ebp - 0x7c ]
movzx eax [ eax + ecx ]
mov al [ eax + esi + 0x158 ]
mov [ ebp - 0x69 ] al
cmp [ ebp - 0x68 ] al
jne r-xdata
add eax [ esi + 0x44 ]
mov eax [ ebp - 0x70 ]
test eax eax
jle r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
mov al [ ebp - 0x68 ]
mov cl [ ebp - 0x67 ]
mov [ ebp - 0x67 ] al
lea eax [ ebp - 0x67 ]
jmp r-xdata
dec eax
inc [ ebp - 0x74 ]
mov eax [ ebp - 0x74 ]
cmp eax [ esi + 0x44 ]
jl r-xdata
cmp [ ebp - 0x69 ] cl
jne r-xdata
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x278 ]
inc ecx
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x27c ]
jmp r-xdata
mov eax [ ebp - 0x70 ]
test eax eax
jle r-xdata
inc eax
mov dl cl
mov cl [ eax ]
mov [ eax ] dl
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x68 ] cl
lea ecx [ ebp - 0x68 ]
sub eax ecx
lea ecx [ eax + 0x1 ]
mov [ ebx + edi * 2 ] cx
lea eax [ esi + eax * 4 + 0x27c ]
inc edi
inc [ eax ]
and [ ebp - 0x70 ] 0x0
add eax 0xfffffffe
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
cmp eax 0x2
jl r-xdata
dec eax
xor ecx ecx
test al 0x1
je r-xdata
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x278 ]
inc ecx
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x27c ]
jmp r-xdata
add eax 0xfffffffe
cdq
sub eax edx
mov edx [ ebp - 0x78 ]
sar eax 0x1
jmp r-xdata
cmp eax 0x2
jl r-xdata
xor ecx ecx
test al 0x1
je r-xdata
sub_1000b5a6
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x268 ] 0x3
push ebx
mov ebx [ esi + 0x28 ]
push edi
jl r-xdata
mov edi [ esi + 0x54 ]
inc edi
inc edi
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x3c ] edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x28 ] 0x6
push [ esi + 0x54 ]
push [ esi + 0x274 ]
push [ esi + 0x44 ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0x14
add [ ebp - 0xc ] 0x102
dec [ ebp - 0x28 ]
jne r-xdata
push edi
push 0xf
push [ ebp - 0xc ]
call sub_10015500
add esp 0xc
test edi edi
jle r-xdata
mov eax [ esi + 0x274 ]
test eax eax
jg r-xdata
cmp eax 0xc8
jge r-xdata
push 0xbb9
cmp eax 0x258
jge r-xdata
mov [ ebp - 0x30 ] 0x2
jmp r-xdata
cmp eax 0x4b0
jge r-xdata
mov [ ebp - 0x30 ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x30 ]
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] eax
test ecx ecx
jle r-xdata
xor ecx ecx
cmp eax 0x960
setge cl
add ecx 0x5
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x30 ] 0x4
jmp r-xdata
and [ ebp - 0x34 ] 0x0
and [ ebp - 0xc ] 0x0
mov eax ecx
add eax 0x91
imul eax eax 0x102
add eax esi
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
lea edi [ ebp - 0x5c ]
[ edi ]
mov eax [ ebp - 0x30 ]
lea edx [ esi + 0xb160 ]
mov [ ebp - 0x28 ] eax
cmp edi [ ebp - 0x24 ]
jle r-xdata
lea edx [ esi + edi * 4 + 0x278 ]
mov ecx [ esi + 0x274 ]
xor eax eax
cmp ecx eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
add edx 0x408
dec [ ebp - 0x28 ]
jne r-xdata
mov ecx [ ebp - 0x3c ]
xor eax eax
mov edi edx
[ edi ]
cmp [ esi + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x30 ]
je r-xdata
add edx 0x4
add ecx [ edx ]
inc edi
cmp ecx [ ebp - 0x28 ]
mov [ ebp - 0x40 ] ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea edx [ eax + 0x31 ]
cmp edx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x2c ] edx
jl r-xdata
mov edx [ ebp - 0x3c ]
lea eax [ esi + 0x9324 ]
lea ecx [ esi + 0xc994 ]
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
xor eax eax
cmp [ ebp - 0x3c ] eax
jle r-xdata
fild [ ebp - 0x40 ]
push ecx
push ecx
fmul [ r--data ]
fidiv [ esi + 0x274 ]
fstp [ esp ]
push [ ebp - 0x40 ]
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x34 ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
mov ecx [ ebp - 0x40 ]
add esp 0x20
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x3c ]
dec eax
cmp edi eax
jge r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
push eax
mov eax [ ebp - 0x34 ]
inc eax
push eax
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
xor edi edi
add esp 0x10
cmp [ ebp - 0x30 ] edi
jle r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
jle r-xdata
dec ecx
mov [ ebp - 0x2c ] ecx
movzx edx [ eax + 0x102 ]
movzx edi [ eax ]
shl edx 0x10
or edx edi
mov [ ecx - 0x4 ] edx
movzx edx [ eax + 0x306 ]
movzx edi [ eax + 0x204 ]
shl edx 0x10
or edx edi
mov [ ecx ] edx
movzx edx [ eax + 0x50a ]
movzx edi [ eax + 0x408 ]
shl edx 0x10
or edx edi
mov [ ecx + 0x4 ] edx
inc eax
add ecx 0x10
dec [ ebp - 0x28 ]
jne r-xdata
dec [ ebp - 0x34 ]
sub [ ebp - 0x2c ] 0x102
inc [ ebp - 0xc ]
sub [ ebp - 0x20 ] ecx
inc edi
cmp [ ebp - 0x34 ] 0x0
mov [ ebp - 0x24 ] edi
jg r-xdata
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0xc ]
and eax 0x80000001
jns r-xdata
inc [ ebp - 0x34 ]
cmp [ ebp - 0x34 ] 0x4
jl r-xdata
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x30 ]
lea edi [ esi + 0xb160 ]
mov [ ebp - 0xc ] eax
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
pop ecx
pop ecx
push [ ebp + edi * 4 - 0x5c ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0xc
inc edi
cmp edi [ ebp - 0x30 ]
jl r-xdata
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
lea edi [ ebp - 0x18 ]
[ edi ]
adc ecx ecx
[ edi ]
mov eax [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
cdq
idiv [ ebp - 0x34 ]
mov edi [ ebp - 0x24 ]
xor ecx ecx
dec edi
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x28 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + eax ] 0xf
cmp eax edi
jg r-xdata
cmp eax 0x1
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
cmp [ ebp - 0x30 ] 0x8
jl r-xdata
push [ ebp - 0x3c ]
mov ecx edi
push [ ebp - 0x28 ]
call sub_100104a3
add [ ebp - 0x28 ] 0x102
pop ecx
add edi 0x408
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
cmp eax [ ebp - 0x2c ]
mov ecx eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx eax
inc ecx
cmp ecx 0x32
jne r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + eax ] 0x0
jmp r-xdata
sub ecx [ esi + edi * 4 + 0x278 ]
dec edi
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp - 0x40 ]
cmp ecx 0x8000
jge r-xdata
push 0xbba
jmp r-xdata
mov [ ebp - 0x24 ] ecx
jle r-xdata
mov eax [ ebp - 0x24 ]
lea edi [ ebx + eax * 2 ]
movzx eax [ edi ]
movzx edi [ edi + 0x2 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
movzx ecx ax
lea eax [ ecx + 0xc99 ]
shl eax 0x4
mov eax [ eax + esi ]
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
shl ecx 0x4
lea edx [ ecx + esi ]
mov ecx [ edx + 0xc994 ]
add ecx [ edi + 0xc994 ]
mov edx [ edx + 0xc998 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x6 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x8 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xa ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xc ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xe ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x10 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x12 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x14 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x16 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x18 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x20 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x22 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x24 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x26 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x28 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x30 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x32 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x34 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x36 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x38 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x40 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x42 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x44 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x46 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x48 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x50 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x52 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x54 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x56 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x58 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x60 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0xc ]
movzx edi [ ebx + edi * 2 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov [ ebp - 0x18 ] ax
shr eax 0x10
mov [ ebp - 0x14 ] cx
shr ecx 0x10
mov [ ebp - 0x10 ] dx
shr edx 0x10
mov [ ebp - 0x16 ] ax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x12 ] cx
mov [ ebp - 0xe ] dx
jmp r-xdata
inc eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
push 0xbbb
jmp r-xdata
cmp ecx 0x4652
jg r-xdata
call sub_10009efd
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x30 ] 0x0
movzx ecx [ ebx + ecx * 2 ]
jle r-xdata
and [ ebp - 0x20 ] 0x0
or ecx 0xffffffff
cmp [ ebp - 0x30 ] 0x0
mov [ ebp - 0x24 ] 0x3b9ac9ff
jle r-xdata
xor eax eax
cmp [ ebp - 0x30 ] eax
jle r-xdata
mov ecx [ ebp - 0x24 ]
inc ecx
cmp ecx [ ebp - 0x2c ]
movzx ecx cx
lea ecx [ ecx + esi + 0x9324 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x28 ] edx
inc [ ebp + ecx * 4 - 0x5c ]
mov edx [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
cmp [ ebp - 0x30 ] 0x6
mov [ esi + edx + 0x680 ] cl
jne r-xdata
mov edx [ ebp - 0x20 ]
movzx edx [ ebp + edx * 2 - 0x18 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
test ecx ecx
jle r-xdata
mov [ ebp + eax - 0xc ] al
inc eax
cmp eax [ ebp - 0x30 ]
jl r-xdata
mov edx [ ebp - 0x20 ]
movzx di [ ecx ]
lea edx [ ebp + edx * 2 - 0x18 ]
add [ edx ] di
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
add ecx 0x102
cmp edx [ ebp - 0x30 ]
jl r-xdata
cmp eax [ ebp - 0x2c ]
jg r-xdata
mov edx [ ebp - 0x2c ]
sub edx eax
inc edx
cmp edx 0x32
jne r-xdata
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x30 ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
lea edi [ esi + 0x4cd2 ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x2c ]
mov ecx [ esi + 0x274 ]
inc eax
cmp eax ecx
mov [ ebp - 0x24 ] eax
jl r-xdata
add ecx 0x2c
imul ecx ecx 0x102
movzx edx [ ebx + eax * 2 ]
add ecx 0x2c
imul ecx ecx 0x102
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x6 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x8 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xa ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xc ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xe ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x10 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x12 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x14 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x16 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x18 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x20 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x22 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x24 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x26 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x28 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x30 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x32 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x34 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x36 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x38 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x40 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x42 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x44 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x46 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x48 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x50 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x52 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x54 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x56 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x58 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx eax [ ebx + eax * 2 + 0x60 ]
add eax ecx
lea eax [ esi + eax * 4 ]
inc [ eax ]
mov eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
add eax ecx
lea eax [ esi + eax * 4 ]
inc [ eax ]
jmp r-xdata
lea eax [ esi + 0x58 ]
xor ecx ecx
mov edi eax
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x28 ] 0xffff9328
sub [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] eax
mov al [ ebp - 0x35 ]
mov [ edi ] cl
inc edi
dec [ ebp - 0x28 ]
mov [ ebp - 0xc ] al
jne r-xdata
mov al [ ebp - 0x35 ]
inc ecx
mov [ ebp - 0x41 ] al
lea eax [ ebp + ecx - 0xc ]
mov dl [ eax ]
mov [ ebp - 0x35 ] dl
mov dl [ ebp - 0x41 ]
mov [ eax ] dl
mov al [ edi - 0x4652 ]
cmp al [ ebp - 0x35 ]
jne r-xdata
movzx edx [ ebx + eax * 2 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
inc eax
cmp eax [ ebp - 0x2c ]
jle r-xdata
inc edx
cmp edx 0x10
jl r-xdata
mov [ eax ] 0x1
xor ecx ecx
cmp edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edx
jg r-xdata
mov eax [ ebp - 0x2c ]
movzx eax [ eax + ecx ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov dl [ ebp - 0xc ]
mov al [ edi - 0x4652 ]
xor ecx ecx
mov [ ebp - 0x35 ] dl
cmp al dl
je r-xdata
cmp [ edx + edi ] 0x0
je r-xdata
inc ecx
add edi 0x10
cmp ecx 0x10
jl r-xdata
inc [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
add [ ebp - 0x2c ] 0x102
cmp eax [ ebp - 0x30 ]
jl r-xdata
xor eax eax
cmp [ ebp - 0x3c ] eax
jle r-xdata
cmp eax edx
jge r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp + ecx - 0x1c ]
mov [ eax ] 0x0
xor edx edx
mov eax [ esi + 0x4c ]
mov [ ebp - 0x34 ] eax
xor edi edi
xor ecx ecx
cmp [ ebp - 0x3c ] ecx
push 0x20
pop edx
mov [ ebp - 0x34 ] ecx
jle r-xdata
add ecx ecx
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov edx [ ebp - 0x2c ]
movzx edx [ eax + edx ]
cmp edx [ ebp - 0x24 ]
jne r-xdata
inc ecx
cmp ecx [ ebp - 0x3c ]
jl r-xdata
mov edx eax
push 0x1
inc ecx
push ecx
jmp r-xdata
inc eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
mov edx [ ebp - 0x28 ]
add edx eax
add edx [ ebp - 0x2c ]
mov [ esi + edx * 4 ] ecx
inc ecx
cmp [ ebp - 0x34 ] 0x11
jg r-xdata
xor ecx ecx
mov eax esi
cmp [ ebp + edi - 0x1c ] cl
je r-xdata
and [ ebp - 0x24 ] 0x0
lea eax [ esi + 0x58 ]
mov [ ebp - 0x28 ] eax
call sub_1000b378
inc edi
cmp edi 0x10
pop ecx
jl r-xdata
push 0xbbc
jmp r-xdata
cmp edx 0x1
jl r-xdata
inc [ ebp - 0x24 ]
add [ ebp - 0x28 ] 0x10
cmp [ ebp - 0x24 ] 0x10
jl r-xdata
xor edi edi
push 0xbbd
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp [ ebp + eax - 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
push 0x1
inc ecx
push ecx
jmp r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
push 0x3
mov eax esi
call sub_1000b378
mov ecx [ ebp - 0x40 ]
push 0xf
call sub_1000b378
cmp [ ebp - 0x40 ] 0x0
pop ecx
pop ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0xc
mov eax [ ebp - 0x28 ]
xor ecx ecx
cmp [ edi + eax ] cl
mov eax esi
je r-xdata
call sub_1000b378
inc edi
cmp edi 0x10
pop ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x40 ]
lea edi [ esi + 0x4cd2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x30 ]
mov eax [ esi + 0x4c ]
mov [ ebp - 0x34 ] eax
test ecx ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0xc
push 0x1
xor ecx ecx
mov eax esi
call sub_1000b378
inc edi
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
xor ecx ecx
inc ecx
push ecx
mov eax esi
call sub_1000b378
movzx eax [ edi ]
inc [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] eax
pop ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
and [ ebp - 0x28 ] 0x0
cmp [ edi ] 0x0
jbe r-xdata
mov eax [ esi + 0x4c ]
xor ecx ecx
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x274 ]
cmp eax ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x24 ] ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0xc
add [ ebp - 0x20 ] 0x102
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x40 ]
je r-xdata
lea edx [ ecx + 0x31 ]
cmp edx eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x2c ] edx
jl r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx [ eax ]
push 0x5
mov eax esi
mov [ ebp - 0x2c ] ecx
call sub_1000b378
cmp [ ebp - 0x3c ] 0x0
pop ecx
jle r-xdata
movzx eax [ edi ]
cmp [ ebp - 0x2c ] eax
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
push 0xbbf
jmp r-xdata
mov eax [ ebp - 0x3c ]
lea edi [ eax + esi + 0x680 ]
movzx eax [ edi ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
dec eax
mov [ ebp - 0x2c ] eax
push 0x2
pop ecx
push ecx
mov eax esi
call sub_1000b378
inc [ ebp - 0x2c ]
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0xc
push 0xbbe
jmp r-xdata
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
movzx eax [ edi ]
cmp [ ebp - 0x2c ] eax
mov eax esi
jg r-xdata
cmp ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
jg r-xdata
mov eax [ ebp - 0x2c ]
sub eax ecx
inc eax
cmp eax 0x32
jne r-xdata
push 0x2
push 0x3
pop ecx
call sub_1000b378
dec [ ebp - 0x2c ]
pop ecx
push 0x1
xor ecx ecx
call sub_1000b378
inc edi
dec [ ebp - 0x28 ]
pop ecx
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ esi + 0x274 ]
inc ecx
inc [ ebp - 0x3c ]
cmp ecx eax
mov [ ebp - 0x24 ] ecx
jl r-xdata
movzx eax [ edi ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ebx + ecx * 2 ]
lea edx [ eax + 0x26 ]
add eax 0x92
imul edx edx 0x102
imul eax eax 0x102
add eax esi
movzx eax [ eax + ecx ]
add edx ecx
mov ecx [ esi + edx * 4 ]
push eax
mov eax esi
call sub_1000b378
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x2c ]
pop ecx
jle r-xdata
movzx eax [ edi ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ebx + ecx * 2 ]
lea edi [ eax + 0x92 ]
add eax 0x26
imul edi edi 0x102
imul eax eax 0x408
add edi esi
movzx edx [ edi + ecx ]
add eax esi
mov ecx [ eax + ecx * 4 ]
mov [ ebp - 0x20 ] eax
push edx
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x6 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x8 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xa ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xc ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xe ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x10 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x12 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x14 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x16 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x18 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x20 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x22 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x24 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x26 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x28 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x30 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x32 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x34 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x36 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x38 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x40 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x42 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x44 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x46 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x48 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x50 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x52 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x54 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x56 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x58 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x60 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
mov eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1000b378
pop ecx
pop ecx
jmp r-xdata
sub_1000ce8b
push ecx
push ebx
push esi
mov esi eax
push edi
mov edi [ esi + 0x44 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
mov eax [ esi + 0x14 ]
add eax [ esi + 0x44 ]
cmp [ esi + 0x26c ] 0x1
push 0x8
mov [ esi + 0x2c ] eax
pop edi
jne r-xdata
lea eax [ esi + 0x260 ]
mov edx [ eax ]
not edx
lea ecx [ esi + 0x264 ]
mov [ eax ] edx
mov eax [ ecx ]
rol eax 0x1
xor eax edx
mov [ ecx ] eax
mov ecx [ esi + 0x26c ]
cmp ecx 0x1
jle r-xdata
cmp [ esi + 0x44 ] ebx
jle r-xdata
push edi
push 0x42
pop ecx
mov eax esi
mov [ esi + 0x25c ] ebx
mov [ esi + 0x258 ] ebx
call sub_1000b378
pop ecx
push edi
push 0x5a
pop ecx
call sub_1000b378
pop ecx
push edi
push 0x68
pop ecx
call sub_1000b378
mov al [ esi + 0x270 ]
add al 0x30
pop ecx
movzx ecx al
push edi
mov eax esi
call sub_1000b378
pop ecx
cmp [ esi + 0x268 ] 0x2
jl r-xdata
mov [ esi + 0x4c ] ebx
cmp [ esp + 0x14 ] bl
je r-xdata
push edi
push 0x31
pop ecx
mov eax esi
call sub_1000b378
pop ecx
push edi
push 0x41
pop ecx
call sub_1000b378
pop ecx
push edi
push 0x59
pop ecx
call sub_1000b378
pop ecx
push edi
push 0x26
pop ecx
call sub_1000b378
pop ecx
push edi
push 0x53
pop ecx
call sub_1000b378
pop ecx
push edi
push 0x59
pop ecx
call sub_1000b378
mov ebx [ esi + 0x260 ]
pop ecx
call sub_1000b3d3
push 0x1
xor ecx ecx
call sub_1000b378
pop ecx
mov ecx [ esi + 0x1c ]
push 0x18
call sub_1000b378
pop ecx
call sub_1000b410
call sub_1000b5a6
xor ebx ebx
mov edi esi
call sub_10010377
push edi
push eax
push edx
push ecx
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0x18
pop edi
pop esi
pop ebx
pop ecx
retn
push edi
push 0x17
pop ecx
mov eax esi
call sub_1000b378
pop ecx
push edi
push 0x72
pop ecx
call sub_1000b378
pop ecx
push edi
push 0x45
pop ecx
call sub_1000b378
pop ecx
push edi
push 0x38
pop ecx
call sub_1000b378
pop ecx
push edi
push 0x50
pop ecx
call sub_1000b378
pop ecx
push edi
mov ecx 0x90
call sub_1000b378
lea edi [ esi + 0x264 ]
mov ebx [ edi ]
pop ecx
call sub_1000b3d3
cmp [ esi + 0x268 ] 0x2
jl r-xdata
cmp [ esi + 0x25c ] 0x0
jle r-xdata
push [ edi ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0xc
lea eax [ esi + 0x258 ]
mov ecx [ esi + 0x4c ]
mov bl [ eax + 0x3 ]
mov edx [ esi + 0x2c ]
mov [ ecx + edx ] bl
inc [ esi + 0x4c ]
shl [ eax ] 0x8
add [ esi + 0x25c ] 0xfffffff8
cmp [ esi + 0x25c ] 0x0
jg r-xdata
sub_1000d05e
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
push esi
mov esi [ ebx ]
xor ecx ecx
push edi
cmp eax 0xa
jne r-xdata
mov ecx [ ebx + 0xfa14 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + 0xfa18 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebx + 0xfa1c ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ebx + 0xfa20 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebx + 0xfa24 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebx + 0xfa28 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebx + 0xfa2c ]
mov [ ebp - 0x64 ] ecx
mov ecx [ ebx + 0xfa30 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebx + 0xfa34 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebx + 0xfa38 ]
mov [ ebp - 0x54 ] ecx
mov ecx [ ebx + 0xfa3c ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebx + 0xfa40 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebx + 0xfa44 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebx + 0xfa48 ]
mov [ ebp - 0x74 ] ecx
mov ecx [ ebx + 0xfa4c ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebx + 0xfa50 ]
mov [ ebp - 0x80 ] ecx
mov ecx [ ebx + 0xfa54 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebx + 0xfa58 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebx + 0xfa5c ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebx + 0xfa60 ]
mov [ ebp - 0x70 ] ecx
mov ecx [ ebx + 0xfa64 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebx + 0xfa68 ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebx + 0xfa6c ]
mov [ ebp - 0x40 ] ecx
mov ecx [ ebx + 0xfa70 ]
add eax 0xfffffff6
mov [ ebp - 0x4c ] ecx
cmp eax 0x28
ja r-xdata
mov [ ebx + 0xfa14 ] ecx
mov [ ebx + 0xfa18 ] ecx
mov [ ebx + 0xfa1c ] ecx
mov [ ebx + 0xfa20 ] ecx
mov [ ebx + 0xfa24 ] ecx
mov [ ebx + 0xfa28 ] ecx
mov [ ebx + 0xfa2c ] ecx
mov [ ebx + 0xfa30 ] ecx
mov [ ebx + 0xfa34 ] ecx
mov [ ebx + 0xfa38 ] ecx
mov [ ebx + 0xfa3c ] ecx
mov [ ebx + 0xfa40 ] ecx
mov [ ebx + 0xfa44 ] ecx
mov [ ebx + 0xfa48 ] ecx
mov [ ebx + 0xfa4c ] ecx
mov [ ebx + 0xfa50 ] ecx
mov [ ebx + 0xfa54 ] ecx
mov [ ebx + 0xfa58 ] ecx
mov [ ebx + 0xfa5c ] ecx
mov [ ebx + 0xfa60 ] ecx
mov [ ebx + 0xfa64 ] ecx
mov [ ebx + 0xfa68 ] ecx
mov [ ebx + 0xfa6c ] ecx
mov [ ebx + 0xfa70 ] ecx
push 0xfa1
call sub_10009efd
mov edi 0xff
jmp [ eax * 4 + jump_table_1000ee86 ]
mov [ ebx + 0x4 ] 0xa
jmp r-xdata
mov [ ebx + 0x4 ] 0xb
jmp r-xdata
mov [ ebx + 0x4 ] 0xc
jmp r-xdata
mov [ ebx + 0x4 ] 0xd
jmp r-xdata
mov [ ebx + 0x4 ] 0xe
jmp r-xdata
mov [ ebx + 0x4 ] 0xf
jmp r-xdata
mov [ ebx + 0x4 ] 0x10
jmp r-xdata
mov [ ebx + 0x4 ] 0x11
jmp r-xdata
mov [ ebx + 0x4 ] 0x12
jmp r-xdata
mov [ ebx + 0x4 ] 0x13
jmp r-xdata
mov [ ebx + 0x4 ] 0x14
jmp r-xdata
mov [ ebx + 0x4 ] 0x15
jmp r-xdata
mov [ ebx + 0x4 ] 0x16
jmp r-xdata
mov [ ebx + 0x4 ] 0x17
jmp r-xdata
mov [ ebx + 0x4 ] 0x18
jmp r-xdata
mov [ ebx + 0x4 ] 0x19
jmp r-xdata
mov [ ebx + 0x4 ] 0x1a
jmp r-xdata
mov [ ebx + 0x4 ] 0x1b
jmp r-xdata
mov [ ebx + 0x4 ] 0x1c
jmp r-xdata
mov [ ebx + 0x4 ] 0x1d
jmp r-xdata
mov [ ebx + 0x4 ] 0x1e
jmp r-xdata
mov [ ebx + 0x4 ] 0x1f
jmp r-xdata
mov [ ebx + 0x4 ] 0x20
jmp r-xdata
mov [ ebx + 0x4 ] 0x23
jmp r-xdata
mov [ ebx + 0x4 ] 0x22
jmp r-xdata
mov [ ebx + 0x4 ] 0x21
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x24
jmp r-xdata
mov [ ebx + 0x4 ] 0x25
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x26
jmp r-xdata
mov [ ebx + 0x4 ] 0x27
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x28
jmp r-xdata
mov [ ebx + 0x4 ] 0x29
jmp r-xdata
mov [ ebx + 0x4 ] 0x2a
jmp r-xdata
mov [ ebx + 0x4 ] 0x2b
jmp r-xdata
mov [ ebx + 0x4 ] 0x2c
jmp r-xdata
mov [ ebx + 0x4 ] 0x2d
jmp r-xdata
mov [ ebx + 0x4 ] 0x2e
jmp r-xdata
mov [ ebx + 0x4 ] 0x2f
jmp r-xdata
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov [ ebx + 0x4 ] 0x31
jmp r-xdata
mov [ ebx + 0x4 ] 0x32
jmp r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x3
jl r-xdata
cmp [ ebx + 0x20 ] 0xf
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x5
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x42
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x5a
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x68
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp eax 0x31
mov [ ebx + 0x24 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x17
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x41
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x26
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x53
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
and [ ebx + 0x34 ] 0x0
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x10 ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ ebx + 0x1c ]
lea ecx [ eax - 0x8 ]
shr edx cl
add eax 0xfffffff8
mov [ ebx + 0x20 ] eax
mov eax [ ebx + 0x34 ]
and edx edi
movzx ecx dl
shl eax 0x8
or eax ecx
mov [ ebx + 0x34 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x10 ]
and eax 0x1
dec edx
cmp al 0x1
sete al
inc [ ebp - 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + ecx + 0xd6c ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
cmp al 0x1
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x3 ]
shr eax cl
add edx 0xfffffffd
mov [ ebx + 0x20 ] edx
and eax 0x7
cmp eax 0x2
mov [ ebp - 0x44 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0xf ]
shr eax cl
add edx 0xfffffff1
mov [ ebx + 0x20 ] edx
and eax 0x7fff
cmp eax 0x1
mov [ ebp - 0x50 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x5 ]
shr eax cl
add edx 0xfffffffb
mov [ ebx + 0x20 ] edx
and eax 0x1f
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
or ecx eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x2c ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x14 ]
mov eax [ ebx + 0x1c ]
xor esi esi
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x14 ]
inc esi
shl esi cl
dec esi
and eax esi
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x72
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x45
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x38
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x50
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x90
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov [ ebx + 0x4 ] 0x1
push 0x4
jmp r-xdata
xor eax eax
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffb
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x39
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp al 0x31
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffc
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x2c ]
cmp [ ebx + 0x30 ] 0x2
mov eax [ ebx + 0x2c ]
jl r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
add ecx 0xa
cmp eax ecx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0x100
lea eax [ ebx + 0xc6c ]
push 0x0
push eax
call sub_10015500
add esp 0xc
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
shl eax 0x4
add eax ebx
mov [ eax + ecx + 0xc6c ] 0x1
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x6
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov al [ ebp - 0x1c ]
inc [ ebp - 0x10 ]
mov [ ebx + ecx + 0x650e ] al
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ ebp - 0x34 ]
inc [ ebp - 0x34 ]
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
imul eax eax 0x102
mov cl [ ebp - 0x34 ]
add eax ebx
inc [ ebp - 0x10 ]
mov [ eax + edx + 0xab60 ] cl
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x60 ]
jl r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x48 ]
shl ecx 0x2
cmp eax [ ecx + edx ]
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebx + 0xc5c ] 0x0
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10015160
leave
retn
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
add eax 0xffffffd0
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x24 ] eax
push 0x1
je r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebx + 0xc58 ] 0x0
push eax
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0xc
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebp - 0x10 ] 0x0
jmp r-xdata
inc [ eax + 0xc ]
mov eax [ ebp - 0x10 ]
cmp eax 0x10
jge r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x10 ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov edx [ ebp - 0x50 ]
cmp [ ebp - 0x10 ] edx
jge r-xdata
inc [ eax + 0xc ]
jmp r-xdata
xor edi edi
xor cl cl
cmp [ ebp - 0x44 ] edi
jle r-xdata
and [ ebp - 0x1c ] 0x0
inc [ eax + 0xc ]
cmp [ ebp - 0x34 ] 0x14
jg r-xdata
cmp [ ebp - 0x34 ] 0x1
jl r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x3c ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
js r-xdata
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ ebp - 0x14 ]
mov edx [ ebp - 0x40 ]
sub eax [ ecx + edx ]
jmp r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ ebx + 0xfa14 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ ebx + 0xfa18 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ ebx + 0xfa1c ] ecx
mov ecx [ ebp - 0x60 ]
mov [ ebx + 0xfa20 ] ecx
mov ecx [ ebp - 0x44 ]
mov [ ebx + 0xfa24 ] ecx
mov ecx [ ebp - 0x50 ]
mov [ ebx + 0xfa28 ] ecx
mov ecx [ ebp - 0x64 ]
mov [ ebx + 0xfa2c ] ecx
mov ecx [ ebp - 0x24 ]
mov [ ebx + 0xfa30 ] ecx
mov ecx [ ebp - 0x28 ]
mov [ ebx + 0xfa34 ] ecx
mov ecx [ ebp - 0x54 ]
mov [ ebx + 0xfa38 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ ebx + 0xfa3c ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebx + 0xfa40 ] ecx
mov ecx [ ebp - 0x20 ]
mov [ ebx + 0xfa44 ] ecx
mov ecx [ ebp - 0x74 ]
mov [ ebx + 0xfa48 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ ebx + 0xfa4c ] ecx
mov ecx [ ebp - 0x80 ]
mov [ ebx + 0xfa50 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0xfa54 ] ecx
mov ecx [ ebp - 0x2c ]
mov [ ebx + 0xfa58 ] ecx
mov ecx [ ebp - 0x6c ]
mov [ ebx + 0xfa5c ] ecx
mov ecx [ ebp - 0x70 ]
mov [ ebx + 0xfa60 ] ecx
mov ecx [ ebp - 0x5c ]
mov [ ebx + 0xfa64 ] ecx
mov ecx [ ebp - 0x48 ]
mov [ ebx + 0xfa68 ] ecx
mov ecx [ ebp - 0x40 ]
mov [ ebx + 0xfa6c ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xfa70 ] ecx
jmp r-xdata
imul eax eax 0x61a80
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
mov [ ebx + 0xc4c ] eax
jmp r-xdata
imul eax eax 0x30d40
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
mov [ ebx + 0xc50 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
inc eax
push 0x1
sar eax 0x1
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0x18
cmp [ ebx + 0xc50 ] 0x0
mov [ ebx + 0xc54 ] eax
je r-xdata
cmp [ ebp - 0x10 ] 0x10
jl r-xdata
and [ ebx + 0xc68 ] 0x0
xor eax eax
cmp [ ebx + eax + 0xd6c ] 0x0
je r-xdata
cmp edx edi
mov [ ebp - 0x10 ] edi
jle r-xdata
xor eax eax
mov eax [ ebp - 0x44 ]
and [ ebp - 0x3c ] 0x0
test eax eax
jle r-xdata
cmp eax 0x102
jge r-xdata
cmp eax 0x102
jge r-xdata
js r-xdata
test eax eax
jne r-xdata
push 0xfffffffd
inc eax
cmp eax 0x100
jl r-xdata
mov ecx [ ebx + 0xc68 ]
mov [ ebx + ecx + 0xd7c ] al
inc [ ebx + 0xc68 ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
and [ ebp - 0x3c ] 0x0
jmp r-xdata
mov dl [ ebx + edi + 0x650e ]
movzx eax dl
lea eax [ ebp + eax - 0xc ]
mov cl [ eax ]
test dl dl
jbe r-xdata
mov [ ebp + eax - 0xc ] cl
inc cl
movzx eax cl
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov eax [ ebx + 0xc68 ]
and [ ebp - 0x28 ] 0x0
inc eax
mov [ ebp - 0x64 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
mov edx 0x100
mov [ ebp - 0x30 ] eax
xor eax eax
lea edi [ ebx + 0x40 ]
mov ecx edx
[ edi ]
push 0xf
mov [ ebp - 0x10 ] edx
mov esi 0xfff
pop eax
lea edi [ ebx + 0x1eb8 ]
lea ecx [ ebx + 0xab60 ]
lea edi [ ebx + 0xf9fc ]
lea edx [ ebx + 0xc99c ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
xor edx edx
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
cmp [ eax + ebx + 0xc6c ] 0x0
je r-xdata
mov eax [ ebx + 0xc68 ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x10
jl r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
mov [ ebx + edi + 0x1ebc ] cl
inc edi
cmp edi [ ebp - 0x50 ]
mov [ ebp - 0xc ] cl
jl r-xdata
mov esi eax
mov dl [ ebp - 0x24 ]
add dl cl
mov [ ebx + esi + 0xe7c ] dl
dec esi
dec [ ebp - 0x24 ]
jns r-xdata
lea ecx [ esi + 0x1 ]
mov [ edi ] ecx
dec eax
sub edi 0x4
test eax eax
jge r-xdata
push [ ebp - 0x60 ]
lea eax [ edx + 0x1830 ]
push [ ebp - 0x24 ]
push esi
push eax
lea eax [ edx - 0x1830 ]
push eax
mov eax [ ebp - 0x30 ]
call sub_100107e6
add [ ebp - 0x30 ] 0x102
mov [ edi ] esi
add esp 0x14
add edi 0x4
add edx 0x408
dec [ ebp - 0x64 ]
jne r-xdata
mov ecx [ ebp - 0x30 ]
movzx eax [ ecx + eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
jl r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x74 ]
cmp eax 0x200000
jge r-xdata
cmp eax 0x1
je r-xdata
add eax 0x2
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x10 ] edi
mov al [ esi - 0x1 ]
dec dl
mov [ esi ] al
dec esi
test dl dl
ja r-xdata
mov cl al
mov [ ebp - 0x24 ] 0xf
shl cl 0x4
xor eax eax
cmp [ ebp - 0x50 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
xor eax eax
cmp [ ebp - 0x60 ] eax
push 0x20
pop esi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] eax
jle r-xdata
cmp eax esi
jge r-xdata
mov [ ebp - 0x24 ] eax
cmp eax [ ebp - 0x18 ]
jge r-xdata
or [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x74 ] 0x1
cmp edi 0x1
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1e7c ]
movzx eax [ eax + ebx + 0xe7c ]
mov cl [ eax + ebx + 0xd7c ]
inc [ ebp - 0x20 ]
mov esi [ ebp - 0x20 ]
movzx eax cl
add [ ebx + eax * 4 + 0x40 ] esi
cmp [ ebx + 0x28 ] dl
je r-xdata
movzx eax [ ebx + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
lea edx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] edx
lea edx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] 0x31
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x10 ]
inc eax
cmp eax [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
jl r-xdata
mov esi eax
and [ ebp - 0x10 ] 0x0
lea esi [ ebx + 0x40 ]
mov eax esi
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
cmp [ ebp - 0x54 ] 0x1
jne r-xdata
add [ ebp - 0x20 ] eax
jmp r-xdata
cmp [ ebp - 0x20 ] edx
jle r-xdata
cmp esi edx
jle r-xdata
cmp ecx [ ebp - 0x18 ]
jg r-xdata
dec edi
cmp edi 0x10
jae r-xdata
add eax eax
cmp [ ebp - 0x28 ] 0x0
mov [ ebp - 0x74 ] eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp - 0x54 ]
cmp edi [ ebp - 0x64 ]
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] 0xff
jle r-xdata
mov esi edi
shr esi 0x4
lea eax [ ebx + esi * 4 + 0x1e7c ]
mov edx [ eax ]
and edi 0xf
add edi edx
cmp edi edx
mov cl [ ebx + edi + 0xe7c ]
jle r-xdata
mov edx [ ebx + 0x1e7c ]
lea eax [ ebx + edx ]
mov cl [ eax + edi + 0xe7c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x55 ] cl
cmp edi 0x3
jbe r-xdata
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
mov esi [ ebx + 0xc4c ]
mov [ esi + ecx * 4 ] eax
inc ecx
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] ecx
jg r-xdata
mov edi [ ebx + 0xc50 ]
movzx si cl
mov [ edi + eax * 2 ] si
inc eax
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] eax
jg r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
and [ ebx + 0x444 ] 0x0
mov edx 0x100
lea eax [ ebx + 0x448 ]
mov ecx edx
mov edi eax
[ edi ] [ esi ]
mov ecx edx
inc [ eax ]
test esi esi
jle r-xdata
lea edx [ ebx + 0xe7c ]
test edi edi
jbe r-xdata
lea ecx [ ebx + 0xe7b ]
lea eax [ ecx + edx ]
mov edx ebx
sub edx ecx
add edx 0xe7c
mov [ ebp - 0x68 ] edx
mov edx ebx
sub edx ecx
add edx 0xe7a
mov [ ebp - 0x7c ] edx
mov edx ebx
sub edx ecx
add edx 0xe78
mov [ ebp - 0x78 ] edx
mov edx ebx
sub edx ecx
lea esi [ edi - 0x4 ]
add edx 0xe79
shr esi 0x2
add eax edi
mov [ ebp - 0x38 ] edx
inc esi
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
cmp ecx [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
cmp eax [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
mov esi [ eax - 0x4 ]
add [ eax ] esi
add eax 0x4
dec ecx
jne r-xdata
and [ ebp - 0x10 ] ecx
lea eax [ ebx + 0x444 ]
lea eax [ ebx + 0x1e7c ]
dec [ eax ]
mov edx [ eax ]
mov [ ebx + edx + 0xe7c ] cl
cmp [ eax ] 0x0
jne r-xdata
mov edi eax
mov al [ edx + edi - 0x1 ]
mov [ edx + edi ] al
dec edi
lea eax [ ebx + esi * 4 + 0x1e7c ]
cmp edi [ eax ]
jg r-xdata
mov [ eax + 0xe7c ] cl
jmp r-xdata
lea esi [ eax + 0xe7c ]
mov cl [ eax ]
mov edx [ ebp - 0x68 ]
mov [ edx + eax ] cl
mov ecx [ ebp - 0x7c ]
add ecx eax
mov dl [ ecx ]
mov [ eax ] dl
mov edx [ ebp - 0x38 ]
mov dl [ edx + eax ]
mov [ ecx ] dl
mov ecx [ ebp - 0x78 ]
mov cl [ ecx + eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + eax ] cl
sub edi 0x4
sub eax 0x4
dec esi
jne r-xdata
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x55 ]
cmp ecx [ ebp - 0x18 ]
jg r-xdata
mov edx [ ebp - 0x18 ]
movzx eax cl
lea eax [ eax + ebx + 0xd7c ]
movzx ecx [ eax ]
lea ecx [ ebx + ecx * 4 + 0x40 ]
inc [ ecx ]
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov edi 0xfff
mov [ ebp - 0x38 ] 0xf
lea esi [ ebx + 0x1eb8 ]
dec [ edi ]
mov edx [ edi - 0x4 ]
mov eax [ edi ]
mov dl [ edx + ebx + 0xe8b ]
dec esi
sub edi 0x4
mov [ ebx + eax + 0xe7c ] dl
test esi esi
jg r-xdata
mov dl [ esi + edi - 0x1 ]
mov [ esi + edi ] dl
dec edi
jne r-xdata
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ eax ]
mov ecx [ ebx + 0xc4c ]
mov [ ecx + edx * 4 ] eax
movzx ax [ eax ]
mov ecx [ ebx + 0xc50 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ esi ]
add eax ebx
mov al [ eax + edx + 0xe7c ]
mov [ edi + ebx + 0xe7c ] al
dec edi
dec [ ebp - 0x68 ]
jns r-xdata
dec [ ebp - 0x38 ]
lea eax [ edi + 0x1 ]
mov [ esi ] eax
sub esi 0x4
cmp [ ebp - 0x38 ] 0x0
jge r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x10 ] eax
lea ecx [ ebx + 0x444 ]
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
inc [ ebp - 0x18 ]
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov [ ebp - 0x68 ] 0xf
inc [ ebp - 0x10 ]
add ecx 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
mov esi [ ecx ]
cmp esi [ ecx + 0x4 ]
jg r-xdata
and [ ebx + 0xc ] 0x0
or [ ebx + 0xc60 ] 0xffffffff
push 0x2
pop ecx
cmp [ ebx + 0x30 ] ecx
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x4 ] ecx
jl r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
pop ecx
xor eax eax
pop ecx
inc eax
xor esi esi
cmp [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] esi
jle r-xdata
xor edx edx
cmp [ ebp - 0x18 ] edx
lea edi [ ebx + 0x848 ]
mov ecx 0x101
lea esi [ ebx + 0x444 ]
[ edi ] [ esi ]
jle r-xdata
mov ecx [ ebx + 0xc4c ]
mov edx [ ebx + 0x34 ]
mov edx [ ecx + edx * 4 ]
mov esi [ ebx + 0x24 ]
shr edx 0x8
imul esi esi 0x186a0
mov [ ebx + 0x38 ] edx
xor edx edx
mov [ ebx + 0x440 ] edx
cmp [ ebx + 0x10 ] dl
je r-xdata
mov edx [ ebx + 0xc4c ]
movzx ecx [ edx + esi * 4 ]
lea ecx [ ebx + ecx * 4 + 0x444 ]
mov edi [ ecx ]
lea edx [ edx + edi * 4 ]
mov edi esi
shl edi 0x8
or [ edx ] edi
inc [ ecx ]
inc esi
cmp esi [ ebp - 0x18 ]
jl r-xdata
mov edx [ ebx + 0x34 ]
mov esi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
movzx edi [ ecx + esi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
jmp r-xdata
mov ecx [ ebx + 0xc50 ]
lea ecx [ ecx + edx * 2 ]
movzx esi [ ecx ]
lea esi [ ebx + esi * 4 + 0x848 ]
mov di [ esi ]
mov [ ecx ] di
test dl 0x1
jne r-xdata
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x18 ] edx
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebp - 0x10 ] esi
mov esi [ ebx + 0xc54 ]
mov ecx edi
sar ecx 0x1
movzx esi [ esi + ecx ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x1c ] edi
and [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x1c ]
mov eax [ ebx + 0xc50 ]
shl cl 0x2
shr esi cl
lea eax [ eax + edi * 2 ]
movzx ecx [ eax ]
and esi 0xf
shl esi 0x10
or esi ecx
mov ecx [ ebp - 0x38 ]
mov [ eax ] dx
mov eax [ ebx + 0xc54 ]
add eax ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebx + 0xc54 ]
mov eax edx
sar eax 0x1
lea edi [ eax + ecx ]
mov eax [ esi ]
mov ecx [ esi ]
sar eax 0xc
xor al [ edi ]
sar ecx 0xc
and al 0xf
xor al cl
mov [ edi ] al
xor eax eax
inc eax
mov edi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
add edi ecx
mov cl [ edi ]
and cl 0xf0
or cl [ esi + 0x2 ]
mov [ edi ] cl
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
mov ecx [ rw-data ]
mov [ ebx + 0x14 ] ecx
dec [ ebx + 0x14 ]
mov ecx [ ebx + 0x14 ]
xor edx edx
cmp ecx eax
sete dl
mov [ ebx + 0x18 ] eax
xor [ ebx + 0x3c ] edx
jmp r-xdata
mov ecx edx
sar ecx 0xc
xor cl [ eax ]
sar edx 0xc
and cl 0xf
xor cl dl
mov [ eax ] cl
mov cl [ eax ]
sar edx 0x10
and cl 0xf0
or dl cl
mov [ eax ] dl
jmp r-xdata
inc [ esi ]
inc edx
cmp edx [ ebp - 0x18 ]
jl r-xdata
xor eax eax
inc eax
mov eax [ ebx + 0x34 ]
xor ecx ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] edx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
cmp [ ebx + 0x10 ] cl
je r-xdata
mov edx edi
mov edi esi
cmp edx [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jae r-xdata
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] ecx
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jb r-xdata
xor eax eax
inc eax
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_1000aa76
mov edx [ ebx + 0xc54 ]
mov [ ebx + 0x3c ] eax
mov eax [ ebx + 0x34 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edx ]
movzx ecx al
and cl 0x1
shl cl 0x2
shr edx cl
mov ecx [ ebx + 0xc50 ]
movzx eax [ ecx + eax * 2 ]
and edx 0xf
shl edx 0x10
or edx eax
mov [ ebx + 0x38 ] edx
mov [ ebx + 0x440 ] 0x1
jmp r-xdata
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_1000aa76
mov edx [ ebx + 0x34 ]
mov esi eax
pop ecx
mov [ ebx + 0x3c ] esi
mov eax edx
shr eax 0x1
pop ecx
mov ecx [ ebx + 0xc54 ]
movzx eax [ eax + ecx ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr eax cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
xor ecx ecx
inc ecx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
mov eax [ rw-data ]
mov [ ebx + 0x14 ] eax
dec [ ebx + 0x14 ]
mov edi [ ebx + 0x14 ]
xor eax eax
cmp edi ecx
sete al
mov [ ebx + 0x18 ] ecx
xor eax esi
mov [ ebx + 0x3c ] eax
sub_1000ef2a
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] edx
je r-xdata
leave
retn
mov ecx edx
sub ecx [ ebp + 0x8 ]
push ebx
cmp ecx 0x3
push esi
jle r-xdata
mov edx [ ebp + 0xc ]
jmp r-xdata
add edx 0xfffffffc
jmp r-xdata
dec edx
cmp edx [ ebp + 0x8 ]
jge r-xdata
cmp edx [ ebp + 0x8 ]
jge r-xdata
mov ecx [ eax + edx * 4 ]
mov ebx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ edx + 0x1 ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ eax + edx * 4 ]
mov ebx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ edx + 0x4 ]
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jle r-xdata
cmp ecx [ ebp + 0xc ]
jle r-xdata
mov esi [ eax + ecx * 4 ]
cmp ebx [ edi + esi * 4 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + ecx * 4 - 0x4 ] esi
mov esi [ eax + ecx * 4 ]
cmp ebx [ edi + esi * 4 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + ecx * 4 - 0x10 ] esi
dec edx
mov [ eax + ecx * 4 - 0x4 ] esi
inc ecx
mov [ eax + ecx * 4 - 0x10 ] esi
add ecx 0x4
sub_1000efac
push ebp
mov ebp esp
sub esp 0x344
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0x344 ] eax
mov [ ebp + 0xc ] 0x1
push edi
push 0x3ec
call sub_10009efd
dec [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
shl eax 0x2
lea ecx [ ebp + eax - 0x1b4 ]
lea eax [ ebp + eax - 0x344 ]
mov ebx [ eax ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
mov ecx [ ecx ]
mov eax ebx
sub eax ecx
cmp eax 0xa
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ebx
jge r-xdata
mov eax [ ebp - 0x18 ]
imul eax eax 0x1dc5
inc eax
and eax 0x7fff
push 0x3
xor edx edx
pop edi
mov [ ebp - 0x18 ] eax
div edi
test edx edx
jne r-xdata
mov edi [ ebp + 0x8 ]
push ebx
push ecx
mov eax esi
call sub_1000ef2a
pop ecx
pop ecx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ esi + ecx * 4 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov eax [ esi + ebx * 4 ]
lea eax [ ebx + ecx ]
sar eax 0x1
mov eax [ esi + eax * 4 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
mov edi ecx
mov [ ebp - 0x10 ] ebx
mov eax ebx
cmp [ ebp + 0xc ] 0x63
jge r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x10 ] ecx
jl r-xdata
mov edx [ esi + edi * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
sub ecx [ ebp - 0x4 ]
jne r-xdata
mov ecx edi
sub ecx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
cmp ecx edx
jge r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ esi + ecx * 4 ]
mov [ esi + edi * 4 ] ecx
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
inc edi
cmp edi eax
mov [ esi + ecx * 4 ] edx
jle r-xdata
mov [ ebp - 0x4 ] edx
test edx edx
jle r-xdata
mov edx ecx
inc edi
jmp r-xdata
cmp edi eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx ebx
sub edx [ ebp - 0x10 ]
sub ecx eax
cmp edx ecx
jge r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx edi
sub ebx edx
lea ecx [ esi + ecx * 4 ]
lea edx [ esi + ebx * 4 ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov edx [ esi + eax * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
sub ecx [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x4 ] ecx
test ecx ecx
jle r-xdata
mov ecx edx
mov ebx [ ecx ]
mov [ ebp - 0x8 ] ebx
mov ebx [ edx ]
mov [ ecx ] ebx
mov ebx [ ebp - 0x8 ]
mov [ edx ] ebx
add ecx 0x4
add edx 0x4
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov ebx [ ebp - 0xc ]
cmp edi eax
jg r-xdata
test ecx ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ ecx ]
mov [ esi + eax * 4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
sub eax [ ebp - 0x10 ]
lea ecx [ ecx + edx - 0x1 ]
mov edi ecx
sub edi [ ebp - 0x14 ]
lea eax [ eax + ebx + 0x1 ]
mov edx ebx
sub edx eax
inc [ ebp + 0xc ]
cmp edi edx
jle r-xdata
lea edx [ esi + edi * 4 ]
mov edi ebx
sub edi ecx
lea ecx [ esi + edi * 4 + 0x4 ]
cmp edi eax
jg r-xdata
dec eax
cmp edi eax
jle r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
shl eax 0x2
mov [ ebp + eax - 0x1b4 ] edx
mov [ ebp + eax - 0x344 ] ecx
mov edx [ ebp - 0x24 ]
mov [ edx ] ecx
mov ecx [ ebp + 0xc ]
shl ecx 0x2
mov [ ebp + ecx - 0x1b4 ] eax
mov [ ebp + ecx - 0x344 ] ebx
jmp r-xdata
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ ecx ]
mov [ edx ] edi
mov edi [ ebp - 0xc ]
mov [ ecx ] edi
add edx 0x4
add ecx 0x4
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ esi + edi * 4 ]
mov [ esi + edi * 4 ] edx
mov [ esi + eax * 4 ] ecx
inc edi
dec eax
inc [ ebp + 0xc ]
sub_1000f1e8
push ebp
mov ebp esp
sub esp 0x810
cmp [ ebp + 0x14 ] 0x4
push ebx
push esi
push edi
mov ebx eax
jl r-xdata
mov edx 0x101
xor eax eax
mov ecx edx
lea edi [ ebp - 0x410 ]
[ edi ]
mov eax [ ebp + 0x10 ]
xor esi esi
test eax eax
jle r-xdata
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
pop ecx
pop ecx
mov ecx 0x100
lea esi [ ebp - 0x410 ]
lea edi [ ebp - 0x810 ]
[ edi ] [ esi ]
xor esi esi
inc esi
mov ecx [ ebp + 0xc ]
movzx ecx [ esi + ecx ]
lea ecx [ ebp + ecx * 4 - 0x410 ]
inc [ ecx ]
inc esi
cmp esi eax
jl r-xdata
mov edi [ ebp + esi * 4 - 0x414 ]
lea ecx [ ebp + esi * 4 - 0x410 ]
add [ ecx ] edi
inc esi
cmp esi edx
jl r-xdata
xor edi edi
test eax eax
jle r-xdata
cdq
and edx 0x1f
add eax edx
sar eax 0x5
inc eax
inc eax
test eax eax
jle r-xdata
mov ecx [ ebp + 0xc ]
movzx ecx [ edi + ecx ]
lea edx [ ebp + ecx * 4 - 0x410 ]
mov ecx [ edx ]
dec ecx
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] edi
inc edi
cmp edi eax
jl r-xdata
xor edx edx
mov ecx eax
xor eax eax
mov edi ebx
[ edi ]
mov ecx [ ebp + edx * 4 - 0x410 ]
xor esi esi
mov eax ecx
and ecx 0x1f
inc esi
shl esi cl
sar eax 0x5
lea eax [ ebx + eax * 4 ]
or [ eax ] esi
inc edx
cmp edx 0x100
jl r-xdata
mov edx [ ebp + 0x10 ]
push 0x20
pop esi
xor edi edi
inc edi
mov ecx edx
and ecx 0x1f
shl edi cl
mov eax edx
sar eax 0x5
lea eax [ ebx + eax * 4 ]
or [ eax ] edi
lea ecx [ edx + 0x1 ]
xor edi edi
inc edi
mov eax ecx
and ecx 0x1f
shl edi cl
sar eax 0x5
lea eax [ ebx + eax * 4 ]
not edi
and [ eax ] edi
inc edx
inc edx
dec esi
jne r-xdata
mov [ ebp - 0x8 ] 0x1
xor edx edx
xor esi esi
cmp [ ebp + 0x10 ] edx
jle r-xdata
push [ ebp - 0x8 ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0xc
and [ ebp - 0xc ] 0x0
or edi 0xffffffff
xor eax eax
mov ecx edx
and ecx 0x1f
inc eax
shl eax cl
mov ecx edx
sar ecx 0x5
test [ ebx + ecx * 4 ] eax
je r-xdata
xor esi esi
mov ecx eax
and ecx 0x1f
inc esi
shl esi cl
mov edx eax
sar edx 0x5
test [ ebx + edx * 4 ] esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + edx * 4 ]
sub eax [ ebp - 0x8 ]
jns r-xdata
mov esi edx
test ecx ecx
je r-xdata
mov ecx eax
sar ecx 0x5
mov edx [ ebx + ecx * 4 ]
push 0x1f
xor edi edi
mov ecx eax
pop esi
and ecx esi
inc edi
shl edi cl
test edx edi
je r-xdata
mov ecx [ ebp + 0xc ]
inc edx
cmp edx [ ebp + 0x10 ]
mov [ ecx + eax * 4 ] esi
jl r-xdata
add eax [ ebp + 0x10 ]
inc eax
lea ecx [ eax - 0x1 ]
cmp ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
jge r-xdata
cmp edx 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
mov ecx eax
and ecx esi
jmp r-xdata
xor edx edx
mov ecx eax
and ecx esi
inc edx
shl edx cl
mov ecx eax
sar ecx 0x5
test [ ebx + ecx * 4 ] edx
jne r-xdata
add eax 0x20
mov ecx eax
sar ecx 0x5
cmp [ ebx + ecx * 4 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x8 ]
add eax eax
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0xc ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0xc
xor esi esi
inc esi
shl esi cl
mov edx eax
sar edx 0x5
test [ ebx + edx * 4 ] esi
je r-xdata
inc eax
jmp r-xdata
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx eax
sar ecx 0x5
mov edx [ ebx + ecx * 4 ]
xor esi esi
mov ecx eax
and ecx 0x1f
inc esi
shl esi cl
test edx esi
jne r-xdata
xor esi esi
xor ecx ecx
xor edx edx
cmp [ ebp + 0x10 ] esi
jle r-xdata
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
pop ecx
pop ecx
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
inc eax
mov ecx eax
and ecx 0x1f
lea edi [ eax - 0x1 ]
cmp edi [ ebp + 0x10 ]
jge r-xdata
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x810 ]
mov eax [ ebp - 0x4 ]
cmp edi eax
jle r-xdata
xor edx edx
mov ecx eax
and ecx 0x1f
inc edx
shl edx cl
mov ecx eax
sar ecx 0x5
test [ ebx + ecx * 4 ] edx
je r-xdata
add eax 0x20
mov ecx eax
sar ecx 0x5
cmp [ ebx + ecx * 4 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
mov edi [ edi + edx * 4 ]
mov ebx [ ebp + 0xc ]
lea eax [ ebp + ecx * 4 - 0x810 ]
dec [ eax ]
inc edx
cmp edx [ ebp + 0x10 ]
mov [ ebx + edi ] cl
jl r-xdata
inc ecx
cmp [ ebp + ecx * 4 - 0x810 ] esi
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
mov ecx edi
sub ecx eax
push edi
push [ ebp + 0xc ]
lea ecx [ edx + ecx + 0x1 ]
mov [ ebp - 0xc ] ecx
call sub_1000efac
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
or eax 0xffffffff
jmp r-xdata
inc eax
jmp r-xdata
cmp [ eax ] esi
jne r-xdata
cmp ecx 0x100
jl r-xdata
cmp edx edi
jle r-xdata
push 0x3ed
call sub_10009efd
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov esi [ ebp + 0xc ]
mov ecx [ esi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
jmp r-xdata
inc edx
xor esi esi
mov ecx edx
and ecx 0x1f
inc esi
mov eax edx
sar eax 0x5
shl esi cl
lea eax [ ebx + eax * 4 ]
or [ eax ] esi
mov eax [ ebp - 0x4 ]
sub_1000f53f
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edx
mov dl [ edi + eax ]
mov bl [ esi + eax ]
cmp bl dl
je r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
sbb eax eax
neg eax
jmp r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
mov edx [ ebp + 0xc ]
inc edi
inc esi
add edx 0x8
mov [ ebp + 0x8 ] edx
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
mov edx [ ebp + 0xc ]
inc edi
inc esi
cmp edi edx
jb r-xdata
cmp esi edx
jb r-xdata
sub edi edx
sub [ ebp + 0x8 ] 0x8
mov edx [ ebp + 0x10 ]
dec [ edx ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
sub esi edx
mov dl [ edi + eax ]
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
xor al al
sub_1000f725
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
sub eax [ ebp + 0x14 ]
sub esp 0x1c
inc eax
cmp eax 0x2
jl r-xdata
leave
retn
xor ecx ecx
cmp [ rw-data ] eax
jge r-xdata
dec ecx
mov [ ebp - 0x18 ] ecx
js r-xdata
inc ecx
cmp [ ecx * 4 + rw-data ] eax
jl r-xdata
push ebx
push edi
dec ecx
mov [ ebp - 0x18 ] ecx
jns r-xdata
mov ecx edi
sub ecx eax
lea ebx [ esi + ecx * 4 ]
mov eax [ ecx * 4 + rw-data ]
mov edx [ ebp + 0x14 ]
lea edi [ eax + edx ]
cmp edi [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] edi
jg r-xdata
pop edi
pop ebx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
inc edi
add ebx 0x4
cmp edi [ ebp + 0x18 ]
mov [ esi + ecx * 4 ] eax
jg r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_1000f53f
add esp 0xc
test al al
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
inc edi
add ebx 0x4
cmp edi [ ebp + 0x18 ]
mov [ esi + ecx * 4 ] eax
jg r-xdata
mov eax ebx
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_1000f53f
add esp 0xc
test al al
jne r-xdata
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_1000f53f
add esp 0xc
test al al
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ esi + ecx * 4 ] eax
mov eax [ ebp + 0x20 ]
inc edi
add ebx 0x4
cmp [ eax ] 0x0
jl r-xdata
mov eax ebx
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_1000f53f
add esp 0xc
test al al
jne r-xdata
cmp edi [ ebp + 0x18 ]
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_1000f53f
add esp 0xc
test al al
je r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_1000f53f
add esp 0xc
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
sub_1000f93b
push ebp
mov ebp esp
sub esp 0x508
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1e8 ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov [ ebp - 0x378 ] eax
mov [ ebp - 0x508 ] 0x2
inc ebx
push 0x3e9
call sub_10009efd
dec ebx
lea ecx [ ebp + ebx * 4 - 0x378 ]
mov edi [ ecx ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp + ebx * 4 - 0x508 ]
mov edx [ ecx ]
lea eax [ ebp + ebx * 4 - 0x1e8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] eax
mov eax [ eax ]
mov ecx edi
sub ecx eax
cmp ecx 0x14
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x20 ] eax
jl r-xdata
push [ ebp + 0x1c ]
push edx
push edi
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1000f725
mov eax [ ebp + 0x1c ]
add esp 0x1c
cmp [ eax ] 0x0
jl r-xdata
cmp edx 0xe
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ebx ebx
jg r-xdata
lea ecx [ edi + eax ]
sar ecx 0x1
mov ebx [ esi + ecx * 4 ]
mov ecx [ ebp + 0xc ]
add ebx edx
mov bl [ ebx + ecx ]
mov [ ebp - 0x18 ] bl
mov ebx [ esi + edi * 4 ]
add ebx edx
mov bl [ ebx + ecx ]
mov [ ebp + 0x18 ] bl
mov ebx [ esi + eax * 4 ]
add ebx edx
mov cl [ ebx + ecx ]
mov [ ebp - 0x4 ] cl
cmp cl [ ebp + 0x18 ]
jbe r-xdata
cmp ebx 0x62
jge r-xdata
mov cl [ ebp - 0x18 ]
cmp [ ebp + 0x18 ] cl
jbe r-xdata
mov bl [ ebp + 0x18 ]
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x18 ] cl
movzx ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edi
mov eax edi
mov bl [ ebp - 0x4 ]
mov [ ebp + 0x18 ] cl
cmp bl cl
jbe r-xdata
mov ebx [ ebp - 0xc ]
cmp [ ebp - 0x10 ] ebx
jge r-xdata
mov ecx [ ebp + 0x18 ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
add ecx edx
movzx ecx [ ecx + ebx ]
sub ecx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp + 0x18 ] bl
mov ecx [ ebp + 0x18 ]
sub ecx ebx
mov [ ebp - 0x14 ] ecx
mov ecx ebx
sub ecx [ ebp - 0x20 ]
mov ebx [ ebp - 0x14 ]
cmp ecx ebx
jge r-xdata
mov eax [ ebp - 0x4c ]
mov ebx [ ebp - 0x48 ]
inc edx
mov [ eax ] edx
inc ebx
jmp r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp + 0x18 ]
mov [ esi + ebx * 4 ] ecx
mov ebx [ ebp - 0xc ]
inc [ ebp - 0xc ]
inc [ ebp + 0x18 ]
cmp [ ebp + 0x18 ] eax
mov ecx [ ebp - 0x14 ]
mov [ esi + ebx * 4 ] ecx
jle r-xdata
mov [ ebp - 0x8 ] ebx
test ebx ebx
jle r-xdata
mov ebx ecx
inc [ ebp + 0x18 ]
jmp r-xdata
cmp [ ebp + 0x18 ] eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx eax
mov [ ebp - 0x1c ] ecx
mov ecx edi
sub ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x1c ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ esi + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x18 ]
sub ecx ebx
lea ecx [ esi + ecx * 4 ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp + 0x18 ] eax
jg r-xdata
mov ecx [ esi + eax * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
add ecx edx
movzx ecx [ ecx + ebx ]
sub ecx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0x8 ] ecx
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
mov ebx [ ebx ]
mov ecx [ ecx ]
mov [ ebp - 0x54 ] ebx
mov ebx [ ebp - 0xc ]
add [ ebp - 0xc ] 0x4
mov [ ebx ] ecx
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x54 ]
mov [ ecx ] ebx
add ecx 0x4
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1c ] ecx
jg r-xdata
test ecx ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
mov [ esi + eax * 4 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ esi + ebx * 4 ] ecx
jmp r-xdata
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x14 ]
sub eax [ ebp - 0x10 ]
lea ecx [ ecx + esi - 0x1 ]
mov [ ebp - 0x2c ] esi
lea eax [ eax + edi + 0x1 ]
lea esi [ ecx + 0x1 ]
mov [ ebp - 0x24 ] esi
lea esi [ eax - 0x1 ]
mov [ ebp - 0x30 ] esi
lea esi [ edx + 0x1 ]
mov [ ebp - 0x3c ] esi
mov ebx ecx
sub ebx [ ebp - 0x20 ]
mov esi edi
sub esi eax
cmp ebx esi
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x40 ] edx
jge r-xdata
mov ebx [ ebp + 0x18 ]
lea ebx [ esi + ebx * 4 ]
mov [ ebp + 0x18 ] ebx
mov ebx edi
sub ebx ecx
lea ecx [ esi + ebx * 4 + 0x4 ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x18 ]
cmp ecx eax
jg r-xdata
dec eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x40 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x44 ] edx
mov eax edx
jmp r-xdata
mov ebx [ esi ]
mov [ ebp + 0x18 ] ebx
mov ebx [ ecx ]
mov [ esi ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ecx ] ebx
add esi 0x4
add ecx 0x4
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
inc [ ebp + 0x18 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ ecx ]
mov [ ebp - 0x14 ] ebx
mov ebx [ esi + eax * 4 ]
mov [ ecx ] ebx
mov ecx [ ebp - 0x14 ]
mov [ esi + eax * 4 ] ecx
dec eax
jmp r-xdata
mov ebx [ ebp - 0x38 ]
sub ebx [ ebp - 0x2c ]
mov edi ecx
sub edi esi
cmp ebx edi
jge r-xdata
mov eax esi
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax ecx
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov edi [ ebp - 0x30 ]
sub edi [ ebp - 0x24 ]
mov ebx ecx
sub ebx esi
cmp ebx edi
jge r-xdata
mov edi [ ebp - 0x2c ]
mov ebx [ ebp - 0x38 ]
mov ebx [ ebp - 0x2c ]
mov edi esi
mov esi ebx
mov ebx [ ebp - 0x38 ]
mov [ ebp + 0x18 ] ebx
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov eax edx
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov [ edx ] edi
mov edx [ ebp - 0x58 ]
mov edi [ ebp - 0x44 ]
mov [ edx ] ebx
mov ebx [ ebp - 0x48 ]
mov edx [ ebp - 0x4c ]
inc ebx
mov [ ebp + ebx * 4 - 0x1e8 ] esi
mov esi [ ebp + 0x8 ]
mov [ edx ] edi
mov [ ebp + ebx * 4 - 0x508 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp + ebx * 4 - 0x378 ] ecx
inc ebx
mov [ ebp + ebx * 4 - 0x1e8 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp + ebx * 4 - 0x378 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp + ebx * 4 - 0x508 ] eax
inc ebx
jmp r-xdata
sub_1000fcab
push ebp
lea ebp [ esp - 0x188 ]
sub esp 0xd2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x184 ] eax
cmp [ ebp + 0x198 ] 0x4
mov eax [ ebp + 0x190 ]
push ebx
push edi
mov [ ebp + 0x64 ] eax
mov eax [ ebp + 0x19c ]
mov ebx ecx
mov edi edx
mov [ ebp + 0x6c ] ebx
mov [ ebp + 0x70 ] edi
mov [ ebp + 0x5c ] eax
jl r-xdata
mov eax 0x10000
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
pop ecx
pop ecx
and [ esi + eax * 4 ] 0x0
dec eax
jns r-xdata
movzx ecx [ edi ]
mov edx [ ebp + 0x194 ]
shl ecx 0x8
dec edx
cmp edx 0x3
jl r-xdata
test edx edx
jl r-xdata
mov eax [ ebp + 0x64 ]
lea edi [ eax + edx * 2 - 0x4 ]
mov edi [ ebp + 0x70 ]
mov edi [ ebp + 0x64 ]
xor eax eax
mov [ edi + edx * 2 ] ax
mov edi [ ebp + 0x70 ]
movzx eax [ edi + edx ]
shl eax 0x8
sar ecx 0x8
or ecx eax
inc [ esi + ecx * 4 ]
dec edx
jns r-xdata
xor eax eax
mov [ edi + 0x4 ] ax
mov eax [ ebp + 0x70 ]
movzx eax [ eax + edx ]
sar ecx 0x8
shl eax 0x8
or eax ecx
inc [ esi + eax * 4 ]
xor ecx ecx
mov [ edi + 0x2 ] cx
mov ecx [ ebp + 0x70 ]
movzx ecx [ ecx + edx - 0x1 ]
shl ecx 0x8
sar eax 0x8
or ecx eax
inc [ esi + ecx * 4 ]
xor eax eax
mov [ edi ] ax
mov eax [ ebp + 0x70 ]
movzx eax [ eax + edx - 0x2 ]
sar ecx 0x8
shl eax 0x8
or eax ecx
inc [ esi + eax * 4 ]
xor ecx ecx
mov [ edi - 0x2 ] cx
mov ecx [ ebp + 0x70 ]
movzx ecx [ ecx + edx - 0x3 ]
shl ecx 0x8
sar eax 0x8
or ecx eax
inc [ esi + ecx * 4 ]
sub edx 0x4
sub edi 0x8
cmp edx 0x3
jge r-xdata
mov cl [ edi + eax ]
mov edx [ ebp + 0x68 ]
mov [ edx + eax ] cl
mov edx [ ebp + 0x78 ]
add [ ebp + 0x78 ] 0x2
xor ecx ecx
inc eax
cmp eax 0x22
mov [ edx ] cx
jl r-xdata
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
jmp r-xdata
xor ecx ecx
inc ecx
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
pop ecx
pop ecx
mov ecx [ ebp + 0x194 ]
mov edx [ ebp + 0x64 ]
lea edx [ edx + ecx * 2 ]
xor eax eax
add ecx edi
mov [ ebp + 0x78 ] edx
mov [ ebp + 0x68 ] ecx
mov edx [ esi + ecx * 4 - 0x4 ]
lea eax [ esi + ecx * 4 ]
add [ eax ] edx
inc ecx
cmp ecx 0x10000
jle r-xdata
movzx ax [ edi ]
mov edx [ ebp + 0x194 ]
shl ax 0x8
dec edx
cmp edx 0x3
movzx ecx ax
jl r-xdata
test edx edx
jl r-xdata
mov edi [ ebp + 0x70 ]
or [ ebp + 0x78 ] 0xffffffff
sub [ ebp + 0x78 ] edi
mov [ ebp + 0x80 ] 0xfffffffe
sub [ ebp + 0x80 ] edi
lea eax [ edi + edx - 0x1 ]
push 0x100
xor edi edi
lea eax [ ebp + 0x84 ]
push edi
push eax
call sub_10015500
add esp 0xc
mov eax [ ebp + 0x70 ]
movzx ax [ eax + edx ]
shl ax 0x8
shr cx 0x8
or ax cx
movzx ecx ax
movzx eax cx
lea edi [ esi + eax * 4 ]
mov eax [ edi ]
dec eax
mov [ edi ] eax
mov [ ebx + eax * 4 ] edx
dec edx
jns r-xdata
movzx di [ eax + 0x1 ]
shr cx 0x8
shl di 0x8
or di cx
movzx edi di
movzx ecx di
lea ebx [ esi + ecx * 4 ]
mov ecx [ ebx ]
dec ecx
mov [ ebx ] ecx
mov ebx [ ebp + 0x6c ]
mov [ ebx + ecx * 4 ] edx
movzx cx [ eax ]
shl cx 0x8
shr di 0x8
or cx di
movzx ecx cx
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
lea edi [ edx - 0x1 ]
mov [ ebx + ecx * 4 ] edi
movzx di [ eax - 0x1 ]
mov ecx [ ebp + 0x74 ]
shl di 0x8
shr cx 0x8
or di cx
movzx ecx di
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
mov edi [ ebp + 0x78 ]
add edi eax
mov [ ebx + ecx * 4 ] edi
movzx di [ eax - 0x2 ]
mov ecx [ ebp + 0x74 ]
shr cx 0x8
shl di 0x8
or di cx
movzx ecx di
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
mov edi [ ebp + 0x80 ]
add edi eax
sub edx 0x4
sub eax 0x4
cmp edx 0x3
mov [ ebx + ecx * 4 ] edi
mov ecx [ ebp + 0x74 ]
jge r-xdata
mov [ ebp + edi * 4 - 0x3a4 ] edi
inc edi
cmp edi 0xff
jle r-xdata
xor eax eax
inc eax
imul eax eax 0x3
inc eax
cmp eax 0x100
jle r-xdata
mov [ ebp + 0x7c ] eax
cmp [ ebp + 0x7c ] 0x1
jne r-xdata
lea eax [ ebp - 0x3a4 ]
mov [ ebp + 0x78 ] eax
mov eax [ ebp + 0x7c ]
push 0x3
cdq
pop ecx
idiv ecx
cmp eax 0xff
mov [ ebp + 0x7c ] eax
mov [ ebp + 0x74 ] eax
jg r-xdata
and [ ebp + 0x78 ] 0x0
and [ ebp + 0x74 ] 0x0
inc [ ebp + 0x74 ]
mov eax [ ebp + 0x6c ]
add [ ebp + 0x78 ] 0x4
cmp [ ebp + 0x74 ] 0xff
mov [ ebp + edi * 4 - 0x3a4 ] eax
jle r-xdata
mov eax [ ebp + 0x78 ]
jmp r-xdata
inc [ ebp + 0x7c ]
cmp [ ebp + 0x7c ] 0xff
jle r-xdata
shl eax 0x8
add eax [ ebp + 0x7c ]
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x6c ] eax
mov eax [ eax ]
test eax 0x200000
jne r-xdata
mov edi [ ebp + 0x74 ]
mov eax [ ebp + edi * 4 - 0x3a4 ]
mov ecx [ ebp + 0x78 ]
mov ecx [ ecx ]
mov [ ebp + 0x6c ] eax
shl eax 0xa
shl ecx 0xa
add eax esi
lea edx [ ecx + esi ]
mov ecx [ eax + 0x400 ]
sub ecx [ eax ]
mov eax [ edx + 0x400 ]
sub eax [ edx ]
cmp eax ecx
jbe r-xdata
mov edx [ eax ]
mov [ ebp + edi * 4 - 0x3a4 ] edx
mov edx [ ebp + 0x7c ]
sub edi edx
shl edx 0x2
sub eax edx
mov edx [ ebp + 0x7c ]
dec edx
cmp edi edx
mov [ ebp + 0x68 ] eax
jle r-xdata
cmp [ ebp + 0x7c ] eax
je r-xdata
lea ecx [ ebp + eax + 0x84 ]
cmp [ ecx ] 0x0
mov [ ebp + 0x60 ] ecx
jne r-xdata
mov eax [ ebp + 0x6c ]
mov ecx 0xffdfffff
and eax ecx
mov [ ebp + 0x80 ] eax
mov eax [ ebp + 0x6c ]
mov edi [ eax + 0x4 ]
and edi ecx
dec edi
cmp edi [ ebp + 0x80 ]
jle r-xdata
mov eax [ eax ]
shl eax 0xa
add eax esi
mov edx [ eax + 0x400 ]
sub edx [ eax ]
cmp edx ecx
ja r-xdata
push 0x3ee
mov edx eax
shl edx 0x2
lea ecx [ esi + edx ]
mov [ ebp + 0x7c ] ecx
mov [ ebp + 0x80 ] ecx
xor ecx ecx
or [ eax ] 0x200000
mov eax [ ebp + 0x68 ]
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
mov eax [ ebp + 0x68 ]
mov edi [ ebp + 0x80 ]
mov edi [ edi ]
and edi 0xffdfffff
mov [ ebp + ecx - 0x7a4 ] edi
mov edi [ ebp + 0x80 ]
mov edi [ edi + 0x4 ]
add [ ebp + 0x80 ] 0x400
and edi 0xffdfffff
dec edi
mov [ ebp + ecx - 0xba4 ] edi
add ecx 0x4
cmp ecx 0x3fc
jle r-xdata
shl eax 0xa
lea edi [ eax + esi ]
mov eax [ edi ]
lea ecx [ ebp + edx - 0x7a4 ]
and eax 0xffdfffff
cmp eax [ ecx ]
mov [ ebp + 0x80 ] edi
mov [ ebp + 0x68 ] ecx
jge r-xdata
push [ ebp + 0x5c ]
mov eax [ ebp + 0x80 ]
push edi
push [ ebp + 0x194 ]
push [ ebp + 0x64 ]
push [ ebp + 0x70 ]
push ebx
call sub_1000f93b
sub edi [ ebp + 0x80 ]
mov eax [ ebp + 0x78 ]
lea eax [ eax + edi + 0x1 ]
mov [ ebp + 0x78 ] eax
mov eax [ ebp + 0x5c ]
add esp 0x18
cmp [ eax ] 0x0
jl r-xdata
mov eax edi
sub eax [ ebp + 0x80 ]
inc eax
push eax
push [ ebp + 0x78 ]
push [ ebp + 0x7c ]
push [ ebp + 0x68 ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0x18
mov eax [ edi + 0x400 ]
lea edx [ ebp + edx - 0xba4 ]
and eax 0xffdfffff
mov [ ebp + 0x80 ] edx
jmp r-xdata
mov ecx [ ebx + eax * 4 ]
dec ecx
jns r-xdata
mov ecx [ ebp + 0x184 ]
pop edi
xor ecx ebp
pop ebx
call sub_10015160
add ebp 0x188
leave
retn
dec eax
cmp eax [ edx ]
jg r-xdata
mov edi [ ebp + 0x70 ]
movzx edi [ edi + ecx ]
cmp [ ebp + edi + 0x84 ] 0x0
jne r-xdata
add ecx [ ebp + 0x194 ]
mov ecx [ ebx + eax * 4 ]
dec ecx
jns r-xdata
mov eax [ ebp + 0x68 ]
mov eax [ eax ]
mov edx [ edx ]
lea ecx [ eax - 0x1 ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x68 ]
inc eax
cmp eax [ ecx ]
jl r-xdata
lea edi [ ebp + edi * 4 - 0x7a4 ]
mov [ ebp + 0x6c ] edi
mov edi [ edi ]
mov [ ebx + edi * 4 ] ecx
mov ecx [ ebp + 0x6c ]
inc edi
mov [ ecx ] edi
mov edx [ ebp + 0x70 ]
movzx edx [ edx + ecx ]
cmp [ ebp + edx + 0x84 ] 0x0
jne r-xdata
add ecx [ ebp + 0x194 ]
mov eax [ ebp + 0x7c ]
mov ecx 0x100
test eax eax
jne r-xdata
mov edi [ ebp + 0x80 ]
mov edx [ ebp + 0x80 ]
lea edx [ ebp + edx * 4 - 0xba4 ]
mov [ ebp + 0x6c ] edx
mov edx [ edx ]
mov [ ebx + edx * 4 ] ecx
mov ecx [ ebp + 0x6c ]
dec edx
mov [ ecx ] edx
or [ eax ] 0x200000
add eax 0x400
dec ecx
jne r-xdata
cmp [ ebp + 0x74 ] 0xff
mov eax [ ebp + 0x60 ]
mov [ eax ] 0x1
jge r-xdata
push 0x3ef
jmp r-xdata
mov eax [ ebp + 0x194 ]
dec eax
cmp edx eax
jne r-xdata
inc [ ebp + 0x74 ]
cmp [ ebp + 0x74 ] 0xff
jle r-xdata
mov edx [ edi ]
mov eax [ edi + 0x400 ]
and [ ebp + 0x80 ] 0x0
mov ecx 0xffdfffff
and edx ecx
and eax ecx
sub eax edx
cmp eax 0xfffe
jle r-xdata
call sub_10009efd
mov eax [ ebp + 0x74 ]
mov eax [ ebp + eax * 4 - 0x3a4 ]
and [ ebp + 0x7c ] 0x0
mov [ ebp + 0x68 ] eax
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
dec eax
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x7c ] eax
js r-xdata
inc [ ebp + 0x80 ]
mov ecx [ ebp + 0x80 ]
mov edi eax
sar edi cl
cmp edi 0xfffe
jg r-xdata
mov eax [ ebp + 0x194 ]
sub eax [ ebp + 0x78 ]
push eax
push [ ebp + 0x78 ]
push [ ebp + 0x194 ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0x14
mov ecx [ ebp + 0x80 ]
sar eax cl
cmp eax 0xffff
jg r-xdata
add edx eax
lea edi [ ebx + edx * 4 ]
push 0x3ea
jmp r-xdata
dec [ ebp + 0x7c ]
sub edi 0x4
cmp [ ebp + 0x7c ] 0x0
jge r-xdata
mov eax [ ebp + 0x194 ]
add edx eax
mov eax [ ebp + 0x64 ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp + 0x80 ]
mov eax [ ebp + 0x7c ]
mov edx [ edi ]
sar eax cl
cmp edx 0x22
movzx ecx ax
mov eax [ ebp + 0x64 ]
mov [ eax + edx * 2 ] cx
jge r-xdata
mov eax [ ebp + 0x60 ]
sub_10010377
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ edi + 0x20 ]
mov edx [ edi + 0x18 ]
mov ecx [ edi + 0x24 ]
push ebx
mov ebx [ edi + 0x268 ]
push esi
mov esi [ edi + 0x44 ]
cmp esi 0x2710
mov [ ebp - 0x18 ] eax
mov eax [ edi + 0x30 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
jge r-xdata
lea edx [ esi + 0x22 ]
test dl 0x1
je r-xdata
push ebx
push esi
mov eax edx
jmp r-xdata
add edx ecx
cmp eax 0x1
mov [ ebp - 0xc ] edx
jge r-xdata
inc edx
push [ edi + 0x14 ]
push [ edi + 0x10 ]
call sub_1000f1e8
add esp 0x10
cmp eax 0x64
jle r-xdata
xor eax eax
inc eax
cmp [ edi + 0x1c ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
dec eax
push 0x3
pop ebx
cdq
idiv ebx
mov edx ecx
mov ecx [ ebp - 0x18 ]
mov ebx eax
imul ebx esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
push esi
push [ ebp - 0xc ]
mov esi [ ebp - 0x14 ]
call sub_1000fcab
add esp 0x10
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
push 0x64
pop eax
pop esi
pop ebx
leave
retn
push 0x3eb
call sub_10009efd
mov [ edi + 0x1c ] eax
inc eax
cmp eax [ edi + 0x44 ]
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x1
test eax eax
je r-xdata
jmp r-xdata
or [ edi + 0x1c ] 0xffffffff
xor eax eax
cmp [ edi + 0x44 ] eax
jle r-xdata
cmp [ ebp - 0x4 ] 0x2
jl r-xdata
sub ebx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x1c ] ebx
fild [ ebp - 0x1c ]
push ecx
fidiv [ ebp - 0xc ]
fstp [ esp ]
push eax
push ebx
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
add esp 0x18
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
mov eax esi
push [ ebp - 0x10 ]
push r--data
call sub_1001831c
add eax 0x40
push eax
call sub_100184d1
pop ecx
pop ecx
sub_100104a3
push ebp
mov ebp esp
mov eax 0x1440
call sub_100257c0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jle r-xdata
xor eax eax
xor edx edx
inc eax
cmp edi eax
mov ebx edi
mov [ ebp - 0x420 ] edx
mov [ ebp - 0xc30 ] edx
mov [ ebp - 0x1440 ] 0xfffffffe
mov [ ebp - 0x4 ] eax
jl r-xdata
lea edx [ ebp - 0xc2c ]
sub edx ecx
mov esi edi
cmp ebx 0x204
jge r-xdata
mov ecx edi
or eax 0xffffffff
lea edi [ ebp - 0x143c ]
[ edi ]
shl eax 0x8
mov [ edx + ecx ] eax
add ecx 0x4
dec esi
jne r-xdata
inc eax
push 0x7d2
jmp r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
inc edx
xor bl bl
cmp edi edx
jl r-xdata
mov ecx [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
mov esi [ ecx ]
mov ecx edx
mov eax [ ecx ]
test eax eax
jne r-xdata
call sub_10009efd
pop edi
pop esi
pop ebx
leave
retn
lea esi [ ebp - 0x143c ]
mov ecx [ ebp - 0x4 ]
inc edx
lea eax [ ebp + edx * 4 - 0x420 ]
mov [ eax ] ecx
mov eax ecx
mov ecx edx
sar ecx 0x1
mov edi [ ebp + ecx * 4 - 0x420 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + eax * 4 - 0xc30 ]
mov esi [ ecx ]
cmp esi [ ebp + edi * 4 - 0xc30 ]
mov [ ebp - 0xc ] edx
jge r-xdata
cmp edx 0x104
jl r-xdata
mov [ ebp + ecx * 4 - 0x420 ] edi
mov ecx [ ebp - 0x8 ]
mov edi ecx
sar edi 0x1
mov [ ebp - 0x8 ] edi
mov edi [ ebp + edi * 4 - 0x420 ]
cmp esi [ ebp + edi * 4 - 0xc30 ]
jl r-xdata
jmp r-xdata
cmp ecx 0x11
mov eax [ ebp + 0x8 ]
mov [ eax + edx - 0x1 ] cl
jle r-xdata
mov eax esi
cmp edx 0x1
jg r-xdata
push 0x7d1
inc [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x420 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
inc edx
add esi 0x4
cmp edx edi
jle r-xdata
mov bl 0x1
mov eax [ eax ]
lea eax [ ebp + eax * 4 - 0x1440 ]
inc ecx
cmp [ eax ] 0x0
jge r-xdata
mov eax [ ebp - 0x41c ]
mov ecx [ ebp + edx * 4 - 0x420 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push 0x2
dec edx
pop esi
inc eax
cmp esi edx
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
xor ecx ecx
cmp [ esi ] ecx
jl r-xdata
test bl bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x420 ] ecx
mov esi [ ebp + edx * 4 - 0x420 ]
mov ecx [ ebp - 0x41c ]
xor eax eax
dec edx
inc eax
cmp edx 0x2
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x2
jl r-xdata
mov ecx [ ebp + ecx * 4 - 0xc30 ]
mov [ ebp - 0xc ] ecx
xor esi esi
inc esi
mov esi [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x420 ] esi
mov esi [ ebp - 0x10 ]
mov eax ecx
shl eax 0x2
mov ecx [ ebp + eax - 0xc30 ]
shl esi 0x2
inc ebx
mov [ ebp + eax - 0x1440 ] ebx
mov eax [ ebp + esi - 0xc30 ]
mov edi 0xff
mov [ ebp + esi - 0x1440 ] ebx
mov [ ebp - 0x4 ] ecx
and [ ebp - 0x4 ] edi
mov esi eax
and esi edi
mov edi [ ebp - 0x4 ]
cmp esi edi
jle r-xdata
mov esi [ ebp + esi * 4 - 0xc30 ]
cmp [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] esi
mov ecx [ ebp + esi * 4 - 0x420 ]
mov edi [ ebp - 0xc ]
cmp edi [ ebp + ecx * 4 - 0xc30 ]
jl r-xdata
mov ecx [ ebp + esi * 4 - 0x41c ]
mov edi [ ebp + esi * 4 - 0x420 ]
mov ecx [ ebp + ecx * 4 - 0xc30 ]
cmp ecx [ ebp + edi * 4 - 0xc30 ]
jge r-xdata
lea ecx [ ebp + esi * 4 - 0xc30 ]
mov eax [ ecx ]
sar eax 0x8
cdq
sub eax edx
sar eax 0x1
inc eax
shl eax 0x8
inc esi
cmp esi edi
mov [ ecx ] eax
jle r-xdata
jmp r-xdata
or [ ebp + ebx * 4 - 0x1440 ] 0xffffffff
mov esi 0xffffff00
and eax esi
and ecx esi
add eax ecx
inc edi
or eax edi
inc edx
mov [ ebp + ebx * 4 - 0xc30 ] eax
lea eax [ ebp + edx * 4 - 0x420 ]
mov ecx edx
sar ecx 0x1
mov [ eax ] ebx
mov esi [ ebp + ecx * 4 - 0x420 ]
mov eax ebx
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + eax * 4 - 0xc30 ]
mov edi [ ecx ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
mov [ ebp - 0x4 ] edx
jge r-xdata
mov edi esi
mov esi [ ebp - 0x4 ]
mov esi [ ebp + esi * 4 - 0x420 ]
mov edi [ ebp - 0xc ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
jl r-xdata
mov esi [ ebp - 0x4 ]
shl esi 0x2
mov edi [ ebp + esi - 0x41c ]
mov esi [ ebp + esi - 0x420 ]
mov edi [ ebp + edi * 4 - 0xc30 ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
jge r-xdata
mov [ ebp + eax * 4 - 0x420 ] ecx
mov eax esi
add esi esi
cmp esi edx
jle r-xdata
inc esi
mov ecx [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x420 ] eax
mov ecx [ ecx ]
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp + eax * 4 - 0x420 ] esi
mov eax [ ebp - 0x4 ]
shl [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x4 ] edx
jle r-xdata
inc [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
sar edi 0x1
mov [ ebp + ecx * 4 - 0x420 ] esi
mov esi [ ebp + edi * 4 - 0x420 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + esi * 4 - 0xc30 ]
jl r-xdata
jge r-xdata
sub_100107e6
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ecx ecx
cmp esi [ ebp + 0x14 ]
push edi
mov ebx eax
mov [ ebp - 0x4 ] esi
jg r-xdata
push 0x17
xor eax eax
pop ecx
mov edi edx
[ edi ]
xor ecx ecx
cmp [ ebp + 0x18 ] ecx
jle r-xdata
xor eax eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
xor ecx ecx
inc ecx
movzx eax [ ecx + ebx ]
lea eax [ edx + eax * 4 + 0x4 ]
inc [ eax ]
inc ecx
cmp ecx [ ebp + 0x18 ]
jl r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] eax
jle r-xdata
movzx edi [ eax + ebx ]
cmp edi [ ebp - 0x4 ]
jne r-xdata
mov edi [ edx + ecx * 4 - 0x4 ]
lea eax [ edx + ecx * 4 ]
add [ eax ] edi
inc ecx
cmp ecx 0x17
jl r-xdata
mov edi [ ebp + 0x8 ]
push 0x17
xor eax eax
and [ ebp + 0x18 ] eax
pop ecx
[ edi ]
mov ecx [ ebp + 0x14 ]
cmp esi ecx
jg r-xdata
inc eax
cmp eax [ ebp + 0x18 ]
jl r-xdata
mov edi [ ebp + 0xc ]
mov [ edi + ecx * 4 ] eax
inc ecx
lea eax [ esi + 0x1 ]
cmp eax [ ebp + 0x14 ]
jg r-xdata
mov edi [ ebp + 0x8 ]
sub edi edx
sub ecx esi
lea eax [ edx + esi * 4 ]
mov [ ebp - 0x4 ] edi
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x8 ]
lea ecx [ ecx + eax * 4 - 0x4 ]
mov ebx [ ebp - 0x4 ]
lea esi [ eax + 0x4 ]
mov edi [ esi ]
sub edi [ eax ]
add [ ebp + 0x18 ] edi
mov edi [ ebp + 0x18 ]
shl [ ebp + 0x18 ] 0x1
dec edi
dec ecx
mov [ ebx + eax ] edi
mov eax esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov esi [ ecx ]
lea esi [ esi + esi + 0x2 ]
sub esi [ edx + eax * 4 ]
add ecx 0x4
mov [ edx + eax * 4 ] esi
inc eax
cmp eax [ ebp + 0x14 ]
jle r-xdata
sub_100108c0
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
push esi
lea eax [ ebp - 0x74 ]
call sub_10010d69
mov eax [ ebp + 0x8 ]
push ecx
lea esi [ ebp - 0x74 ]
call sub_10010d8d
pop ecx
mov ecx esi
lea ebx [ ebp - 0x18 ]
call sub_10010e32
and [ ebp - 0x78 ] 0x0
push 0x10
pop esi
lea eax [ edi + 0x13 ]
lea ecx [ ebp - 0x9 ]
movzx bx [ eax ]
movzx dx [ ecx ]
add dx bx
add [ ebp - 0x78 ] dx
mov dl [ ebp - 0x78 ]
shr [ ebp - 0x78 ] 0x8
add esi 0xffff
dec ecx
mov [ eax ] dl
dec eax
test si si
ja r-xdata
mov eax [ edi ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
sub eax [ ebp + 0x8 ]
mov [ edi ] eax
and [ edi ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10015160
leave
retn
sub_10010945
push ebp
mov ebp esp
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ edi ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov [ ebp - 0x64 ] eax
je r-xdata
mov eax [ edi + 0x14 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax 0x408
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx edi
sub ecx eax
add ecx 0x28
test edx edx
je r-xdata
mov [ ebp - 0x68 ] 0xfffffffd
sub [ ebp - 0x68 ] edi
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
sub eax [ ebp + 0xc ]
mov [ edi + 0x14 ] eax
xor eax eax
mov esi [ ebp - 0x64 ]
sub esi ecx
sub [ ebp + 0xc ] eax
add [ ebp - 0x64 ] eax
lea eax [ ebp - 0x60 ]
call sub_10010d69
lea eax [ edi + 0x4 ]
push eax
push 0x10
pop eax
lea esi [ ebp - 0x60 ]
call sub_10010d8d
pop ecx
mov ecx esi
lea ebx [ edi + 0x18 ]
call sub_10010e32
push 0x10
pop eax
lea ecx [ edi + 0x13 ]
mov esi [ ebp - 0x64 ]
sub esi ecx
mov bl [ ecx ]
mov [ esi + ecx ] bl
inc ecx
dec edx
jne r-xdata
cmp [ ebp + 0xc ] 0x10
ja r-xdata
mov edx [ ebp - 0x68 ]
dec ecx
add edx ecx
jne r-xdata
mov bl [ ecx ]
mov [ esi + ecx ] bl
inc ecx
dec edx
jne r-xdata
mov ecx edi
sub ecx eax
add ecx 0x28
mov edx eax
test eax eax
je r-xdata
mov dl [ ecx ]
mov bl dl
inc bl
mov [ ecx ] bl
test dl dl
jne r-xdata
sub_10010a13
push ebp
mov ebp esp
sub esp 0x18
push ebx
push edi
xor eax eax
lea edi [ esi + 0x4 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
and [ esi + 0x14 ] 0x0
mov [ esi ] 0x200
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor edx edx
neg eax
xor ecx ecx
mov [ rw-data ] eax
inc ecx
mov eax [ edx + rw-data ]
xor eax ecx
mov [ ebp - 0xc ] ecx
movzx ecx ax
shr eax 0x10
mov edi eax
imul edi eax
mov ebx ecx
imul ebx ecx
imul ecx eax
mov eax [ ebp - 0xc ]
not edi
add edi ebx
ror edi 0x10
xor edi [ edx + rw-data ]
add edx 0x4
add edi ecx
xor edi [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov ecx edi
cmp edx 0x10
jb r-xdata
mov [ ebp - 0xc ] ecx
push 0x4
lea ecx [ ebp - 0xc ]
mov edi esi
call sub_100108c0
pop ecx
mov ecx [ ebp - 0x8 ]
push 0x24
call sub_100108c0
pop ecx
push 0x4
lea ecx [ ebp - 0x10 ]
call sub_100108c0
cmp [ esi ] 0x0
pop ecx
jne r-xdata
push 0x0
call sub_10019009
mov [ ebp - 0x18 ] eax
pop ecx
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x14 ] edx
call sub_10018f64
pop ecx
mov [ ebp - 0x8 ] eax
call sub_10018f8b
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov ecx eax
test eax eax
jge r-xdata
mov edi [ ebp - 0x8 ]
push 0x9
pop ecx
xor eax eax
[ edi ]
pop edi
pop ebx
leave
retn
sub_10010aeb
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x20 ]
mov edi ecx
push 0x18
push eax
mov [ ebp - 0x34 ] edi
mov [ esi ] 0x3
call sub_10010945
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x28 ]
xor ecx ebp
pop edi
call sub_10015160
leave
retn
push 0x8
push [ ebp - 0x24 ]
call sub_10010945
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
push [ ebp - 0x24 ]
lea eax [ esi + 0x4 ]
lea edi [ ebp - 0x20 ]
call sub_10011f09
mov eax [ ebp - 0x2c ]
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x24 ] 0x0
pop ecx
mov ecx [ ebp - 0x30 ]
sub eax ebx
sub ecx ebx
mov edi ebx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
push 0x18
lea edx [ ebp - 0x20 ]
push edx
mov edx [ ebp - 0x34 ]
push edi
push [ ecx + edi ]
mov ecx [ eax + edi ]
call sub_10012ad2
add esp 0x10
test eax eax
jne r-xdata
mov [ ebp - 0x28 ] 0x40a
jmp r-xdata
inc [ ebp - 0x24 ]
add edi 0x4
cmp [ ebp - 0x24 ] 0x1
jb r-xdata
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x2c ]
and [ esi + 0x1a0 ] eax
sub_10010bb8
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
push edi
push 0x8
mov ebx eax
mov eax [ esi + 0x1a0 ]
pop edi
sub edi eax
cmp ecx edi
jae r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
lea eax [ eax + esi + 0x198 ]
test edi edi
je r-xdata
and [ ebx ] 0x0
mov eax [ esi + 0x1a0 ]
mov edi [ ebp + 0xc ]
mov edx ecx
lea eax [ esi + eax + 0x198 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ esi + 0x198 ]
push 0x8
mov [ ebp - 0x4 ] eax
push eax
mov eax esi
call sub_10010cc7
add [ ebp + 0xc ] edi
sub [ ebp + 0x10 ] edi
mov edi [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
shr edi 0x3
shl edi 0x3
push edi
push [ ebp + 0xc ]
add edx 0x8
mov eax esi
mov [ ebx ] 0x8
call sub_10010cc7
add [ ebx ] edi
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add esp 0x10
sub eax edi
mov [ esi + 0x1a0 ] eax
lea edi [ edi + ecx ]
je r-xdata
mov dl [ ecx ]
mov [ eax ] dl
inc eax
inc ecx
dec [ ebp - 0x4 ]
jne r-xdata
add [ esi + 0x1a0 ] ecx
jmp r-xdata
mov bl [ edi ]
mov [ eax ] bl
inc eax
inc edi
dec edx
jne r-xdata
pop edi
xor eax eax
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sub ecx edi
mov dl [ edi ]
mov [ ecx + edi ] dl
inc edi
dec eax
jne r-xdata
sub_10010c80
mov ecx [ esi + 0x1a0 ]
push 0x8
pop eax
sub eax ecx
push eax
push eax
lea eax [ ecx + esi + 0x198 ]
call sub_10011571
lea eax [ esi + 0x198 ]
push 0x8
push eax
mov eax esi
call sub_10010cc7
mov eax [ esp + 0x14 ]
mov [ eax ] 0x8
add esp 0x10
mov eax esi
call sub_10010d10
and [ esi + 0x1a0 ] 0x0
xor eax eax
retn
sub_10010cc7
push ebp
mov ebp esp
mov ecx [ eax ]
push esi
cmp ecx 0x1
je r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea esi [ eax + 0x4 ]
call sub_10011d3a
jle r-xdata
pop esi
pop ebp
retn
cmp ecx 0x3
jle r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea esi [ eax + 0x4 ]
call sub_10011f66
jmp r-xdata
cmp ecx 0x4
jne r-xdata
pop ecx
mov ecx [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
call sub_10011e0b
jmp r-xdata
sub_10010d10
mov ecx [ eax ]
cmp ecx 0x1
je r-xdata
mov ecx [ eax + 0x8c ]
mov [ eax + 0x84 ] ecx
mov ecx [ eax + 0x90 ]
jle r-xdata
retn
cmp ecx 0x3
jle r-xdata
mov ecx [ eax + 0x18c ]
mov [ eax + 0x184 ] ecx
mov ecx [ eax + 0x190 ]
mov [ eax + 0x188 ] ecx
retn
cmp ecx 0x4
jne r-xdata
mov ecx [ eax + 0x9c ]
mov [ eax + 0x84 ] ecx
mov ecx [ eax + 0xa0 ]
jmp r-xdata
mov [ eax + 0x88 ] ecx
sub_10010d8d
push ebp
mov ebp esp
push ecx
mov ecx [ esi + 0x10 ]
push edi
mov edi eax
mov eax ecx
shr eax 0x3
mov edx edi
lea ecx [ ecx + edi * 8 ]
shl edx 0x3
and eax 0x3f
mov [ esi + 0x10 ] ecx
cmp ecx edx
jae r-xdata
push ebx
push 0x40
mov ecx edi
shr ecx 0x1d
add [ esi + 0x14 ] ecx
pop ebx
sub ebx eax
cmp edi ebx
jb r-xdata
inc [ esi + 0x14 ]
xor ebx ebx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
lea eax [ eax + esi + 0x18 ]
test ebx ebx
je r-xdata
pop edi
leave
retn
sub eax ecx
lea ecx [ esi + 0x18 ]
push esi
call sub_10010ea7
lea eax [ ebx + 0x3f ]
pop ecx
cmp eax edi
jae r-xdata
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub edi ebx
lea ecx [ ebx + ecx ]
lea eax [ eax + esi + 0x18 ]
pop ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx - 0x3f ]
push esi
call sub_10010ea7
add [ ebp - 0x4 ] 0x40
add ebx 0x40
pop ecx
cmp [ ebp - 0x4 ] edi
jb r-xdata
sub_10010e32
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
lea edi [ esi + 0x10 ]
push 0x8
pop edx
mov eax edi
lea ecx [ ebp - 0xc ]
call sub_10011540
mov ecx [ edi ]
shr ecx 0x3
push 0x38
and ecx 0x3f
pop eax
cmp ecx eax
jb r-xdata
sub eax ecx
push rw-data
call sub_10010d8d
lea eax [ ebp - 0xc ]
push eax
push 0x8
pop eax
call sub_10010d8d
push 0x10
pop edx
mov eax esi
mov ecx ebx
call sub_10011540
push 0x58
push 0x0
push esi
call sub_10015500
mov ecx [ ebp - 0x4 ]
add esp 0x14
pop edi
xor ecx ebp
pop esi
call sub_10015160
leave
retn
push 0x78
pop eax
sub_10010ea7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x48
push ebx
push esi
push edi
push 0x10
add ecx 0x2
lea edx [ ebp - 0x48 ]
pop esi
movzx edi [ ecx + 0x1 ]
movzx ebx [ ecx ]
shl edi 0x8
or edi ebx
movzx ebx [ ecx - 0x1 ]
shl edi 0x8
or edi ebx
movzx ebx [ ecx - 0x2 ]
shl edi 0x8
or edi ebx
mov [ edx ] edi
add edx 0x4
add ecx 0x4
dec esi
jne r-xdata
mov esi [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0xc ]
mov eax [ eax ]
mov edi esi
not edi
and edi ecx
mov ebx edx
and ebx esi
or edi ebx
add edi [ ebp - 0x48 ]
mov ebx esi
lea eax [ edi + eax - 0x28955b88 ]
rol eax 0x7
add eax esi
and ebx eax
mov edi eax
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x40 ]
mov ebx ecx
lea edx [ edi + edx + 0x242070db ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x3c ]
lea esi [ edi + esi - 0x3e423112 ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
mov edi edx
and edi [ ebp - 0x4 ]
not esi
and esi ecx
or esi edi
add esi [ ebp - 0x38 ]
lea eax [ esi + eax - 0xa83f051 ]
mov esi [ ebp - 0x4 ]
rol eax 0x7
add eax esi
mov edi eax
not edi
and edi edx
mov ebx esi
and ebx eax
or edi ebx
add edi [ ebp - 0x34 ]
lea ecx [ edi + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x30 ]
mov ebx ecx
lea edx [ edi + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
mov edi edx
not edi
and edi eax
and ebx edx
or edi ebx
add edi [ ebp - 0x2c ]
lea esi [ edi + esi - 0x2b96aff ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp - 0x4 ]
or esi edi
add esi [ ebp - 0x28 ]
lea eax [ esi + eax + 0x698098d8 ]
mov esi [ ebp - 0x4 ]
mov ebx esi
rol eax 0x7
add eax esi
and ebx eax
mov edi eax
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x24 ]
lea ecx [ edi + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x20 ]
mov ebx ecx
lea edx [ edi + edx - 0xa44f ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x1c ]
lea esi [ edi + esi - 0x76a32842 ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp - 0x4 ]
or esi edi
add esi [ ebp - 0x18 ]
mov edi [ ebp - 0x4 ]
lea eax [ esi + eax + 0x6b901122 ]
rol eax 0x7
add eax [ ebp - 0x4 ]
and edi eax
mov esi eax
not esi
and esi edx
or esi edi
add esi [ ebp - 0x14 ]
lea ecx [ esi + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
mov esi edi
and esi [ ebp - 0x4 ]
mov ebx ecx
and ebx eax
or esi ebx
add esi [ ebp - 0x10 ]
mov ebx ecx
lea edx [ esi + edx - 0x5986bc72 ]
ror edx 0xf
add edx ecx
mov [ ebp - 0x8 ] edx
not [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
and esi eax
and edi edx
and ebx edx
or esi ebx
add esi [ ebp - 0xc ]
mov ebx [ ebp - 0x4 ]
lea esi [ esi + ebx + 0x49b40821 ]
ror esi 0xa
add esi edx
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x44 ]
mov ebx edx
lea eax [ edi + eax - 0x9e1da9e ]
mov edi [ ebp - 0x8 ]
and edi esi
rol eax 0x5
add eax esi
and ebx eax
or edi ebx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x1c ]
lea edx [ edi + edx + 0x265e5a51 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
and edi ecx
mov ebx edx
and ebx eax
or edi ebx
add edi [ ebp - 0x48 ]
mov ebx ecx
lea esi [ edi + esi - 0x16493856 ]
ror esi 0xc
add esi edx
and ebx esi
mov edi ecx
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x34 ]
mov ebx edx
lea eax [ edi + eax - 0x29d0efa3 ]
rol eax 0x5
add eax esi
mov edi edx
not edi
and edi esi
and ebx eax
or edi ebx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx + 0x2441453 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x275e197f ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
mov ebx edx
and edi ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x38 ]
lea esi [ edi + esi - 0x182c0438 ]
ror esi 0xc
add esi edx
mov edi ecx
not edi
and edi edx
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x24 ]
mov ebx edx
lea eax [ edi + eax + 0x21e1cde6 ]
rol eax 0x5
add eax esi
and ebx eax
mov edi edx
not edi
and edi esi
or edi ebx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx - 0x3cc8f82a ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x3c ]
lea edx [ edi + edx - 0xb2af279 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
and edi ecx
mov ebx edx
and ebx eax
or edi ebx
add edi [ ebp - 0x28 ]
mov ebx ecx
lea esi [ edi + esi + 0x455a14ed ]
ror esi 0xc
add esi edx
and ebx esi
mov edi ecx
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x14 ]
mov ebx edx
lea eax [ edi + eax - 0x561c16fb ]
rol eax 0x5
add eax esi
mov edi edx
not edi
and edi esi
and ebx eax
or edi ebx
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x3105c08 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x2c ]
lea edx [ edi + edx + 0x676f02d9 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
mov ebx edx
and edi ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x18 ]
lea esi [ edi + esi - 0x72d5b376 ]
ror esi 0xc
add esi edx
mov edi ecx
xor edi edx
xor edi esi
add edi [ ebp - 0x34 ]
lea eax [ edi + eax - 0x5c6be ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x28 ]
lea ecx [ edi + ecx - 0x788e097f ]
rol ecx 0xb
add ecx eax
mov edi ecx
xor edi esi
xor edi eax
add edi [ ebp - 0x1c ]
lea edx [ edi + edx + 0x6d9d6122 ]
rol edx 0x10
add edx ecx
mov edi ecx
xor edi edx
mov ebx edi
xor ebx eax
add ebx [ ebp - 0x10 ]
lea esi [ ebx + esi - 0x21ac7f4 ]
ror esi 0x9
add esi edx
xor edi esi
add edi [ ebp - 0x44 ]
lea eax [ edi + eax - 0x5b4115bc ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x38 ]
lea edi [ edi + ecx + 0x4bdecfa9 ]
rol edi 0xb
add edi eax
mov ecx edi
xor ecx esi
xor ecx eax
add ecx [ ebp - 0x2c ]
mov ebx edi
lea edx [ ecx + edx - 0x944b4a0 ]
rol edx 0x10
add edx edi
xor ebx edx
mov ecx ebx
xor ecx eax
add ecx [ ebp - 0x20 ]
lea ecx [ ecx + esi - 0x41404390 ]
ror ecx 0x9
add ecx edx
xor ebx ecx
add ebx [ ebp - 0x14 ]
mov esi edx
lea eax [ ebx + eax + 0x289b7ec6 ]
xor esi ecx
rol eax 0x4
add eax ecx
xor esi eax
add esi [ ebp - 0x48 ]
lea esi [ esi + edi - 0x155ed806 ]
rol esi 0xb
add esi eax
mov edi esi
xor edi ecx
xor edi eax
add edi [ ebp - 0x3c ]
lea edi [ edi + edx - 0x2b10cf7b ]
rol edi 0x10
add edi esi
mov edx esi
xor edx edi
mov ebx edx
xor ebx eax
add ebx [ ebp - 0x30 ]
lea ecx [ ebx + ecx + 0x4881d05 ]
ror ecx 0x9
add ecx edi
xor edx ecx
add edx [ ebp - 0x24 ]
lea eax [ edx + eax - 0x262b2fc7 ]
mov edx edi
xor edx ecx
rol eax 0x4
add eax ecx
xor edx eax
add edx [ ebp - 0x18 ]
lea edx [ edx + esi - 0x1924661b ]
rol edx 0xb
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi [ ebp - 0xc ]
lea esi [ esi + edi + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x48 ]
lea eax [ edi + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x2c ]
lea edx [ edi + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x10 ]
lea esi [ edi + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x34 ]
lea ecx [ edi + ecx - 0x36c5fc7 ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x18 ]
lea eax [ edi + eax + 0x655b59c3 ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x3c ]
lea edx [ edi + edx - 0x70f3336e ]
rol edx 0xa
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x20 ]
lea esi [ edi + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x28 ]
lea eax [ edi + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x1d31920 ]
mov edi ecx
rol edx 0xa
add edx eax
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x30 ]
lea esi [ edi + esi - 0x5cfebcec ]
mov edi eax
rol esi 0xf
add esi edx
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x14 ]
lea edi [ edi + ecx + 0x4e0811a1 ]
ror edi 0xb
add edi esi
mov ecx edx
not ecx
or ecx edi
xor ecx esi
add ecx [ ebp - 0x38 ]
lea eax [ ecx + eax - 0x8ac817e ]
rol eax 0x6
add eax edi
mov ecx esi
not ecx
or ecx eax
xor ecx edi
add ecx [ ebp - 0x1c ]
lea edx [ ecx + edx - 0x42c50dcb ]
rol edx 0xa
add edx eax
mov ecx edi
not ecx
or ecx edx
xor ecx eax
add ecx [ ebp - 0x40 ]
lea esi [ ecx + esi + 0x2ad7d2bb ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
add ebx eax
not eax
rol esi 0xf
add esi edx
or eax esi
xor eax edx
add eax [ ebp - 0x24 ]
mov [ ecx ] ebx
lea eax [ eax + edi - 0x14792c6f ]
ror eax 0xb
add eax [ ecx + 0x4 ]
add eax esi
mov [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
add eax esi
mov [ ecx + 0x8 ] eax
mov eax [ ecx + 0xc ]
pop edi
add eax edx
pop esi
mov [ ecx + 0xc ] eax
pop ebx
leave
retn
sub_10011540
test edx edx
jbe r-xdata
retn
push esi
lea esi [ edx - 0x1 ]
shr esi 0x2
inc ecx
add eax 0x2
inc esi
mov dl [ eax - 0x2 ]
mov [ ecx - 0x1 ] dl
mov dl [ eax - 0x1 ]
mov [ ecx ] dl
mov dl [ eax ]
mov [ ecx + 0x1 ] dl
mov dl [ eax + 0x1 ]
mov [ ecx + 0x2 ] dl
add eax 0x4
add ecx 0x4
dec esi
jne r-xdata
pop esi
sub_10011586
push edi
mov edi [ esp + 0x8 ]
xor edx edx
dec eax
push esi
pop esi
cmp edx 0x21
jae r-xdata
xor esi esi
xor ecx ecx
pop edi
retn
push 0x21
pop ecx
sub ecx edx
lea edi [ edi + edx * 4 ]
xor eax eax
[ edi ]
mov edi [ esp + 0xc ]
mov [ edi + edx * 4 ] esi
inc edx
cmp edx 0x21
jb r-xdata
mov edi [ esp + 0x10 ]
movzx edi [ eax + edi ]
shl edi cl
add ecx 0x8
or esi edi
dec eax
test eax eax
jge r-xdata
test eax eax
jl r-xdata
cmp ecx 0x20
jae r-xdata
sub_100115d1
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
dec eax
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test eax eax
jl r-xdata
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ eax + ecx ] 0x0
dec eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + edi * 4 ]
xor ecx ecx
inc edi
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov ebx [ ebp + 0x8 ]
mov edx esi
shr edx cl
add ecx 0x8
mov [ eax + ebx ] dl
dec eax
test eax eax
jge r-xdata
cmp ecx 0x20
jae r-xdata
sub_1001162f
push edi
mov edi eax
xor eax eax
cmp [ esp + 0xc ] eax
je r-xdata
pop edi
retn
push ebx
mov eax [ edx ]
or ebx 0xffffffff
sub ecx eax
sub ebx eax
cmp ebx ecx
sbb eax eax
neg eax
or ecx ecx
sub ecx [ edx ]
jmp r-xdata
mov ecx [ edi ]
sub ecx eax
add edi 0x4
cmp ecx 0xffffffff
jne r-xdata
pop ebx
mov ebx [ esp + 0xc ]
add [ esp + 0xc ] 0x4
add edx 0x4
dec [ esp + 0x10 ]
mov [ ebx ] ecx
jne r-xdata
sub_10011673
push ebp
mov ebp esp
sub esp 0x128
push ebx
mov ebx eax
lea eax [ edx + edx ]
push edi
mov [ ebp - 0x1c ] eax
push eax
lea eax [ ebp - 0x128 ]
call sub_1001161b
add esp 0x4
test edx edx
je r-xdata
xor edi edi
push ebx
mov eax edx
call sub_10011c3c
pop ecx
mov edi eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
push [ ebp + 0xc ]
mov eax edx
call sub_10011c3c
pop ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
test edx edx
je r-xdata
push [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x128 ]
call sub_10011c24
pop ecx
pop edi
pop ebx
leave
retn
mov eax [ ebp - 0x8 ]
push esi
lea esi [ ebp - 0x128 ]
lea eax [ ebp + eax * 4 - 0x128 ]
sub esi ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] edi
test edi edi
jbe r-xdata
add [ eax ] edi
add [ ebp - 0x4 ] 0x4
add eax 0x4
dec [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ebx ebx
xor edi edi
cmp [ ecx ] ebx
je r-xdata
pop esi
mov eax ecx
add esi eax
add edi [ ebp - 0x20 ]
inc ebx
add esi 0x4
cmp ebx [ ebp - 0x8 ]
jb r-xdata
inc edi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + ebx * 4 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
call sub_10011cca
add [ esi ] edi
mov eax [ ebp - 0x14 ]
add esp 0x10
cmp [ esi ] edi
sbb edi edi
add [ esi ] eax
neg edi
cmp [ esi ] eax
jae r-xdata
mov eax [ ebp - 0xc ]
mov esi [ ebp - 0x18 ]
sub_10011762
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
push 0x20
pop esi
mov edi eax
mov ebx ecx
cmp [ ebp + 0x8 ] esi
jae r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub esi [ ebp + 0x8 ]
mov edx [ edi ]
mov ecx [ ebp + 0x8 ]
mov eax edx
shl eax cl
add edi 0x4
or eax [ ebp - 0x4 ]
mov [ ebx ] eax
mov eax ecx
mov ecx esi
shr edx cl
add ebx 0x4
neg eax
sbb eax eax
and eax edx
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jne r-xdata
sub_100117b2
push ebp
lea ebp [ esp - 0x64 ]
sub esp 0x1c4
push esi
mov esi eax
mov eax [ ebp + 0x7c ]
test eax eax
je r-xdata
and [ ebp + 0x5c ] 0x0
push [ ebp + 0x78 ]
call sub_10011c3c
pop ecx
mov [ ebp + 0x5c ] eax
jmp r-xdata
pop esi
add ebp 0x64
leave
retn
mov eax [ ebp + 0x78 ]
push edi
mov edi edx
shl edi 0x2
mov eax [ edi + eax - 0x4 ]
mov [ ebp + 0x40 ] edi
xor ecx ecx
mov edx [ ebp + 0x5c ]
test edx edx
je r-xdata
push ebx
push 0x20
pop ebx
sub ebx ecx
push edx
lea eax [ ebp - 0x160 ]
mov [ ebp + 0x44 ] ebx
call sub_1001161b
mov eax [ ebp + 0x74 ]
push esi
push ebx
lea ecx [ ebp - 0x160 ]
call sub_10011762
push [ ebp + 0x5c ]
mov [ ebp + esi * 4 - 0x160 ] eax
mov eax [ ebp + 0x78 ]
push ebx
lea ecx [ ebp - 0x54 ]
call sub_10011762
mov eax [ ebp + edi - 0x58 ]
mov ecx [ ebp + 0x6c ]
mov [ ebp + 0x60 ] eax
push esi
mov eax ecx
call sub_1001161b
mov eax [ ebp + 0x5c ]
add esp 0x18
sub esi eax
mov [ ebp + 0x38 ] esi
js r-xdata
inc ecx
shr eax 0x1
cmp ecx 0x20
jb r-xdata
mov ecx [ ebp + 0x70 ]
push [ ebp + 0x7c ]
mov eax ecx
call sub_1001161b
mov eax [ ebp + 0x5c ]
and [ ebp + 0x48 ] 0x0
add esp 0x4
push 0x20
pop esi
mov [ ebp + 0x7c ] eax
cmp ebx esi
jae r-xdata
lea edx [ ebp + esi * 4 - 0x160 ]
add esi eax
lea esi [ ebp + esi * 4 - 0x160 ]
mov [ ebp + 0x3c ] ecx
lea eax [ ebp - 0x160 ]
sub [ ebp + 0x3c ] eax
mov [ ebp + 0x50 ] edx
mov [ ebp + 0x48 ] esi
test eax eax
je r-xdata
pop ebx
pop edi
lea edx [ edi + ecx ]
lea edi [ ebp - 0x160 ]
sub esi ebx
sub edi ecx
jmp r-xdata
inc [ ebp + 0x60 ]
mov ecx [ ebp + 0x60 ]
mov ebx [ esi - 0x4 ]
mov esi [ esi ]
shr ecx 0x10
mov eax 0xffff
cmp cx ax
mov [ ebp + 0x34 ] ecx
mov [ ebp + 0x58 ] esi
mov eax esi
jne r-xdata
mov edi [ esi ]
jmp r-xdata
dec [ ebp + 0x7c ]
sub edx 0x4
mov eax [ edi + edx ]
mov ecx eax
mov [ ebp + 0x40 ] ecx
mov ecx ebx
mov ebx eax
shr ebx cl
mov ecx esi
shl eax cl
or ebx [ ebp + 0x48 ]
mov [ edx ] ebx
mov ebx [ ebp + 0x44 ]
neg ebx
sbb ebx ebx
and ebx eax
cmp [ ebp + 0x7c ] 0x0
mov [ ebp + 0x48 ] ebx
jne r-xdata
movzx ecx cx
inc ecx
xor edx edx
div ecx
movzx eax ax
mov [ ebp + 0x4c ] eax
shr eax 0x10
mov [ ebp + 0x4c ] eax
jmp r-xdata
mov edx [ ebp + 0x50 ]
mov ecx [ ebp + 0x5c ]
push edi
push edx
lea eax [ ebp - 0x54 ]
call sub_10011c50
mov ebx [ ebp + 0x44 ]
shr ecx 0x10
add ecx [ ebp + 0x30 ]
sub [ ebp + 0x58 ] ecx
dec [ ebp + 0x58 ]
movzx edi [ ebp + 0x60 ]
movzx esi [ ebp + 0x34 ]
movzx eax ax
mov ecx edi
imul ecx eax
imul eax esi
mov [ ebp + 0x30 ] eax
mov eax ecx
shl eax 0x10
or edx 0xffffffff
sub ebx eax
sub edx eax
cmp ebx edx
jbe r-xdata
push [ ebp + 0x5c ]
mov eax [ ebp + 0x50 ]
push eax
lea edx [ ebp - 0x54 ]
inc edi
call sub_1001162f
jmp r-xdata
push [ ebp + 0x50 ]
mov ecx [ ebp + 0x5c ]
lea edx [ ebp - 0x54 ]
call sub_10011bf3
pop ecx
test eax eax
jl r-xdata
mov eax edi
shl eax 0x10
or ecx 0xffffffff
sub ebx eax
sub ecx eax
cmp ebx ecx
jbe r-xdata
jne r-xdata
sub [ esi ] eax
cmp [ esi ] 0x0
pop ecx
pop ecx
jne r-xdata
mov ecx [ ebp + 0x50 ]
dec [ ebp + 0x38 ]
mov eax [ ebp + 0x3c ]
sub [ ebp + 0x50 ] 0x4
sub esi 0x4
cmp [ ebp + 0x38 ] 0x0
mov [ eax + ecx ] edi
mov [ ebp + 0x48 ] esi
jge r-xdata
sub [ ebp + 0x58 ] esi
inc [ ebp + 0x4c ]
jmp r-xdata
dec [ ebp + 0x58 ]
mov eax 0xffff
cmp [ ebp + 0x34 ] ax
jne r-xdata
mov eax edi
shl eax 0x10
cmp ebx eax
jb r-xdata
cmp [ ebp + 0x60 ] 0xffffffff
jne r-xdata
mov edi [ ebp + 0x40 ]
cmp [ ebp + 0x58 ] esi
ja r-xdata
mov ecx [ ebp + 0x58 ]
mov eax ebx
shl ecx 0x10
shr eax 0x10
add eax ecx
xor edx edx
lea ecx [ esi + 0x1 ]
div ecx
movzx edx ax
movzx edx [ ebp + 0x58 ]
jmp r-xdata
mov ecx eax
shl ecx 0x10
or esi 0xffffffff
sub ebx ecx
sub esi ecx
cmp ebx esi
jbe r-xdata
dec [ ebp + 0x58 ]
movzx eax dx
imul edi eax
imul eax esi
or ecx 0xffffffff
sub ebx edi
sub ecx edi
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp + 0x58 ]
shr eax 0x10
sub ecx eax
dec [ ebp + 0x58 ]
sub ebx [ ebp + 0x60 ]
or eax 0xffffffff
sub eax [ ebp + 0x60 ]
cmp ebx eax
jbe r-xdata
jne r-xdata
inc edx
jmp r-xdata
dec ecx
movzx edi [ ebp + 0x4c ]
mov esi [ ebp + 0x48 ]
mov ebx [ ebp + 0x44 ]
movzx eax dx
shl edi 0x10
add edi eax
dec [ ebp + 0x60 ]
cmp ebx [ ebp + 0x60 ]
jb r-xdata
test ecx ecx
ja r-xdata
sub_10011a78
push ebp
mov ebp esp
sub esp 0x108
push [ ebp + 0x18 ]
lea eax [ ebp - 0x108 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
call sub_100117b2
add esp 0x14
leave
retn
sub_10011aa1
push ebp
mov ebp esp
sub esp 0x108
push [ ebp + 0x10 ]
lea eax [ ebp - 0x108 ]
push eax
mov eax [ ebp + 0xc ]
mov edx esi
call sub_10011673
push esi
push [ ebp + 0x14 ]
lea eax [ esi + esi ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push [ ebp + 0x8 ]
call sub_10011a78
add esp 0x1c
leave
retn
sub_10011ada
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x218
push esi
mov esi eax
push edi
mov edi ecx
mov ecx [ ebp + 0x74 ]
push esi
lea eax [ ebp - 0x1b0 ]
call sub_10011c24
push [ ebp + 0x7c ]
lea eax [ ebp - 0x1b0 ]
push [ ebp + 0x74 ]
push eax
lea eax [ ebp - 0x12c ]
push eax
call sub_10011aa1
push [ ebp + 0x7c ]
lea eax [ ebp - 0x12c ]
push [ ebp + 0x74 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_10011aa1
push esi
lea eax [ ebp - 0x24 ]
call sub_1001161b
add esp 0x28
mov [ ebp - 0x24 ] 0x1
test edi edi
je r-xdata
dec edi
mov [ ebp + 0x60 ] edi
mov [ ebp + 0x64 ] edi
test edi edi
jl r-xdata
push [ ebp + 0x78 ]
mov eax edi
call sub_10011c3c
pop ecx
mov edi eax
mov eax [ ebp + 0x70 ]
push esi
lea ecx [ ebp - 0x24 ]
call sub_10011c24
pop ecx
pop edi
pop esi
add ebp 0x68
leave
retn
push ebx
lea ebx [ ecx - 0x1 ]
shr ebx 0x1
inc ebx
mov eax 0xc0000000
test eax edi
jne r-xdata
shl edi 0x2
dec ebx
jne r-xdata
push [ ebp + 0x7c ]
imul eax eax 0x84
lea eax [ ebp + eax - 0x234 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push eax
call sub_10011aa1
add esp 0x10
shl edi 0x2
dec ecx
dec ecx
test eax edi
je r-xdata
push [ ebp + 0x7c ]
lea eax [ ebp - 0x24 ]
push eax
push eax
push eax
call sub_10011aa1
push [ ebp + 0x7c ]
lea eax [ ebp - 0x24 ]
push eax
push eax
push eax
call sub_10011aa1
mov eax edi
shr eax 0x1e
add esp 0x20
test eax eax
je r-xdata
dec [ ebp + 0x64 ]
jns r-xdata
test ecx ecx
jbe r-xdata
mov ecx [ ebp + 0x78 ]
mov eax [ ebp + 0x64 ]
mov edi [ ecx + eax * 4 ]
push 0x20
pop ecx
cmp eax [ ebp + 0x60 ]
jne r-xdata
pop ebx
sub_10011bf3
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
lea eax [ edx + ecx * 4 ]
sub edi edx
xor eax eax
inc eax
jmp r-xdata
jb r-xdata
pop edi
pop esi
retn
or eax 0xffffffff
jmp r-xdata
test ecx ecx
jne r-xdata
sub eax 0x4
mov edx [ edi + eax ]
mov esi [ eax ]
dec ecx
cmp edx esi
ja r-xdata
sub_10011c50
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ ebp + 0xc ] ebx
je r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn
cmp ecx ebx
jbe r-xdata
sub eax edx
mov [ ebp - 0x4 ] edx
sub [ ebp - 0x4 ] esi
push edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ ecx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
push [ edi + eax ]
push [ ebp + 0xc ]
call sub_10011cca
mov edi [ edi ]
or eax 0xffffffff
sub edi ebx
sub eax ebx
add esp 0x10
cmp eax edi
mov eax [ ebp - 0x10 ]
sbb ebx ebx
mov [ esi ] edi
sub [ esi ] eax
mov ecx [ esi ]
or edx 0xffffffff
sub edx eax
neg ebx
cmp ecx edx
jbe r-xdata
add ebx [ ebp - 0x14 ]
add esi 0x4
dec [ ebp - 0x8 ]
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
pop edi
sub_10011cca
push ebp
mov ebp esp
push ecx
movzx edx [ ebp + 0x8 ]
movzx eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
shr esi 0x10
shr edi 0x10
movzx esi si
movzx edi di
mov ecx edx
imul edx edi
imul ecx eax
mov [ ebp + 0xc ] esi
imul esi edi
imul eax [ ebp + 0xc ]
mov [ ebx ] ecx
mov ebx [ ebp + 0x10 ]
add eax edx
mov [ ebx ] esi
cmp eax edx
jae r-xdata
mov edi [ ebp + 0x14 ]
mov edx eax
shl edx 0x10
add ecx edx
shr eax 0x10
mov [ edi ] ecx
cmp ecx edx
jae r-xdata
mov [ ebp - 0x4 ] 0x10000
add esi eax
add esi [ ebp - 0x4 ]
pop edi
mov [ ebx ] esi
pop esi
pop ebx
leave
retn
inc [ ebp - 0x4 ]
sub_10011d3a
push ebp
mov ebp esp
sub esp 0x1c
test cl 0x7
je r-xdata
shr ecx 0x3
test ecx ecx
jbe r-xdata
mov eax 0x406
leave
retn
xor eax eax
leave
retn
mov eax [ ebp + 0x8 ]
push ebx
sub eax edx
push edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx eax
lea eax [ ebp - 0x1c ]
call sub_1001204e
cmp [ esi + 0x90 ] 0x0
mov edi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
jne r-xdata
mov eax [ esi + 0x80 ]
xor eax edi
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x84 ]
xor eax ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi + 0x80 ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0x84 ] eax
mov eax [ esi + 0x80 ]
xor [ ebp - 0x14 ] eax
mov eax [ esi + 0x84 ]
xor [ ebp - 0x10 ] eax
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] ebx
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
call sub_10012284
cmp [ esi + 0x90 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop ebx
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x14 ]
call sub_10012097
add [ ebp - 0x4 ] 0x8
dec [ ebp - 0x8 ]
jne r-xdata
sub_10011e0b
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx edx
test al 0x7
je r-xdata
shr eax 0x3
test eax eax
jbe r-xdata
mov eax 0x406
jmp r-xdata
xor eax eax
sub ecx ebx
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
pop ebx
leave
retn
add ecx ebx
lea eax [ ebp - 0x18 ]
call sub_1001204e
mov edi [ esi + 0xa0 ]
test edi edi
jne r-xdata
mov eax [ esi + 0x88 ]
xor eax [ esi + 0x80 ]
xor eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x8c ]
xor eax [ esi + 0x84 ]
mov eax [ esi + 0x90 ]
xor eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x94 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
xor eax [ esi + 0x90 ]
mov ecx [ ebp - 0xc ]
xor ecx [ esi + 0x94 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
mov [ esi + 0x80 ] eax
mov [ esi + 0x84 ] ecx
mov eax [ esi + 0x88 ]
xor eax [ esi + 0x80 ]
xor [ ebp - 0x10 ] eax
mov eax [ esi + 0x8c ]
xor eax [ esi + 0x84 ]
xor [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x80 ] eax
mov eax [ ebp - 0x14 ]
mov [ esi + 0x84 ] eax
jmp r-xdata
xor eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_10012284
pop ecx
test edi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
lea ecx [ ebp - 0x10 ]
mov eax ebx
call sub_10012097
add ebx 0x8
dec [ ebp - 0x4 ]
jne r-xdata
sub_10011f09
mov ecx [ esp + 0x4 ]
push esi
mov esi eax
lea eax [ esi + 0x180 ]
mov [ esi + 0x190 ] 0x1
call sub_1001204e
mov ecx [ esp + 0x8 ]
lea eax [ esi + 0x188 ]
call sub_1001204e
push 0x1
push edi
push esi
call sub_100120c8
push 0x0
lea eax [ edi + 0x8 ]
push eax
lea eax [ esi + 0x80 ]
push eax
call sub_100120c8
lea eax [ edi + 0x10 ]
push 0x1
push eax
add esi 0x100
push esi
call sub_100120c8
add esp 0x24
pop esi
retn
sub_10011f66
push ebp
mov ebp esp
sub esp 0x1c
test cl 0x7
je r-xdata
shr ecx 0x3
test ecx ecx
jbe r-xdata
mov eax 0x406
leave
retn
xor eax eax
leave
retn
mov eax [ ebp + 0x8 ]
push ebx
sub eax edx
push edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx eax
lea eax [ ebp - 0x1c ]
call sub_1001204e
mov edi [ esi + 0x190 ]
mov ebx [ ebp - 0x1c ]
test edi edi
jne r-xdata
mov eax [ esi + 0x180 ]
xor eax ebx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x184 ]
xor eax [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi + 0x180 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ esi + 0x180 ]
xor [ ebp - 0x14 ] eax
mov eax [ esi + 0x184 ]
xor [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x180 ] ebx
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
call sub_10012284
lea eax [ ebp - 0x14 ]
push eax
lea eax [ esi + 0x80 ]
call sub_10012284
lea eax [ ebp - 0x14 ]
push eax
lea eax [ esi + 0x100 ]
call sub_10012284
add esp 0xc
test edi edi
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop ebx
mov [ esi + 0x184 ] eax
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x14 ]
call sub_10012097
add [ ebp - 0x4 ] 0x8
dec [ ebp - 0x8 ]
jne r-xdata
sub_1001204e
movzx edx [ ecx ]
shl edx 0x18
mov [ eax ] edx
inc ecx
movzx edx [ ecx ]
shl edx 0x10
or [ eax ] edx
inc ecx
movzx edx [ ecx ]
shl edx 0x8
or [ eax ] edx
inc ecx
movzx edx [ ecx ]
or [ eax ] edx
inc ecx
movzx edx [ ecx ]
shl edx 0x18
add eax 0x4
mov [ eax ] edx
inc ecx
movzx edx [ ecx ]
shl edx 0x10
or [ eax ] edx
inc ecx
movzx edx [ ecx ]
shl edx 0x8
or [ eax ] edx
movzx ecx [ ecx + 0x1 ]
mov edx [ eax ]
or ecx edx
mov [ eax ] ecx
retn
sub_10012097
mov dl [ ecx + 0x3 ]
mov [ eax ] dl
mov dl [ ecx + 0x2 ]
inc eax
mov [ eax ] dl
mov dl [ ecx + 0x1 ]
inc eax
mov [ eax ] dl
mov dl [ ecx ]
add ecx 0x4
inc eax
mov [ eax ] dl
mov dl [ ecx + 0x3 ]
inc eax
mov [ eax ] dl
mov dl [ ecx + 0x2 ]
inc eax
mov [ eax ] dl
mov dl [ ecx + 0x1 ]
inc eax
mov [ eax ] dl
mov cl [ ecx ]
mov [ eax + 0x1 ] cl
retn
sub_100120c8
push ebp
mov ebp esp
sub esp 0xfc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x7c ] eax
xor edx edx
movzx ecx [ edx + rw-data ]
mov esi [ ebp + 0xc ]
mov eax ecx
sar eax 0x3
mov al [ eax + esi ]
and ecx 0x7
test [ ecx * 2 + rw-data ] al
setne al
mov [ ebp + edx - 0x74 ] al
inc edx
cmp edx 0x38
jl r-xdata
mov [ ebp - 0x78 ] ebx
mov bl [ ebp + edi - 0x90 ]
mov bl [ ebp + edi - 0x74 ]
jmp r-xdata
cmp edi 0x1c
jge r-xdata
push 0x1c
pop edi
add ecx edi
mov [ ebp + eax - 0x3c ] bl
inc eax
inc edi
cmp eax 0x1c
jl r-xdata
mov al [ ebp + ecx - 0x90 ]
mov al [ ebp + ecx - 0x74 ]
jmp r-xdata
cmp ecx 0x38
jge r-xdata
xor ebx ebx
xor eax eax
mov [ ebp + edi - 0x3c ] al
inc edi
inc ecx
cmp edi 0x38
jl r-xdata
movzx ecx [ ecx ]
cmp [ ebp + ecx - 0x3c ] bl
je r-xdata
mov edi [ eax * 4 + rw-data ]
or [ esi ] edi
inc eax
cmp eax 0x18
jl r-xdata
mov ecx [ eax * 4 + rw-data ]
or [ edx ] ecx
lea ecx [ eax + rw-data ]
movzx edi [ ecx - 0x18 ]
cmp [ ebp + edi - 0x3c ] bl
je r-xdata
inc [ ebp - 0x78 ]
cmp [ ebp - 0x78 ] 0x10
jl r-xdata
mov edi [ ebp - 0x78 ]
lea ecx [ edi + edi ]
lea edx [ ebp + ecx * 4 - 0xf8 ]
lea esi [ ebp + ecx * 4 - 0xfc ]
movzx ecx [ edi + rw-data ]
mov [ edx ] ebx
mov [ esi ] ebx
xor eax eax
mov edi ecx
push [ ebp + 0x10 ]
mov eax [ ebp - 0x7c ]
lea ecx [ ebp - 0xfc ]
call sub_100121d9
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
sub_100121d9
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
mov esi ecx
jne r-xdata
xor ecx ecx
cmp [ ebp + 0x8 ] ecx
mov [ ebp + 0x8 ] 0x10
setne cl
mov ebx 0x3f00
lea ecx [ ecx * 4 - 0x3 ]
shl ecx 0x2
mov [ ebp - 0x4 ] ecx
add eax 0x78
mov edi esi
mov edx [ edi ]
and edx 0xfc0000
shl edx 0x6
mov [ eax ] edx
mov ecx [ edi ]
and ecx 0xfc0
shl ecx 0xa
or ecx edx
mov [ eax ] ecx
add esi 0x4
mov edx [ esi ]
shr edx 0xa
and edx ebx
or edx ecx
mov [ eax ] edx
mov ecx [ esi ]
shr ecx 0x6
and ecx 0x3f
or ecx edx
mov [ eax ] ecx
mov edx [ edi ]
and edx 0x3f000
shl edx 0xc
add eax 0x4
mov [ eax ] edx
mov ecx [ edi ]
and ecx 0x3f
shl ecx 0x10
or ecx edx
mov [ eax ] ecx
mov edx [ esi ]
shr edx 0x4
and edx ebx
or edx ecx
mov [ eax ] edx
mov ecx [ esi ]
and ecx 0x3f
or ecx edx
mov [ eax ] ecx
add eax [ ebp - 0x4 ]
add esi 0x4
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10012284
mov ecx [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
mov ecx edi
shr ecx 0x4
xor ecx esi
and ecx 0xf0f0f0f
xor esi ecx
shl ecx 0x4
xor edi ecx
mov ecx edi
shr ecx 0x10
xor ecx esi
and ecx 0xffff
xor esi ecx
shl ecx 0x10
xor edi ecx
mov ecx esi
shr ecx 0x2
xor ecx edi
and ecx 0x33333333
xor edi ecx
shl ecx 0x2
xor esi ecx
mov edx esi
shr edx 0x8
xor edx edi
and edx 0xff00ff
xor edi edx
shl edx 0x8
xor edx esi
rol edx 0x1
mov esi edx
xor esi edi
and esi 0xaaaaaaaa
xor edx esi
xor esi edi
rol esi 0x1
mov edi edx
ror edi 0x4
xor edi [ eax ]
push 0x3f
mov ebx edi
shr ebx 0x18
pop ecx
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x4 ]
xor esi ebx
xor edi edx
mov ebx edi
shr ebx 0x18
mov ebp edi
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor esi ebx
mov edi esi
ror edi 0x4
xor edi [ eax + 0x8 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0xc ]
xor edx ebx
xor edi esi
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor edx ebx
mov edi edx
ror edi 0x4
xor edi [ eax + 0x10 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x14 ]
xor esi ebx
xor edi edx
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor esi ebx
mov edi esi
ror edi 0x4
xor edi [ eax + 0x18 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x1c ]
xor edx ebx
xor edi esi
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor edx ebx
mov edi edx
ror edi 0x4
xor edi [ eax + 0x20 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x24 ]
xor esi ebx
xor edi edx
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor esi ebx
mov edi esi
ror edi 0x4
xor edi [ eax + 0x28 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x2c ]
xor edi esi
xor edx ebx
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebp edi
mov ebx [ ebx * 4 + rw-data ]
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor edx ebx
mov edi edx
ror edi 0x4
xor edi [ eax + 0x30 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x34 ]
xor esi ebx
xor edi edx
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor esi ebx
mov edi esi
ror edi 0x4
xor edi [ eax + 0x38 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x3c ]
xor edx ebx
xor edi esi
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor edx ebx
mov edi edx
ror edi 0x4
xor edi [ eax + 0x40 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x44 ]
xor esi ebx
xor edi edx
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor esi ebx
mov edi esi
ror edi 0x4
xor edi [ eax + 0x48 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x4c ]
xor edx ebx
xor edi esi
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor edx ebx
mov edi edx
ror edi 0x4
xor edi [ eax + 0x50 ]
mov ebx edi
shr ebx 0x18
mov ebp edi
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x54 ]
xor esi ebx
xor edi edx
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor esi ebx
mov edi esi
ror edi 0x4
xor edi [ eax + 0x58 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x5c ]
xor edx ebx
xor edi esi
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor edx ebx
mov edi edx
ror edi 0x4
xor edi [ eax + 0x60 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x64 ]
xor edi edx
xor esi ebx
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor esi ebx
mov edi esi
ror edi 0x4
xor edi [ eax + 0x68 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x6c ]
xor edx ebx
xor edi esi
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor edx ebx
mov edi edx
ror edi 0x4
xor edi [ eax + 0x70 ]
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
mov edi [ eax + 0x74 ]
xor esi ebx
xor edi edx
mov ebx edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
mov ebp edi
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
and edi ecx
xor ebx [ edi * 4 + rw-data ]
xor esi ebx
mov edi esi
ror edi 0x4
xor edi [ eax + 0x78 ]
mov eax [ eax + 0x7c ]
mov ebx edi
xor eax esi
mov ebp edi
shr ebx 0x18
and ebx ecx
mov ebx [ ebx * 4 + rw-data ]
shr ebp 0x10
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
mov ebp edi
and edi ecx
shr ebp 0x8
and ebp ecx
xor ebx [ ebp * 4 + rw-data ]
xor ebx [ edi * 4 + rw-data ]
mov edi eax
shr edi 0x18
and edi ecx
mov edi [ edi * 4 + rw-data ]
xor edx ebx
mov ebx eax
shr ebx 0x10
and ebx ecx
xor edi [ ebx * 4 + rw-data ]
mov ebx eax
and eax ecx
shr ebx 0x8
and ebx ecx
xor edi [ ebx * 4 + rw-data ]
xor edi [ eax * 4 + rw-data ]
xor edi edx
ror edi 0x1
mov eax edi
xor eax esi
and eax 0xaaaaaaaa
xor edi eax
xor eax esi
ror eax 0x1
mov ecx eax
shr eax 0x8
xor eax edi
and eax 0xff00ff
xor edi eax
shl eax 0x8
xor ecx eax
mov eax ecx
shr eax 0x2
xor eax edi
and eax 0x33333333
xor edi eax
shl eax 0x2
xor ecx eax
mov edx [ esp + 0x14 ]
mov eax edi
shr eax 0x10
xor eax ecx
and eax 0xffff
xor ecx eax
shl eax 0x10
xor edi eax
mov eax edi
shr eax 0x4
xor eax ecx
and eax 0xf0f0f0f
mov esi eax
shl esi 0x4
xor esi edi
pop edi
mov [ edx ] esi
pop esi
xor eax ecx
pop ebp
mov [ edx + 0x4 ] eax
pop ebx
retn
sub_10012ad2
push ebp
mov ebp esp
sub esp 0x9c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x98 ] eax
movzx eax [ ecx ]
push ebx
push esi
add eax 0x7
push edi
mov edi edx
cdq
and edx 0x7
add eax edx
mov esi eax
mov eax [ ebp + 0x14 ]
sar esi 0x3
lea edx [ eax + 0xb ]
mov [ ebp - 0x90 ] ecx
cmp edx esi
jbe r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax 0x406
jmp r-xdata
mov edx esi
sub edx eax
push 0x2
pop ebx
lea eax [ edx - 0x1 ]
mov [ ebp - 0x88 ] 0x0
mov [ ebp - 0x87 ] bl
mov [ ebp - 0x9c ] eax
cmp eax ebx
jbe r-xdata
mov eax 0x408
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov [ ebp + ebx - 0x88 ] 0x0
lea ebx [ ebp + ebx - 0x87 ]
test edx edx
je r-xdata
lea eax [ ebp - 0x89 ]
push 0x1
push eax
call sub_10010945
mov al [ ebp - 0x89 ]
pop ecx
pop ecx
test al al
je r-xdata
push esi
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x98 ]
mov eax ecx
push [ ebp - 0x94 ]
call sub_10012bda
add esp 0x10
mov edi ebx
sub edi eax
mov [ ebp + ebx - 0x88 ] al
inc ebx
cmp ebx [ ebp - 0x9c ]
jb r-xdata
mov bl [ eax ]
mov [ edi + eax ] bl
inc eax
dec edx
jne r-xdata
mov ecx [ ebp - 0x90 ]
sub_10012bda
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x210
push ebx
push esi
push edi
push [ ebp + 0x78 ]
mov esi eax
lea eax [ ebp - 0x124 ]
push eax
mov eax [ ebp + 0x7c ]
call sub_10011586
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov edi 0x80
mov eax edi
call sub_10011586
lea eax [ esi + 0x82 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
mov eax edi
call sub_10011586
add esp 0x18
push 0x20
pop eax
push 0x20
lea edi [ eax + 0x1 ]
pop eax
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
lea ebx [ eax + 0x1 ]
lea eax [ ebp - 0x124 ]
push eax
mov ecx edi
lea edx [ ebp - 0x1c ]
call sub_10011bf3
pop ecx
test eax eax
jl r-xdata
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
cmp [ ebp + eax * 4 - 0x1c ] 0x0
jne r-xdata
movzx eax [ esi ]
add eax 0x7
cdq
and edx 0x7
add eax edx
mov esi eax
mov eax [ ebp + 0x74 ]
sar esi 0x3
mov [ eax ] esi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
mov eax edi
mov ecx ebx
call sub_10011ada
push edi
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp + 0x70 ]
mov eax esi
call sub_100115d1
add esp 0x1c
xor eax eax
mov eax 0x401
jmp r-xdata
cmp [ ebp + eax * 4 - 0xa0 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
add ebp 0x68
leave
retn
sub_10012cc7
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_10012ce8
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_10012d22
push ebp
mov ebp esp
sub esp 0x2c
push esi
push edi
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push [ ebp + 0x8 ]
mov edi eax
lea esi [ ebp - 0x2c ]
call sub_100134d7
push r--data
mov eax esi
push eax
call sub_1001905a
sub_10012d76
push 0x44
mov eax sub_1002d4bb
call sub_1001948c
lea eax [ ebp - 0x10 ]
push eax
push rw-data
xor ebx ebx
push 0x6
mov [ ebp - 0x10 ] ebx
call [ GetModuleHandleExW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
call sub_100038ef
xor edi edi
inc edi
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x14 ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
push edi
lea ecx [ ebp - 0x30 ]
call sub_10003c5b
push esi
lea ecx [ ebp - 0x4c ]
call sub_100038ef
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x10 ] ebx
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_10012d22
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x4c ]
call sub_10003c5b
mov eax [ ebp - 0x10 ]
call sub_1001952b
retn
lea eax [ ebp - 0x4c ]
push eax
call sub_10012d22
pop ecx
sub_10012dfa
push 0x38
mov eax sub_1002d490
call sub_1001948c
mov eax [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ LoadResource@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_100038ef
and [ ebp - 0x4 ] 0x0
test ebx ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10003c5b
push ebx
call [ LockResource@IAT ]
push esi
lea ecx [ ebp - 0x44 ]
mov ebx eax
call sub_100038ef
mov [ ebp - 0x4 ] 0x1
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_10012d22
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_10003c5b
mov eax ebx
call sub_1001952b
retn 0x4
lea eax [ ebp - 0x44 ]
push eax
call sub_10012d22
pop ecx
sub_10012e83
push 0x2c
mov eax sub_1002d50b
call sub_1001948c
mov esi ecx
xor edi edi
push esi
mov [ ebp - 0x14 ] edi
call sub_10012dfa
push [ esi ]
mov [ ebp - 0x14 ] eax
push [ esi + 0x4 ]
call [ SizeofResource@IAT ]
push r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x10 ] eax
call sub_100038ef
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x10 ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x34 ]
call sub_10003c5b
push 0x20
call sub_100157d2
pop ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] esi
cmp eax edi
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
call sub_10012d22
pop ecx
xor esi esi
push [ ebp - 0x10 ]
mov edi eax
push [ ebp - 0x14 ]
call sub_1001332e
mov esi eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] esi
call sub_10012f24
push esi
push esi
push ebx
call sub_10007d1e
add esp 0xc
mov eax ebx
call sub_1001952b
retn
sub_10012f24
push 0x4
mov eax sub_1002c8e5
call sub_100194bf
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_100157d2
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_1001952b
retn 0x4
sub_10012fb1
push 0x90
mov eax sub_1002d458
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x3c ] eax
xor ecx ecx
cmp [ esi + 0x18 ] 0x8
lea eax [ esi + 0x4 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] eax
jb r-xdata
mov edi [ GetEnvironmentVariableW@IAT ]
push ecx
push ecx
push eax
call edi
mov ebx r--data
push ebx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] eax
call sub_100038ef
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ eax ]
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x58 ]
call sub_10003c5b
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x30 ]
call sub_100131b2
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x8
mov ecx [ ebp - 0x2c ]
jae r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_10012d22
pop ecx
cmp [ esi + 0x18 ] 0x8
mov eax [ ebp - 0x38 ]
jb r-xdata
lea ecx [ ebp - 0x2c ]
push [ ebp - 0x1c ]
push ecx
push eax
call edi
push ebx
lea ecx [ ebp - 0x58 ]
mov esi eax
call sub_100038ef
mov [ ebp - 0x4 ] 0x2
test esi esi
jne r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x1
call sub_10003c5b
inc esi
cmp [ ebp - 0x34 ] esi
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_10012d22
pop ecx
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push r--data
lea ecx [ ebp - 0x74 ]
call sub_100038ef
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10008a36
push r--data
lea eax [ ebp - 0x9c ]
push eax
call sub_1001905a
mov esi [ ebp - 0x3c ]
push eax
call sub_100032b9
push 0x0
push 0x1
lea esi [ ebp - 0x30 ]
call sub_1000339d
mov eax [ ebp - 0x3c ]
call sub_1001953f
retn
lea eax [ ebp - 0x2c ]
sub_100130da
push 0x27c
mov eax sub_1002d410
call sub_100194f5
xor ebx ebx
push 0x20a
lea eax [ ebp - 0x224 ]
push ebx
push eax
mov esi ecx
mov edi edx
mov [ ebp - 0x228 ] ebx
call sub_10015500
add esp 0xc
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
xor ebx ebx
inc ebx
push ebx
lea ecx [ ebp - 0x244 ]
call sub_10003c5b
cmp edi 0x6f
jne r-xdata
lea eax [ ebp - 0x244 ]
push eax
call sub_10012d22
pop ecx
lea eax [ ebp - 0x224 ]
push eax
push ebx
push ebx
push edi
call [ GetTempFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x244 ]
mov edi eax
call sub_100038ef
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x224 ]
push eax
call sub_100032b9
mov eax esi
call sub_1001953f
retn
push r--data
lea ecx [ ebp - 0x260 ]
call sub_100038ef
lea eax [ ebp - 0x260 ]
push eax
lea eax [ ebp - 0x288 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10008a36
push r--data
lea eax [ ebp - 0x288 ]
push eax
call sub_1001905a
sub_100131b2
push esi
mov esi ecx
push edi
mov edi eax
xor ecx ecx
mov eax esi
mov [ esi + 0x18 ] 0x7
call sub_100034c8
cmp edi 0xffffffff
jne r-xdata
call sub_100034e0
test al al
je r-xdata
call sub_1001406f
pop edi
mov eax esi
pop esi
retn
push edi
xor ecx ecx
mov eax esi
call sub_10006132
mov ecx edi
mov eax esi
call sub_100034c8
sub_100131f3
push 0xe4
mov eax sub_1002d8d8
call sub_1001948c
and [ ebp - 0x10 ] 0x0
mov esi edi
mov [ ebp - 0x18 ] edi
mov ebx ecx
call sub_10008a6b
and [ ebp - 0x4 ] 0x0
xor esi esi
inc esi
cmp [ ebx + 0x18 ] 0x8
mov [ ebp - 0x10 ] esi
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
lea esi [ ebp - 0xf0 ]
call sub_10008cf4
lea esi [ ebp - 0x38 ]
lea eax [ ebp - 0xf0 ]
call sub_10008d67
mov esi [ eax + 0x8 ]
add esi [ eax ]
sub esp 0x18
mov eax esp
xor ecx ecx
lea ebx [ ebp - 0xf0 ]
mov [ ebp - 0x14 ] esp
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
call sub_10008c71
mov eax esi
mov ecx edi
call sub_10004469
cmp [ edi + 0x18 ] 0x10
jb r-xdata
push r--data
lea ecx [ ebp - 0x38 ]
call sub_100038ef
mov [ ebp - 0x4 ] 0x2
push ebx
lea eax [ ebp - 0xf0 ]
push eax
call sub_10008d9c
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x9c ] 0x0
jne r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0x0
call sub_10008adc
mov eax edi
call sub_1001952b
retn
push r--data
lea ecx [ ebp - 0x38 ]
call sub_100038ef
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0xf0 ]
push eax
call sub_10004f3b
mov eax [ ebp - 0xf0 ]
mov eax [ eax + 0x4 ]
test [ ebp + eax - 0xe8 ] 0x6
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call sub_10008a36
push r--data
lea eax [ ebp - 0x60 ]
push eax
call sub_1001905a
sub_1001335e
push 0x4c
mov eax sub_1002d3df
call sub_1001948c
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] esi
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x18 ] esi
jb r-xdata
add eax 0x4
mov [ ebp - 0x14 ] eax
add eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ eax ]
jmp r-xdata
push esi
push ebx
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x0
call sub_10003c5b
push 0x20
call sub_100157d2
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax esi
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_10012d22
pop ecx
push esi
push esi
lea edx [ ebp - 0x18 ]
push edx
push esi
xor ebx ebx
inc ebx
push ebx
push ecx
push eax
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x38 ]
mov edi eax
call sub_100038ef
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
mov [ ebp - 0x10 ] esi
mov edi [ ebp - 0x18 ]
push esi
lea esi [ eax + 0x4 ]
call sub_10004426
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x10 ] eax
xor esi esi
jmp r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov edi [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x4 ]
mov [ edi ] eax
call sub_10012f24
push [ ebp - 0x10 ]
push [ ebp - 0x10 ]
push edi
call sub_10007d1e
add esp 0xc
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp [ eax + 0x1c ] 0x10
mov [ ebp - 0x1c ] ebx
jb r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x18 ] 0x10
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x10 ] eax
jb r-xdata
push esi
push ebx
lea ecx [ ebp - 0x54 ]
call sub_10003c5b
mov eax edi
call sub_1001952b
retn
lea eax [ ebp - 0x54 ]
push eax
call sub_10012d22
pop ecx
push esi
push esi
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x10 ]
push ebx
push edx
push ecx
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp + 0xc ] eax
call sub_100038ef
mov [ ebp - 0x4 ] 0x3
cmp [ ebp + 0xc ] ebx
je r-xdata
sub_100134d7
push 0x20
mov eax sub_1002d271
call sub_1001948c
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_1001352e
add esp 0xc
and [ ebp - 0x4 ] 0x0
push eax
push esi
call sub_10008a36
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov [ esi ] r--data
call sub_10003c5b
mov [ esi ] r--data
mov [ esi + 0x28 ] edi
mov eax esi
call sub_1001952b
retn 0x4
sub_1001352e
push 0xd8
mov eax sub_1002d241
call sub_100194f5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp + 0x10 ]
xor edi edi
push eax
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x54 ] edi
call sub_100136e5
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x48 ]
call sub_1001364c
pop ecx
push [ ebp - 0x50 ]
xor ebx ebx
lea eax [ ebp - 0xe0 ]
inc ebx
push eax
mov [ ebp - 0x4 ] bl
call sub_10013719
push r--data
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10013fc2
add esp 0x14
mov ecx esi
push ecx
push eax
lea eax [ ebp - 0x8c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10013766
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0xc4 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10013fc2
add esp 0xc
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10013766
add esp 0xc
push r--data
push eax
push [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x6
call sub_10013fc2
add esp 0xc
push edi
push ebx
lea ecx [ ebp - 0x70 ]
call sub_10003c5b
push edi
push ebx
lea ecx [ ebp - 0xc4 ]
call sub_10003c5b
push edi
push ebx
lea ecx [ ebp - 0x8c ]
call sub_10003c5b
push edi
push ebx
lea ecx [ ebp - 0xa8 ]
call sub_10003c5b
push edi
push ebx
lea ecx [ ebp - 0xe0 ]
call sub_10003c5b
push edi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10003c5b
push edi
push ebx
mov ecx esi
call sub_10003c5b
mov eax [ ebp - 0x4c ]
call sub_1001953f
retn
sub_1001364c
push 0x28
mov eax sub_1002d1e2
call sub_1001948c
xor edi edi
push edi
push edi
lea eax [ ebp - 0x10 ]
push eax
push 0x400
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
push edi
mov ebx ecx
mov [ ebp - 0x18 ] edi
push 0x1300
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] edi
call [ FormatMessageA@IAT ]
mov esi eax
cmp esi 0x4
jbe r-xdata
push r--data
mov ecx ebx
call sub_100038ef
xor ebx ebx
mov [ ebp - 0x4 ] edi
inc ebx
mov [ ebp - 0x18 ] ebx
cmp [ ebp - 0x10 ] edi
je r-xdata
sub esi 0x3
mov eax [ ebp - 0x14 ]
call sub_1001952b
retn
cmp esi edi
jbe r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
push esi
push [ ebp - 0x10 ]
lea esi [ ebp - 0x34 ]
call sub_10004402
push 0xffffffff
push edi
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x14 ]
push eax
call sub_10003b6b
push edi
push ebx
mov ecx esi
call sub_10003c5b
push [ ebp - 0x10 ]
call [ LocalFree@IAT ]
sub_100136e5
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
mov ecx esi
call sub_100137b1
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10015160
leave
retn
sub_10013719
push 0x20
mov eax sub_1002d127
call sub_1001948c
and [ ebp - 0x10 ] 0x0
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100038ef
mov esi eax
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
call sub_10007def
mov ecx [ ebp + 0x8 ]
push eax
call sub_10003bfd
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov eax [ ebp + 0x8 ]
call sub_1001952b
retn
sub_10013766
push 0x20
mov eax sub_1002d127
call sub_1001948c
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10003bfd
mov esi eax
mov eax [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
call sub_10007def
mov ecx [ ebp + 0x8 ]
push eax
call sub_10003bfd
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov eax [ ebp + 0x8 ]
call sub_1001952b
retn
sub_100137b1
push 0x7c
mov eax sub_1002d1a3
call sub_1001948c
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov esi ecx
lea edi [ eax + 0x13 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x18 ] edi
call sub_10008a6b
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
xor ebx ebx
inc ebx
mov ecx edi
mov [ ebp - 0x14 ] ebx
call sub_10013a28
pop ecx
mov [ ebp - 0x1c ] eax
mov ecx esi
lea eax [ ebp - 0x1c ]
call sub_10013857
test al al
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10017105
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x24 ] rw-data
mov [ ebp - 0x20 ] rw-data
lea eax [ ebp - 0x30 ]
push eax
lea esi [ ebp - 0x88 ]
mov [ ebp - 0x4 ] ebx
call sub_10013b06
pop ecx
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_10013b40
lea eax [ ebp - 0x60 ]
mov [ esp ] r--data
push eax
call sub_1001905a
int3
mov eax esi
call sub_1001952b
retn
sub_10013857
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ebx [ esi + 0x14 ]
add ebx eax
lea edi [ ebp - 0x10 ]
call sub_10009bb4
lea eax [ ebp - 0x18 ]
mov ecx esi
call sub_10009bf1
push [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
push [ ebp - 0x10 ]
mov ecx esi
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_10013b9a
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
sub_100138e1
push 0x4
mov eax sub_1002c9ba
call sub_1001948c
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10013928
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x14 ]
push eax
mov ecx edi
call sub_10013f8c
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_1001952b
retn 0x4
lea eax [ edi + 0x14 ]
sub_10013928
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_10017123
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_100139c6
push 0x4
mov eax sub_1002ca92
call sub_1001948c
mov esi ecx
push 0x2c
call sub_100157d2
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffd8
push esi
call sub_100138b4
jmp r-xdata
xor eax eax
add eax 0x28
jmp r-xdata
test eax eax
je r-xdata
call sub_1001952b
retn
sub_10013a28
push 0x30
mov eax sub_1002d152
call sub_100194f5
mov esi ecx
call sub_100144fa
mov [ ebp - 0x34 ] eax
call sub_10014328
mov ecx eax
call sub_100086c0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
call sub_100076b7
mov edi eax
pop ecx
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_100073f1
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2d ] 0x0
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x2d ] al
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_10013f0b
mov bl [ eax ]
mov bl 0x7f
jmp r-xdata
and [ ebp - 0x38 ] 0x0
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_10013f0b
cmp [ eax ] 0x0
jg r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
push 0xa
pop edi
div edi
dec cl
dec esi
add dl 0x30
mov [ esi ] dl
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
mov edi [ ebp - 0x38 ]
inc edi
mov [ ebp - 0x38 ] edi
cmp edi [ ebp - 0x3c ]
jae r-xdata
mov cl bl
test cl cl
jne r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
lea ecx [ ebp - 0x34 ]
call sub_1000872a
mov eax esi
call sub_1001953f
retn
mov al [ ebp - 0x2d ]
dec esi
mov cl bl
mov [ esi ] al
lea eax [ ebp - 0x2c ]
call sub_10013f0b
mov al [ eax ]
mov bl 0x7f
test al al
jle r-xdata
mov bl al
sub_10013b06
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10013928
mov [ esi + 0x14 ] r--data
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
and [ esi + 0x20 ] 0x0
or [ esi + 0x24 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov eax esi
leave
retn
sub_10013b40
push 0x4
mov eax sub_1002ca6d
call sub_1001948c
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_100138e1
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x28 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x14 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x28 ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x14
jmp r-xdata
call sub_10013e90
mov eax esi
call sub_1001952b
retn
sub_10013b9a
push 0x2c
mov eax sub_1002cbe4
call sub_100194f5
mov edi ecx
push 0x0
lea ecx [ ebp - 0x2c ]
mov esi edx
mov [ ebp - 0x14 ] 0xf
call sub_10003c3f
push [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
push [ ebp + 0x8 ]
push esi
push eax
call sub_10013c26
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x38 ]
mov ecx edi
call sub_10009bf1
push [ ebp + 0x14 ]
mov esi [ eax ]
push [ ebp + 0x10 ]
mov ebx [ eax + 0x4 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_10013e40
push ebx
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x30 ] eax
push [ ebp + 0x10 ]
call sub_10013e40
add esp 0x20
lea ecx [ ebp - 0x2c ]
push ecx
push [ ebp - 0x30 ]
mov esi eax
call sub_10013c93
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov eax edi
call sub_1001953f
retn 0x18
sub_10013c26
push 0x4
mov eax sub_1002cbc1
call sub_100194bf
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov esi edi
call sub_10007cf9
and [ ebp - 0x4 ] 0x0
call sub_1001952b
retn 0x10
movzx eax [ eax ]
xor ebx ebx
push eax
inc ebx
call sub_10004ef7
inc [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
je r-xdata
sub_10013c93
push ebp
mov ebp esp
sub esp 0xc
or [ ebp - 0x4 ] 0xffffffff
cmp [ edi + 0x14 ] esi
jae r-xdata
mov eax [ edi + 0x14 ]
mov ecx eax
sub ecx esi
cmp ecx [ ebp + 0x8 ]
jae r-xdata
call sub_100140a7
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x14 ]
cmp ecx 0xffffffff
jae r-xdata
mov [ ebp + 0x8 ] ecx
sub eax [ ebp + 0x8 ]
or ecx 0xffffffff
sub ecx [ ebp - 0x4 ]
cmp ecx eax
ja r-xdata
mov [ ebp - 0x4 ] ecx
mov eax [ edi + 0x14 ]
push ebx
mov ecx eax
sub ecx [ ebp + 0x8 ]
mov ebx eax
add ecx [ ebp - 0x4 ]
sub ebx esi
sub ebx [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ebx
cmp eax ecx
jae r-xdata
call sub_1001406f
cmp edi [ ebp + 0xc ]
je r-xdata
push 0x0
push ecx
mov ecx edi
call sub_10003b0d
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
lea ebx [ edi + 0x4 ]
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx ebx
mov edx [ ebx ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov [ ebp + 0xc ] ebx
mov edx [ ebx ]
mov [ ebp + 0xc ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
add edx esi
add edx [ ebp + 0x8 ]
push ebx
sub eax esi
sub eax [ ebp - 0x4 ]
push edx
add ecx esi
add ecx [ ebp - 0x4 ]
push eax
push ecx
call sub_10003911
mov eax [ ebp + 0xc ]
add esp 0x10
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp - 0x8 ]
sub eax esi
sub eax [ ebp - 0x4 ]
add ecx esi
add ecx [ ebp + 0x8 ]
push ecx
push eax
mov eax [ ebp + 0xc ]
add eax esi
add eax [ ebp - 0x4 ]
push eax
call sub_10003911
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp - 0x4 ]
sub eax esi
push edx
push eax
add ecx esi
push ecx
call sub_10003911
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
push [ ebp - 0x4 ]
sub eax esi
add ebx esi
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
push [ ebp - 0x8 ]
add ecx esi
add ecx [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp - 0x4 ]
add ebx esi
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
add esp 0x10
push [ ebp - 0xc ]
mov ecx edi
call sub_10003c3f
mov eax edi
pop ebx
leave
retn 0x8
push [ ebp - 0x4 ]
sub eax esi
push edx
push eax
add ecx esi
push ecx
call sub_10003c23
jmp r-xdata
push ecx
push eax
push ebx
call sub_10003911
sub_10013e40
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffc
je r-xdata
pop ebp
retn
sub eax [ ebp + 0x14 ]
pop ebp
retn
test ecx ecx
je r-xdata
call sub_10017626
mov eax [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
je r-xdata
sub_10013e6a
mov ecx [ esi ]
push edi
mov edi [ eax ]
test ecx ecx
je r-xdata
mov [ esi ] edi
test edi edi
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
mov eax esi
pop edi
retn
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
and [ esi ] 0x0
sub_10013e90
push 0x8
mov eax sub_1002c997
call sub_1001948c
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x4 ] 0x0
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ ebx + 0x10 ] eax
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
lea esi [ ebx + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_10013e6a
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x14 ]
push edx
call [ eax + 0x14 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_10013e6a
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
call sub_1001952b
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ ebp - 0x14 ] 0x0
sub_10013f0b
push esi
mov esi eax
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10017626
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop esi
retn
sub_10013f2b
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi + 0x4 ] 0x0
sub_10013f8c
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov [ esi ] r--data
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
mov eax [ ecx ]
call [ eax + 0xc ]
sub_10013fc2
push 0x20
mov eax sub_1002d127
call sub_1001948c
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10003bfd
mov edi eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
call sub_100171f0
pop ecx
push eax
push [ ebp + 0x10 ]
mov eax edi
call sub_10007d55
mov ecx [ ebp + 0x8 ]
push eax
call sub_10003bfd
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov eax [ ebp + 0x8 ]
call sub_1001952b
retn
sub_10014048
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10009b48
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_1001406f
push 0x44
mov eax sub_1002c713
call sub_1001948c
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100038ef
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10009b95
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_1001905a
int3
sub_100140a7
push 0x44
mov eax sub_1002c713
call sub_1001948c
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100038ef
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10014020
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_1001905a
int3
sub_100140fc
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x20 ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_10014123
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov ecx esi
call sub_100140fc
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
and [ esi + 0x1c ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_100157ac
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x20 ] 0x0
pop edi
pop esi
pop ebp
retn
mov edi [ eax ]
push eax
call sub_100157ac
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_1001416e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
push esi
call sub_10014123
pop ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
dec [ eax + rw-data ]
mov eax [ esi + 0x4 ]
cmp [ eax + rw-data ] 0x0
jg r-xdata
pop esi
pop ebp
retn
push 0x1
call sub_10007ffb
sub_100141aa
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_100157d2
push eax
mov [ esi ] eax
call sub_10014edb
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_100141f2
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_10014edb
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_10014223
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jge r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_10014eeb
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_1001424c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4
push esi
mov esi ecx
mov [ esi ] eax
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_10014efb
pop ecx
sub_100142ba
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100142a5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_100142db
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_100086e8
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_100142fc
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1001424c
push rw-data
call sub_100142db
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_10014274
leave
retn
sub_1001432e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_100142fc
mov [ rw-data ] 0x1
call sub_10014f1b
pop ecx
sub_10014358
push 0x4
mov eax sub_1002c736
call sub_1001948c
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_1001424c
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
ja r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_10017636
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_10014274
call sub_1001952b
retn
mov ecx [ eax ]
call sub_100086e8
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_100143b8
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1001424c
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx eax
mov eax [ eax ]
push 0x1
mov [ rw-data ] eax
call sub_100142ba
lea ecx [ ebp - 0x4 ]
call sub_10014274
leave
retn
sub_100143ed
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_100157d2
pop ecx
test eax eax
je r-xdata
push sub_100143b8
call sub_1001428b
pop ecx
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_1001442b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x50 ] 0x0
jbe r-xdata
pop ebp
retn
cmp [ eax + 0x54 ] 0x10
jb r-xdata
add eax 0x40
mov eax [ eax + 0x40 ]
jmp r-xdata
push eax
push 0x0
call sub_1001b391
pop ecx
pop ecx
sub_10014453
push 0x4
mov eax sub_1002c759
call sub_1001948c
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov al [ ebp + 0x8 ]
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] al
call sub_100038ef
mov eax esi
call sub_1001952b
retn 0x4
sub_1001449c
push 0x4
mov eax sub_1002c787
call sub_1001948c
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10014358
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_10003c5b
mov [ esi ] r--data
call sub_1001952b
retn
sub_100144d9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001449c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_100144fa
push 0x8
mov eax sub_1002c7b4
call sub_1001948c
mov eax [ rw-data ]
mov esi eax
test eax eax
jne r-xdata
mov eax esi
call sub_1001952b
retn
push eax
lea ecx [ ebp - 0x10 ]
call sub_1001424c
mov eax [ rw-data ]
and [ ebp - 0x4 ] esi
mov esi eax
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10014274
push 0x34
call sub_100157d2
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
xor esi esi
push esi
call sub_10014453
mov esi eax
jmp r-xdata
push esi
mov [ ebp - 0x4 ] 0x0
call sub_1001432e
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_100038d2
mov ecx esi
mov [ rw-data ] esi
call sub_100086c0
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_10014594
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
push esi
push edi
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x3c ]
call sub_100038d2
test esi esi
je r-xdata
mov eax r--data
push 0x0
push 0x0
call sub_1001b391
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax r--data
push esi
push 0x0
call sub_1001b391
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ edi + 0x58 ]
call sub_100038d2
pop edi
pop esi
pop ebp
retn
sub_100145f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_1001bcfc
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1001bcd6
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1001b90b
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_10018750
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_1001b8c6
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_100146fd
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1001bcfc
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1001bcd6
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_1001bd67
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_1001b90b
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_1001b90b
push eax
push [ esi + 0x8 ]
call sub_10015190
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_1001475d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_1001bcfc
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1001bcd6
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1001b90b
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_100187cf
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_1001b8c6
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_1001486f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_100188cd
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
cmp eax ebx
mov cl 0x30
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_1001bfa1
pop ecx
push eax
mov edi r--data
push edi
call sub_10017710
add esp 0xc
cmp eax ebx
je r-xdata
inc esi
inc esi
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_1001bfa1
pop ecx
push eax
push edi
call sub_10017710
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_1001be43
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10014a0a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_100188cd
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_1001486f
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_1001be43
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_10014aaf
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_100188cd
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10014b72
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1001be43
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
jbe r-xdata
sub_10014b72
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_100188cd
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
cmp eax esi
mov cl 0x30
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_1001bfa1
pop ecx
push eax
mov esi r--data
push esi
call sub_10017710
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
inc edi
inc edi
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_1001c040
push [ ebp + 0x10 ]
mov ecx eax
mov eax edx
mov [ ebp - 0x8 ] eax
movsx eax bl
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_1001bfa1
pop ecx
push eax
push esi
call sub_10017710
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_1001be43
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_1001bfd0
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_10014d77
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10014d99
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_10014d99
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1001be43
mov esi [ eax ]
call sub_1001be43
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_1001c216
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_1001be43
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_1001be43
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jge r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_10014e23
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ebx edx
mov edi edx
and ebx 0x4
and edi 0x80
test dl 0x40
je r-xdata
test dl 0x8
je r-xdata
or edx 0x1
xor ecx ecx
and edx 0xffffff3b
xor eax eax
inc ecx
or edx 0x2
mov esi eax
shl esi 0x2
cmp [ esi + r--data ] 0x0
jne r-xdata
mov ecx [ eax * 4 + r--data ]
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx edx
je r-xdata
push [ ebp + 0x10 ]
mov esi [ esi + rw-data ]
push esi
push [ ebp + 0x8 ]
call sub_1001557a
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test dl 0x1
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
push [ ebp + 0x10 ]
push r--data
push [ ebp + 0x8 ]
call sub_1001557a
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_10017de7
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_10015725
pop ecx
jmp r-xdata
sub_10014f1b
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
pop ebp
jmp sub_1001a358
sub_10014f68
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_1001a82e
push esi
call sub_10017636
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_10014fd0
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call [ rw-data ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
lea edx [ ebp + 0xc ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
jl r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push esi
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov esi eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
pop esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x0
call [ GetErrorInfo@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
sub_10015050
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
retn
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
push ecx
push 0x0
push eax
call [ HeapFree@IAT ]
sub_10015090
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call sub_1001905a
int3
sub_100150d0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov eax edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_10015110
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ ebp + 0x8 ] 0x1
je r-xdata
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100157ac
add esp 0x4
mov ecx [ esi + 0xc ]
push ecx
push 0x0
push eax
call [ HeapFree@IAT ]
sub_1001516f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_10015190
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_10015218 ]
jmp [ ecx * 4 + jump_table_10015298 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10015304 ]
pop esi
pop edi
pop ebp
jmp sub_1001c689
jmp [ ecx * 4 + jump_table_100154a0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_100153a4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100154a0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10015304 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_100154a0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10015304 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10015304 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10015304 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100154a0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100154a0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_100154a0 ]
sub_10015500
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_1001c882
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_1001557a
push 0xc
push r--data
call sub_1001cd00
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
je r-xdata
call sub_1001be43
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10017600
add esp 0x14
xor eax eax
cmp [ edi ] si
setne al
cmp eax esi
je r-xdata
call sub_1001cd45
retn
call sub_1001cbc5
mov [ ebp + 0x8 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebx ] si
jne r-xdata
call sub_1001be43
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push edi
push ebx
call sub_1001c911
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10015636
mov eax [ ebp - 0x1c ]
call sub_1001be43
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1001cd5c
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_10015640
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1001557a
add esp 0xc
mov [ edi ] eax
cmp eax esi
je r-xdata
call sub_1001be43
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_10017600
add esp 0x14
mov eax edi
jmp r-xdata
call sub_1001be43
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_100156ae
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_1001be43
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_1001801d
push esi
mov ebx eax
call sub_1001d1cd
push esi
call sub_1001d19b
push eax
call sub_1001d0ce
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_10017636
pop ecx
mov [ esi + 0x1c ] edi
sub_10015725
push 0xc
push r--data
call sub_1001cd00
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_1001be43
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_100183f3
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_100156ae
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10015799
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_1001cd45
retn
mov eax [ ebp - 0x1c ]
sub_100157d2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10018252
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1001d20d
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_100039c9
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_1001905a
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_100157b7
push sub_1002dc4f
call sub_1001a341
pop ecx
sub_10015837
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_10016e37 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_10016eb7
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
jmp r-xdata
movzx ecx [ esi ]
movzx eax [ edx ]
movzx edi cx
sub eax edi
je r-xdata
test cx cx
je r-xdata
pop edi
pop esi
test eax eax
jge r-xdata
inc edx
inc edx
inc esi
inc esi
jle r-xdata
or eax 0xffffffff
pop ebp
retn
pop ebp
retn
xor eax eax
inc eax
sub_10016eee
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001d491
add esp 0x14
pop ebp
retn
sub_10016f0c
push [ rw-data ]
call sub_1001d77b
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_1001d51c
push 0x1
push 0x0
call sub_1001a46f
add esp 0xc
jmp sub_1001a358
call eax
sub_10016f46
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10016f36
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10016f67
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_100185f0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_10016f87
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_1001be43
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_10015500
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10015190
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_1001be43
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
mov eax esi
jmp r-xdata
sub_10017015
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_100171f0
mov esi eax
inc esi
push esi
call sub_10018252
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_1001df09
add esp 0xc
jmp r-xdata
sub_10017085
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_100171f0
mov edi eax
inc edi
push edi
call sub_10018252
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_1001df09
add esp 0xc
jmp r-xdata
sub_10017105
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10017015
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001714b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100170e2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_1001716c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100170e2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10017193
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_1001be43
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1001df90
add esp 0xc
call sub_1001be43
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
mov eax esi
jmp r-xdata
sub_100171f0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_1001727b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
push eax
call sub_1001ea4d
pop ecx
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_1001db7e
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_1001d7f6
push 0x214
push 0x1
call sub_1001bd67
mov esi eax
pop ecx
pop ecx
cmp esi edi
je r-xdata
dec [ rw-data ]
cmp [ rw-data ] edi
jne r-xdata
call sub_1001ea01
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_1001e8ca
mov [ rw-data ] eax
call sub_1001e2f5
test eax eax
jge r-xdata
call sub_1001ea7d
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
xor eax eax
inc eax
push edi
call sub_1001db10
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_10018cc4
call sub_1001e80f
test eax eax
jl r-xdata
call sub_1001d82a
jmp r-xdata
push esi
call sub_10017636
pop ecx
jmp r-xdata
push edi
push esi
call sub_1001d867
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
call sub_1001e549
call sub_1001d82a
call sub_1001ea7d
jmp r-xdata
call sub_1001e549
jmp r-xdata
call sub_1001e597
test eax eax
jl r-xdata
push 0x0
call sub_10018ae7
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_100173b0
push 0xc
push r--data
call sub_1001cd00
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_10001000
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_1001727b
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_1001727b
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_10001000
push edi
push 0x0
push ebx
call sub_1001727b
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_1001cd45
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_100173b0
pop ecx
pop ebp
retn 0xc
call sub_1001ec71
sub_100174d8
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_10015500
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_1001ed07
pop ecx
sub_10017600
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_1001d77b
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_1001ed07
pop ecx
pop ebp
jmp sub_100174d8
pop ebp
jmp eax
sub_10017636
push 0xc
push r--data
call sub_1001cd00
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1001cd45
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_1001ee8b
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1001eebe
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_1001be43
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1001be01
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001768c
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_1001eeee
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_100176c4
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10020633
add esp 0x14
pop ebp
retn
sub_10017710
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_100177c0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_10017806
push 0xc
push r--data
call sub_1001cd00
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_100183f3
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1001be43
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_1001d19b
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1001cd45
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001790a
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_1001d235
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_1001be43
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_10017912
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_1001be43
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_1001d235
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_1001801d
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_1001d19b
pop ecx
push eax
call sub_10020dee
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_10015190
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_10017a74
push 0xc
push r--data
call sub_1001cd00
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_100183f3
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10017912
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10017aec
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_1001be43
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10017600
add esp 0x14
call sub_1001cd45
retn
sub_10017af6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_1001d19b
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
test al al
jns r-xdata
call sub_1001be43
xor edi edi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov edi eax
sar edi 0x5
shl ecx 0x6
add ecx [ edi * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_10020eca
pop ecx
test al 0x2
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop ebx
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_10017be7
push 0xc
push r--data
call sub_1001cd00
xor eax eax
xor esi esi
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
call sub_100183f3
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10017af6
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10017c4f
mov eax [ ebp - 0x1c ]
call sub_1001be43
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1001cd45
retn
sub_10017c59
push 0xc
push r--data
call sub_1001cd00
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_100183f3
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1001be43
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_1001d19b
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1001cd45
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10017d55
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_10020f13
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_1001be43
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_10017d5d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_1001be43
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_1001801d
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_1002118f
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1001d19b
pop ecx
push eax
call sub_100210b3
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_10017de7
push 0xc
push r--data
call sub_1001cd00
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_1001be43
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100183f3
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10017d5d
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10017e62
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_1001cd45
retn
cmp edi 0x2
jne r-xdata
sub_10017e6c
mov edi edi
push ebp
mov ebp esp
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
call sub_1001be43
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10021678
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
or eax 0xffffffff
mov [ esi + 0x4 ] edx
cmp ecx eax
je r-xdata
call sub_1001be43
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebp
retn
pop esi
xor eax eax
sub_10017eda
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_1002175e
add esp 0x10
pop esi
pop ebp
retn
sub_10017f1f
push 0xc
push r--data
call sub_1001cd00
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x4
je r-xdata
call sub_1001be43
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_1001cd45
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp eax 0x40
jne r-xdata
cmp eax 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_100183f3
pop ecx
mov [ ebp - 0x4 ] ebx
push esi
call sub_1001801d
push esi
call sub_1001d1cd
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test [ ebp + 0x10 ] 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_1001bd22
pop ecx
cmp eax ebx
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10018013
mov eax [ ebp - 0x1c ]
sub_1001801d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_1001d19b
pop ecx
push eax
call sub_10020dee
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_10018085
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_1001801d
pop ecx
test eax eax
je r-xdata
push esi
call sub_100180cd
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_1001d19b
push eax
call sub_100217ad
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_100180cd
push 0x14
push r--data
call sub_1001cd00
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001819e
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_1001cd45
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_10018434
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_1001816f
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_10018085
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_10018085
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_100181a7
push 0xc
push r--data
call sub_1001cd00
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_100183f3
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_10018085
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100181f0
mov eax [ ebp - 0x1c ]
push esi
call sub_100180cd
pop ecx
jmp r-xdata
call sub_1001cd45
retn
sub_10018203
push 0xc
push r--data
call sub_1001cd00
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
push 0x4
call sub_1001ee8b
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1001f69d
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10018249
sub_10018252
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_1001d20d
pop ecx
call sub_1001be43
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_1001d6c7
push 0x1e
call sub_1001d51c
push 0xff
call sub_10018a7c
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_10018203
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_1001be43
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_1001d20d
pop ecx
test eax eax
je r-xdata
call sub_1001be43
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_10018322
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_1001bd67
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_1001bd67
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_100183f3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_1001ee8b
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_10018434
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_1001ee8b
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_10018466
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_1001edb1
pop ecx
pop ebp
retn
sub_100184a2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_1001edb1
pop ecx
pop ebp
retn
sub_100184d1
push 0xc
push r--data
call sub_1001cd00
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
je r-xdata
call sub_1001be43
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
push ebx
call sub_100183f3
pop ecx
mov [ ebp - 0x4 ] esi
test [ ebx + 0xc ] 0x40
jne r-xdata
call sub_1001cd45
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push ebx
call sub_1001d19b
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100185e3
mov eax [ ebp - 0x1c ]
push ebx
call sub_1001ceaf
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebp + 0xc ]
push ebx
call sub_1001f9cf
mov [ ebp - 0x1c ] eax
push ebx
push edi
call sub_1001cf4b
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_1001be43
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10017600
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_100185f0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_10018678
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_1001d9c7
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1001a765
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_10022212
mov [ esi + 0x4 ] eax
sub_100186ff
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_100226cf
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10018750
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100186ff
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_1001877e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_100226cf
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100187cf
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001877e
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_100187fd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_100226cf
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1001884e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100187fd
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_1001887c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_100226cf
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100188cd
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001887c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_10018900
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_10018910
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_100189f8
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_10018a28
mov edi edi
push ebp
mov ebp esp
call sub_1001d6c7
push [ ebp + 0x8 ]
call sub_1001d51c
push [ rw-data ]
call sub_1001d77b
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_10018a51
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_10018aa6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_10018ac3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_10018ae7
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_10022787
push r--data
push r--data
call sub_10018ac3
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_10022840
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_1001ea27
call sub_1001a341
mov eax r--data
mov [ esp ] r--data
call sub_10018aa6
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_10022840
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_10018b6c
push 0x18
push r--data
call sub_1001cd00
push 0x8
call sub_1001ee8b
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10018c83
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_1001cd45
retn
mov [ rw-data ] ebx
push 0x8
call sub_1001edb1
pop ecx
push [ ebp + 0x8 ]
call sub_10018a7c
push r--data
mov eax r--data
call sub_10018aa6
pop ecx
push [ rw-data ]
call sub_1001d77b
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_10018aa6
pop ecx
push [ rw-data ]
call sub_1001d77b
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_1001d772
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_1001d77b
mov edi eax
call sub_1001d772
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_1001d77b
mov edi eax
push [ rw-data ]
call sub_1001d77b
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_10018cd3
mov edi edi
push esi
call sub_1001d772
mov esi eax
push esi
call sub_1001d1fe
push esi
call sub_10022bb3
push esi
call sub_100174c9
push esi
call sub_1001de8a
push esi
call sub_10022ba4
push esi
call sub_10022992
push esi
call sub_10007d1e
push esi
call sub_10022981
push sub_10018cae
call sub_1001d700
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_10018d21
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_10015500
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_1001be43
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_10017600
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_10022c30
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_1001c040
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_1001c040
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_1001be43
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_10022c30
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_1001c040
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_10022c30
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_10022c30
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_1001c040
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_10022c30
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_10018f64
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10022cda
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
push esi
call sub_10018d21
neg eax
sbb eax eax
pop ecx
not eax
pop ecx
and eax esi
sub_10018f8b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
push 0x1
push 0x0
push 0x0
push [ ebp - 0x4 ]
call sub_1001c040
sub eax [ rw-data ]
mov ecx [ ebp - 0x8 ]
sbb edx [ rw-data ]
xor edi edi
push edi
add eax ecx
push 0x2710
adc edx edi
push edx
push eax
call sub_1001bfd0
pop edi
leave
retn
sub_10018fd0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
push 0x1
push 0x0
push 0x0
push [ ebp - 0x4 ]
call sub_1001c040
mov ecx [ ebp - 0x8 ]
xor esi esi
add eax ecx
adc edx esi
mov [ rw-data ] eax
mov [ rw-data ] edx
xor eax eax
pop esi
leave
retn
sub_10019009
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_1001bfd0
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_1001905a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_100190a6
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_100190df
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_10019133
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001a134
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_10019169
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_10015160
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_1001a134
add esp 0x20
pop esi
pop ebp
retn
sub_1001919c
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_10019273
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_1001d9c7
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_10019273
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_10015160
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_1001a134
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_1001919c
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_100190df
pop ebx
leave
retn
sub_10019312
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_10022949
call sub_10022949
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_10019387
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1001d9c7
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_1001d9c7
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_100193b3
mov edi edi
push ebp
mov ebp esp
call sub_1001d9c7
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_100193da
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1001d9c7
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_1001d9c7
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_1001d9c7
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_10022949
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_1001942c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_10019169
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_10022d20
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_1001948c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_100194bf
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_100194f5
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1001954e
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10017015
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10019577
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100170e2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_1001959e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_100185f0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_100195fd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_1001d9c7
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_1001d9c7
add eax 0x90
dec [ eax ]
call sub_1001d9c7
and [ eax + 0x90 ] 0x0
jmp sub_100228fd
sub_10019646
push 0x10
push r--data
call sub_1001cd00
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001970c
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_1001d9c7
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_1001cd45
retn
call sub_10022949
call sub_10022949
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_10022d20
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_10019727
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_1001d9c7
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_1001976c
push 0x8
push r--data
call sub_1001cd00
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_1001cd45
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_100190d8
mov [ ebp - 0x4 ] 0xfffffffe
sub_100197c1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_100197fd
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_10022949
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_1001959e
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_100198c1
push 0x2c
push r--data
call sub_1001cd00
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_10019387
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_1001d9c7
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_1001d9c7
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_1001d9c7
mov [ eax + 0x88 ] esi
call sub_1001d9c7
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_1001942c
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_100199e7
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
sub_1001995a
mov esp [ ebp - 0x18 ]
call sub_1001d9c7
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_10019646
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_100199e7
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_100199e7
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_100193da
pop ecx
call sub_1001d9c7
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_1001d9c7
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_100193b3
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_1001976c
pop ecx
pop ecx
sub_10019a5d
push 0xc
push r--data
call sub_1001cd00
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_10022d6c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_10022d6c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10022949
push ebx
push esi
call sub_10022d6c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10022d6c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10022d6c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10022d6c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_10022d6c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10022d6c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_1001df90
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_10022d6c
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_100197c1
pop ecx
pop ecx
push eax
push esi
call sub_1001df90
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_1001cd45
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_100197c1
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_10019bdc
push 0x8
push r--data
call sub_1001cd00
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_100197c1
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_100190d8
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_10019a5d
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001cd45
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_100197c1
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_100190d8
jmp r-xdata
sub_10019c6e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_10019bdc
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_100190a6
call sub_100190df
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_10019646
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_100198c1
add esp 0x28
test eax eax
je r-xdata
sub_10019cdc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_1001d9c7
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_1001d9c7
lea edi [ eax + 0x80 ]
call sub_1001d772
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_10019312
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_10022949
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1001919c
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10019c6e
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_10019dd0
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_10022949
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_1001d9c7
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_10022949
call sub_100228fd
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10019cdc
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_1001d9c7
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_1001d9c7
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_1001d9c7
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_10022d6c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_10019312
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_10022949
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_1001976c
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_1001d9c7
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_1001d9c7
mov edi [ eax + 0x94 ]
call sub_1001d9c7
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_100197fd
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_100197fd
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_10016f67
test al al
jne r-xdata
call sub_10022949
cmp eax 0x19930522
jne r-xdata
call sub_1001d9c7
call sub_1001d9c7
call sub_1001d9c7
mov [ eax + 0x88 ] esi
call sub_1001d9c7
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_1001959e
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_1001976c
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_1001954e
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_1001905a
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_10019c6e
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_100190df
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_10019646
add esp 0x10
push [ esi + 0x1c ]
call sub_10019878
sub_1001a134
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1001d9c7
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_10019dd0
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_10019646
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1001a21a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_1001d77b
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_1001d77b
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_10022d7e
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_1001d700
mov [ esi ] eax
add esi 0x4
push esi
call sub_1001d700
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1001bdb3
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1001bdb3
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_1001d700
pop ecx
mov [ rw-data ] eax
sub_1001a2d4
mov edi edi
push esi
push 0x4
push 0x20
call sub_1001bd67
mov esi eax
push esi
call sub_1001d700
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_1001a305
push 0xc
push r--data
call sub_1001cd00
call sub_10018a94
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1001a21a
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001a33b
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
sub_1001a358
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_100229e7
test eax eax
je r-xdata
push 0xa
call sub_1001d51c
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_100229f4
pop ecx
push 0x3
call sub_10018cae
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_10015500
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_1001a46f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_1001a490
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10017636
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10017636
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10017636
push [ esi + 0xc0 ]
call sub_10017636
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_1002323c
push [ edi ]
call sub_10017636
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_10017636
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10017636
pop ecx
push [ esi + 0xb0 ]
call sub_10017636
push [ esi + 0xbc ]
call sub_10017636
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10017636
push [ esi + 0xbc ]
call sub_10023659
pop ecx
pop ecx
push eax
call sub_10017636
pop ecx
push eax
call sub_10017636
push [ esi + 0xbc ]
call sub_1002344a
pop ecx
pop ecx
sub_1001a5d9
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1001a668
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_1001a701
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_1001a5d9
pop ecx
pop edi
sub_1001a727
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_1001a5d9
pop ecx
test esi esi
je r-xdata
push esi
call sub_1001a668
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_1001a490
pop ecx
sub_1001a765
push 0xc
push r--data
call sub_1001cd00
call sub_1001d9c7
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_1001ee8b
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_1001a727
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001a7cf
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_1001d9c7
mov esi [ eax + 0x6c ]
mov eax esi
call sub_1001cd45
retn
push 0x20
call sub_10018a28
pop ecx
sub_1001a7db
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xa8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xd4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_1001a82e
push 0x8
push r--data
call sub_1001cd00
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1001cd45
retn
push 0xd
call sub_1001ee8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001a8db
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_10017636
pop ecx
push 0xc
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_1001a668
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001a8e7
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_10017636
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_1001a490
pop ecx
sub_1001a8f0
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
dec edi
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100174d8
add esp 0x14
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100239ad
add esp 0xc
test eax eax
je r-xdata
pop esi
sub_1001a930
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_10015500
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_100177c0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_10023a21
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
mov [ edi + 0x8f ] bl
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100174d8
add esp 0x14
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_10023a21
add esp 0x10
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
cmp bl 0x2c
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100174d8
add esp 0x14
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_100177c0
test eax eax
sub_1001aa59
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001df09
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100174d8
add esp 0x14
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001a8f0
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001a8f0
add esp 0x14
sub_1001aac6
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0x10 ] ebx
call sub_1001bd22
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
mov [ ebp - 0x8 ] ebx
lea ebx [ esi + 0x10 ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_1001a8f0
mov eax [ ebp - 0xc ]
add esp 0x18
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] r--data
push [ ebx + 0x58 ]
mov eax [ ebp - 0xc ]
push [ eax ]
call sub_100185f0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100174d8
add esp 0x14
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xc
shl eax 0x4
lea ebx [ eax + esi ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push r--data
push [ eax ]
push 0x3
push 0x351
push edi
call sub_1001a8f0
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0x10 ] 0x0
push r--data
push 0x351
push edi
call sub_100239ad
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
call sub_10017636
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10017636
pop ecx
mov eax [ ebp - 0x14 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10017636
pop ecx
push [ esi + 0x54 ]
call sub_10017636
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_10017636
pop ecx
sub_1001ac43
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_1001d9c7
add eax 0x9c
lea ecx [ eax + 0x28 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0x2c ]
lea ebx [ eax + 0x20 ]
add eax 0xaf
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_100171f0
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_1001a930
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_100185f0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1001df09
add esp 0xc
xor esi esi
test eax eax
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_10024091
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
push [ ebp - 0xa8 ]
call sub_100185f0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_1001aa59
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_10015190
add esp 0xc
mov eax [ ebp - 0xa0 ]
cmp eax esi
je r-xdata
xor eax eax
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1001df09
add esp 0xc
test eax eax
je r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_10015190
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov [ eax ] esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
jmp r-xdata
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_10023a21
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
cmp [ ebp - 0xa4 ] esi
je r-xdata
sub_1001ae74
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov ebx ecx
call sub_1001d9c7
push [ ebp + 0x8 ]
mov edi eax
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ebx
add edi 0x1d0
call sub_1001ac43
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x4
lea ebx [ eax + esi ]
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_100185f0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_100171f0
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_1001bd22
pop ecx
pop ecx
mov [ ebp - 0x190 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
mov eax [ ebx + 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1a4 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
add ecx 0x6
imul ecx ecx 0x6
mov [ ebp - 0x194 ] eax
mov eax [ eax ]
mov [ ebp - 0x1a8 ] eax
lea eax [ ecx + esi ]
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c4 ]
push eax
call sub_10015190
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x190 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_1001df09
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x190 ]
mov ecx [ ebp - 0x194 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_10015190
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100174d8
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x198 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x20 ]
mov [ ebp - 0x19c ] eax
mov eax edi
mov eax [ ebp + 0x8 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x198 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1bc ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1bc ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x1a4 ] rw-data
je r-xdata
mov eax [ ebp - 0x1a4 ]
push [ ebp - 0x190 ]
mov [ ebx + 0x48 ] eax
call sub_10017636
mov eax [ ebp - 0x1a8 ]
pop ecx
mov ecx [ ebp - 0x194 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 ]
mov edx [ eax ]
mov [ edi ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x190 ]
add ecx 0x5
shl ecx 0x4
mov [ eax ] 0x1
mov [ ecx + esi ] eax
mov eax [ ebp + 0x8 ]
add eax 0x5
shl eax 0x4
lea edi [ eax + esi ]
push [ edi ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_1002443c
add esp 0x20
test eax eax
je r-xdata
push [ edi ]
call sub_10017636
push [ ebx + 0x54 ]
call sub_10017636
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_10015837
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi ] eax
sub_1001b176
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
call sub_1001aac6
cmp [ ecx ] 0x4c
jne r-xdata
shl eax 0x4
mov eax [ eax + esi + 0x48 ]
jmp r-xdata
push eax
call sub_1001ae74
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ecx
call sub_1001ac43
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ ecx + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
lea edi [ esi + 0x48 ]
cmp [ ecx + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_100185f0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
push ebx
lea ecx [ ebp - 0x88 ]
call sub_1001ae74
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_1002447e
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_100171f0
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_100177c0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_10023a21
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] 0x0
call sub_1001ae74
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_10024540
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_1001b391
push 0x14
push r--data
call sub_1001cd00
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_1001d9c7
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_1001a765
or [ esi + 0x70 ] 0x10
mov [ ebp - 0x4 ] ebx
push 0x1
push 0xd8
call sub_1001bd67
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi ebx
je r-xdata
call sub_1001be43
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10017600
add esp 0x14
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001b4fc
mov eax [ ebp - 0x20 ]
push 0xc
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x6c ]
mov eax edi
call sub_1001a701
mov [ ebp - 0x4 ] ebx
call sub_1001b4bf
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx edi
call sub_1001b176
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
call sub_1001cd45
retn
push edi
call sub_1001a668
push edi
call sub_1001a490
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0xc
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] 0x2
lea ebx [ esi + 0x6c ]
mov eax ebx
call sub_1001a727
push edi
call sub_1001a668
pop ecx
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_100185f0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1001b4cb
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov edi [ ebx ]
mov eax rw-data
call sub_1001a727
push 0x18
mov eax [ rw-data ]
add eax 0xc
push eax
push rw-data
call sub_10015190
add esp 0xc
call sub_1001a7db
sub_1001b501
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_10017636
pop ecx
sub_1001b521
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_10024580
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10015160
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_100245c9
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_10017636
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_10017636
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_1001b501
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_10018252
pop ecx
cmp eax ebx
je r-xdata
call sub_1001c4d0
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_10015500
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_100245c9
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_10018252
pop ecx
cmp eax ebx
je r-xdata
call sub_1001c4d0
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_1001b501
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_1001b501
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_10018252
pop ecx
cmp eax ebx
je r-xdata
call sub_1001c4d0
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_1001b8c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1001b521
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1001b934
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
lea edi [ esi + 0xc0 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ edi ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_1001bd22
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_1001bd67
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_1001bd67
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_1001bd67
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_1001bd67
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_1001dd0b
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_10017636
push [ ebp - 0x1c ]
call sub_10017636
push [ ebp - 0x20 ]
call sub_10017636
push [ ebp - 0x28 ]
call sub_10017636
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_10017636
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x1
mov [ ebp - 0x30 ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_1002443c
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_1001b8c6
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_1001b8c6
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_10015190
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_10015190
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_10015190
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10017636
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10017636
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10017636
push [ esi + 0xc0 ]
call sub_10017636
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
cmp ecx edx
mov [ ebp - 0x20 ] ecx
jg r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
inc ecx
inc ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_1001bd22
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_10018252
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_1001bd67
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002477d
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1001bdb3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002489b
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_1001be01
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_1001be69
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1001be56
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_1001be01
pop ecx
mov esi eax
call sub_1001be43
mov [ eax ] esi
pop esi
pop ebp
retn
sub_1001be8c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_10018678
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1001be43
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10024ab6
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_100226cf
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1001b8c6
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1001bfa1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001be8c
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_1001bfd0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_1001c040
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1001c0f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
mov esi ebx
call sub_10018678
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_1001be43
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10017600
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_100226cf
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
push esi
call sub_100171f0
pop ecx
push eax
lea eax [ ebp - 0x30 ]
push esi
push eax
call sub_10025670
add esp 0x18
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x8 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x8 ]
fldz
fcom [ ecx + 0x10 ]
fnstsw ax
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x8 ]
call sub_1001be43
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_1001c22d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_1001be43
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10017600
add esp 0x14
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_1001be43
push 0x16
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_1001be43
push 0x22
jmp r-xdata
pop edi
mov [ ebp - 0x4 ] ebx
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10017600
add esp 0x14
mov eax esi
jmp r-xdata
mov edi ecx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov [ ecx ] dl
inc ecx
inc [ ebp - 0x4 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov [ ecx ] bl
dec ecx
mov [ esi ] bl
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_1001c30a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_1001c22d
pop ebp
retn
sub_1001c340
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10015160
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10015160
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1001ce98
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_1001ce4e
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10015160
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10015160
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_1001ce7e
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1001ce98
mov eax [ ebp + 0xc ]
push r--data
call sub_10022840
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10015160
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_1001ce65
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10015160
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_1001c4fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_1001ed07
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_1001ed07
pop ecx
sub_1001c602
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1001c689
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_1001c689
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_1001c602
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_1001c7bc
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_1001c76c
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_1001c82b
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1001c882
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_1001c882
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_1001c82b
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_1001c911
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
inc esi
inc esi
cmp [ esi ] di
jne r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_1001be43
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_10025fd7
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
inc esi
push 0x3
push esi
push r--data
call sub_10026187
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
cmp ecx edi
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax 0x80
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
inc esi
cmp [ esi ] ax
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_100260e1
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push 0x8
push r--data
push esi
call sub_100260e1
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_100260e1
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_1001cbc5
push 0x10
push r--data
call sub_1001cd00
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001ccf4
mov eax edi
call sub_1001cd45
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_1001bd22
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_10022bc2
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_10017636
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_10018434
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_1001edc8
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_100184a2
pop ecx
pop ecx
sub_1001cd00
push sub_1001c340
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1001cd5c
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_1001cdec
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_100262d5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_100262f4
jmp r-xdata
sub_1001cdec
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_10015160
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_1001cd5c
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1001ce4e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_1001ce7e
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1001ceaf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_1001d19b
push eax
call sub_100262f7
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_1001831c
add eax 0x20
cmp esi eax
jne r-xdata
call sub_1001831c
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_1001bd22
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_1001cf4b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_1001801d
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_1001cf7f
push 0xc
push r--data
call sub_1001cd00
xor eax eax
mov edi [ ebp + 0xc ]
xor esi esi
cmp edi esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
setne al
cmp eax esi
je r-xdata
call sub_1001be43
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0xc ] edi
push edi
call sub_100183f3
pop ecx
mov [ ebp - 0x4 ] esi
push edi
call sub_1001ceaf
mov esi eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
call [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
push edi
push esi
call sub_1001cf4b
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001d008
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
sub_1001d032
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10027378
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_1001be69
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_10027378
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_10027378
push 0x1
mov edi eax
call sub_10027378
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_100272f2
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_1001d0ce
push 0x10
push r--data
call sub_1001cd00
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1001be56
and [ eax ] 0x0
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] edi
call sub_1001be43
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1001cd45
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_100273ef
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1001be43
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_1001d032
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001d191
mov eax [ ebp - 0x1c ]
sub_1001d19b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_1001d1cd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_10017636
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_1001d20d
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_1001d77b
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1001d235
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_1001d19b
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1001be43
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_1001be43
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_1001831c
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_10020dee
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_100262f7
pop ecx
test eax eax
jne r-xdata
call sub_1001831c
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_10020dee
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_10020eca
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_100276d5
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1001d399
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1001d235
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1001d235
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_1001d491
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi esi
je r-xdata
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1001be43
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] esi
ja r-xdata
pop esi
pop ebp
retn
push esi
push esi
push esi
push esi
push esi
call sub_10017600
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push sub_100266d1
call sub_1001d399
add esp 0x18
cmp eax esi
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ edi ] cx
pop edi
call sub_1001be43
mov [ eax ] 0x22
sub_1001d51c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_10027957
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_10027957
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_100171f0
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_1001df09
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
push esi
call sub_100171f0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_1001df09
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_100171f0
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_10023a21
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100174d8
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_100239ad
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_100277ee
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
push r--data
push ebx
push edi
call sub_100239ad
add esp 0xc
test eax eax
je r-xdata
sub_1001d6c7
push 0x3
call sub_10027957
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_1001d51c
push 0xff
call sub_1001d51c
pop ecx
pop ecx
push 0x3
call sub_10027957
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_1001d700
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_100189f8
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_1001d77b
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_100189f8
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_1001d7f6
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_1001d77b
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_1001d82a
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_10017636
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_1001d867
push 0xc
push r--data
call sub_1001cd00
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_100189f8
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_1001ee8b
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001d93c
push 0xc
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_1001a5d9
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001d945
call sub_1001cd45
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_1001d94e
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_1001d7f6
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_1001bd67
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_10017636
pop ecx
xor esi esi
push 0x0
push esi
call sub_1001d867
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_1001d9e1
push 0x8
push r--data
call sub_1001cd00
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1001cd45
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_10017636
pop ecx
push 0xd
call sub_1001ee8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_10017636
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001dafb
push 0xc
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001db07
push esi
call sub_10017636
pop ecx
push edi
call sub_1001a668
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_10017636
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_1001a490
pop ecx
sub_1001db10
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_1001d9e1
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_1001db7e
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_100189f8
pop ecx
call sub_1001d82a
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_1001d7ed
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_10018cd3
push [ rw-data ]
call sub_1001d700
push [ rw-data ]
mov [ rw-data ] eax
call sub_1001d700
push [ rw-data ]
mov [ rw-data ] eax
call sub_1001d700
push [ rw-data ]
mov [ rw-data ] eax
call sub_1001d700
add esp 0x10
mov [ rw-data ] eax
call sub_1001ed0f
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_1001d9e1
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_1001bd67
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_1001d867
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_1001dd0b
mov edi edi
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
xor ebx ebx
cmp [ ebp + 0xc ] 0x1
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x94 ] esi
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push 0x80
lea edi [ ebp - 0x84 ]
mov ecx edi
push ecx
push [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_10027b15
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push ebx
push 0x4
mov edi rw-data
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_100279a2
add esp 0x18
test eax eax
je r-xdata
push 0x1
push esi
call sub_1001bd67
pop ecx
pop ecx
mov ecx [ ebp - 0x94 ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov [ esi ] bl
lea ecx [ esi - 0x1 ]
push ecx
push edi
push esi
push eax
call sub_10023a21
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_10027b15
add esp 0x18
mov [ ebp - 0x90 ] eax
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc edi
inc edi
cmp edi rw-data
mov [ esi ] al
jl r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100174d8
add esp 0x14
push edi
call sub_10017636
pop ecx
xor esi esi
inc esi
push esi
push eax
call sub_1001bd67
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
mov bl [ edi ]
movzx eax bl
push eax
call sub_1001884e
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call sub_10017636
pop ecx
push ebx
push [ ebp - 0x90 ]
mov [ ebp - 0x88 ] esi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_10027b15
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
sub_1001de99
push 0xc
push r--data
call sub_1001cd00
push 0xe
call sub_1001ee8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001df00
call sub_1001cd45
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_10017636
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_10017636
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_1001df09
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_1001be43
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_1001be43
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10017600
add esp 0x14
mov eax esi
jmp r-xdata
sub_1001df90
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1001e018 ]
jmp [ ecx * 4 + jump_table_1001e098 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1001e104 ]
pop esi
pop edi
pop ebp
jmp sub_1001c689
jmp [ ecx * 4 + jump_table_1001e2a0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1001e1a4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1001e2a0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1001e104 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1001e2a0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1001e104 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1001e104 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1001e104 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1001e2a0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1001e2a0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1001e2a0 ]
sub_1001e2f5
push 0x54
push r--data
call sub_1001cd00
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_1001bd67
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_1001bd67
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_1001cd45
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10022bc2
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10022bc2
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_1001e549
mov edi edi
push esi
push edi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
lea eax [ edi + 0x800 ]
jmp r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
pop esi
retn
cmp edi eax
jb r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push [ esi ]
call sub_10017636
and [ esi ] 0x0
pop ecx
mov eax [ esi ]
add edi 0x40
add eax 0x800
lea eax [ edi + 0xc ]
push eax
call [ DeleteCriticalSection@IAT ]
sub_1001e597
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_100226b1
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_1001bd67
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_100171f0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_100171f0
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_10017636
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_1001bd67
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_10017636
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1001df09
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100174d8
add esp 0x14
sub_1001e675
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_10027ba5
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_10027ba5
pop ecx
test eax eax
je r-xdata
call sub_10027ba5
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_1001e80f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_100226b1
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_1001e675
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_1001bd22
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_1001e675
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1001e8ca
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_1001bd22
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_1001bd22
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_10015190
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_10017636
pop ecx
mov [ ebp - 0x4 ] ebx
sub_1001ea01
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1001ea27
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1001ea4d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_1001ea7d
cmp [ rw-data ] 0x3
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov edi [ HeapFree@IAT ]
jle r-xdata
push [ rw-data ]
push 0x0
push [ rw-data ]
call edi
pop edi
pop ebx
push esi
mov esi [ rw-data ]
add esi 0x10
push 0x8000
push 0x0
push [ esi - 0x4 ]
call [ VirtualFree@IAT ]
push [ esi ]
push 0x0
push [ rw-data ]
call edi
add esi 0x14
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
pop esi
sub_1001eaf1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1001d94e
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_1001ec51
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_1001eaf1
pop ecx
pop ecx
pop ebp
retn
sub_1001ec71
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_1001ed0f
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_10022bc2
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_1001edc8
push 0xc
push r--data
call sub_1001cd00
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_1001d6c7
push 0x1e
call sub_1001d51c
push 0xff
call sub_10018a7c
push 0x18
call sub_1001bd22
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_1001be43
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_1001cd45
retn
push edi
call sub_10017636
pop ecx
push 0xfa0
push edi
call sub_10022bc2
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_10017636
pop ecx
call sub_1001be43
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001ee82
mov eax [ ebp - 0x1c ]
sub_1001ee8b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_1001edc8
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_10018a28
pop ecx
sub_1001eebe
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_1001eeee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_1001df90
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_1001f204
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_1001f2b4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_1001f3bc
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_1001f69d
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_1001f2b4
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_1001f204
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_1001f982
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_10027d46
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_1001be43
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_10027d46
sub_1001f9cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_10018678
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1001be43
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10017600
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_1001d19b
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + sub_10020547 ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_10020547
push edx
std
add [ eax ] edx
push ebx
sti
add [ eax ] edx
cmp ebx 0x1
adc cl ah
sti
add [ eax ] edx
sub eax 0x381001fc
cld
add [ eax ] edx
jle r-xdata
add [ eax ] edx
lodsb [ esi ]
std
add [ eax ] edx
sub_10020567
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1001d235
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_10020633
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1001be43
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10017600
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_10027d9f
call sub_10020567
add esp 0x18
cmp eax ebx
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] bl
pop esi
call sub_1001be43
mov [ eax ] 0x22
sub_100206bb
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_100257c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_1001be56
mov [ eax ] esi
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10015160
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_1001be56
xor esi esi
mov [ eax ] esi
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100262f7
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_10027650
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_1001d9c7
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_1001be43
mov [ eax ] 0x1c
call sub_1001be56
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_1001be69
pop ecx
jmp r-xdata
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_10024aee
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_1002896f
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_1002660f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_1002660f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_1002896f
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_10020dee
push 0x10
push r--data
call sub_1001cd00
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1001be56
and [ eax ] 0x0
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] edi
call sub_1001be43
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1001cd45
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_100273ef
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100206bb
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10020ec0
mov eax [ ebp - 0x1c ]
sub_10020eca
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_1001bd22
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_10020f13
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_1001be43
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_10020eca
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_1001d19b
pop ecx
push eax
call sub_10021eef
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_1001d19b
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_1001d19b
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_1001d19b
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_1001d19b
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_1002103e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10027378
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_1001be43
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_1001be69
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_100210b3
push 0x10
push r--data
call sub_1001cd00
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1001be56
and [ eax ] 0x0
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] edi
call sub_1001be43
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1001cd45
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_100273ef
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002103e
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10021185
mov eax [ ebp - 0x1c ]
sub_1002118f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_1001d19b
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
push 0x1
push ebx
push eax
call sub_100210b3
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_1001be43
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_100210b3
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_100210b3
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_1002132c
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_100257c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_1001d19b
mov ebx eax
xor eax eax
cmp [ esi + 0x4 ] eax
pop ecx
mov [ ebp - 0x1018 ] ebx
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_100276d5
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov edi ecx
sub edi edx
mov edx [ esi + 0xc ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_1001be43
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_100276d5
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add eax ebx
add esp 0x10
mov edi edx
cmp esi [ eax + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
add ecx edx
test [ eax + 0x4 ] 0x80
mov edi ecx
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_100276d5
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_100276d5
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_100276d5
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rw-data ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_10021678
push 0x10
push r--data
call sub_1001cd00
push [ ebp + 0x8 ]
call sub_100183f3
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1002132c
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100216b8
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_1001cd45
retn
sub_100216c2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_1001be43
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_1001801d
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_1002132c
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1001d19b
pop ecx
push eax
call sub_100276d5
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_1002175e
push 0xc
push r--data
call sub_1001cd00
push [ ebp + 0x8 ]
call sub_100183f3
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100216c2
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100217a3
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
sub_100217ad
push 0x10
push r--data
call sub_1001cd00
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be43
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10017600
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1001cd45
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_100273ef
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_1001be43
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_10027378
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10021884
mov eax [ ebp - 0x1c ]
call sub_1001be56
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_1002188e
push 0x10
push r--data
call sub_1001cd00
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10021924
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_10015725
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_10017636
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_1002192d
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_1001be56
and [ eax ] 0x0
call sub_1001be43
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_1001be56
mov [ eax ] ebx
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1001be56
mov [ eax ] ebx
call sub_1001be43
mov [ eax ] 0x9
jmp r-xdata
call sub_1001be56
mov [ eax ] ebx
call sub_1001be43
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10017600
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_1001bd22
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_10027650
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_1001be43
mov [ eax ] 0xc
call sub_1001be56
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_1001be69
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_1001be43
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_10027650
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_10027650
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_10027650
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_10021eef
push 0x10
push r--data
call sub_1001cd00
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_1001be56
and [ eax ] 0x0
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] esi
call sub_1001be43
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_1001cd45
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_100273ef
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_1001be56
mov [ eax ] esi
call sub_1001be43
mov [ eax ] 0x16
jmp r-xdata
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002192d
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10017600
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10021fe2
mov eax [ ebp - 0x1c ]
sub_10021fec
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_1002201b
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_10015500
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_1002207f
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_1002443c
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_1001b8c6
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_1001b8c6
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_10015500
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_10022212
push 0xc
push r--data
call sub_1001cd00
call sub_1001d9c7
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_1001ee8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100222ad
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_1001cd45
retn
push 0x20
call sub_10018a28
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_10017636
pop ecx
sub_100222b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10022332
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_100222b6
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_1002201b
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10015500
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_10021fec
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_1002207f
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10015500
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_10021fec
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_10022517
push 0x14
push r--data
call sub_1001cd00
or [ ebp - 0x20 ] 0xffffffff
call sub_1001d9c7
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_10022212
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_100222b6
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_1001bd22
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_1001cd45
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_10022332
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_1001be43
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_10017636
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_10017636
pop ecx
push 0xd
call sub_1001ee8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022678
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_10017636
pop ecx
sub_100226cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_10018678
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10024ab6
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1002443c
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10022787
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_1001d700
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_100227b0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_100227f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10022840
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1001c340
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_100227b0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_100227f0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10022949
push 0x8
push r--data
call sub_1001cd00
push [ rw-data ]
call sub_1001d77b
pop ecx
test eax eax
je r-xdata
call sub_100228fd
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_100229b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_100229f4
push 0x20
push r--data
call sub_1001cd00
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_1001d94e
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_1001cd45
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_100229b0
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_10018cae
mov [ ebp - 0x1c ] 0x1
push eax
call sub_1001d77b
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_1001be43
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10017600
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_1001ee8b
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_1001d772
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022b68
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_10022bc2
push 0x10
push r--data
call sub_1001cd00
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
sub_10022c30
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10022cda
mov edi edi
push esi
call sub_1001d94e
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
call sub_1001be43
mov [ eax ] 0xc
xor eax eax
pop esi
retn
mov eax [ esi + 0x44 ]
pop esi
retn
push 0x24
call sub_1001bd22
pop ecx
mov [ esi + 0x44 ] eax
test eax eax
je r-xdata
sub_10022d20
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_100262cc
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_100262cc
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_10022d7e
push 0x10
push r--data
call sub_1001cd00
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_1001be43
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_1001eebe
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_1001cd45
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022e18
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_10022e21
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
movzx ecx [ eax + 0x42 ]
movzx edx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
test esi esi
jne r-xdata
and [ ebp - 0xc ] 0x0
push ebx
push edi
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ecx
xor ebx ebx
inc ebx
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1001dd0b
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
mov ebx [ ebp - 0x8 ]
push ebx
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
mov eax edi
pop edi
mov [ esi + 0xac ] ebx
pop ebx
leave
retn
or eax 0xffffffff
leave
retn
sub_1002323c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_10017636
push [ esi + 0x8 ]
call sub_10017636
push [ esi + 0xc ]
call sub_10017636
push [ esi + 0x10 ]
call sub_10017636
push [ esi + 0x14 ]
call sub_10017636
push [ esi + 0x18 ]
call sub_10017636
push [ esi ]
call sub_10017636
push [ esi + 0x20 ]
call sub_10017636
push [ esi + 0x24 ]
call sub_10017636
push [ esi + 0x28 ]
call sub_10017636
push [ esi + 0x2c ]
call sub_10017636
push [ esi + 0x30 ]
call sub_10017636
push [ esi + 0x34 ]
call sub_10017636
push [ esi + 0x1c ]
call sub_10017636
push [ esi + 0x38 ]
call sub_10017636
push [ esi + 0x3c ]
call sub_10017636
add esp 0x40
push [ esi + 0x40 ]
call sub_10017636
push [ esi + 0x44 ]
call sub_10017636
push [ esi + 0x48 ]
call sub_10017636
push [ esi + 0x4c ]
call sub_10017636
push [ esi + 0x50 ]
call sub_10017636
push [ esi + 0x54 ]
call sub_10017636
push [ esi + 0x58 ]
call sub_10017636
push [ esi + 0x5c ]
call sub_10017636
push [ esi + 0x60 ]
call sub_10017636
push [ esi + 0x64 ]
call sub_10017636
push [ esi + 0x68 ]
call sub_10017636
push [ esi + 0x6c ]
call sub_10017636
push [ esi + 0x70 ]
call sub_10017636
push [ esi + 0x74 ]
call sub_10017636
push [ esi + 0x78 ]
call sub_10017636
push [ esi + 0x7c ]
call sub_10017636
add esp 0x40
push [ esi + 0x80 ]
call sub_10017636
push [ esi + 0x84 ]
call sub_10017636
push [ esi + 0x88 ]
call sub_10017636
push [ esi + 0x8c ]
call sub_10017636
push [ esi + 0x90 ]
call sub_10017636
push [ esi + 0x94 ]
call sub_10017636
push [ esi + 0x98 ]
call sub_10017636
push [ esi + 0x9c ]
call sub_10017636
push [ esi + 0xa0 ]
call sub_10017636
push [ esi + 0xa4 ]
call sub_10017636
push [ esi + 0xa8 ]
call sub_10017636
add esp 0x2c
sub_100233d1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
mov ebx rw-data
je r-xdata
mov esi ebx
push 0xb8
push 0x1
call sub_1001bd67
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi ] esi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax edi
call sub_10022e21
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xb4 ] 0x1
jmp r-xdata
push esi
call sub_1002323c
push esi
call sub_10017636
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add edi 0xd4
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_1002344a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10017636
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10017636
pop ecx
push esi
call sub_10017636
pop ecx
sub_1002348f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
cmp [ ebx + 0x1c ] esi
jne r-xdata
push 0x30
push 0x1
call sub_1001bd67
mov edi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
cmp [ ebx + 0x18 ] esi
jne r-xdata
mov esi [ ebx + 0xbc ]
push 0xc
pop ecx
push 0x4
[ edi ] [ esi ]
call sub_1001bd22
xor esi esi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x8 ] rw-data
jmp r-xdata
mov [ eax ] esi
cmp [ ebx + 0x1c ] esi
je r-xdata
push [ ebp + 0x8 ]
call sub_10017636
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0xb4 ]
mov esi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] esi
mov [ eax + 0x8 ] ecx
push 0x4
call sub_1001bd22
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
push eax
call esi
mov [ eax ] ecx
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
movzx edi [ ebx + 0x3e ]
push esi
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1001dd0b
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1001dd0b
or [ ebp - 0xc ] eax
lea eax [ esi + 0x8 ]
push eax
push 0x10
push edi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1001dd0b
add esp 0x3c
or eax [ ebp - 0xc ]
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xbc ] eax
xor eax eax
push eax
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
jmp r-xdata
push esi
call sub_1002344a
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebx + 0xb0 ]
call sub_10017636
push [ ebx + 0xbc ]
call sub_10017636
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_10017636
push [ ebp - 0x8 ]
call sub_10017636
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_10023659
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10017636
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10017636
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10017636
pop ecx
push esi
call sub_10017636
pop ecx
sub_100236e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x30
push 0x1
call sub_1001bd67
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_1001bd22
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_10017636
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0xc
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_1001bd22
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001dd0b
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001dd0b
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001dd0b
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001dd0b
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001dd0b
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001dd0b
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_1001dd0b
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001dd0b
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001dd0b
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001dd0b
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001dd0b
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001dd0b
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001dd0b
add esp 0x3c
or eax edi
je r-xdata
push ebx
call sub_10017636
push [ ebp - 0x8 ]
call sub_10017636
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_10023659
push ebx
call sub_10017636
push [ ebp - 0x8 ]
call sub_10017636
push [ ebp - 0x4 ]
call sub_10017636
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_10017636
push [ esi + 0xb0 ]
call sub_10017636
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0xbc
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_100239ad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_1001be43
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_1001be43
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10017600
add esp 0x14
mov eax esi
jmp r-xdata
sub_10023a21
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_1001be43
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_1001be43
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10017600
add esp 0x14
mov eax esi
jmp r-xdata
sub_10023ad6
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_10028b4b
pop ecx
pop ecx
test eax eax
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_10023b38
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
test esi esi
je r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_100185f0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_100185f0
pop ecx
pop ecx
test eax eax
je r-xdata
lea esi [ ebp - 0xc ]
call [ GetACP@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10015160
leave
retn
push r--data
push esi
call sub_100185f0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_10028b9d
pop ecx
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0xb
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
sub_10023bdc
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
inc eax
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_10023c00
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
mov al cl
sub al 0x61
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
mov al cl
sub al 0x41
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
shl esi 0x4
lea esi [ esi + eax - 0x30 ]
add cl 0xf9
sub_10023c34
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_10023c4f
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1001d9c7
mov esi eax
mov edx edi
add esi 0x9c
call sub_10023c00
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10028b4b
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_10023bdc
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10015160
leave
retn 0x4
or [ esi + 0x8 ] 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
sub_10023ce7
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or eax 0x400
push eax
mov esi ecx
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x7c ]
call sub_10023c00
cmp [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10015160
leave
retn
mov esi [ esi ]
push edi
mov edx esi
call sub_10023c34
push esi
mov edi eax
call sub_100171f0
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_10023d5b
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1001d9c7
mov esi eax
mov edx edi
add esi 0x9c
call sub_10023c00
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10028b4b
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028b4b
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028b4b
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028ca5
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028b4b
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_100171f0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_10023bdc
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_100171f0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push ebx
mov [ esi + 0x18 ] edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_10023ce7
pop ecx
pop ecx
test eax eax
je r-xdata
sub_10023f2d
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1001d9c7
mov esi eax
mov edx edi
add esi 0x9c
call sub_10023c00
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028b4b
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10015160
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028b4b
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_10023ce7
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
sub_10023fee
push [ esi ]
call sub_100171f0
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_100171f0
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_10023c34
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_10023d5b
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_10024055
push [ esi ]
call sub_100171f0
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_10023c34
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_10023f2d
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_10024091
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1001d9c7
mov ebx [ ebp + 0x8 ]
mov esi eax
add esi 0x9c
test ebx ebx
jne r-xdata
lea eax [ ebx + 0x40 ]
lea edi [ esi + 0x4 ]
mov [ esi ] ebx
mov [ edi ] eax
test eax eax
je r-xdata
or [ esi + 0x8 ] 0x104
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push edi
push 0x16
push r--data
call sub_10023ad6
add esp 0xc
xor eax eax
mov ecx ebx
sub ebx 0xffffff80
neg ecx
sbb ecx ecx
and ecx ebx
mov edi esi
call sub_10023b38
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
mov [ esi + 0x8 ] 0x104
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp edi 0xfde8
je r-xdata
push edi
call sub_100171f0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_10023c4f
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
call sub_10024055
cmp [ eax ] 0x0
je r-xdata
cmp edi 0xfde9
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
push 0x40
push r--data
call sub_10023ad6
add esp 0xc
test eax eax
je r-xdata
call sub_10023fee
jmp r-xdata
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ esi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
call sub_10024055
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_10023fee
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ esi + 0x18 ]
mov [ eax ] cx
mov cx [ esi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] di
xor eax eax
inc eax
jmp r-xdata
mov edi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ esi + 0x18 ]
call edi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_1001df09
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ esi + 0x1c ]
call edi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100174d8
add esp 0x14
jmp r-xdata
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_1001c30a
add esp 0x10
sub_10024282
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_10024580
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10015160
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_100245c9
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_10017636
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_10015500
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1001b501
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_10018252
pop ecx
cmp eax ebx
je r-xdata
call sub_1001c4d0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_1002443c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10024282
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1002447e
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_10024540
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_10024580
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_10028b9d
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10015160
leave
retn
sub_100245c9
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10015160
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_10015500
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_1001b501
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_10018252
pop ecx
cmp eax edi
je r-xdata
call sub_1001c4d0
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_100171f0
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_1001bd67
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_10017636
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_1002477d
push 0xc
push r--data
call sub_1001cd00
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_1001be43
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_1001cd45
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_1001d20d
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_1001f69d
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10024879
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_10015500
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_1002489b
push 0x10
push r--data
call sub_1001cd00
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_10018252
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_10017636
pop ecx
jmp r-xdata
call sub_1001cd45
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_1001d20d
pop ecx
call sub_1001be43
push 0x4
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_1001eebe
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100249df
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_1001f3bc
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_1001d20d
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_1001f69d
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_1001be43
call sub_1001be43
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_1001d20d
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1001be01
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_1001be43
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_1001be43
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_10015190
push ebx
call sub_1001eebe
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_1001eeee
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1001be01
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_10015190
push ebx
push [ ebp - 0x20 ]
call sub_1001eeee
add esp 0x14
mov eax esi
sub_10024ab6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10024b01
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_1001bfa1
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_1001884e
test eax eax
movsx eax [ esi ]
push eax
call sub_1001bfa1
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10024b74
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_10024bf6
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_10024c12
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_10028e65
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_10028dbd
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_10024c6e
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_100171f0
inc eax
push eax
push esi
add esi edi
push esi
call sub_1001df90
add esp 0x10
sub_10024cb3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_10018678
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_1001be43
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_1001be43
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_10024c6e
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_10017600
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100174d8
add esp 0x14
push r--data
push ebx
push esi
call sub_1001df09
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_1001df90
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_10024e22
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10029089
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10017600
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_10024cb3
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_10028f0d
add esp 0x10
cmp eax ebx
je r-xdata
sub_10024ef2
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024e22
add esp 0x18
pop ebp
retn
sub_10024f12
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_10018678
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_1001be43
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_1001be43
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_10017600
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_10024ef2
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_10028d90
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10029200
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10029200
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_10015500
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_10029200
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_10029120
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_10029120
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_10029120
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_10025285
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_10018678
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_1001be43
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10017600
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_10024c6e
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_10024c6e
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_10024c6e
push edi
push 0x30
push esi
call sub_10015500
add esp 0xc
sub_1002537c
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10029089
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10017600
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_10025285
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_10028f0d
add esp 0x10
cmp eax ebx
je r-xdata
sub_10025437
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10029089
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_10017600
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_10028f0d
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10024cb3
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_10025285
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_10025531
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024e22
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002537c
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024f12
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10025437
jmp r-xdata
sub_100255b9
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10025531
add esp 0x1c
pop ebp
retn
sub_100255dc
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_1002921f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
sub_10025645
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
push 0x0
call eax
retn
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_10025670
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_10029d13
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1002928b
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_10025720
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_100257c0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_100257eb
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100174d8
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_1002a67d
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_1001be56
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1001be43
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10017600
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_100274b6
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] __dos_header
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_1001be56
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1001be43
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_1001be43
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_1001be69
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_1001be69
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_1001be43
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_10027271
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_1002103e
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ esi ]
mov [ ebp - 0x24 ] ebx
call sub_1002192d
add esp 0xc
test eax eax
jne r-xdata
call sub_1001be56
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_1002103e
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
push [ esi ]
call sub_1001d032
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_1001be69
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_100272f2
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_1002a40b
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_1002192d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_10027650
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_10027650
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_1001d032
pop ecx
call sub_1001be43
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_1002103e
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_10020dee
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_1002103e
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_10027650
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_10027650
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_10025f0b
push 0x14
push r--data
call sub_1001cd00
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_1001be43
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_10017600
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_1001cd45
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_100257eb
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10025fa9
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_10025fa9
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_1002748f
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_10025fd7
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10025f0b
add esp 0x18
pop ebp
retn
sub_10025ff7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_1002a6b6
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_1002a6b6
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_100260e1
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10025ff7
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_10026187
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_100261c0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100261e0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_10015160
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_10026225
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10026225
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_100261e0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_100262d5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_100262f4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_100262cc
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_100262d5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_100262f7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_1001be43
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_10017600
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_1002635b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_1001d19b
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_1002a76b
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_1001d19b
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
push esi
call sub_1001d19b
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_1001d19b
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_1001d19b
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_1001d19b
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_1001d19b
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_1001d19b
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_1001d19b
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_1001d19b
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10027d29
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_1001d19b
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_1001d19b
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_1001d235
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_100264f8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_10024ab6
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1001be43
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10026629
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_1002635b
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_10026658
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_10026629
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_1002667f
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebx ]
dec [ ebp + 0x8 ]
push eax
mov eax edi
call sub_10026629
inc ebx
inc ebx
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_1001be43
cmp [ eax ] 0x2a
jne r-xdata
push 0x3f
mov eax edi
call sub_10026629
pop ecx
sub_100266d1
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x43c ] esi
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
call sub_10018678
test esi esi
jne r-xdata
xor esi esi
cmp edi esi
jne r-xdata
call sub_1001be43
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
movzx ecx [ edi ]
mov [ ebp - 0x420 ] esi
mov [ ebp - 0x414 ] esi
mov [ ebp - 0x434 ] esi
mov [ ebp - 0x458 ] esi
mov [ ebp - 0x41c ] ecx
cmp cx si
je r-xdata
call sub_1001be43
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop edx
add edi edx
cmp [ ebp - 0x420 ] esi
mov [ ebp - 0x460 ] edi
jl r-xdata
call sub_10017600
add esp 0x14
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x434 ] esi
je r-xdata
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
cmp [ ebp - 0x434 ] 0x7
jne r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov esi [ ebp - 0x434 ]
imul eax eax 0x9
movzx eax [ eax + esi + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x434 ] eax
cmp eax esi
je r-xdata
mov edi [ ebp - 0x460 ]
mov ebx [ ebp - 0x418 ]
jmp [ eax * 4 + jump_table_10027251 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x45c ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x43c ]
push ecx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_10026629
pop ecx
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
movzx eax [ edi ]
xor esi esi
mov [ ebp - 0x41c ] eax
cmp ax si
je r-xdata
or [ ebp - 0x408 ] edx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x42c ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x40c ] eax
test eax eax
jge r-xdata
movzx eax [ edi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ edi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edx
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ edi + 0x2 ] 0x32
jne r-xdata
add edi 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp - 0x40c ] esi
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add edi 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add edi edx
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x418 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax edx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x454 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x430 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x42e ] ax
mov [ ebp - 0x424 ] edx
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x418 ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x45c ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax edx
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_10017636
and [ ebp - 0x458 ] 0x0
pop ecx
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edx
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x430 ]
call sub_1002667f
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_10026658
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp cx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x45c ]
movsx eax cl
push [ ebp - 0x40c ]
mov [ ebp - 0x418 ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
call sub_100264e2
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edx
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_10024ab6
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x430 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_100264f8
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x434 ] 0x0
add eax edx
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_1002667f
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_10026658
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_1001bd22
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push ebx
push edi
call sub_10025720
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_10026658
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x43c ]
lea esi [ ebp - 0x420 ]
call sub_10026629
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x41c ] 0x0
pop ecx
jg r-xdata
call sub_100171f0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x41c ]
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_100264f8
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_10027271
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_100272f2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10027378
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_1001be56
and [ eax ] 0x0
call sub_1001be43
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_1001be56
mov [ eax ] esi
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_10017600
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_100273ef
push 0xc
push r--data
call sub_1001cd00
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10027486
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10022bc2
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_1002748f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_100274b6
push 0x18
push r--data
call sub_1001cd00
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_1001edc8
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_1001ee8b
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10027647
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_1001cd45
retn
push 0x40
push 0x20
call sub_1001bd67
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_100273ef
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_1001ee8b
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10027589
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10022bc2
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_10027650
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_10027378
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_1001be43
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_1001be69
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_100276d5
push 0x14
push r--data
call sub_1001cd00
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1001be56
and [ eax ] 0x0
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] edi
call sub_1001be43
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1001cd45
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_100273ef
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1001be56
mov [ eax ] edi
call sub_1001be43
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10017600
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_1001be43
mov [ eax ] 0x9
call sub_1001be56
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10027650
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100277e4
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_100277ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_1001d772
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_1001d77b
pop ecx
test eax eax
je r-xdata
push eax
call sub_1001d77b
pop ecx
test eax eax
je r-xdata
push eax
call sub_1001d77b
push [ rw-data ]
mov esi eax
call sub_1001d77b
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_1001d700
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1001d700
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1001d700
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1001d700
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_1001d700
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_1001d77b
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_10027957
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_100279a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100279d6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ GetLocaleInfoW@IAT ]
push esi
push edi
xor edi edi
xor esi esi
inc edi
cmp eax esi
jne r-xdata
cmp eax 0x2
je r-xdata
push esi
push esi
push edi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoA@IAT ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10015160
leave
retn
jle r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_1001b501
pop ecx
mov eax esi
jmp r-xdata
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_10018252
pop ecx
cmp eax esi
je r-xdata
call sub_1001c4d0
mov edi esp
cmp edi esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp + 0x1c ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp edi esi
je r-xdata
sub_10027b15
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100279d6
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10027b52
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_10027bbd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1001be43
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10017600
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_1001be43
mov [ eax ] 0x2a
call sub_1001be43
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_1001be43
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10017600
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_10015500
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_10015500
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10027d46
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_1001d235
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_10027d79
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_10027d46
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_10027d9f
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x238 ] eax
call sub_10018678
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1001be43
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
xor eax eax
cmp ebx eax
je r-xdata
push esi
call sub_1001d19b
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc ebx
xor eax eax
cmp [ ebp - 0x228 ] eax
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
xor esi esi
cmp [ ebp - 0x240 ] esi
je r-xdata
mov cl dl
sub cl 0x20
cmp cl 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
je r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_1001be43
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
call sub_10017600
add esp 0x14
cmp [ ebp - 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_1002894f ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_10024ab6
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x234 ] edi
test edi edi
jge r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_10027d46
jmp r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_10027d46
mov al [ ebx ]
inc ebx
mov [ ebp - 0x23c ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x21c ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x25c ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x25c ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x224 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_10017636
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
test [ ebp - 0x210 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0x22c ]
call sub_1001f982
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
push ebx
push 0x20
call sub_10027d79
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov [ ebp - 0x278 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x224 ] edi
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push ebx
push eax
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
call sub_100264e2
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_10027d29
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x228 ]
call sub_1001f982
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x228 ]
call sub_10027d79
add esp 0xc
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_1001bd22
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
push 0x8
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x228 ]
mov [ esi ] eax
mov ax [ ebp - 0x228 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x21c ] ebx
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_1001d77b
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_10025720
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x228 ]
call sub_10027d79
add esp 0xc
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x270 ] eax
je r-xdata
pop esi
call sub_100171f0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x25c ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
cmp [ ebp - 0x228 ] 0x0
jl r-xdata
push [ ebp - 0x270 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0xc ]
call sub_1001f982
cmp [ ebp - 0x264 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x264 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
inc esi
push eax
inc esi
call sub_10027d29
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_1002896f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_1002ab39
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10015160
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_10028a3d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_10028a76
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_10028a3d
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1001be8c
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1001be8c
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_10028b4b
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10028a76
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_10028a3d
pop esi
pop ebp
retn
sub_10028bb3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1001be8c
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1001be8c
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_1002ab90
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_10028ca5
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10028bb3
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_1002ab90
sub_10028d03
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_10018678
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_1002abf1
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_10028d90
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_10028dbd
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10018678
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10029d13
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1002928b
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
sub_10028e65
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10018678
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10029d13
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_100297cf
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
sub_10028f0d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_1001be43
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_1001be43
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10017600
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_100171f0
inc eax
push eax
push edi
push esi
call sub_1001df90
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_10028fcc
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_10029089
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10028fcc
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_1002ac2f
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_1001df09
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100174d8
add esp 0x14
sub_10029120
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10029200
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_1002921f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_1002b681
call sub_1002b681
mov [ esi ] eax
jmp r-xdata
call sub_1001be43
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_10017600
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_1002b681
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_1002928b
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_100297cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10029d13
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_1001be43
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_1002a3db ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1002b990
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_1002a40b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_10027650
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_1001be43
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_10027650
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_10027650
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10027650
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_1002a5c1
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_1001be43
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_10027378
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_1001be43
mov [ eax ] 0xd
call sub_1001be56
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_1001be56
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_1001be43
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_100206bb
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_1002a5c1
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_1002a5c1
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_1002a67d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1001be43
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1002a6b6
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_10018678
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_1002bb5e
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_10028d03
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1002a76b
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_1001d19b
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1001be43
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_1001be43
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_1001831c
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_10020dee
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_100262f7
pop ecx
test eax eax
jne r-xdata
call sub_1001831c
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_10020dee
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_10020eca
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_100276d5
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1002a8df
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_10018678
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_1001be43
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10017600
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_100226cf
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_1001be43
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_1002ab0e
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_1002a8df
add esp 0x14
pop ebp
retn
sub_1002ab58
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_1002ab90
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_1002abf1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002ac2f
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1001df09
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100174d8
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1001df09
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_1002b553
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_1002b5e1
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_1002b681
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_1002b553
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_1002b5e1
push eax
mov [ ebp - 0xc ] eax
call sub_1002bbb5
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_1002b990
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10015160
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_1002bb5e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10018678
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_1002bbb5
push 0x8
push r--data
call sub_1001cd00
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_1001cd45
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_1002bc40
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_1002bc30
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_1002bd1b
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
xor eax eax
retn
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
xor eax eax
inc eax
retn
sub_1002bd48
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
push eax
call sub_1002bd1b
pop ecx
pop ecx
leave
retn 0x8
sub_1002bd98
push 0x0
mov eax sub_1002c7f8
call sub_1001948c
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
call sub_1001952b
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
push sub_1002dc63
mov [ rw-data ] r--data
call sub_1001a341
pop ecx
sub_1002bdd9
push 0x0
mov eax sub_1002c821
call sub_1001948c
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
call sub_1001952b
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
push sub_1002dc6e
mov [ rw-data ] r--data
call sub_1001a341
pop ecx
sub_1002be1a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp esi 0x19
jg r-xdata
mov eax 0x271d
cmp esi eax
jg r-xdata
je r-xdata
lea eax [ esi - 0x271e ]
cmp eax 0x33
ja r-xdata
je r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
jmp r-xdata
cmp esi 0x15
ja r-xdata
call sub_1002bd98
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
movzx eax [ eax + lookup_table_1002c3e6 ]
jmp [ eax * 4 + jump_table_1002c372 ]
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xd
jmp r-xdata
mov eax 0x91
cmp esi eax
jg r-xdata
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn 0x8
jmp [ esi * 4 + jump_table_1002c31a ]
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x16
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x18
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ae
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26af
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ad
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b3
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b2
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b4
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b5
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b6
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xe
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b7
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c8
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b0
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b9
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ba
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26bb
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26bc
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26bd
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c1
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c5
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c3
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c9
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26cd
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26d5
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26d2
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ca
jmp r-xdata
mov eax 0x3f4
cmp esi eax
jg r-xdata
je r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x13
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x28
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xc
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xb
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x12
jmp r-xdata
mov eax esi
sub eax 0x3f5
je r-xdata
je r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x29
jmp r-xdata
cmp esi 0x52
jg r-xdata
sub eax 0xe0
je r-xdata
mov eax esi
sub eax 0xaa
je r-xdata
mov eax esi
sub eax 0x6e
je r-xdata
je r-xdata
sub eax 0x48c
je r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
jmp r-xdata
sub eax 0xd
je r-xdata
dec eax
je r-xdata
mov eax esi
sub eax 0x1d
je r-xdata
sub eax 0x3
je r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x11
jmp r-xdata
sub eax 0x1d
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
sub eax 0x1db0
je r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x27
jmp r-xdata
sub eax 0x37
je r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1c
jmp r-xdata
sub eax 0xb
je r-xdata
dec eax
dec eax
je r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x4
jmp r-xdata
sub eax 0x5
jne r-xdata
sub eax 0x2d8
je r-xdata
sub eax 0x8
je r-xdata
dec eax
je r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x9
jmp r-xdata
call sub_1002bdd9
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c7
jmp r-xdata
sub eax 0x3
je r-xdata
sub eax 0xb
jne r-xdata
sub eax 0x6
je r-xdata
sub eax 0xd
je r-xdata
sub eax 0x10
je r-xdata
sub eax 0x19
jne r-xdata
sub_1002c403
or ebx [ esp + ecx ]
sbb al 0xd
push cs
movups xmm2 [ ecx ]
adc dl [ ebx ]
adc al 0x15
push ss
pop ss
sbb al 0x1c
sbb [ ecx ] bl
sbb al 0x1a
sbb al 0x1b
push 0x20
mov eax sub_1002c87c
call sub_1001948c
and [ ebp - 0x10 ] 0x0
xor ebx ebx
inc ebx
mov esi rw-data
test [ rw-data ] bl
jne r-xdata
push [ ebp + 0xc ]
call sub_1002c5da
pop ecx
test eax eax
je r-xdata
or [ rw-data ] ebx
push r--data
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_100038ef
push r-xdata
call sub_1001a341
pop ecx
mov [ ebp - 0x4 ] 0x0
mov eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_100038ef
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
call sub_1001952b
retn 0x8
and [ ebp - 0x10 ] 0xfffffffe
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10003c5b
mov ecx [ ebp + 0x8 ]
push eax
call sub_10003bfd
or [ ebp - 0x10 ] 0x2
and [ ebp - 0x4 ] 0x0
test [ ebp - 0x10 ] bl
je r-xdata
sub_1002c4b2
push 0x30
mov eax sub_1002c8c0
call sub_100194f5
mov edi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
push 0x400
push [ ebp + 0xc ]
mov [ ebp - 0x34 ] ebx
push ebx
push 0x1300
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] ebx
call [ FormatMessageA@IAT ]
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x30 ] ecx
xor esi esi
inc esi
mov [ ebp - 0x4 ] esi
cmp eax ebx
jne r-xdata
push ecx
lea ecx [ ebp - 0x2c ]
call sub_100038ef
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] ebx
je r-xdata
push r--data
mov ecx edi
call sub_100038ef
mov [ ebp - 0x34 ] esi
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_10003bfd
push ebx
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_10003c5b
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_100071e7
cmp [ eax ] 0xa
je r-xdata
push [ ebp - 0x30 ]
mov [ ebp - 0x4 ] bl
call [ LocalFree@IAT ]
mov eax edi
call sub_1001953f
retn 0x8
mov eax [ ebp - 0x18 ]
push 0xffffffff
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000392d
cmp [ ebp - 0x18 ] ebx
jne r-xdata
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_100071e7
cmp [ eax ] 0xd
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax ebx
je r-xdata
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_100071e7
cmp [ eax ] 0x2e
jne r-xdata
mov eax [ ebp - 0x18 ]
push 0xffffffff
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000392d
sub_1002c5b2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
call sub_1002c646
mov esi [ eax ]
call sub_1002c646
cmp esi [ eax ]
jl r-xdata
call sub_1002c64c
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_1002c5da
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_1001d94e
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_1002c5b2
push eax
push edi
push esi
call sub_1001df09
add esp 0x10
test eax eax
je r-xdata
push 0x1
push edi
call sub_1001bd67
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100174d8
add esp 0x14
mov eax r--data
jmp r-xdata
pop edi
sub_1002c67c
cmp [ rw-data ] 0x0
je sub_1002c696
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_1002c696
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_1002db73
push esi
push 0x1
mov esi rw-data
push esi
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
pop esi
retn
push 0x0
push 0x0
push 0x1
push esi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] esi
mov [ rw-data ] 0xc
mov [ rw-data ] 0x0
sub_10001088
add eax 0x18
push eax
call [ DeleteCriticalSection@IAT ]
retn
sub_100013d8
mov eax [ eax ]
test eax eax
je r-xdata
retn
push eax
call sub_100157a1
pop ecx
sub_10001dea
mov eax [ eax ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
retn
sub_100020c6
mov ecx [ ebp - 0x14 ]
push 0x2
pop eax
mov [ ecx + 0x10 ] eax
mov ecx [ ebp - 0x20 ]
or [ ecx + 0x48 ] 0xffffffff
mov [ ebp - 0x4 ] eax
mov eax r-xdata
retn
sub_10002132
mov eax [ ebp - 0x14 ]
mov [ eax + 0x10 ] 0x3
mov eax [ ebp - 0x20 ]
or [ eax + 0x48 ] 0xffffffff
mov [ ebp - 0x4 ] 0x2
mov eax r-xdata
retn
sub_1000217d
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x1
mov eax r-xdata
retn
sub_100022c1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x4
mov eax r-xdata
retn
sub_100022d1
mov eax [ esp + 0x4 ]
cmp [ eax + 0x28 ] 0x0
jg r-xdata
add eax 0x4
retn
cmp [ eax + 0x24 ] 0x0
jg r-xdata
xor eax eax
retn
sub_100022e8
add ecx 0x4
jmp sub_10001381
sub_100025c8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0xa
mov eax r-xdata
retn
sub_10003037
add eax 0x4
jmp sub_10003cb0
sub_100032b9
xor ecx ecx
mov eax esi
mov [ esi + 0x18 ] 0x7
call sub_100034c8
push [ esp + 0x4 ]
call sub_1001516f
pop ecx
mov ecx [ esp + 0x4 ]
mov edx esi
call sub_100033e4
mov eax esi
retn 0x4
sub_10003307
push 0x0
push 0x1
call sub_1000339d
retn
sub_1000356d
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x2
call sub_1000362b
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_100035da
mov esi [ ebp + 0x8 ]
xor edi edi
push edi
push 0x1
call sub_1000339d
push edi
push edi
call sub_1001905a
int3
sub_10003806
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call sub_10016f87
mov eax [ esp + 0x14 ]
add esp 0x10
retn
sub_1000399c
mov [ ecx ] r--data
jmp sub_100170e2
sub_100039a7
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100170e2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_100039c9
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10017085
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10003af8
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_10003c5b
push esi
push esi
call sub_1001905a
int3
sub_10003c23
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10016f87
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_10003ca6
push 0x0
push 0x1
call sub_10003c5b
retn
sub_10004549
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
push 0x1
add ecx eax
push 0x4
call sub_100088cd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_100045ee
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
push 0x1
add ecx eax
push 0x4
call sub_100088cd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_100046cd
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
push 0x1
add ecx eax
push 0x4
call sub_100088cd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_100047b3
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
push 0x1
add ecx eax
push 0x4
call sub_100088cd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_100049be
push ecx
and [ esp ] 0x0
push ebx
add eax 0xc
mov ebx ecx
push eax
call sub_10005031
mov eax ebx
pop ebx
pop ecx
retn
sub_100049d4
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_10004e8b
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_10003d33
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10004edb
push esi
mov esi ecx
call sub_100049ff
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10004f94
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
push 0x1
add ecx eax
push 0x4
call sub_100088cd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_10006041
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10007088
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000709f
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100070e2
mov al [ ecx + 0xc ]
retn
sub_100070e6
mov al [ ecx + 0xd ]
retn
sub_100070ea
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100038ef
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10007104
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100038ef
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000711e
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100038ef
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10007138
push esi
mov esi ecx
call sub_100070b6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_100073be
push esi
mov esi eax
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
pop esi
retn
call sub_10007408
sub_100073d1
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
call sub_100084ee
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
mov eax esi
retn
sub_100073f1
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000751f
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
push 0x1
add ecx eax
push 0x4
call sub_100088cd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_10007d1e
retn
sub_10007e93
push esi
mov esi ecx
call sub_10008017
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10007eaf
push [ esp + 0x8 ]
mov eax [ ecx ]
push 0xffffffff
push [ esp + 0xc ]
call [ eax + 0x1c ]
retn 0x8
sub_10007f3c
or eax 0xffffffff
retn 0x4
sub_10007fbf
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x10
sub_10007fd9
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x20
sub_10007ff3
mov eax ecx
retn 0x8
sub_10007ff8
retn 0x4
sub_10007ffb
push esi
mov esi ecx
call sub_1000872a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10008076
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
retn
sub_100080bb
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_10008129
push esi
mov esi ecx
call sub_10008145
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_1000819d
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_100145f0
pop ecx
pop ecx
retn 0x4
sub_100081dc
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_1001475d
pop ecx
pop ecx
retn 0x4
sub_100081f0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x1c ]
pop ebp
retn 0xc
sub_1000820c
mov al [ esp + 0x4 ]
retn 0x4
sub_10008260
mov al [ esp + 0x4 ]
retn 0x8
sub_100082ea
push ebp
mov ebp esp
push ecx
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x18
push eax
call sub_10003bfd
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10008637
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
push 0x1
add ecx eax
push 0x4
call sub_100088cd
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10008723
mov [ ecx ] r--data
retn
sub_1000872a
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
call sub_100086e8
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10008742
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
mov [ esi ] ecx
call sub_100086c0
mov eax esi
retn
sub_10008751
push 0x4
mov eax sub_1002d6a3
call sub_100194bf
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0x10 ] 0x2
je r-xdata
call sub_1001952b
retn
call sub_100088f6
sub_1000877a
mov eax r-xdata
retn
sub_100087c6
mov eax [ eax ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
retn
lea ecx [ eax + 0x4 ]
jmp sub_100141e4
sub_100087de
xor eax eax
retn
sub_100087e1
mov [ ecx ] r--data
jmp sub_100089c3
sub_100087ec
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100089c3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_1000880e
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100089e0
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_100089aa
push ecx
mov [ ecx ] r--data
call sub_1001416e
pop ecx
retn
sub_100089b8
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100089c3
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10003c5b
mov ecx esi
pop esi
jmp sub_100170e2
sub_10008a1a
push esi
mov esi ecx
call sub_100089c3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10008a6b
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10003c3f
mov eax esi
retn
sub_10008adc
push esi
mov esi eax
add esi 0x58
mov ecx esi
call sub_10008e37
push esi
mov [ esi ] r--data
call sub_1001416e
pop ecx
pop esi
retn
sub_10008bba
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_10009624
push esi
mov [ esi ] r--data
call sub_1001416e
pop ecx
pop esi
retn
sub_10009663
push esi
lea esi [ ecx - 0x58 ]
mov eax esi
call sub_10008adc
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10009682
push esi
mov esi ecx
call sub_10008e76
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_1000969e
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_10008bba
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10009913
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x1c
sub_1000992d
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x10
sub_1000993d
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
cmp [ esp + 0x10 ] eax
jae r-xdata
retn 0x10
mov eax [ esp + 0x10 ]
sub_10009952
mov eax [ eax + 0x38 ]
mov ecx [ eax ]
mov [ esi ] ecx
call sub_100086c0
mov eax esi
retn
sub_10009a9a
mov [ ecx ] r--data
jmp sub_10009b48
sub_10009aa5
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10009abd
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10009b2c
push esi
mov esi ecx
call sub_10009b48
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10009b48
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10003c5b
mov ecx esi
pop esi
jmp sub_100170e2
sub_10009b65
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10009b48
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10009b87
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_10009b95
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10009af7
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10009bad
xor eax eax
inc eax
retn
sub_10009bb1
mov al 0x1
retn
sub_10009ee4
push ecx
and [ ecx + 0x8 ] 0x17
push 0x6
pop eax
mov [ ecx + 0xc ] eax
test [ ecx + 0x8 ] al
je r-xdata
pop ecx
retn
push 0x0
call sub_10008826
sub_10009f43
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
push eax
call sub_10018252
pop ecx
retn
sub_10009f54
cmp [ esp + 0x8 ] 0x0
je r-xdata
retn
push [ esp + 0x8 ]
call sub_10017636
pop ecx
sub_10010d69
and [ eax + 0x14 ] 0x0
and [ eax + 0x10 ] 0x0
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
retn
sub_10011571
cmp [ esp + 0x8 ] 0x0
je r-xdata
retn
mov cl [ esp + 0x4 ]
mov [ eax ] cl
inc eax
dec [ esp + 0x8 ]
jne r-xdata
sub_10011c24
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
add eax 0x4
add ecx 0x4
dec [ esp + 0x4 ]
jne r-xdata
sub_10011c3c
dec eax
inc eax
retn
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
sub_10012ce8
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100089e0
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10012d00
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100089c3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10012d52
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10012d6f
mov [ ecx ] r--data
retn
sub_10012f6a
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_1001905a
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10013312
push esi
mov esi ecx
call sub_1001334b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_1001332e
push esi
push [ esp + 0xc ]
lea esi [ edi + 0x4 ]
push [ esp + 0xc ]
call sub_10004402
mov [ edi ] r--data
mov eax edi
pop esi
retn 0x8
sub_1001334b
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_10003c5b
retn
sub_100134a4
mov eax r--data
retn
sub_100134aa
mov [ ecx ] r--data
jmp sub_10017140
sub_100134b5
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10017140
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10013523
mov [ ecx ] r--data
jmp sub_100089c3
sub_100138b4
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100138e1
mov [ esi + 0x28 ] r--data
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
pop esi
retn 0x4
sub_1001394f
push esi
mov esi ecx
call sub_100139a8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_1001396b
push esi
mov esi ecx
call sub_10013987
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10013987
lea ecx [ esi + 0x14 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_10013f2b
mov [ esi ] r--data
mov ecx esi
jmp sub_10017140
sub_100139a8
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x14 ] r--data
mov [ ecx + 0x28 ] r--data
call sub_10013987
pop esi
retn
sub_10013a07
push ebp
mov ebp esp
add ecx 0xffffffd8
sub esp 0x2c
push ecx
lea ecx [ ebp - 0x2c ]
call sub_100138b4
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_1001905a
int3
sub_10013c7b
sub ecx 0x28
jmp sub_1001394f
sub_10013c83
sub ecx 0x14
jmp sub_1001394f
sub_10013c8b
sub ecx 0x14
jmp sub_1001396b
sub_10013f4a
mov [ ecx ] r--data
retn
sub_10013f51
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_10013f6e
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_10013f79
mov ecx [ esi ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi ] 0x0
sub_10014015
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_100157d2
sub_10014020
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10009af7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001403d
mov [ ecx ] r--data
jmp sub_10009b48
sub_100140df
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10009abd
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100141c4
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_10014eeb
push [ esi ]
call sub_100157ac
pop ecx
pop ecx
pop esi
retn
sub_100141db
push [ ecx ]
call sub_10014efb
pop ecx
retn
sub_100141e4
push [ ecx ]
call sub_10014f0b
pop ecx
retn
j_sub_100197ea
jmp sub_100197ea
sub_10014274
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_10014f0b
pop ecx
sub_1001428b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1001a341
pop ecx
test eax eax
je r-xdata
pop ebp
retn
pop ebp
jmp sub_1001a358
sub_100142a5
mov ecx [ ecx + 0x4 ]
call sub_100086e8
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10014328
mov eax [ rw-data ]
retn
sub_10014e02
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10014d99
sub_10014e0d
mov edi edi
push esi
call sub_1001bcfc
mov esi [ eax + 0x8 ]
call sub_1001bcd6
mov edx eax
mov eax esi
pop esi
retn
sub_10014edb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_10014eeb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_10014efb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_10014f0b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10014f41
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ rw-data ] eax
test ecx ecx
je r-xdata
retn
cmp eax 0xa
jb r-xdata
call [ eax * 4 + rw-data ]
sub_10014fa6
push r-xdata
call sub_1001a341
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
WNetOpenEnumW
jmp [ WNetOpenEnumW@IAT ]
WNetEnumResourceW
jmp [ WNetEnumResourceW@IAT ]
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
sub_10015636
push [ ebp + 0x8 ]
call sub_10018466
pop ecx
retn
sub_10015693
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001d012
add esp 0x10
pop ebp
retn
sub_10015799
push esi
call sub_10018466
pop ecx
retn
sub_100157a1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_100157ac
sub_100157ac
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10017636
sub_100157b7
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_10017068
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_10016f36
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_1001de99
pop ecx
retn
sub_10017004
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_10017068
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_100170e2
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_10017636
pop ecx
sub_100170f8
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_10017123
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10017085
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10017140
mov [ ecx ] r--data
jmp sub_100170e2
sub_10017483
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_1001ec51
pop ecx
pop ecx
retn
sub_100174c9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10017626
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10017600
add esp 0x14
retn
sub_1001768c
push 0x4
call sub_1001edb1
pop ecx
retn
sub_100176e2
call sub_1001d9c7
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1001a765
sub_1001790a
push esi
call sub_10018466
pop ecx
retn
sub_10017aec
push [ ebp + 0x14 ]
call sub_10018466
pop ecx
retn
sub_10017c4f
push [ ebp + 0xc ]
call sub_10018466
pop ecx
retn
sub_10017d55
push esi
call sub_10018466
pop ecx
retn
sub_10017e62
push [ ebp + 0x8 ]
call sub_10018466
pop ecx
retn
sub_10018013
push [ ebp + 0x8 ]
call sub_10018466
pop ecx
retn
sub_1001816f
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_100184a2
pop ecx
pop ecx
retn
sub_1001819e
push 0x1
call sub_1001edb1
pop ecx
retn
sub_100181f0
push [ ebp + 0x8 ]
call sub_10018466
pop ecx
retn
sub_100181fa
push 0x1
call sub_100180cd
pop ecx
retn
sub_10018249
push 0x4
call sub_1001edb1
pop ecx
retn
sub_100183d3
call sub_100181fa
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_10017636
pop ecx
retn
call sub_1002188e
sub_100185e3
push [ ebp + 0x8 ]
call sub_10018466
pop ecx
retn
sub_10018a7c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10018a51
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_10018a94
push 0x8
call sub_1001ee8b
pop ecx
retn
sub_10018a9d
push 0x8
call sub_1001edb1
pop ecx
retn
sub_10018c83
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_1001edb1
pop ecx
sub_10018c98
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_10018b6c
add esp 0xc
pop ebp
retn
sub_10018cae
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_10018b6c
add esp 0xc
pop ebp
retn
sub_10018cc4
push 0x1
push 0x0
push 0x0
call sub_10018b6c
add esp 0xc
retn
sub_1001952b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1001953f
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10015160
jmp sub_1001952b
sub_1001956c
mov [ ecx ] r--data
jmp sub_100170e2
sub_100196c8
push [ ebp - 0x14 ]
call sub_100195fd
pop ecx
retn
sub_1001970c
call sub_1001d9c7
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_1001d9c7
add eax 0x90
dec [ eax ]
sub_100197af
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_100197b8
mov esp [ ebp - 0x18 ]
call sub_100228fd
sub_100197ea
call sub_1001d9c7
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne cl
mov al cl
retn
sub_10019878
push 0x4
mov eax sub_1002c7cf
call sub_100194bf
call sub_1001d9c7
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10022936
call sub_10022949
sub_10019951
mov eax [ ebp - 0x14 ]
call sub_10019727
retn
sub_10019bc8
xor eax eax
inc eax
retn
sub_10019bcc
mov esp [ ebp - 0x18 ]
call sub_100228fd
sub_10019c61
xor eax eax
inc eax
retn
sub_10019c65
mov esp [ ebp - 0x18 ]
call sub_100228fd
sub_1001a117
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10017085
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001a33b
call sub_10018a9d
retn
sub_1001a341
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1001a305
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_1001a7cf
push 0xc
call sub_1001edb1
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_1001a8db
push 0xd
call sub_1001edb1
pop ecx
retn
sub_1001a8e7
push 0xc
call sub_1001edb1
pop ecx
retn
sub_1001b4bf
push 0xc
call sub_1001edb1
pop ecx
retn
sub_1001b4cb
push 0xc
call sub_1001edb1
pop ecx
retn
sub_1001b4fc
and [ esi + 0x70 ] 0xffffffef
retn
sub_1001b90b
call sub_1001d9c7
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1001a765
sub_1001bcd6
call sub_1001d9c7
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1001a765
sub_1001bcfc
call sub_1001d9c7
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1001a765
sub_1001c074
mov eax sub_100255b9
mov [ rw-data ] eax
mov [ rw-data ] sub_10024ca0
mov [ rw-data ] sub_10024c54
mov [ rw-data ] sub_10024c8d
mov [ rw-data ] sub_10024bf6
mov [ rw-data ] eax
mov [ rw-data ] sub_10025531
mov [ rw-data ] sub_10024c12
mov [ rw-data ] sub_10024b74
mov [ rw-data ] sub_10024b01
retn
sub_1001c0d4
mov edi edi
push ebp
mov ebp esp
call sub_1001c074
call sub_10025645
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_100255dc
sub_1001c216
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001c0f7
add esp 0xc
pop ebp
retn
sub_1001c4d0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_100257c0
sub_1001c4e6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_100257c0
sub_1001c76c
push 0xc
push r--data
call sub_1001cd00
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
sub_1001c789
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1001c81e
call sub_1001c7bc
mov [ rw-data ] eax
xor eax eax
retn
sub_1001ccf4
push 0x1
call sub_1001edb1
pop ecx
retn
sub_1001cd45
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1001ce32
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_1001cd5c
add esp 0xc
pop ebp
retn 0x4
sub_1001ce65
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_100262d5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1001ce98
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_1001cd5c
add esp 0xc
pop ebp
retn 0x8
sub_1001d008
push [ ebp + 0xc ]
call sub_10018466
pop ecx
retn
sub_1001d012
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_100266d1
call sub_1001cf7f
add esp 0x14
pop ebp
retn
sub_1001d191
push [ ebp + 0x8 ]
call sub_1002748f
pop ecx
retn
sub_1001d1fe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001d772
push 0x0
call sub_1001d700
pop ecx
retn
sub_1001d7ed
call [ TlsAlloc@IAT ]
retn 0x4
sub_1001d93c
push 0xd
call sub_1001edb1
pop ecx
retn
sub_1001d945
push 0xc
call sub_1001edb1
pop ecx
retn
sub_1001dafb
push 0xd
call sub_1001edb1
pop ecx
retn
sub_1001db07
push 0xc
call sub_1001edb1
pop ecx
retn
sub_1001de8a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001df00
push 0xe
call sub_1001edb1
pop ecx
retn
sub_1001e532
xor eax eax
inc eax
retn
sub_1001ed07
and [ rw-data ] 0x0
retn
sub_1001edb1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1001ee82
push 0xa
call sub_1001edb1
pop ecx
retn
sub_10020ec0
push [ ebp + 0x8 ]
call sub_1002748f
pop ecx
retn
sub_10021185
push [ ebp + 0x8 ]
call sub_1002748f
pop ecx
retn
sub_100216b8
push [ ebp + 0x8 ]
call sub_10018466
pop ecx
retn
sub_100217a3
push [ ebp + 0x8 ]
call sub_10018466
pop ecx
retn
sub_10021884
push [ ebp + 0x8 ]
call sub_1002748f
pop ecx
retn
sub_10021924
push 0x1
call sub_1001edb1
pop ecx
retn
sub_10021fe2
push [ ebp + 0x8 ]
call sub_1002748f
pop ecx
retn
sub_100222ad
push 0xd
call sub_1001edb1
pop ecx
retn
sub_10022678
push 0xd
call sub_1001edb1
pop ecx
retn
sub_100226b1
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_10022517
pop ecx
mov [ rw-data ] 0x1
sub_100228cb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_100228fd
push 0x8
push r--data
call sub_1001cd00
call sub_1001d9c7
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1001a358
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1002291d
xor eax eax
inc eax
retn
sub_10022936
call sub_1001d9c7
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_100228fd
call eax
sub_1002296d
xor eax eax
inc eax
retn
sub_10022981
push sub_100228fd
call sub_1001d700
pop ecx
mov [ rw-data ] eax
retn
sub_10022992
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_100229e7
push [ rw-data ]
call sub_1001d77b
pop ecx
retn
sub_10022b68
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_1001edb1
pop ecx
sub_10022ba4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10022bb3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10022be3
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_10022bfa
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1001cd45
retn
push 0x8
call [ SetLastError@IAT ]
sub_10022d6c
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_10022e18
push 0x4
call sub_1001edb1
pop ecx
retn
sub_10024879
push 0x4
call sub_1001edb1
pop ecx
retn
sub_100249df
push 0x4
call sub_1001edb1
pop ecx
retn
sub_10024aee
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10024ab6
pop ecx
pop ecx
pop ebp
retn
sub_10024c54
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024c12
add esp 0x10
pop ebp
retn
sub_10024c8d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10024b01
pop ecx
pop ecx
pop ebp
retn
sub_10024ca0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10024b74
pop ecx
pop ecx
pop ebp
retn
sub_100262a9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_100261e0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_100262f4
call eax
retn
sub_100264e2
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_1002660f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100264f8
add esp 0x10
pop ebp
retn
sub_10027486
push 0xa
call sub_1001edb1
pop ecx
retn
sub_10027589
push 0xa
call sub_1001edb1
pop ecx
retn
sub_10027647
push 0xb
call sub_1001edb1
pop ecx
retn
sub_100277e4
push [ ebp + 0x8 ]
call sub_1002748f
pop ecx
retn
sub_10027ba5
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_10027b52
add esp 0x10
pop ebp
retn
sub_10028a34
push 0x2
call sub_10018a28
pop ecx
retn
sub_10028b9d
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_1002ab0e
add esp 0xc
pop ebp
retn
sub_1002ab39
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_1002bbe2
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1002bc30
lea eax [ edx - 0x1 ]
pop ebx
retn
sub_1002bcfe
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100157ac
pop ecx
sub_1002bd38
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
retn 0x8
sub_1002bd68
mov eax [ esp + 0x4 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x8
sub_1002bd83
push [ ecx ]
call [ LocalFree@IAT ]
retn
sub_1002bd8c
mov eax r--data
retn
sub_1002bd92
mov eax r--data
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_1002c646
mov eax rw-data
retn
sub_1002c64c
mov eax rw-data
retn
sub_1002c660
cmp [ rw-data ] 0x0
je sub_1002c696
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_1002c70b
lea ecx [ ebp - 0x28 ]
jmp sub_10003ca6
sub_1002c713
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c72e
lea ecx [ ebp - 0x10 ]
jmp sub_10014274
sub_1002c736
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c751
mov ecx [ ebp - 0x10 ]
jmp sub_10008723
sub_1002c759
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c774
mov ecx [ ebp - 0x10 ]
jmp sub_10008723
sub_1002c77c
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10003ca6
sub_1002c787
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c7a2
lea ecx [ ebp - 0x10 ]
jmp sub_10014274
sub_1002c7aa
push [ ebp - 0x14 ]
call sub_100157ac
pop ecx
retn
sub_1002c7b4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c7cf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c7ea
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1002c7f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c813
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1002c821
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c83c
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1002c84a
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002c863
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp + 0x8 ]
jmp sub_10003ca6
sub_1002c87c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c897
lea ecx [ ebp - 0x30 ]
jmp sub_1002bd83
sub_1002c89f
mov eax [ ebp - 0x34 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x34 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_10003ca6
sub_1002c8b8
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002c8c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c8e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c900
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c91b
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_100141c4
sub_1002c926
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c941
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c95c
lea eax [ ebp - 0x2c ]
jmp sub_10001dea
sub_1002c964
lea eax [ ebp + 0x8 ]
jmp sub_10001dea
sub_1002c96c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c987
lea esi [ ebp - 0x10 ]
jmp sub_10013f79
sub_1002c98f
lea esi [ ebp - 0x14 ]
jmp sub_10013f79
sub_1002c997
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c9b2
mov ecx [ ebp - 0x10 ]
jmp sub_100134aa
sub_1002c9ba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c9d5
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_100049d4
sub_1002c9e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002c9fb
lea eax [ ebp - 0x68 ]
jmp sub_10001ab5
sub_1002ca03
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10015160
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002ca2b
push [ ebp - 0x10 ]
call sub_100157ac
pop ecx
retn
sub_1002ca35
push [ ebp - 0x10 ]
call sub_100157ac
pop ecx
retn
sub_1002ca3f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002ca5a
mov esi [ ebp + 0x8 ]
jmp sub_10013987
sub_1002ca62
mov ecx [ ebp + 0x8 ]
add ecx 0x28
jmp sub_10013f4a
sub_1002ca6d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002ca88
push [ ebp - 0x10 ]
call sub_100157ac
pop ecx
retn
sub_1002ca92
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002caad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cac8
lea eax [ ebp - 0x1c ]
jmp sub_100013d8
sub_1002cad0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002caeb
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_1000130e
sub_1002caf6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cb11
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cb2c
mov ecx [ ebp + 0x8 ]
jmp sub_10014274
sub_1002cb34
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10003ca6
sub_1002cb3f
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_10003ca6
sub_1002cb4a
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_10003ca6
sub_1002cb55
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_10003ca6
sub_1002cb60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cb7b
lea esi [ ebp - 0x2c ]
jmp sub_10003307
sub_1002cb83
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cb9e
mov ecx [ ebp + 0x8 ]
jmp sub_100022e8
sub_1002cba6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cbc1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cbdc
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002cbe4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cc09
lea ecx [ ebp - 0x30 ]
jmp sub_10003ca6
sub_1002cc11
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cc36
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002cc3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cc63
lea ecx [ ebp - 0x30 ]
jmp sub_10003ca6
sub_1002cc6b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10015160
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cc93
mov ecx [ ebp - 0x10 ]
jmp sub_10008017
sub_1002cc9b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002ccb6
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_100080bb
sub_1002ccc1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002ccdc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002ccf7
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002ccff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cd24
push [ ebp - 0x10 ]
call sub_100157ac
pop ecx
retn
sub_1002cd2e
push [ ebp - 0x10 ]
call sub_100157ac
pop ecx
retn
sub_1002cd38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cd53
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_10008076
sub_1002cd5e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cd79
mov ecx [ ebp + 0x8 ]
jmp sub_100170e2
sub_1002cd81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cd9c
mov ecx [ ebp - 0x10 ]
jmp sub_100170e2
sub_1002cda4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cdbf
push [ ebp - 0x14 ]
call sub_100157ac
pop ecx
retn
sub_1002cdc9
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10003ca6
sub_1002cde2
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_10008307
sub_1002cdff
mov ecx [ ebp - 0x14 ]
jmp sub_10008723
sub_1002ce07
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002ce25
push [ ebp - 0x14 ]
call sub_100157ac
pop ecx
retn
sub_1002ce2f
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10003ca6
sub_1002ce48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002ce66
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002ce6e
lea ecx [ ebp - 0x48 ]
jmp sub_10003ca6
sub_1002ce76
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002ce9b
lea ecx [ ebp - 0x48 ]
jmp sub_10003ca6
sub_1002cea3
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002ceab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002ced0
lea ecx [ ebp - 0x38 ]
jmp sub_1000872a
sub_1002ced8
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002cee0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cf05
lea ecx [ ebp - 0x74 ]
jmp sub_1000872a
sub_1002cf0d
lea ecx [ ebp - 0x4c ]
jmp sub_10003ca6
sub_1002cf15
lea ecx [ ebp - 0x30 ]
jmp sub_10003ca6
sub_1002cf1d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cf42
lea ecx [ ebp - 0x60 ]
jmp sub_1000872a
sub_1002cf4a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cf6f
lea ecx [ ebp - 0x68 ]
jmp sub_1000872a
sub_1002cf77
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cf9c
lea ecx [ ebp - 0x44 ]
jmp sub_1000872a
sub_1002cfa4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cfc9
lea ecx [ ebp - 0x48 ]
jmp sub_1000872a
sub_1002cfd1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002cff6
lea ecx [ ebp - 0x40 ]
jmp sub_1000872a
sub_1002cffe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d023
lea ecx [ ebp - 0x64 ]
jmp sub_1000872a
sub_1002d02b
lea ecx [ ebp - 0x4c ]
jmp sub_10003ca6
sub_1002d033
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d03b
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d043
lea ecx [ ebp - 0x5c ]
jmp sub_1000872a
sub_1002d04b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d070
lea ecx [ ebp - 0x30 ]
jmp sub_1000872a
sub_1002d078
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d080
lea ecx [ ebp - 0x60 ]
jmp sub_10003ca6
sub_1002d088
lea ecx [ ebp - 0x60 ]
jmp sub_10003ca6
sub_1002d090
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d0b5
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d0bd
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d0c5
lea ecx [ ebp - 0x48 ]
jmp sub_10003ca6
sub_1002d0cd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d0f2
lea eax [ ebp - 0x54 ]
jmp sub_10002a6c
sub_1002d0fa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d11f
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d127
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d142
lea ecx [ ebp - 0x34 ]
jmp sub_1000872a
sub_1002d14a
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d152
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d177
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_10003ca6
sub_1002d190
lea ecx [ ebp - 0x30 ]
jmp sub_100134aa
sub_1002d198
lea esi [ ebp - 0x88 ]
jmp sub_10013987
sub_1002d1a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d1c1
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10003ca6
sub_1002d1da
lea ecx [ ebp - 0x34 ]
jmp sub_10003ca6
sub_1002d1e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d1fd
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d205
lea ecx [ ebp - 0x48 ]
jmp sub_10003ca6
sub_1002d20d
lea ecx [ ebp - 0xe0 ]
jmp sub_10003ca6
sub_1002d218
lea ecx [ ebp - 0xa8 ]
jmp sub_10003ca6
sub_1002d223
lea ecx [ ebp - 0x8c ]
jmp sub_10003ca6
sub_1002d22e
lea ecx [ ebp - 0xc4 ]
jmp sub_10003ca6
sub_1002d239
lea ecx [ ebp - 0x70 ]
jmp sub_10003ca6
sub_1002d241
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe8 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d269
lea ecx [ ebp - 0x28 ]
jmp sub_10003ca6
sub_1002d271
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d28c
lea ecx [ ebp - 0x14 ]
jmp sub_10014274
sub_1002d294
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d2af
lea ecx [ ebp + 0xc ]
jmp sub_1000872a
sub_1002d2b7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d2d2
lea ecx [ ebp - 0x50 ]
jmp sub_10003ca6
sub_1002d2da
lea ecx [ ebp - 0x50 ]
jmp sub_10003ca6
sub_1002d2e2
lea ecx [ ebp - 0x94 ]
jmp sub_10003ca6
sub_1002d2ed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d30b
push [ ebp - 0x14 ]
call sub_100157ac
pop ecx
retn
sub_1002d315
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10003ca6
sub_1002d32e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d34c
lea ecx [ ebp - 0x38 ]
jmp sub_10003ca6
sub_1002d354
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d36f
lea ecx [ ebp - 0x30 ]
jmp sub_10003ca6
sub_1002d377
lea ecx [ ebp - 0x54 ]
jmp sub_10003ca6
sub_1002d37f
lea ecx [ ebp - 0x54 ]
jmp sub_10003ca6
sub_1002d387
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d3ac
lea ecx [ ebp - 0x38 ]
jmp sub_10003ca6
sub_1002d3b4
push [ ebp - 0x10 ]
call sub_100157ac
pop ecx
retn
sub_1002d3be
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov eax [ ebp + 0x8 ]
jmp sub_10003037
sub_1002d3d7
lea ecx [ ebp - 0x54 ]
jmp sub_10003ca6
sub_1002d3df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d3fa
lea ecx [ ebp - 0x244 ]
jmp sub_10003ca6
sub_1002d405
lea ecx [ ebp - 0x260 ]
jmp sub_10003ca6
sub_1002d410
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28c ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d438
lea ecx [ ebp - 0x58 ]
jmp sub_10003ca6
sub_1002d440
lea esi [ ebp - 0x30 ]
jmp sub_10003307
sub_1002d448
lea ecx [ ebp - 0x58 ]
jmp sub_10003ca6
sub_1002d450
lea ecx [ ebp - 0x74 ]
jmp sub_10003ca6
sub_1002d458
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d480
lea ecx [ ebp - 0x28 ]
jmp sub_10003ca6
sub_1002d488
lea ecx [ ebp - 0x44 ]
jmp sub_10003ca6
sub_1002d490
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d4ab
lea ecx [ ebp - 0x30 ]
jmp sub_10003ca6
sub_1002d4b3
lea ecx [ ebp - 0x4c ]
jmp sub_10003ca6
sub_1002d4bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d4d6
lea eax [ ebp - 0x18 ]
jmp sub_10003037
sub_1002d4de
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d4f9
lea ecx [ ebp - 0x34 ]
jmp sub_10003ca6
sub_1002d501
push [ ebp - 0x18 ]
call sub_100157ac
pop ecx
retn
sub_1002d50b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d526
lea ecx [ ebp + 0x8 ]
jmp sub_1000872a
sub_1002d52e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d549
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d564
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_100080bb
sub_1002d56f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d58a
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_100089aa
sub_1002d5a6
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_100049d4
sub_1002d5b1
mov ecx [ ebp - 0x14 ]
jmp sub_10008017
sub_1002d5b9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d5d4
lea ecx [ ebp - 0x48 ]
jmp sub_10003ca6
sub_1002d5dc
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d5e4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d609
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_100089aa
sub_1002d625
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10008076
sub_1002d630
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10008e76
sub_1002d63b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d656
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_100089aa
sub_1002d672
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_100080bb
sub_1002d67d
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_10008e76
sub_1002d688
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d6a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d6be
lea ecx [ ebp + 0xc ]
jmp sub_1000872a
sub_1002d6c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d6e1
mov eax [ ebp + 0x8 ]
jmp sub_100087c6
sub_1002d6e9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d704
lea eax [ ebp - 0x1c ]
push eax
call sub_10008780
retn
sub_1002d70e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d729
lea eax [ ebp - 0x1c ]
jmp sub_100087c6
sub_1002d731
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d74c
lea eax [ ebp - 0x24 ]
jmp sub_100087c6
sub_1002d754
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d76f
lea eax [ ebp - 0x28 ]
jmp sub_100087c6
sub_1002d777
lea ecx [ ebp - 0x20 ]
jmp sub_1000872a
sub_1002d77f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d79a
lea eax [ ebp - 0x1c ]
push eax
call sub_10008780
retn
sub_1002d7a4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d7bf
lea eax [ ebp - 0x28 ]
push eax
call sub_10008780
retn
sub_1002d7c9
lea ecx [ ebp - 0x1c ]
jmp sub_1000872a
sub_1002d7d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d7ec
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d7f4
lea ecx [ ebp - 0x48 ]
jmp sub_10003ca6
sub_1002d7fc
lea eax [ ebp - 0xe0 ]
jmp sub_10003d33
sub_1002d807
mov eax [ ebp - 0x50 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffe
mov edi [ ebp - 0x58 ]
jmp sub_1000303f
sub_1002d820
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d848
lea ecx [ ebp - 0x2c ]
jmp sub_10012d6f
sub_1002d850
lea esi [ ebp - 0x64 ]
jmp sub_10003307
sub_1002d858
lea ecx [ ebp - 0x48 ]
jmp sub_10003ca6
sub_1002d860
lea eax [ ebp - 0x24 ]
jmp sub_10003037
sub_1002d868
lea esi [ ebp - 0x48 ]
jmp sub_10003307
sub_1002d870
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov edi [ ebp - 0x10 ]
jmp sub_1000303f
sub_1002d889
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d8a4
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_10003ca6
sub_1002d8bd
lea eax [ ebp - 0xf0 ]
jmp sub_10008adc
sub_1002d8c8
lea ecx [ ebp - 0x38 ]
jmp sub_10003ca6
sub_1002d8d0
lea ecx [ ebp - 0x38 ]
jmp sub_10003ca6
sub_1002d8d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d8f6
lea eax [ ebp - 0x14 ]
jmp sub_100087c6
sub_1002d8fe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d919
lea eax [ ebp - 0x3f0 ]
jmp sub_10003d33
sub_1002d924
lea eax [ ebp - 0x368 ]
jmp sub_10003d33
sub_1002d92f
lea ecx [ ebp - 0xec ]
jmp sub_10003ca6
sub_1002d93a
lea ecx [ ebp - 0xec ]
jmp sub_10003ca6
sub_1002d945
lea ecx [ ebp - 0xec ]
jmp sub_10003ca6
sub_1002d950
mov eax [ ebp - 0x2b0 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2b0 ] 0xfffffffe
mov ecx [ ebp - 0x2b4 ]
jmp sub_10003ca6
sub_1002d972
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3f4 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d99a
lea eax [ ebp - 0xdc ]
jmp sub_10008bba
sub_1002d9a5
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d9ad
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d9b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe0 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002d9d3
lea ecx [ ebp - 0x48 ]
jmp sub_10003ca6
sub_1002d9db
lea ecx [ ebp - 0x2c ]
jmp sub_10003ca6
sub_1002d9e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002da08
lea esi [ ebp - 0xd0 ]
jmp sub_10003307
sub_1002da13
lea esi [ ebp - 0x4c ]
jmp sub_10003307
sub_1002da1b
lea esi [ ebp - 0xec ]
jmp sub_10003307
sub_1002da26
lea esi [ ebp - 0x30 ]
jmp sub_10003307
sub_1002da2e
lea eax [ ebp - 0xb4 ]
jmp sub_10001088
sub_1002da39
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
mov ecx [ ebp - 0x6c ]
jmp sub_10003ca6
sub_1002da52
lea eax [ ebp - 0x80 ]
jmp sub_10002dcb
sub_1002da5a
lea ecx [ ebp - 0x68 ]
jmp sub_10003ca6
sub_1002da62
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002da8a
lea esi [ ebp - 0x68 ]
jmp sub_10003307
sub_1002da92
lea esi [ ebp - 0x48 ]
jmp sub_10003307
sub_1002da9a
lea esi [ ebp - 0x84 ]
jmp sub_10003307
sub_1002daa5
lea esi [ ebp - 0x2c ]
jmp sub_10003307
sub_1002daad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002dad5
lea ecx [ ebp - 0x4c ]
jmp sub_10003ca6
sub_1002dadd
lea ecx [ ebp - 0x30 ]
jmp sub_10003ca6
sub_1002dae5
lea eax [ ebp - 0xe4 ]
jmp sub_10003d33
sub_1002daf0
mov eax [ ebp - 0x54 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x54 ] 0xfffffffe
mov ecx [ ebp - 0x50 ]
jmp sub_10003ca6
sub_1002db09
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe8 ]
xor ecx eax
call sub_10015160
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10015160
mov eax r--data
jmp sub_10019133
sub_1002db31
call sub_1002bdd9
mov [ rw-data ] eax
retn
sub_1002db3c
call sub_1002bdd9
mov [ rw-data ] eax
retn
sub_1002db47
call sub_1002bd98
mov [ rw-data ] eax
retn
sub_1002db52
call sub_1002bdd9
mov [ rw-data ] eax
retn
sub_1002db5d
call sub_1002bdd9
mov [ rw-data ] eax
retn
sub_1002db68
call sub_1002bd98
mov [ rw-data ] eax
retn
sub_1002dbb7
mov ecx rw-data
call sub_100141f2
push sub_1002dc27
call sub_1001a341
pop ecx
retn
sub_1002dbcd
push sub_1002dc31
call sub_1001a341
pop ecx
retn
sub_1002dbd9
mov ecx rw-data
call sub_100141f2
push sub_1002dc3b
call sub_1001a341
pop ecx
retn
sub_1002dbef
push sub_1002dc45
call sub_1001a341
pop ecx
retn
sub_1002dbfb
call sub_1002bdd9
mov [ rw-data ] eax
retn
sub_1002dc06
call sub_1002bdd9
mov [ rw-data ] eax
retn
sub_1002dc11
call sub_1002bd98
mov [ rw-data ] eax
retn
sub_1002dc1c
call sub_1002bd98
mov [ rw-data ] eax
retn
sub_1002dc27
mov ecx rw-data
jmp sub_10014223
sub_1002dc31
mov ecx rw-data
jmp sub_1000872a
sub_1002dc3b
mov ecx rw-data
jmp sub_10014223
sub_1002dc45
mov ecx rw-data
jmp sub_10014f41
sub_1002dc4f
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100170e2
sub_1002dc63
mov [ rw-data ] r--data
retn
sub_1002dc6e
mov [ rw-data ] r--data
retn
