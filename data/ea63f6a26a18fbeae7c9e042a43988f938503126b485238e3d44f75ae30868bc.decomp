sub_4249e2
push 0x9afd6efd
lea esp [ esp + 0x10 ]
jae rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
jmp rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
stc
clc
call sub_5063db
je rwxdata
mov edx 0x7932cae9
shr [ edi + eax * 2 ] 0xa3
imul esp [ edi + eax * 8 - 0x1 ] 0xffffffc4
lodsd [ esi ]
sub bl [ ecx - 0x30 ]
jmp rwxdata
0x420bd136 0x57c3
jle rwxdata
insb
into
xchg cl ch
outsb
xlat
xchg [ ecx ] edi
jecxz rwxdata
xchg esp eax
lodsd [ esi ]
in al dx
cdq
mov edx 0x99e2006b
mov eax [ 0xffffffffe52cc07a ]
xchg esi eax
mov edi 0x8c12df95
dec ecx
push 0x469b5057
lodsd [ esi ]
push ebx
shl [ ebp - 0x425e7696 ] 0xc7
mov al 0x6c
push ss
dec ecx
retn
sub_424c8f
jmp rwxdata
[ edi ] [ esi ]
pop esi
not si
pushfd
pushfd
mov esi [ esp + 0x30 ]
push ebp
push ebx
push [ esp + 0xc ]
lea esp [ esp + 0x40 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_5031f1
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4fe5f0
sub ah al
add eax 0x42142fd9
int 0x65
dec edx
inc ecx
xchg esi eax
movsb [ edi ] [ esi ]
inc esi
sub al 0x15
pop esp
lea esi [ 0x201b18c ]
mov [ ebp + 0x795c3dcd ] ch
and [ ecx ] dh
mov al [ 0x66e5f7b1 ]
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_424ca1
push 0x92c7db86
xor eax eax
jmp rwxdata
pushad
mov [ esp + 0x8 ] dl
jmp rwxdata
lea esp [ esp + 0x28 ]
call sub_42560c
push ebx
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
mov al 0xde
lodsb [ esi ]
pushad
pushfd
mov [ esp ] 0x2fed
not al
mov [ esp ] 0x5f3b
call sub_504324
[ edi ] [ esi ]
pop esi
not si
pushfd
pushfd
mov esi [ esp + 0x30 ]
push ebp
push ebx
push [ esp + 0xc ]
lea esp [ esp + 0x40 ]
jmp rwxdata
push 0xf8a4d147
pushad
mov bl 0x2
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
inc ecx
not al
mov al [ esp ]
mov [ esp + 0x4 ] al
mov al 0x10
lea esp [ esp + 0x24 ]
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
pushad
push 0x9f992778
pushfd
pushfd
lea esp [ esp + 0x2c ]
call sub_42560c
pushfd
pushad
adc al al
pushad
pushfd
pushfd
lea esp [ esp + 0x4c ]
jae rwxdata
pushad
push 0x30826566
mov [ esp ] dx
call sub_4fe59e
push ebx
lea esp [ esp + 0x4 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_5031f1
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_503b6a
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp rwxdata
call sub_424ca1
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4fe5f0
sub ah al
add eax 0x42142fd9
int 0x65
dec edx
inc ecx
xchg esi eax
movsb [ edi ] [ esi ]
inc esi
sub al 0x15
pop esp
lea esi [ 0x201b18c ]
mov [ ebp + 0x795c3dcd ] ch
and [ ecx ] dh
mov al [ 0x66e5f7b1 ]
pushfd
jmp sub_501c46
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_424cd4
lea esp [ esp + 0x4 ]
jle rwxdata
pushfd
push 0xb0e0333
push 0x96e5822b
push [ esp + 0x4 ]
mov [ esp + 0xc ] 0x37740108
jmp rwxdata
pushfd
mov [ esp ] 0x37740108
pushfd
call sub_503d55
pushad
pushfd
pushfd
mov [ esp + 0x30 ] 0xb9d887c2
mov [ esp + 0x4 ] 0x6666
pushfd
mov [ esp + 0x4 ] di
mov [ esp ] 0xd5
lea esp [ esp + 0x34 ]
jmp sub_508712
sub_42505b
lea esp [ esp + 0x48 ]
je rwxdata
mov bl 0x82
adc bh bh
xor bh al
shl bh cl
mov bx [ esi ]
clc
call sub_4f932f
push 0x3a85ad70
cmp ebx 0x3
push ecx
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
cmc
sbb bl 0xb9
mov bx [ esi ]
pushad
and ebx 0xfff
bt bx 0xd
pushfd
cmc
add [ ebx + edi ] edx
lea esp [ esp + 0x28 ]
pushad
push 0xbbd175a5
lea esp [ esp + 0x24 ]
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp rwxdata
jmp sub_501c40
sub_4250a1
pushfd
mov ebx [ esp + 0x4 ]
movsx si bl
push [ esp ]
mov si 0xc2a5
lea esi [ eax * 8 + 0x70564433 ]
mov edi [ esp + 0xc ]
lea esi [ ecx - 0x42ca88f9 ]
pop esi
mov esi [ esp + 0xc ]
push ebx
pushad
call j_sub_42f303
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_503b6a
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp rwxdata
pushfd
jmp sub_501c46
sub_4255f1
mov [ esp ] 0x40
stosb [ edi ]
mov [ esp ] 0xd3
mov [ esp ] 0xba
push 0x25920b29
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_5031f1
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4fe5f0
sub ah al
add eax 0x42142fd9
int 0x65
dec edx
inc ecx
xchg esi eax
movsb [ edi ] [ esi ]
inc esi
sub al 0x15
pop esp
lea esi [ 0x201b18c ]
mov [ ebp + 0x795c3dcd ] ch
and [ ecx ] dh
mov al [ 0x66e5f7b1 ]
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_42cccc
lea esi [ esp + 0x4 ]
add esp 0x4
clc
sub edi 0x4
bt di di
push [ edi ]
pushfd
mov [ esp ] 0x1b8d329d
cmp edi ebx
mov [ esp ] 0x1c
push 0x907e7b46
pushad
jmp rwxdata
lea esp [ esp + 0x28 ]
ja rwxdata
cmc
jmp rwxdata
xor al ch
pushad
xor al 0x3a
shl al 0x7
sub ebx edi
mov di dx
add al ch
dec al
lea esp [ esp + 0x20 ]
add ebx esp
mov al dl
mov al 0x13
cmp cx 0x1e0b
mov edi ebx
not al
adc al 0x65
not al
mov al 0x2e
call sub_502005
sub_42f5a0
lea esp [ esp + 0x4 ]
jne rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
push 0xc8070629
inc esi
push 0xa0ee37ac
inc edi
pushad
lea esp [ esp + 0x28 ]
jmp sub_4fcf93
sub_42f5c0
pushad
jmp rwxdata
mov esp esi
pushfd
push [ esp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_42fa39
cmp eax 0x7f
push esi
lea esp [ esp + 0xc ]
ja rwxdata
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
call sub_504998
not bl
jmp rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_500b9b
sub_42fc0c
shl eax 0x8
pushfd
push [ esp + 0x4 ]
lodsb [ esi ]
pushfd
push 0xde99be18
not al
jmp rwxdata
call sub_437a94
jmp rwxdata
pushad
lea esp [ esp + 0x34 ]
je rwxdata
jmp rwxdata
pushfd
movsx edx al
jmp sub_503106
cmc
xor eax eax
bt si 0x6
cmc
test si 0x6b2
clc
or ebx ebx
call j_sub_505111
xchg ecx eax
fimul [ edi - 0x6d ]
and [ edx + eax * 2 ] edx
mov ah 0x70
push ebx
push ebx
pop esi
les esp [ esi ]
inc ebp
push esi
and al 0x27
mov [ 0x17e3 ] eax
mov ds [ ebx - 0x2338301e ]
add bl [ eax ]
iretd
sub_42fe48
lea esp [ esp + 0x24 ]
call sub_42560c
push 0x42798f75
jns rwxdata
dec eax
xchg edi eax
cmp edi [ ebx - 0x3205142f ]
or [ esp + eax ] ebp
inc ecx
adc [ edx ] cl
cwde
xchg esp eax
shr ebx 0x1
cli
int 0x9
sub al 0x4
call sub_4ffb79
rcr [ 0x6fad20e ] 0x1
inc edx
cmc
add [ esi ] eax
0xc2893a09 0x5601
mov [ ebp + 0x3d6c3dc5 ] gs
movsd [ edi ] [ esi ]
popad
mov eax [ 0xffffffffadce1561 ]
outsb
adc al 0xda
mov edi 0x3d6cbaae
or ah [ 0x2740a2be ]
add al 0x60
shl [ edx - 0x4c ] cl
mov [ 0xffffffffa19c619e ] eax
loope rwxdata
sub_430357
cld
push [ esp + 0x3e ]
popf
mov [ esp ] 0x7166
inc esi
push edi
lea esp [ esp + 0x44 ]
ja rwxdata
call sub_4f941e
call sub_42fe48
add [ eax ] al
add [ eax ] al
adc dl dl
pushfd
pushfd
push esi
push [ esp + 0xc ]
retn 0x10
sub_430499
sub cl bl
bsf cx ax
mov ecx [ esi + 0x4 ]
stc
or ecx ecx
push ebx
lea esp [ esp + 0x8 ]
je rwxdata
mov edi 0x838201de
setb cl
mov si cx
pop esi
setb cl
jmp rwxdata
neg edi
bts bx 0x1
shl edi 0x1
add [ ebp - 0x4 ] ecx
shld bx bx 0x3
sar bx 0x1
shrd di sp cl
sub ecx 0x8
sar bl cl
xchg di bx
bswap bx
shr ecx 0x1
shl bh 0x6
mov edi [ esi ]
add bh 0x96
shl bx cl
add edi [ ebp + 0x10 ]
call sub_4fecbc
setne dl
mov dl [ esi ]
stc
mov [ esp ] 0xa31c
pushfd
not dl
call sub_4febb7
movzx cx bl
not cx
pop edi
mov ch 0xb2
movsx cx cl
pop ebx
pushfd
call sub_4fd970
and [ esi + 0xb ] 0xe7
adc [ edx + eax * 2 ] dl
rcr ah 0x52
mov [ ebp - 0x4 ] bh
frstor [ 0xffffffffcde1d8e9 ]
add dh [ ecx - 0x7e1ee6dc ]
push edi
xchg esp eax
lodsb [ esi ]
movsd [ edi ] [ esi ]
mov gs [ ebx - 0x28 ]
nop
add [ edx + 0x6653ede0 ] bl
retn 0xe311
sub_4304fc
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
pushfd
push esi
push [ esp + 0xc ]
retn 0x10
push ebx
pushfd
pushad
not dl
pushf
pop [ esp + 0x26 ]
jmp rwxdata
setne dl
mov dl [ esi ]
stc
mov [ esp ] 0xa31c
pushfd
not dl
call sub_4febb7
sub_430697
lea esp [ esp + 0x54 ]
call sub_503b5d
cmc
clc
cmp ch 0xd7
js rwxdata
cmc
cmc
cmc
cmp eax 0x7d00
pushad
pushad
jmp rwxdata
cmp eax 0x7d00
push ebp
mov [ esp ] 0xdb
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
lea esp [ esp + 0x40 ]
jae rwxdata
call sub_504998
cmc
bt ecx 0x6
cmp ah 0x5
jmp rwxdata
cmc
push ebp
push ebp
stc
cmp ah 0x5
call sub_4fe8fa
xor eax 0x4fa7b20e
adc al 0x42
mov bl 0x22
sbb [ eax - 0x4e3e0343 ] eax
scasb [ edi ]
nop
sub [ eax + 0x5d ] 0x6110818d
jns rwxdata
pushad
push esi
lea esp [ esp + 0x24 ]
jae rwxdata
inc esi
push esp
dec ecx
or [ esi + edx * 2 ] esi
lodsb [ esi ]
sbb [ edi - 0x26f8909 ] dl
add [ 0x56875db5 ] ah
jae rwxdata
or [ edx - 0x4f ] eax
pop ebp
call 0xffffffffd4a887b9
setns bl
inc ecx
push 0x166a32ab
call sub_42fa39
aad 0x5f
mov eax [ ebp - 0x8 ]
test dl 0x2
shl eax 0x1
jmp rwxdata
add eax 0x25037ea1
int3
mov dh ah
retn 0x2247
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
not bl
jmp rwxdata
jmp rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
je rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_500b9b
jmp rwxdata
pushad
mov [ ebp - 0x4 ] eax
mov [ esp + 0x4 ] edx
mov [ esp + 0x1c ] eax
pushad
mov [ esp + 0x38 ] 0x0
pop eax
lea eax [ LocalAlloc@IAT ]
mov [ esp + 0x8 ] esp
mov [ esp + 0x30 ] rwxdata
mov [ esp ] dl
mov [ esp ] ch
pushfd
push [ eax ]
pop [ esp + 0x30 ]
mov [ esp + 0x4 ] 0xc5
push [ esp + 0x4 ]
pushfd
push [ esp + 0x38 ]
retn 0x3c
cmc
xor eax eax
bt si 0x6
cmc
test si 0x6b2
clc
or ebx ebx
call j_sub_505111
xchg ecx eax
fimul [ edi - 0x6d ]
and [ edx + eax * 2 ] edx
mov ah 0x70
push ebx
push ebx
pop esi
les esp [ esi ]
inc ebp
push esi
and al 0x27
mov [ 0x17e3 ] eax
mov ds [ ebx - 0x2338301e ]
add bl [ eax ]
iretd
sub_4306d5
mov [ esp ] 0x26
neg al
test dh 0xbb
pushfd
push 0x7c285284
stc
not al
cmp bh 0x32
sub al 0xee
pushfd
test bh dl
cmp ah 0x67
cmp al [ edi ]
pushfd
not al
lea edi [ edi + 0x1 ]
setg ah
movzx ax dl
jmp rwxdata
mov eax [ esp + 0x44 ]
jmp rwxdata
mov [ esp + 0x4 ] 0x5742fea4
call sub_4f95b6
rol [ esi ] cl

sub_430706
lea esp [ esp + 0x28 ]
ja rwxdata
call sub_42f5c0
pop esi
pop edi
adc ah bh
sbb eax 0x26db4214
push [ esi + 0x7f ]
mov bh 0x3f
dec esi
jpo rwxdata
pushfd
imul edx edx 0xa
push esp
add edx eax
push 0x4c56b86e
push ebp
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
shr [ eax + ecx * 8 + 0x52 ] 0xc3
popfd
jae rwxdata
rcl al cl
ror al cl
cmp bp bx
add edi 0x1
neg al
add al dl
not al
mov al [ edi ]
jmp rwxdata
add bl [ edx - 0x5756c967 ]
inc esp
sahf
mov ah 0xd8
mov esi 0xed6aeddf
xchg ebx eax
test [ ecx - 0x12a5f81 ] ecx
rol ah cl
cmp ch [ esi ]
imul esp [ ebx - 0xaafd3e9 ] 0xffffffae
mov al 0x88
xchg edx eax
sub eax edi
add ch bl
sbb al 0xf6
and al 0x91
test al 0x4d
jmp 0x455e915f
push esp
inc ebp
add [ edx + esi * 8 ] bl
and al 0x53
mov dh dh
sub [ edi + 0x7df53688 ] ah
mov ah [ ecx ]
sub ah ah
cmp [ eax - 0x6e32afa2 ] esi
imul [ ecx ]
pushfd
sub al 0xd
in eax 0xd8
jg rwxdata
pushfd
test bl dh
test al al
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
mov ecx 0x1d0d55b6
sub ah [ ebx - 0x14 ]
movsd [ edi ] [ esi ]
adc al 0x4d
jb rwxdata
0xb63528e7 0x844b
push cs
jecxz rwxdata
ror cl 0x5
mov edi edx
sub ch dh
stc
not al
mov ecx edi
adc al al
mov al [ ecx ]
pushad
mov ah al
clc
cmp dl 0x72
bt dx 0xa
stc
add al 0xee
stc
cmc
cmp bl ch
not al
pushfd
jmp sub_5009cc
bt ax cx
jmp rwxdata
mov al [ 0x28df31e9 ]
and eax 0xeb1df5e3

test [ eax - 0x37 ] 0x13322175
dec eax
cmc
cli
pop edx
lds ebx [ ecx + 0x33 ]
mov eax [ 0x65601369 ]
insd
test [ eax + 0x6ce0491b ] bh
rcr [ ecx - 0x24 ] cl
dec eax
sti
push 0xffffff84
jne rwxdata
inc esi
push esi
cmpsd [ esi ] [ edi ]
mov dh 0x45
cmc
mov eax 0x89c20b53
add al 0xc0
insb
enter 0xc352 0x9d
out 0x1c al
int1
pop esi
and ch dh
cmp eax rwxdata
sbb al 0xf2
jmp rwxdata
sub [ eax + edx * 2 + 0x7a32af65 ] ah
in eax 0x53
movsd [ edi ] [ esi ]
pop ebp
cld
sub ah [ edi ]
pop esp
mov al 0xb
imul ecx eax 0xe418268
pushad
sub al 0x30
mov [ esp ] 0xf4
cmp al 0x9
pushfd
jmp sub_503d50
sub_4307f2
not esi
setns bl
movzx edi dl
pop ebx
movsx si cl
pushad
mov edi [ esp + 0x20 ]
pushad
movzx si al
mov esi [ esp + 0x44 ]
jmp rwxdata
mov esp ebp
jmp rwxdata
jmp rwxdata
pop ebp
pushad
mov [ esp + 0x4 ] 0x9a
push [ esp + 0x20 ]
retn 0x2c
sub_430c4d
lea esp [ esp + 0x10 ]
jne rwxdata
jmp rwxdata
shld di sp 0x1
mov edi [ edx + 0x24 ]
pushfd
mov [ esp ] al
add edi eax
call $+5
mov [ esp + 0x4 ] edx
test ecx 0xb08175d5
pushad
movzx ecx [ edi + ecx * 2 ]
add esp 0x28
bsr di cx
adc di 0x84fd
mov edi [ edx + 0x1c ]
pushfd
mov [ esp ] 0xd2
call sub_424bc7
pushfd
pushad
push 0x842f5182
mov [ esp + 0x24 ] eax
setge al
mov al 0x9e
not al
pushfd
lodsb [ esi ]
bt ax bp
clc
sub al 0xa3
clc
push ecx
clc
pushfd
xor al 0xa8
jmp rwxdata
call sub_4306d5
sub_437ac2
lea esp [ esp + 0x8 ]
ja rwxdata
pushfd
add esp 0x4
jo rwxdata
stc
pushfd
add ah 0x20
add esp 0x4
pushfd
push [ esp ]
cmp al dl
or al al
call sub_501fd4
into
add ecx [ 0x4206f818 ]
aas
retn 0xbeff
stc
bt bp 0x7
or al al
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp ] 0xd9
lea esp [ esp + 0x4 ]
je rwxdata
stc
jmp rwxdata
cmp bp 0x49e8
cmc
pushfd
bt di dx
cmp al ah
jmp sub_437e2a
or ah ah
pushfd
push 0xa4b213c9
lea esp [ esp + 0x8 ]
je rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_437c37
mov [ esp + 0x4 ] 0xe2
push edx
lea esp [ esp + 0x10 ]
call sub_42560c
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
mov al 0xde
lodsb [ esi ]
pushad
pushfd
mov [ esp ] 0x2fed
not al
mov [ esp ] 0x5f3b
call sub_504324
[ edi ] [ esi ]
pop esi
not si
pushfd
pushfd
mov esi [ esp + 0x30 ]
push ebp
push ebx
push [ esp + 0xc ]
lea esp [ esp + 0x40 ]
jmp rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
push 0x61166f96
mov bl 0x2
pushfd
jmp rwxdata
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
push ebx
inc ecx
pushfd
setae al
not al
mov al 0x10
mov [ esp + 0xc ] 0x6d
mov [ esp ] 0xbb
jmp rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_5031f1
push [ esp + 0x4 ]
lea esp [ esp + 0x14 ]
call sub_42560c
pushad
adc al al
mov [ esp + 0xc ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4fe5f0
sub ah al
add eax 0x42142fd9
int 0x65
dec edx
inc ecx
xchg esi eax
movsb [ edi ] [ esi ]
inc esi
sub al 0x15
pop esp
lea esi [ 0x201b18c ]
mov [ ebp + 0x795c3dcd ] ch
and [ ecx ] dh
mov al [ 0x66e5f7b1 ]
pushad
push 0x9f992778
pushfd
pushfd
lea esp [ esp + 0x2c ]
call sub_42560c
pushfd
pushad
adc al al
pushad
pushfd
pushfd
lea esp [ esp + 0x4c ]
jae rwxdata
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
jmp rwxdata
pushad
push 0x30826566
mov [ esp ] dx
call sub_4fe59e
push ebx
lea esp [ esp + 0x4 ]
jae rwxdata
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_503b6a
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp rwxdata
call sub_424ca1
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
not bl
jmp rwxdata
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
pushfd
jmp sub_501c46
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
stosb [ edi ]
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_500b9b
sub_437d50
call sub_42505b
push ebx
push edx
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_4fe538
call sub_504aad
cdq
mov eax 0xb91914d
inc edx
stosd [ edi ]
push ebp
loope rwxdata
adc ecx edx
test al 0xa9
xchg ecx eax
xlat
jae rwxdata
adc [ ecx ] 0xffffffd1
movsd [ edi ] [ esi ]
dec ecx
add ecx 0xffffff91
mov ah [ ebp - 0x6f ]
sbb esp [ edx - 0x64cc7cb5 ]
cmp [ ebx - 0x76 ] bl
insd
mov esi esp
xchg [ edx + 0x1f ] ecx
cmp eax 0xc7a05dbf
cmp dh [ edx + 0x37 ]
inc esp
inc ecx
adc al 0xb2
add [ 0xffffffffcf2342ee ] esi
jb rwxdata
pop esp
or eax [ esi + 0x5e ]
imul esi [ 0xfacb088 ] 0x62467984
jpe rwxdata
inc esp
and al 0x1c
sub al 0xc5
in al 0x19
mov [ esp ] si
lea esp [ esp + 0x1c ]
jmp rwxdata
idiv [ esi - 0x30 ]
fnstsw [ esi - 0x4b ]
mov [ 0xffffffffc84484ae ] eax
fnstsw [ ebx - 0x7a ]
mov ecx 0xec757823
test al 0xdb
and [ esi + ebx - 0xd735010 ] cl
or ebp esi
jge rwxdata
add [ gs : ebp - 0x17f7db9c ] cl
adc dl [ eax ]
add al ch
xor [ ebp - 0x47670000 ] 0x4d
xchg ecx eax
xchg ecx eax
or eax [ edx - 0x55 ]
dec eax
cmpsb [ esi ] [ edi ]
pop es
and [ eax - 0x61 ] cl
fsub [ ecx + 0x4c00000a ]
outsd
arpl [ ecx + 0x6c ] sp
inc esi
jb rwxdata
mov dh 0x4b
js rwxdata
push edi
pushad
jmp rwxdata
cld
shl [ edx - 0x6be3de39 ] 0x1
retn
adc [ edx - 0x1d ] esi
[ ebx ]
call sub_5072c4
sub_437e1a
push eax
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
shr bh 0x1
sub bl ch
bsf bx di
stc
mov bx [ esi ]
pushfd
mov [ esp ] 0xdb91
jmp rwxdata
bt bx 0xc
pushad
pushad
cmp ebx 0x2
mov [ esp ] 0xe2766b68
call sub_437d50
and ebx 0xfff
bt esp edx
add esp 0x4
jpo rwxdata
push 0x2f069c78
bt si 0xa
cmc
call sub_430395
pushad
add [ ebx + edi ] ax
pushad
push 0xa02bac20
push [ esp ]
lea esp [ esp + 0x48 ]
jmp rwxdata
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp sub_501c40
sub_437e2a
push 0xde633361
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
jne rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
call sub_502274
pushad
pushfd
pushfd
mov [ esp + 0x30 ] 0xb9d887c2
mov [ esp + 0x4 ] 0x6666
pushfd
mov [ esp + 0x4 ] di
mov [ esp ] 0xd5
lea esp [ esp + 0x34 ]
jmp sub_508712
sub_438002
push 0xc932b4c4
jmp rwxdata
lea esp [ esp + 0x30 ]
je rwxdata
movzx di cl
pop ebx
not di
pushfd
mov edi [ esp + 0x4 ]
mov bp 0x2fa5
xchg bp si
xchg bp si
mov esi [ esp + 0x8 ]
not bp
mov [ esp + 0x8 ] 0xda610d8c
pop ebp
mov ebp [ esp + 0x8 ]
pushad
mov [ esp + 0x4 ] 0xe7
mov [ esp + 0x4 ] 0x5f
pushfd
push [ esp + 0x30 ]
retn 0x3c
call sub_430517
sub_43821f
pushfd
pushad
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4f95b6
lea esp [ esp + 0x4c ]
ja rwxdata
cmc
bt bx 0x8
cmc
cmp ecx [ ebp - 0x4 ]
push 0x947ef7c7
call sub_4f973a
cmp al 0xd2
xlat
cmp ebp eax
or eax [ edx + 0x1c ]
add dl ch
cwde
test eax 0x224341e9
and al cl
popad
pop ecx
xchg esi eax
cmp dl ch
mov ds [ edx ]
push ds
jo rwxdata
pushad
jmp rwxdata
add [ eax ] al
xor edx 0xb3c32097
mov [ edx + 0x74527102 ] ds
rcr [ ebx + edi * 4 ] cl
xchg esp eax
clc
sar [ es : edi - 0x54e30950 ] 0x1
cwde
push ds
aas
fild [ edx + eax * 2 ]
push ecx
0xc70fdef1 0x9c17
sub ah [ esi - 0x1f ]
dec edx
push esi
test al 0x71
or cl [ edx - 0x39996bdb ]
cdq
lea esp [ esp + 0x20 ]
jb rwxdata
bt eax ecx
jmp rwxdata
call sub_4fe42b
cmpsb [ esi ] [ edi ]
fwait
cmp ecx [ ebp - 0x8 ]
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
and si cx
sub ecx 0x1
sar edi 0x1f
mov [ ebp - 0x4 ] ecx
bt dx di
stc
mov ecx [ ebp - 0x8 ]
adc di 0x9262
inc si
add ecx [ ebp - 0x4 ]
dec di
shr ecx 0x1
btr si 0x2
pushfd
ror edi cl
cmc
mov edi [ ebx + ecx * 4 ]
btr si si
shl si cl
add edi eax
call j_sub_4fe7e9
or eax 0x4b7f930e
adc al 0x42
pop eax
inc esp
mov esi 0xda18e2ed
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
pushfd
mov [ esp ] dl
and [ edx ] al
cmp [ edi + 0x50 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x36 ] cl
push eax
add [ eax ] al
add [ eax ] al
add [ ebx ] bh
dec ebp
clc
adc [ esi + 0x65 ] edx
pop edx
pop eax
jno rwxdata
lea esp [ esp + 0x4 ]
jbe rwxdata
insd
push esp
jne rwxdata
adc al 0x69
clc
push ss
jb rwxdata
and eax 0x645971bd
mov bx 0x5448
mov esp 0x6384700a
mov ebx 0x9cbb975e
mov ebx [ edi + 0x2d1434fc ]
salc
inc edx
std
push ss
push esi
cmpsd [ esi ] [ edi ]
pop edx
sub_4f95f9
push [ esp ]
lea esp [ esp + 0x8 ]
ja rwxdata
rol ah cl
xor ah 0x79
add ah ch
sbb ah bl
mov ah [ esi ]
push 0xd1ab8eb8
cmp ah 0x41
jmp rwxdata
dec ah
setge ah
add al 0x20
mov [ esp ] 0xaf47
pushfd
mov [ esp ] al
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
add esp 0x4
jo rwxdata
stc
bt si 0x3
cmp ah 0x5a
pushfd
call sub_437ac2
into
pushad
int 0x11
dec [ ebx ]
inc edx
sub cl ah
mov [ 0x533c17a8 ] eax
pushfd
push [ esp ]
cmp al dl
or al al
call sub_501fd4
into
add ecx [ 0x4206f818 ]
aas
retn 0xbeff
stc
bt bp 0x7
or al al
jmp rwxdata
jl rwxdata
test al 0x17
cmp al 0x53
and [ edi - 0x651b3c54 ] dl
mov ebp edx
iretd
jmp rwxdata
pushfd
mov [ esp ] 0xd9
lea esp [ esp + 0x4 ]
je rwxdata
stc
jmp rwxdata
cmp bp 0x49e8
cmc
pushfd
bt di dx
cmp al ah
jmp sub_437e2a
or ah ah
pushfd
push 0xa4b213c9
lea esp [ esp + 0x8 ]
je rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_4f98d3
mov [ esp + 0x8 ] al
lea esp [ esp + 0xc ]
jae rwxdata
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_503b6a
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp rwxdata
stc
jg rwxdata
pushfd
jmp sub_501c46
push esi
pushfd
sub eax eax
mov [ esp + 0x4 ] bl
call sub_437c37
clc
xor eax eax
call j_sub_5023df
sub_4f990d
pushfd
jmp rwxdata
push [ esp + 0x8 ]
dec dl
jmp rwxdata
jmp rwxdata
clc
rol dl 0x1
cmc
cmp bl 0x1b
call sub_430357
xchg esp eax
fucom st2
push cs
ror [ ebx ] 0x1
inc edx
sti
xchg [ ebx + ebx + 0x3f809e50 ] eax
or [ esi + 0x6a704798 ] bl
lahf
out dx eax
or al 0xc3
or al 0x2a
call 0xffffffffa10bba0e
out dx al
sub [ ecx - 0x2 ] ah
fxch st3
mov al 0x5d
call 0xfffffffff1f175a9
stc
imul ecx edx 0x3

sub_4f99c4
lea esp [ esp + 0x2c ]
je rwxdata
mov edi 0x838201de
setb cl
mov si cx
pop esi
setb cl
jmp rwxdata
pushfd
test dh 0x2
bts bx 0x8
or di si
add [ ebp - 0x4 ] ecx
cmp ecx esp
sub ecx 0x8
bsf bx ax
shr ecx 0x1
sbb di si
xadd bx di
clc
mov edi [ esi ]
rcl bl 0x1
pushfd
rol bx 0xe
add edi [ ebp + 0x10 ]
shld bx si 0xd
add esi 0x8
lea esp [ esp + 0x8 ]
jmp rwxdata
movzx cx bl
not cx
pop edi
mov ch 0xb2
movsx cx cl
pop ebx
pushfd
call sub_4fd970
and [ esi + 0xb ] 0xe7
adc [ edx + eax * 2 ] dl
rcr ah 0x52
mov [ ebp - 0x4 ] bh
frstor [ 0xffffffffcde1d8e9 ]
add dh [ ecx - 0x7e1ee6dc ]
push edi
xchg esp eax
lodsb [ esi ]
movsd [ edi ] [ esi ]
mov gs [ ebx - 0x28 ]
nop
add [ edx + 0x6653ede0 ] bl
retn 0xe311
pushad
mov bx [ esi ]
pushfd
cmc
cmc
pushfd
shr ebx 0xc
cmc
clc
cmp ah bl
cmp ebx 0x1
call sub_4f9aea
iretd
sub_4f9aea
pushfd
mov [ esp + 0x8 ] ebx
jmp rwxdata
lea esp [ esp + 0x30 ]
je rwxdata
shr bh 0x1
sub bl ch
bsf bx di
stc
mov bx [ esi ]
pushfd
mov [ esp ] 0xdb91
jmp rwxdata
bt bx bx
test bl 0x5a
cmp ebx 0x2
push 0x83dc2749
call sub_42f58d
pop ss
pushfd
jmp rwxdata
and ebx 0xfff
bt esp edx
add esp 0x4
jpo rwxdata
pushad
mov [ esp + 0x1c ] 0xc4040107
push 0x128ca9f0
mov [ esp + 0x1c ] 0x42207e49
mov [ esp + 0x4 ] 0xd4
push ecx
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
push 0x2f069c78
bt si 0xa
cmc
call sub_430395
pushad
add [ ebx + edi ] ax
pushad
push 0xa02bac20
push [ esp ]
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_507893
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp sub_501c40
sub_4fcd40
call sub_42fbbd
lea esp [ esp + 0x30 ]
je rwxdata
shr bh 0x1
sub bl ch
bsf bx di
stc
mov bx [ esi ]
pushfd
mov [ esp ] 0xdb91
jmp rwxdata
bt bx bx
test bl 0x5a
cmp ebx 0x2
push 0x83dc2749
call sub_42f58d
pop ss
pushfd
jmp rwxdata
and ebx 0xfff
bt esp edx
add esp 0x4
jpo rwxdata
pushad
mov [ esp + 0x1c ] 0xc4040107
push 0x128ca9f0
mov [ esp + 0x1c ] 0x42207e49
mov [ esp + 0x4 ] 0xd4
push ecx
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
push 0x2f069c78
bt si 0xa
cmc
call sub_430395
pushad
add [ ebx + edi ] ax
pushad
push 0xa02bac20
push [ esp ]
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_507893
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp sub_501c40
sub_4fcd6a
mov esp esi
push 0x433badd5
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4fd970
setpo ch
movzx cx dl
mov ecx [ esp + 0x8 ]
pushfd
mov [ esp ] 0xd9
push 0xdfa1fb9c
mov [ esp + 0x4 ] 0x74
mov esp ebp
movsx ebp cl
pop ebp
pushad
pushad
mov [ esp ] sp
mov [ esp + 0x4 ] dl
push [ esp + 0x40 ]
retn 0x54
sub_4fe000
pushfd
jmp rwxdata
[ edi ]
mov [ esp ] 0x98
lea esp [ esp + 0xc ]
jne rwxdata
call sub_42f5c0
pop esi
pop edi
adc ah bh
sbb eax 0x26db4214
push [ esi + 0x7f ]
mov bh 0x3f
dec esi
jpo rwxdata
mov eax 0xe52a99cb
bswap ax
movsx ax bl
movsx ax dl
mov [ edi - 0x1 ] 0x0
movsx eax cl
push ebx
setg al
movzx eax al
movsx ax bl
lea eax [ ebx - 0x64cb9a1a ]
lea eax [ rwxdata ]
call sub_4f98f0
shr [ eax + ecx * 8 + 0x52 ] 0xc3
popfd
jae rwxdata
add bl [ edx - 0x5756c967 ]
inc esp
sahf
mov ah 0xd8
mov esi 0xed6aeddf
xchg ebx eax
test [ ecx - 0x12a5f81 ] ecx
rol ah cl
cmp ch [ esi ]
imul esp [ ebx - 0xaafd3e9 ] 0xffffffae
mov al 0x88
xchg edx eax
sub eax edi
add ch bl
sbb al 0xf6
and al 0x91
test al 0x4d
jmp 0x455e915f
push esp
inc ebp
add [ edx + esi * 8 ] bl
and al 0x53
mov dh dh
sub [ edi + 0x7df53688 ] ah
mov ah [ ecx ]
sub ah ah
cmp [ eax - 0x6e32afa2 ] esi
imul [ ecx ]
pushfd
sub al 0xd
in eax 0xd8
jg rwxdata
mov ecx 0x1d0d55b6
sub ah [ ebx - 0x14 ]
movsd [ edi ] [ esi ]
adc al 0x4d
jb rwxdata
0xb63528e7 0x844b
push cs
jecxz rwxdata
mov al [ 0x28df31e9 ]
and eax 0xeb1df5e3

test [ eax - 0x37 ] 0x13322175
dec eax
cmc
cli
pop edx
lds ebx [ ecx + 0x33 ]
mov eax [ 0x65601369 ]
insd
test [ eax + 0x6ce0491b ] bh
rcr [ ecx - 0x24 ] cl
dec eax
sti
push 0xffffff84
jne rwxdata
inc esi
push esi
cmpsd [ esi ] [ edi ]
mov dh 0x45
cmc
mov eax 0x89c20b53
add al 0xc0
insb
enter 0xc352 0x9d
out 0x1c al
int1
pop esi
and ch dh
cmp eax rwxdata
sbb al 0xf2
sub [ eax + edx * 2 + 0x7a32af65 ] ah
in eax 0x53
movsd [ edi ] [ esi ]
pop ebp
cld
sub ah [ edi ]
pop esp
mov al 0xb
imul ecx eax 0xe418268
sub_4fe514
pushad
lea esp [ esp + 0x28 ]
call sub_4fe538
jg rwxdata
push 0x103feca1
call sub_4fcd6a
push 0x904300ef
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4fe538
not ah
aad 0x89
movzx eax dl
push ebp
test al 0xeb
mov ebp esp
lahf
sub esp 0x18
pushfd
mov [ esp ] esi
rol ax 0x9
push edi
shr ax 0x4
daa
bsr ax cx
push ebx
lea eax [ ecx - 0x6eda8a42 ]
sar al cl
push edx
sub al bh
ror eax 0x4
rcl ah cl
mov eax [ ebp + 0x8 ]
pushad
clc
test dh 0xe5
stc
test eax eax
push [ esp ]
lea esp [ esp + 0x24 ]
je rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
movsx si cl
mov esi [ eax + 0x3c ]
shrd dx bx 0xc
add esi eax
and dl 0x76
mov edx [ esi + 0x78 ]
pushad
stc
call sub_5032de
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4fe59e
lea esp [ esp + 0x28 ]
jne rwxdata
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
jmp rwxdata
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
not bl
jmp rwxdata
stosb [ edi ]
pushfd
mov [ esp ] bl
lea esp [ esp + 0x24 ]
jmp rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_500b9b
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_5031f1
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4fe5f0
sub ah al
add eax 0x42142fd9
int 0x65
dec edx
inc ecx
xchg esi eax
movsb [ edi ] [ esi ]
inc esi
sub al 0x15
pop esp
lea esi [ 0x201b18c ]
mov [ ebp + 0x795c3dcd ] ch
and [ ecx ] dh
mov al [ 0x66e5f7b1 ]
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_4fe5f0
call sub_4f98d3
ja rwxdata
mov esi [ eax + 0x3c ]
test [ ecx - 0x1f ] ebx
or eax [ edx + 0x7e ]
mov bl [ ebx - 0x68a1d0e6 ]
sub ah al
add edi [ ecx + 0x48 ]
or [ eax ] ch
sub [ ebp + edx * 2 - 0x28435052 ] ecx
or eax 0x12d53903
xlat
push ebp
in al dx
call 0x190c85f5
cdq
lahf
push ds
mov [ edx + 0x419b543f ] cs
or al 0xfa
cmp eax 0x49a16580
nop
jpe rwxdata
ja rwxdata
jl rwxdata
jb rwxdata
xlat
call [ edi - 0x7cfcc595 ]
arpl bx di
xor ebx [ ebx - 0x49 ]
std
cdq
push 0x2b611fa8
sub al 0x6b
pop eax
lahf
jae rwxdata
inc edx
jle rwxdata
and eax 0xb1412aa7
push esi
dec edi
test [ ebp + eax * 8 - 0x52 ] eax
push es
loope rwxdata
dec esp
sbb bl ah
push ecx
dec ebp
cmp [ eax + 0x49 ] cl
xor ch [ ebx - 0x2815680f ]
jo rwxdata
scasd [ edi ]
jae rwxdata
fwait
sbb ch [ edi ]
pop esi
xchg edi eax
xor ch [ 0x6966613 ]
stosb [ edi ]
sub [ eax ] ebx
nop
ror [ eax ] cl
rol dh 0x1
push eax
cmp [ ecx + 0x4e ] bl
sahf
inc ebp
sub ebp ecx
inc ebx
cmp al 0x0
add [ eax - 0x55 ] ch
0x648dbe70 0x3024
call sub_4fe538
pushad
jmp rwxdata
retn 0xb5f6
pushfd
pushfd
mov [ esp + 0x4 ] eax
call sub_5088c0
popfd
pushad
mov [ esp + 0x1c ] 0xf83c013f
push [ esp + 0x10 ]
mov [ esp + 0x1c ] 0x5e0f6a9e
pushad
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
dec esp
shrd dx bx 0xc
add esi eax
and dl 0x76
mov edx [ esi + 0x78 ]
pushad
stc
call sub_5032de
push 0x3cbea641
mov esp esi
push edi
push [ esp ]
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4fe6bc
push 0xbe709aab
lea esp [ esp + 0x30 ]
call sub_4fe538
pushad
jmp rwxdata
push 0x3cbea641
mov esp esi
push edi
push [ esp ]
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4fe7e9
mov si [ esp + 0x4 ]
pop esi
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x4 ]
jmp rwxdata
pushfd
pushad
push 0x842f5182
mov [ esp + 0x24 ] eax
setge al
mov al 0x9e
not al
pushfd
lodsb [ esi ]
bt ax bp
clc
sub al 0xa3
clc
push ecx
clc
pushfd
xor al 0xa8
jmp rwxdata
call sub_4306d5
sub_4fe8fa
lea esp [ esp + 0xc ]
jae rwxdata
setns bl
inc ecx
test al ah
jmp rwxdata
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
not bl
jmp rwxdata
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_500b9b
sub_4feabf
lea esp [ esp + 0xc ]
jae rwxdata
pushad
push 0x9f992778
pushfd
pushfd
lea esp [ esp + 0x2c ]
call sub_42560c
pushfd
pushad
adc al al
pushad
pushfd
pushfd
lea esp [ esp + 0x4c ]
jae rwxdata
call sub_502fbb
call sub_424cd4
pushad
push 0x30826566
mov [ esp ] dx
call sub_4fe59e
push ebx
lea esp [ esp + 0x4 ]
jae rwxdata
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_503b6a
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp rwxdata
call sub_424ca1
pushfd
jmp sub_501c46
sub_4feb95
test ah 0xa8
mov edi [ edi + ecx * 4 ]
cmp ah ah
push edx
mov [ esp + 0x8 ] ebx
test edi edi
push ebx
lea esp [ esp + 0x14 ]
je rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
test cl 0x16
jmp rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
add eax edi
clc
cmp eax edx
push 0x843e1ac9
mov [ esp ] ch
lea esp [ esp + 0x4 ]
jb rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
bt esi 0x13
cmp eax [ ebp - 0x10 ]
jmp rwxdata
jmp rwxdata
push edi
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
rcr cl cl
mov ebx eax
inc cl
mov edi eax
push 0x4b780c13
mov ecx 0x104
test ch 0xfa
cmc
xor al al
jmp rwxdata
[ edi ]
call sub_4fed5b
xchg [ edi + 0xbe42cc0 ] bl
inc edx
push ss
push ebp
sahf
aam 0x2a
jo rwxdata
std
cmp eax 0x27b07a1c
adc al 0xd6
aaa
xchg [ ebx - 0x3900ed ] bh
mov dh 0x9b
edi
rcl [ 0xffffffffdfac9719 ] 0x76
int 0x2b
push 0x8c6c7941
rol [ edx - 0x12 ] cl
pop eax
outsd
les esi [ ecx + edi * 4 - 0x28 ]
loope rwxdata
xchg esp esi
push ecx
fsubr [ 0xffffffff9a9ef888 ]
inc edi
sbb al 0xdb
aaa
in eax dx
sbb [ edx ] ebx
loope rwxdata
adc [ edx + 0xf591c44 ] dh
add eax 0xe14e6faa
mov [ edx + 0x4444414a ] 0x1016d5c6
jecxz rwxdata
mov ecx 0x8c1e8b97
lds esi [ 0xffffffffc1220b13 ]
jecxz rwxdata
shr [ ebx ] 0x3
and eax 0xd74bdff4
adc eax 0xeca738a4
mov al 0x5a
ror [ edi ] cl
in al 0xb
inc edx
sub [ eax + 0x11694059 ] bl
sub [ esi - 0x6d ] dh
jae rwxdata
cli
mov ebp 0x6b18d1f2
inc esp
xchg esp eax
stc
pop eax
out dx al
jg rwxdata
imul edx [ ecx ] 0x73937628
dec ebp
pop ebx
fdivr st0
push edi
sbb [ esp + edx * 4 - 0x52 ] ebx
outsd
mov dl [ ecx + 0x7e ]
sbb eax 0x20415022
sbb eax 0x2d0cd59c
xchg ebp eax
xor edx 0xc528814c
test al 0x7a
xchg ebx eax
outsb
push edi
js rwxdata
dec ebp
xor eax 0x1aba13e9
leave
xchg bh dh
dec ebp
sbb [ edi + edi * 8 + 0x6 ] bl
call 0xffffffff94798bda
in al 0xeb
sub [ eax + 0x42f33cd4 ] esp
push ebx
cdq
rol [ edx - 0x57 ] cl
fisub [ eax + 0x76 ]
inc edi
fisub [ edx ]
jpe rwxdata
fstp [ esi ]
sbb cl [ eax + 0x26ec5c5a ]
xchg ebp eax
cmpsd [ esi ] [ edi ]
xor eax 0xfdf487c5
cwde
pop ecx
inc eax
sub_4febb7
rol dl 0x1
call sub_4f990d
pushad
clc
add ecx edx
push 0x585098a7
push esi
mov [ ebp - 0x10 ] ecx
bsf cx bp
mov ecx [ ebp + 0xc ]
stc
push ebx
cmp ecx 0xffff
mov [ esp ] 0x4bc
mov [ esp + 0x4 ] esi
lea esp [ esp + 0x30 ]
jbe rwxdata
clc
jpe rwxdata
xadd di bx
shld edi esp cl
rcr ebx cl
btc di 0x8
mov edi [ edx + 0x24 ]
shr cx 0xe
xchg cl bh
add edi eax
pushfd
and ch dl
and cl bh
mov ebx [ edx + 0x20 ]
setb ch
xor ecx edx
shld ecx edi cl
movsx cx al
add ebx eax
movzx cx dl
not cl
bts ecx 0x1e
mov [ ebp - 0x8 ] 0x0
clc
bsr cx ax
pushad
mov ecx [ edx + 0x18 ]
add esp 0x24
bt eax ecx
jmp rwxdata
test si ax
pushad
call sub_42fc00
cmc
sub ecx [ edx + 0x10 ]
cmc
test si 0xd682
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
cmp ecx [ edx + 0x14 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
and si cx
sub ecx 0x1
sar edi 0x1f
mov [ ebp - 0x4 ] ecx
bt dx di
stc
mov ecx [ ebp - 0x8 ]
adc di 0x9262
inc si
add ecx [ ebp - 0x4 ]
dec di
shr ecx 0x1
btr si 0x2
pushfd
ror edi cl
cmc
mov edi [ ebx + ecx * 4 ]
btr si si
shl si cl
add edi eax
call j_sub_4fe7e9
or eax 0x4b7f930e
adc al 0x42
pop eax
inc esp
mov esi 0xda18e2ed
jo rwxdata
pushad
mov [ esp ] 0x41314364
push edi
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
pushfd
mov [ esp ] dl
and [ edx ] al
cmp [ edi + 0x50 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x36 ] cl
push eax
add [ eax ] al
add [ eax ] al
add [ ebx ] bh
dec ebp
clc
adc [ esi + 0x65 ] edx
pop edx
pop eax
jno rwxdata
bsr di cx
adc di 0x84fd
mov edi [ edx + 0x1c ]
pushfd
mov [ esp ] 0xd2
call sub_424bc7
lea esp [ esp + 0x4 ]
jbe rwxdata
insd
push esp
jne rwxdata
adc al 0x69
clc
push ss
jb rwxdata
and eax 0x645971bd
mov bx 0x5448
mov esp 0x6384700a
mov ebx 0x9cbb975e
mov ebx [ edi + 0x2d1434fc ]
salc
inc edx
std
push ss
push esi
cmpsd [ esi ] [ edi ]
pop edx
sub_4fecbc
cmc
add bl 0xdb
rol bx cl
add esi 0x8
add bh 0xcb
and bl 0xc3
xor bl 0xbb
btr bx dx
mov bx [ esi ]
stc
shr ebx 0xc
cmp al dh
clc
cmp ebx 0x1
call sub_437e1a
outsb
pop edi
mov cl 0xa4
call 0x2da12ef9
xchg esp eax
pop esi
sub eax 0x54ca89f2
popfd
cld
loope rwxdata
shl [ esi - 0x75 ] cl
push ds
jmp 0xffffffffa58a99a0
sub_4fed5b
pushfd
push [ esp ]
pushfd
lea esp [ esp + 0x34 ]
jne rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
mov si 0xe5db
adc cl 0xd3
cmp ah bh
seto cl
mov ecx edi
mov si 0x3eea
sub ecx ebx
neg si
btr si sp
btc si ax
call sub_42cccc
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4ffb79
adc ecx ecx
pushfd
call sub_42f7e3
mov [ esp ] 0xaf47
pushfd
mov [ esp ] al
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
add esp 0x4
jo rwxdata
stc
bt si 0x3
cmp ah 0x5a
pushfd
call sub_437ac2
into
pushad
int 0x11
dec [ ebx ]
inc edx
sub cl ah
mov [ 0x533c17a8 ] eax
pushfd
push [ esp ]
cmp al dl
or al al
call sub_501fd4
into
add ecx [ 0x4206f818 ]
aas
retn 0xbeff
stc
bt bp 0x7
or al al
jmp rwxdata
jl rwxdata
test al 0x17
cmp al 0x53
and [ edi - 0x651b3c54 ] dl
mov ebp edx
iretd
jmp rwxdata
pushfd
mov [ esp ] 0xd9
lea esp [ esp + 0x4 ]
je rwxdata
stc
jmp rwxdata
cmp bp 0x49e8
cmc
pushfd
bt di dx
cmp al ah
jmp sub_437e2a
or ah ah
pushfd
push 0xa4b213c9
lea esp [ esp + 0x8 ]
je rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_50041c
jmp rwxdata
pushad
clc
add ecx edx
push 0x585098a7
push esi
mov [ ebp - 0x10 ] ecx
bsf cx bp
mov ecx [ ebp + 0xc ]
stc
push ebx
cmp ecx 0xffff
mov [ esp ] 0x4bc
mov [ esp + 0x4 ] esi
lea esp [ esp + 0x30 ]
jbe rwxdata
clc
jpe rwxdata
xadd di bx
shld edi esp cl
rcr ebx cl
btc di 0x8
mov edi [ edx + 0x24 ]
shr cx 0xe
xchg cl bh
add edi eax
pushfd
and ch dl
and cl bh
mov ebx [ edx + 0x20 ]
setb ch
xor ecx edx
shld ecx edi cl
movsx cx al
add ebx eax
movzx cx dl
not cl
bts ecx 0x1e
mov [ ebp - 0x8 ] 0x0
clc
bsr cx ax
pushad
mov ecx [ edx + 0x18 ]
add esp 0x24
bt eax ecx
jmp rwxdata
test si ax
pushad
call sub_42fc00
cmc
sub ecx [ edx + 0x10 ]
cmc
test si 0xd682
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
cmp ecx [ edx + 0x14 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
and si cx
sub ecx 0x1
sar edi 0x1f
mov [ ebp - 0x4 ] ecx
bt dx di
stc
mov ecx [ ebp - 0x8 ]
adc di 0x9262
inc si
add ecx [ ebp - 0x4 ]
dec di
shr ecx 0x1
btr si 0x2
pushfd
ror edi cl
cmc
mov edi [ ebx + ecx * 4 ]
btr si si
shl si cl
add edi eax
call j_sub_4fe7e9
or eax 0x4b7f930e
adc al 0x42
pop eax
inc esp
mov esi 0xda18e2ed
jo rwxdata
pushad
mov [ esp ] 0x41314364
push edi
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
pushfd
mov [ esp ] dl
and [ edx ] al
cmp [ edi + 0x50 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x36 ] cl
push eax
add [ eax ] al
add [ eax ] al
add [ ebx ] bh
dec ebp
clc
adc [ esi + 0x65 ] edx
pop edx
pop eax
jno rwxdata
bsr di cx
adc di 0x84fd
mov edi [ edx + 0x1c ]
pushfd
mov [ esp ] 0xd2
call sub_424bc7
lea esp [ esp + 0x4 ]
jbe rwxdata
insd
push esp
jne rwxdata
adc al 0x69
clc
push ss
jb rwxdata
and eax 0x645971bd
mov bx 0x5448
mov esp 0x6384700a
mov ebx 0x9cbb975e
mov ebx [ edi + 0x2d1434fc ]
salc
inc edx
std
push ss
push esi
cmpsd [ esi ] [ edi ]
pop edx
sub_500505
lea esp [ esp + 0x50 ]
jb rwxdata
rol ah cl
xor ah 0x79
add ah ch
sbb ah bl
mov ah [ esi ]
push 0xd1ab8eb8
cmp ah 0x41
jmp rwxdata
jmp rwxdata
mov [ esp ] 0xaf47
pushfd
mov [ esp ] al
lea esp [ esp + 0x8 ]
jb rwxdata
stc
cmp ah 0xd4
cmp al 0x5a
call j_sub_4f95f9
pushfd
add esp 0x4
jo rwxdata
stc
bt si 0x3
cmp ah 0x5a
pushfd
call sub_437ac2
into
pushad
int 0x11
dec [ ebx ]
inc edx
sub cl ah
mov [ 0x533c17a8 ] eax
pushfd
push [ esp ]
cmp al dl
or al al
call sub_501fd4
into
add ecx [ 0x4206f818 ]
aas
retn 0xbeff
stc
bt bp 0x7
or al al
jmp rwxdata
jl rwxdata
test al 0x17
cmp al 0x53
and [ edi - 0x651b3c54 ] dl
mov ebp edx
iretd
jmp rwxdata
pushfd
mov [ esp ] 0xd9
lea esp [ esp + 0x4 ]
je rwxdata
stc
jmp rwxdata
cmp bp 0x49e8
cmc
pushfd
bt di dx
cmp al ah
jmp sub_437e2a
or ah ah
pushfd
push 0xa4b213c9
lea esp [ esp + 0x8 ]
je rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_5009cc
bt cx bp
call sub_50149d
mov edi 0xd0cd073
adc al 0x42
sbb [ eax - 0x6a020647 ] dh
push ebp
adc al 0x59
jo rwxdata
sub [ 0x26158d75 ] dl
popfd
into
cmc
fdecstp
xchg ebp eax
mov esi 0x2bf2d5
inc eax
iretd
sub_500b9b
[ edi ] [ esi ]
pop esi
mov esi edi
mov esi [ esp + 0x44 ]
pushfd
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_5031f1
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4fe5f0
sub ah al
add eax 0x42142fd9
int 0x65
dec edx
inc ecx
xchg esi eax
movsb [ edi ] [ esi ]
inc esi
sub al 0x15
pop esp
lea esi [ 0x201b18c ]
mov [ ebp + 0x795c3dcd ] ch
and [ ecx ] dh
mov al [ 0x66e5f7b1 ]
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_500fc4
push 0xe22330a9
mov [ esp ] 0xb60c013f
jmp rwxdata
pushfd
mov [ esp ] 0x36c7677b
push 0xde565282
pushad
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] eax
jmp rwxdata
jmp rwxdata
push esi
mov [ esp + 0x3c ] ebx
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] esi
mov [ esp ] ebx
push 0xbcf07293
push [ esp ]
mov [ esp + 0x44 ] ebp
pushfd
call sub_509177
sub_5012c6
pushfd
call sub_430c4d
cmpsb [ esi ] [ edi ]
int1
sub eax 0x39421416
jo rwxdata
xchg edi eax
loopne rwxdata
cmp al 0x17
xchg [ edi - 0x4049401a ] ch
push ss
sub eax [ edx - 0x69 ]
cmpsd [ esi ] [ edi ]
inc esi
or [ eax + 0x60 ] ecx
jl rwxdata
sub al 0xcf
jmp rwxdata
jg rwxdata
sbb [ edi - 0x556aef8d ] bl
mov [ 0x14223614 ] eax
bound ecx [ ss : edi + 0x58 ]
and [ edi + 0x3f4294bd ] bh
lahf
cld
rcl [ edx - 0x40 ] 0xe
add ecx [ edx + 0x4bf303a3 ]
xlat
ficom [ ebx ]
inc eax
jne rwxdata
push ebx
cmp [ eax + 0x7e ] esi
test al 0xe0
stosb [ edi ]
mov edi 0x426b9235
xchg edi edx
cmp eax [ edx - 0x30 ]
out dx eax
in al 0x6d
movsb [ edi ] es : [ esi ]
sbb dx [ edi + 0x2c66e1e0 ]
iretd
sub_50149d
neg al
pushfd
mov [ esp ] dl
cmc
clc
xor al 0xa8
mov [ esp ] 0x9e73f47d
jmp rwxdata
cmc
cmc
add al 0xa3
pushfd
clc
cmc
cmc
mov [ ecx ] al
cmc
test dh dh
jmp rwxdata
add ecx 0x1
pushfd
pushfd
jmp rwxdata
test ah ah
lea esp [ esp + 0x38 ]
jbe rwxdata
push 0x6a602596
pushad
pushad
lea esp [ esp + 0x44 ]
jne rwxdata
pushad
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
adc al al
mov al [ ecx ]
pushad
mov ah al
clc
cmp dl 0x72
bt dx 0xa
stc
add al 0xee
stc
cmc
cmp bl ch
not al
pushfd
jmp sub_5009cc
pushad
push 0x6222049
push eax
mov [ esp + 0x24 ] edi
jmp sub_500b82
pushfd
mov [ esp ] bl
pushfd
lea esp [ esp + 0x8 ]
js rwxdata
pushfd
mov [ esp ] ah
pushad
pushad
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x257a67f4
pushfd
mov [ esp + 0x40 ] ebx
call sub_502033
adc al 0x3d
pop ecx
int 0x88
or eax [ edx - 0x27 ]
jno rwxdata
push edi
pushfd
lea esp [ esp + 0x4 ]
jg rwxdata
lodsb [ esi ]
cld
outsb
mov edi 0xa9fdd0db
scasb [ edi ]
jle rwxdata
and eax 0xd5ae9d16
out dx al
test [ esi - 0x5542f923 ] edx
jmp rwxdata
push ebx
push ecx
call sub_4fe514
test cl 0x2
clc
add dl dl
push esi
call sub_4304fc
leave
test bl dh
or eax [ edx - 0x40 ]
xor [ edi ] al
loopne rwxdata
sub bh [ eax - 0x7b ]
push ebx
push edx
pushfd
jmp rwxdata
into
bts cx dx
mov [ esp + 0x14 ] esi
rol si 0xd
shl dl cl
cmc
bsr edx ecx
mov edx [ ebp + 0x8 ]
ror ch cl
setne ch
cmc
call sub_4fe9af
xor al 0x1d
mov [ 0x420b89b6 ] eax
mov esi es
fnclex
jmp rwxdata
inc esi
insb
pop es
jpe rwxdata
jmp rwxdata
inc edx
scasb [ edi ]
and al 0x15
lodsb [ esi ]
inc eax
xor [ edx + 0x1097cba7 ] 0x6a
js rwxdata
fld [ esi ]
mov ebp 0x81faf0aa
sahf
aam 0xf5
aad 0x10
fadd st7
or [ edi ] al
and edi [ eax - 0x2a ]
0x8f7baec5 0xcea8
inc ecx
xor [ ebp + 0x9 ] cl
into
push 0xffffffff
fwait
cmp eax 0x6ae328c4
[ edi ] [ esi ]
outsd
clc
daa
in al 0x6f
or [ ecx + edi * 8 ] eax
retn 0x11e6
lea esp [ esp + 0x8 ]
call sub_4fe538
call sub_504aad
cdq
mov eax 0xb91914d
inc edx
stosd [ edi ]
xchg esi eax
push esp
jmp 0xffffffff81b09027
sar [ ecx + 0x3bd0435e ] 0xce
push ebp
loope rwxdata
adc ecx edx
test al 0xa9
xchg ecx eax
xlat
jae rwxdata
mov edx 0xe5f0a9db
jg rwxdata
adc [ ecx ] 0xffffffd1
movsd [ edi ] [ esi ]
dec ecx
add ecx 0xffffff91
mov ah [ ebp - 0x6f ]
sbb esp [ edx - 0x64cc7cb5 ]
cmp [ ebx - 0x76 ] bl
insd
mov esi esp
xchg [ edx + 0x1f ] ecx
cmp eax 0xc7a05dbf
cmp dh [ edx + 0x37 ]
inc esp
inc ecx
adc al 0xb2
add [ 0xffffffffcf2342ee ] esi
jb rwxdata
pop esp
or eax [ esi + 0x5e ]
imul esi [ 0xfacb088 ] 0x62467984
jpe rwxdata
inc esp
and al 0x1c
sub al 0xc5
in al 0x19
mov [ esp ] si
lea esp [ esp + 0x1c ]
jmp rwxdata
idiv [ esi - 0x30 ]
fnstsw [ esi - 0x4b ]
mov [ 0xffffffffc84484ae ] eax
fnstsw [ ebx - 0x7a ]
mov ecx 0xec757823
test al 0xdb
and [ esi + ebx - 0xd735010 ] cl
imul esp [ ebx - 0x50b289ce ] 0x7955d36
loop rwxdata
push 0x6b
jpo rwxdata
or ebp esi
jge rwxdata
add [ gs : ebp - 0x17f7db9c ] cl
adc dl [ eax ]
add al ch
xor [ ebp - 0x47670000 ] 0x4d
xchg ecx eax
xchg ecx eax
or eax [ edx - 0x55 ]
dec eax
cmpsb [ esi ] [ edi ]
pop es
and [ eax - 0x61 ] cl
fsub [ ecx + 0x4c00000a ]
outsd
arpl [ ecx + 0x6c ] sp
inc esi
jb rwxdata
mov dh 0x4b
js rwxdata
push edi
pushad
jmp rwxdata
mov cl [ ebx ]
inc edx
and esi ebp
dec esp
pop ebx
xchg [ eax + 0x1f0691 ] cl
out dx eax
mov al 0xb7
lodsb [ esi ]
loop rwxdata
mov ecx 0x3bd0435e
into
mov edx 0x21ca5073
or eax 0x36699c1
stosb [ edi ]
dec eax
dec ecx
pop eax
into
pop esi
sub eax 0xb8f26bee
sbb eax ebx
add esi ebp
fwait
rcl [ eax - 0x10855a0f ] 0x19
mov eax [ 0xffffffffe9549604 ]
cmc
add [ ecx - 0x7f ] esp
cmc
pop esp
or al 0xec
int3
xchg edx eax
sbb edi [ edx - 0x1a0f5625 ]
cld
shl [ edx - 0x6be3de39 ] 0x1
retn
adc [ edx - 0x1d ] esi
[ ebx ]
call sub_5072c4
sub_501c11
pushad
mov [ esp + 0x8 ] 0xd75f0cbb
lea esp [ esp + 0x28 ]
je rwxdata
pushfd
cmc
sbb bl 0xb9
mov bx [ esi ]
pushad
and ebx 0xfff
bt bx 0xd
pushfd
cmc
add [ ebx + edi ] edx
lea esp [ esp + 0x28 ]
pushad
mov [ esp + 0x4 ] bh
push eax
lea esp [ esp + 0x24 ]
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp rwxdata
jmp sub_501c40
sub_501c46
lea esp [ esp + 0xc ]
jne rwxdata
pushad
pushfd
xchg ecx eax
push 0xc03f9784
push 0xd5fb471a
call sub_50684e
pushfd
lea esp [ esp + 0x4 ]
call sub_503b5d
push ebx
push esp
push 0x1e67b168
lea esp [ esp + 0xc ]
jmp rwxdata
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
dec bl
xchg ebp eax
not bl
jmp rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_500b9b
sub_501fd4
pushad
mov [ esp ] 0xd5
push [ esp + 0x10 ]
lea esp [ esp + 0x30 ]
je rwxdata
stc
jmp rwxdata
bt dx 0x8
clc
cmp al ah
call sub_42f5a0
mov bl 0x82
adc bh bh
xor bh al
shl bh cl
mov bx [ esi ]
clc
call sub_4f932f
or ah ah
pushfd
push 0xa4b213c9
lea esp [ esp + 0x8 ]
je rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_502033
call sub_5004f2
mov bl 0xa8
inc ebp
cdq
and al 0x14
inc edx
mov esi 0x343b7c43
mov [ 0xffffffff98090d06 ] eax
je rwxdata
into
idiv [ ebx + edi * 2 + 0x57 ]
sub [ ecx + eax + 0x64ed8f42 ] 0x55
popfd
jl rwxdata
xchg [ edi ] dh
fidivr [ edx + 0x7f0d2c5f ]
mov esi 0x7242f77f
cli
pop ebp
jle rwxdata
pushfd
and dh [ eax + 0x5f1285a ]
sar [ edx ] 0x1
jo rwxdata
stc
jpo rwxdata
in al dx
aad 0x8a
out 0x66 al
leave
inc ebx
imul esi [ edx + 0x373a844c ] 0xffffffde
mov edx 0xf8a699e3
cmp [ edx + 0x72 ] al
cli
push 0xffffff84
imul edi [ gs : edx + eax ] 0xffffffdb
xor edi [ edx + 0x73 ]
mov bl 0x37
dec esi
cmp [ ebx + 0xa685353 ] 0xffffffbb
retn 0xd3df
cld
adc [ eax - 0x38e7227b ] edi
in al dx
inc edx
enter 0xd0ff 0xb7
mov al [ 0xffffffff9b571ffe ]
mov [ 0xffffffffbfd64021 ] al
mov [ esp + edx * 2 + 0x4f ] ah
nop
pop esi
push eax
xchg ebp eax
pop ss
0x3609
push esp
dec edi
stc
into
push esi
in eax 0x7f
mov esi 0xf174ae1b
cdq
lahf
out dx eax
push edi
lea ecx [ ebp - 0x119177e4 ]
pop ebp
lodsd [ esi ]
jno rwxdata
and al 0x14
inc edx
or ebp edi
push es
dec esp
0xe608
sub_5022a2
lea esp [ esp + 0x1c ]
je rwxdata
mov edi 0x838201de
setb cl
mov si cx
pop esi
setb cl
jmp rwxdata
pushad
push 0xc1a1244
bt ecx ebx
cmp di 0x6ac0
or ecx ecx
pushad
lea esp [ esp + 0x44 ]
je rwxdata
movzx cx bl
not cx
pop edi
mov ch 0xb2
movsx cx cl
pop ebx
pushfd
call sub_4fd970
and [ esi + 0xb ] 0xe7
adc [ edx + eax * 2 ] dl
rcr ah 0x52
mov [ ebp - 0x4 ] bh
frstor [ 0xffffffffcde1d8e9 ]
add dh [ ecx - 0x7e1ee6dc ]
push edi
xchg esp eax
lodsb [ esi ]
movsd [ edi ] [ esi ]
mov gs [ ebx - 0x28 ]
nop
add [ edx + 0x6653ede0 ] bl
retn 0xe311
shr eax 0x1d
bts ax 0xd
dec ax
jl rwxdata
inc ch
clc
bts ecx edi
sub ebx ebx
call sub_4fd9a1
push edx
jpo rwxdata
sub ebx ebx
aad 0xae
btc ax 0xe
mov [ ebp - 0x4 ] ebx
mov al bh
test bl ch
mov eax edx
clc
adc ch ah
shr eax 0x10
movsx cx al
movzx ecx al
mov ecx [ esi + 0x4 ]
call j_sub_502753
jmp rwxdata
inc ecx
je rwxdata
pushad
mov [ esp + 0x1c ] 0x4428013e
push [ esp + 0x8 ]
jmp rwxdata
mov cl 0x45
insb
leave
adc esp [ 0x3a39c4d5 ]
in eax 0x99
insd
and al 0xf5
popfd
jno rwxdata
fsub st1
popfd
les ecx [ ecx ]
push ebp
dec [ ecx + ebx * 4 - 0x46a841f5 ]
imul [ ebp - 0x7a5bd7e8 ]
dec edi
xor eax 0x1465683a
popad
mov [ ebp - 0x625716e3 ] ch
int 0x41
mov bh cl
and eax 0xc1398a6c
push esi
inc edi
sahf
push esp
ror [ edi - 0x44dbdf37 ] 0xf1
pushad
mov esp 0x8953a803
hlt
add eax 0x64effec6
shl [ esi ] 0xbd
xchg esp eax
insb
adc al 0x42
pushad
enter 0xd109 0xea
pushfd
mov [ esp + 0x4 ] 0xb5
mov [ esp + 0x20 ] 0x213f3d2a
pushfd
push 0xbe91bdc3
mov [ esp ] ax
lea esp [ esp + 0x28 ]
jmp rwxdata
xchg esp eax
push ecx
insd
into
sbb eax 0x4062754e
imul eax [ ecx + 0x60 ] 0x90531c07
das
and al 0x82
mov cl 0x9
std
jg rwxdata
shr edx 0x1
push edi
in eax 0xf4
shr [ ebx ] 0x1
fnstsw ax
mov bh 0x94
adc [ ebx + 0x4ef04fc ] ah
bswap edx
int1
jpo rwxdata
call sub_507893
mov [ edi ] esi
xchg esp eax
imul ebx [ esi + 0x54 ] 0xfed3a97f
add bh 0xf
push esi
jle rwxdata
mov al [ 0x8436832 ]
xchg [ eax + 0x543bb0c ] esi
sub_5023df
pushfd
mov al 0xde
lodsb [ esi ]
pushad
pushfd
mov [ esp ] 0x2fed
not al
mov [ esp ] 0x5f3b
call sub_504324
[ edi ] [ esi ]
pop esi
not si
pushfd
pushfd
mov esi [ esp + 0x30 ]
push ebp
push ebx
push [ esp + 0xc ]
lea esp [ esp + 0x40 ]
jmp rwxdata
pushad
mov bl 0x2
dec al
pushfd
mov [ esp + 0x8 ] bl
push 0xcbea0a20
inc ecx
pushfd
mov al 0x10
mov [ esp + 0x4 ] 0x6d82
lea esp [ esp + 0x2c ]
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
and [ edx + eax * 2 ] dl
cmp eax 0xe2e9c295
loope rwxdata
in eax 0xc2
leave
out 0xa5 al
jbe rwxdata
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
call sub_42560c
pushfd
mov [ esp ] cl
mov [ esp ] 0x9bdeb8d8
pushfd
adc al al
mov [ esp ] al
call sub_4feabf
scasd [ edi ]
pushfd
lds ebp [ ecx ]
adc [ esi - 0x39 ] ah
inc esp
and al 0x4
sub [ ebp - 0x73 ] 0x64
and al 0x2c
jmp rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_5031f1
lea esp [ esp + 0x8 ]
call sub_42560c
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
adc al 0x9c
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4fe5f0
sub ah al
add eax 0x42142fd9
int 0x65
dec edx
inc ecx
xchg esi eax
movsb [ edi ] [ esi ]
inc esi
sub al 0x15
pop esp
lea esi [ 0x201b18c ]
mov [ ebp + 0x795c3dcd ] ch
and [ ecx ] dh
mov al [ 0x66e5f7b1 ]
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_502753
pushad
test ah 0xf6
or ecx ecx
call sub_437c56
aad 0xee
push edx
inc edi
and edx [ edx + eax * 2 ]
pushad
jl rwxdata
cmpsd [ esi ] [ edi ]
nop
or [ edx ] edx
push ecx
mov dl [ eax ]
pop ds
outsd
sub ecx [ fs : eax ]
test al 0xe6
inc eax
scasd [ edi ]
je rwxdata
shr ebx cl
and eax [ ebx - 0x2d ]
jmp rwxdata
das
mov ebx 0xcc819cc1
push ss
dec esi
xor al 0xca
mov edi 0xc1a34298
xchg esp eax
mov ebx 0xbcb7005
mov [ 0x15af6eb4 ] eax
movsb [ edi ] [ esi ]
popad
test eax 0xcb82223b
xlat
pop ds
sub [ esp + 0x35 ] ebp
lahf
inc eax
dec esp
pop ss
jpo rwxdata
cmp al 0xb
dec ebp
mov [ eax ] 0x241c5e21
sub [ edx ] edx
mov dh 0x35
sub al 0xa0
mov al 0xc3
adc al 0xb
or ecx [ eax ]
push ebx
aaa
sahf
xor ebx [ edi + 0x67 ]
inc esp
mov [ 0xffffffffd8b3232e ] al
sbb al 0x9f
add eax 0x9d1b24ac
mov esp 0x5e4c63e8
push ss
inc ebx
mov [ 0xffffffffd3792fb6 ] eax
xchg [ ecx - 0x176b2e78 ] bl
mov ah 0xef
mov edx 0x86d6b918
fist [ ecx + 0x5ce96e01 ]
mov ecx 0x42f75a49
push ebp
add ch dh
jl rwxdata
mov esi 0x67ee6b01
inc esp
ja rwxdata
add dh 0xb9
imul ebx edx 0xffffff86
sahf
test eax 0xe8e0160a
pop ds
pop eax
enter 0xf7d0 0x5c
test al 0x9d
fwait
xchg [ esi - 0x51 ] eax
mov bl 0x3b
add eax 0x1b2b2c1d
into
cmp al [ ebx + 0x15 ]
or [ ebx + ebp + 0x35040ae3 ] edi
xchg [ esi + 0x67ee6b01 ] bh
mov ecx eax
sbb eax 0xe1f6628c
add ecx esi
push cs
aad 0x62
or ebp [ ecx - 0x4 ]
or al 0x37
arpl [ ecx ] si
mov ah 0x84
0xa29bc1db 0xb6a5
and eax 0x3d74b673
shr [ ebx ] 0x1
xchg [ esi ] dl
int 0xde
push 0x3cbea641
mov esp esi
push edi
push [ esp ]
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_502a51
inc ecx
lea esp [ esp + 0x8 ]
setns bl
inc ecx
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
not bl
jmp rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_500b9b
sub_502b07
mov [ esp + 0x24 ] 0xb60c013f
pushad
mov [ esp + 0x40 ] 0x36c7677b
push 0x80731ca4
push 0x2afea37c
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] eax
jmp rwxdata
jmp rwxdata
push esi
mov [ esp + 0x3c ] ebx
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] esi
mov [ esp ] ebx
push 0xbcf07293
push [ esp ]
mov [ esp + 0x44 ] ebp
pushfd
call sub_509177
sub_502c17
push edx
lea esp [ esp + 0x8 ]
jb rwxdata
jmp rwxdata
jb rwxdata
jb rwxdata
pushad
jmp rwxdata
pushad
push [ esp + 0x20 ]
retn 0x24
pushfd
pushfd
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
call sub_42fe48
add [ eax ] al
add [ eax ] al
sub_502c30
pop ebx
not bh
push 0x73c90fed
mov ebx [ esp + 0x4 ]
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
jae rwxdata
pushad
mov [ esp + 0x4 ] dl
pushad
mov esp ebp
lea ebp [ ebp + 0x4c1d7cd0 ]
pushad
call sub_4fdff3
xchg edi eax
enter 0x2d38 0x85
pop es
inc edx
cmp [ eax - 0x7a190e67 ] ebx
mov edx 0xdac1fa10
jbe rwxdata
pushfd
push [ esp ]
mov esp ebp
jmp rwxdata
and ah cl
scasd [ edi ]
sub ch [ edi ]
sub eax 0x14d1875e
sub [ edi - 0x17cbe893 ] dh
fwait
int3
add ah [ ecx ]
inc edx
into
out 0xc eax
and esp eax
xor al 0xe
push ss
push edx
mov dl 0xf5
push 0xffffff8a
insb
out dx al
push ss
mov edi 0x89f3e12d
xor cl 0xe6
clc
pop ecx
mov [ edx + 0x3d88fe10 ] eax
dec ebp
outsb
test [ esi + 0x1d ] ch
xor ch [ ecx + 0x5a ]
xchg ch bl
cmp al 0xe6
mov esi 0xc126f6cd
bswap bp
pop ebp
push 0xed667bc1
push [ esp + 0x4 ]
retn 0xc
sub_502fbb
lea esp [ esp + 0x4 ]
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
pushad
call sub_4255f1
jle rwxdata
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
not bl
jmp rwxdata
sbb [ ebx - 0x624730ba ] ecx
leave
0x94ee
sbb [ esi + 0x2b ] 0x14
inc edx
jns rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
das
pop edx
cdq
shr ch 0x1
mov [ ecx - 0x261b0a20 ] ds
shl [ ecx ] 0x1
push ecx
popfd
in al 0xb5
mov esp 0x742d0c95
popad
add eax 0x65e634e6
push esi
in eax 0x8a
salc
inc edx
mov edi 0x35edf194
out dx eax
add esi [ edi + edi * 2 + 0x2b ]
mov ecx 0x54a120c
mov [ ecx ] gs
xor bl 0xe0
push 0x758daf29
jg rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_500b9b
jge rwxdata
jpo rwxdata
shl ebx 0x4e
mov bl 0xdc
jpo rwxdata
rdtsc

jne rwxdata
and al 0x4
aas
adc al 0x60
add esp [ edx ]
or [ edi + edx * 4 ] bh
ficom [ eax ]
sar [ edx + 0x23729d1a ] 0x61
call 0xffffffffe149f757
add al 0xe3
inc eax
arpl di bp
sti
call 0xffffffffa0b50f92
scasd [ edi ]
std
cmp al 0xa0
sbb esp [ eax + 0x51bdd4cf ]
xor al 0x14
inc edx
movsb [ edi ] [ esi ]
xor dl ch
int1
clc
out 0xee eax
mov ebx 0x7cad323
daa
fcmovnb st3
jpo rwxdata
push ecx
lar edi edi
call 0x168fb3f0
imul ebp [ edi ] 0x5a
lodsb [ esi ]
fld [ edi ]
mov dh 0xd
add [ ebx - 0x2a ] edx
das
or al 0x5a
inc ebp
dec ecx
cmp esi [ edx - 0x12 ]
lodsd [ esi ]
jle rwxdata
jge rwxdata
jo rwxdata
pop edx
stosd [ edi ]
test eax 0xfdba360c
mov al [ 0x133a7937 ]
xchg ebx eax
jpo rwxdata
rcr [ esi - 0x75 ] cl
cmc
fld [ ecx + esi * 8 ]
inc eax
scasb [ edi ]
add eax 0xd889c3e9
sub [ ebp - 0xf ] al
movsd [ edi ] [ esi ]
lodsb [ esi ]
jmp 0x615a8428
nop
aam 0x97
dec ebx

sub_5031f1
sub ecx ecx
mov [ esp ] bh
pushad
jmp rwxdata
lea esp [ esp + 0x28 ]
call sub_42560c
jmp rwxdata
push ebx
lea esp [ esp + 0x4 ]
jae rwxdata
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_503b6a
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp rwxdata
call sub_424ca1
pushfd
jmp sub_501c46
sub_5032de
bt ebx edi
test edx edx
pushfd
lea esp [ esp + 0x28 ]
je rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
cmp ah cl
movsx cx bl
cmc
add edx eax
btc cx di
dec cl
sar ecx cl
mov ecx [ esi + 0x7c ]
call sub_50041c
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_503307
pushad
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
jmp rwxdata
cmc
shld ecx esi 0x11
stc
mov ecx [ ebp - 0x4 ]
bt bx 0x6
cmp [ ebp + 0x14 ] ecx
push 0x7dab4447
lea esp [ esp + 0x4 ]
ja rwxdata
pushad
mov bx [ esi ]
pushfd
cmc
cmc
pushfd
shr ebx 0xc
cmc
clc
cmp ah bl
cmp ebx 0x1
call sub_4f9aea
iretd
movsx cx al
movzx ecx al
mov ecx [ esi + 0x4 ]
call j_sub_502753
jmp rwxdata
mov edi 0x838201de
setb cl
mov si cx
pop esi
setb cl
jmp rwxdata
pushad
mov [ esp + 0x1c ] 0x4428013e
push [ esp + 0x8 ]
jmp rwxdata
movzx cx bl
not cx
pop edi
mov ch 0xb2
movsx cx cl
pop ebx
pushfd
call sub_4fd970
and [ esi + 0xb ] 0xe7
adc [ edx + eax * 2 ] dl
rcr ah 0x52
mov [ ebp - 0x4 ] bh
frstor [ 0xffffffffcde1d8e9 ]
add dh [ ecx - 0x7e1ee6dc ]
push edi
xchg esp eax
lodsb [ esi ]
movsd [ edi ] [ esi ]
mov gs [ ebx - 0x28 ]
nop
add [ edx + 0x6653ede0 ] bl
retn 0xe311
pushfd
mov [ esp + 0x4 ] 0xb5
mov [ esp + 0x20 ] 0x213f3d2a
pushfd
push 0xbe91bdc3
mov [ esp ] ax
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_507893
sub_5036b9
pushfd
pushad
lea esp [ esp + 0x2c ]
call sub_4fcf93
pushad
mov [ esp ] 0xbb
mov [ esp + 0x4 ] 0x84
lea esp [ esp + 0x20 ]
jne rwxdata
clc
pushad
mov [ esp ] ch
cmp ch bl
add ecx 0xffffffff
pushfd
lea esp [ esp + 0x24 ]
je rwxdata
not eax
mov eax [ edx + 0x8 ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
jmp rwxdata
test bh 0xc9
add edx 0x11c
pushad
push [ esp + 0x4 ]
push ecx
push edx
lea esp [ esp + 0x2c ]
jmp rwxdata
bt si 0x6
cmc
test si 0x6b2
clc
or ebx ebx
call j_sub_505111
xchg ecx eax
fimul [ edi - 0x6d ]
and [ edx + eax * 2 ] edx
mov ah 0x70
push ebx
push ebx
pop esi
les esp [ esi ]
inc ebp
push esi
and al 0x27
mov [ 0x17e3 ] eax
mov ds [ ebx - 0x2338301e ]
add bl [ eax ]
iretd
cmc
xor eax eax
movzx si cl
xchg di si
lea esi [ esi + 0x1a2cf32a ]
push ebp
movzx esi [ edx + 0x1a ]
jmp j_sub_506bae
sub_503c5e
or edx edx
call sub_5022a2
cmc
cmc
cmc
cmp eax 0x7d00
pushad
pushad
jmp rwxdata
lea esp [ esp + 0x40 ]
jae rwxdata
call sub_504998
cmc
push ebp
push ebp
stc
cmp ah 0x5
call sub_4fe8fa
xor eax 0x4fa7b20e
adc al 0x42
mov bl 0x22
sbb [ eax - 0x4e3e0343 ] eax
scasb [ edi ]
nop
sub [ eax + 0x5d ] 0x6110818d
jns rwxdata
inc esi
push esp
dec ecx
or [ esi + edx * 2 ] esi
lodsb [ esi ]
sbb [ edi - 0x26f8909 ] dl
add [ 0x56875db5 ] ah
jae rwxdata
or [ edx - 0x4f ] eax
pop ebp
call 0xffffffffd4a887b9
add eax 0x25037ea1
int3
mov dh ah
retn 0x2247
sub_504aad
push ebx
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_504aba
mov [ esp ] 0xb988013e
pushfd
jmp rwxdata
jmp rwxdata
mov [ esp ] 0xe41f17dd
pushfd
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_508c9d
sub_504f01
mov [ esp ] 0x3956
lea esp [ esp + 0x28 ]
jae rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
push edi
pushad
push ecx
lea esp [ esp + 0x28 ]
jmp rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
bsr di cx
adc di 0x84fd
mov edi [ edx + 0x1c ]
pushfd
mov [ esp ] 0xd2
call sub_424bc7
sub_505111
mov [ esp ] 0xe7
lea esp [ esp + 0x4 ]
je rwxdata
movsx edi al
bswap di
pop edi
setb bh
bswap si
xchg si bx
xchg si bx
pop esi
call sub_502c30
jb rwxdata
movzx si dl
not si
mov si bp
mov esi eax
push 0xf1d3ac9c
movsx ax dl
mov [ esp ] ebx
movsx ax cl
setbe ah
movzx ax dl
lea eax [ LocalFree@IAT ]
push 0x91a5511f
push [ esp ]
call sub_42508c
cmp ecx [ edx + 0x14 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
jmp rwxdata
pushfd
pushfd
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
pushad
mov [ esp ] 0x41314364
push edi
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_42fe48
add [ eax ] al
add [ eax ] al
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
bsr di cx
adc di 0x84fd
mov edi [ edx + 0x1c ]
pushfd
mov [ esp ] 0xd2
call sub_424bc7
sub_5063db
add ecx 0x1
pushad
mov [ ebp - 0x8 ] ecx
push edi
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
bt dx di
stc
mov ecx [ ebp - 0x8 ]
adc di 0x9262
inc si
add ecx [ ebp - 0x4 ]
dec di
shr ecx 0x1
btr si 0x2
pushfd
ror edi cl
cmc
mov edi [ ebx + ecx * 4 ]
btr si si
shl si cl
add edi eax
call j_sub_4fe7e9
or eax 0x4b7f930e
adc al 0x42
pop eax
inc esp
mov esi 0xda18e2ed
jo rwxdata
and [ edx ] al
cmp [ edi + 0x50 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x36 ] cl
push eax
add [ eax ] al
add [ eax ] al
add [ ebx ] bh
dec ebp
clc
pushfd
mov [ esp ] dl
adc [ esi + 0x65 ] edx
pop edx
pop eax
jno rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
and si cx
sub ecx 0x1
sar edi 0x1f
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x4 ]
jbe rwxdata
insd
push esp
jne rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
adc al 0x69
clc
push ss
jb rwxdata
and eax 0x645971bd
mov bx 0x5448
mov esp 0x6384700a
mov ebx 0x9cbb975e
mov ebx [ edi + 0x2d1434fc ]
salc
inc edx
std
push ss
push esi
cmpsd [ esi ] [ edi ]
pop edx
sub_50684e
dec eax
stc
mov [ esp ] al
stc
call sub_42fc0c
pushfd
mov [ esp + 0x4 ] 0xb5
mov [ esp + 0x20 ] 0x213f3d2a
pushfd
push 0xbe91bdc3
mov [ esp ] ax
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_507893
sub_506bae
lea esi [ esi + edx + 0x1c ]
not di
movzx edi cl
mov edi [ ebp + 0x8 ]
call sub_5036b9
pushfd
test bl dh
test al al
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
ror cl 0x5
mov edi edx
sub ch dh
stc
not al
mov ecx edi
adc al al
mov al [ ecx ]
pushad
mov ah al
clc
cmp dl 0x72
bt dx 0xa
stc
add al 0xee
stc
cmc
cmp bl ch
not al
pushfd
jmp sub_5009cc
bt ax cx
jmp rwxdata
jmp rwxdata
pushad
sub al 0x30
mov [ esp ] 0xf4
cmp al 0x9
pushfd
jmp sub_503d50
sub_506d85
lea esp [ esp + 0x4 ]
jpo rwxdata
jmp rwxdata
xchg [ ebp ] eax
pushad
pushfd
mov [ esp + 0x8 ] 0xbf2b67f7
mov [ esp + 0x20 ] rwxdata
pushad
mov [ esp + 0x3c ] eax
push edx
push 0xe85c4e66
mov [ esp + 0x8 ] al
pushfd
push [ esp + 0x48 ]
retn 0x4c
pushfd
push [ esp ]
xchg [ ebp ] eax
pushad
pushfd
jmp rwxdata
call sub_50728e
push 0xee63286
push [ esp + 0x10 ]
mov [ esp ] 0xb6
mov [ ebp + 0x4 ] eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
pop [ esp + 0x30 ]
push esp
mov [ esp + 0x8 ] 0x44
push 0x90fcd1ae
pushfd
push [ esp + 0x3c ]
pop [ ebp ]
push [ esp ]
push 0xec3931de
mov [ esp ] ch
lea esp [ esp + 0x48 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_506e5c
call sub_50911f
setpe ah
jl rwxdata
mov dx sp
xchg dl al
push edi
bswap ax
mov edx [ ebp ]
pushad
not ah
pushad
mov eax [ ebp + 0x4 ]
jmp rwxdata
not al
pushad
mov edx [ ebp ]
lahf
mov ax [ esp + 0x8 ]
mov eax [ ebp + 0x4 ]
pushad
pushfd
mov [ esp + 0x8 ] eax
div [ ebp + 0x8 ]
call sub_508639
xor ax cx
mov eax [ ebp ]
neg dl
add dh al
mov edx [ ebp + 0x4 ]
cmp bx bp
test ch ch
add ebp 0x8
call j_sub_507383
pushfd
pop [ esp + 0x50 ]
call j_sub_509098
call sub_507f23
mov [ esp ] 0x81
push esp
pushfd
div [ ebp + 0x8 ]
pushfd
mov [ ebp + 0x4 ] edx
mov [ esp ] cl
mov [ ebp + 0x8 ] eax
call sub_508f10
sub_506eba
and ebx 0xff0
pushfd
cmc
test edx edx
cmp ebx 0xfe0
jmp rwxdata
push 0x6d6bf94a
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_5072b4
bsr ebx edi
adc bh ch
rcl bh cl
rcr bx 0xe
xor [ ebp + 0xc ] 0x20
sub_507015
test di 0xe7ff
add ebp 0x2
push edx
mov [ esp ] al
push ebp
mov [ eax + edi ] dl
push [ esp ]
push 0xff3e3df
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_5070c1
mov [ esp ] al
mov [ esp ] 0x1f
cmp ebp eax
pushad
jmp rwxdata
push 0x7652f3ee
lea esp [ esp + 0x28 ]
ja rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
lahf
xadd ah cl
aad 0x4f
mov edx esp
jle rwxdata
movzx ax dl
sbb ch ch
lea ecx [ edi + 0x40 ]
rcl di 0xb
shl ax 0x6
sub ecx edx
bt sp 0x6
lahf
lea eax [ ebp - 0x80 ]
cmc
sbb di di
and al 0xfc
neg edi
shl di 0xf
sbb edi 0xcca9dbd
sub eax ecx
jmp rwxdata
daa
shrd ax bx cl
lea ecx [ edi + 0x40 ]
aaa
das
clc
sub ecx edx
ror di 0x6
lea edi [ ecx * 8 - 0x16c9a026 ]
aas
lea eax [ ebp - 0x80 ]
shl di cl
bswap di
lea edi [ ebp * 8 + 0x38afb322 ]
and al 0xfc
bsr di di
mov di cx
sub eax ecx
lea edi [ esi * 2 + 0x29878978 ]
mov esp eax
mov di 0x2915
bswap di
push 0x2855f3b4
mov edi eax
pushfd
pop [ esp ]
movsx di dl
push esi
not di
std
mov esi edx
bswap edi
ja rwxdata
pushad
movzx edi al
mov esp eax
movsx edi cl
movsx di cl
pushfd
pushfd
xchg [ esp ] esi
lea esi [ ebp * 8 + 0x21d4c8f2 ]
call sub_5073a2
bswap di
pushad
jmp rwxdata
not edi
pushad
lea edi [ ecx + eax - 0x40 ]
mov [ esp ] ch
pushfd
call sub_50834d
lea edi [ ecx + eax - 0x40 ]
mov [ esp ] 0xc4d4
xchg [ esp + 0x1c ] edi
not edi
pushad
mov edi eax
pushfd
jmp rwxdata
std
call sub_507fa3
sub_5071cf
mov [ esp + 0x8 ] bh
mov [ esp + 0x8 ] esi
pushfd
mov [ esp + 0x8 ] ebp
pushad
mov [ esp + 0x24 ] edx
pushfd
pushfd
jmp rwxdata
mov [ esp + 0x28 ] esi
push 0x8c691dd5
push 0x69e8e5c7
mov [ esp + 0x2c ] edi
mov [ esp ] 0x4c
lea esp [ esp + 0x2c ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_507383
push [ esp ]
pushfd
mov [ eax ] edx
push 0xf65e9b8b
pushfd
push 0xdca92d94
mov [ esp + 0xc ] 0xb8
lea esp [ esp + 0x18 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_5073a2
pop edi
movsx si dl
mov esi edx
jmp rwxdata
jmp rwxdata
lea edi [ ecx + eax - 0x40 ]
cld
push edi
pushad
not edi
mov edi eax
pushfd
cld
jmp rwxdata
pushfd
push ecx
call sub_507e81
sub_50742c
pushad
mov [ esp ] 0x991fbb6f
mov [ ebp ] eax
mov [ esp + 0x4 ] 0xad
pushfd
mov [ esp + 0x4 ] al
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_507479
mov [ ebp ] ax
mov [ esp + 0x4 ] 0x9e
push ebx
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_507609
mov [ esp + 0x28 ] edi
mov [ esp + 0x4 ] 0x32a5
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_507648
pushad
mov [ esp + 0x14 ] al
mov [ esp + 0x14 ] 0xc2
sub ebp 0x2
mov [ esp + 0x10 ] dh
cmc
shr al cl
jmp rwxdata
mov [ esp ] 0x250e
push edi
mov [ ebp + 0x4 ] ax
push 0xb8fd6aa5
pushfd
push ebx
pushfd
pop [ esp + 0x34 ]
pushfd
jmp rwxdata
jmp rwxdata
push [ esp + 0x38 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x40 ]
jmp sub_5072b4
sub_507670
mov [ esp + 0x8 ] ebx
push [ esp ]
push [ esp + 0x8 ]
jmp rwxdata
push 0xc3bf0e99
mov [ esp + 0x10 ] esi
pushfd
pushad
mov [ esp + 0x30 ] ebp
push 0xc46c1d00
push 0xe1058677
pushfd
lea esp [ esp + 0x3c ]
jb rwxdata
pushad
pushfd
mov [ esp + 0x20 ] edx
push 0x1de0f1a3
pushfd
call sub_508a27
push edx
jmp rwxdata
pushfd
mov [ esp ] esi
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_5078d6
push eax
push [ esp ]
mov [ esp + 0x28 ] edx
mov [ esp + 0x4 ] 0x39
push edx
jmp rwxdata
mov [ esp + 0x28 ] esi
jmp rwxdata
mov [ esp + 0x24 ] edi
push [ esp + 0x4 ]
push 0xd68339dc
mov [ esp ] 0xdde2e489
lea esp [ esp + 0x2c ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_5078e9
push [ esp + 0x50 ]
pop [ ebp ]
mov [ esp ] 0x3c
mov [ esp + 0x4 ] ah
mov [ esp + 0xc ] bh
lea esp [ esp + 0x54 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_50798b
pushfd
mov [ esp + 0x24 ] esi
push [ esp + 0x4 ]
mov [ esp + 0x24 ] ebp
jmp rwxdata
mov [ esp + 0x4 ] dh
mov [ esp + 0x20 ] edx
mov [ esp + 0x8 ] 0xdb
pushfd
jmp rwxdata
pushad
mov [ esp + 0x40 ] esi
jmp rwxdata
call j_sub_5089bc
sub_507e81
[ edi ] [ esi ]
btc si 0x2
mov edi [ esp + 0x30 ]
cmc
add esi 0xac05aaec
mov esi [ esp + 0x34 ]
mov [ esp + 0x8 ] 0x4f
push [ esp + 0x38 ]
popfd
pushfd
mov [ esp ] di
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_507eb1
pushfd
mov [ esp + 0xc ] esi
jmp rwxdata
mov [ esp + 0x8 ] edi
mov [ esp ] 0xc8
lea esp [ esp + 0x8 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_507fa3
cld
pushfd
[ edi ] [ esi ]
shl esi 0x1f
neg di
pop esi
mov edi [ esp + 0x44 ]
clc
rol esi cl
mov esi [ esp + 0x48 ]
std
push [ esp + 0x4c ]
popfd
mov [ esp + 0x10 ] dh
mov [ esp + 0x8 ] 0xde
mov [ esp ] cl
mov [ esp ] esp
lea esp [ esp + 0x50 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_507ffc
mov [ esp + 0x24 ] esi
pushad
jmp rwxdata
mov [ esp + 0x40 ] ebp
pushfd
jmp rwxdata
mov [ esp ] ch
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x40 ] esi
jmp rwxdata
mov [ esp + 0x3c ] edi
push 0x71cc5b1c
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_5081b3
mov [ fs : eax ] edx
push esp
mov [ esp ] 0xeaf8
pushad
lea esp [ esp + 0x38 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_50820b
push 0xd3032c59
mov [ esp + 0x24 ] edi
mov [ esp + 0xc ] ebx
lea esp [ esp + 0x24 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_5083ed
push ebp
push ebx
mov [ esp ] 0x7f
pushfd
mov [ esp + 0x4 ] edx
lea esp [ esp + 0x4 ]
ja rwxdata
pushad
mov [ esp + 0x1c ] esi
call sub_5071a3
pushfd
mov [ esp ] esi
pushfd
push esp
jmp rwxdata
mov [ esp + 0x4 ] edi
pushfd
pushfd
push eax
lea esp [ esp + 0x10 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_508639
pushfd
mov [ ebp + 0x4 ] edx
push 0x16192d20
call sub_508756
movsx cx al
movsx cx dl
mov ecx [ ebp - 0x4 ]
pushad
pushad
jmp rwxdata
lea ebp [ ebp + ecx * 4 ]
pushfd
pushfd
mov [ esp + 0x4 ] 0xd80c67b7
jmp sub_50887b
sub_50887b
mov [ ebp ] eax
pushfd
push esp
mov [ esp + 0x4 ] 0x85f8
lea esp [ esp + 0x50 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_5089bc
mov [ esp + 0x40 ] edi
mov [ esp ] esp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_508a27
mov [ esp + 0x28 ] esi
push 0xa474d679
pushfd
mov [ esp + 0x2c ] edi
pushfd
mov [ esp ] di
mov [ esp + 0x4 ] 0xe396e044
lea esp [ esp + 0x30 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_508b2e
push [ esp + 0x10 ]
lea esp [ esp + 0x20 ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_5072b4
xor bl 0x74
mov ebx eax
cmc
test dl 0x2f
call sub_506eba
sub_508b5c
mov [ esp + 0x44 ] edi
mov [ esp ] 0x5
push esi
push esp
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_508d38
bt ax bx
rol esi 0xe
lea ebp [ eax + 0x3077a4b8 ]
dec esi
cmp esi 0x98ef26ae
add ch 0xf2
pushad
lea ebp [ esp + 0x40 ]
shrd di bx cl
bt bx ax
sub esp 0x80
rcl di cl
mov edi esp
shl bh 0x7
bt sp di
mov ebx esi
bsf cx dx
bswap cx
add esi [ ebp ]
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_508eab
mov [ esp ] dh
mov [ esp ] eax
pushfd
pop [ esp + 0x10 ]
lea esp [ esp + 0x10 ]
js rwxdata
jmp rwxdata
pushfd
pushfd
mov [ esp ] bp
push [ esp + 0x8 ]
pop [ ebp ]
pushad
push esp
pushfd
push edi
lea esp [ esp + 0x38 ]
jmp sub_5072b4
pop [ ebp ]
push ebx
pushfd
push esp
push edi
lea esp [ esp + 0x10 ]
jmp sub_5072b4
sub_50902a
mov [ esp + 0x30 ] edi
pushfd
mov [ esp ] 0x5a72
push 0x4918884c
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_509098
mov [ esp ] bh
push [ esp + 0x54 ]
pop [ ebp ]
mov [ esp ] sp
mov [ esp ] cx
mov [ esp + 0x4 ] ax
mov [ esp + 0x8 ] 0xa
lea esp [ esp + 0x58 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_5090e4
mov [ esp ] bl
mov [ esp + 0x24 ] ebp
pushfd
pushfd
mov [ esp + 0x28 ] edx
mov [ esp ] di
mov [ esp + 0x24 ] esi
mov [ esp + 0x18 ] cx
push ebx
mov [ esp ] dx
push edx
mov [ esp + 0x28 ] edi
push [ esp + 0x4 ]
push [ esp ]
mov [ esp + 0x10 ] 0xfad3
lea esp [ esp + 0x30 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_50911f
[ edi ] [ esi ]
add esi 0x9d1f4232
shl si cl
mov edi [ esp + 0x58 ]
shl si 0xa
shr si cl
test cl 0xe9
mov esi [ esp + 0x5c ]
test ah 0x57
clc
cmc
test si ax
push [ esp + 0x60 ]
popfd
mov [ esp + 0x8 ] 0xa4
mov [ esp + 0x8 ] 0x43
lea esp [ esp + 0x64 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_50876d
sub_509177
push [ esp ]
mov [ esp + 0x4c ] edx
pushfd
mov [ esp + 0x4c ] esi
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] dl
push 0x19be167d
mov [ esp + 0x4c ] edi
push 0xccde9e3a
mov [ esp + 0x8 ] 0xa5
lea esp [ esp + 0x50 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_508d38
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_508b2e
sub_424bc7
add edi eax
clc
call sub_4feb95
movsd [ edi ] [ esi ]
dec ebp
jmp rwxdata
j_sub_4fe7e9
jmp sub_4fe7e9
sub_42508c
mov [ esp + 0x8 ] rwxdata
mov [ esp ] 0x1e8eb087
pushad
jmp rwxdata
push 0x6c85c9bd
push [ eax ]
pop [ esp + 0x28 ]
push 0x7bef5375
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_42f303
mov esp ebp
jmp rwxdata
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
j_sub_506bae
jmp sub_506bae
sub_42f58d
lea esp [ esp + 0x8 ]
je rwxdata
mov bl 0x82
adc bh bh
xor bh al
shl bh cl
mov bx [ esi ]
clc
call sub_4f932f
stc
cmp ebx 0x3
call sub_42fa4e
sub_42f7e3
push [ esp + 0x4 ]
lea esp [ esp + 0x14 ]
call sub_42560c
call sub_502c17
jmp rwxdata
pop ebp
pushad
mov [ esp + 0x4 ] 0x9a
push [ esp + 0x20 ]
retn 0x2c
sub_42fa4e
call sub_501c11
cmp ebp ebp
push esi
mov bh dh
push es
inc edx
mov al 0xf3
clc
sub_42fbbd
adc ecx ecx
pushad
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
call sub_504998
sub_42fc00
sub ecx [ edx + 0x10 ]
clc
cmp ecx [ edx + 0x14 ]
call sub_504f01
sub_42fc22
mov [ esp + 0x4 ] 0xcc
mov [ esp + 0x20 ] eax
push 0x40319fa4
pushad
push [ esp + 0x44 ]
retn 0x48
sub_430395
add [ ebx + edi ] ax
push [ esp ]
mov [ esp ] 0xe2
push 0xa714840b
lea esp [ esp + 0x10 ]
jmp rwxdata
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp sub_501c40
sub_43048b
rol al 0x1
mov [ esp + 0xc ] al
stc
shr eax 0x1
call sub_438002
sub_430517
mov [ esp ] cx
call sub_4fcd40
pushad
pushfd
xchg ecx eax
push 0xc03f9784
push 0xd5fb471a
call sub_50684e
sub_437a94
rol al 0x1
mov [ esp ] 0xa9
mov [ esp ] 0xe1
dec al
push edx
stc
jmp rwxdata
push ecx
rol al 0x1
call sub_430697
sub_437c56
mov [ esp ] 0x3d4
call sub_4f99c4
0x78b468cb 0x4207
j_sub_500b7d
jmp sub_500b7d
sub_4f932f
and ebx 0xfff
cmc
jmp sub_500b68
sub_4f941e
adc dl dl
push 0x9a58c947
mov [ esp + 0x4 ] esp
pushad
mov [ esp ] dx
push [ esp + 0x28 ]
retn 0x2c
sub_4f973a
call sub_4249e2
mov ah 0x91
dec edx
xchg esi eax
xchg ebx eax
or eax [ edx - 0x4f ]
dec esp
push ebp
sub al 0x15
dec ebp
in eax 0xf4
jmp 0x59d9d5b
sub_4f98f0
mov [ esp ] bl
mov [ esp ] rwxdata
jmp sub_503647
_start
push edi
pushad
pushad
mov [ esp + 0x40 ] 0x6a8c013f
pushfd
call sub_5014b3
j_sub_42f303
jmp sub_42f303
sub_4fcf8c
dec al
jmp sub_43048b
sub_4fcf93
cmp eax ebx
pushad
mov al [ edi ]
cmp dh cl
pushfd
pushad
cmp al 0x41
push 0xe3365342
jmp rwxdata
pushfd
call sub_500505
j_sub_430706
jmp sub_430706
sub_4fd71a
inc edi
pushad
push [ esp ]
lea esp [ esp + 0x2c ]
jmp sub_4fcf93
sub_4fd9a1
daa
mov [ ebp - 0x4 ] ebx
bsr ecx ecx
bt di 0xd
mov eax edx
cmp ebx edx
shr eax 0x10
xor ecx 0x2b551d57
jmp sub_430499
sub_4fdff3
mov ebp [ esp + 0x24 ]
pushfd
pushfd
push [ esp + 0x30 ]
retn 0x38
sub_4fe19c
mov [ esp + 0x3c ] 0xad8db9b3
pushfd
pushfd
mov [ esp + 0x4 ] di
lea esp [ esp + 0x44 ]
jmp rwxdata
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_508c9d
sub_4fe42b
cmp [ edi - 0x1 ] 0x0
call sub_5012c6
jmp sub_501c40
sub_4fe80b
pushfd
mov [ esp + 0x20 ] rwxdata
push ebx
jmp rwxdata
push [ eax ]
pop [ esp + 0x20 ]
pushad
mov [ esp ] 0x9
push [ esp + 0x40 ]
retn 0x44
sub_4fe9af
mov esi [ ebp + 0xc ]
neg cl
mov ecx [ ebp + 0x14 ]
cmp dl 0x86
cmp ch ch
jmp sub_503c5e
j_sub_5023df
jmp sub_5023df
sub_5004f2
push [ esp + 0x4 ]
pushfd
lea esp [ esp + 0x50 ]
call sub_4fe538
call sub_43821f
sub_500b68
cmc
mov [ esp ] 0xf3
add [ ebx + edi ] dx
pushfd
push ecx
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp sub_501c40
sub_500b7d
call sub_4fd71a
sub_500b82
pushfd
mov [ esp + 0x24 ] ebx
pushfd
mov [ esp + 0x14 ] 0xac
call sub_4fe6bc
test si ax
pushad
call sub_42fc00
sub_5014b3
push ecx
push 0xf1df98f0
mov [ esp + 0x4c ] 0x62634d65
mov [ esp + 0x4 ] bx
mov [ esp + 0x8 ] di
lea esp [ esp + 0x4c ]
jmp rwxdata
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_508c9d
sub_501c40
dec ecx
call sub_503307
sub_502005
call sub_4fe000
pushfd
mov [ esp ] 0xb3f4013f
push ecx
pushad
mov [ esp ] 0xe1
push 0x332d0b8f
mov [ esp + 0x24 ] 0xa027b27d
push 0x5021189a
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_5086c4
sub_502274
inc esi
push 0x25f2e700
push 0x533b0a58
lea esp [ esp + 0xc ]
jb rwxdata
pushfd
jmp j_sub_500b7d
inc edi
pushfd
mov [ esp ] ah
lea esp [ esp + 0x4 ]
jmp sub_4fcf93
sub_502afa
jle sub_500fc4
sub_502b00
pushad
sub_502b01
push 0xe5dcd568
sub_502b06
pushfd
sub_503106
lea edx [ ebx + 0x4 ]
lea esp [ esp + 0x4 ]
movzx si cl
xchg di si
lea esi [ esi + 0x1a2cf32a ]
push ebp
movzx esi [ edx + 0x1a ]
jmp j_sub_506bae
sub_5031fc
mov [ esp ] 0xb9d887c2
pushfd
pushfd
push [ esp + 0x4 ]
pushad
lea esp [ esp + 0x2c ]
jmp sub_508712
sub_503647
pushad
call sub_42fc22
_TLS_Entry_0
call sub_504aba
sub_503b5d
bt ax bx
pushad
pushad
cmc
sub ecx ecx
lea esp [ esp + 0x40 ]
sub_503b6a
pushad
jmp rwxdata
jmp rwxdata
inc ecx
lea esp [ esp + 0x20 ]
pushad
jmp rwxdata
call sub_42fe48
add [ eax ] al
add [ eax ] al
j_sub_505111
jmp sub_505111
sub_503d50
call j_sub_430706
sub_503d55
lea esp [ esp + 0x8 ]
jae rwxdata
call sub_5031fc
push 0xb9d887c2
pushad
lea esp [ esp + 0x20 ]
jmp sub_508712
sub_504324
bt dx 0x5
stc
rol al 0x1
jmp sub_4fcf8c
j_sub_502753
jmp sub_502753
sub_504998
mov bl [ esp ]
mov [ esp ] cl
call sub_502a51
leave
push ebp
jno __import_lookup_table_5(KERNEL32:GetModuleFileNameA)
neg dh
dec ebp
adc al 0x42
retn 0x2c3f
j_sub_4f95f9
jmp sub_4f95f9
sub_507155
cld
call sub_506e5c
sub_5071a3
call sub_50820b
sub_50728e
mov [ esp + 0x2c ] rwxdata
jmp rwxdata
call sub_507751
lea ebp [ ebp + ecx * 4 ]
pushfd
pushfd
mov [ esp + 0x4 ] 0xd80c67b7
jmp sub_50887b
sub_5072c4
mov [ esp + 0x24 ] eax
mov [ esp + 0x4 ] 0x82
call sub_5077b5
sub_507341
call sub_508e84
sub_5074aa
call sub_5082d7
sub_5074d3
call sub_508259
j_sub_5078e9
jmp sub_5078e9
sub_5076ce
bt ecx 0x7
sub ebp 0x4
mov [ esp + 0x4 ] al
mov [ esp ] bl
mov [ ebp ] eax
mov [ esp + 0x4 ] al
mov [ esp + 0x4 ] al
push 0x45d15dcd
pushfd
lea esp [ esp + 0x40 ]
jmp sub_5072b4
sub_50772d
mov [ esp ] esi
push edx
call sub_508b86
sub_507751
mov [ esp + 0x2c ] eax
pushfd
push 0x3bac19c1
mov [ esp + 0x4 ] 0xf5
push [ esp + 0x34 ]
retn 0x38
sub_50776e
mov [ esp + 0x4 ] dl
mov [ esp + 0x4 ] esi
pushad
mov [ esp + 0x20 ] ebp
push 0xe2ff0f60
mov [ esp ] bh
mov [ esp + 0x18 ] bl
pushfd
mov [ esp + 0x24 ] edx
call sub_509169
sub_5077b5
mov [ esp + 0x14 ] dl
jmp sub_50781e
j_sub_509098
jmp sub_509098
sub_50781e
mov [ esp + 0x24 ] ebx
jmp j_sub_50798b
sub_507874
pushad
mov [ esp + 0x24 ] eax
push [ esp ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
call sub_507ffc
sub_507893
pushfd
mov [ esp + 0x4 ] eax
jmp rwxdata
call sub_508e54
sub_507e7b
pushfd
call sub_50902a
sub_507f23
mov [ esp ] eax
mov eax [ fs : eax ]
call j_sub_50742c
adc al ch
mov al [ ebp ]
pushfd
stc
mov cl [ ebp + 0x2 ]
call sub_507648
j_sub_50872d
jmp sub_50872d
sub_508221
call sub_5081b3
mov eax [ esp + 0x4c ]
mov [ esp + 0x4 ] cx
mov [ esp + 0x4 ] ebx
mov [ esp ] 0xd7
push [ esp + 0x50 ]
retn 0x54
sub_508259
mov [ esp + 0x4 ] ebx
jmp sub_50772d
j_sub_507383
jmp sub_507383
sub_5082d7
pushfd
mov [ esp + 0x28 ] ebp
mov [ esp ] ah
mov [ esp + 0x24 ] edx
pushad
mov [ esp + 0x40 ] esi
call sub_508543
sub_50834d
xchg [ esp + 0x24 ] edi
cld
pushad
mov edi eax
mov [ esp ] esi
call sub_507341
j_sub_5089bc
jmp sub_5089bc
sub_508543
mov [ esp + 0x8 ] 0x50
call sub_508b5c
sub_508572
jmp rwxdata
mov [ esp + 0x20 ] esi
call sub_5074aa
sub_5086c4
call sub_507874
sub_508712
push esi
push ebp
mov [ esp ] 0xac
mov [ esp ] 0x2
mov [ esp + 0x4 ] eax
push [ esp ]
mov [ esp + 0x4 ] ebx
push eax
jmp sub_50776e
sub_50872d
mov [ esp + 0x24 ] esi
call sub_5090e4
sub_508756
mov [ ebp + 0x8 ] eax
mov [ esp ] dh
mov [ esp + 0x4 ] 0x66cd
pushfd
pop [ esp + 0x50 ]
jmp j_sub_5078e9
sub_50876d
test dl ah
mov [ esp ] 0x80
stc
add ecx 0x0
jmp sub_5090ce
sub_5087d5
pushfd
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp + 0x14 ] edi
lea esp [ esp + 0x30 ]
jmp sub_5072b4
sub_50886b
sbb dh dl
shl dx 0x3
clc
mov dx [ ebp ]
jmp sub_507015
sub_5088c0
call sub_508bc1
j_sub_50798b
jmp sub_50798b
sub_508978
mov [ ebp ] ax
pushad
pushfd
mov [ esp ] 0x30666113
lea esp [ esp + 0x30 ]
jmp sub_5072b4
sub_508b86
mov [ esp + 0x4 ] cl
push 0x2654999a
mov [ esp + 0x8 ] ebp
jmp rwxdata
push eax
pushad
pushfd
mov [ esp + 0x2c ] edx
mov [ esp + 0x4 ] 0x5f
mov [ esp + 0x28 ] esi
call sub_507e7b
j_sub_50742c
jmp sub_50742c
sub_508bc1
mov [ esp + 0x4 ] 0xf198
jmp sub_507670
sub_508c9d
lea esp [ esp + 0x4 ]
jge rwxdata
pushad
jmp rwxdata
push esp
mov [ esp ] cl
mov [ esp ] esi
jmp sub_5083ed
call sub_508572
sub_508e54
mov [ esp + 0x4 ] ebx
push 0x8acc97b2
call sub_5071cf
sub_508e84
call sub_507155
sub_508f01
call sub_508221
mov [ esp ] 0x84
pushfd
jmp rwxdata
push [ esp + 0x3c ]
pop [ ebp ]
pushfd
pushfd
pushfd
mov [ esp ] 0x79
lea esp [ esp + 0x4c ]
jmp sub_5072b4
sub_508f10
mov [ esp + 0x4 ] 0xe2a3
jmp rwxdata
pushfd
pop [ esp + 0x50 ]
call j_sub_509098
call sub_507f23
sub_5090ce
pushfd
mov [ esp + 0x28 ] ecx
pushfd
mov [ esp ] al
push 0xbddf9cf3
pushfd
push [ esp + 0x34 ]
retn 0x38
sub_509169
push 0xece3a10a
mov [ esp + 0x28 ] esi
jmp rwxdata
call sub_507609
