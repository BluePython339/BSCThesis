_start
push 0xa8
push 0x0
push rw-data
call memset
add esp 0xc
push 0x0
call GetModuleHandleW
mov [ rw-data ] eax
push 0x0
push 0x1000
push 0x0
call HeapCreate
mov [ rw-data ] eax
call sub_405000
mov eax rw-data
mov [ rw-data ] eax
call sub_40e110
call sub_40de7d
call sub_40ad60
call sub_40a5e9
call sub_40a081
call sub_409e00
call sub_4092a9
call sub_408a2e
call sub_4053af
call sub_40ca03
call sub_40b4b0
mov edx rw-data
lea ecx [ rw-data ]
call sub_405068
push 0xfffffff5
call GetStdHandle
mov [ rw-data ] eax
mov eax 0x200
push eax
lea eax [ rw-data ]
push eax
xor eax eax
push eax
push 0x15
push 0x4
call sub_40a0a0
push [ rw-data ]
call sub_40a69a
push 0x7
push rw-data
lea eax [ rw-data ]
push eax
push 0x8
call sub_40a608
push [ rw-data ]
call sub_40a69a
push 0x8
push rw-data
lea eax [ rw-data ]
push eax
push 0x4
call sub_40a608
push rw-data
push rw-data
push 0x7
push 0x186a1
push 0xc
call sub_40dea6
mov edx rw-data
lea ecx [ rw-data ]
call sub_405068
push [ rw-data ]
call sub_40a69a
push 0x8
push rw-data
lea eax [ rw-data ]
push eax
push 0x4
call sub_40a608
push 0x1
lea eax [ sub_4020f9 ]
push eax
call SetConsoleCtrlHandler
lea eax [ r-xdata ]
push eax
call sub_409bf0
push edx
call sub_40e160
pop edx
push eax
call sub_4033fd
push rw-data
call sub_40e1a0
call sub_40196c
mov ebx [ rw-data ]
cmp ebx 0x1
jne r-xdata
call sub_403b36
call sub_402d28
sub_4011ef
push ebp
push ebx
push edi
mov edx 0x10
sub esp 0x4
mov [ esp ] 0x0
dec edx
jne r-xdata
mov edx [ esp + 0x58 ]
lea ecx [ esp ]
call sub_405060
push [ esp ]
call sub_405700
mov [ esp + 0x4 ] eax
push [ esp + 0x4 ]
call sub_409e20
mov [ esp + 0x8 ] eax
lea edx [ esp + 0xc ]
push edx
push 0x0
push 0x5
push 0x100
push 0x4
call sub_40dea6
lea edx [ esp + 0x14 ]
push edx
push 0x0
push 0x5
push 0x100
push 0x4
call sub_40dea6
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x8 ] 0x20
push [ esp + 0xc ]
pop eax
mov [ esp + 0x34 ] eax
push [ esp + 0x4 ]
pop eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x1c ] 0x0
jmp r-xdata
mov eax 0xff
cmp eax [ esp + 0x1c ]
jl r-xdata
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x1c ] 0x0
jmp r-xdata
push [ esp + 0x1c ]
mov ebp [ esp + 0x38 ]
pop eax
mov [ ebp ] eax
mov ebx [ esp + 0x34 ]
add ebx 0x4
mov [ esp + 0x34 ] ebx
mov ebp [ esp + 0x38 ]
movsx ebx [ ebp ]
and ebx ebx
jne r-xdata
mov eax 0xff
cmp eax [ esp + 0x1c ]
jl r-xdata
mov ebp [ esp + 0x38 ]
movsx eax [ ebp ]
push eax
mov ebx [ esp + 0x20 ]
mov ebp [ esp + 0x18 ]
shl ebx 0x2
pop eax
mov [ ebp + ebx ] eax
mov ebx [ esp + 0x38 ]
inc ebx
mov [ esp + 0x38 ] ebx
inc [ esp + 0x1c ]
jno r-xdata
push [ esp + 0x4 ]
pop eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] 0x0
push [ esp + 0x50 ]
pop eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x28 ] 0x0
jmp r-xdata
mov ebx [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
mov ebp [ esp + 0xc ]
shl edi 0x2
add ebx [ ebp + edi ]
mov edi [ esp + 0x1c ]
mov ebp [ esp + 0x14 ]
shl edi 0x2
add ebx [ ebp + edi ]
and ebx 0xff
mov [ esp + 0x20 ] ebx
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0xc ]
shl ebx 0x2
push [ ebp + ebx ]
pop eax
mov [ esp + 0x2c ] eax
mov ebx [ esp + 0x20 ]
shl ebx 0x2
push [ ebp + ebx ]
mov ebx [ esp + 0x20 ]
shl ebx 0x2
pop eax
mov [ ebp + ebx ] eax
push [ esp + 0x2c ]
mov ebx [ esp + 0x24 ]
shl ebx 0x2
pop eax
mov [ ebp + ebx ] eax
inc [ esp + 0x1c ]
jno r-xdata
mov ebx [ esp + 0x54 ]
dec ebx
cmp ebx [ esp + 0x28 ]
jl r-xdata
lea edx [ esp + 0xc ]
push edx
push 0x0
push 0x5
push 0x1
push 0x4
call sub_40dea6
lea edx [ esp + 0x14 ]
push edx
push 0x0
push 0x5
push 0x1
push 0x4
call sub_40dea6
push [ esp + 0x4 ]
call sub_409e40
mov eax [ esp + 0x50 ]
jmp r-xdata
mov ebx [ esp + 0x1c ]
inc ebx
and ebx 0xff
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
mov ebp [ esp + 0xc ]
shl edi 0x2
add ebx [ ebp + edi ]
and ebx 0xff
mov [ esp + 0x20 ] ebx
mov ebx [ esp + 0x1c ]
shl ebx 0x2
push [ ebp + ebx ]
pop eax
mov [ esp + 0x2c ] eax
mov ebx [ esp + 0x20 ]
shl ebx 0x2
push [ ebp + ebx ]
mov ebx [ esp + 0x20 ]
shl ebx 0x2
pop eax
mov [ ebp + ebx ] eax
push [ esp + 0x2c ]
mov ebx [ esp + 0x24 ]
shl ebx 0x2
pop eax
mov [ ebp + ebx ] eax
mov ebx [ esp + 0x1c ]
shl ebx 0x2
mov ebx [ ebp + ebx ]
mov edi [ esp + 0x20 ]
shl edi 0x2
mov edi [ ebp + edi ]
and edi 0xff
add ebx edi
and ebx 0xff
mov [ esp + 0x24 ] ebx
mov ebx [ esp + 0x24 ]
shl ebx 0x2
push [ ebp + ebx ]
pop eax
mov [ esp + 0x30 ] eax
mov ebp [ esp + 0x3c ]
movsx ebx [ ebp ]
xor ebx [ esp + 0x30 ]
push ebx
mov ebp [ esp + 0x40 ]
pop eax
mov [ ebp ] al
mov ebx [ esp + 0x3c ]
inc ebx
mov [ esp + 0x3c ] ebx
inc [ esp + 0x28 ]
jno r-xdata
push [ esp ]
call sub_40e230
push eax
push [ esp + 0x10 ]
call sub_40dff9
push [ esp + 0x18 ]
call sub_40dff9
pop eax
add esp 0x40
pop edi
pop ebx
pop ebp
retn 0xc
sub_401511
push ebp
push ebx
mov edx 0xb
sub esp 0x4
mov [ esp ] 0x0
dec edx
jne r-xdata
call sub_40e2a0
mov ebx [ rw-data ]
cmp ebx 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov [ esp + 0x1c ] 0x1
mov ebx [ rw-data ]
cmp ebx 0x1
jne r-xdata
mov edx [ esp + 0x10 ]
xor ecx ecx
call sub_405120
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax rw-data
push eax
push 0x2
push [ esp + 0x20 ]
call sub_4057f0
lea eax [ esp + 0x28 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax rw-data
push eax
push 0x1
push [ esp + 0x20 ]
call sub_4057f0
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
xor eax eax
mov ebx [ rw-data ]
cmp ebx 0x1
je r-xdata
jmp r-xdata
mov ebx [ esp + 0x1c ]
mov eax ebx
mov ecx 0x2
cdq
idiv ecx
mov ebx edx
and ebx ebx
jne r-xdata
jmp r-xdata
mov eax rw-data
push eax
push [ rw-data ]
call sub_405760
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push [ esp + 0x1c ]
call sub_405ac0
call sub_40e360
mov edx rw-data
pop ecx
push ecx
call sub_405160
mov ecx eax
call sub_405120
je r-xdata
push [ esp + 0x10 ]
call sub_405980
push eax
mov ebx [ esp + 0x8 ]
mov ebp [ rw-data ]
imul ebx ebx 0xc
add ebp ebx
pop eax
mov [ ebp + 0x8 ] eax
mov ebx [ esp + 0x4 ]
inc ebx
mov [ esp + 0x4 ] ebx
jmp r-xdata
push [ esp + 0x8 ]
call sub_40e230
push [ esp + 0x28 ]
call sub_40e230
push [ esp + 0x10 ]
call sub_40e230
push [ esp + 0x24 ]
call sub_40e230
push [ esp + 0xc ]
call sub_40e230
add esp 0x2c
pop ebx
pop ebp
retn
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jl r-xdata
and eax eax
je r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax rw-data
push eax
push [ esp + 0x1c ]
call sub_405d40
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
mov edx [ esp + 0x10 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov ebx [ esp + 0x8 ]
mov ebp [ rw-data ]
imul ebx ebx 0xc
add ebp ebx
lea eax [ ebp + 0x4 ]
push eax
call sub_40e1a0
push [ esp + 0x24 ]
call sub_405980
push eax
mov ebx [ esp + 0x8 ]
mov ebp [ rw-data ]
imul ebx ebx 0xc
add ebp ebx
pop eax
mov [ ebp ] eax
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ rw-data ]
push edx
call sub_40e300
mov edx [ rw-data ]
push edx
call sub_40e300
mov edx [ esp + 0x14 ]
push edx
call sub_40e300
mov edx rw-data
push edx
call sub_40e300
lea eax [ rw-data ]
push eax
call sub_40e1a0
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ rw-data ]
push edx
call sub_40e300
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax rw-data
push eax
push [ esp + 0x20 ]
call sub_405d40
pop eax
lea eax [ esp + 0x2c ]
push eax
call sub_40e1a0
push [ esp + 0x28 ]
call sub_40a985
mov ebx [ rw-data ]
cmp ebx 0x1
jne r-xdata
jmp r-xdata
push [ esp + 0x10 ]
call sub_405700
mov [ esp + 0x14 ] eax
push 0x0
lea eax [ esp + 0x1c ]
push eax
push [ esp + 0x1c ]
call sub_409e20
push eax
push [ esp + 0x20 ]
push [ rw-data ]
call WriteFile
push [ esp + 0x14 ]
call sub_409e40
mov edx rw-data
lea ecx [ rw-data ]
call sub_405068
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax rw-data
push eax
push [ esp + 0x10 ]
push [ rw-data ]
call sub_4057f0
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
push [ esp + 0x8 ]
call sub_402472
and eax eax
je r-xdata
mov ebx [ esp + 0x1c ]
inc ebx
mov [ esp + 0x1c ] ebx
jmp r-xdata
push [ esp + 0x28 ]
call sub_403a9d
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0x2c ]
push edx
call sub_40e300
mov edx rw-data
push edx
call sub_40e300
lea eax [ rw-data ]
push eax
call sub_40e1a0
jmp r-xdata
push [ esp + 0x24 ]
call sub_405980
push eax
push [ esp + 0x2c ]
call sub_40aa05
inc [ esp + 0x4 ]
jno r-xdata
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0xc ]
call sub_402fcb
lea eax [ esp + 0x10 ]
push eax
call sub_40e1a0
mov edx [ esp + 0x10 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0x10 ]
push edx
call sub_40e300
mov edx rw-data
push edx
call sub_40e300
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax rw-data
push eax
push [ esp + 0x28 ]
push [ rw-data ]
call sub_4057f0
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
mov eax rw-data
push eax
push [ esp + 0x14 ]
call sub_405920
mov [ esp + 0x20 ] eax
cmp [ esp + 0x20 ] 0x0
je r-xdata
sub_40196c
push ebp
push ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
call sub_40e2a0
push edx
call sub_40e160
pop edx
push eax
push 0x2
push 0x0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
call sub_4092d8
call sub_405182
add [ esp ] edx
call LoadLibraryExW
call sub_4051a0
mov [ esp ] eax
push 0x0
lea eax [ sub_401d6a ]
push eax
push [ esp + 0x8 ]
call EnumResourceTypesW
push [ esp ]
call FreeLibrary
push [ rw-data ]
call sub_40a703
mov ebx eax
and ebx ebx
jle r-xdata
jmp r-xdata
push [ rw-data ]
call sub_40a70d
push 0x0
call sub_4011d0
call sub_40e140
push [ rw-data ]
call HeapDestroy
call ExitProcess
push [ rw-data ]
call sub_40a756
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x24 ]
call sub_405d90
call sub_405182
add [ esp ] edx
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
mov edx [ esp + 0x10 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
lea eax [ esp + 0x18 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push [ esp + 0x24 ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0xa
push [ esp + 0x1c ]
call sub_405ea0
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
push [ esp + 0xc ]
mov edx [ esp + 0x14 ]
pop ecx
call sub_405120
je r-xdata
mov ebp [ rw-data ]
mov edx [ ebp + 0x8 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
lea eax [ esp + 0x8 ]
push eax
call sub_40e1a0
push [ esp + 0x4 ]
call sub_405d60
mov ebx eax
cmp ebx 0xa
jle r-xdata
jmp r-xdata
call sub_40949e
and eax eax
je r-xdata
mov edx [ esp + 0x4 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
lea eax [ esp + 0x10 ]
push eax
call sub_40e1a0
mov edx [ esp + 0x8 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0x8 ]
push edx
call sub_40e300
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
jmp r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x0
call sub_4094b2
call sub_40e360
mov edx [ esp + 0x18 ]
pop ecx
push ecx
call sub_405160
mov ecx eax
call sub_405120
je r-xdata
push [ rw-data ]
call sub_40a722
or eax eax
je r-xdata
jmp r-xdata
push [ esp + 0x4 ]
call sub_40e230
push [ esp + 0xc ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
push [ esp + 0x14 ]
call sub_40e230
push [ esp + 0x10 ]
call sub_40e230
add esp 0x18
pop ebx
pop ebp
retn
mov [ rw-data ] 0x1
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
call sub_4094b2
lea eax [ rw-data ]
push eax
call sub_40e1a0
sub_401c32
push ebx
xor eax eax
push eax
call sub_40e2a0
push [ esp + 0x10 ]
call sub_4051a0
mov ebx [ esp + 0xc ]
and ebx ebx
jle r-xdata
mov edx [ esp ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
pop eax
push eax
call sub_405170
pop edx
add eax edx
jmp r-xdata
push edx
call sub_40e160
pop edx
push eax
call sub_402658
lea eax [ esp + 0x4 ]
push eax
call sub_40e1a0
push [ esp ]
call sub_40e230
add esp 0x4
pop ebx
retn 0x4
sub_401d07
push ebx
xor eax eax
push eax
call sub_40e2a0
mov ebx [ esp ]
cmp ebx 0x1
jne r-xdata
call sub_403719
push [ rw-data ]
call sub_40aa44
push [ rw-data ]
call RemoveDirectoryW
push [ rw-data ]
call RemoveDirectoryW
push [ esp + 0xc ]
jmp r-xdata
push [ rw-data ]
call sub_4053bb
and eax eax
je r-xdata
call sub_4011d0
call sub_40e140
push [ rw-data ]
call HeapDestroy
call ExitProcess
push [ rw-data ]
call sub_40542a
sub_401d6a
push ebx
call sub_40e2a0
mov ebx [ esp + 0xc ]
cmp ebx 0xa
jne r-xdata
mov eax 0x1
jmp r-xdata
push 0x0
lea eax [ sub_403228 ]
push eax
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call EnumResourceNamesW
pop ebx
retn 0xc
sub_401d9f
push ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
call sub_40e2a0
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax 0x3
cmp eax [ esp ]
jl r-xdata
push 0x400
call sub_409e60
mov [ esp + 0x10 ] eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
call sub_40aa52
lea eax [ esp + 0x18 ]
push eax
call sub_40e1a0
push [ esp + 0x10 ]
push 0x0
mov eax rw-data
push eax
push [ esp + 0x20 ]
call GetTempFileNameW
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x18 ]
call sub_409e80
lea eax [ rw-data ]
push eax
call sub_40e1a0
push [ rw-data ]
call sub_40aa44
push [ rw-data ]
call sub_40a985
push [ esp + 0x10 ]
push 0x0
mov eax rw-data
push eax
push [ rw-data ]
call GetTempFileNameW
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x18 ]
call sub_409e80
lea eax [ rw-data ]
push eax
call sub_40e1a0
push [ rw-data ]
call sub_40aa44
push [ rw-data ]
call sub_40a985
push [ esp + 0x10 ]
push 0x0
mov eax rw-data
push eax
push [ rw-data ]
call GetTempFileNameW
push [ rw-data ]
call PathAddBackslashW
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x18 ]
call sub_409e80
lea eax [ rw-data ]
push eax
call sub_40e1a0
push [ rw-data ]
call sub_40aa44
push [ esp + 0xc ]
push [ rw-data ]
call PathRenameExtensionW
push [ esp + 0x10 ]
call sub_409e40
jmp r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0xc ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ esp + 0x10 ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
push [ esp + 0xc ]
call sub_40e230
push [ esp + 0x14 ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
add esp 0x18
pop ebx
retn
sub_401f94
push ebx
mov ebx [ esp + 0x8 ]
add ebx 0x6
push ebx
pop eax
call sub_405100
mov [ rw-data ] eax
mov ebx [ esp + 0x8 ]
add ebx 0x8
push ebx
pop eax
call sub_405100
mov [ rw-data ] eax
mov ebx [ esp + 0x8 ]
add ebx 0xa
push ebx
pop eax
call sub_405100
mov [ rw-data ] eax
mov ebx [ esp + 0x8 ]
add ebx 0xc
push ebx
pop eax
call sub_405100
mov [ rw-data ] eax
mov ebx [ esp + 0x8 ]
add ebx 0xe
push ebx
pop eax
call sub_405100
mov [ rw-data ] eax
xor eax eax
pop ebx
retn 0x4
sub_401ffa
xor eax eax
push eax
push eax
push eax
call sub_40e2a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push [ rw-data ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x4 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x3
push [ rw-data ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x8 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x8 ]
call sub_403312
lea eax [ rw-data ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x4 ]
call sub_403312
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
push [ esp + 0x8 ]
push [ rw-data ]
call sub_4023e3
xor eax eax
push [ esp + 0x4 ]
call sub_40e230
push [ esp ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
add esp 0xc
retn
sub_4020f9
push ebx
call sub_40e2a0
push [ esp + 0x8 ]
xor ebx ebx
cmp ebx [ esp ]
je r-xdata
push [ rw-data ]
call sub_409500
and eax eax
je r-xdata
mov ebx 0x1
cmp ebx [ esp ]
je r-xdata
push 0x0
call sub_401d07
push [ rw-data ]
call sub_409537
and eax eax
je r-xdata
mov ebx 0x2
cmp ebx [ esp ]
je r-xdata
push [ rw-data ]
call sub_40958f
push [ rw-data ]
call sub_40957e
mov ebx 0x5
cmp ebx [ esp ]
je r-xdata
mov ebx 0x6
cmp ebx [ esp ]
jne r-xdata
pop eax
xor eax eax
jmp r-xdata
pop ebx
retn 0x4
sub_40217b
push ebx
xor eax eax
push eax
push eax
push eax
push eax
call sub_40e2a0
push [ esp + 0x1c ]
call sub_4051a0
mov ebx [ esp + 0x18 ]
add ebx 0x2
push ebx
pop eax
call sub_405100
mov ebx eax
cmp ebx 0x1
jne r-xdata
mov edx [ esp + 0xc ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
pop eax
push eax
call sub_405170
pop edx
add eax edx
jmp r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x28
mov ebx [ esp + 0x2c ]
add ebx 0x40
push ebx
call sub_409ed0
call sub_405182
add [ esp ] edx
call sub_406000
lea eax [ esp + 0x4 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x64
mov ebx [ esp + 0x2c ]
add ebx 0x12c
push ebx
call sub_409ed0
call sub_405182
add [ esp ] edx
call sub_406000
lea eax [ esp + 0x8 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
mov eax rw-data
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ rw-data ]
push 0x2
push [ esp + 0x24 ]
call sub_4057f0
call sub_40e360
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ rw-data ]
push 0x1
push [ esp + 0x28 ]
call sub_4057f0
call sub_405182
add [ esp ] edx
call sub_405182
add [ esp + 0x4 ] edx
call sub_408ba9
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0x8 ]
xor ecx ecx
call sub_405120
jne r-xdata
push [ esp + 0x4 ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
push [ esp ]
call sub_40e230
push [ esp + 0xc ]
call sub_40e230
add esp 0x10
pop ebx
retn 0x4
push 0x0
call sub_401d07
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x1c ]
call sub_406000
call sub_405182
add [ esp ] edx
call sub_40d3c0
lea eax [ esp + 0x10 ]
push eax
call sub_40e1a0
push [ esp + 0xc ]
mov edx [ esp + 0x4 ]
pop ecx
call sub_405120
jne r-xdata
jmp r-xdata
push edx
call sub_40e160
pop edx
push eax
push 0x10
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ rw-data ]
push 0x3
push [ esp + 0x1c ]
call sub_4057f0
call sub_40e360
push [ rw-data ]
call sub_405182
add [ esp + 0x4 ] edx
call sub_408a67
call sub_4051a0
push 0x0
call sub_401d07
sub_4023e3
push ebx
xor eax eax
push eax
push eax
push eax
push eax
mov edx [ esp + 0x18 ]
lea ecx [ esp ]
call sub_405060
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x4 ]
call sub_405060
push 0x19
push [ esp + 0x4 ]
push 0xffffffff
call sub_40af70
mov [ esp + 0x8 ] eax
cmp [ esp + 0x8 ] 0x0
je r-xdata
push [ esp + 0x4 ]
call sub_405d60
mov ebx eax
and ebx ebx
jne r-xdata
push [ esp + 0x4 ]
push [ esp + 0xc ]
call sub_40b240
mov [ esp + 0xc ] eax
push [ esp + 0x8 ]
call sub_40ac90
mov eax [ esp + 0xc ]
jmp r-xdata
mov [ esp + 0xc ] 0x1
push [ esp ]
call sub_40e230
push [ esp + 0x4 ]
call sub_40e230
add esp 0x10
pop ebx
retn 0x8
sub_402472
xor eax eax
push eax
push eax
push eax
mov edx [ esp + 0x10 ]
lea ecx [ esp ]
call sub_405060
push 0x20000
push [ esp + 0x4 ]
push 0xffffffff
call sub_40b060
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
jmp r-xdata
push [ esp + 0x4 ]
call sub_40ac90
mov [ esp + 0x8 ] 0x1
push [ esp ]
call sub_40e230
add esp 0xc
retn 0x4
sub_4024c8
push ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
call sub_40e2a0
mov edx [ esp + 0x20 ]
lea ecx [ esp ]
call sub_405060
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x4 ]
call sub_405060
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0x8 ]
call sub_405060
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0xc ]
call sub_405060
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
push [ esp + 0x10 ]
call PathQuoteSpacesW
mov edx [ esp + 0x10 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx rw-data
push edx
call sub_40e300
mov edx [ esp + 0x10 ]
push edx
call sub_40e300
mov edx rw-data
push edx
call sub_40e300
mov edx [ esp + 0x4 ]
push edx
call sub_40e300
lea eax [ esp + 0x4 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push 0x44
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
call sub_40aab5
call sub_40e360
push [ esp + 0xc ]
mov edx [ esp + 0x14 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0x1c ]
push edx
call sub_40e300
call sub_405182
add [ esp ] edx
call sub_405182
add [ esp + 0x8 ] edx
call sub_409623
call sub_4051a0
mov [ rw-data ] eax
push [ rw-data ]
call sub_40957e
push [ rw-data ]
call sub_409b6a
mov [ esp + 0x14 ] eax
push [ rw-data ]
call sub_40958f
mov eax [ esp + 0x14 ]
jmp r-xdata
push 0xa
call sub_405526
jmp r-xdata
push [ esp + 0xc ]
call sub_40e230
push [ esp ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
push [ esp + 0x4 ]
call sub_40e230
push [ esp + 0x10 ]
call sub_40e230
add esp 0x18
pop ebx
retn 0x10
push [ rw-data ]
call sub_409537
and eax eax
je r-xdata
sub_402658
push ebx
mov edx 0x9
sub esp 0x4
mov [ esp ] 0x0
dec edx
jne r-xdata
call sub_40e2a0
push [ esp + 0x2c ]
call sub_4051a0
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax 0x6
cmp eax [ esp ]
jl r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
call GetCommandLineW
push eax
call sub_409e80
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
mov edx [ esp + 0x10 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
lea eax [ esp + 0x18 ]
push eax
call sub_40e1a0
mov eax [ esp + 0x14 ]
push eax
call PathRemoveArgsW
mov [ esp + 0x18 ] eax
push [ esp + 0x14 ]
call sub_405d60
mov [ esp + 0x1c ] eax
mov ebx [ esp + 0x1c ]
and ebx ebx
jle r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0xc ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ esp + 0x10 ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
push [ esp + 0x20 ]
push [ esp + 0x10 ]
call sub_409b8a
mov edx [ esp + 0x20 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
pop eax
push eax
call sub_405170
pop edx
add eax edx
jmp r-xdata
push edx
call sub_40e160
pop edx
push eax
mov edx rw-data
push edx
call sub_40e300
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0x30 ]
inc ebx
push ebx
push [ esp + 0x28 ]
call sub_4060b0
call sub_405182
add [ esp ] edx
call sub_406000
pop eax
lea eax [ esp + 0x24 ]
push eax
call sub_40e1a0
push [ esp + 0x14 ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
push [ esp + 0x10 ]
call sub_40e230
push [ esp + 0xc ]
call sub_40e230
push [ esp + 0x20 ]
call sub_40e230
add esp 0x24
pop ebx
retn
sub_40281f
xor eax eax
push eax
push eax
call sub_40e2a0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call LoadResource
mov [ esp ] eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call SizeofResource
mov [ rw-data ] eax
push [ rw-data ]
call sub_409e60
mov [ esp + 0x4 ] eax
push [ rw-data ]
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_409f40
push [ esp ]
call FreeResource
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x8
retn 0x8
sub_402882
push ebp
push ebx
mov edx 0x11
sub esp 0x4
mov [ esp ] 0x0
dec edx
jne r-xdata
call sub_40e2a0
mov edx [ esp + 0x50 ]
lea ecx [ esp ]
call sub_405060
call sub_401511
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] 0x0
jmp r-xdata
mov eax [ esp + 0x1c ]
cmp eax [ esp + 0x20 ]
jl r-xdata
push [ esp + 0x34 ]
call sub_409e40
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax [ rw-data ]
cdq
push edx
push eax
call sub_406100
call sub_40e360
push [ rw-data ]
call sub_405182
add [ esp + 0x4 ] edx
call sub_409b8a
call sub_4051a0
call sub_401511
mov eax 0x1
jmp r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x3
mov ebx [ esp + 0x34 ]
mov ebp [ rw-data ]
imul ebx ebx 0xc
add ebp ebx
push [ ebp + 0x4 ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x28 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x2c ]
call sub_405d90
lea eax [ esp + 0x2c ]
push eax
call sub_40e1a0
push 0xa
push [ esp + 0x28 ]
push [ rw-data ]
call FindResourceW
mov [ esp + 0x2c ] eax
push 0xa
push [ esp + 0x2c ]
push [ rw-data ]
call FindResourceW
mov [ esp + 0x30 ] eax
cmp [ esp + 0x2c ] 0x0
je r-xdata
push [ esp + 0x24 ]
call sub_40e230
push [ esp + 0x28 ]
call sub_40e230
push [ esp + 0x38 ]
call sub_40e230
push [ esp ]
call sub_40e230
add esp 0x44
pop ebx
pop ebp
retn 0x4
cmp [ esp + 0x30 ] 0x0
je r-xdata
push [ esp + 0x2c ]
push [ rw-data ]
call sub_40281f
mov [ esp + 0x34 ] eax
push [ esp + 0x34 ]
call sub_40425d
cdq
push edx
push eax
pop [ esp + 0x8 ]
pop [ esp + 0x8 ]
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ rw-data ]
push edx
call sub_40e300
mov ebx [ esp + 0x24 ]
mov ebp [ rw-data ]
imul ebx ebx 0xc
add ebp ebx
mov edx [ ebp + 0x4 ]
push edx
call sub_40e300
lea eax [ esp + 0x3c ]
push eax
call sub_40e1a0
push [ rw-data ]
mov eax [ esp + 0x8 ]
push eax
push [ esp + 0x3c ]
call sub_4011ef
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ esp + 0x3c ]
push [ esp + 0x44 ]
call sub_40426d
mov ebx [ rw-data ]
cmp ebx 0x1
jne r-xdata
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ rw-data ]
push edx
call sub_40e300
mov ebx [ esp + 0x24 ]
mov ebp [ rw-data ]
imul ebx ebx 0xc
add ebp ebx
mov edx [ ebp + 0x4 ]
push edx
call sub_40e300
lea eax [ esp + 0x3c ]
push eax
call sub_40e1a0
push 0x0
push 0x0
push [ esp + 0x44 ]
push [ esp + 0x44 ]
call sub_40426d
mov ebx [ rw-data ]
cmp ebx 0x1
jne r-xdata
push [ esp + 0x30 ]
push [ rw-data ]
call sub_40281f
mov [ esp + 0x34 ] eax
push [ esp + 0x34 ]
call sub_40425d
cdq
push edx
push eax
pop [ esp + 0x8 ]
pop [ esp + 0x8 ]
push [ rw-data ]
mov eax [ esp + 0x8 ]
push eax
push [ esp + 0x3c ]
call sub_4011ef
push [ esp + 0x34 ]
call sub_409f60
push edx
push eax
pop [ esp + 0x18 ]
pop [ esp + 0x18 ]
mov ebx [ esp + 0x34 ]
add ebx 0x8
push ebx
call sub_409f60
push edx
push eax
pop [ esp + 0x10 ]
pop [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push eax
call sub_409e60
mov [ esp + 0x3c ] eax
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ rw-data ]
push edx
call sub_40e300
mov ebx [ esp + 0x24 ]
mov ebp [ rw-data ]
imul ebx ebx 0xc
add ebp ebx
mov edx [ ebp + 0x4 ]
push edx
call sub_40e300
lea eax [ esp + 0x3c ]
push eax
call sub_40e1a0
cmp [ esp + 0x3c ] 0x0
je r-xdata
jmp r-xdata
mov ebx [ esp + 0x20 ]
mov ebp [ rw-data ]
imul ebx ebx 0xc
add ebp ebx
push [ ebp ]
push [ esp + 0x3c ]
call sub_40aa05
push [ esp + 0x38 ]
call sub_402472
and eax eax
je r-xdata
mov ebx [ esp + 0x20 ]
mov ebp [ rw-data ]
imul ebx ebx 0xc
add ebp ebx
push [ ebp ]
push [ esp + 0x3c ]
call sub_40aa05
jmp r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ebx [ esp + 0x38 ]
add ebx 0x10
push ebx
lea eax [ esp + 0x14 ]
push eax
push [ esp + 0x48 ]
call sub_40ea60
add esp 0x10
mov [ esp + 0x40 ] eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x44 ]
push [ esp + 0x44 ]
call sub_40426d
mov ebx [ rw-data ]
cmp ebx 0x1
jne r-xdata
inc [ esp + 0x20 ]
jno r-xdata
mov ebx [ rw-data ]
inc ebx
mov [ rw-data ] ebx
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x40 ]
call sub_402fcb
call sub_40e360
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax [ rw-data ]
cdq
push edx
push eax
call sub_406100
pop eax
call sub_405182
add [ esp ] edx
call sub_405182
add [ esp + 0x4 ] edx
call sub_409b8a
call sub_4051a0
push [ rw-data ]
call sub_40a7b4
mov edx [ esp + 0x38 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov ebp [ rw-data ]
lea eax [ ebp + 0x8 ]
push eax
call sub_40e1a0
push [ esp + 0x3c ]
call sub_409e40
mov ebx [ esp + 0x20 ]
mov ebp [ rw-data ]
imul ebx ebx 0xc
add ebp ebx
push [ ebp ]
push [ esp + 0x3c ]
call sub_40aa05
sub_402d28
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
call sub_40e2a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push [ rw-data ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x4 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push [ esp + 0x14 ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x4 ]
push eax
call sub_40e1a0
push [ esp ]
call sub_40326e
mov [ esp + 0x4 ] eax
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x8 ]
call sub_40217b
call sub_4051a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax rw-data
push eax
push [ rw-data ]
call sub_408f95
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0x8 ]
xor ecx ecx
call sub_405120
jne r-xdata
jmp r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push [ rw-data ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x10 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x3
push [ rw-data ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x14 ]
call sub_403312
lea eax [ rw-data ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x10 ]
call sub_403312
lea eax [ esp + 0x18 ]
push eax
call sub_40e1a0
push [ esp + 0x8 ]
call PathAddBackslashW
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ rw-data ]
push edx
call sub_40e300
call sub_405182
add [ esp ] edx
call sub_4023e3
call sub_4051a0
mov edx [ esp + 0x8 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
lea eax [ rw-data ]
push eax
call sub_40e1a0
push [ rw-data ]
call PathRemoveBackslashW
push [ esp ]
call sub_40307a
push 0x0
call sub_4011d0
call sub_40e140
push [ rw-data ]
call HeapDestroy
call ExitProcess
sub_402f60
xor eax eax
push [ esp ]
call sub_40e230
push [ esp + 0x10 ]
call sub_40e230
push [ esp + 0xc ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
push [ esp + 0x14 ]
call sub_40e230
add esp 0x18
retn
sub_402f92
push ebp
mov edx 0x9
sub esp 0x4
mov [ esp ] 0x0
dec edx
jne r-xdata
call sub_40e2a0
lea eax [ esp ]
push eax
call GetNativeSystemInfo
lea ebp [ esp ]
cmp [ ebp ] 0x0
je r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
add esp 0x24
pop ebp
retn
sub_402fcb
xor eax eax
push eax
push eax
push eax
call sub_40e2a0
push [ esp + 0x14 ]
call sub_4051a0
mov edx [ esp + 0x10 ]
lea ecx [ esp ]
call sub_405060
push 0x2710
call sub_409e60
mov [ esp + 0x4 ] eax
push 0x2710
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call GetShortPathNameW
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0xffffffff
push [ esp + 0x10 ]
call sub_409ed0
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
push [ esp + 0x4 ]
call sub_409e40
mov edx [ esp + 0x8 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
pop eax
push eax
call sub_405170
pop edx
add eax edx
jmp r-xdata
push [ esp ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
add esp 0xc
retn 0x4
sub_40307a
push ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
call sub_40e2a0
mov edx [ esp + 0x20 ]
lea ecx [ esp ]
call sub_405060
mov ebx [ esp + 0x4 ]
cmp ebx 0x1
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push [ esp + 0x14 ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
push 0xa
push [ esp + 0xc ]
push [ rw-data ]
call FindResourceW
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax [ esp + 0x8 ]
push eax
call sub_409e80
lea eax [ esp + 0x4 ]
push eax
call sub_40e1a0
mov edx [ rw-data ]
xor ecx ecx
call sub_405120
jne r-xdata
push [ esp + 0xc ]
push [ rw-data ]
call sub_40281f
mov [ esp + 0x10 ] eax
push [ esp + 0x10 ]
call sub_40425d
mov [ rw-data ] eax
push [ rw-data ]
push [ rw-data ]
push [ esp + 0x18 ]
call sub_4011ef
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ rw-data ]
push [ esp + 0x1c ]
call sub_409ed0
lea eax [ rw-data ]
push eax
call sub_40e1a0
push [ esp + 0x10 ]
call sub_409e40
mov eax rw-data
push eax
push [ rw-data ]
call sub_405920
mov [ esp + 0x14 ] eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0x1c ]
dec ebx
push ebx
push [ rw-data ]
call sub_405ea0
lea eax [ rw-data ]
push eax
call sub_40e1a0
jmp r-xdata
mov ebx [ esp + 0x4 ]
cmp ebx 0x1
jne r-xdata
push [ esp ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
add esp 0x18
pop ebx
retn 0x4
push [ esp ]
call sub_402882
mov eax [ esp ]
push eax
lea eax [ sub_402882 ]
push eax
call sub_405486
mov [ rw-data ] eax
jmp r-xdata
sub_403228
push ebp
call sub_40e2a0
push [ rw-data ]
call sub_40a7b4
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x18 ]
call sub_409e80
mov ebp [ rw-data ]
lea eax [ ebp + 0x8 ]
push eax
call sub_40e1a0
mov eax 0x1
jmp r-xdata
pop ebp
retn 0x10
sub_40326e
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
call sub_40e2a0
mov edx [ esp + 0x1c ]
lea ecx [ esp ]
call sub_405060
push 0xa
push [ esp + 0x4 ]
push [ rw-data ]
call FindResourceW
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
push 0x200
call sub_409e60
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x200
push [ rw-data ]
push [ esp + 0xc ]
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x18 ]
call sub_40ea60
add esp 0x10
mov [ esp + 0x14 ] eax
mov eax [ esp + 0xc ]
jmp r-xdata
push [ esp + 0x4 ]
push [ rw-data ]
call sub_40281f
mov [ esp + 0x8 ] eax
push [ esp + 0x8 ]
call sub_40425d
mov [ rw-data ] eax
push [ esp ]
call sub_40e230
add esp 0x18
retn 0x4
sub_403312
xor eax eax
push eax
push eax
push eax
push eax
call sub_40e2a0
push [ esp + 0x18 ]
call sub_4051a0
mov edx [ esp + 0x14 ]
lea ecx [ esp ]
call sub_405060
push 0xa
push [ esp + 0x4 ]
push [ rw-data ]
call FindResourceW
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov edx [ esp + 0xc ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
pop eax
push eax
call sub_405170
pop edx
add eax edx
jmp r-xdata
push [ esp + 0x4 ]
push [ rw-data ]
call sub_40281f
mov [ esp + 0x8 ] eax
push [ esp + 0x8 ]
call sub_40425d
mov [ rw-data ] eax
push [ rw-data ]
push [ rw-data ]
push [ esp + 0x10 ]
call sub_4011ef
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x2
push [ rw-data ]
push [ esp + 0x18 ]
call sub_409f70
lea eax [ esp + 0x10 ]
push eax
call sub_40e1a0
push [ esp + 0x8 ]
call sub_409e40
push [ esp ]
call sub_40e230
push [ esp + 0xc ]
call sub_40e230
add esp 0x10
retn 0x4
sub_4033fd
push ebx
xor eax eax
push eax
push eax
push eax
push eax
call sub_40e2a0
push [ esp + 0x18 ]
call sub_4051a0
mov eax rw-data
mov [ rw-data ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ esp ] eax
add [ rw-data ] 0x4
mov eax [ rw-data ]
mov eax [ eax ]
mov [ esp + 0x4 ] eax
add [ rw-data ] 0x4
push [ esp ]
lea eax [ esp + 0xc ]
push eax
pop eax
call sub_405110
push [ esp + 0x4 ]
lea eax [ esp + 0xc ]
mov ebx eax
add ebx 0x4
push ebx
pop eax
call sub_405110
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push 0x8
lea eax [ esp + 0x20 ]
push eax
call sub_40d3e0
call sub_405182
add [ esp ] edx
call sub_405e30
pop eax
push eax
call sub_405170
pop edx
add eax edx
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_4034bd
push ebx
mov edx 0x7
sub esp 0x4
mov [ esp ] 0x0
dec edx
jne r-xdata
call sub_40e2a0
push [ esp + 0x2c ]
call sub_4051a0
mov edx [ esp + 0x24 ]
lea ecx [ esp ]
call sub_405060
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0x4 ]
call sub_405060
call sub_402f92
and eax eax
je r-xdata
xor eax eax
call sub_40558e
mov ebx eax
cmp ebx 0x41
je r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x800
call sub_406260
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
push 0x800
push [ esp + 0xc ]
call GetSystemDirectoryW
push [ esp + 0x8 ]
call PathAddBackslashW
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x800
call sub_406260
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
push 0x800
push [ esp + 0xc ]
call GetWindowsDirectoryW
push [ esp + 0x8 ]
call PathAddBackslashW
mov edx [ esp + 0x8 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx rw-data
push edx
call sub_40e300
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
push [ esp + 0x8 ]
call PathAddBackslashW
mov edx [ esp + 0x8 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0x4 ]
push edx
call sub_40e300
lea eax [ esp + 0x10 ]
push eax
call sub_40e1a0
mov edx [ esp + 0x8 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0x4 ]
push edx
call sub_40e300
mov edx [ esp + 0x8 ]
push edx
call sub_40e300
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
push [ esp + 0xc ]
push 0x0
call sub_40b080
and eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
push [ esp + 0x10 ]
call sub_40e230
push [ esp ]
call sub_40e230
push [ esp + 0x4 ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
push [ esp + 0xc ]
call sub_40e230
add esp 0x1c
pop ebx
retn 0x8
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x14 ] 0x1
push 0x0
call sub_40ac90
jmp r-xdata
and eax eax
je r-xdata
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x18 ] 0x1
push 0x0
call sub_40ac90
jmp r-xdata
push [ esp + 0x10 ]
push 0x0
call sub_40b080
and eax eax
je r-xdata
jmp r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x800
call sub_406260
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
push 0x800
push [ esp + 0xc ]
call GetSystemDirectoryW
push [ esp + 0x8 ]
call PathAddBackslashW
mov ebx [ esp + 0x14 ]
add ebx [ esp + 0x18 ]
and ebx ebx
jne r-xdata
mov edx [ esp + 0x8 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
pop eax
push eax
call sub_405170
pop edx
add eax edx
jmp r-xdata
sub_403719
push ebp
push ebx
xor eax eax
push eax
call sub_40e2a0
mov ebx [ rw-data ]
cmp ebx 0x1
jne r-xdata
mov eax 0x1
jmp r-xdata
push [ rw-data ]
call sub_40a703
mov ebx eax
and ebx ebx
jle r-xdata
add esp 0x4
pop ebx
pop ebp
retn
push [ rw-data ]
call sub_40a703
mov [ esp ] eax
mov ebx [ esp ]
and ebx ebx
jle r-xdata
push [ rw-data ]
call sub_40a70d
push 0x5
push 0x0
push 0x1
push [ rw-data ]
call sub_406bf0
push [ rw-data ]
call sub_40a70d
mov ebp [ rw-data ]
push [ ebp + 0x8 ]
call sub_40aa44
jmp r-xdata
mov ebp [ rw-data ]
push [ ebp + 0xc ]
call RemoveDirectoryW
jmp r-xdata
push [ rw-data ]
call sub_40a722
or eax eax
je r-xdata
push [ rw-data ]
call sub_40a722
or eax eax
je r-xdata
sub_4037d5
push ebx
xor eax eax
push eax
push eax
call sub_40e2a0
push [ esp + 0x18 ]
call sub_4051a0
mov edx [ esp + 0x14 ]
lea ecx [ esp ]
call sub_405060
push [ esp + 0x10 ]
xor ebx ebx
cmp ebx [ esp ]
jne r-xdata
mov ebx 0x1
cmp ebx [ esp ]
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
call sub_40aab5
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
mov ebx 0x2
cmp ebx [ esp ]
jne r-xdata
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
pop eax
mov edx [ esp + 0x4 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
pop eax
push eax
call sub_405170
pop edx
add eax edx
jmp r-xdata
mov ebx 0x3
cmp ebx [ esp ]
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x4
call sub_40aafa
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
push [ esp + 0x4 ]
call sub_40e230
push [ esp ]
call sub_40e230
add esp 0x8
pop ebx
retn 0x8
mov ebx 0x4
cmp ebx [ esp ]
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x0
call sub_40aafa
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
mov ebx 0x5
cmp ebx [ esp ]
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x3
call sub_40aafa
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
mov ebx 0x6
cmp ebx [ esp ]
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x8
call sub_40aafa
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
mov ebx 0x7
cmp ebx [ esp ]
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x7
call sub_40aafa
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
mov ebx 0x8
cmp ebx [ esp ]
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x6
call sub_40aafa
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
mov ebx 0x9
cmp ebx [ esp ]
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x2
call sub_40aafa
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
mov ebx 0xa
cmp ebx [ esp ]
jne r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
call sub_40aafa
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
jmp r-xdata
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
call sub_40aab5
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov eax rw-data
push eax
push [ esp + 0x10 ]
call sub_408f95
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0x8 ]
xor ecx ecx
call sub_405120
jne r-xdata
push 0x0
call sub_401d07
push 0x1
call sub_405526
jmp r-xdata
jmp r-xdata
sub_403a9d
push ebp
push ebx
xor eax eax
push eax
call sub_40e2a0
mov edx [ esp + 0x10 ]
lea ecx [ esp ]
call sub_405060
push [ esp ]
push [ rw-data ]
call sub_40a16d
mov ebp eax
mov ebx [ ebp ]
cmp ebx 0x1
jge r-xdata
xor eax eax
push [ esp ]
call sub_40e230
add esp 0x4
pop ebx
pop ebp
retn 0x4
push [ esp ]
push [ rw-data ]
call sub_40a16d
mov ebp eax
mov [ ebp ] 0x1
push [ rw-data ]
call sub_40a7b4
mov edx [ esp ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov ebp [ rw-data ]
lea eax [ ebp + 0xc ]
push eax
call sub_40e1a0
push [ rw-data ]
pop eax
mov [ ebp + 0x8 ] eax
mov ebx [ rw-data ]
inc ebx
mov [ rw-data ] ebx
sub_403b36
push ebx
mov edx 0xe
sub esp 0x4
mov [ esp ] 0x0
dec edx
jne r-xdata
call sub_40e2a0
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax 0x19
cmp eax [ esp ]
jl r-xdata
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0xc ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ esp + 0x10 ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
mov eax 0x6
cmp eax [ esp ]
jl r-xdata
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0x10 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
mov eax 0x3
cmp eax [ esp ]
jl r-xdata
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0x14 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ esp + 0x18 ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
mov eax 0x7
cmp eax [ esp ]
jl r-xdata
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0x18 ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ esp + 0x1c ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
mov eax 0xd
cmp eax [ esp ]
jl r-xdata
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0x1c ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ esp + 0x20 ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
mov eax 0xe
cmp eax [ esp ]
jl r-xdata
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ rw-data ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
mov eax 0x9
cmp eax [ esp ]
jl r-xdata
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ rw-data ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
mov eax 0x4
cmp eax [ esp ]
jl r-xdata
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_4034bd
lea eax [ esp + 0x24 ]
push eax
call sub_40e1a0
call sub_40949e
mov [ esp + 0x24 ] eax
push 0x0
call GetModuleHandleW
mov [ rw-data ] eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push [ rw-data ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x2c ]
push eax
call sub_40e1a0
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
push 0x1
push [ esp + 0x3c ]
call sub_40d3c0
call sub_405182
add [ esp ] edx
call sub_405e30
lea eax [ esp + 0x2c ]
push eax
call sub_40e1a0
push [ esp + 0x28 ]
call sub_40326e
mov [ esp + 0x2c ] eax
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x30 ]
call sub_40217b
call sub_4051a0
call sub_401d9f
push [ esp + 0x2c ]
call sub_40417c
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x10 ]
mov ebx [ esp + 0x34 ]
add ebx 0x4
push ebx
pop eax
call sub_405100
push eax
call sub_4037d5
lea eax [ rw-data ]
push eax
call sub_40e1a0
push [ rw-data ]
call PathRemoveBackslashW
push [ esp + 0x2c ]
call sub_401f94
push [ rw-data ]
push [ esp + 0x20 ]
call sub_409b8a
call sub_401ffa
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x28 ]
call sub_401c32
lea eax [ esp + 0x34 ]
push eax
call sub_40e1a0
mov ebx [ rw-data ]
cmp ebx 0x1
jne r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ rw-data ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
push [ esp + 0x28 ]
call sub_40307a
mov eax [ esp + 0x28 ]
push eax
lea eax [ sub_40307a ]
push eax
call sub_405486
mov [ rw-data ] eax
jmp r-xdata
push [ esp + 0x18 ]
push [ esp + 0x14 ]
push [ esp + 0x28 ]
push [ esp + 0x3c ]
call sub_4024c8
mov [ esp + 0x34 ] eax
push 0x0
lea eax [ sub_4020f9 ]
push eax
call SetConsoleCtrlHandler
push [ esp + 0x34 ]
call sub_401d07
sub_40417c
push ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e2a0
mov eax rw-data
mov [ rw-data ] eax
mov [ esp ] 0x0
jmp r-xdata
mov eax 0x1b
cmp eax [ esp ]
jl r-xdata
push edx
call sub_40e160
pop edx
push eax
push [ esp + 0x10 ]
push [ esp + 0x24 ]
pop eax
call sub_405100
push eax
call sub_4037d5
lea eax [ esp + 0x14 ]
push eax
call sub_40e1a0
push [ esp + 0x10 ]
call sub_40ac1a
xor eax eax
push [ esp + 0xc ]
call sub_40e230
push [ esp + 0x8 ]
call sub_40e230
push [ esp + 0x10 ]
call sub_40e230
add esp 0x14
pop ebx
retn 0x4
mov eax [ rw-data ]
movsx eax [ eax ]
mov [ esp + 0x4 ] eax
inc [ rw-data ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e160
pop edx
push eax
mov ebx [ esp + 0xc ]
imul ebx ebx 0xffffffff
push ebx
call sub_405f10
lea eax [ esp + 0xc ]
push eax
call sub_40e1a0
mov edx [ esp + 0xc ]
push edx
call sub_40e160
pop edx
push eax
push edx
call sub_40e300
mov edx [ esp + 0xc ]
push edx
call sub_40e300
lea eax [ esp + 0x10 ]
push eax
call sub_40e1a0
inc [ esp ]
jno r-xdata
sub_40426d
push ebx
push edi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e2a0
mov edx [ esp + 0x20 ]
lea ecx [ esp ]
call sub_405060
mov ebx [ rw-data ]
cmp ebx 0x1
je r-xdata
xor eax eax
push [ esp ]
call sub_402472
and eax eax
je r-xdata
push [ esp ]
push 0xffffffff
call sub_40af90
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
push [ esp + 0x2c ]
push [ esp + 0x2c ]
pop ebx
pop edi
cmp edi 0x0
jg r-xdata
push [ esp ]
call sub_40e230
add esp 0x14
pop edi
pop ebx
retn 0x10
and eax eax
je r-xdata
mov eax 0x1
jl r-xdata
push [ esp + 0x4 ]
call sub_40ac90
push [ esp + 0xc ]
push [ esp + 0xc ]
pop ebx
pop edi
cmp ebx [ esp + 0x28 ]
jne r-xdata
mov eax [ esp + 0x28 ]
push eax
push [ esp + 0x28 ]
push [ esp + 0xc ]
call sub_40b270
cdq
push edx
push eax
pop [ esp + 0xc ]
pop [ esp + 0xc ]
xor eax eax
jmp r-xdata
cmp ebx 0x0
ja r-xdata
xor eax eax
jmp r-xdata
cmp edi [ esp + 0x2c ]
je r-xdata
or eax eax
je r-xdata
or eax eax
je r-xdata
mov eax 0x1
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x10 ] 0x1
jmp r-xdata
sub_405000
mov ebp 0x0
pushfd
pop eax
mov ebp 0x0
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop eax
xor eax ecx
je r-xdata
mov eax ebp
retn
mov eax 0x1
cpuid
mov eax edx
and eax 0x800000
je r-xdata
or ebp 0x2
mov eax edx
and eax 0x2000000
je r-xdata
mov eax 0x80000001
cpuid
mov eax edx
and eax 0x80000000
je r-xdata
or ebp 0x8
mov eax edx
and eax 0x4000000
je r-xdata
or ebp 0x4
or ebp 0x10
sub_405120
or edx edx
jne r-xdata
or ecx ecx
jne r-xdata
mov edx rw-data
push ebx
mov ecx rw-data
pop ebx
xor eax eax
test eax eax
retn
or ax ax
jne r-xdata
mov ax [ edx ]
add edx 0x2
mov bx [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
pop ebx
mov eax 0x1
test eax eax
retn
sub_4051b0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_405260
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40536d
push edi
mov edi rw-data
push edi
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
retn
push esi
lea esi [ eax + 0x8 ]
push [ esi ]
call [ CloseHandle@IAT ]
push esi
push rw-data
call sub_40ddf2
mov eax [ rw-data ]
pop ecx
pop ecx
test eax eax
jne r-xdata
pop esi
sub_4053bb
push [ esp + 0x4 ]
call sub_4053de
test eax eax
je r-xdata
xor eax eax
push 0x0
push eax
call [ WaitForSingleObject@IAT ]
neg eax
sbb eax eax
neg eax
jmp r-xdata
retn 0x4
sub_4053de
push ebx
push esi
push edi
mov ebx rw-data
xor edi edi
push ebx
call [ EnterCriticalSection@IAT ]
mov esi [ rw-data ]
test esi esi
je r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esp + 0x10 ]
push edi
push [ esi + 0x8 ]
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xc ] eax
je r-xdata
jmp r-xdata
sub_40542a
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x0
push edi
call sub_4053de
push eax
call [ TerminateThread@IAT ]
mov ebx rw-data
push ebx
call [ EnterCriticalSection@IAT ]
mov esi [ rw-data ]
jmp r-xdata
test esi esi
jne r-xdata
cmp [ esi + 0xc ] edi
je r-xdata
jmp r-xdata
add esi 0x8
push [ esi ]
call [ CloseHandle@IAT ]
push esi
push rw-data
call sub_40ddf2
pop ecx
pop ecx
mov esi [ esi ]
push ebx
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
retn 0x4
sub_405486
push ecx
push ebp
push esi
lea eax [ esp + 0x8 ]
xor esi esi
push eax
push esi
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push 0x1000
push esi
call [ CreateThread@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop esi
pop ebp
pop ecx
retn 0x8
push edi
push rw-data
call [ EnterCriticalSection@IAT ]
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov esi eax
inc eax
push 0x10
push rw-data
mov [ rw-data ] eax
call sub_40de32
pop ecx
pop ecx
push rw-data
mov [ eax ] ebp
mov [ eax + 0x4 ] esi
call [ LeaveCriticalSection@IAT ]
pop edi
push ebx
mov edi [ edi ]
push [ ebx ]
call [ CloseHandle@IAT ]
mov edi [ edi ]
push ebx
push rw-data
call sub_40ddf2
pop ecx
pop ecx
jmp r-xdata
push esi
lea ebx [ edi + 0x8 ]
push [ ebx ]
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
pop ebx
test edi edi
jne r-xdata
sub_405547
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi 0x11c
push edi
push 0x0
push esi
call memset
add esp 0xc
mov [ esi ] edi
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
xor eax eax
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push esi
call eax
neg eax
sbb eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_40558e
sub esp 0x34c
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x114
push eax
mov esi 0xc8
xor ebx ebx
xor edi edi
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x34c
retn
mov eax [ esp + 0x20 ]
dec eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
dec eax
jne r-xdata
push 0xa
cmp eax 0xa
je r-xdata
lea eax [ esp + 0x124 ]
xor ebp ebp
push eax
call sub_405547
pop ecx
test eax eax
je r-xdata
push 0x1e
jmp r-xdata
cmp eax 0x5a
jne r-xdata
lea eax [ esp + 0x240 ]
mov [ esp + 0x240 ] 0x11c
push eax
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
mov ebx [ esp + 0x128 ]
mov edi [ esp + 0x12c ]
cmp [ esp + 0x23e ] 0x1
jmp r-xdata
pop esi
push 0x28
jmp r-xdata
sub ebx 0x3
je r-xdata
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
cmp [ esp + 0x35a ] 0x1
jne r-xdata
push 0x5
jmp r-xdata
dec ebx
je r-xdata
xor ebp ebp
inc ebp
push 0x14
jmp r-xdata
dec ebx
je r-xdata
sub edi 0x0
je r-xdata
dec ebx
je r-xdata
push 0x32
jmp r-xdata
dec edi
je r-xdata
sub edi 0x0
je r-xdata
sub ebx 0x4
jne r-xdata
push 0x3c
jmp r-xdata
dec edi
jne r-xdata
mov esi ebp
neg esi
sbb esi esi
and esi 0xfffffffb
add esi 0x4b
jmp r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
mov esi ebp
neg esi
sbb esi esi
and esi 0xfffffffb
add esi 0x41
jmp r-xdata
mov esi ebp
neg esi
sbb esi esi
and esi 0xfffffffb
add esi 0x55
jmp r-xdata
dec edi
je r-xdata
push 0x6e
jmp r-xdata
mov esi ebp
neg esi
sbb esi esi
and esi 0xfffffffb
add esi 0x5f
jmp r-xdata
dec edi
jne r-xdata
mov esi ebp
neg esi
sbb esi esi
and esi 0xfffffffb
add esi 0x69
jmp r-xdata
sub_405700
push ebp
push esi
mov esi [ esp + 0xc ]
push edi
test esi esi
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push esi
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebp eax
push ebp
call sub_409e60
mov edi eax
test edi edi
je r-xdata
mov esi r--data
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push 0x0
push 0x0
push ebp
push edi
push 0xffffffff
push esi
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
sub_405760
mov eax [ esp + 0x4 ]
push edi
xor edi edi
test eax eax
je r-xdata
mov eax edi
pop edi
retn 0x8
mov edx [ esp + 0xc ]
test edx edx
je r-xdata
push ebp
movzx ebp [ edx ]
test bp bp
je r-xdata
pop ebp
mov eax edi
pop edi
retn 0x8
movzx ecx [ eax ]
test cx cx
je r-xdata
push ebx
push esi
movzx ecx [ eax ]
test cx cx
jne r-xdata
lea ecx [ edx + 0x2 ]
mov ebx eax
movzx edx [ eax ]
test dx dx
je r-xdata
add eax 0x2
cmp cx bp
jne r-xdata
pop esi
pop ebx
pop ebp
mov eax edi
pop edi
retn 0x8
cmp [ ecx ] 0x0
jne r-xdata
jmp r-xdata
mov eax ebx
inc edi
jmp r-xdata
movzx esi [ ecx ]
test si si
je r-xdata
mov edx [ esp + 0x18 ]
cmp dx si
jne r-xdata
movzx edx [ eax + 0x2 ]
add eax 0x2
add ecx 0x2
test dx dx
jne r-xdata
sub_4057f0
push ecx
mov edx [ esp + 0xc ]
push ebp
xor ebp ebp
cmp edx 0x1
jl r-xdata
push [ esp + 0x18 ]
call sub_40e5e0
pop ebp
pop ecx
retn 0x10
push ebx
push esi
mov esi [ esp + 0x14 ]
push edi
test esi esi
jne r-xdata
mov ecx [ esp + 0x20 ]
test ecx ecx
jne r-xdata
mov esi r--data
movzx eax [ ecx ]
xor edi edi
mov [ esp + 0x10 ] eax
mov ebx esi
mov [ esp + 0x18 ] ebx
test ax ax
je r-xdata
mov ecx r--data
mov [ esp + 0x20 ] ecx
mov ecx [ esp + 0x10 ]
cmp [ ecx + 0x2 ] di
je r-xdata
inc edi
cmp edi edx
je r-xdata
test ax ax
jne r-xdata
mov ebx ecx
lea edx [ ebx + 0x2 ]
mov ebp esi
sub ebp ebx
sar ebp 0x1
jmp r-xdata
test ax ax
je r-xdata
add esi 0x2
jmp r-xdata
mov ax [ ebx ]
add ebx 0x2
test ax ax
jne r-xdata
sub ebx edx
sar ebx 0x1
push esi
call sub_40e4c0
mov esi [ esp + 0x24 ]
mov edi eax
test edi edi
je r-xdata
lea ebx [ esi + 0x2 ]
movzx eax [ esi ]
cmp ax cx
je r-xdata
inc edi
cmp edi [ esp + 0x1c ]
je r-xdata
cmp [ esi ] bp
je r-xdata
push esi
push ebp
call sub_40e540
mov esi eax
test edi edi
jne r-xdata
push esi
call sub_40e510
lea ecx [ ebp * 2 ]
push ecx
push ebx
push eax
call memmove
add esp 0xc
mov ebx [ esp + 0x18 ]
mov ebp esi
sub ebp ebx
sar ebp 0x1
jmp r-xdata
cmp [ esi ] bp
je r-xdata
mov ecx [ esp + 0x20 ]
add esi 0x2
jmp r-xdata
pop edi
xor eax eax
mov [ esi + ebp * 2 ] ax
pop esi
pop ebx
pop ebp
pop ecx
retn 0x10
push ebp
push ebx
push esi
call wcsncpy
add esp 0xc
mov ebx [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
lea esi [ esi + ebx * 2 ]
mov [ esp + 0x18 ] esi
jmp r-xdata
push ebx
push ecx
push esi
call wcsncmp
add esp 0xc
test eax eax
je r-xdata
sub_405920
push esi
mov esi [ esp + 0x8 ]
mov edx 0x1
mov eax esi
test esi esi
je r-xdata
xor eax eax
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
test ecx ecx
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub eax esi
sar eax 0x1
cmp eax 0x1
jge r-xdata
lea eax [ esi - 0x2 ]
lea eax [ eax + edx * 2 ]
push ecx
push eax
call wcsstr
add esp 0x8
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
sub eax esi
sar eax 0x1
inc eax
pop esi
retn 0x8
sub_405980
push esi
push edi
mov edi [ esp + 0xc ]
xor ecx ecx
xor esi esi
test edi edi
je r-xdata
pop edi
mov edx esi
mov eax ecx
pop esi
retn 0x4
movzx eax [ edi ]
cmp eax 0x20
je r-xdata
add edi 0x2
jmp r-xdata
cmp eax 0x9
jne r-xdata
movzx eax [ edi ]
push ebx
push ebp
cmp eax 0x2d
jne r-xdata
xor ebp ebp
cmp eax 0x2b
jne r-xdata
lea ebp [ eax - 0x2c ]
jmp r-xdata
movzx ebx [ edi ]
cmp ebx 0x24
jne r-xdata
add edi 0x2
cmp ebx 0x25
jne r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
cmp eax 0x30
jb r-xdata
cmp ebx 0x30
jb r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
cmp eax 0x30
jb r-xdata
cmp eax 0x41
jb r-xdata
cmp eax 0x39
jbe r-xdata
test ebp ebp
pop ebp
pop ebx
je r-xdata
cmp bx 0x39
ja r-xdata
cmp ax 0x31
ja r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x46
jbe r-xdata
cmp eax 0x30
jb r-xdata
neg ecx
adc esi 0x0
neg esi
mov eax ecx
mov edx esi
shld edx eax 0x2
shl eax 0x2
add ecx eax
movzx eax bx
movzx ebx [ edi + 0x2 ]
adc esi edx
cdq
shld esi ecx 0x1
add ecx ecx
add ecx eax
adc esi edx
sub ecx 0x30
sbb esi 0x0
add edi 0x2
cmp ebx 0x30
jae r-xdata
sub ecx 0x18
movzx eax ax
cdq
sbb esi 0x0
shld esi ecx 0x1
add ecx ecx
add ecx eax
movzx eax [ edi + 0x2 ]
adc esi edx
add edi 0x2
cmp eax 0x30
jae r-xdata
cmp eax 0x66
ja r-xdata
shld esi ecx 0x4
shl ecx 0x4
cmp eax 0x61
cdq
jb r-xdata
cmp eax 0x39
ja r-xdata
jmp r-xdata
add ecx eax
adc esi edx
sub ecx 0x37
sbb esi 0x0
jmp r-xdata
add ecx eax
adc esi edx
sub ecx 0x57
sbb esi 0x0
jmp r-xdata
sub ecx 0x3
cdq
sbb esi 0x0
shld esi ecx 0x4
shl ecx 0x4
add ecx eax
adc esi edx
jmp r-xdata
sub_405ac0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
push esi
call sub_405d60
xor ecx ecx
mov edi eax
mov eax [ esp + 0x18 ]
mov ebx edi
test eax eax
sets cl
dec ecx
and ecx eax
cmp edi ecx
jle r-xdata
push esi
call sub_40e4c0
push [ esp + 0x1c ]
mov [ esp + 0x18 ] eax
push ebx
call sub_40e540
mov ebp eax
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ebx ecx
test esi esi
je r-xdata
push eax
call sub_40e610
mov esi eax
pop edi
xor eax eax
pop esi
mov [ ebp ] ax
pop ebp
pop ebx
retn 0xc
sub edi ebx
push ebx
lea eax [ esi + edi * 2 ]
push eax
push ebp
call sub_40e640
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_405b40
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x20 ]
test edi edi
je r-xdata
xor ebx ebx
mov ebx edi
lea ecx [ ebx + 0x2 ]
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
push eax
call sub_40e610
mov edi eax
mov ax [ ebx ]
add ebx 0x2
test ax ax
jne r-xdata
sub ebx ecx
sar ebx 0x1
jmp r-xdata
mov [ esp + 0x18 ] ebp
test edi edi
je r-xdata
push eax
call sub_40e610
mov esi eax
push edi
call sub_40e4c0
mov esi [ esp + 0x24 ]
push esi
mov [ esp + 0x24 ] eax
call sub_40e4c0
push [ esp + 0x34 ]
mov [ esp + 0x28 ] eax
push ebx
call sub_40e540
mov ebp eax
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov eax ebp
sub eax [ esp + 0x18 ]
sar eax 0x1
sub ebx eax
push ebx
call sub_40e690
pop edi
xor eax eax
pop esi
mov [ ebp ] ax
pop ebp
pop ebx
add esp 0xc
retn 0x18
cmp [ edi ] 0x0
je r-xdata
test esi esi
je r-xdata
mov ecx ebp
sub ecx edi
lea ecx [ ecx ]
cmp [ esi ] 0x0
je r-xdata
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
mov [ ecx + edi - 0x2 ] ax
test ax ax
jne r-xdata
lea ebp [ ebp + ebx * 2 ]
mov ecx esi
mov [ esp + 0x14 ] edi
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x20 ] ecx
je r-xdata
mov eax [ esp + 0x2c ]
mov [ esp + 0x10 ] eax
lea eax [ ecx * 2 + 0x2 ]
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edx eax
mov [ esp + 0x10 ] eax
sub edx esi
jmp r-xdata
mov eax [ esp + 0x2c ]
cmp eax 0x1
jle r-xdata
mov [ esp + 0x34 ] wcsncmp
movzx ecx [ esi ]
lea esi [ esi + 0x2 ]
mov [ edx + esi - 0x2 ] cx
test cx cx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
dec eax
push eax
push edi
push ebp
call wcsncpy
mov eax [ esp + 0x38 ]
add esp 0xc
lea ebp [ ebp + eax * 2 ]
lea edi [ edi + eax * 2 ]
add ebp 0xfffffffe
add edi 0xfffffffe
mov esi eax
jmp r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
test [ esp + 0x28 ] 0x1
mov [ esp + 0x34 ] _wcsnicmp
jne r-xdata
push [ esp + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
mov ax [ edi ]
mov [ ebp ] ax
add ebp 0x2
mov eax [ esp + 0x20 ]
add edi 0x2
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x30 ]
lea edi [ edi + eax * 2 ]
cmp ecx 0xffffffff
je r-xdata
push eax
push esi
push edi
call [ esp + 0x40 ]
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec ecx
mov [ esp + 0x30 ] ecx
test ecx ecx
jg r-xdata
mov eax edi
mov esi ebx
sub eax [ esp + 0x14 ]
sar eax 0x1
sub esi eax
push esi
push edi
push ebp
call wcsncpy
add esp 0xc
lea ebp [ ebp + esi * 2 ]
sub_405d60
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn 0x4
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
retn 0x4
sub_405d90
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
test esi esi
jne r-xdata
mov edi esi
lea ecx [ edi + 0x2 ]
mov esi r--data
mov ax [ edi ]
add edi 0x2
test ax ax
jne r-xdata
sub edi ecx
sar edi 0x1
push esi
mov [ esp + 0x14 ] edi
call sub_40e4c0
push [ esp + 0x1c ]
mov ebp eax
push edi
call sub_40e540
mov ebx eax
test edi edi
je r-xdata
xor eax eax
mov [ ebx + edi * 2 ] ax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
test ebp ebp
je r-xdata
lea edx [ edi - 0x1 ]
lea edx [ esi + edx * 2 ]
lea eax [ edi - 0x1 ]
lea eax [ ebx + eax * 2 ]
cmp esi edx
ja r-xdata
push ebp
call sub_40e610
mov esi eax
mov ebp ebx
sub ebp esi
sub eax edx
mov [ esp + 0x18 ] eax
mov edi eax
lea ebx [ ebx ]
mov ax [ edx ]
movzx ecx [ esi ]
mov [ esi + ebp ] ax
add esi 0x2
mov [ edi + edx ] cx
sub edx 0x2
cmp esi edx
jbe r-xdata
mov edi [ esp + 0x10 ]
sub_405e30
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push esi
call sub_405d60
push esi
mov edi eax
call sub_40e4c0
push [ esp + 0x14 ]
mov ebx eax
push edi
call sub_40e540
mov edi eax
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
call sub_40e610
mov esi eax
xor eax eax
mov [ edi ] ax
pop edi
pop esi
pop ebx
retn 0x8
mov ecx edi
sub ecx esi
jmp r-xdata
movzx eax [ esi ]
lea esi [ esi + 0x2 ]
mov [ ecx + esi - 0x2 ] ax
test ax ax
jne r-xdata
push edi
call [ CharUpperW@IAT ]
pop edi
pop esi
pop ebx
retn 0x8
sub_405ea0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
call sub_405d60
xor ecx ecx
mov esi eax
mov eax [ esp + 0x18 ]
test eax eax
sets cl
dec ecx
and ecx eax
cmp esi ecx
jle r-xdata
push edi
call sub_40e4c0
push [ esp + 0x1c ]
mov ebp eax
push esi
call sub_40e540
mov ebx eax
test ebp ebp
je r-xdata
mov esi ecx
test edi edi
je r-xdata
push ebp
call sub_40e610
mov edi eax
pop edi
pop esi
xor eax eax
pop ebp
mov [ ebx ] ax
pop ebx
retn 0xc
test esi esi
jle r-xdata
push esi
push edi
push ebx
call sub_40e640
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_405f30
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
mov edi 0x20
test eax eax
je r-xdata
mov esi [ esp + 0x14 ]
push esi
call sub_405d60
mov ebp eax
test esi esi
je r-xdata
movzx edi [ eax ]
mov esi [ esp + 0x18 ]
xor ebx ebx
movzx ecx [ esi ]
mov ebx esi
cmp ecx edi
jne r-xdata
test ebx ebx
je r-xdata
push eax
call sub_40e610
mov ebx eax
sub esi ebx
sar esi 0x1
cmp esi ebp
jge r-xdata
lea ecx [ ecx ]
xor eax eax
mov [ edi ] ax
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
push ebp
lea eax [ ebx + esi * 2 ]
push eax
push edi
call sub_40e640
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
xor eax eax
mov eax esi
sub ebp eax
jmp r-xdata
lea edx [ ebp * 2 ]
lea ecx [ ebx - 0x2 ]
add ecx edx
movzx eax [ ecx ]
cmp eax edi
jne r-xdata
movzx eax [ esi + 0x2 ]
add esi 0x2
cmp eax edi
je r-xdata
push ebx
call sub_40e4c0
push [ esp + 0x1c ]
mov [ esp + 0x1c ] eax
push ebp
call sub_40e540
mov edi eax
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
sub edx ecx
lea eax [ ebx - 0x2 ]
add eax edx
sar eax 0x1
add eax esi
sub ebp eax
jmp r-xdata
movzx eax [ ecx - 0x2 ]
sub ecx 0x2
cmp eax edi
je r-xdata
sub_406020
mov eax [ esp + 0xc ]
push ebx
xor ebx ebx
test eax eax
push ebp
push esi
mov esi [ esp + 0x10 ]
sets bl
push edi
dec ebx
push esi
and ebx eax
call sub_40e4c0
push [ esp + 0x20 ]
mov ebp eax
push ebx
call sub_40e540
mov edi eax
test ebp ebp
je r-xdata
test esi esi
je r-xdata
push ebp
call sub_40e610
mov esi eax
push ebx
call sub_40e690
xor eax eax
mov [ edi ] ax
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
mov ecx [ esp + 0x18 ]
cmp ecx 0x1
jle r-xdata
movzx ecx [ esi ]
test cx cx
je r-xdata
cmp [ esi ] 0x0
je r-xdata
sub esi edi
lea esp [ esp ]
dec ecx
add esi 0x2
cmp ecx 0x1
jg r-xdata
mov [ edi ] cx
dec ebx
movzx eax [ esi + edi + 0x2 ]
add edi 0x2
mov ecx eax
test ax ax
jne r-xdata
test ebx ebx
je r-xdata
sub_4060b0
mov edx [ esp + 0x4 ]
test edx edx
je r-xdata
push [ esp + 0xc ]
call sub_40e5e0
retn 0xc
mov eax edx
push esi
lea esi [ eax + 0x2 ]
mov edi edi
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ esp + 0xc ]
sub eax esi
push [ esp + 0x10 ]
sar eax 0x1
sub eax ecx
inc eax
push eax
push ecx
push edx
call sub_406020
pop esi
retn 0xc
sub_406100
mov eax [ esp + 0x8 ]
push edi
mov edi [ esp + 0x8 ]
mov ecx edi
add ecx 0x80000000
adc eax 0x0
test eax eax
ja r-xdata
push esi
push [ esp + 0x14 ]
push 0x40
call sub_40e540
push [ esp + 0x10 ]
mov esi eax
push edi
push esi
call sub_4119ec
lea ecx [ esi + 0x2 ]
lea esp [ esp ]
jb r-xdata
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
sub esi ecx
mov eax 0x40
sar esi 0x1
sub eax esi
push eax
call sub_40e690
pop esi
pop edi
retn 0xc
push [ esp + 0x10 ]
push edi
call sub_406180
add esp 0x8
pop edi
retn 0xc
cmp ecx 0xffffffff
ja r-xdata
sub_406180
sub esp 0x10
push ebp
push esi
push [ esp + 0x20 ]
push 0x20
call sub_40e540
mov ecx [ esp + 0x1c ]
mov esi eax
mov ebp esi
test ecx ecx
jne r-xdata
jns r-xdata
mov eax 0x30
mov [ esi ] ax
add esi 0x2
jmp r-xdata
push edi
xor edi edi
test ecx ecx
je r-xdata
mov eax 0x2d
mov [ esi ] ax
add esi 0x2
cmp ecx 0x80000000
jne r-xdata
mov ecx esi
mov eax 0x20
sub ecx ebp
sar ecx 0x1
sub eax ecx
push eax
call sub_40e690
xor eax eax
mov [ esi ] ax
pop esi
pop ebp
add esp 0x10
retn
pop edi
push ebx
nop
neg ecx
mov ecx r--data
mov edx esi
sub edx ecx
lea ebx [ ebx ]
mov eax 0x66666667
mov ebx ecx
imul ecx
inc edi
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add ecx edx
mov al cl
mov [ esp + 0x24 ] ecx
shl al 0x2
add cl al
add cl cl
sub bl cl
mov ecx [ esp + 0x24 ]
add bl 0x30
mov [ esp + edi + 0x10 ] bl
test ecx ecx
jne r-xdata
pop ebx
test edi edi
jle r-xdata
movzx eax [ ecx ]
lea ecx [ ecx + 0x2 ]
mov [ edx + ecx - 0x2 ] ax
test ax ax
jne r-xdata
add esi 0x14
jmp r-xdata
jmp r-xdata
movsx ax [ esp + edi + 0xc ]
dec edi
mov [ esi ] ax
add esi 0x2
test edi edi
jg r-xdata
sub_406260
mov eax [ esp + 0x4 ]
push ebx
push [ esp + 0xc ]
xor ebx ebx
test eax eax
sets bl
dec ebx
and ebx eax
push ebx
call sub_40e540
mov edx eax
test ebx ebx
je r-xdata
xor eax eax
mov [ edx ] ax
pop ebx
retn 0x8
push edi
mov ecx ebx
mov eax 0x200020
shr ecx 0x1
mov edi edx
[ edi ]
adc ecx ecx
[ edi ]
xor eax eax
pop edi
mov [ edx + ebx * 2 ] ax
pop ebx
retn 0x8
sub_4062b0
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
movzx eax [ ebp ]
add ebp 0x2
mov [ esp + 0x2c ] ebp
test ax ax
je r-xdata
mov esi [ esp + 0x28 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov edi [ CharLowerW@IAT ]
push eax
call edi
movzx ebx ax
lea ecx [ ebp + 0x2 ]
mov [ esp + 0x1c ] ebx
mov ax [ ebp ]
add ebp 0x2
test ax ax
jne r-xdata
mov esi [ esp + 0x28 ]
sub ebp ecx
sar ebp 0x1
mov [ esp + 0x18 ] ebp
lea ebx [ ebx ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
push eax
call edi
cmp ax bx
jne r-xdata
movzx eax [ esi ]
add esi 0x2
test ax ax
je r-xdata
mov edx [ esp + 0x2c ]
mov ebx ebp
mov ecx edx
test ebp ebp
je r-xdata
sub esi 0x2
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax esi
sub eax edx
mov [ esp + 0x14 ] eax
jmp r-xdata
movzx ebp [ eax + ecx ]
movzx eax [ ecx ]
add ecx 0x2
push eax
mov [ esp + 0x14 ] ecx
call edi
push ebp
movzx edi ax
call [ CharLowerW@IAT ]
movzx eax ax
sub eax edi
jne r-xdata
mov edi [ CharLowerW@IAT ]
mov ebp [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
jmp r-xdata
test bp bp
je r-xdata
dec ebx
je r-xdata
mov edi [ CharLowerW@IAT ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
jmp r-xdata
sub_4063a0
push esi
mov esi [ esp + 0x10 ]
test esi esi
jne r-xdata
mov ecx [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x10 ]
sub ecx ebx
push ebp
push edi
mov [ esp + 0x14 ] ecx
mov edi edi
xor eax eax
pop esi
retn
pop edi
pop ebp
pop ebx
pop esi
retn
test bp bp
je r-xdata
mov ecx [ esp + 0x14 ]
dec esi
jne r-xdata
movzx eax [ ebx ]
lea ebx [ ebx + 0x2 ]
movzx ebp [ ecx + ebx - 0x2 ]
push eax
call [ CharLowerW@IAT ]
push ebp
movzx edi ax
call [ CharLowerW@IAT ]
movzx eax ax
sub eax edi
jne r-xdata
sub_406400
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x10
mov eax [ edi ]
test eax eax
je r-xdata
push ebx
mov ebx [ esp + 0x14 ]
push esi
cmp ebx 0xffffffff
jne r-xdata
push ebx
push edi
call sub_40a852
mov esi [ esp + 0x1c ]
push esi
push edi
mov [ esp + 0x18 ] eax
call sub_40a852
sub esi ebx
mov ecx eax
inc esi
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x10 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x18 ] ecx
mov ebx [ ecx ]
push ebp
mov ebp [ eax + 0x4 ]
mov eax [ edi + 0x2c ]
dec eax
cmp eax 0x18
ja r-xdata
sub [ esp + 0x10 ] 0x8
sub ecx 0x8
mov eax [ esp + 0x14 ]
mov [ eax + 0x4 ] ebp
mov eax [ esp + 0x1c ]
mov [ eax ] ebx
mov eax [ esp + 0x14 ]
test ebp ebp
jne r-xdata
movzx eax [ eax + lookup_table_406698 ]
jmp [ eax * 4 + jump_table_40666c ]
mov [ ebp ] eax
mov [ edi ] eax
jmp r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x1c ]
push 0x8
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x1c ]
push 0x8
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x1c ]
push 0x8
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x1c ]
push 0x8
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
mov eax [ esp + 0x18 ]
push 0x8
push esi
test al 0x1
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x1c ]
push 0x8
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x1c ]
push 0x8
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x1c ]
push 0x8
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x1c ]
push 0x8
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x1c ]
push 0x8
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
mov [ ebx + 0x4 ] eax
mov [ edi + 0x30 ] 0x1
pop esi
pop ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x30 ] 0x1
pop edi
retn 0x10
mov eax [ esp + 0x1c ]
pop ebp
test ebx ebx
jne r-xdata
call sub_407ad0
jmp r-xdata
call sub_406c10
jmp r-xdata
call sub_407c20
jmp r-xdata
call sub_406d60
jmp r-xdata
call sub_408840
jmp r-xdata
call sub_407980
jmp r-xdata
call sub_408180
jmp r-xdata
call sub_4072c0
jmp r-xdata
test al 0x2
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test al 0x2
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
call sub_408030
jmp r-xdata
call sub_407170
jmp r-xdata
call sub_407d70
jmp r-xdata
call sub_406eb0
jmp r-xdata
call sub_407ec0
jmp r-xdata
call sub_407000
jmp r-xdata
call sub_4082d0
jmp r-xdata
call sub_407410
jmp r-xdata
call sub_4086f0
call sub_407830
jmp r-xdata
add esp 0x10
call sub_408430
jmp r-xdata
call sub_408590
jmp r-xdata
call sub_407570
jmp r-xdata
call sub_4076d0
jmp r-xdata
sub_4066c0
push ecx
push esi
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ecx
retn 0x8
mov edx [ esi ]
test edx edx
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x10 ]
push ebx
mov [ esp + 0x8 ] eax
mov [ esp + 0x10 ] edx
mov ebx [ edx + 0x4 ]
push edi
mov edi [ eax ]
mov eax [ esi + 0x2c ]
dec eax
cmp eax 0x18
ja r-xdata
mov eax [ esp + 0x14 ]
mov [ eax + 0x4 ] ebx
mov eax [ esp + 0xc ]
mov [ eax ] edi
mov eax [ esp + 0x14 ]
test ebx ebx
jne r-xdata
movzx eax [ eax + lookup_table_406914 ]
jmp [ eax * 4 + jump_table_4068e8 ]
mov [ ebx ] eax
mov [ esi ] eax
jmp r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0xc ]
push 0x8
push ecx
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0xc ]
push 0x8
push ecx
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0xc ]
push 0x8
push ecx
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0xc ]
push 0x8
push ecx
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
mov eax [ esp + 0x18 ]
push 0x8
push ecx
test al 0x1
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0xc ]
push 0x8
push ecx
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0xc ]
push 0x8
push ecx
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0xc ]
push 0x8
push ecx
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0xc ]
push 0x8
push ecx
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0xc ]
push 0x8
push ecx
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
mov [ edi + 0x4 ] eax
pop edi
mov [ esi + 0x30 ] 0x1
pop ebx
pop edi
pop ebx
mov [ esi + 0x4 ] eax
mov [ esi + 0x30 ] 0x1
pop esi
pop ecx
retn 0x8
mov eax [ esp + 0xc ]
test edi edi
jne r-xdata
call sub_407ad0
jmp r-xdata
call sub_406c10
jmp r-xdata
call sub_407c20
jmp r-xdata
call sub_406d60
jmp r-xdata
call sub_408840
jmp r-xdata
call sub_407980
jmp r-xdata
call sub_408180
jmp r-xdata
call sub_4072c0
jmp r-xdata
test al 0x2
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test al 0x2
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
call sub_408030
jmp r-xdata
call sub_407170
jmp r-xdata
call sub_407d70
jmp r-xdata
call sub_406eb0
jmp r-xdata
call sub_407ec0
jmp r-xdata
call sub_407000
jmp r-xdata
call sub_4082d0
jmp r-xdata
call sub_407410
jmp r-xdata
call sub_4086f0
call sub_407830
jmp r-xdata
add esp 0x10
call sub_408430
jmp r-xdata
call sub_408590
jmp r-xdata
call sub_407570
jmp r-xdata
call sub_4076d0
jmp r-xdata
sub_406930
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x18
mov eax [ edi ]
test eax eax
je r-xdata
push ebx
mov ebx [ esp + 0x1c ]
push esi
cmp ebx 0xffffffff
jne r-xdata
push ebx
push edi
call sub_40a852
mov esi [ esp + 0x24 ]
push esi
push edi
mov [ esp + 0x18 ] eax
call sub_40a852
sub esi ebx
mov ecx eax
inc esi
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x10 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x20 ] ecx
mov ebx [ ecx ]
mov ecx [ esp + 0x18 ]
push ebp
mov ebp [ eax + 0x4 ]
add ecx 0x8
mov eax [ esp + 0x20 ]
cmp eax 0xffffffff
jne r-xdata
sub [ esp + 0x10 ] 0x8
sub ecx 0x8
dec eax
cmp eax 0x18
ja r-xdata
mov eax [ edi + 0x2c ]
mov eax [ esp + 0x14 ]
mov [ eax + 0x4 ] ebp
mov eax [ esp + 0x24 ]
mov [ eax ] ebx
mov eax [ esp + 0x14 ]
test ebp ebp
jne r-xdata
movzx eax [ eax + lookup_table_406bd0 ]
jmp [ eax * 4 + jump_table_406ba4 ]
mov [ ebp ] eax
mov [ edi ] eax
jmp r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x24 ]
push ecx
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x24 ]
push ecx
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x24 ]
push ecx
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x24 ]
push ecx
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
mov eax [ esp + 0x18 ]
push ecx
push esi
test al 0x1
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x24 ]
push ecx
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x24 ]
push ecx
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x24 ]
push ecx
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x24 ]
push ecx
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test [ esp + 0x18 ] 0x1
lea eax [ esp + 0x24 ]
push ecx
push esi
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
mov [ ebx + 0x4 ] eax
mov [ edi + 0x30 ] 0x1
pop esi
pop ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x30 ] 0x1
pop edi
retn 0x18
mov eax [ esp + 0x24 ]
pop ebp
test ebx ebx
jne r-xdata
call sub_407ad0
jmp r-xdata
call sub_406c10
jmp r-xdata
call sub_407c20
jmp r-xdata
call sub_406d60
jmp r-xdata
call sub_408840
jmp r-xdata
call sub_407980
jmp r-xdata
call sub_408180
jmp r-xdata
call sub_4072c0
jmp r-xdata
test al 0x2
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
test al 0x2
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x20 ]
push eax
je r-xdata
call sub_408030
jmp r-xdata
call sub_407170
jmp r-xdata
call sub_407d70
jmp r-xdata
call sub_406eb0
jmp r-xdata
call sub_407ec0
jmp r-xdata
call sub_407000
jmp r-xdata
call sub_4082d0
jmp r-xdata
call sub_407410
jmp r-xdata
call sub_4086f0
call sub_407830
jmp r-xdata
add esp 0x10
call sub_408430
jmp r-xdata
call sub_408590
jmp r-xdata
call sub_407570
jmp r-xdata
call sub_4076d0
jmp r-xdata
sub_406c10
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov al [ ebx + ecx ]
cmp al [ ecx + edx ]
jae r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_406c10
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_406c10
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
test esi esi
je r-xdata
mov cl [ edi + ebp ]
cmp cl [ edx + ebp ]
jb r-xdata
jmp r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
jmp r-xdata
sub_406d60
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov al [ ebx + ecx ]
cmp al [ ecx + edx ]
jge r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_406d60
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_406d60
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
test esi esi
je r-xdata
mov cl [ edi + ebp ]
cmp cl [ edx + ebp ]
jl r-xdata
jmp r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
jmp r-xdata
sub_406eb0
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov ax [ ebx + ecx ]
cmp ax [ ecx + edx ]
jae r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_406eb0
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_406eb0
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
nop
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
lea esp [ esp ]
test esi esi
je r-xdata
mov cx [ edi + ebp ]
cmp cx [ edx + ebp ]
jb r-xdata
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
sub_407000
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov eax [ esi ]
mov edi [ edx ]
fld [ ecx + eax ]
fcomp [ edi + ecx ]
fnstsw ax
test ah 0x41
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
mov ebx esi
cdq
sub eax edx
mov edx [ ebp + 0x8 ]
mov ecx eax
sar ecx 0x1
sub ebx ecx
mov eax [ edx ]
mov [ esp + 0x10 ] eax
test ecx ecx
je r-xdata
mov eax [ esi ]
mov [ edx ] eax
mov [ esi ] edi
mov eax [ edx ]
mov [ eax ] edi
mov ecx [ esi ]
mov eax [ edx ]
mov [ ecx + 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ eax + 0x4 ]
sub esi ebx
mov edi [ ebp + 0x14 ]
push edi
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push esi
push eax
push edx
call sub_407000
push edi
push ebx
push [ ebp + 0xc ]
lea eax [ esp + 0x2c ]
push eax
call sub_407000
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
add esp 0x20
mov edi [ eax ]
mov [ esp + 0x14 ] edi
test esi esi
je r-xdata
lea ebx [ ebx ]
test ebx ebx
je r-xdata
lea esp [ esp ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
dec ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ esp + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov edi edi
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
fld [ edx + eax ]
fcomp [ edi + eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
mov [ ecx ] edx
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov [ esp + 0x10 ] edx
dec ebx
jne r-xdata
nop
mov [ ecx ] edx
dec ebx
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
mov edx [ ecx ]
mov [ esp + 0x10 ] edx
mov [ ecx ] edi
dec esi
mov eax [ esp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov edi [ ecx ]
mov [ esp + 0x14 ] edi
jmp r-xdata
mov [ ecx ] edi
mov eax [ esp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x14 ]
mov edi [ ecx ]
mov [ esp + 0x14 ] edi
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
mov [ edx ] eax
mov eax [ ebp + 0xc ]
pop ebx
mov [ eax ] ecx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
sub_407170
sub esp 0xc
push esi
mov esi [ esp + 0x1c ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov edx [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov edi [ edx ]
mov eax [ esi ]
fld [ edi + ecx ]
fld [ eax + ecx ]
fcompp
fnstsw ax
test ah 0x41
jne r-xdata
pop edi
pop esi
add esp 0xc
retn
mov edi [ esp + 0x18 ]
mov eax esi
cdq
sub eax edx
push ebx
mov ecx eax
mov ebx esi
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
push ebp
test ecx ecx
je r-xdata
mov eax [ esi ]
mov [ edx ] eax
mov [ esi ] edi
mov eax [ edx ]
mov [ eax ] edi
mov ecx [ esi ]
mov eax [ edx ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_407170
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_407170
mov edi [ edi ]
lea ecx [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ eax ]
mov [ esp + 0x28 ] eax
dec ecx
jne r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
pop ebp
pop ebx
mov [ edx ] eax
mov eax [ esp + 0x1c ]
mov [ eax ] ecx
mov [ ecx ] edx
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x28 ]
mov edx [ ecx ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
test esi esi
je r-xdata
fld [ edi + ebp ]
fld [ edx + ebp ]
fcompp
fnstsw ax
test ah 0x41
jpe r-xdata
mov [ ecx ] edi
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
mov edi [ ecx ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
mov [ ecx ] edx
dec ebx
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ ecx ]
mov [ esp + 0x28 ] edx
mov [ ecx ] edi
dec esi
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ ecx ]
mov [ esp + 0x10 ] edi
jmp r-xdata
jmp r-xdata
test esi esi
jne r-xdata
sub_4072c0
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov eax [ ebx + ecx ]
cmp eax [ ecx + edx ]
jge r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_4072c0
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_4072c0
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
test esi esi
je r-xdata
mov ecx [ edi + ebp ]
cmp ecx [ edx + ebp ]
jl r-xdata
jmp r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
jmp r-xdata
sub_407410
sub esp 0xc
push ebx
push esi
push edi
mov edi [ esp + 0x24 ]
cmp edi 0x2
jne r-xdata
jle r-xdata
mov edx [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x28 ]
mov ecx [ edx ]
mov ebx [ esi ]
mov eax [ ecx + edi + 0x4 ]
cmp eax [ edi + ebx + 0x4 ]
jg r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov esi [ esp + 0x1c ]
mov eax edi
cdq
mov ebx edi
sub eax edx
mov ecx eax
mov eax [ esi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
jl r-xdata
mov eax [ eax + 0x4 ]
sub edi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push edi
push eax
push esi
call sub_407410
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_407410
mov esi [ esi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] esi
test edi edi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
mov eax ebx
mov [ edx ] eax
mov [ esi ] ecx
mov eax [ edx ]
pop edi
mov [ eax ] ecx
mov ecx [ esi ]
mov eax [ edx ]
pop esi
pop ebx
mov [ ecx + 0x4 ] eax
add esp 0xc
retn
mov eax [ ecx + edi ]
cmp eax [ edi + ebx ]
jae r-xdata
test ebx ebx
je r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
test edi edi
je r-xdata
mov ecx [ esi + ebp + 0x4 ]
cmp ecx [ edx + ebp + 0x4 ]
jl r-xdata
mov [ eax ] esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov esi [ eax ]
mov [ esp + 0x10 ] esi
dec edi
jne r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov esi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
jg r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
mov [ eax ] esi
dec edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov esi [ eax ]
mov [ esp + 0x10 ] esi
jmp r-xdata
mov ecx [ esi + ebp ]
cmp ecx [ edx + ebp ]
jb r-xdata
test edi edi
jne r-xdata
sub_407570
sub esp 0xc
push esi
push edi
mov edi [ esp + 0x20 ]
cmp edi 0x2
jne r-xdata
jle r-xdata
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x18 ]
mov eax [ edi ]
push [ eax + ecx ]
mov eax [ esi ]
push [ eax + ecx ]
call sub_408990
test eax eax
jns r-xdata
pop edi
pop esi
add esp 0xc
retn
mov esi [ esp + 0x18 ]
mov eax edi
cdq
sub eax edx
push ebx
mov ecx eax
mov ebx edi
mov eax [ esi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
push ebp
test ecx ecx
je r-xdata
mov ecx [ esi ]
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ecx
mov eax [ esi ]
mov [ eax ] ecx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub edi ebx
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push edi
push eax
push esi
call sub_407570
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_407570
mov ecx [ esi ]
add esp 0x20
mov eax [ esp + 0x28 ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
test edi edi
je r-xdata
lea ecx [ ecx ]
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ eax ]
mov [ esp + 0x28 ] eax
dec ecx
jne r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
pop ebp
pop ebx
mov [ ecx ] eax
mov eax [ esp + 0x1c ]
mov [ eax ] esi
mov [ esi ] eax
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x28 ]
mov eax [ esi ]
mov [ esp + 0x28 ] eax
dec ebx
jne r-xdata
test edi edi
je r-xdata
push [ eax + ebp ]
push [ ecx + ebp ]
call sub_408990
test eax eax
js r-xdata
mov [ esi ] ecx
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x10 ]
mov ecx [ esi ]
mov [ esp + 0x10 ] ecx
dec edi
jne r-xdata
mov eax [ esp + 0x28 ]
dec ebx
mov [ esi ] eax
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
mov eax [ esi ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x10 ]
dec edi
mov [ esi ] eax
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
mov ecx [ esi ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
jmp r-xdata
test edi edi
jne r-xdata
sub_4076d0
sub esp 0xc
push esi
push edi
mov edi [ esp + 0x20 ]
cmp edi 0x2
jne r-xdata
jle r-xdata
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x18 ]
mov eax [ edi ]
push [ eax + ecx ]
mov eax [ esi ]
push [ eax + ecx ]
call sub_4089f0
test eax eax
jns r-xdata
pop edi
pop esi
add esp 0xc
retn
mov esi [ esp + 0x18 ]
mov eax edi
cdq
sub eax edx
push ebx
mov ecx eax
mov ebx edi
mov eax [ esi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
push ebp
test ecx ecx
je r-xdata
mov ecx [ esi ]
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ecx
mov eax [ esi ]
mov [ eax ] ecx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub edi ebx
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push edi
push eax
push esi
call sub_4076d0
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_4076d0
mov ecx [ esi ]
add esp 0x20
mov eax [ esp + 0x28 ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
test edi edi
je r-xdata
lea ecx [ ecx ]
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ eax ]
mov [ esp + 0x28 ] eax
dec ecx
jne r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
pop ebp
pop ebx
mov [ ecx ] eax
mov eax [ esp + 0x1c ]
mov [ eax ] esi
mov [ esi ] eax
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x28 ]
mov eax [ esi ]
mov [ esp + 0x28 ] eax
dec ebx
jne r-xdata
test edi edi
je r-xdata
push [ eax + ebp ]
push [ ecx + ebp ]
call sub_4089f0
test eax eax
js r-xdata
mov [ esi ] ecx
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x10 ]
mov ecx [ esi ]
mov [ esp + 0x10 ] ecx
dec edi
jne r-xdata
mov eax [ esp + 0x28 ]
dec ebx
mov [ esi ] eax
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
mov eax [ esi ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x10 ]
dec edi
mov [ esi ] eax
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
mov ecx [ esi ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
jmp r-xdata
test edi edi
jne r-xdata
sub_407830
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov ax [ ebx + ecx ]
cmp ax [ ecx + edx ]
jae r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_407830
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_407830
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
nop
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
lea esp [ esp ]
test esi esi
je r-xdata
mov cx [ edi + ebp ]
cmp cx [ edx + ebp ]
jb r-xdata
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
sub_407980
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov ax [ ebx + ecx ]
cmp ax [ ecx + edx ]
jge r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_407980
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_407980
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
nop
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
lea esp [ esp ]
test esi esi
je r-xdata
mov cx [ edi + ebp ]
cmp cx [ edx + ebp ]
jl r-xdata
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
sub_407ad0
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov al [ ebx + ecx ]
cmp al [ ecx + edx ]
jbe r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_407ad0
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_407ad0
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
test esi esi
je r-xdata
mov cl [ edi + ebp ]
cmp cl [ edx + ebp ]
ja r-xdata
jmp r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
jmp r-xdata
sub_407c20
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov al [ ebx + ecx ]
cmp al [ ecx + edx ]
jle r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_407c20
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_407c20
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
test esi esi
je r-xdata
mov cl [ edi + ebp ]
cmp cl [ edx + ebp ]
jg r-xdata
jmp r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
jmp r-xdata
sub_407d70
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov ax [ ebx + ecx ]
cmp ax [ ecx + edx ]
jbe r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_407d70
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_407d70
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
nop
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
lea esp [ esp ]
test esi esi
je r-xdata
mov cx [ edi + ebp ]
cmp cx [ edx + ebp ]
ja r-xdata
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
sub_407ec0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov eax [ esi ]
mov edi [ edx ]
fld [ ecx + eax ]
fcomp [ edi + ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
mov ebx esi
cdq
sub eax edx
mov edx [ ebp + 0x8 ]
mov ecx eax
sar ecx 0x1
sub ebx ecx
mov eax [ edx ]
mov [ esp + 0x10 ] eax
test ecx ecx
je r-xdata
mov eax [ esi ]
mov [ edx ] eax
mov [ esi ] edi
mov eax [ edx ]
mov [ eax ] edi
mov ecx [ esi ]
mov eax [ edx ]
mov [ ecx + 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ eax + 0x4 ]
sub esi ebx
mov edi [ ebp + 0x14 ]
push edi
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push esi
push eax
push edx
call sub_407ec0
push edi
push ebx
push [ ebp + 0xc ]
lea eax [ esp + 0x2c ]
push eax
call sub_407ec0
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
add esp 0x20
mov edi [ eax ]
mov [ esp + 0x14 ] edi
test esi esi
je r-xdata
lea ebx [ ebx ]
test ebx ebx
je r-xdata
lea esp [ esp ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
dec ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ esp + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov edi edi
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
fld [ edx + eax ]
fcomp [ edi + eax ]
fnstsw ax
test ah 0x1
jne r-xdata
mov [ ecx ] edx
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov [ esp + 0x10 ] edx
dec ebx
jne r-xdata
nop
mov [ ecx ] edx
dec ebx
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
mov edx [ ecx ]
mov [ esp + 0x10 ] edx
mov [ ecx ] edi
dec esi
mov eax [ esp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov edi [ ecx ]
mov [ esp + 0x14 ] edi
jmp r-xdata
mov [ ecx ] edi
mov eax [ esp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x14 ]
mov edi [ ecx ]
mov [ esp + 0x14 ] edi
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
mov [ edx ] eax
mov eax [ ebp + 0xc ]
pop ebx
mov [ eax ] ecx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
sub_408030
sub esp 0xc
push esi
mov esi [ esp + 0x1c ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov edx [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov edi [ edx ]
mov eax [ esi ]
fld [ edi + ecx ]
fld [ eax + ecx ]
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
pop edi
pop esi
add esp 0xc
retn
mov edi [ esp + 0x18 ]
mov eax esi
cdq
sub eax edx
push ebx
mov ecx eax
mov ebx esi
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
push ebp
test ecx ecx
je r-xdata
mov eax [ esi ]
mov [ edx ] eax
mov [ esi ] edi
mov eax [ edx ]
mov [ eax ] edi
mov ecx [ esi ]
mov eax [ edx ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_408030
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_408030
mov edi [ edi ]
lea ecx [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ eax ]
mov [ esp + 0x28 ] eax
dec ecx
jne r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
pop ebp
pop ebx
mov [ edx ] eax
mov eax [ esp + 0x1c ]
mov [ eax ] ecx
mov [ ecx ] edx
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x28 ]
mov edx [ ecx ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
test esi esi
je r-xdata
fld [ edi + ebp ]
fld [ edx + ebp ]
fcompp
fnstsw ax
test ah 0x1
jne r-xdata
mov [ ecx ] edi
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
mov edi [ ecx ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
mov [ ecx ] edx
dec ebx
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ ecx ]
mov [ esp + 0x28 ] edx
mov [ ecx ] edi
dec esi
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ ecx ]
mov [ esp + 0x10 ] edi
jmp r-xdata
jmp r-xdata
test esi esi
jne r-xdata
sub_408180
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov eax [ ebx + ecx ]
cmp eax [ ecx + edx ]
jle r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_408180
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_408180
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
test esi esi
je r-xdata
mov ecx [ edi + ebp ]
cmp ecx [ edx + ebp ]
jg r-xdata
jmp r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
jmp r-xdata
sub_4082d0
sub esp 0xc
push ebx
push esi
push edi
mov edi [ esp + 0x24 ]
cmp edi 0x2
jne r-xdata
jle r-xdata
mov edx [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x28 ]
mov ecx [ edx ]
mov ebx [ esi ]
mov eax [ ecx + edi + 0x4 ]
cmp eax [ edi + ebx + 0x4 ]
jl r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov esi [ esp + 0x1c ]
mov eax edi
cdq
mov ebx edi
sub eax edx
mov ecx eax
mov eax [ esi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
jg r-xdata
mov eax [ eax + 0x4 ]
sub edi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push edi
push eax
push esi
call sub_4082d0
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_4082d0
mov esi [ esi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] esi
test edi edi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
mov eax ebx
mov [ edx ] eax
mov [ esi ] ecx
mov eax [ edx ]
pop edi
mov [ eax ] ecx
mov ecx [ esi ]
mov eax [ edx ]
pop esi
pop ebx
mov [ ecx + 0x4 ] eax
add esp 0xc
retn
mov eax [ ecx + edi ]
cmp eax [ edi + ebx ]
jbe r-xdata
test ebx ebx
je r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
test edi edi
je r-xdata
mov ecx [ esi + ebp + 0x4 ]
cmp ecx [ edx + ebp + 0x4 ]
jg r-xdata
mov [ eax ] esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov esi [ eax ]
mov [ esp + 0x10 ] esi
dec edi
jne r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov esi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
jl r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
mov [ eax ] esi
dec edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov esi [ eax ]
mov [ esp + 0x10 ] esi
jmp r-xdata
mov ecx [ esi + ebp ]
cmp ecx [ edx + ebp ]
ja r-xdata
test edi edi
jne r-xdata
sub_408430
sub esp 0xc
push esi
push edi
mov edi [ esp + 0x20 ]
cmp edi 0x2
jne r-xdata
jle r-xdata
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x18 ]
mov eax [ edi ]
push [ eax + ecx ]
mov eax [ esi ]
push [ eax + ecx ]
call sub_408990
test eax eax
jle r-xdata
pop edi
pop esi
add esp 0xc
retn
mov esi [ esp + 0x18 ]
mov eax edi
cdq
sub eax edx
push ebx
mov ecx eax
mov ebx edi
mov eax [ esi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
push ebp
test ecx ecx
je r-xdata
mov ecx [ esi ]
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ecx
mov eax [ esi ]
mov [ eax ] ecx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub edi ebx
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push edi
push eax
push esi
call sub_408430
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_408430
mov ecx [ esi ]
add esp 0x20
mov eax [ esp + 0x28 ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
test edi edi
je r-xdata
lea ecx [ ecx ]
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ eax ]
mov [ esp + 0x28 ] eax
dec ecx
jne r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
pop ebp
pop ebx
mov [ ecx ] eax
mov eax [ esp + 0x1c ]
mov [ eax ] esi
mov [ esi ] eax
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x28 ]
mov eax [ esi ]
mov [ esp + 0x28 ] eax
dec ebx
jne r-xdata
test edi edi
je r-xdata
push [ eax + ebp ]
push [ ecx + ebp ]
call sub_408990
test eax eax
jg r-xdata
mov [ esi ] ecx
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x10 ]
mov ecx [ esi ]
mov [ esp + 0x10 ] ecx
dec edi
jne r-xdata
mov eax [ esp + 0x28 ]
dec ebx
mov [ esi ] eax
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
mov eax [ esi ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x10 ]
dec edi
mov [ esi ] eax
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
mov ecx [ esi ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
jmp r-xdata
test edi edi
jne r-xdata
sub_408590
sub esp 0xc
push esi
push edi
mov edi [ esp + 0x20 ]
cmp edi 0x2
jne r-xdata
jle r-xdata
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x18 ]
mov eax [ edi ]
push [ eax + ecx ]
mov eax [ esi ]
push [ eax + ecx ]
call sub_4089f0
test eax eax
jle r-xdata
pop edi
pop esi
add esp 0xc
retn
mov esi [ esp + 0x18 ]
mov eax edi
cdq
sub eax edx
push ebx
mov ecx eax
mov ebx edi
mov eax [ esi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
push ebp
test ecx ecx
je r-xdata
mov ecx [ esi ]
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ecx
mov eax [ esi ]
mov [ eax ] ecx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub edi ebx
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push edi
push eax
push esi
call sub_408590
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_408590
mov ecx [ esi ]
add esp 0x20
mov eax [ esp + 0x28 ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
test edi edi
je r-xdata
lea ecx [ ecx ]
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ eax ]
mov [ esp + 0x28 ] eax
dec ecx
jne r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
pop ebp
pop ebx
mov [ ecx ] eax
mov eax [ esp + 0x1c ]
mov [ eax ] esi
mov [ esi ] eax
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x28 ]
mov eax [ esi ]
mov [ esp + 0x28 ] eax
dec ebx
jne r-xdata
test edi edi
je r-xdata
push [ eax + ebp ]
push [ ecx + ebp ]
call sub_4089f0
test eax eax
jg r-xdata
mov [ esi ] ecx
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x10 ]
mov ecx [ esi ]
mov [ esp + 0x10 ] ecx
dec edi
jne r-xdata
mov eax [ esp + 0x28 ]
dec ebx
mov [ esi ] eax
mov eax [ esp + 0x28 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
mov eax [ esi ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x10 ]
dec edi
mov [ esi ] eax
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
mov ecx [ esi ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
jmp r-xdata
test edi edi
jne r-xdata
sub_4086f0
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov ax [ ebx + ecx ]
cmp ax [ ecx + edx ]
jbe r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_4086f0
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_4086f0
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
nop
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
lea esp [ esp ]
test esi esi
je r-xdata
mov cx [ edi + ebp ]
cmp cx [ edx + ebp ]
ja r-xdata
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
sub_408840
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
cmp esi 0x2
jne r-xdata
jle r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esi ]
mov edx [ edi ]
mov ax [ ebx + ecx ]
cmp ax [ ecx + edx ]
jle r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x1c ]
mov eax esi
cdq
mov ebx esi
sub eax edx
mov ecx eax
mov eax [ edi ]
sar ecx 0x1
sub ebx ecx
mov [ esp + 0x24 ] eax
test ecx ecx
je r-xdata
mov eax edx
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ edi ]
mov eax [ esi ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xc
retn
mov eax [ eax + 0x4 ]
sub esi ebx
push ebp
mov ebp [ esp + 0x2c ]
push ebp
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push esi
push eax
push edi
call sub_408840
push ebp
push ebx
push [ esp + 0x3c ]
lea eax [ esp + 0x44 ]
push eax
call sub_408840
mov edi [ edi ]
lea eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
add esp 0x20
mov [ esp + 0x10 ] edi
test esi esi
je r-xdata
mov eax [ eax ]
mov [ esp + 0x24 ] eax
dec ecx
jne r-xdata
test ebx ebx
je r-xdata
nop
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
pop ebp
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
lea esp [ esp ]
test esi esi
je r-xdata
mov cx [ edi + ebp ]
cmp cx [ edx + ebp ]
jg r-xdata
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
dec ebx
jne r-xdata
mov [ eax ] edi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
dec esi
jne r-xdata
mov [ eax ] edx
dec ebx
mov ecx [ esp + 0x28 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x28 ] edx
mov [ eax ] edi
dec esi
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov edi [ eax ]
mov [ esp + 0x10 ] edi
jmp r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
sub_408990
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
retn 0x8
cmp [ eax ] 0x0
je r-xdata
mov eax 0x1
retn 0x8
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
or eax 0xffffffff
retn 0x8
sbb eax eax
or eax 0x1
retn 0x8
test dx dx
je r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
sub_4089f0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
retn 0x8
cmp [ eax ] 0x0
je r-xdata
mov eax 0x1
retn 0x8
push ecx
push eax
call _wcsicmp
add esp 0x8
retn 0x8
or eax 0xffffffff
retn 0x8
sub_408a2e
push ebp
mov ebp esp
push ecx
push ecx
push 0x8
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call memset
add esp 0xc
mov [ ebp - 0x8 ] 0x8
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0xb48
push eax
call [ InitCommonControlsEx@IAT ]
push 0x0
call [ CoInitialize@IAT ]
mov esp ebp
pop ebp
retn
sub_408a67
push esi
call sub_409111
push 0x1
mov esi eax
call sub_4091c8
push [ esp + 0x10 ]
push [ esp + 0xc ]
push [ esp + 0x14 ]
push esi
call [ MessageBoxW@IAT ]
push 0x0
mov esi eax
call sub_4091c8
mov eax esi
pop esi
retn 0xc
sub_408a98
cmp [ esp + 0x4 ] 0x0
push edi
je r-xdata
xor eax eax
pop edi
retn
push [ esp + 0x8 ]
call wcslen
pop ecx
lea eax [ eax * 2 + 0x2 ]
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ esp + 0x8 ]
push edi
call wcscpy
pop ecx
pop ecx
mov eax edi
pop edi
retn
sub_408af4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
dec eax
dec eax
je r-xdata
push [ rw-data ]
push [ rw-data ]
call [ UnregisterClassW@IAT ]
mov [ rw-data ] 0x1
sub eax 0xe
je r-xdata
call sub_408f32
push [ ebp + 0x8 ]
call [ DestroyWindow@IAT ]
jmp r-xdata
sub eax 0x101
je r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
movzx eax ax
sub eax 0x3e8
je r-xdata
pop ebp
jmp [ DefWindowProcW@IAT ]
push esi
push edi
push 0xffffffeb
push [ ebp + 0x8 ]
call [ GetWindowLongW@IAT ]
push [ rw-data ]
mov edi eax
call [ GetWindowTextLengthW@IAT ]
lea esi [ eax + 0x1 ]
lea ecx [ esi + esi ]
push ecx
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push esi
push eax
push [ rw-data ]
mov [ edi ] eax
call [ GetWindowTextW@IAT ]
call sub_408f32
push [ ebp + 0x8 ]
call [ DestroyWindow@IAT ]
pop edi
pop esi
jmp r-xdata
dec eax
jne r-xdata
sub_408ba9
sub esp 0x60
push ebx
push ebp
push esi
push edi
push [ esp + 0x74 ]
xor esi esi
mov [ esp + 0x14 ] esi
mov ebp esi
call sub_408a98
push [ esp + 0x7c ]
mov ebx eax
mov [ esp + 0x1c ] ebx
call sub_408a98
push [ esp + 0x84 ]
mov [ esp + 0x80 ] eax
call sub_408a98
add esp 0xc
mov edi eax
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
push 0x1
push eax
mov [ esp + 0x48 ] 0x30
mov [ esp + 0x4c ] 0x3
mov [ esp + 0x50 ] sub_408af4
mov [ esp + 0x54 ] esi
mov [ esp + 0x58 ] esi
mov [ esp + 0x5c ] eax
call [ LoadIconW@IAT ]
push 0x7f00
push esi
mov [ esp + 0x60 ] eax
call [ LoadCursorW@IAT ]
mov [ esp + 0x5c ] eax
mov eax [ rw-data ]
mov [ esp + 0x68 ] eax
lea eax [ esp + 0x40 ]
push eax
mov [ esp + 0x64 ] 0x10
mov [ esp + 0x68 ] esi
mov [ esp + 0x70 ] esi
call [ RegisterClassExW@IAT ]
mov [ rw-data ] esi
call sub_409111
push 0x1
mov [ rw-data ] eax
call sub_4091c8
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x11
call [ GetStockObject@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] esi
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push 0xffffffeb
push ebx
call [ SetWindowLongW@IAT ]
xor eax eax
push eax
push [ rw-data ]
push eax
push ebx
push 0x16
push 0x118
push 0xa
push 0xa
push 0x5000000b
push [ esp + 0x98 ]
push r--data
push eax
call esi
mov esi [ SendMessageW@IAT ]
push 0x1
push [ rw-data ]
mov [ rw-data ] eax
push 0x30
push eax
call esi
test [ esp + 0x80 ] 0x1
je r-xdata
push esi
push [ rw-data ]
call [ EnableWindow@IAT ]
mov [ rw-data ] 0x1
jmp r-xdata
push [ esp + 0x14 ]
call sub_408ada
push [ esp + 0x78 ]
call sub_408ada
push edi
call sub_408ada
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x60
retn 0x14
push [ esp + 0x84 ]
call sub_40e5e0
push 0x0
push [ rw-data ]
or ebp 0x50010080
push 0xa
push ebx
push 0x15
push 0x113
push 0x20
push 0xa
push ebp
mov ebp [ CreateWindowExW@IAT ]
push 0x0
push r--data
push 0x200
call ebp
push 0x1
push [ rw-data ]
mov [ rw-data ] eax
push 0x30
push eax
call esi
push [ rw-data ]
call [ SetFocus@IAT ]
test edi edi
je r-xdata
push 0x20
pop ebp
push esi
push [ rw-data ]
push esi
call sub_409111
mov esi [ GetSystemMetrics@IAT ]
push eax
push 0x82
push 0x12c
push 0x1
call esi
cdq
sub eax edx
sar eax 0x1
sub eax 0x41
push eax
push 0x0
call esi
mov esi [ CreateWindowExW@IAT ]
cdq
sub eax edx
sar eax 0x1
sub eax 0x96
push eax
push 0x10c80000
push ebx
push [ rw-data ]
push 0x0
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
push [ rw-data ]
mov eax 0x3e8
push eax
push ebx
push 0x19
push 0x50
push 0x43
push 0x6e
push 0x50010001
push r--data
push r--data
push 0x0
call ebp
push 0x1
push [ rw-data ]
mov [ rw-data ] eax
push 0x30
push eax
call esi
push 0xd
pop eax
mov [ esp + 0x1a ] ax
mov eax 0x3e8
push 0x1b
mov [ esp + 0x20 ] ax
pop eax
mov [ esp + 0x20 ] ax
mov eax 0x3e9
mov [ esp + 0x22 ] ax
lea eax [ esp + 0x18 ]
push 0x2
push eax
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x26 ] 0x1
call [ CreateAcceleratorTableW@IAT ]
push ebx
mov esi eax
call [ SetForegroundWindow@IAT ]
push ebx
call [ BringWindowToTop@IAT ]
jmp r-xdata
push edi
push 0x0
push 0xc
push [ rw-data ]
call esi
push edi
call wcslen
pop ecx
push eax
push edi
call wcslen
pop ecx
push eax
push 0xb1
push [ rw-data ]
call esi
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x30 ]
push eax
call [ GetMessageW@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
lea eax [ esp + 0x24 ]
push eax
push esi
push ebx
call [ TranslateAcceleratorW@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
push esi
call [ DestroyAcceleratorTable@IAT ]
lea eax [ esp + 0x24 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ esp + 0x24 ]
push eax
call [ DispatchMessageW@IAT ]
push [ esp + 0x10 ]
call wcslen
pop ecx
push [ esp + 0x84 ]
push eax
call sub_40e540
push [ esp + 0x10 ]
push eax
call wcscpy
pop ecx
pop ecx
push [ esp + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_408f51
push ebp
mov ebp esp
dec [ ebp + 0xc ]
jne r-xdata
xor eax eax
pop ebp
retn 0x10
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push edi
push [ ebp + 0x14 ]
mov edi 0x467
push 0x1
push edi
push [ ebp + 0x8 ]
call [ SendMessageW@IAT ]
push 0xc8
call [ Sleep@IAT ]
push [ ebp + 0x14 ]
push 0x1
push edi
push [ ebp + 0x8 ]
call [ PostMessageW@IAT ]
pop edi
sub_408f95
sub esp 0x230
push ebx
push ebp
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
push 0x20
lea eax [ esp + 0x18 ]
push edi
push eax
call memset
add esp 0xc
push r--data
call [ LoadLibraryW@IAT ]
mov ebp eax
mov ebx 0x104
test ebp ebp
je r-xdata
push edi
mov [ rw-data ] 0x1
call [ CoInitialize@IAT ]
push [ esp + 0x248 ]
push ebx
call sub_40e540
xor ecx ecx
mov [ eax ] cx
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push ebp
call esi
push r--data
push ebp
mov [ esp + 0x18 ] eax
call esi
mov ecx [ esp + 0x248 ]
mov [ esp + 0x14 ] eax
test ecx ecx
jne r-xdata
push 0x103
push ecx
lea eax [ esp + 0x40 ]
push eax
call wcsncpy
xor eax eax
mov [ esp + 0x24a ] ax
lea eax [ esp + 0x44 ]
push eax
call wcslen
add esp 0x10
push 0x5c
pop ecx
cmp eax 0x3
jle r-xdata
mov ecx r--data
mov eax [ esp + 0x244 ]
mov [ esp + 0x24 ] eax
call sub_409111
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x38 ]
push 0x1
mov [ esp + 0x2c ] 0x50
mov [ esp + 0x30 ] sub_408f51
mov [ esp + 0x34 ] eax
call sub_4091c8
lea eax [ esp + 0x18 ]
push eax
call [ esp + 0x14 ]
mov esi eax
push edi
mov [ esp + 0x14 ] esi
call sub_4091c8
test esi esi
je r-xdata
cmp [ esp + eax * 2 + 0x36 ] cx
jne r-xdata
push ebp
call [ FreeLibrary@IAT ]
pop esi
test edi edi
jne r-xdata
push [ esp + 0x24c ]
push ebx
call sub_40e540
mov edi [ esp + 0x10 ]
mov esi eax
push esi
xor eax eax
push edi
mov [ esi ] ax
call [ esp + 0x1c ]
push edi
call [ CoTaskMemFree@IAT ]
push esi
call wcslen
pop ecx
mov edi eax
push 0x5c
pop eax
cmp [ esi + edi * 2 - 0x2 ] ax
je r-xdata
xor ecx ecx
mov [ esp + eax * 2 + 0x36 ] cx
sub ebx edi
push ebx
call sub_40e690
pop edi
pop ebp
pop ebx
add esp 0x230
retn 0xc
mov [ esi + edi * 2 ] ax
xor eax eax
mov [ esi + edi * 2 + 0x2 ] ax
inc edi
sub_409111
push ebp
mov ebp esp
push ecx
push esi
call [ GetForegroundWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4 ]
push eax
push esi
call [ GetWindowThreadProcessId@IAT ]
call [ GetCurrentProcessId@IAT ]
mov ecx [ ebp - 0x4 ]
sub ecx eax
neg ecx
sbb ecx ecx
not ecx
and esi ecx
sub_409147
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x0
push edi
call [ GetWindowThreadProcessId@IAT ]
mov ebx [ GetCurrentThreadId@IAT ]
mov esi eax
call ebx
cmp esi eax
jne r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
retn 0x8
push edi
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push 0x14
push rw-data
call sub_40de32
mov esi eax
pop ecx
pop ecx
mov [ esi + 0x4 ] edi
call ebx
push 0xffffffec
xor ebx ebx
mov [ esi ] eax
push edi
mov [ esi + 0x8 ] bx
call [ GetWindowLongW@IAT ]
test al 0x8
je r-xdata
call [ GetForegroundWindow@IAT ]
cmp edi eax
je r-xdata
mov [ esi + 0x8 ] 0x1
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push ebx
push edi
mov [ esi + 0x9 ] 0x1
call [ EnableWindow@IAT ]
sub_4091c8
cmp [ esp + 0x4 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push [ esp + 0x10 ]
push sub_409147
call [ EnumWindows@IAT ]
mov esi [ rw-data ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
xor edi edi
push ebp
xor edi edi
mov esi ebx
test ebx ebx
jne r-xdata
cmp [ esi + 0x11 ] 0x0
je r-xdata
mov esi ebx
test ebx ebx
jne r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ebx [ esi ]
lea ebp [ esi + 0x8 ]
call [ GetCurrentThreadId@IAT ]
cmp [ ebp ] eax
jne r-xdata
pop ebp
cmp [ esi + 0x10 ] 0x0
je r-xdata
push 0x1
push [ esi + 0xc ]
call [ EnableWindow@IAT ]
mov ebx [ esi ]
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x8 ] eax
jne r-xdata
jmp r-xdata
push 0x3
push edi
push edi
push edi
push edi
push 0xfffffffe
push [ esi + 0xc ]
call [ SetWindowPos@IAT ]
push ebp
push rw-data
call sub_40ddf2
pop ecx
pop ecx
push 0x3
push edi
push edi
push edi
push edi
push 0xffffffff
push [ esi + 0xc ]
call [ SetWindowPos@IAT ]
sub_4092a9
push 0x0
push 0x0
push 0x10
call sub_40d613
push sub_40927c
push 0x4
push 0x4
mov [ rw-data ] eax
call sub_40d7ec
push rw-data
mov [ rw-data ] eax
call [ InitializeCriticalSection@IAT ]
retn
sub_4092d8
push ebx
push esi
push edi
push [ esp + 0x10 ]
mov ebx 0x104
push ebx
call sub_40e540
push ebx
mov edi eax
push edi
push [ rw-data ]
call [ GetModuleFileNameW@IAT ]
push r--data
push edi
mov esi eax
call wcscmp
pop ecx
pop ecx
test eax eax
jne r-xdata
sub ebx esi
push ebx
call sub_40e690
xor eax eax
mov [ edi + esi * 2 ] ax
pop edi
pop esi
pop ebx
retn 0x4
lea ecx [ esi * 2 - 0x8 ]
push ecx
lea eax [ edi + 0x8 ]
push eax
push edi
call memmove
add esp 0xc
sub esi 0x4
sub_409339
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push esi
xor esi esi
movzx eax [ edx ]
push edi
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
mov eax esi
pop edi
pop esi
retn
mov edi [ esp + 0x14 ]
cmp ax 0x22
jne r-xdata
mov [ ecx ] ax
add ecx 0x2
inc esi
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
movzx eax [ edx ]
test ax ax
jne r-xdata
sub_40937a
push ecx
push ecx
push ebx
push ebp
push esi
push edi
push [ rw-data ]
call sub_40d5a8
mov ebp eax
or ebx 0xffffffff
xor eax eax
mov esi eax
call [ GetCommandLineW@IAT ]
mov edi [ esp + 0x1c ]
movzx edx [ eax ]
test dx dx
je r-xdata
test edi edi
jne r-xdata
mov ecx [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x20
mov [ esp + 0x14 ] 0x22
xor ecx ecx
mov [ edi ] ecx
mov eax ebx
jmp r-xdata
movzx edx [ eax ]
mov [ esp + 0x1c ] 0x1
cmp dx [ esp + 0x14 ]
jne r-xdata
push 0x20
pop edx
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
test dx dx
je r-xdata
add eax 0x2
mov esi eax
movzx ecx [ eax ]
test cx cx
je r-xdata
add eax 0x2
cmp [ eax ] dx
je r-xdata
xor edx edx
push 0x20
mov esi eax
pop ecx
mov ecx eax
push 0x22
pop edx
test edx edx
je r-xdata
test edi edi
jne r-xdata
xor ecx ecx
cmp [ eax ] cx
je r-xdata
add eax 0x2
push 0x22
pop edx
cmp [ eax ] dx
jne r-xdata
cmp [ ebp ] ebx
jne r-xdata
add eax 0x2
movzx ecx [ eax ]
test cx cx
jne r-xdata
xor edx edx
mov esi edx
movzx edx [ eax ]
test dx dx
jne r-xdata
inc ebx
test esi esi
je r-xdata
mov ecx eax
add eax 0x2
jmp r-xdata
movzx edx [ eax ]
test dx dx
jne r-xdata
add eax 0x2
movzx ecx [ eax ]
test cx cx
je r-xdata
cmp cx dx
je r-xdata
cmp dx [ esp + 0x10 ]
jne r-xdata
sub ecx esi
mov eax esi
sar ecx 0x1
mov [ edi ] ecx
inc [ ebp ]
jmp r-xdata
mov edx [ esp + 0x1c ]
jmp r-xdata
cmp dx cx
je r-xdata
jmp r-xdata
cmp cx dx
je r-xdata
push 0x20
pop ecx
add eax 0x2
movzx ecx [ eax ]
test cx cx
jne r-xdata
sub_4094b2
push ebp
mov ebp esp
push ecx
push [ rw-data ]
and [ ebp - 0x4 ] 0x0
call sub_40d5a8
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_40937a
pop ecx
push [ ebp + 0xc ]
mov esi eax
push [ ebp - 0x4 ]
call sub_40e540
push [ ebp - 0x4 ]
push eax
push esi
call sub_409339
add esp 0xc
push eax
call sub_40e690
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ eax ] ecx
sub_409500
push esi
push edi
mov edi rw-data
xor esi esi
push edi
call [ EnterCriticalSection@IAT ]
push [ esp + 0xc ]
push [ rw-data ]
call sub_40de61
pop ecx
pop ecx
test eax eax
je r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
retn 0x4
mov esi [ esp + 0xc ]
sub_409537
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
push edi
push [ esi ]
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
cmp [ esi + 0xc ] edi
je r-xdata
xor eax eax
jmp r-xdata
push edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
push eax
push edi
push edi
push edi
push [ esi + 0xc ]
call [ PeekNamedPipe@IAT ]
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_40958f
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ CloseHandle@IAT ]
push [ esi ]
call edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
push [ esi + 0x8 ]
call edi
cmp [ esi + 0x10 ] 0x0
je r-xdata
push [ esi + 0xc ]
call edi
mov edi rw-data
push edi
call [ EnterCriticalSection@IAT ]
push esi
push rw-data
call sub_40ddf2
pop ecx
pop ecx
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn 0x4
push [ esi + 0x10 ]
call edi
sub_4095e5
push ebp
mov ebp esp
push ecx
push edi
push 0x2
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
mov edi [ ebp + 0x8 ]
push eax
push [ edi ]
call [ GetCurrentProcess@IAT ]
push eax
call [ DuplicateHandle@IAT ]
test eax eax
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push [ edi ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
sub_40963d
sub esp 0xc0
push ebx
push ebp
push esi
push edi
push 0x20
xor eax eax
mov [ esp + 0x38 ] 0xc
pop ebp
push 0x44
pop esi
push esi
push eax
mov [ esp + 0x18 ] eax
mov edi eax
mov [ esp + 0x28 ] eax
xor ebx ebx
mov [ esp + 0x30 ] eax
inc ebx
mov [ esp + 0x1c ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x40 ] eax
lea eax [ esp + 0x58 ]
push eax
mov [ esp + 0x48 ] ebx
call memset
mov [ esp + 0x88 ] ebx
add esp 0xc
mov ebx [ esp + 0xe0 ]
xor ecx ecx
mov [ esp + 0x50 ] esi
test bl 0x2
je r-xdata
inc ecx
mov [ esp + 0x80 ] cx
xor eax eax
inc ecx
push 0x30
mov [ esp + 0x84 ] ax
pop ebp
jmp r-xdata
test bl 0x4
je r-xdata
mov eax [ esp + 0xe4 ]
test eax eax
je r-xdata
mov esi [ CreatePipe@IAT ]
test bl 0x40
je r-xdata
mov eax ebx
and eax 0x4
mov [ esp + 0x30 ] eax
je r-xdata
test bl 0x10
je r-xdata
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
test [ esp + 0x7c ] 0x100
je r-xdata
test bl 0x8
je r-xdata
xor eax eax
push eax
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call esi
test eax eax
je r-xdata
mov [ esp + 0x7c ] 0x101
mov [ esp + 0x88 ] eax
mov [ esp + 0x24 ] ecx
jmp r-xdata
mov ebx [ esp + 0xd4 ]
mov eax r--data
test ebx ebx
jne r-xdata
mov esi [ GetStdHandle@IAT ]
cmp [ esp + 0x88 ] edi
jne r-xdata
test bl 0x20
je r-xdata
xor eax eax
push eax
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x34 ]
push eax
call esi
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
or [ esp + 0x7c ] 0x100
mov [ esp + 0x88 ] eax
lea eax [ esp + 0x20 ]
push eax
call sub_4095e5
pop ecx
mov [ esp + 0x24 ] 0x1
and ebp 0xffffffef
cmp [ esp + 0xd8 ] edi
jne r-xdata
mov ebx eax
cmp [ esp + 0x8c ] edi
jne r-xdata
push 0xfffffff6
call esi
mov [ esp + 0x88 ] eax
xor eax eax
push eax
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x28 ]
push eax
call esi
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
or [ esp + 0x7c ] 0x100
mov [ esp + 0x8c ] eax
lea eax [ esp + 0x28 ]
push eax
call sub_4095e5
pop ecx
and ebp 0xffffffef
mov [ esp + 0x24 ] 0x1
push ebx
call wcslen
push [ esp + 0xdc ]
mov esi eax
call wcslen
add esi eax
pop ecx
pop ecx
lea eax [ esi * 2 + 0x8 ]
push eax
xor eax eax
push eax
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp [ ebx ] 0x22
mov esi eax
mov [ esp + 0x2c ] esi
je r-xdata
mov [ esp + 0xd8 ] eax
cmp [ esp + 0x90 ] edi
jne r-xdata
push 0xfffffff5
call esi
mov [ esp + 0x8c ] eax
mov eax [ esp + 0x18 ]
or [ esp + 0x7c ] 0x100
mov [ esp + 0x90 ] eax
lea eax [ esp + 0x1c ]
push eax
call sub_4095e5
pop ecx
and ebp 0xffffffef
mov [ esp + 0x24 ] 0x1
push ebx
push esi
call wcscpy
pop ecx
pop ecx
push r--data
push esi
call wcscpy
push ebx
push esi
call wcscat
push r--data
push esi
call wcscat
add esp 0x18
jmp r-xdata
push 0xfffffff4
call esi
mov [ esp + 0x90 ] eax
mov ecx [ esp + 0xdc ]
test ecx ecx
je r-xdata
push r--data
push esi
call wcscat
push [ esp + 0xe0 ]
push esi
call wcscat
add esp 0x10
xor edx edx
mov eax [ esp + 0xd8 ]
xor edx edx
cmp [ eax ] dx
je r-xdata
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x54 ]
push eax
push ecx
push edx
push ebp
push [ esp + 0x38 ]
push edx
push edx
push esi
push edx
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
movzx eax [ ecx ]
neg eax
sbb eax eax
and ecx eax
mov [ esp + 0xdc ] ecx
mov ebp [ CloseHandle@IAT ]
cmp [ esp + 0x14 ] edi
je r-xdata
mov esi [ CloseHandle@IAT ]
cmp [ esp + 0x14 ] edi
je r-xdata
cmp [ esp + 0x28 ] edi
je r-xdata
push [ esp + 0x14 ]
call ebp
cmp [ esp + 0x10 ] edi
je r-xdata
push [ esp + 0x14 ]
call esi
cmp [ esp + 0x20 ] edi
je r-xdata
push [ esp + 0x28 ]
call ebp
cmp [ esp + 0x18 ] edi
je r-xdata
push [ esp + 0x10 ]
call esi
cmp [ esp + 0x10 ] edi
je r-xdata
push [ esp + 0x20 ]
call ebp
push [ esp + 0x44 ]
call esi
mov ebx [ esp + 0xe0 ]
test bl 0x1
je r-xdata
push [ esp + 0x18 ]
call esi
cmp [ esp + 0x18 ] edi
je r-xdata
push [ esp + 0x10 ]
call ebp
cmp [ esp + 0x30 ] edi
je r-xdata
push 0xffffffff
push [ esp + 0x44 ]
call [ WaitForSingleObject@IAT ]
cmp [ esp + 0x1c ] edi
je r-xdata
push [ esp + 0x18 ]
call ebp
push [ esp + 0x40 ]
call esi
jmp r-xdata
mov esi rw-data
push esi
call [ EnterCriticalSection@IAT ]
push 0x20
push rw-data
call sub_40de32
pop ecx
pop ecx
push esi
mov edi eax
call [ LeaveCriticalSection@IAT ]
mov eax [ esp + 0x40 ]
mov [ edi ] eax
mov eax [ esp + 0x48 ]
mov [ edi + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov [ edi + 0xc ] eax
mov eax [ esp + 0x20 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x1c ]
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] ebx
jmp r-xdata
test [ esp + 0xe0 ] 0x78
jne r-xdata
push [ esp + 0x1c ]
call ebp
xor edi edi
inc edi
xor eax eax
cmp [ esp + 0xdc ] edi
jne r-xdata
push 0x3c
pop esi
xor eax eax
push esi
push eax
lea eax [ esp + 0x9c ]
push eax
call memset
movzx eax [ esp + 0x8c ]
add esp 0xc
mov [ esp + 0xb0 ] eax
xor eax eax
mov [ esp + 0xa0 ] eax
mov eax [ esp + 0xdc ]
mov [ esp + 0xac ] eax
mov eax [ esp + 0xd8 ]
mov [ esp + 0xa8 ] eax
lea eax [ esp + 0x94 ]
push eax
mov [ esp + 0x98 ] esi
mov [ esp + 0x9c ] 0x540
mov [ esp + 0xa8 ] ebx
call [ ShellExecuteExW@IAT ]
test eax eax
je r-xdata
push ebx
call wcslen
pop ecx
lea esi [ eax - 0x1 ]
lea esi [ ebx + esi * 2 ]
cmp esi ebx
jbe r-xdata
mov ebx [ esp + 0xe0 ]
test bl 0x1
je r-xdata
cmp [ esi ] 0x5c
je r-xdata
cmp [ esp + 0x30 ] edi
je r-xdata
push 0xffffffff
push [ esp + 0xd0 ]
call [ WaitForSingleObject@IAT ]
cmp esi ebx
jbe r-xdata
sub esi 0x2
cmp esi ebx
ja r-xdata
push [ esp + 0xcc ]
call ebp
mov esi rw-data
push esi
call [ EnterCriticalSection@IAT ]
push 0x20
push rw-data
call sub_40de32
pop ecx
pop ecx
push esi
mov edi eax
call [ LeaveCriticalSection@IAT ]
mov eax [ esp + 0xcc ]
or [ edi + 0x4 ] 0xffffffff
mov [ edi ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov [ edi + 0x8 ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] ebx
jmp r-xdata
push ebx
push [ esp + 0x30 ]
call wcscpy
mov eax [ esp + 0x34 ]
sub esi ebx
pop ecx
sar esi 0x1
pop ecx
xor ecx ecx
mov [ esp + 0xdc ] eax
mov [ eax + esi * 2 + 0x2 ] cx
push [ esp + 0x2c ]
push eax
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc0
retn 0x14
sub_409b6a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ GetExitCodeProcess@IAT ]
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_409bb0
push [ esp + 0x4 ]
call sub_409c30
test eax eax
je r-xdata
xor eax eax
retn 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
mov [ rw-data ] 0xffffffff
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
call eax
sub_409c30
cmp [ rw-data ] 0x0
mov ecx [ esp + 0x4 ]
je r-xdata
mov eax [ ecx ]
mov eax [ eax ]
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x0
cmp [ eax + 0x10 ] 0x2
jb r-xdata
mov eax [ ecx ]
mov eax [ eax + 0xc ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ ecx ]
cmp [ eax ] 0xc0000005
jne r-xdata
mov eax [ eax + 0x18 ]
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xb0 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xa4 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xa8 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xb4 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xa0 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0x9c ]
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xc4 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xc0 ]
mov [ rw-data ] eax
mov eax 0x1
retn 0x4
sub_409d10
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] 0x0
retn 0x4
cmp [ rw-data ] 0x0
je r-xdata
push eax
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn 0x4
mov [ esp + 0x4 ] eax
jmp [ SetUnhandledExceptionFilter@IAT ]
sub_409d60
mov ecx [ esp + 0x4 ]
xor eax eax
push esi
mov esi r--data
lea esp [ esp ]
mov esi [ eax * 8 + r--data ]
inc eax
cmp eax 0x14
jb r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push [ esp + 0xc ]
sub ecx edx
sar ecx 0x1
push ecx
call sub_40e540
sub eax esi
jmp r-xdata
cmp [ eax * 8 + r--data ] ecx
je r-xdata
jmp r-xdata
movzx ecx [ esi ]
lea esi [ esi + 0x2 ]
mov [ eax + esi - 0x2 ] cx
test cx cx
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x2 ]
lea ecx [ ecx ]
pop esi
retn 0x8
sub_409e80
push ebx
mov ebx [ esp + 0x8 ]
push esi
xor esi esi
push edi
test ebx ebx
je r-xdata
push [ esp + 0x14 ]
push esi
call sub_40e540
mov edi eax
test esi esi
je r-xdata
mov esi ebx
lea ecx [ esi + 0x2 ]
xor eax eax
mov [ edi + esi * 2 ] ax
pop edi
pop esi
pop ebx
retn 0x8
lea ecx [ esi + esi ]
push ecx
push ebx
push edi
call memcpy
add esp 0xc
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
sub esi ecx
sar esi 0x1
sub_409ed0
mov eax [ esp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
push ebx
xor ebx ebx
test eax eax
push esi
push [ esp + 0x14 ]
sets bl
dec ebx
and ebx eax
push ebx
call sub_40e540
mov ecx [ esp + 0xc ]
mov esi eax
test ecx ecx
je r-xdata
push [ esp + 0xc ]
push [ esp + 0x8 ]
call sub_409e80
retn 0xc
push ebx
call sub_40e690
xor eax eax
mov [ esi ] ax
pop esi
pop ebx
retn 0xc
test ebx ebx
je r-xdata
sub ecx esi
nop
mov [ esi ] ax
add esi 0x2
dec ebx
jne r-xdata
movzx eax [ ecx + esi ]
test ax ax
je r-xdata
sub_409f40
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
push edi
push [ esp + 0x10 ]
push esi
call memcpy
add esp 0xc
lea eax [ esi + edi ]
pop edi
pop esi
retn 0xc
sub_409f70
mov edx [ esp + 0xc ]
mov ecx edx
push ebx
xor ebx ebx
and ecx 0x1f
cmp [ esp + 0xc ] 0xffffffff
push esi
setl bl
dec ebx
and ebx [ esp + 0x10 ]
push edi
cmp ecx 0x19
jne r-xdata
mov esi [ esp + 0x10 ]
push ebp
cmp ecx 0x2
jne r-xdata
mov edi [ esp + 0x10 ]
cmp ebx 0xffffffff
jne r-xdata
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov ecx 0xfde9
mov [ esp + 0x1c ] ecx
cmp ebx 0xffffffff
je r-xdata
push [ esp + 0x1c ]
push ebx
call sub_40e540
mov esi eax
test edi edi
je r-xdata
mov ebx edi
lea ecx [ ebx + 0x2 ]
mov edi edi
xor ebp ebp
cmp [ esi ] 0x0
je r-xdata
mov ebp esi
lea edx [ ebp + 0x1 ]
test dl 0x40
jne r-xdata
push ebx
call sub_40e690
xor eax eax
pop edi
mov [ esi ] ax
pop esi
pop ebx
retn 0x10
test ebx ebx
je r-xdata
mov ax [ ebx ]
add ebx 0x2
test ax ax
jne r-xdata
sub ebx ecx
sar ebx 0x1
mov ebx [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push ebp
push esi
push 0x0
push ecx
call ebx
push [ esp + 0x20 ]
mov esi eax
push esi
call sub_40e540
lea ecx [ esi + 0x1 ]
mov edi eax
push ecx
push edi
push ebp
push [ esp + 0x20 ]
push 0x0
push [ esp + 0x30 ]
call ebx
pop ebp
xor ecx ecx
mov [ edi + eax * 2 ] cx
pop edi
pop esi
pop ebx
retn 0x10
cmp ebp ebx
jge r-xdata
mov al [ ebp ]
inc ebp
test al al
jne r-xdata
sub ebp edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push ebx
push esi
call sub_40e6c0
mov ebx eax
mov ecx 0xfde9
jmp r-xdata
sub edi esi
inc ebp
cmp [ esi + ebp ] 0x0
jne r-xdata
mov [ esi ] ax
add esi 0x2
dec ebx
jne r-xdata
movzx eax [ edi + esi ]
test ax ax
je r-xdata
sub_40a0a0
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push edi
push [ ebp ]
call sub_40a18f
mov ebx [ HeapAlloc@IAT ]
push 0x3c
push 0x0
push [ rw-data ]
call ebx
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
pop ebx
retn 0x14
push esi
mov esi [ esp + 0x24 ]
test esi esi
jg r-xdata
mov eax esi
shl eax 0x2
push eax
push 0x8
push [ rw-data ]
call ebx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
xor esi esi
inc esi
push edi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
xor edi edi
mov eax [ esp + 0x18 ]
xor ecx ecx
mov [ edi + 0x20 ] eax
mov eax [ esp + 0x1c ]
mov [ edi + 0x24 ] esi
mov esi [ esp + 0x14 ]
push eax
mov [ edi ] ecx
mov [ edi + 0x1c ] esi
mov [ edi + 0x10 ] eax
mov [ edi + 0x28 ] ecx
mov [ edi + 0x2c ] ecx
mov [ edi + 0x30 ] ebp
mov [ edi + 0x34 ] ecx
call sub_411a84
test eax eax
je r-xdata
push 0x4
push 0x10000
push 0x10
add esi 0x8
push esi
call sub_40dad9
push esi
push 0x8
mov [ edi + 0x38 ] eax
push [ rw-data ]
call ebx
mov [ edi + 0xc ] eax
mov [ eax + 0x4 ] r--data
mov [ ebp ] edi
jmp r-xdata
or [ edi + 0x2c ] 0x2
pop esi
sub_40a18f
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push ebx
push ebp
push edi
call sub_40a3da
push [ edi + 0x38 ]
call sub_40dc06
push [ edi + 0x4 ]
mov ebx [ HeapFree@IAT ]
xor ebp ebp
push ebp
push [ rw-data ]
call ebx
push [ edi + 0xc ]
push ebp
push [ rw-data ]
call ebx
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
mov eax [ edi + 0x30 ]
push edi
push ebp
mov [ eax ] ebp
push [ rw-data ]
call ebx
pop ebp
pop ebx
push esi
mov esi [ eax ]
push eax
push ebp
push [ rw-data ]
call ebx
mov eax esi
test esi esi
jne r-xdata
pop esi
sub_40a1f8
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
retn 0xc
push ebx
mov ebx [ esp + 0x14 ]
test ebx ebx
je r-xdata
pop ebx
mov eax [ esi ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ esp + 0x14 ] eax
cmp [ esp + 0x18 ] edi
je r-xdata
push ebp
push esi
call sub_40a45c
jmp r-xdata
push ebx
call sub_40a3da
push esi
call sub_40a528
mov ebp eax
test ebp ebp
jne r-xdata
test [ esi + 0x2c ] 0x4
push edi
push [ ebp - 0x4 ]
push ebx
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ esi ] eax
inc edi
mov eax [ esp + 0x18 ]
mov [ esi + 0x14 ] eax
pop ebp
call sub_40a303
call sub_40a46a
jmp r-xdata
push ebp
push [ esi + 0x10 ]
push [ esi + 0x1c ]
push eax
call sub_411ad4
sub_40a278
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
test ebx ebx
jne r-xdata
mov esi [ esp + 0x14 ]
push ebx
test [ esi + 0x2c ] 0x1
je r-xdata
mov ebx r--data
call sub_40a56f
xor edx edx
div [ esi + 0x24 ]
mov eax [ esi + 0x4 ]
mov ebp edx
pop ecx
mov edi [ eax + ebp * 4 ]
jmp r-xdata
call sub_40a58a
xor edx edx
div [ esi + 0x24 ]
mov eax [ esi + 0x4 ]
mov ebp edx
pop ecx
mov edi [ eax + ebp * 4 ]
jmp r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push ebx
push [ edi + 0x4 ]
call wcscmp
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push ebx
push [ edi + 0x4 ]
call _wcsicmp
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ebp
lea eax [ edi + 0x8 ]
mov [ esi ] edi
jmp r-xdata
mov [ esi + 0x8 ] edi
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov edi [ edi ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_40a303
cmp [ esp + 0xc ] 0x1
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
jne r-xdata
test ebx ebx
jne r-xdata
push ebx
push esi
call sub_40a278
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x2c ] 0x1
push ebx
je r-xdata
mov ebx r--data
cmp [ esi + 0x10 ] 0x0
je r-xdata
call sub_40a56f
call sub_40a58a
jmp r-xdata
test edi edi
je r-xdata
push [ esi + 0x10 ]
push edi
call sub_411daa
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
push ebx
call wcslen
pop ecx
lea eax [ eax * 2 + 0x2 ]
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push ebx
push eax
mov [ edi + 0x4 ] eax
call wcscpy
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
mov eax [ eax + ebp * 4 ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
mov [ eax + ebp * 4 ] edi
and [ esi + 0x8 ] 0x0
inc [ esi + 0x28 ]
mov [ esi ] edi
add edi 0x8
mov [ esi + 0x14 ] ebp
xor edx edx
div [ esi + 0x24 ]
pop ecx
push [ esi + 0x38 ]
mov ebp edx
call sub_40d83f
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
push 0x0
push edi
call memset
add esp 0xc
test [ esi + 0x2c ] 0x2
je r-xdata
push [ esi + 0x10 ]
push edi
call sub_411eaf
sub_40a3da
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov ebx [ esi + 0x10 ]
call sub_40a45c
jmp r-xdata
push esi
call sub_40a528
mov edi eax
test edi edi
jne r-xdata
sub edi 0x8
test [ esi + 0x2c ] 0x4
jne r-xdata
mov eax [ esi + 0x24 ]
shl eax 0x2
push eax
push edi
push [ esi + 0x4 ]
call memset
add esp 0xc
push esi
call sub_40a45c
and [ esi + 0x28 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
push [ edi + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ edi ]
push edi
push [ esi + 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
mov [ esi ] eax
call sub_40da0b
push ebx
lea eax [ edi + 0x8 ]
push eax
call sub_411daa
sub_40a46a
cmp [ esp + 0xc ] 0x1
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
jne r-xdata
mov eax ebx
cdq
idiv [ edi + 0x24 ]
push [ edi + 0x38 ]
mov ebp edx
call sub_40d83f
mov esi eax
test esi esi
je r-xdata
push ebx
push edi
call sub_40a5b6
mov esi eax
test esi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
mov [ esi + 0x4 ] ebx
mov eax [ edi + 0x4 ]
mov eax [ eax + ebp * 4 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ eax + ebp * 4 ] esi
and [ edi + 0x8 ] 0x0
inc [ edi + 0x28 ]
mov [ edi ] esi
add esi 0x8
mov [ edi + 0x14 ] ebp
cmp [ edi + 0x10 ] 0x0
je r-xdata
push [ edi + 0x1c ]
push 0x0
push esi
call memset
add esp 0xc
test [ edi + 0x2c ] 0x2
je r-xdata
test esi esi
je r-xdata
push [ edi + 0x10 ]
push esi
call sub_411daa
jmp r-xdata
push [ edi + 0x10 ]
push esi
call sub_411eaf
sub_40a4fb
mov ecx [ esp + 0x4 ]
push esi
mov eax [ ecx + 0x14 ]
cmp eax [ ecx + 0x24 ]
jge r-xdata
xor eax eax
pop esi
retn
mov esi [ ecx + 0x4 ]
lea edx [ esi + eax * 4 ]
mov [ ecx + 0x14 ] eax
mov eax [ esi + eax * 4 ]
pop esi
retn
inc eax
add edx 0x4
cmp eax [ ecx + 0x24 ]
jl r-xdata
cmp [ edx ] 0x0
jne r-xdata
sub_40a528
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ esi + 0x14 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x18 ] ecx
test eax eax
jne r-xdata
mov eax [ eax ]
mov [ esi ] eax
test eax eax
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov eax [ esi ]
add eax 0x8
lea eax [ ecx + 0x1 ]
mov [ esi + 0x14 ] eax
cmp [ esi ] 0x0
jne r-xdata
and [ esi + 0x14 ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_40a4fb
mov [ esi ] eax
pop ecx
pop esi
retn 0x4
sub_40a58a
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
movzx eax [ edi ]
push eax
jmp r-xdata
call tolower
pop ecx
test eax eax
jne r-xdata
imul esi esi 0x1003f
lea edi [ edi + 0x2 ]
movzx ecx [ edi ]
push ecx
add esi eax
pop edi
mov eax esi
pop esi
retn
sub_40a5b6
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov eax esi
cdq
idiv [ ecx + 0x24 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 ]
jmp r-xdata
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
retn 0x8
mov [ ecx ] eax
add eax 0x8
mov [ ecx + 0x14 ] edx
jmp r-xdata
mov [ ecx + 0x8 ] eax
mov eax [ eax ]
sub_40a608
push ebx
push esi
mov esi [ HeapAlloc@IAT ]
push edi
push 0x34
push 0x0
push [ rw-data ]
call esi
mov ebx [ esp + 0x14 ]
mov edi eax
test ebx ebx
jne r-xdata
xor edx edx
mov [ edi + 0x32 ] dl
push 0x8
push ebx
push [ rw-data ]
call esi
mov ebx eax
mov [ edi + 0x32 ] 0x1
xor edx edx
jmp r-xdata
mov esi [ esp + 0x10 ]
lea eax [ ebx + 0x4 ]
mov ecx [ esp + 0x18 ]
add esi 0x8
mov [ edi + 0xc ] eax
mov eax [ esp + 0x1c ]
push ecx
mov [ edi + 0x8 ] edx
mov [ edi ] edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x28 ] esi
mov [ edi + 0x18 ] ecx
mov [ edi + 0x10 ] edx
mov [ edi + 0x30 ] 0x1
mov [ edi + 0x2c ] eax
call sub_411a84
and [ edi + 0x20 ] 0x0
push 0x4
push 0x10000
push 0x10
mov [ edi + 0x31 ] al
mov [ edi + 0x24 ] ebx
push esi
mov [ ebx ] edi
call sub_40dad9
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn 0x10
sub_40a69a
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push ebx
push ebp
push edi
call sub_40a756
push [ edi + 0x1c ]
call sub_40dc06
mov eax [ edi + 0x24 ]
xor ebp ebp
mov ebx [ HeapFree@IAT ]
mov [ eax ] ebp
mov eax [ edi + 0x24 ]
mov [ eax + 0x4 ] ebp
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
cmp [ edi + 0x32 ] 0x0
je r-xdata
push esi
push edi
push ebp
push [ rw-data ]
call ebx
pop ebp
pop ebx
push [ edi + 0x24 ]
push ebp
push [ rw-data ]
call ebx
mov esi [ eax ]
push eax
push ebp
push [ rw-data ]
call ebx
mov eax esi
test esi esi
jne r-xdata
pop esi
sub_40a722
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ecx ]
and [ ecx + 0x14 ] 0x0
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ ecx + 0xc ]
mov ecx [ ecx + 0x8 ]
mov [ edx ] ecx
retn 0x4
add eax 0x8
inc [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
sub_40a756
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov ebx [ esi + 0x18 ]
mov edi [ esi ]
test ebx ebx
je r-xdata
mov eax edi
test edi edi
jne r-xdata
jmp r-xdata
mov edi [ edi ]
push eax
push [ esi + 0x1c ]
call sub_40da0b
mov eax [ esi + 0xc ]
xor ecx ecx
mov [ esi + 0x8 ] ecx
pop edi
mov [ eax ] ecx
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x30 ] 0x1
pop esi
pop ebp
pop ebx
retn 0x4
mov ebp edi
test edi edi
jne r-xdata
mov edi [ edi ]
lea eax [ ebp + 0x8 ]
push ebx
push eax
call sub_411daa
push ebp
push [ esi + 0x1c ]
call sub_40da0b
jmp r-xdata
sub_40a7b4
push esi
mov esi [ esp + 0x8 ]
push edi
push [ esi + 0x1c ]
call sub_40d83f
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push ebx
push [ esi + 0x28 ]
xor ebx ebx
push ebx
push edi
call memset
add esp 0xc
cmp [ esi + 0x31 ] bl
je r-xdata
inc [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
push [ esi + 0x18 ]
lea eax [ edi + 0x8 ]
push eax
call sub_411eaf
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ edi ] eax
mov eax [ esi + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov [ eax ] edi
inc [ esi + 0x14 ]
mov [ esi + 0x8 ] edi
mov [ eax + 0x4 ] edi
mov eax [ esi ]
mov [ esi + 0x8 ] edi
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x30 ] bl
jmp r-xdata
mov [ eax + 0x4 ] edi
cmp [ ecx ] ebx
pop ebx
jne r-xdata
mov [ esi ] ecx
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0xc ]
mov [ eax ] ecx
lea eax [ edi + 0x8 ]
mov [ esi + 0x4 ] ecx
sub_40a852
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi + 0x14 ]
mov [ edi + 0x14 ] esi
test esi esi
js r-xdata
xor ecx ecx
mov ebx [ edi + 0x10 ]
cmp esi ebx
jge r-xdata
mov [ edi + 0x30 ] 0x1
xor eax eax
mov [ edi + 0x30 ] 0x0
lea eax [ ecx + 0x8 ]
jmp r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
mov ecx [ edi + 0x8 ]
cmp esi eax
jle r-xdata
mov eax ebx
cdq
sub eax edx
sar eax 0x1
cmp esi eax
jge r-xdata
sub eax esi
cmp eax esi
jl r-xdata
sub ebx esi
sub esi eax
cmp esi ebx
jl r-xdata
mov ecx [ edi + 0x4 ]
sub ebx esi
jmp r-xdata
mov ecx [ edi ]
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx [ edi ]
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx [ edi + 0x4 ]
jmp r-xdata
dec ebx
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
test eax eax
je r-xdata
jmp r-xdata
test ecx ecx
jne r-xdata
test esi esi
je r-xdata
jmp r-xdata
dec ebx
test ecx ecx
jne r-xdata
test ebx ebx
je r-xdata
jmp r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov eax [ edi + 0xc ]
mov [ edi + 0x8 ] ecx
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov ecx [ ecx + 0x4 ]
dec eax
test esi esi
je r-xdata
jmp r-xdata
mov ecx [ ecx ]
dec esi
test ebx ebx
je r-xdata
jmp r-xdata
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx ]
dec esi
mov ecx [ ecx ]
dec esi
mov ecx [ ecx + 0x4 ]
sub_40a924
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0xc
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ ebp + 0x10 ] eax
je r-xdata
push edi
mov edi [ esi ]
jmp r-xdata
push [ ebp + 0xc ]
call sub_40a756
test edi edi
jne r-xdata
push [ ebp + 0xc ]
call sub_40a7b4
mov ecx eax
lea eax [ edi + 0x8 ]
push eax
push [ esi + 0x18 ]
mov eax [ esi + 0x28 ]
sub eax 0x8
push eax
push ecx
call sub_411ad4
mov edi [ edi ]
xor eax eax
inc eax
pop edi
sub_40a985
push ebp
mov ebp esp
sub esp 0x20c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
push 0x104
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20c ]
push eax
call wcsncpy
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x20c ]
push eax
call wcslen
lea ecx [ ebp - 0x20c ]
add esp 0x10
lea eax [ ecx + eax * 2 ]
jmp r-xdata
lea ecx [ ebp - 0x20c ]
cmp eax ecx
ja r-xdata
movzx ecx [ eax - 0x2 ]
cmp ecx 0x20
je r-xdata
xor ecx ecx
mov [ eax ] cx
lea eax [ ebp - 0x20c ]
push ecx
push eax
call [ CreateDirectoryW@IAT ]
jmp r-xdata
add eax 0xfffffffe
cmp ecx 0x5c
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x2f
jne r-xdata
sub_40aa52
push ebx
push ebp
push esi
push edi
push [ esp + 0x14 ]
mov esi 0x104
push esi
call sub_40e540
mov edi eax
push edi
push esi
call [ GetTempPathW@IAT ]
push r--data
mov ebx eax
call [ LoadLibraryW@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
sub esi ebx
push esi
call sub_40e690
xor eax eax
mov [ edi + ebx * 2 ] ax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
push r--data
push ebp
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push ebp
call [ FreeLibrary@IAT ]
push esi
push edi
push edi
call eax
mov ebx eax
sub_40aab5
push ebx
push esi
push edi
push [ esp + 0x10 ]
mov edi 0x104
push edi
call sub_40e540
mov ebx eax
push ebx
push edi
call [ GetCurrentDirectoryW@IAT ]
mov esi eax
test esi esi
je r-xdata
sub edi esi
push edi
call sub_40e690
xor eax eax
pop edi
mov [ ebx + esi * 2 ] ax
pop esi
pop ebx
retn 0x4
push 0x5c
pop eax
cmp [ ebx + esi * 2 - 0x2 ] ax
je r-xdata
mov [ ebx + esi * 2 ] ax
inc esi
sub_40aafa
push ebx
push ebp
push esi
push edi
push [ esp + 0x18 ]
mov ebp 0x104
xor esi esi
push ebp
call sub_40e540
mov edi eax
mov eax [ esp + 0x14 ]
cmp eax 0x2
jne r-xdata
cmp eax 0x9
ja r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
sub ebp esi
push ebp
call sub_40e690
xor eax eax
mov [ edi + esi * 2 ] ax
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
jmp [ eax * 4 + jump_table_40abf2 ]
push edi
push 0x28
call sub_40ac2c
push r--data
push edi
call wcscat
push edi
call wcslen
add esp 0xc
jmp r-xdata
push r--data
push ebx
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
push 0x26
jmp r-xdata
push 0x5
jmp r-xdata
push 0x1a
jmp r-xdata
push 0x23
jmp r-xdata
push 0xe
jmp r-xdata
push 0xd
jmp r-xdata
push 0x27
jmp r-xdata
push 0x2e
push edi
push esi
call sub_40ac2c
mov esi eax
push ebx
call [ FreeLibrary@IAT ]
test esi esi
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push esi
push esi
push rw-data
call eax
test eax eax
jne r-xdata
pop esi
push [ esp + 0x18 ]
push edi
call wcscpy
push r--data
push edi
call wcscat
push edi
call wcslen
add esp 0x14
mov esi eax
push [ esp + 0x18 ]
call [ CoTaskMemFree@IAT ]
sub_40ac2c
push ebp
mov ebp esp
push ecx
push esi
push edi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
push esi
push esi
push [ ebp + 0x8 ]
push esi
call [ SHGetFolderLocation@IAT ]
mov edi [ ebp + 0xc ]
test eax eax
jne r-xdata
xor eax eax
mov [ edi + esi * 2 ] ax
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push edi
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ CoTaskMemFree@IAT ]
push edi
call wcslen
mov esi eax
pop ecx
test esi esi
je r-xdata
push 0x5c
pop eax
cmp [ edi + esi * 2 - 0x2 ] ax
je r-xdata
mov [ edi + esi * 2 ] ax
inc esi
sub_40ac90
push edi
mov edi [ esp + 0x8 ]
cmp edi 0xffffffff
jne r-xdata
push esi
push edi
push [ rw-data ]
call sub_40d719
mov esi eax
test esi esi
je r-xdata
push [ rw-data ]
call sub_40dcb5
pop edi
retn 0x4
pop esi
pop edi
retn 0x4
cmp [ esi + 0x4 ] 0x0
je r-xdata
push [ esi ]
call [ CloseHandle@IAT ]
push edi
push [ rw-data ]
call sub_40d6ca
push esi
call sub_40ad00
push [ esi + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40ad00
push ecx
push esi
mov esi [ esp + 0xc ]
mov [ esp + 0x4 ] 0x0
cmp [ esi + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ecx
retn 0x4
push 0x0
lea eax [ esp + 0x8 ]
push eax
mov eax [ esi + 0x8 ]
sub eax [ esi + 0xc ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call [ WriteFile@IAT ]
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
mov eax [ esp + 0x4 ]
pop esi
pop ecx
retn 0x4
sub_40ad80
sub esp 0x8
push ebx
mov ebx [ esp + 0x1c ]
push ebp
push esi
push edi
mov edi ebx
xor ebp ebp
and edi 0x1f
mov [ esp + 0x10 ] edi
jne r-xdata
push [ esp + 0x1c ]
push [ rw-data ]
call sub_40d758
mov esi eax
test esi esi
je r-xdata
mov [ esp + 0x10 ] 0x2
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x24 ]
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
xor eax eax
test ebx 0x20000
je r-xdata
cmp eax 0x3
jne r-xdata
xor eax eax
test ebx 0x20000
je r-xdata
test ebx 0x40000
je r-xdata
mov eax 0x1
mov edi [ esp + 0x28 ]
xor eax eax
mov [ esp + 0x28 ] eax
test ebx 0x20000
je r-xdata
test ebx 0x40000
je r-xdata
mov eax 0x1
push 0x0
push 0x80
push 0x3
push 0x0
push eax
push 0x80000000
push [ esp + 0x38 ]
call [ CreateFileW@IAT ]
mov edi eax
jmp r-xdata
or eax 0x7
mov eax [ esp + 0x1c ]
test edi edi
je r-xdata
test ebx 0x40000
je r-xdata
mov eax 0x1
mov [ esp + 0x28 ] eax
push 0x0
push 0x80
push 0x4
push 0x0
push eax
push 0xc0000000
push [ esp + 0x38 ]
call [ CreateFileW@IAT ]
mov edi eax
jmp r-xdata
or eax 0x7
cmp edi 0xffffffff
je r-xdata
push esi
push [ rw-data ]
call sub_40d6ca
mov esi eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push eax
push 0xc0000000
push [ esp + 0x38 ]
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
or eax 0x7
mov [ esp + 0x28 ] eax
mov [ esi + 0x4 ] ebp
test ebx 0x80000
jne r-xdata
push 0x0
push 0x0
push 0x5
push 0x0
push [ esp + 0x38 ]
push 0x40000000
push [ esp + 0x38 ]
call [ CreateFileW@IAT ]
mov edi eax
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ebp esi
cmp eax 0xffffffff
je r-xdata
test ebx 0x100000
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x4 ] eax
jmp r-xdata
test ebp ebp
je r-xdata
mov ebp edi
push 0x2
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] ebp
push eax
push 0x0
push edi
call [ SetFilePointer@IAT ]
mov [ esi ] edi
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x18 ] eax
xor eax eax
cmp [ esp + 0x24 ] 0x1
mov [ esi + 0xc ] ebp
sete al
mov [ esi + 0x14 ] 0x1
cmp [ esp + 0x24 ] 0x2
mov [ esi + 0x1c ] eax
jne r-xdata
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x8
retn
sub_40af90
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
push ebp
push [ rw-data ]
xor edi edi
call sub_40d758
mov esi eax
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push ebx
push edi
push 0x80
push 0x2
push edi
push edi
push 0xc0000000
push [ esp + 0x30 ]
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
push edi
push edi
push 0x5
push edi
push edi
push 0x40000000
push [ esp + 0x30 ]
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
cmp ebp 0xffffffff
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push [ rw-data ]
call sub_40d6ca
mov esi ebp
mov [ esi + 0x4 ] edi
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x4 ] eax
jmp r-xdata
test edi edi
jne r-xdata
mov edi ebx
mov [ esi ] ebx
mov eax [ rw-data ]
mov [ esi + 0xc ] edi
mov [ esi + 0x1c ] edi
mov edi esi
mov [ esi + 0x8 ] eax
mov [ esi + 0x14 ] 0x1
mov [ esi + 0x18 ] 0x2
cmp ebp 0xffffffff
je r-xdata
pop ebx
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
sub_40b080
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push ebx
push [ rw-data ]
xor edi edi
call sub_40d758
mov esi eax
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
push ebp
push edi
push 0x80
push 0x3
push edi
push edi
push 0x80000000
push [ esp + 0x30 ]
call [ CreateFileW@IAT ]
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
test ebp ebp
je r-xdata
push esi
push [ rw-data ]
call sub_40d6ca
mov esi ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
push eax
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x4 ] eax
jmp r-xdata
test edi edi
jne r-xdata
mov edi ebp
mov [ esi ] ebp
mov eax [ rw-data ]
mov [ esi + 0xc ] edi
mov edi esi
mov [ esi + 0x8 ] eax
mov [ esi + 0x14 ] 0x1
mov [ esi + 0x18 ] 0x2
mov [ esi + 0x1c ] 0x1
cmp ebx 0xffffffff
je r-xdata
pop ebp
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_40b140
push ecx
mov edx [ esp + 0xc ]
mov [ esp ] 0x0
test edx edx
je r-xdata
xor eax eax
pop ecx
retn 0xc
cmp [ edx ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
push esi
cmp ecx 0x19
jne r-xdata
xor eax eax
cmp ecx 0x2
lea ecx [ esp + 0x10 ]
setne al
push ecx
dec eax
and eax 0xfde9
push edx
push eax
call sub_40b3f0
mov esi eax
test esi esi
je r-xdata
mov esi [ esp + 0xc ]
mov ecx edx
push edi
cmp [ esi + 0x4 ] 0x0
lea edi [ ecx + 0x2 ]
je r-xdata
mov eax [ esp + 0x4 ]
pop esi
pop ecx
retn 0xc
mov eax [ esp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ esp + 0x8 ]
push ecx
push [ esp + 0x18 ]
push esi
push [ eax ]
call [ WriteFile@IAT ]
push [ esp + 0x10 ]
push esi
push eax
call sub_40b2e0
mov [ esp + 0x4 ] eax
jmp r-xdata
sub ecx edi
lea eax [ esp + 0x8 ]
push 0x0
sar ecx 0x1
push eax
lea eax [ ecx + ecx ]
push eax
push edx
push [ esi ]
call [ WriteFile@IAT ]
mov eax [ esp + 0x8 ]
pop edi
pop esi
pop ecx
retn 0xc
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub ecx edi
sar ecx 0x1
lea eax [ ecx + ecx ]
push eax
push edx
push esi
call sub_40b2e0
pop edi
pop esi
pop ecx
retn 0xc
sub_40b270
push ecx
push esi
mov esi [ esp + 0x10 ]
mov [ esp + 0x4 ] 0x0
test esi esi
je r-xdata
xor eax eax
pop esi
pop ecx
retn 0xc
push edi
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn 0xc
push [ esp + 0x10 ]
push [ rw-data ]
call sub_40d719
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
pop esi
pop ecx
retn 0xc
cmp [ eax + 0x4 ] 0x0
je r-xdata
push 0x0
lea ecx [ esp + 0xc ]
push ecx
push edi
push esi
push [ eax ]
call [ WriteFile@IAT ]
push edi
push esi
push eax
call sub_40b2e0
pop edi
pop esi
pop ecx
retn 0xc
sub_40b2e0
sub esp 0xc
push esi
mov esi [ esp + 0x14 ]
mov [ esp + 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
jne r-xdata
xor eax eax
pop esi
add esp 0xc
retn 0xc
cmp [ esi + 0x14 ] 0x1
jne r-xdata
mov eax [ esi + 0xc ]
push edi
mov edi [ esp + 0x20 ]
cmp eax edi
jle r-xdata
mov eax [ esi + 0xc ]
lea ecx [ esp + 0xc ]
push 0x1
neg eax
cdq
push ecx
push eax
push [ esi ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] edx
call [ SetFilePointer@IAT ]
mov eax [ esi + 0x8 ]
mov [ esi + 0x14 ] 0x0
mov [ esi + 0xc ] eax
push esi
call sub_40ad00
mov eax [ esi + 0x8 ]
cmp edi eax
jl r-xdata
mov ecx [ esi + 0x8 ]
add ecx [ esi + 0x4 ]
sub ecx eax
mov eax edi
dec eax
je r-xdata
mov ecx [ esi + 0x4 ]
sub ecx [ esi + 0xc ]
push edi
push [ esp + 0x20 ]
add ecx eax
jmp r-xdata
push 0x0
lea eax [ esp + 0xc ]
push eax
push edi
push [ esp + 0x28 ]
push [ esi ]
call [ WriteFile@IAT ]
mov eax [ esp + 0x8 ]
pop edi
pop esi
add esp 0xc
retn 0xc
mov eax [ esp + 0x1c ]
mov al [ eax ]
mov [ ecx ] al
mov eax edi
sub [ esi + 0xc ] edi
pop edi
pop esi
add esp 0xc
retn 0xc
dec eax
je r-xdata
push ecx
call memcpy
add esp 0xc
mov eax edi
sub [ esi + 0xc ] edi
pop edi
pop esi
add esp 0xc
retn 0xc
mov eax [ esp + 0x1c ]
mov ax [ eax ]
mov [ ecx ] ax
mov eax edi
sub [ esi + 0xc ] edi
pop edi
pop esi
add esp 0xc
retn 0xc
sub eax 0x2
je r-xdata
mov eax [ esp + 0x1c ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax edi
sub [ esi + 0xc ] edi
pop edi
pop esi
add esp 0xc
retn 0xc
push edi
push [ esp + 0x20 ]
sub_40b3f0
push edi
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push [ esp + 0x20 ]
push 0x0
push [ esp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi [ esp + 0x10 ]
mov [ edi ] eax
test eax eax
je r-xdata
xor eax eax
pop edi
retn 0xc
push esi
inc eax
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
pop edi
retn 0xc
push 0x0
push 0x0
push [ edi ]
push esi
push 0xffffffff
push [ esp + 0x24 ]
push 0x0
push [ esp + 0x28 ]
call [ WideCharToMultiByte@IAT ]
dec [ edi ]
mov eax esi
sub_40b47f
push esi
push 0xe4
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push [ esp + 0xc ]
mov esi eax
lea ecx [ esi + 0x44 ]
mov [ esi ] 0xa0
push ecx
call sub_40b5d1
pop ecx
pop ecx
mov eax esi
pop esi
retn 0x8
sub_40b4f6
push ecx
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
xor ebp ebp
push edi
mov edx ebp
mov eax edx
and eax 0x3
push 0x3
pop ecx
sub ecx eax
shl ecx 0x3
cmp edx 0x4
sbb eax eax
neg eax
mov eax [ esi + eax * 4 + 0x14 ]
shr eax cl
mov [ esp + edx + 0x10 ] al
inc edx
cmp edx 0x8
jb r-xdata
push 0x1
push r--data
push esi
call sub_40c8f6
lea edi [ esi + 0x14 ]
mov ebx 0x1f8
jmp r-xdata
mov eax [ edi ]
add esp 0xc
and eax ebx
cmp eax 0x1c0
jne r-xdata
push 0x1
push r--data
push esi
call sub_40c8f6
push 0x8
lea eax [ esp + 0x14 ]
push eax
push esi
call sub_40c8f6
mov ebx [ esp + 0x28 ]
add esp 0xc
mov edx ebp
mov eax edx
and eax 0x3
push 0x3
pop ecx
sub ecx eax
mov eax edx
shr eax 0x2
shl ecx 0x3
mov eax [ esi + eax * 4 ]
shr eax cl
mov [ edx + ebx ] al
inc edx
cmp edx 0x14
jb r-xdata
push 0x40
lea eax [ esi + 0x1c ]
push ebp
push eax
call memset
push 0x14
push ebp
push esi
call memset
push 0x8
push ebp
push edi
call memset
push 0x8
lea eax [ esp + 0x38 ]
push ebp
push eax
call memset
push 0x40
lea eax [ esi + 0x60 ]
push ebp
push eax
call memset
add esp 0x3c
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub_40b607
mov eax [ esp + 0xc ]
sub esp 0x4c
test eax eax
je r-xdata
mov eax [ esp + 0x54 ]
mov [ esp + 0x58 ] eax
push 0x40
push [ esp + 0x58 ]
push eax
call memcpy
mov eax [ esp + 0x64 ]
add esp 0xc
jmp r-xdata
mov eax [ eax ]
mov ecx eax
mov edx [ esp + 0x50 ]
rol eax 0x8
and eax 0xff00ff
ror ecx 0x8
and ecx 0xff00ff00
or ecx eax
mov [ esp + 0x3c ] ecx
push ebx
mov ebx [ edx + 0x4 ]
push ebp
mov ebp [ edx ]
mov ecx ebp
rol ecx 0x5
add ecx [ esp + 0x44 ]
push esi
mov esi [ edx + 0xc ]
mov eax esi
push edi
mov edi [ edx + 0x8 ]
xor eax edi
mov edx [ edx + 0x10 ]
and eax ebx
xor eax esi
ror ebx 0x2
add eax ecx
add edx 0x5a827999
add edx eax
add esi 0x5a827999
mov eax [ esp + 0x68 ]
mov eax [ eax + 0x4 ]
mov ecx eax
rol eax 0x8
and eax 0xff00ff
ror ecx 0x8
and ecx 0xff00ff00
or ecx eax
mov eax edi
xor eax ebx
mov [ esp + 0x50 ] ecx
and eax ebp
mov ecx edx
xor eax edi
rol ecx 0x5
add ecx [ esp + 0x50 ]
add edi 0x5a827999
add eax ecx
ror ebp 0x2
add esi eax
mov eax [ esp + 0x68 ]
mov eax [ eax + 0x8 ]
mov ecx eax
rol eax 0x8
ror ecx 0x8
and eax 0xff00ff
and ecx 0xff00ff00
or ecx eax
mov eax ebx
mov [ esp + 0x38 ] ecx
xor eax ebp
and eax edx
mov ecx esi
rol ecx 0x5
xor eax ebx
add ecx [ esp + 0x38 ]
add eax ecx
ror edx 0x2
add edi eax
mov eax [ esp + 0x68 ]
mov eax [ eax + 0xc ]
mov ecx eax
ror ecx 0x8
rol eax 0x8
and ecx 0xff00ff00
and eax 0xff00ff
or ecx eax
mov eax edx
mov [ esp + 0x14 ] ecx
mov ecx edi
rol ecx 0x5
add ecx [ esp + 0x14 ]
xor eax ebp
and eax esi
add ebx 0x5a827999
xor eax ebp
ror esi 0x2
add eax ecx
add ebp 0x5a827999
add ebx eax
mov eax [ esp + 0x68 ]
mov eax [ eax + 0x10 ]
mov ecx eax
rol eax 0x8
ror ecx 0x8
and eax 0xff00ff
and ecx 0xff00ff00
or ecx eax
mov eax edx
xor eax esi
mov [ esp + 0x10 ] ecx
and eax edi
mov ecx ebx
rol ecx 0x5
xor eax edx
add ecx [ esp + 0x10 ]
add eax ecx
ror edi 0x2
add ebp eax
mov eax [ esp + 0x68 ]
mov eax [ eax + 0x14 ]
mov ecx eax
ror ecx 0x8
rol eax 0x8
and ecx 0xff00ff00
and eax 0xff00ff
or ecx eax
mov eax esi
mov [ esp + 0x3c ] ecx
xor eax edi
and eax ebx
mov ecx ebp
rol ecx 0x5
xor eax esi
add ecx 0x5a827999
ror ebx 0x2
add ecx [ esp + 0x3c ]
add eax ecx
add edx eax
mov eax [ esp + 0x68 ]
mov eax [ eax + 0x18 ]
mov ecx eax
ror ecx 0x8
rol eax 0x8
and ecx 0xff00ff00
and eax 0xff00ff
or ecx eax
mov eax edi
mov [ esp + 0x40 ] ecx
xor eax ebx
and eax ebp
mov ecx edx
rol ecx 0x5
xor eax edi
add ecx 0x5a827999
ror ebp 0x2
add ecx [ esp + 0x40 ]
add eax ecx
add esi eax
mov eax [ esp + 0x68 ]
mov eax [ eax + 0x1c ]
mov ecx eax
ror ecx 0x8
rol eax 0x8
and ecx 0xff00ff00
and eax 0xff00ff
or ecx eax
mov eax ebx
mov [ esp + 0x44 ] ecx
mov ecx esi
rol ecx 0x5
xor eax ebp
and eax edx
add ecx 0x5a827999
add ecx [ esp + 0x44 ]
xor eax ebx
add eax ecx
ror edx 0x2
add edi eax
mov eax [ esp + 0x68 ]
mov eax [ eax + 0x20 ]
mov ecx eax
rol eax 0x8
and eax 0xff00ff
ror ecx 0x8
and ecx 0xff00ff00
or ecx eax
mov eax edx
xor eax ebp
mov [ esp + 0x1c ] ecx
and eax esi
mov ecx edi
rol ecx 0x5
xor eax ebp
add ecx 0x5a827999
ror esi 0x2
add ecx [ esp + 0x1c ]
add eax ecx
add ebx eax
mov eax [ esp + 0x68 ]
mov eax [ eax + 0x24 ]
mov ecx eax
rol eax 0x8
and eax 0xff00ff
ror ecx 0x8
and ecx 0xff00ff00
or ecx eax
mov eax edx
mov [ esp + 0x18 ] ecx
xor eax esi
and eax edi
mov ecx ebx
xor eax edx
rol ecx 0x5
add ecx 0x5a827999
ror edi 0x2
add ecx [ esp + 0x18 ]
add edx 0x5a827999
add eax ecx
add ebp eax
mov eax [ esp + 0x68 ]
mov eax [ eax + 0x28 ]
mov ecx eax
rol eax 0x8
ror ecx 0x8
and eax 0xff00ff
and ecx 0xff00ff00
or ecx eax
mov eax esi
xor eax edi
mov [ esp + 0x20 ] ecx
and eax ebx
mov ecx ebp
rol ecx 0x5
xor eax esi
add ecx [ esp + 0x20 ]
add ecx eax
ror ebx 0x2
mov eax [ esp + 0x68 ]
add ecx edx
mov [ esp + 0x34 ] ecx
rol ecx 0x5
mov [ esp + 0x30 ] ebx
mov eax [ eax + 0x2c ]
mov edx eax
ror edx 0x8
rol eax 0x8
and edx 0xff00ff00
and eax 0xff00ff
or edx eax
mov eax edi
mov [ esp + 0x48 ] edx
xor eax ebx
and eax ebp
add edx ecx
xor eax edi
ror ebp 0x2
add edx eax
mov [ esp + 0x54 ] ebp
mov eax [ esp + 0x68 ]
add esi 0x5a827999
add edx esi
add edi 0x5a827999
mov esi [ esp + 0x34 ]
mov eax [ eax + 0x30 ]
mov ecx eax
rol eax 0x8
and eax 0xff00ff
ror ecx 0x8
and ecx 0xff00ff00
or ecx eax
mov eax ebx
xor eax ebp
mov [ esp + 0x24 ] ecx
and eax esi
mov ecx edx
xor ebx eax
rol ecx 0x5
add ecx [ esp + 0x24 ]
mov eax [ esp + 0x68 ]
add ebx ecx
add ebx edi
ror esi 0x2
mov ecx ebx
mov [ esp + 0x34 ] esi
rol ecx 0x5
mov eax [ eax + 0x34 ]
mov edi eax
rol eax 0x8
and eax 0xff00ff
ror edi 0x8
and edi 0xff00ff00
or edi eax
mov eax esi
xor eax ebp
mov [ esp + 0x28 ] edi
and eax edx
add ecx edi
xor ebp eax
ror edx 0x2
mov eax [ esp + 0x68 ]
add ebp ecx
mov ecx [ esp + 0x30 ]
add ecx 0x5a827999
mov [ esp + 0x58 ] edx
add ebp ecx
mov eax [ eax + 0x38 ]
mov ecx ebp
mov edi eax
rol ecx 0x5
rol eax 0x8
ror edi 0x8
and eax 0xff00ff
and edi 0xff00ff00
or edi eax
mov eax esi
xor eax edx
mov [ esp + 0x2c ] edi
and eax ebx
add ecx edi
xor esi eax
ror ebx 0x2
mov eax [ esp + 0x68 ]
add esi ecx
mov ecx [ esp + 0x54 ]
add ecx 0x5a827999
mov [ esp + 0x54 ] ebx
add esi ecx
mov eax [ eax + 0x3c ]
mov edi eax
ror edi 0x8
rol eax 0x8
and edi 0xff00ff00
and eax 0xff00ff
or edi eax
mov ecx esi
mov eax edx
rol ecx 0x5
xor eax ebx
mov [ esp + 0x30 ] edi
and eax ebp
add edi ecx
xor eax edx
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x38 ]
add edi eax
xor edx [ esp + 0x4c ]
add ecx 0x5a827999
xor edx [ esp + 0x28 ]
add edi ecx
xor edx [ esp + 0x1c ]
mov ecx edi
mov eax [ esp + 0x68 ]
rol edx 0x1
rol ecx 0x5
add ecx edx
ror ebp 0x2
mov [ eax ] edx
mov eax ebx
mov edx [ esp + 0x14 ]
xor eax ebp
xor edx [ esp + 0x50 ]
and eax esi
xor edx [ esp + 0x2c ]
xor ebx eax
xor edx [ esp + 0x18 ]
add ebx ecx
mov ecx [ esp + 0x58 ]
mov eax [ esp + 0x68 ]
add ecx 0x5a827999
add ebx ecx
rol edx 0x1
ror esi 0x2
mov ecx ebx
rol ecx 0x5
mov [ eax + 0x4 ] edx
add ecx edx
mov edx [ esp + 0x10 ]
mov eax ebp
xor edx [ esp + 0x38 ]
xor eax esi
xor edx [ esp + 0x30 ]
and eax edi
xor edx [ esp + 0x20 ]
mov [ esp + 0x34 ] ebp
xor ebp eax
mov eax [ esp + 0x68 ]
add ebp ecx
mov ecx [ esp + 0x54 ]
add ecx 0x5a827999
rol edx 0x1
add ebp ecx
ror edi 0x2
mov [ eax + 0x8 ] edx
mov ecx ebp
rol ecx 0x5
mov eax edi
xor eax esi
add edx ecx
mov ecx [ esp + 0x34 ]
and eax ebx
xor eax esi
ror ebx 0x2
add edx eax
add ecx 0x5a827999
mov eax [ esp + 0x14 ]
add edx ecx
mov ecx [ esp + 0x68 ]
xor eax [ ecx ]
xor eax [ esp + 0x48 ]
xor eax [ esp + 0x3c ]
rol eax 0x1
mov [ ecx + 0xc ] eax
mov ecx edx
mov [ esp + 0x14 ] eax
rol ecx 0x5
mov eax edi
xor eax ebx
add ecx 0x5a827999
add ecx [ esp + 0x14 ]
and eax ebp
xor eax edi
ror ebp 0x2
add eax ecx
mov ecx [ esp + 0x68 ]
add esi eax
mov eax [ esp + 0x10 ]
xor eax [ ecx + 0x4 ]
xor eax [ esp + 0x24 ]
xor eax [ esp + 0x40 ]
rol eax 0x1
mov [ ecx + 0x10 ] eax
mov ecx esi
mov [ esp + 0x10 ] eax
mov eax ebx
xor eax ebp
rol ecx 0x5
xor eax edx
add ecx 0x6ed9eba1
add ecx [ esp + 0x10 ]
add eax ecx
ror edx 0x2
add edi eax
mov [ esp + 0x38 ] edx
mov eax [ esp + 0x68 ]
mov ecx edi
rol ecx 0x5
mov edx [ eax + 0x8 ]
xor edx [ esp + 0x28 ]
xor edx [ esp + 0x44 ]
xor edx [ esp + 0x3c ]
rol edx 0x1
mov [ eax + 0x14 ] edx
add edx 0x6ed9eba1
add ecx edx
mov eax ebp
xor eax [ esp + 0x38 ]
xor eax esi
ror esi 0x2
add eax ecx
mov ecx [ esp + 0x68 ]
add ebx eax
mov eax [ ecx + 0xc ]
mov edx eax
xor edx [ esp + 0x2c ]
xor edx [ esp + 0x1c ]
xor edx [ esp + 0x40 ]
rol edx 0x1
mov [ ecx + 0x18 ] edx
mov ecx ebx
mov [ esp + 0x14 ] eax
add edx 0x6ed9eba1
rol ecx 0x5
mov eax edi
xor eax [ esp + 0x38 ]
add ecx edx
xor eax esi
ror edi 0x2
add eax ecx
mov ecx [ esp + 0x68 ]
add ebp eax
mov eax [ ecx + 0x10 ]
mov edx eax
xor edx [ esp + 0x30 ]
xor edx [ esp + 0x18 ]
xor edx [ esp + 0x44 ]
rol edx 0x1
mov [ esp + 0x10 ] eax
mov eax edi
mov [ ecx + 0x1c ] edx
xor eax ebx
mov ecx ebp
xor eax esi
rol ecx 0x5
add ecx edx
add eax ecx
mov ecx [ esp + 0x38 ]
add esi 0x6ed9eba1
add ecx 0x6ed9eba1
ror ebx 0x2
add ecx eax
mov eax [ esp + 0x68 ]
mov [ esp + 0x58 ] ecx
rol ecx 0x5
mov edx [ eax ]
xor edx [ esp + 0x20 ]
xor edx [ esp + 0x1c ]
xor edx [ eax + 0x14 ]
rol edx 0x1
mov [ eax + 0x20 ] edx
add ecx edx
mov eax edi
add edi 0x6ed9eba1
xor eax ebx
xor eax ebp
ror ebp 0x2
add ecx eax
mov eax [ esp + 0x68 ]
add ecx esi
mov esi [ esp + 0x58 ]
mov [ esp + 0x54 ] ecx
rol ecx 0x5
mov edx [ eax + 0x4 ]
xor edx [ esp + 0x48 ]
xor edx [ esp + 0x18 ]
xor edx [ eax + 0x18 ]
rol edx 0x1
mov [ eax + 0x24 ] edx
add ecx edx
mov eax ebx
add ebx 0x6ed9eba1
xor eax ebp
xor eax esi
ror esi 0x2
add ecx eax
mov eax [ esp + 0x68 ]
add ecx edi
mov edi [ esp + 0x54 ]
mov [ esp + 0x58 ] ecx
rol ecx 0x5
mov edx [ eax + 0x8 ]
xor edx [ esp + 0x24 ]
xor edx [ esp + 0x20 ]
xor edx [ eax + 0x1c ]
rol edx 0x1
mov [ eax + 0x28 ] edx
add ecx edx
mov edx [ esp + 0x14 ]
mov eax ebp
xor edx [ esp + 0x28 ]
xor eax esi
xor edx [ esp + 0x48 ]
xor eax edi
add ecx eax
ror edi 0x2
mov eax [ esp + 0x68 ]
add ecx ebx
mov ebx [ esp + 0x58 ]
mov [ esp + 0x54 ] ecx
rol ecx 0x5
xor edx [ eax + 0x20 ]
rol edx 0x1
mov [ eax + 0x2c ] edx
add ecx edx
mov edx [ esp + 0x10 ]
mov eax ebx
xor edx [ esp + 0x2c ]
xor eax esi
xor edx [ esp + 0x24 ]
xor eax edi
add eax ecx
ror ebx 0x2
lea ecx [ ebp + 0x6ed9eba1 ]
add ecx eax
mov eax [ esp + 0x68 ]
mov [ esp + 0x58 ] ecx
xor edx [ eax + 0x24 ]
mov ebp [ esp + 0x54 ]
add esi 0x6ed9eba1
rol edx 0x1
mov [ eax + 0x30 ] edx
mov eax ebx
xor eax ebp
rol ecx 0x5
add ecx edx
ror ebp 0x2
mov edx [ esp + 0x30 ]
xor eax edi
xor edx [ esp + 0x28 ]
add ecx eax
mov eax [ esp + 0x68 ]
add ecx esi
mov esi [ esp + 0x58 ]
add edi 0x6ed9eba1
mov [ esp + 0x54 ] ecx
rol ecx 0x5
xor edx [ eax + 0x28 ]
xor edx [ eax + 0x14 ]
rol edx 0x1
mov [ eax + 0x34 ] edx
add ecx edx
mov eax ebx
add ebx 0x6ed9eba1
xor eax ebp
xor eax esi
ror esi 0x2
add ecx eax
mov eax [ esp + 0x68 ]
add ecx edi
mov edi [ esp + 0x54 ]
mov [ esp + 0x58 ] ecx
rol ecx 0x5
mov edx [ eax ]
xor edx [ esp + 0x2c ]
xor edx [ eax + 0x2c ]
xor edx [ eax + 0x18 ]
rol edx 0x1
mov [ eax + 0x38 ] edx
add ecx edx
mov eax ebp
xor eax esi
xor eax edi
ror edi 0x2
add ecx eax
mov eax [ esp + 0x68 ]
add ecx ebx
mov ebx [ esp + 0x58 ]
mov [ esp + 0x54 ] ecx
rol ecx 0x5
mov edx [ eax + 0x4 ]
xor edx [ esp + 0x30 ]
xor edx [ eax + 0x30 ]
xor edx [ eax + 0x1c ]
rol edx 0x1
mov [ eax + 0x3c ] edx
add ecx edx
mov eax esi
xor eax edi
xor eax ebx
ror ebx 0x2
add eax ecx
lea ecx [ ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x54 ]
add ecx eax
mov eax [ esp + 0x68 ]
mov [ esp + 0x58 ] ecx
rol ecx 0x5
mov edx [ eax + 0x8 ]
xor edx [ eax ]
xor edx [ eax + 0x34 ]
xor edx [ eax + 0x20 ]
rol edx 0x1
mov [ eax ] edx
add ecx edx
mov eax ebp
xor eax edi
xor eax ebx
add ecx eax
mov eax [ esp + 0x68 ]
add esi 0x6ed9eba1
mov edx [ esp + 0x14 ]
add ecx esi
mov esi [ esp + 0x58 ]
add edi 0x6ed9eba1
mov [ esp + 0x54 ] ecx
xor edx [ eax + 0x4 ]
xor edx [ eax + 0x38 ]
xor edx [ eax + 0x24 ]
rol edx 0x1
mov [ eax + 0x4 ] edx
rol ecx 0x5
add ecx edx
ror ebp 0x2
mov edx [ esp + 0x10 ]
mov eax ebp
xor eax esi
ror esi 0x2
xor eax ebx
add ebx 0x6ed9eba1
add ecx eax
mov eax [ esp + 0x68 ]
add ecx edi
mov edi [ esp + 0x54 ]
mov [ esp + 0x58 ] ecx
rol ecx 0x5
xor edx [ eax + 0x8 ]
xor edx [ eax + 0x3c ]
xor edx [ eax + 0x28 ]
rol edx 0x1
mov [ eax + 0x8 ] edx
add edx ecx
mov ecx [ esp + 0x68 ]
mov eax ebp
xor eax esi
add ebp 0x6ed9eba1
xor eax edi
ror edi 0x2
add edx eax
mov eax [ esp + 0x14 ]
xor eax [ ecx ]
add edx ebx
xor eax [ ecx + 0x2c ]
xor eax [ ecx + 0x14 ]
mov ebx [ esp + 0x58 ]
rol eax 0x1
mov [ ecx + 0xc ] eax
mov ecx edx
mov [ esp + 0x14 ] eax
mov eax esi
xor eax edi
rol ecx 0x5
add ecx [ esp + 0x14 ]
xor eax ebx
add eax ecx
ror ebx 0x2
mov ecx [ esp + 0x68 ]
add ebp eax
mov eax [ esp + 0x10 ]
add esi 0x6ed9eba1
xor eax [ ecx + 0x4 ]
xor eax [ ecx + 0x30 ]
xor eax [ ecx + 0x18 ]
rol eax 0x1
mov [ ecx + 0x10 ] eax
mov ecx ebp
mov [ esp + 0x10 ] eax
mov eax edi
rol ecx 0x5
xor eax ebx
add ecx [ esp + 0x10 ]
xor eax edx
add ecx eax
ror edx 0x2
mov eax [ esp + 0x68 ]
add ecx esi
mov [ esp + 0x58 ] edx
mov [ esp + 0x54 ] ecx
mov edx [ eax + 0x8 ]
xor edx [ eax + 0x34 ]
xor edx [ eax + 0x1c ]
add edi 0x6ed9eba1
xor edx [ eax + 0x14 ]
mov esi [ esp + 0x58 ]
rol edx 0x1
mov [ eax + 0x14 ] edx
mov eax ebp
xor eax ebx
rol ecx 0x5
add ecx edx
ror ebp 0x2
xor eax esi
add ebx 0x6ed9eba1
add ecx eax
add ecx edi
mov edi [ esp + 0x68 ]
mov [ esp + 0x58 ] ecx
rol ecx 0x5
mov eax [ edi + 0xc ]
mov edx eax
xor edx [ edi + 0x38 ]
xor edx [ edi + 0x20 ]
xor edx [ edi + 0x18 ]
mov [ esp + 0x14 ] eax
mov eax ebp
rol edx 0x1
add ecx edx
mov [ edi + 0x18 ] edx
mov edi [ esp + 0x54 ]
xor eax edi
xor eax esi
ror edi 0x2
add eax ecx
add esi 0x6ed9eba1
add eax ebx
mov ebx [ esp + 0x68 ]
mov [ esp + 0x48 ] eax
mov ecx [ ebx + 0x10 ]
mov edx ecx
xor edx [ ebx + 0x3c ]
xor edx [ ebx + 0x24 ]
xor edx [ ebx + 0x1c ]
mov [ esp + 0x3c ] ecx
mov ecx eax
rol ecx 0x5
mov eax ebp
xor eax edi
rol edx 0x1
add ecx edx
mov [ ebx + 0x1c ] edx
mov ebx [ esp + 0x58 ]
xor eax ebx
add eax ecx
ror ebx 0x2
mov ecx [ esp + 0x68 ]
add eax esi
mov edx eax
mov [ esp + 0x44 ] eax
mov eax ebx
rol edx 0x5
and eax [ esp + 0x48 ]
mov esi [ ecx ]
xor esi [ ecx + 0x28 ]
xor esi [ ecx + 0x20 ]
xor esi [ ecx + 0x14 ]
rol esi 0x1
mov [ ecx + 0x20 ] esi
mov ecx ebx
or ecx [ esp + 0x48 ]
and ecx edi
or ecx eax
lea eax [ edx - 0x70e44324 ]
add ecx esi
add ecx ebp
mov ebp [ esp + 0x48 ]
add eax ecx
ror ebp 0x2
mov ecx [ esp + 0x68 ]
mov [ esp + 0x50 ] eax
mov esi [ ecx + 0x4 ]
xor esi [ ecx + 0x2c ]
xor esi [ ecx + 0x24 ]
mov edx eax
xor esi [ ecx + 0x18 ]
mov eax ebp
and eax [ esp + 0x44 ]
rol esi 0x1
mov [ ecx + 0x24 ] esi
mov ecx ebp
or ecx [ esp + 0x44 ]
and ecx ebx
rol edx 0x5
or ecx eax
add ecx esi
add ecx edi
mov edi [ esp + 0x44 ]
lea eax [ edx - 0x70e44324 ]
ror edi 0x2
add eax ecx
mov ecx [ esp + 0x68 ]
mov [ esp + 0x48 ] eax
mov edx eax
mov eax [ esp + 0x50 ]
rol edx 0x5
mov esi [ ecx + 0x8 ]
xor esi [ ecx + 0x30 ]
xor esi [ ecx + 0x28 ]
xor esi [ ecx + 0x1c ]
rol esi 0x1
mov [ ecx + 0x28 ] esi
mov ecx eax
or ecx edi
and eax edi
and ecx ebp
or ecx eax
lea eax [ edx - 0x70e44324 ]
add ecx esi
mov esi [ esp + 0x14 ]
add ecx ebx
mov ebx [ esp + 0x50 ]
add eax ecx
ror ebx 0x2
mov ecx [ esp + 0x68 ]
mov edx eax
mov [ esp + 0x44 ] eax
mov eax ebx
and eax [ esp + 0x48 ]
rol edx 0x5
xor esi [ ecx + 0x34 ]
xor esi [ ecx + 0x2c ]
xor esi [ ecx + 0x20 ]
rol esi 0x1
mov [ ecx + 0x2c ] esi
mov ecx ebx
or ecx [ esp + 0x48 ]
and ecx edi
or ecx eax
lea eax [ edx - 0x70e44324 ]
add ecx esi
mov esi [ esp + 0x3c ]
add ecx ebp
mov ebp [ esp + 0x48 ]
add eax ecx
ror ebp 0x2
mov ecx [ esp + 0x68 ]
mov edx eax
mov [ esp + 0x40 ] eax
mov eax ebp
and eax [ esp + 0x44 ]
rol edx 0x5
xor esi [ ecx + 0x38 ]
xor esi [ ecx + 0x30 ]
xor esi [ ecx + 0x24 ]
rol esi 0x1
mov [ ecx + 0x30 ] esi
mov ecx ebp
or ecx [ esp + 0x44 ]
and ecx ebx
or ecx eax
lea eax [ edx - 0x70e44324 ]
add ecx esi
add ecx edi
add eax ecx
mov edi [ esp + 0x44 ]
mov ecx [ esp + 0x68 ]
mov edx eax
mov [ esp + 0x48 ] eax
ror edi 0x2
rol edx 0x5
mov eax edi
mov esi [ ecx + 0x3c ]
xor esi [ ecx + 0x34 ]
xor esi [ ecx + 0x28 ]
xor esi [ ecx + 0x14 ]
and eax [ esp + 0x40 ]
rol esi 0x1
mov [ ecx + 0x34 ] esi
mov ecx edi
or ecx [ esp + 0x40 ]
and ecx ebp
or ecx eax
lea eax [ edx - 0x70e44324 ]
add ecx esi
add ecx ebx
mov ebx [ esp + 0x40 ]
add eax ecx
ror ebx 0x2
mov ecx [ esp + 0x68 ]
mov edx eax
mov [ esp + 0x50 ] eax
mov eax ebx
and eax [ esp + 0x48 ]
rol edx 0x5
mov esi [ ecx ]
xor esi [ ecx + 0x38 ]
xor esi [ ecx + 0x2c ]
xor esi [ ecx + 0x18 ]
rol esi 0x1
mov [ ecx + 0x38 ] esi
mov ecx ebx
or ecx [ esp + 0x48 ]
and ecx edi
or ecx eax
lea eax [ edx - 0x70e44324 ]
add ecx esi
add ecx ebp
mov ebp [ esp + 0x48 ]
add eax ecx
ror ebp 0x2
mov ecx [ esp + 0x68 ]
mov edx eax
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x50 ]
rol edx 0x5
mov esi [ ecx + 0x4 ]
xor esi [ ecx + 0x3c ]
xor esi [ ecx + 0x30 ]
xor esi [ ecx + 0x1c ]
rol esi 0x1
mov [ ecx + 0x3c ] esi
mov ecx eax
or ecx ebp
and eax ebp
and ecx ebx
or ecx eax
lea eax [ edx - 0x70e44324 ]
add ecx esi
add ecx edi
mov edi [ esp + 0x50 ]
add eax ecx
ror edi 0x2
mov ecx [ esp + 0x68 ]
mov edx eax
rol edx 0x5
mov [ esp + 0x48 ] eax
mov esi [ ecx + 0x8 ]
xor esi [ ecx ]
xor esi [ ecx + 0x34 ]
xor esi [ ecx + 0x20 ]
rol esi 0x1
mov [ ecx ] esi
mov ecx edi
or ecx [ esp + 0x44 ]
and ecx ebp
mov eax edi
and eax [ esp + 0x44 ]
or ecx eax
lea eax [ edx - 0x70e44324 ]
add ecx esi
mov esi [ esp + 0x14 ]
add ecx ebx
mov ebx [ esp + 0x44 ]
add eax ecx
ror ebx 0x2
mov ecx [ esp + 0x68 ]
mov edx eax
mov [ esp + 0x40 ] eax
mov eax ebx
and eax [ esp + 0x48 ]
rol edx 0x5
xor esi [ ecx + 0x4 ]
xor esi [ ecx + 0x38 ]
xor esi [ ecx + 0x24 ]
rol esi 0x1
mov [ ecx + 0x4 ] esi
mov ecx ebx
or ecx [ esp + 0x48 ]
and ecx edi
or ecx eax
lea eax [ edx - 0x70e44324 ]
add ecx esi
mov esi [ esp + 0x3c ]
add ecx ebp
mov ebp [ esp + 0x48 ]
add eax ecx
ror ebp 0x2
mov ecx [ esp + 0x68 ]
mov edx eax
mov [ esp + 0x50 ] eax
mov eax ebp
and eax [ esp + 0x40 ]
rol edx 0x5
xor esi [ ecx + 0x8 ]
xor esi [ ecx + 0x3c ]
xor esi [ ecx + 0x28 ]
rol esi 0x1
mov [ ecx + 0x8 ] esi
mov ecx ebp
or ecx [ esp + 0x40 ]
and ecx ebx
or ecx eax
lea eax [ edx - 0x70e44324 ]
mov edx [ esp + 0x68 ]
add ecx esi
add ecx edi
mov esi [ esp + 0x3c ]
mov edi [ esp + 0x40 ]
add eax ecx
mov ecx [ esp + 0x14 ]
xor ecx [ edx ]
xor ecx [ edx + 0x2c ]
xor ecx [ edx + 0x14 ]
rol ecx 0x1
mov [ edx + 0xc ] ecx
mov edx eax
mov [ esp + 0x14 ] ecx
ror edi 0x2
mov [ esp + 0x4c ] eax
mov ecx edi
or ecx [ esp + 0x50 ]
mov eax edi
and eax [ esp + 0x50 ]
and ecx ebp
or ecx eax
rol edx 0x5
add ecx [ esp + 0x14 ]
add ecx ebx
mov ebx [ esp + 0x50 ]
ror ebx 0x2
lea eax [ edx - 0x70e44324 ]
add eax ecx
mov ecx [ esp + 0x68 ]
mov [ esp + 0x48 ] eax
xor esi [ ecx + 0x4 ]
xor esi [ ecx + 0x30 ]
mov edx eax
xor esi [ ecx + 0x18 ]
add ebp 0x8f1bbcdc
mov eax [ esp + 0x4c ]
rol esi 0x1
mov [ ecx + 0x10 ] esi
mov ecx eax
or ecx ebx
rol edx 0x5
and ecx edi
and eax ebx
or eax ecx
mov ecx [ esp + 0x68 ]
add eax esi
add eax ebp
mov ebp [ esp + 0x4c ]
add eax edx
ror ebp 0x2
mov esi [ ecx + 0x8 ]
mov edx eax
xor esi [ ecx + 0x34 ]
xor esi [ ecx + 0x1c ]
xor esi [ ecx + 0x14 ]
rol esi 0x1
mov [ ecx + 0x14 ] esi
mov ecx ebp
or ecx [ esp + 0x48 ]
and ecx ebx
mov [ esp + 0x44 ] eax
rol edx 0x5
mov eax ebp
and eax [ esp + 0x48 ]
or ecx eax
add ecx esi
add ecx edi
lea eax [ edx - 0x70e44324 ]
mov edx [ esp + 0x68 ]
add eax ecx
mov edi [ esp + 0x48 ]
mov [ esp + 0x14 ] eax
ror edi 0x2
mov ecx [ edx + 0xc ]
mov esi ecx
xor esi [ edx + 0x38 ]
xor esi [ edx + 0x20 ]
xor esi [ edx + 0x18 ]
mov [ esp + 0x18 ] ecx
mov ecx edi
or ecx [ esp + 0x44 ]
rol esi 0x1
and ecx ebp
mov [ edx + 0x18 ] esi
mov edx eax
rol edx 0x5
mov eax edi
and eax [ esp + 0x44 ]
or ecx eax
add ecx esi
add ecx ebx
lea eax [ edx - 0x70e44324 ]
mov edx [ esp + 0x68 ]
add eax ecx
mov ebx [ esp + 0x44 ]
ror ebx 0x2
mov [ esp + 0x10 ] eax
mov ecx [ edx + 0x10 ]
mov esi ecx
xor esi [ edx + 0x3c ]
xor esi [ edx + 0x24 ]
xor esi [ edx + 0x1c ]
mov [ esp + 0x1c ] ecx
mov ecx ebx
or ecx [ esp + 0x14 ]
rol esi 0x1
and ecx edi
mov [ edx + 0x1c ] esi
mov edx eax
mov eax ebx
rol edx 0x5
and eax [ esp + 0x14 ]
or ecx eax
mov eax [ esp + 0x14 ]
add ecx esi
ror eax 0x2
add ecx ebp
mov [ esp + 0x14 ] eax
lea ebp [ edx - 0x70e44324 ]
add ebp ecx
mov ecx [ esp + 0x68 ]
mov edx ebp
rol edx 0x5
mov esi [ ecx ]
xor esi [ ecx + 0x28 ]
xor esi [ ecx + 0x20 ]
xor esi [ ecx + 0x14 ]
rol esi 0x1
mov [ ecx + 0x20 ] esi
mov ecx eax
or ecx [ esp + 0x10 ]
and eax [ esp + 0x10 ]
and ecx ebx
or ecx eax
mov eax [ esp + 0x10 ]
add ecx esi
ror eax 0x2
add ecx edi
mov [ esp + 0x10 ] eax
lea edi [ edx - 0x70e44324 ]
add edi ecx
mov ecx [ esp + 0x68 ]
mov edx edi
rol edx 0x5
mov esi [ ecx + 0x4 ]
xor esi [ ecx + 0x2c ]
xor esi [ ecx + 0x24 ]
xor esi [ ecx + 0x18 ]
rol esi 0x1
mov [ ecx + 0x24 ] esi
mov ecx ebp
or ecx eax
mov eax ebp
and ecx [ esp + 0x14 ]
and eax [ esp + 0x10 ]
or ecx eax
ror ebp 0x2
mov eax [ esp + 0x68 ]
add ecx esi
add ecx ebx
mov [ esp + 0x50 ] ebp
lea ebx [ edx - 0x70e44324 ]
add ebx ecx
mov ecx ebp
mov esi [ eax + 0x8 ]
or ecx edi
xor esi [ eax + 0x30 ]
and ebp edi
xor esi [ eax + 0x28 ]
mov edx ebx
xor esi [ eax + 0x1c ]
and ecx [ esp + 0x10 ]
rol esi 0x1
or ecx ebp
add ecx esi
mov [ eax + 0x28 ] esi
add ecx [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
xor esi [ eax + 0x34 ]
xor esi [ eax + 0x2c ]
xor esi [ eax + 0x20 ]
rol edx 0x5
ror edi 0x2
rol esi 0x1
mov [ esp + 0x58 ] edi
lea ebp [ edx - 0x70e44324 ]
mov [ eax + 0x2c ] esi
add ebp ecx
mov ecx edi
mov edx ebp
or ecx ebx
rol edx 0x5
and ecx [ esp + 0x50 ]
mov eax edi
and eax ebx
ror ebx 0x2
or ecx eax
mov [ esp + 0x54 ] ebx
mov eax [ esp + 0x68 ]
add ecx esi
add ecx [ esp + 0x10 ]
lea esi [ edx - 0x70e44324 ]
mov edx [ esp + 0x1c ]
add esi ecx
mov ecx esi
xor edx [ eax + 0x38 ]
xor edx [ eax + 0x30 ]
xor edx [ eax + 0x24 ]
rol edx 0x1
mov [ eax + 0x30 ] edx
mov eax edi
xor eax ebx
rol ecx 0x5
xor eax ebp
ror ebp 0x2
add eax edx
add eax [ esp + 0x50 ]
lea edi [ ecx - 0x359d3e2a ]
mov [ esp + 0x50 ] ebp
mov ecx [ esp + 0x68 ]
add edi eax
mov edx [ ecx + 0x3c ]
xor edx [ ecx + 0x34 ]
mov eax [ ecx + 0x28 ]
xor edx eax
xor edx [ ecx + 0x14 ]
rol edx 0x1
mov [ ecx + 0x34 ] edx
mov ecx edi
mov [ esp + 0x44 ] eax
mov eax ebx
xor eax ebp
rol ecx 0x5
xor eax esi
ror esi 0x2
add eax edx
add eax [ esp + 0x58 ]
lea ebx [ ecx - 0x359d3e2a ]
mov ecx [ esp + 0x68 ]
add ebx eax
mov edx [ ecx ]
xor edx [ ecx + 0x38 ]
mov eax [ ecx + 0x2c ]
xor edx eax
xor edx [ ecx + 0x18 ]
rol edx 0x1
mov [ ecx + 0x38 ] edx
mov ecx ebx
mov [ esp + 0x40 ] eax
mov eax edi
xor eax ebp
rol ecx 0x5
xor eax esi
ror edi 0x2
add eax edx
add eax [ esp + 0x54 ]
lea ebp [ ecx - 0x359d3e2a ]
mov ecx [ esp + 0x68 ]
add ebp eax
mov edx [ ecx + 0x4 ]
xor edx [ ecx + 0x3c ]
mov eax [ ecx + 0x30 ]
xor edx eax
xor edx [ ecx + 0x1c ]
mov [ esp + 0x4c ] eax
mov eax edi
rol edx 0x1
xor eax ebx
mov [ ecx + 0x3c ] edx
xor eax esi
mov ecx ebp
add edx 0xca62c1d6
rol ecx 0x5
add eax edx
add eax [ esp + 0x50 ]
add ecx eax
mov edx [ esp + 0x68 ]
mov [ esp + 0x50 ] ecx
mov ecx [ esp + 0x68 ]
ror ebx 0x2
mov eax [ edx + 0x34 ]
mov edx [ edx + 0x8 ]
xor edx [ ecx ]
xor edx eax
mov [ esp + 0x48 ] eax
mov eax ecx
mov ecx [ esp + 0x50 ]
rol ecx 0x5
add ecx 0xca62c1d6
xor edx [ eax + 0x20 ]
rol edx 0x1
mov [ eax ] edx
mov eax edi
xor eax ebx
add edi 0xca62c1d6
xor eax ebp
ror ebp 0x2
add eax edx
mov edx [ esp + 0x18 ]
add eax esi
mov esi [ esp + 0x50 ]
add ecx eax
mov eax [ esp + 0x68 ]
mov [ esp + 0x58 ] ecx
rol ecx 0x5
xor edx [ eax + 0x4 ]
xor edx [ eax + 0x38 ]
xor edx [ eax + 0x24 ]
rol edx 0x1
mov [ eax + 0x4 ] edx
mov eax ebx
xor eax ebp
xor eax esi
ror esi 0x2
add eax edx
mov edx [ esp + 0x1c ]
add eax edi
mov edi [ esp + 0x58 ]
add ecx eax
mov eax [ esp + 0x68 ]
mov [ esp + 0x54 ] ecx
rol ecx 0x5
xor edx [ eax + 0x8 ]
xor edx [ eax + 0x3c ]
xor edx [ eax + 0x28 ]
rol edx 0x1
mov [ eax + 0x8 ] edx
mov eax ebp
xor eax esi
xor eax edi
ror edi 0x2
add eax edx
lea edx [ ecx - 0x359d3e2a ]
mov ecx [ esp + 0x68 ]
add eax ebx
mov ebx [ esp + 0x54 ]
add edx eax
mov eax [ esp + 0x18 ]
xor eax [ ecx ]
xor eax [ ecx + 0x2c ]
xor eax [ ecx + 0x14 ]
rol eax 0x1
mov [ ecx + 0xc ] eax
mov ecx edx
mov [ esp + 0x18 ] eax
mov eax ebx
xor eax esi
rol ecx 0x5
xor eax edi
add eax [ esp + 0x18 ]
add eax ebp
lea ebp [ ecx - 0x359d3e2a ]
add ebp eax
mov eax [ esp + 0x68 ]
ror ebx 0x2
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x1c ]
xor ecx eax
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x68 ]
xor ecx [ eax + 0x30 ]
xor ecx [ eax + 0x18 ]
rol ecx 0x1
mov [ eax + 0x10 ] ecx
mov eax ebx
xor eax edx
mov [ esp + 0x1c ] ecx
xor eax edi
ror edx 0x2
add eax [ esp + 0x1c ]
mov ecx ebp
add eax esi
mov [ esp + 0x58 ] edx
mov esi [ esp + 0x58 ]
rol ecx 0x5
add ecx 0xca62c1d6
add eax ecx
mov ecx [ esp + 0x68 ]
mov [ esp + 0x30 ] eax
mov edx [ ecx + 0x8 ]
xor edx [ ecx + 0x34 ]
xor edx [ ecx + 0x1c ]
xor edx [ ecx + 0x14 ]
rol edx 0x1
mov [ ecx + 0x14 ] edx
mov ecx eax
mov eax ebx
rol ecx 0x5
xor eax esi
add ecx 0xca62c1d6
xor eax ebp
ror ebp 0x2
add eax edx
mov [ esp + 0x58 ] ebp
add eax edi
mov edi [ esp + 0x68 ]
add eax ecx
mov [ esp + 0x14 ] eax
mov ecx eax
mov eax esi
rol ecx 0x5
mov edx [ edi + 0xc ]
xor eax ebp
xor edx [ edi + 0x38 ]
add esi 0xca62c1d6
xor edx [ edi + 0x20 ]
xor edx [ edi + 0x18 ]
lea ebp [ ecx - 0x359d3e2a ]
xor eax [ esp + 0x30 ]
rol edx 0x1
add eax edx
mov [ edi + 0x18 ] edx
mov edx [ edi + 0x10 ]
add eax ebx
xor edx [ edi + 0x3c ]
add ebp eax
xor edx [ edi + 0x24 ]
mov eax edi
mov ebx [ esp + 0x30 ]
mov ecx ebp
xor edx [ edi + 0x1c ]
ror ebx 0x2
mov [ esp + 0x30 ] ebx
xor ebx [ esp + 0x58 ]
xor ebx [ esp + 0x14 ]
ror [ esp + 0x14 ] 0x2
rol edx 0x1
add ebx edx
mov [ edi + 0x1c ] edx
mov edx [ eax ]
add ebx esi
xor edx [ eax + 0x28 ]
xor edx [ eax + 0x20 ]
rol ecx 0x5
add ebx ecx
xor edx [ eax + 0x14 ]
rol edx 0x1
mov edi ebx
mov [ eax + 0x20 ] edx
mov eax ebp
xor eax [ esp + 0x30 ]
add edx 0xca62c1d6
xor eax [ esp + 0x14 ]
add eax edx
rol edi 0x5
add eax [ esp + 0x58 ]
mov edx [ esp + 0x2c ]
add edi eax
mov eax [ esp + 0x68 ]
mov esi edi
ror ebp 0x2
rol esi 0x5
mov [ esp + 0x58 ] ebp
xor edx [ eax + 0x2c ]
xor edx [ eax + 0x24 ]
xor edx [ eax + 0x18 ]
rol edx 0x1
mov [ eax + 0x24 ] edx
add edx 0xca62c1d6
mov eax ebp
xor eax ebx
ror ebx 0x2
xor eax [ esp + 0x14 ]
add eax edx
mov [ esp + 0x54 ] ebx
add eax [ esp + 0x30 ]
add esi eax
mov eax [ esp + 0x68 ]
mov ecx esi
rol ecx 0x5
mov edx [ eax + 0x8 ]
xor edx [ esp + 0x4c ]
xor edx [ esp + 0x44 ]
xor edx [ eax + 0x1c ]
rol edx 0x1
mov [ eax + 0x28 ] edx
mov eax ebp
xor eax ebx
lea ebp [ ecx - 0x359d3e2a ]
xor eax edi
ror edi 0x2
add eax edx
mov [ esp + 0x50 ] edi
add eax [ esp + 0x14 ]
add ebp eax
mov eax [ esp + 0x68 ]
mov ecx ebp
rol ecx 0x5
mov edx [ eax + 0xc ]
xor edx [ esp + 0x48 ]
xor edx [ esp + 0x40 ]
xor edx [ eax + 0x20 ]
rol edx 0x1
mov [ eax + 0x2c ] edx
mov eax ebx
xor eax edi
lea ebx [ ecx - 0x359d3e2a ]
xor eax esi
ror esi 0x2
add eax edx
add eax [ esp + 0x58 ]
add ebx eax
mov [ esp + 0x58 ] esi
mov eax [ esp + 0x68 ]
mov ecx ebx
rol ecx 0x5
mov edx [ eax + 0x24 ]
xor edx [ eax + 0x10 ]
xor edx [ eax + 0x38 ]
xor edx [ esp + 0x4c ]
rol edx 0x1
mov [ eax + 0x30 ] edx
mov eax edi
xor eax esi
xor eax ebp
add eax edx
add eax [ esp + 0x54 ]
lea edi [ ecx - 0x359d3e2a ]
ror ebp 0x2
add edi eax
mov eax [ esp + 0x68 ]
mov ecx edi
rol ecx 0x5
mov edx [ eax + 0x28 ]
xor edx [ eax + 0x3c ]
xor edx [ esp + 0x48 ]
xor edx [ eax + 0x14 ]
rol edx 0x1
mov [ eax + 0x34 ] edx
mov eax ebx
xor eax esi
ror ebx 0x2
xor eax ebp
lea esi [ ecx - 0x359d3e2a ]
add eax edx
add eax [ esp + 0x50 ]
add esi eax
mov eax [ esp + 0x68 ]
mov ecx esi
rol ecx 0x5
mov edx [ eax + 0x2c ]
xor edx [ eax ]
xor edx [ eax + 0x38 ]
xor edx [ eax + 0x18 ]
rol edx 0x1
mov [ eax + 0x38 ] edx
mov eax ebx
xor eax edi
ror edi 0x2
xor eax ebp
add ebp 0xca62c1d6
add eax edx
lea edx [ ecx - 0x359d3e2a ]
add eax [ esp + 0x58 ]
mov ecx [ esp + 0x68 ]
add edx eax
mov eax [ esp + 0x2c ]
xor eax [ ecx + 0x3c ]
xor eax [ ecx + 0x1c ]
xor eax [ ecx + 0x30 ]
rol eax 0x1
mov [ ecx + 0x3c ] eax
mov ecx edx
mov [ esp + 0x2c ] eax
mov eax ebx
xor eax edi
rol ecx 0x5
xor eax esi
add ecx ebp
add eax [ esp + 0x2c ]
add eax ecx
ror esi 0x2
mov ecx [ esp + 0x60 ]
add [ ecx + 0xc ] edi
add [ ecx + 0x8 ] esi
add [ ecx ] eax
add [ ecx + 0x4 ] edx
add [ ecx + 0x10 ] ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4c
retn
sub_40c8f6
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
cmp [ esi + 0x5c ] 0x0
je r-xdata
xor ebp ebp
lea ebp [ esi + 0x60 ]
jmp r-xdata
mov eax edi
shr eax 0x1d
add [ esi + 0x18 ] eax
lea eax [ edx + edi ]
cmp eax 0x3f
jbe r-xdata
inc [ esi + 0x18 ]
mov eax [ esi + 0x14 ]
mov edx eax
mov edi [ esp + 0x1c ]
shr edx 0x3
and edx 0x3f
mov [ esp + 0x14 ] ebp
lea ecx [ eax + edi * 8 ]
mov eax edi
shl eax 0x3
mov [ esi + 0x14 ] ecx
cmp ecx eax
jae r-xdata
xor ebx ebx
push 0x40
pop ebx
sub ebx edx
lea eax [ esi + 0x1c ]
push ebx
push [ esp + 0x1c ]
add eax edx
push eax
call memcpy
push ebp
lea eax [ esi + 0x1c ]
push eax
push esi
call sub_40b607
add esp 0x18
lea ebp [ ebx + 0x3f ]
jmp r-xdata
cmp ebp edi
jb r-xdata
mov eax [ esp + 0x18 ]
push [ esp + 0x14 ]
add eax 0xffffffc1
add eax ebp
push eax
push esi
call sub_40b607
add esp 0xc
add ebx 0x40
add ebp 0x40
xor edx edx
jmp r-xdata
mov eax [ esp + 0x18 ]
sub edi ebx
add eax ebx
push edi
push eax
lea eax [ esi + 0x1c ]
add eax edx
push eax
call memcpy
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
retn
sub_40c9d7
push esi
push 0x9c
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
lea ecx [ esi + 0x44 ]
mov [ esi ] 0x80
push ecx
call sub_40cb30
pop ecx
mov eax esi
pop esi
retn 0x8
sub_40ca49
push esi
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
pop esi
retn
mov edx [ esp + 0xc ]
add edx 0x2
dec esi
shr esi 0x2
push edi
mov edi [ esp + 0xc ]
inc esi
movzx ecx [ edx + 0x1 ]
movzx eax [ edx ]
lea edx [ edx + 0x4 ]
shl ecx 0x8
or ecx eax
movzx eax [ edx - 0x5 ]
shl ecx 0x8
or ecx eax
movzx eax [ edx - 0x6 ]
shl ecx 0x8
or ecx eax
mov [ edi ] ecx
lea edi [ edi + 0x4 ]
dec esi
jne r-xdata
pop edi
sub_40ca8f
push esi
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
inc ecx
add edx 0x2
dec esi
shr esi 0x2
inc esi
mov al [ edx - 0x2 ]
mov [ ecx - 0x1 ] al
mov al [ edx - 0x1 ]
mov [ ecx ] al
lea ecx [ ecx + 0x4 ]
mov al [ edx ]
lea edx [ edx + 0x4 ]
mov [ ecx - 0x3 ] al
mov al [ edx - 0x3 ]
mov [ ecx - 0x2 ] al
dec esi
jne r-xdata
sub_40caca
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push 0x8
lea esi [ edi + 0x10 ]
push esi
push eax
call sub_40ca8f
mov ecx [ esi ]
add esp 0xc
shr ecx 0x3
and ecx 0x3f
push 0x38
pop eax
cmp ecx eax
jb r-xdata
sub eax ecx
push eax
push rw-data
push edi
call sub_40d272
push 0x8
lea eax [ ebp - 0x8 ]
push eax
push edi
call sub_40d272
push 0x10
push edi
push [ ebp + 0x8 ]
call sub_40ca8f
push 0x58
push 0x0
push edi
call memset
add esp 0x30
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x78
pop eax
sub_40cb58
sub esp 0x50
mov eax [ esp + 0x54 ]
mov edx [ esp + 0x58 ]
push ebx
push ebp
mov ecx [ eax ]
add edx 0x2
mov ebx [ eax + 0x4 ]
mov ebp [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push esi
push edi
push 0x10
mov [ esp + 0x14 ] ecx
lea esi [ esp + 0x24 ]
mov [ esp + 0x18 ] eax
pop edi
movzx ecx [ edx + 0x1 ]
movzx eax [ edx ]
lea edx [ edx + 0x4 ]
shl ecx 0x8
or ecx eax
movzx eax [ edx - 0x5 ]
shl ecx 0x8
or ecx eax
movzx eax [ edx - 0x6 ]
shl ecx 0x8
or ecx eax
mov [ esi ] ecx
lea esi [ esi + 0x4 ]
dec edi
jne r-xdata
mov esi [ esp + 0x14 ]
lea edi [ ebp + 0x242070db ]
mov edx [ esp + 0x10 ]
mov ecx ebx
not ecx
mov eax ebp
and ecx esi
and eax ebx
or ecx eax
add edx 0xd76aa478
add ecx [ esp + 0x20 ]
mov eax ebx
add edx ecx
add esi 0xe8c7b756
rol edx 0x7
add edx ebx
and eax edx
mov ecx edx
not ecx
and ecx ebp
or ecx eax
add ecx [ esp + 0x24 ]
add esi ecx
rol esi 0xc
add esi edx
mov ecx esi
mov eax esi
not ecx
and eax edx
and ecx ebx
add ebx 0xc1bdceee
or ecx eax
mov eax esi
add ecx [ esp + 0x28 ]
add edi ecx
ror edi 0xf
add edi esi
and eax edi
mov ecx edi
not ecx
and ecx edx
or ecx eax
mov eax edi
add ecx [ esp + 0x2c ]
add ebx ecx
ror ebx 0xa
add ebx edi
and eax ebx
mov ecx ebx
not ecx
and ecx esi
or ecx eax
mov eax ebx
add ecx 0xf57c0faf
add ecx [ esp + 0x30 ]
add edx ecx
rol edx 0x7
add edx ebx
mov ecx edx
and eax edx
not ecx
and ecx edi
or ecx eax
add ecx 0x4787c62a
add ecx [ esp + 0x34 ]
add esi ecx
rol esi 0xc
add esi edx
mov ecx esi
mov eax esi
not ecx
and eax edx
and ecx ebx
or ecx eax
add ecx 0xa8304613
add ecx [ esp + 0x38 ]
add edi ecx
ror edi 0xf
add edi esi
mov ecx edi
not ecx
and ecx edx
lea ebp [ edi - 0xa44f ]
mov eax esi
and eax edi
or ecx eax
mov eax edi
add ecx 0xfd469501
add ecx [ esp + 0x3c ]
add ebx ecx
ror ebx 0xa
add ebx edi
and eax ebx
mov ecx ebx
not ecx
and ecx esi
or ecx eax
mov eax ebx
add ecx 0x698098d8
add ecx [ esp + 0x40 ]
add edx ecx
rol edx 0x7
add edx ebx
and eax edx
mov ecx edx
not ecx
and ecx edi
or ecx eax
lea edi [ edx + 0x6b901122 ]
add ecx 0x8b44f7af
add ecx [ esp + 0x44 ]
add esi ecx
rol esi 0xc
add esi edx
mov ecx esi
mov eax esi
not ecx
and eax edx
and ecx ebx
or ecx eax
mov eax esi
add ecx [ esp + 0x48 ]
add ebp ecx
ror ebp 0xf
add ebp esi
mov ecx ebp
mov [ esp + 0x14 ] ebp
not ecx
and eax ebp
and ecx edx
or ecx eax
mov eax ebp
add ecx 0x895cd7be
add ecx [ esp + 0x4c ]
add ebx ecx
ror ebx 0xa
add ebx ebp
mov ecx ebx
mov [ esp + 0x18 ] ebx
not ecx
and eax ebx
and ecx esi
or ecx eax
mov eax ebx
add ecx [ esp + 0x50 ]
add edi ecx
rol edi 0x7
add edi ebx
mov ecx edi
mov [ esp + 0x1c ] edi
not ecx
and eax edi
and ecx ebp
lea ebp [ esi - 0x2678e6d ]
or ecx eax
add ecx [ esp + 0x54 ]
add ebp ecx
rol ebp 0xc
add ebp edi
mov esi ebp
not esi
mov ecx esi
and ecx ebx
mov eax ebp
mov ebx [ esp + 0x14 ]
and eax edi
or ecx eax
add ebx 0xa679438e
add ecx [ esp + 0x58 ]
mov eax ebp
add ebx ecx
ror ebx 0xf
add ebx ebp
and eax ebx
mov edx ebx
not edx
and esi ebx
mov ecx edx
and ecx edi
mov edi [ esp + 0x18 ]
or ecx eax
add edi 0x49b40821
add ecx [ esp + 0x5c ]
mov eax ebp
add edi ecx
ror edi 0xa
add edi ebx
and eax edi
and edx edi
or esi eax
mov ecx edi
add esi [ esp + 0x24 ]
not ecx
mov eax [ esp + 0x1c ]
add eax 0xf61e2562
add esi eax
mov eax ebx
rol esi 0x5
add esi edi
and eax esi
and ecx esi
or edx eax
add edx 0xc040b340
add edx [ esp + 0x38 ]
add edx ebp
rol edx 0x9
add edx esi
mov eax edx
and eax edi
or ecx eax
add ecx 0x265e5a51
add ecx [ esp + 0x4c ]
add ebx ecx
mov ecx esi
not ecx
rol ebx 0xe
and ecx edx
add ebx edx
mov eax ebx
and eax esi
or ecx eax
mov eax edx
add ecx 0xe9b6c7aa
add ecx [ esp + 0x20 ]
add edi ecx
mov ecx edx
not ecx
ror edi 0xc
and ecx ebx
add edi ebx
and eax edi
or ecx eax
mov eax ebx
add ecx 0xd62f105d
add ecx [ esp + 0x34 ]
add esi ecx
mov ecx ebx
rol esi 0x5
not ecx
add esi edi
and ecx edi
and eax esi
or ecx eax
add ecx 0x2441453
add ecx [ esp + 0x48 ]
add edx ecx
mov ecx edi
not ecx
rol edx 0x9
and ecx esi
add edx esi
mov eax edx
and eax edi
or ecx eax
add ecx 0xd8a1e681
add ecx [ esp + 0x5c ]
add ebx ecx
mov ecx esi
not ecx
rol ebx 0xe
and ecx edx
add ebx edx
mov eax ebx
mov ebp ebx
and eax esi
not ebp
or ecx eax
mov eax edx
add ecx 0xe7d3fbc8
add ecx [ esp + 0x30 ]
add edi ecx
mov ecx edx
not ecx
ror edi 0xc
and ecx ebx
add edi ebx
and eax edi
and ebp edi
or ecx eax
mov eax ebx
add ecx 0x21e1cde6
add ecx [ esp + 0x44 ]
add esi ecx
mov ecx edi
rol esi 0x5
not ecx
add esi edi
and eax esi
and ecx esi
or ebp eax
add ebp 0xc33707d6
add ebp [ esp + 0x58 ]
add ebp edx
lea edx [ esi - 0x561c16fb ]
rol ebp 0x9
add ebp esi
mov eax ebp
and eax edi
or ecx eax
add ecx 0xf4d50d87
add ecx [ esp + 0x2c ]
add ebx ecx
mov ecx esi
not ecx
rol ebx 0xe
and ecx ebp
add ebx ebp
mov eax ebx
and eax esi
or ecx eax
mov eax ebp
add ecx 0x455a14ed
add ecx [ esp + 0x40 ]
add edi ecx
mov ecx ebp
ror edi 0xc
not ecx
add edi ebx
and ecx ebx
and eax edi
mov [ esp + 0x1c ] edi
or ecx eax
add ecx [ esp + 0x54 ]
add edx ecx
mov esi ebx
rol edx 0x5
add edx edi
not esi
and esi edi
mov eax ebx
and eax edx
mov ecx edi
or esi eax
not ecx
add esi 0xfcefa3f8
and ecx edx
add esi [ esp + 0x28 ]
add esi ebp
rol esi 0x9
add esi edx
mov eax esi
and eax edi
lea edi [ ebx + 0x676f02d9 ]
or ecx eax
mov ebx [ esp + 0x1c ]
add ecx [ esp + 0x3c ]
add ebx 0x8d2a4c8a
add edi ecx
mov ecx edx
rol edi 0xe
not ecx
add edi esi
and ecx esi
mov eax edi
and eax edx
or ecx eax
mov eax esi
add ecx [ esp + 0x50 ]
xor eax edi
add ebx ecx
ror ebx 0xc
add ebx edi
xor eax ebx
add eax 0xfffa3942
add eax [ esp + 0x34 ]
add edx eax
mov eax edi
xor eax ebx
rol edx 0x4
add edx ebx
xor eax edx
add eax 0x8771f681
add eax [ esp + 0x40 ]
add esi eax
rol esi 0xb
add esi edx
mov eax esi
mov ecx esi
xor eax ebx
xor eax edx
add eax 0x6d9d6122
add eax [ esp + 0x4c ]
add edi eax
rol edi 0x10
add edi esi
xor ecx edi
mov eax ecx
xor eax edx
add eax 0xfde5380c
add eax [ esp + 0x58 ]
add ebx eax
mov eax edi
ror ebx 0x9
add ebx edi
xor ecx ebx
xor eax ebx
add ecx 0xa4beea44
add ecx [ esp + 0x24 ]
add edx ecx
rol edx 0x4
add edx ebx
xor eax edx
add eax 0x4bdecfa9
add eax [ esp + 0x30 ]
add esi eax
rol esi 0xb
lea ebp [ edx + 0x289b7ec6 ]
add esi edx
mov eax esi
mov ecx esi
xor eax ebx
xor eax edx
add eax 0xf6bb4b60
add eax [ esp + 0x3c ]
add edi eax
rol edi 0x10
add edi esi
xor ecx edi
mov eax ecx
xor eax edx
add eax 0xbebfbc70
add eax [ esp + 0x48 ]
add ebx eax
mov eax edi
ror ebx 0x9
add ebx edi
xor eax ebx
xor ecx ebx
add ecx [ esp + 0x54 ]
add ebp ecx
rol ebp 0x4
add ebp ebx
xor eax ebp
add eax 0xeaa127fa
add eax [ esp + 0x20 ]
add esi eax
rol esi 0xb
add esi ebp
mov eax esi
mov ecx esi
xor eax ebx
xor eax ebp
add eax 0xd4ef3085
add eax [ esp + 0x2c ]
add edi eax
rol edi 0x10
add edi esi
xor ecx edi
mov eax edi
mov edx ecx
xor edx ebp
add edx 0x4881d05
add edx [ esp + 0x38 ]
add edx ebx
ror edx 0x9
add edx edi
xor ecx edx
xor eax edx
add ecx 0xd9d4d039
add ecx [ esp + 0x44 ]
add ecx ebp
rol ecx 0x4
add ecx edx
xor eax ecx
add eax 0xe6db99e5
add eax [ esp + 0x50 ]
add esi eax
rol esi 0xb
add esi ecx
mov eax esi
xor eax edx
xor eax ecx
add eax 0x1fa27cf8
add eax [ esp + 0x5c ]
add edi eax
mov eax esi
rol edi 0x10
add edi esi
xor eax edi
xor eax ecx
add eax 0xc4ac5665
add eax [ esp + 0x28 ]
add edx eax
mov eax esi
ror edx 0x9
add edx edi
not eax
or eax edx
xor eax edi
add eax 0xf4292244
add eax [ esp + 0x20 ]
add ecx eax
mov eax edi
not eax
rol ecx 0x6
add ecx edx
or eax ecx
xor eax edx
add eax 0x432aff97
add eax [ esp + 0x3c ]
add esi eax
mov eax edx
not eax
rol esi 0xa
add esi ecx
or eax esi
xor eax ecx
add eax 0xab9423a7
add eax [ esp + 0x58 ]
add edi eax
mov eax ecx
not eax
rol edi 0xf
add edi esi
or eax edi
xor eax esi
add eax 0xfc93a039
add eax [ esp + 0x34 ]
add edx eax
mov eax esi
not eax
ror edx 0xb
add edx edi
or eax edx
xor eax edi
add eax 0x655b59c3
add eax [ esp + 0x50 ]
add ecx eax
mov eax edi
not eax
rol ecx 0x6
add ecx edx
or eax ecx
xor eax edx
add eax 0x8f0ccc92
add eax [ esp + 0x2c ]
add esi eax
mov eax edx
not eax
rol esi 0xa
add esi ecx
or eax esi
xor eax ecx
add eax 0xffeff47d
add eax [ esp + 0x48 ]
add edi eax
mov eax ecx
not eax
rol edi 0xf
add edi esi
or eax edi
xor eax esi
add eax 0x85845dd1
add eax [ esp + 0x24 ]
add edx eax
mov eax esi
not eax
ror edx 0xb
add edx edi
or eax edx
xor eax edi
add eax 0x6fa87e4f
add eax [ esp + 0x40 ]
add ecx eax
mov eax edi
rol ecx 0x6
add ecx edx
not eax
lea ebx [ esi - 0x1d31920 ]
or eax ecx
lea ebp [ edx + 0x4e0811a1 ]
xor eax edx
lea esi [ ecx - 0x8ac817e ]
add eax [ esp + 0x5c ]
add ebx eax
mov eax edx
not eax
rol ebx 0xa
add ebx ecx
or eax ebx
xor eax ecx
add eax 0xa3014314
add eax [ esp + 0x38 ]
lea edx [ ebx - 0x42c50dcb ]
add edi eax
mov eax ecx
not eax
rol edi 0xf
add edi ebx
or eax edi
xor eax ebx
add eax [ esp + 0x54 ]
add ebp eax
lea ecx [ edi + 0x2ad7d2bb ]
ror ebp 0xb
mov eax ebx
not eax
add ebp edi
or eax ebp
xor eax edi
add eax [ esp + 0x30 ]
add esi eax
mov eax edi
not eax
mov edi [ esp + 0x64 ]
rol esi 0x6
add esi ebp
or eax esi
xor eax ebp
add eax [ esp + 0x4c ]
add edx eax
mov eax ebp
not eax
rol edx 0xa
add edx esi
or eax edx
xor eax esi
add eax [ esp + 0x28 ]
add ecx eax
mov eax [ esp + 0x10 ]
add eax esi
rol ecx 0xf
add ecx edx
mov [ edi ] eax
add [ edi + 0x8 ] ecx
lea eax [ ebp - 0x14792c6f ]
not esi
or esi ecx
xor esi edx
add esi [ esp + 0x44 ]
add eax esi
ror eax 0xb
add eax [ edi + 0x4 ]
add eax ecx
add [ edi + 0xc ] edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
sub_40d272
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov eax [ esi + 0x10 ]
mov edx eax
shr edx 0x3
and edx 0x3f
lea ecx [ eax + ebx * 8 ]
mov eax ebx
shl eax 0x3
mov [ esi + 0x10 ] ecx
cmp ecx eax
jae r-xdata
push 0x40
mov eax ebx
shr eax 0x1d
add [ esi + 0x14 ] eax
pop edi
sub edi edx
cmp ebx edi
jb r-xdata
inc [ esi + 0x14 ]
xor edi edi
push ebp
push edi
push [ esp + 0x1c ]
lea eax [ esi + 0x18 ]
add eax edx
push eax
call sub_40d30d
lea eax [ esi + 0x18 ]
push eax
push esi
call sub_40cb58
add esp 0x14
lea ebp [ edi + 0x3f ]
jmp r-xdata
cmp ebp ebx
jb r-xdata
mov eax [ esp + 0x18 ]
add eax 0xffffffc1
add eax ebp
push eax
push esi
call sub_40cb58
pop ecx
add edi 0x40
add ebp 0x40
pop ecx
xor edx edx
pop ebp
jmp r-xdata
mov eax [ esp + 0x14 ]
sub ebx edi
add eax edi
push ebx
push eax
lea eax [ esi + 0x18 ]
add eax edx
push eax
call sub_40d30d
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_40d30d
mov edx [ esp + 0xc ]
test edx edx
je r-xdata
retn
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
sub esi ecx
mov al [ esi + ecx ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop esi
sub_40d340
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push [ esp + 0x14 ]
xor esi esi
call sub_40d430
mov edi eax
test edi edi
je r-xdata
push [ esp + 0x1c ]
push esi
call sub_40d4e0
test esi esi
je r-xdata
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x10
mov eax [ edi + 0x10 ]
push esi
call eax
mov eax [ edi + 0x4 ]
push 0x1
push [ esp + 0x1c ]
call eax
mov esi eax
test esi esi
je r-xdata
mov ebx r--data
push ebx
call sub_4121c0
mov ebx eax
mov edx ebx
lea eax [ edx + 0x1 ]
nop
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx eax
mov eax [ edi + 0x8 ]
push edx
push ebx
push esi
call eax
mov eax [ edi + 0xc ]
push esi
call eax
push ebx
call sub_4121b0
sub_40d3e0
push esi
push edi
push [ esp + 0x14 ]
xor esi esi
call sub_40d430
mov edi eax
test edi edi
je r-xdata
push [ esp + 0x18 ]
push esi
call sub_40d4e0
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
push 0x1
push esi
call eax
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
retn 0x10
mov eax [ edi + 0x10 ]
push esi
call eax
push [ esp + 0x10 ]
mov ecx [ edi + 0x8 ]
push [ esp + 0x10 ]
push esi
call ecx
mov eax [ edi + 0xc ]
push esi
call eax
sub_40d430
push esi
mov esi [ esp + 0x8 ]
xor edx edx
cmp esi 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jle r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax edx
pop esi
retn 0x4
mov eax rw-data
lea esp [ esp ]
mov eax rw-data
pop esi
retn 0x4
add eax 0x14
dec ecx
jne r-xdata
mov edx eax
cmp [ eax ] esi
jne r-xdata
sub_40d480
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp esi 0xffffffff
jne r-xdata
test ecx ecx
jle r-xdata
test ecx ecx
jmp r-xdata
lea eax [ ecx + ecx * 4 ]
inc ecx
mov [ eax * 4 + rw-data ] esi
pop edi
mov [ rw-data ] ecx
lea eax [ ecx + ecx * 4 ]
lea eax [ eax * 4 + rw-data ]
pop esi
retn 0x4
mov eax rw-data
mov edx ecx
je r-xdata
add eax 0x14
dec edx
jne r-xdata
mov edi eax
pop edi
xor eax eax
pop esi
retn 0x4
cmp [ eax ] esi
jne r-xdata
test edi edi
sub_40d4e0
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
test edi edi
je r-xdata
push [ esp + 0x10 ]
lea ecx [ esi + esi ]
push ecx
call sub_40e540
mov ecx eax
test esi esi
jle r-xdata
mov eax [ edi ]
cdq
and edx 0x7
lea esi [ edx + eax ]
sar esi 0x3
xor eax eax
pop edi
mov [ ecx ] ax
pop esi
retn 0x8
lea edx [ edi + 0x4 ]
mov edi edi
movzx eax [ edx ]
lea ecx [ ecx + 0x4 ]
shr eax 0x4
lea edx [ edx + 0x1 ]
movsx eax [ eax + r--data ]
mov [ ecx - 0x4 ] ax
movzx eax [ edx - 0x1 ]
and eax 0xf
movsx eax [ eax + r--data ]
mov [ ecx - 0x2 ] ax
dec esi
jne r-xdata
sub_40d546
push esi
mov esi [ rw-data ]
jmp r-xdata
test esi esi
jne r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
cmp [ esp + 0x8 ] 0x0
pop esi
je r-xdata
mov esi [ esi ]
mov eax [ esi + 0x8 ]
add eax [ esp + 0x8 ]
push eax
call ecx
pop ecx
retn 0x4
push [ esp + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40d5a8
push edi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x8 ]
add eax edi
pop edi
retn 0x4
push esi
push [ rw-data ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
push edi
push [ rw-data ]
call [ TlsSetValue@IAT ]
mov esi [ rw-data ]
jmp r-xdata
test esi esi
jne r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
push edi
push sub_40d546
call sub_4120a2
pop esi
mov esi [ esi ]
mov eax [ esi + 0x8 ]
add eax edi
push eax
call ecx
pop ecx
sub_40d613
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov ecx esi
push edi
and ecx 0x3
je r-xdata
mov eax [ rw-data ]
mov ebx [ TlsSetValue@IAT ]
test eax eax
jne r-xdata
push 0x4
pop eax
sub eax ecx
add esi eax
mov edi eax
add eax esi
push eax
push [ rw-data ]
mov [ rw-data ] eax
call [ TlsGetValue@IAT ]
push eax
push 0x8
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebp eax
push ebp
push [ rw-data ]
call ebx
mov esi [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
test esi esi
jne r-xdata
call [ TlsAlloc@IAT ]
push esi
push 0x8
push [ rw-data ]
mov [ rw-data ] eax
call [ HeapAlloc@IAT ]
push eax
push [ rw-data ]
call ebx
mov eax [ rw-data ]
push 0x14
push rw-data
call sub_40de32
pop ecx
pop ecx
mov [ eax ] edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ebx
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
lea ecx [ edi + ebp ]
push ecx
call esi
pop ecx
sub_40d6ca
push esi
mov esi [ esp + 0x8 ]
push edi
lea edi [ esi + 0x20 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esp + 0x10 ]
test ecx ecx
js r-xdata
push ecx
lea eax [ esi + 0x10 ]
push eax
call sub_40ddf2
pop ecx
pop ecx
cmp ecx [ esi + 0x8 ]
jge r-xdata
mov eax [ esi + 0xc ]
cmp [ eax + ecx * 4 ] 0x0
je r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn 0x8
push [ esi ]
push 0x0
push [ eax + ecx * 4 ]
call memset
add esp 0xc
jmp r-xdata
sub_40d719
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
lea ebx [ edi + 0x20 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov esi [ esp + 0x14 ]
test esi esi
js r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
test esi esi
je r-xdata
cmp esi [ edi + 0x8 ]
jge r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
mov ecx [ esi ]
neg ecx
sbb ecx ecx
and esi ecx
mov eax [ edi + 0xc ]
mov esi [ eax + esi * 4 ]
sub_40d758
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
lea ebx [ esi + 0x20 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov edi [ esp + 0x14 ]
cmp edi 0xffffffff
jne r-xdata
cmp edi [ esi + 0x8 ]
jl r-xdata
mov eax [ esi ]
add eax 0x8
push eax
lea eax [ esi + 0x10 ]
push eax
call sub_40de32
pop ecx
pop ecx
mov esi eax
jmp r-xdata
mov eax [ esi + 0xc ]
cmp [ eax + edi * 4 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
add eax edi
mov [ esi + 0x8 ] eax
shl eax 0x2
push eax
push [ esi + 0xc ]
push 0x8
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ esi + 0xc ] eax
push ebx
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
push [ esi ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx [ esi + 0xc ]
mov [ ecx + edi * 4 ] eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
mov esi [ eax + edi * 4 ]
push edi
call eax
jmp r-xdata
sub_40d7ec
push edi
push 0x38
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx [ esp + 0x8 ]
mov edi eax
and [ edi + 0x10 ] 0x0
mov [ edi ] ecx
mov ecx [ esp + 0x10 ]
mov [ edi + 0x14 ] ecx
mov ecx [ esp + 0xc ]
mov [ edi + 0x4 ] ecx
mov [ edi + 0x8 ] ecx
shl ecx 0x2
push ecx
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ edi + 0xc ] eax
lea eax [ edi + 0x20 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax edi
pop edi
retn 0xc
sub_40d83f
push ebp
push esi
push edi
mov edi [ esp + 0x10 ]
xor edx edx
mov ebp edx
cmp [ edi + 0x1c ] edx
je r-xdata
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
lea eax [ edi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
xor edx edx
push ebx
mov ebx [ edi + 0xc ]
sar ebx 0x4
and ebx 0xfffffff0
cmp ebx [ edi + 0x14 ]
jge r-xdata
mov ecx [ esi + 0x14 ]
test ecx ecx
jle r-xdata
cmp ebx [ edi + 0x18 ]
jle r-xdata
mov ebx [ edi + 0x14 ]
jmp r-xdata
mov ecx [ esi + 0x10 ]
lea ebp [ esi + 0x18 ]
mov eax [ edi + 0x10 ]
imul eax ecx
add ebp eax
lea eax [ ecx + 0x1 ]
mov [ esi + 0x10 ] eax
mov ebp [ esi + 0x8 ]
mov eax [ ebp ]
mov [ esi + 0x8 ] eax
lea eax [ ecx - 0x1 ]
mov [ esi + 0x14 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
imul eax ebx
add eax 0x18
push eax
push edx
push [ rw-data ]
call [ HeapAlloc@IAT ]
xor ecx ecx
mov esi eax
inc ecx
test esi esi
je r-xdata
mov ebx [ edi + 0x18 ]
cmp [ edi + 0x1c ] edx
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ esi + 0xc ]
jl r-xdata
cmp [ esi + 0x14 ] edx
jne r-xdata
mov eax [ edi + 0x10 ]
add eax 0x18
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov [ esi + 0xc ] ebx
jmp r-xdata
test ebp ebp
je r-xdata
lea eax [ edi + 0x20 ]
push eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
xor edx edx
xor ecx ecx
inc ecx
mov [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
xor edx edx
add [ edi + 0xc ] eax
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] edx
mov [ esi + 0x8 ] edx
cmp [ esi + 0xc ] ecx
jle r-xdata
xor eax eax
mov [ ebp ] esi
lea eax [ ebp + 0x4 ]
jmp r-xdata
mov eax [ esi ]
cmp esi [ edi + 0x4 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ edi ] esi
mov eax [ edi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ edi + 0x4 ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
mov [ ecx ] eax
mov [ edi + 0x4 ] eax
jmp r-xdata
lea ebp [ esi + 0x18 ]
jmp r-xdata
mov [ eax + 0x4 ] esi
mov eax [ esi ]
test eax eax
je r-xdata
mov [ eax + 0x4 ] esi
jmp r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ edi ] esi
mov eax [ esi ]
test eax eax
je r-xdata
pop ebx
sub_40d99d
push ebp
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebp ebp
cmp [ edi + 0x1c ] ebp
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea eax [ edi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ edi ]
test eax eax
je r-xdata
mov esi [ eax ]
push eax
push ebp
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax esi
test esi esi
jne r-xdata
mov [ edi ] ebp
mov [ edi + 0x4 ] ebp
mov [ edi + 0xc ] ebp
cmp [ edi + 0x1c ] ebp
je r-xdata
mov esi [ eax ]
push eax
push ebp
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax esi
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
lea eax [ edi + 0x20 ]
push eax
call [ LeaveCriticalSection@IAT ]
sub_40da0b
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x1c ] edi
je r-xdata
mov ecx [ esp + 0x10 ]
add ecx 0xfffffffc
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
mov [ ecx ] eax
inc [ edx + 0x14 ]
mov eax [ edx + 0x10 ]
mov [ edx + 0x8 ] ecx
cmp [ edx + 0x14 ] eax
jne r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp [ edx + 0x14 ] 0x1
jne r-xdata
cmp [ edx + 0xc ] 0x1
mov ecx [ edx ]
jne r-xdata
cmp [ esi + 0x1c ] edi
je r-xdata
cmp eax [ edx + 0xc ]
jl r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
pop edi
pop esi
retn 0x8
lea eax [ esi + 0x20 ]
push eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ edx ]
cmp edx [ esi + 0x4 ]
jne r-xdata
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx ]
cmp edx [ esi ]
jne r-xdata
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx ]
cmp edx [ esi ]
jne r-xdata
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ edx + 0x4 ]
mov [ ecx ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ecx ] eax
mov [ esi ] eax
jmp r-xdata
mov eax [ edx + 0xc ]
sub [ esi + 0xc ] eax
push edx
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
mov [ eax + 0x4 ] edx
mov eax [ esi + 0x4 ]
mov [ edx ] eax
mov [ edx + 0x4 ] edi
mov [ esi + 0x4 ] edx
mov eax [ edx ]
test eax eax
je r-xdata
sub_40dad9
mov eax [ esp + 0x10 ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
push 0x4
pop ecx
add ebx ecx
mov edi eax
xor ebp ebp
mov edx ebx
and edi 0x3
mov esi ebp
and edx 0x3
je r-xdata
test al 0x4
je r-xdata
sub ecx edx
add ebx ecx
push 0x38
push ebp
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
push sub_40dca2
push rw-data
call sub_40dd03
push rw-data
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov ebp [ esp + 0x20 ]
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x10
mov eax [ esp + 0x18 ]
mov [ esi + 0x14 ] eax
mov eax [ esp + 0x1c ]
mov [ esi + 0x18 ] eax
xor eax eax
inc eax
mov [ esi ] ebp
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0x10 ] ebx
cmp edi eax
je r-xdata
test eax eax
jne r-xdata
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x20 ]
push eax
call [ InitializeCriticalSection@IAT ]
test edi edi
je r-xdata
cmp [ eax + 0xc ] ebx
jne r-xdata
jmp r-xdata
mov [ esi + 0x1c ] ebp
jmp r-xdata
mov eax [ eax ]
cmp [ eax + 0x10 ] ebp
je r-xdata
push 0x18
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
inc [ eax + 0x14 ]
mov esi [ eax + 0x8 ]
test esi esi
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov eax ebp
and eax 0xfffffffb
push eax
push [ esp + 0x20 ]
lea eax [ ebx - 0x4 ]
push [ esp + 0x20 ]
push eax
call sub_40dad9
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
mov [ esi + 0x8 ] edi
and [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] 0x1
mov [ edi ] eax
test eax eax
je r-xdata
mov [ rw-data ] edi
mov [ eax + 0x4 ] edi
sub_40dc06
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
push esi
call sub_40d99d
cmp [ esi + 0x1c ] 0x0
je r-xdata
push ebp
mov ebp rw-data
push ebp
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x8 ]
dec [ eax + 0x14 ]
mov eax [ esi + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jg r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
lea eax [ esi + 0x20 ]
push eax
call [ DeleteCriticalSection@IAT ]
push ebp
call [ LeaveCriticalSection@IAT ]
pop ebp
jmp r-xdata
and [ esi + 0x8 ] 0x0
push esi
call sub_40dc06
mov ecx [ edi ]
test ecx ecx
je r-xdata
pop edi
pop esi
retn 0x4
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x4 ]
mov [ ecx + 0x4 ] eax
cmp [ rw-data ] edi
jne r-xdata
mov eax [ edi ]
mov [ ecx ] eax
push edi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ edi ]
mov [ rw-data ] eax
sub_40dcb5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
push esi
call sub_40dddb
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
push esi
call sub_40dd84
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call [ esi + 0x14 ]
sub_40dd03
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push r--data
xor ebx ebx
call [ LoadLibraryW@IAT ]
mov esi [ ebp + 0x8 ]
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x1
push esi
call [ InterlockedCompareExchange@IAT ]
sub eax 0x0
je r-xdata
push r--data
push edi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ ebp + 0xc ]
push 0x2
push esi
call [ InterlockedExchange@IAT ]
dec eax
jne r-xdata
push edi
call [ FreeLibrary@IAT ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push sub_40dce3
push esi
call eax
inc ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
cmp [ esi ] 0x2
jne r-xdata
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
sub_40dd84
mov ecx [ esp + 0x4 ]
push esi
push edi
mov edi [ esp + 0x10 ]
xor esi esi
test esi esi
jne r-xdata
cmp edx [ ecx + 0x8 ]
jge r-xdata
pop edi
mov eax esi
pop esi
retn 0x8
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
mov eax [ ecx + 0xc ]
mov eax [ eax + edx * 4 ]
test eax eax
je r-xdata
add ecx 0x20
push ecx
call [ LeaveCriticalSection@IAT ]
lea esi [ eax + 0x8 ]
mov [ edi ] esi
test esi esi
jne r-xdata
inc [ ecx + 0x18 ]
test esi esi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx + 0x18 ]
test edx edx
js r-xdata
mov esi eax
mov [ edi ] edx
sub_40ddf2
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
sub edx 0x8
mov eax [ edx ]
cmp [ ecx ] edx
jne r-xdata
mov ecx [ edx + 0x4 ]
mov [ ecx ] eax
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov [ ecx ] eax
mov eax [ edx ]
test eax eax
je r-xdata
push edx
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
retn
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
and [ eax + 0x4 ] 0x0
jmp r-xdata
sub_40de32
push [ esp + 0x8 ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
lea eax [ ecx + 0x8 ]
retn
mov edx [ esp + 0x4 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov [ edx ] ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
mov [ ecx ] eax
sub_40dea6
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
xor esi esi
push [ ebp ]
call sub_40dff9
mov edi [ esp + 0x14 ]
test edi edi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x14
push ebx
mov ebx [ esp + 0x14 ]
imul ebx edi
add ebx 0x18
push ebx
push esi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
pop ebx
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x20 ]
mov [ esi + 0x8 ] eax
lea eax [ ebx - 0x18 ]
push eax
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ecx
mov [ esi + 0xc ] ebp
mov [ esi ] 0x1
add esi 0x18
push 0x0
push esi
mov [ esp + 0x30 ] esi
call memset
add esp 0xc
mov [ ebp ] esi
mov ebp [ esp + 0x20 ]
push ebp
call sub_411a84
test eax eax
je r-xdata
test edi edi
jle r-xdata
mov ebx esi
mov esi [ esp + 0x14 ]
push ebp
push ebx
call sub_411eaf
add ebx esi
dec edi
jne r-xdata
mov esi [ esp + 0x24 ]
sub_40df4d
sub esp 0xc
mov edx [ esp + 0x20 ]
xor eax eax
push ebx
push esi
mov esi [ esp + 0x18 ]
xor ecx ecx
inc eax
mov [ esp + 0x8 ] ecx
mov [ esp + 0xc ] eax
mov ebx edx
test esi esi
jle r-xdata
push ebx
push [ esp + 0x28 ]
push [ esp + 0x28 ]
push eax
push [ esp + 0x2c ]
call sub_40dea6
mov ecx eax
mov [ ecx - 0x18 ] esi
push ebp
xor ebx ebx
mov [ esp + 0x1c ] esi
push edi
inc ebx
lea edi [ edx + 0x4 ]
imul eax [ esp + 0x14 ]
mov ebp ebx
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x14 ] eax
cmp ebx esi
jge r-xdata
xor ecx ecx
inc ecx
mov [ esp + 0x10 ] ecx
mov ebp [ esp + 0x30 ]
inc ebx
mov [ edi ] ebp
add edi 0x4
dec [ esp + 0x20 ]
jne r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ edi ]
test eax eax
jg r-xdata
pop edi
pop ebp
push 0x0
test ecx ecx
pop ecx
jne r-xdata
imul ecx [ edx + ebp * 4 + 0x4 ]
inc ebp
cmp ebp esi
jl r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x10 ]
pop esi
mov eax ecx
pop ebx
add esp 0xc
retn 0x14
mov ebx edx
sub_40dff9
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn 0x4
sub esi 0x18
push ebp
xor ebp ebp
cmp [ esi + 0x8 ] ebp
je r-xdata
mov eax [ esi + 0xc ]
push esi
push ebp
mov [ eax ] ebp
push [ rw-data ]
call [ HeapFree@IAT ]
pop ebp
push ebx
mov ebx ebp
push edi
lea edi [ esi + 0x18 ]
cmp [ esi + 0x10 ] ebp
jle r-xdata
pop edi
pop ebx
push [ esi + 0x8 ]
push edi
call sub_411daa
add edi [ esi + 0x4 ]
inc ebx
cmp ebx [ esi + 0x10 ]
jl r-xdata
sub_40e045
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
test esi esi
je r-xdata
pop esi
mov eax ebx
pop ebx
retn 0xc
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
pop edi
sub edi 0x18
push ebp
mov ebp [ esi - 0x18 ]
cmp ebp [ edi ]
jne r-xdata
pop ebp
cmp [ esp + 0x1c ] ebx
je r-xdata
cmp ebp 0x1
jle r-xdata
push [ edi + 0xc ]
push [ esi - 0x10 ]
push [ esi - 0x4 ]
push [ esi - 0x8 ]
push [ esi - 0x14 ]
call sub_40dea6
lea edi [ eax - 0x18 ]
mov [ edi ] ebp
mov ecx [ esi - 0x8 ]
cmp ecx [ edi + 0x10 ]
jne r-xdata
mov eax ebp
shl eax 0x2
push eax
mov eax [ esi - 0xc ]
add eax 0x4
push eax
mov eax [ edi + 0xc ]
add eax 0x4
push eax
call memcpy
add esp 0xc
cmp [ esi - 0x10 ] ebx
je r-xdata
mov eax [ esi - 0x14 ]
imul eax ecx
push eax
lea eax [ edi + 0x18 ]
push esi
push eax
call memcpy
add esp 0xc
add edi 0x18
mov ebp esi
test ecx ecx
jle r-xdata
xor ebx ebx
inc ebx
push ebp
push [ esi - 0x10 ]
push [ esi - 0x14 ]
push edi
call sub_411ad4
add ebp [ esi - 0x14 ]
add edi [ esi - 0x14 ]
inc ebx
cmp ebx [ esi - 0x8 ]
jl r-xdata
jmp r-xdata
sub_40e160
push ebp
mov ebp esp
sub esp 0xc
call [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
push eax
call [ SetLastError@IAT ]
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40e1a0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
add edx 0xa
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapReAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0xa
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0x1
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
add ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_40e640
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x8 ] edx
mov esp ebp
pop ebp
retn 0x8
sub_40e230
push ebp
mov ebp esp
push eax
push edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edx
pop eax
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapFree@IAT ]
sub_40e260
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapFree@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_40e2a0
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
push ecx
call [ TlsGetValue@IAT ]
test eax eax
jne r-xdata
call sub_40e110
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
push eax
push sub_40e260
call sub_4120a2
jmp r-xdata
pop ebp
retn
call sub_40e940
mov edx [ rw-data ]
push edx
call [ TlsGetValue@IAT ]
push eax
push sub_40e260
call sub_4120a2
sub_40e300
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0xffffffff
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40e540
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call wcslen
add esp 0x4
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40e640
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_40e360
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
add edx 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] edx
mov esp ebp
pop ebp
retn
sub_40e390
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x8 ]
mov esp ebp
pop ebp
retn
sub_40e3c0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
call wcslen
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + ecx + 0xa ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_40e640
sub_40e410
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call wcslen
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ eax + eax + 0x2 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapFree@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x4 ]
lea ecx [ eax + eax + 0xa ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapReAlloc@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + edx + 0xa ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_40e640
jmp r-xdata
sub_40e4c0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx ]
jb r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0x8 ]
cmp [ ebp + 0x8 ] ecx
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub ecx [ eax ]
add ecx 0x1
mov eax ecx
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_40e510
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
add eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40e540
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
sub edx 0x4
cmp [ ebp - 0x8 ] edx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ ebp + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
lea eax [ edx + ecx * 2 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
add eax 0x4000
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax 0xa
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapReAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
sub_40e5e0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp + 0x8 ]
mov [ ecx + eax ] dx
mov esp ebp
pop ebp
retn 0x4
sub_40e610
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
lea eax [ edx + eax - 0x1 ]
mov esp ebp
pop ebp
retn 0x4
sub_40e640
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x4 ] edx
xor eax eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] ax
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x4
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
sub edx 0x2
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jle r-xdata
sub_40e690
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
shl ecx 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
sub eax ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
mov esp ebp
pop ebp
retn 0x4
sub_40e6c0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0xc ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
movzx dx [ ecx ]
mov [ ebp - 0x4 ] dx
movzx eax [ ebp - 0x4 ]
and eax 0x80
jne r-xdata
movzx eax [ ebp - 0x4 ]
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and eax 0xf0
cmp eax 0xe0
jne r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
movzx eax [ edx ]
and eax 0xc0
cmp eax 0x80
jne r-xdata
jmp r-xdata
movzx edx [ ebp - 0x4 ]
and edx 0xf8
cmp edx 0xf0
jne r-xdata
mov ecx 0x1
shl ecx 0x0
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx ]
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov eax 0x1
shl eax 0x0
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax ]
test edx edx
je r-xdata
mov ecx 0x1
shl ecx 0x0
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx ]
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov eax 0x1
shl eax 0x1
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax ]
test edx edx
je r-xdata
mov eax 0x1
shl eax 0x0
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax ]
and edx 0xc0
cmp edx 0x80
jne r-xdata
mov ecx 0x1
shl ecx 0x1
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx ]
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov eax 0x1
shl eax 0x0
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax ]
and edx 0xc0
cmp edx 0x80
jne r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x3
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax 0x1
shl eax 0x0
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax ]
and edx 0xc0
cmp edx 0x80
jne r-xdata
mov eax 0x1
shl eax 0x1
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax ]
and edx 0xc0
cmp edx 0x80
jne r-xdata
jmp r-xdata
mov ecx 0x1
shl ecx 0x0
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx ]
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov eax 0x1
shl eax 0x1
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax ]
and edx 0xc0
cmp edx 0x80
jne r-xdata
mov eax 0x1
imul ecx eax 0x3
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx ]
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov ecx [ ebp + 0x8 ]
add ecx 0x2
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x3
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
jmp r-xdata
sub_40e940
push ebp
mov ebp esp
push ecx
push 0xc
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
push 0x10
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapAlloc@IAT ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x10
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ rw-data ]
push eax
call [ TlsSetValue@IAT ]
mov esp ebp
pop ebp
retn
sub_40e9a0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapFree@IAT ]
mov esp ebp
pop ebp
retn
sub_40e9e0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40ea20
push ebp
mov ebp esp
sub esp 0x8
call [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
push eax
call [ TlsGetValue@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x8 ]
push eax
call [ SetLastError@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_40ea60
sub esp 0x38
mov eax [ esp + 0x44 ]
push edi
mov edi [ esp + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x4c ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x40 ]
mov [ esp + 0x10 ] eax
mov eax [ edi ]
push 0x38
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x8 ]
push r--data
push eax
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
call sub_410320
add esp 0xc
test eax eax
jne r-xdata
pop edi
add esp 0x38
retn
push esi
lea eax [ esp + 0x8 ]
push 0x4
push eax
call sub_40eb40
mov esi eax
add esp 0x8
cmp esi 0x1
je r-xdata
mov eax [ esp + 0x1c ]
mov [ edi ] eax
lea eax [ esp + 0x8 ]
push eax
call sub_410210
add esp 0x4
pop esi
lea eax [ esp + 0x8 ]
push eax
call sub_410210
add esp 0x4
cmp esi 0x2
je r-xdata
pop esi
mov eax 0xfffffffd
pop edi
add esp 0x38
retn
cmp esi 0xfffffffb
jne r-xdata
mov eax esi
pop esi
pop edi
add esp 0x38
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
sub_40eb40
mov ecx [ esp + 0x4 ]
sub esp 0x34
push edi
test ecx ecx
je r-xdata
mov eax 0xfffffffe
pop edi
add esp 0x34
retn
mov edi [ ecx + 0x1c ]
mov [ esp + 0x14 ] edi
test edi edi
je r-xdata
cmp [ ecx + 0xc ] 0x0
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
cmp [ edi ] 0xb
jne r-xdata
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0xc ]
mov edx [ edi + 0x38 ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x10 ]
push ebx
mov ebx [ ecx ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x20 ] eax
xor eax eax
push ebp
mov ebp [ ecx + 0x4 ]
mov [ esp + 0x28 ] eax
mov eax [ edi ]
mov [ esp + 0x10 ] ebx
mov [ esp + 0xc ] edx
mov [ esp + 0x38 ] ebp
push esi
mov esi [ edi + 0x3c ]
cmp eax 0x1e
ja r-xdata
mov [ edi ] 0xc
pop esi
pop ebp
pop ebx
mov eax 0xfffffffe
pop edi
add esp 0x34
retn
lea ebx [ edi + 0x54 ]
mov [ esp + 0x40 ] ebx
mov ebx [ esp + 0x14 ]
jmp r-xdata
jmp [ eax * 4 + jump_table_410180 ]
mov eax [ edi + 0x8 ]
test eax eax
jne r-xdata
cmp esi 0x10
jae r-xdata
cmp esi 0x20
jae r-xdata
cmp esi 0x10
jae r-xdata
test [ edi + 0x10 ] 0x400
je r-xdata
test [ edi + 0x10 ] 0x400
je r-xdata
test [ edi + 0x10 ] 0x800
je r-xdata
mov eax 0xfffffffc
test [ edi + 0x10 ] 0x1000
je r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
cmp esi 0x20
jae r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
mov eax [ esp + 0x4c ]
cmp eax 0x5
je r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov ecx esi
and ecx 0x7
shr edx cl
sub esi ecx
mov [ esp + 0x10 ] edx
cmp esi 0x20
jae r-xdata
mov [ edi ] 0xf
mov eax [ edi + 0x40 ]
mov [ esp + 0x34 ] eax
test eax eax
je r-xdata
cmp esi 0xe
jae r-xdata
mov eax [ edi + 0x68 ]
cmp eax [ edi + 0x5c ]
jae r-xdata
mov eax [ edi + 0x64 ]
mov ecx [ edi + 0x68 ]
add eax [ edi + 0x60 ]
mov [ esp + 0x34 ] ecx
cmp ecx eax
jae r-xdata
mov [ edi ] 0x14
cmp ebp 0x6
jb r-xdata
mov ecx [ edi + 0x48 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x50 ]
mov ecx [ edi + 0x58 ]
mov [ esp + 0x34 ] eax
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x50 ]
dec eax
and eax edx
mov eax [ ecx + eax * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
cmp ecx esi
jbe r-xdata
mov ecx [ edi + 0x48 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov [ esp + 0x2c ] 0x1
jmp r-xdata
mov [ esp + 0x2c ] 0xfffffffd
jmp r-xdata
cmp esi 0x10
jae r-xdata
mov [ edi ] 0xc
jmp r-xdata
mov [ edi + 0x10 ] edx
cmp dl 0x8
je r-xdata
test ebp ebp
je r-xdata
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
lea ecx [ ecx ]
mov ecx [ edi + 0x20 ]
test ecx ecx
je r-xdata
lea ecx [ ecx ]
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
cmp esi 0x10
jae r-xdata
mov [ edi + 0x40 ] 0x0
mov [ edi ] 0x6
mov ecx [ edi + 0x40 ]
mov [ esp + 0x34 ] ecx
cmp ecx ebp
jbe r-xdata
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov ecx [ edi + 0x20 ]
test ecx ecx
je r-xdata
cmp esi 0x10
jae r-xdata
mov ecx edx
mov eax edx
shl eax 0x10
and ecx 0xff00
add ecx eax
mov eax edx
shr eax 0x8
shl ecx 0x8
and eax 0xff00
add eax ecx
shr edx 0x18
mov ecx [ esp + 0x48 ]
add eax edx
xor edx edx
mov [ edi + 0x18 ] eax
mov [ esp + 0x10 ] edx
xor esi esi
mov [ ecx + 0x30 ] eax
mov [ edi ] 0xa
test ebp ebp
je r-xdata
mov eax [ esp + 0x24 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax 0x2
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebp
mov [ edi + 0x3c ] esi
pop esi
pop ebp
pop ebx
mov [ edi + 0x38 ] edx
pop edi
add esp 0x34
retn
push 0x0
push 0x0
push 0x0
call sub_410e10
mov ecx [ esp + 0x54 ]
add esp 0xc
mov edx [ esp + 0x10 ]
mov [ edi + 0x18 ] eax
mov [ ecx + 0x30 ] eax
mov [ edi ] 0xb
mov edi [ esp + 0x10 ]
mov edx eax
jmp r-xdata
cmp eax 0x6
je r-xdata
cmp esi 0x3
jae r-xdata
mov ecx esi
mov [ edi ] 0x1a
and ecx 0x7
shr edx cl
sub esi ecx
mov [ esp + 0x10 ] edx
jmp r-xdata
mov eax edx
mov ecx edx
not eax
and ecx 0xffff
shr eax 0x10
cmp ecx eax
je r-xdata
nop
mov [ edi ] 0xb
jmp r-xdata
cmp eax ebp
jbe r-xdata
mov eax edx
sub esi 0xe
and eax 0x1f
shr edx 0x5
add eax 0x101
mov [ edi + 0x60 ] eax
mov eax edx
and eax 0x1f
shr edx 0x5
inc eax
mov [ edi + 0x64 ] eax
mov eax edx
and eax 0xf
shr edx 0x4
add eax 0x4
mov [ esp + 0x10 ] edx
cmp [ edi + 0x60 ] 0x11e
mov [ edi + 0x5c ] eax
ja r-xdata
nop
cmp [ edi + 0x68 ] 0x13
jae r-xdata
cmp esi 0x3
jae r-xdata
cmp [ edi ] 0x1d
je r-xdata
mov edi [ esp + 0x10 ]
lea esp [ esp ]
mov eax [ edi + 0x4c ]
mov ecx [ edi + 0x54 ]
mov [ esp + 0x34 ] eax
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x4c ]
dec eax
and eax edx
mov [ edi + 0x1bc4 ] 0x0
mov eax [ ecx + eax * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
cmp ecx esi
jbe r-xdata
cmp [ esp + 0x18 ] 0x102
jb r-xdata
mov eax [ edi + 0x40 ]
mov [ edi + 0x1bc8 ] eax
mov [ edi ] 0x16
cmp esi ecx
jae r-xdata
test al 0xf0
jne r-xdata
test ebp ebp
je r-xdata
mov [ edi ] 0x18
cmp esi ecx
jae r-xdata
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
sub eax ecx
mov ecx [ edi + 0x44 ]
cmp ecx eax
jbe r-xdata
mov ebx [ esp + 0x24 ]
mov al [ edi + 0x40 ]
inc [ esp + 0x24 ]
dec [ esp + 0x18 ]
mov [ ebx ] al
mov ebx [ esp + 0x14 ]
mov [ edi ] 0x14
jmp r-xdata
mov [ edi ] 0x1b
cmp esi 0x20
jae r-xdata
mov [ edi ] 0x1c
cmp [ edi + 0x10 ] 0x0
je r-xdata
test al 0x2
je r-xdata
mov edi edi
mov eax [ edi ]
cmp eax 0x1e
jbe r-xdata
test edx 0xe000
je r-xdata
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x10
jb r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
mov [ eax + 0x4 ] edx
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x20
jb r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
movzx eax dl
mov [ ecx + 0x8 ] eax
mov ecx edx
mov eax [ edi + 0x20 ]
shr ecx 0x8
mov [ eax + 0xc ] ecx
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x10
jb r-xdata
mov [ edi ] 0x5
mov [ eax + 0x10 ] 0x0
mov eax [ edi + 0x20 ]
mov [ edi + 0x40 ] edx
test eax eax
je r-xdata
test ebp ebp
je r-xdata
test ecx ecx
je r-xdata
mov ecx ebp
mov [ esp + 0x34 ] ebp
mov [ edi + 0x40 ] 0x0
mov [ edi ] 0x7
mov [ eax + 0x1c ] 0x0
xor ecx ecx
lea ecx [ ecx ]
mov edx [ esp + 0x10 ]
mov [ edi ] 0x8
mov [ eax + 0x24 ] 0x0
xor ecx ecx
push 0x0
push 0x0
push 0x0
call sub_410610
mov ecx [ esp + 0x54 ]
add esp 0xc
mov edx [ esp + 0x10 ]
mov [ edi + 0x18 ] eax
mov [ ecx + 0x30 ] eax
mov [ edi ] 0xb
jmp r-xdata
mov eax [ edi + 0x10 ]
sar eax 0x9
and eax 0x1
mov [ ecx + 0x2c ] eax
mov eax [ edi + 0x20 ]
mov [ eax + 0x30 ] 0x1
movzx eax [ edi + 0x18 ]
cmp edx eax
je r-xdata
mov edi edi
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x20
jb r-xdata
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x24 ]
mov ebx [ esp + 0x20 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax [ esp + 0x14 ]
mov [ ecx + 0x4 ] ebp
mov ebp [ esp + 0x28 ]
mov [ ecx ] eax
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x38 ] edi
mov [ ebx + 0x3c ] esi
jne r-xdata
mov eax edx
shr edx 0x1
and eax 0x1
mov [ edi + 0x4 ] eax
mov eax edx
and eax 0x3
cmp eax 0x3
ja r-xdata
test ebp ebp
je r-xdata
mov ecx [ esp + 0x48 ]
xor edx edx
mov [ edi + 0x40 ] ecx
xor esi esi
mov [ esp + 0x10 ] edx
cmp [ esp + 0x4c ] 0x6
mov [ edi ] 0xe
je r-xdata
mov ecx [ esp + 0x48 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x20
jb r-xdata
mov ecx [ esp + 0x18 ]
cmp eax ecx
jbe r-xdata
mov eax ebp
mov [ esp + 0x34 ] ebp
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
cmp [ edi + 0x64 ] 0x1e
ja r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0xe
jb r-xdata
lea eax [ edi + 0x530 ]
mov [ edi + 0x54 ] 0x7
lea ecx [ edi + 0x6c ]
mov [ edi + 0x4c ] eax
mov [ ecx ] eax
lea edx [ edi + 0x54 ]
lea eax [ edi + 0x2f0 ]
push eax
push edx
push ecx
push 0x13
lea eax [ edi + 0x70 ]
push eax
push 0x0
call sub_411130
add esp 0x18
mov [ esp + 0x2c ] eax
test eax eax
je r-xdata
mov eax [ edi + 0x68 ]
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
mov [ edi + eax * 2 + 0x70 ] cx
inc [ edi + 0x68 ]
cmp [ edi + 0x68 ] 0x13
jb r-xdata
mov eax [ edi + 0x68 ]
mov ecx edx
and ecx 0x7
shr edx 0x3
sub esi 0x3
mov [ esp + 0x10 ] edx
movzx eax [ eax * 2 + r--data ]
mov [ edi + eax * 2 + 0x70 ] cx
inc [ edi + 0x68 ]
mov eax [ edi + 0x68 ]
cmp eax [ edi + 0x5c ]
jb r-xdata
lea esp [ esp ]
mov edx [ esp + 0x10 ]
cmp [ edi + 0x270 ] 0x0
jne r-xdata
mov edx eax
shr edx 0x10
cmp dx 0x10
jae r-xdata
lea ebx [ ebx ]
test al al
je r-xdata
test ebp ebp
je r-xdata
mov eax [ esp + 0x24 ]
push [ esp + 0x28 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x1c ]
mov [ ecx + 0x10 ] eax
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebp
push ecx
mov [ edi + 0x38 ] edx
mov [ edi + 0x3c ] esi
call sub_411590
mov ecx [ esp + 0x50 ]
add esp 0x8
cmp [ edi ] 0xb
mov edx [ edi + 0x38 ]
mov esi [ edi + 0x3c ]
mov eax [ ecx + 0xc ]
mov ebx [ ecx ]
mov ebp [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x10 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0x10 ] edx
jne r-xdata
mov eax 0x1
sub esi ecx
shl eax cl
dec eax
and eax edx
shr edx cl
add [ edi + 0x40 ] eax
add [ edi + 0x1bc4 ] ecx
mov [ esp + 0x10 ] edx
lea ebx [ ebx ]
mov ebx [ esp + 0x14 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
add [ edi + 0x1bc4 ] ecx
sub esi ecx
shr edx cl
mov [ esp + 0x10 ] edx
test al 0x40
je r-xdata
mov ecx eax
mov ebx 0x1
shr ecx 0x8
mov edx eax
movzx edi cl
mov [ esp + 0x30 ] ecx
movzx ecx al
add ecx edi
shr eax 0x10
shl ebx cl
mov ecx edi
dec ebx
mov [ esp + 0x38 ] edx
and ebx [ esp + 0x10 ]
shr ebx cl
mov ecx [ esp + 0x34 ]
add ebx eax
mov eax [ ecx + ebx * 4 ]
mov ecx eax
shr ecx 0x8
movzx edi cl
mov ecx [ esp + 0x30 ]
movzx ecx cl
add edi ecx
cmp edi esi
jbe r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
mov ecx [ edi + 0x58 ]
add edx eax
mov eax [ edi + 0x50 ]
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
mov edx 0x1
mov [ esp + 0x14 ] ebx
shl edx cl
dec edx
and edx [ esp + 0x10 ]
mov eax [ eax + edx * 4 ]
mov ecx eax
mov edx [ esp + 0x10 ]
shr ecx 0x8
movzx ecx cl
cmp ecx esi
ja r-xdata
mov eax 0x1
sub esi ecx
shl eax cl
dec eax
and eax edx
shr edx cl
add [ edi + 0x44 ] eax
add [ edi + 0x1bc4 ] ecx
mov [ esp + 0x10 ] edx
lea ebx [ ebx ]
mov eax ebp
sub eax [ ecx + 0x10 ]
push eax
push [ ecx + 0xc ]
push ecx
call sub_410520
add esp 0xc
test eax eax
je r-xdata
cmp ebp [ ecx + 0x10 ]
je r-xdata
mov eax [ esp + 0x24 ]
sub eax ecx
mov [ esp + 0x38 ] eax
mov eax [ edi + 0x40 ]
sub ecx eax
cmp ecx [ edi + 0x2c ]
jbe r-xdata
mov eax [ esp + 0x28 ]
sub eax [ esp + 0x18 ]
add [ ecx + 0x14 ] eax
add [ edi + 0x1c ] eax
mov [ esp + 0x28 ] eax
test eax eax
je r-xdata
test ebp ebp
je r-xdata
cmp esi 0x20
jae r-xdata
mov eax [ edi + 0x20 ]
mov [ edi + 0x10 ] 0x0
test eax eax
je r-xdata
cmp edx 0x8b1f
jne r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x10
jb r-xdata
mov ecx [ edi + 0x20 ]
test ecx ecx
je r-xdata
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
mov ecx [ esp + 0x48 ]
xor edx edx
mov [ edi ] 0x3
mov [ esp + 0x10 ] edx
xor esi esi
jmp r-xdata
mov eax edx
mov [ esp + 0x1c ] dl
shr eax 0x8
mov [ esp + 0x1d ] al
mov eax edx
shr eax 0x10
mov [ esp + 0x1e ] al
lea eax [ esp + 0x1c ]
push 0x4
shr edx 0x18
push eax
mov [ esp + 0x27 ] dl
push [ edi + 0x18 ]
call sub_410610
add esp 0xc
mov [ edi + 0x18 ] eax
test ebp ebp
je r-xdata
xor edx edx
mov [ edi ] 0x4
mov [ esp + 0x10 ] edx
xor esi esi
mov [ esp + 0x1c ] dl
lea eax [ esp + 0x1c ]
push 0x2
shr edx 0x8
push eax
mov [ esp + 0x25 ] dl
push [ edi + 0x18 ]
call sub_410610
add esp 0xc
mov [ edi + 0x18 ] eax
test ebp ebp
je r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
mov [ eax + 0x14 ] edx
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x10
jb r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
mov edx [ edi + 0x20 ]
test edx edx
je r-xdata
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax + 0x1c ]
test edx edx
je r-xdata
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax + 0x24 ]
test edx edx
je r-xdata
xor ecx ecx
xor esi esi
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x48 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x10
jb r-xdata
mov ecx [ esp + 0x48 ]
shr edx 0x2
sub esi 0x3
mov [ esp + 0x10 ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4101fc ]
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x3
jb r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esp + 0x48 ]
test ebp ebp
je r-xdata
test eax eax
je r-xdata
mov eax ecx
mov [ esp + 0x34 ] eax
mov [ edi + 0x68 ] 0x0
mov [ edi ] 0x11
test ebp ebp
je r-xdata
mov ecx [ esp + 0x48 ]
mov [ edi + 0x68 ] 0x0
mov [ edi ] 0x12
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x10 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x3
jb r-xdata
lea eax [ edi + 0x530 ]
mov [ edi + 0x54 ] 0x9
lea ecx [ edi + 0x6c ]
mov [ edi + 0x4c ] eax
mov [ ecx ] eax
lea edx [ edi + 0x54 ]
lea eax [ edi + 0x2f0 ]
push eax
push edx
push ecx
push [ edi + 0x60 ]
lea eax [ edi + 0x70 ]
push eax
push 0x1
call sub_411130
add esp 0x18
mov [ esp + 0x2c ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x10 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
jne r-xdata
shr eax 0x8
movzx ecx al
mov eax [ esp + 0x34 ]
sub esi ecx
shr edi cl
mov ecx [ esp + 0x20 ]
mov [ esp + 0x10 ] edi
mov [ ecx + eax * 2 + 0x70 ] dx
inc [ ecx + 0x68 ]
jmp r-xdata
mov edx [ esp + 0x4c ]
movzx eax [ ebx ]
mov ecx esi
shl eax cl
mov edx 0x1
add edi eax
inc ebx
mov eax [ esp + 0x40 ]
add esi 0x8
dec ebp
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] ebx
mov ecx [ eax ]
mov eax [ esp + 0x20 ]
shl edx cl
dec edx
and edx edi
mov eax [ eax + 0x4c ]
mov eax [ eax + edx * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
mov [ esp + 0x38 ] eax
cmp ecx esi
ja r-xdata
mov ecx eax
shr ecx 0x8
movzx ecx cl
add [ edi + 0x1bc4 ] ecx
sub esi ecx
shr edx cl
mov ecx eax
shr ecx 0x10
mov [ esp + 0x10 ] edx
mov [ edi + 0x40 ] ecx
test al al
jne r-xdata
test al 0xf0
jne r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
mov ecx [ edi + 0x54 ]
add edx eax
mov eax [ edi + 0x4c ]
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
mov edx 0x1
mov [ esp + 0x14 ] ebx
shl edx cl
dec edx
and edx [ esp + 0x10 ]
mov eax [ eax + edx * 4 ]
mov ecx eax
mov edx [ esp + 0x10 ]
shr ecx 0x8
movzx ecx cl
cmp ecx esi
ja r-xdata
mov [ edi + 0x1bc4 ] 0xffffffff
jmp r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
mov ecx [ edi + 0x48 ]
add edx eax
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
mov [ esp + 0x14 ] ebx
cmp esi ecx
jb r-xdata
mov ecx eax
mov [ edi ] 0x17
shr ecx 0x10
movzx eax al
and eax 0xf
mov [ edi + 0x44 ] ecx
mov [ edi + 0x48 ] eax
mov ecx [ esp + 0x48 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
mov edi [ esp + 0x20 ]
movzx ecx dh
mov edx [ esp + 0x10 ]
sub esi ecx
shr edx cl
add [ edi + 0x1bc4 ] ecx
test ebp ebp
je r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
mov ecx [ edi + 0x48 ]
add edx eax
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
mov [ esp + 0x14 ] ebx
cmp esi ecx
jb r-xdata
mov ecx [ esp + 0x48 ]
mov [ ebx ] 0x1e
mov eax [ esp + 0x3c ]
sub eax [ ecx + 0x4 ]
sub ebp [ ecx + 0x10 ]
add [ ecx + 0x8 ] eax
add [ ecx + 0x14 ] ebp
add [ ebx + 0x1c ] ebp
cmp [ ebx + 0x8 ] 0x0
mov [ esp + 0x3c ] eax
je r-xdata
mov eax [ ebx ]
cmp eax 0x1d
jge r-xdata
mov ebx [ esp + 0x38 ]
sub eax ecx
sub [ esp + 0x18 ] ecx
mov [ edi + 0x40 ] eax
mov edi [ esp + 0x24 ]
sub ebx edi
lea esp [ esp ]
mov ecx [ esp + 0x18 ]
mov eax [ edi + 0x30 ]
cmp ecx eax
jbe r-xdata
cmp [ edi + 0x1bc0 ] 0x0
je r-xdata
cmp [ edi + 0x10 ] 0x0
mov ecx edx
mov eax [ esp + 0x18 ]
mov [ esp + 0x28 ] eax
jne r-xdata
push eax
mov eax [ esp + 0x28 ]
sub eax [ esp + 0x2c ]
cmp [ edi + 0x10 ] 0x0
push eax
push [ edi + 0x18 ]
je r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x20
jb r-xdata
cmp edx [ edi + 0x1c ]
je r-xdata
lea ecx [ ecx ]
test [ edi + 0x8 ] 0x1
je r-xdata
mov [ eax + 0x30 ] 0xffffffff
push 0x0
push 0x0
push 0x0
call sub_410610
mov [ edi + 0x18 ] eax
lea eax [ esp + 0x28 ]
push 0x2
push eax
mov [ esp + 0x30 ] 0x8b1f
push [ edi + 0x18 ]
call sub_410610
xor edx edx
mov [ edi + 0x18 ] eax
add esp 0x18
mov [ esp + 0x10 ] edx
xor esi esi
mov [ edi ] 0x1
jmp r-xdata
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x48 ]
test [ edi + 0x10 ] 0x200
je r-xdata
mov eax edx
shr eax 0x8
and eax 0x1
mov [ ecx ] eax
xor ecx ecx
xor esi esi
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov [ esp + 0x1c ] dl
lea eax [ esp + 0x1c ]
push 0x2
shr edx 0x8
push eax
mov [ esp + 0x25 ] dl
push [ edi + 0x18 ]
call sub_410610
add esp 0xc
mov [ edi + 0x18 ] eax
test [ edi + 0x10 ] 0x200
je r-xdata
mov eax [ edx + 0x10 ]
mov [ esp + 0x30 ] eax
test eax eax
je r-xdata
test [ edi + 0x10 ] 0x200
mov [ esp + 0x38 ] ecx
je r-xdata
cmp ecx ebp
jb r-xdata
mov edx [ edi + 0x40 ]
cmp edx [ eax + 0x20 ]
jae r-xdata
test [ edi + 0x10 ] 0x200
mov [ esp + 0x38 ] ecx
je r-xdata
cmp ecx ebp
jb r-xdata
mov edx [ edi + 0x40 ]
cmp edx [ eax + 0x28 ]
jae r-xdata
test ebp ebp
je r-xdata
mov [ edi ] 0xd
cmp [ esp + 0x4c ] 0x6
mov [ edi + 0x4c ] r--data
mov [ edi + 0x54 ] 0x9
mov [ edi + 0x50 ] r--data
mov [ edi + 0x58 ] 0x5
mov [ edi ] 0x13
jne r-xdata
mov ecx [ esp + 0x48 ]
shr edx 0x2
sub esi 0x3
mov [ edi ] 0x10
mov [ esp + 0x10 ] edx
jmp r-xdata
mov ecx [ esp + 0x48 ]
shr edx 0x2
sub esi 0x3
mov [ esp + 0x10 ] edx
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
push eax
push ebx
push [ esp + 0x2c ]
call memcpy
mov eax [ esp + 0x40 ]
add esp 0xc
sub [ esp + 0x18 ] eax
add ebx eax
add [ esp + 0x24 ] eax
sub ebp eax
sub [ edi + 0x40 ] eax
mov [ esp + 0x14 ] ebx
test ebp ebp
je r-xdata
mov eax [ edi + 0x6c ]
lea ecx [ edi + 0x6c ]
mov [ edi + 0x50 ] eax
lea edx [ edi + 0x58 ]
lea eax [ edi + 0x2f0 ]
mov [ edx ] 0x6
push eax
mov eax [ edi + 0x60 ]
push edx
push ecx
push [ edi + 0x64 ]
add eax 0x38
lea eax [ edi + eax * 2 ]
push eax
push 0x2
call sub_411130
mov edx eax
add esp 0x18
mov [ esp + 0x2c ] edx
test edx edx
je r-xdata
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x10 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
cmp [ esp + 0x3a ] 0x11
mov edx [ esp + 0x10 ]
movzx ecx ah
jne r-xdata
mov ecx eax
shr ecx 0x8
movzx ecx cl
add ecx 0x2
mov [ esp + 0x38 ] ecx
cmp esi ecx
jae r-xdata
mov eax [ ecx + 0x64 ]
mov edx [ ecx + 0x68 ]
add eax [ ecx + 0x60 ]
mov [ esp + 0x34 ] edx
cmp edx eax
jb r-xdata
test ebp ebp
je r-xdata
test al 0x20
je r-xdata
mov [ edi ] 0x19
jmp r-xdata
mov ecx eax
mov ebx 0x1
shr ecx 0x8
mov edx eax
movzx edi cl
mov [ esp + 0x30 ] ecx
movzx ecx al
add ecx edi
shr eax 0x10
shl ebx cl
mov ecx edi
dec ebx
mov [ esp + 0x38 ] edx
and ebx [ esp + 0x10 ]
shr ebx cl
mov ecx [ esp + 0x34 ]
add ebx eax
mov eax [ ecx + ebx * 4 ]
mov ecx eax
shr ecx 0x8
movzx edi cl
mov ecx [ esp + 0x30 ]
movzx ecx cl
add edi ecx
cmp edi esi
jbe r-xdata
test ebp ebp
je r-xdata
mov ebx [ esp + 0x14 ]
mov ecx esi
mov edi 0x1
add esi 0x8
dec ebp
movzx eax [ ebx ]
inc ebx
shl eax cl
add [ esp + 0x10 ] eax
movzx eax [ esp + 0x3a ]
mov [ esp + 0x14 ] ebx
movzx ebx dh
movzx ecx dl
add ecx ebx
shl edi cl
mov ecx ebx
dec edi
and edi [ esp + 0x10 ]
shr edi cl
add edi eax
mov eax [ esp + 0x20 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + edi * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
add ecx ebx
cmp ecx esi
ja r-xdata
test ebp ebp
je r-xdata
mov edi [ esp + 0x48 ]
test ebp ebp
je r-xdata
cmp eax 0x1a
jl r-xdata
mov al [ ebx + edi ]
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
mov ebx [ esp + 0x14 ]
mov [ esp + 0x24 ] edi
mov edi [ esp + 0x20 ]
cmp [ edi + 0x40 ] ecx
jne r-xdata
mov eax [ edi + 0x34 ]
sub eax ecx
add eax [ edi + 0x30 ]
sub ecx eax
mov eax [ edi + 0x34 ]
add eax [ edi + 0x28 ]
sub eax ecx
jmp r-xdata
mov ecx [ esp + 0x48 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
cmp ecx [ edi + 0x18 ]
je r-xdata
and ecx 0xff00
mov eax edx
shl eax 0x10
add ecx eax
mov eax edx
shr eax 0x8
and eax 0xff00
shl ecx 0x8
add ecx eax
mov eax edx
shr eax 0x18
add ecx eax
call sub_410e10
call sub_410610
jmp r-xdata
mov ecx [ esp + 0x48 ]
xor ecx ecx
xor esi esi
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x48 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi 0x20
jb r-xdata
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
movzx ecx dl
mov eax edx
shl ecx 0x8
xor edx edx
shr eax 0x8
add eax ecx
mov ecx 0x1f
div ecx
test edx edx
mov edx [ esp + 0x10 ]
jne r-xdata
xor edx edx
mov [ edi ] 0x2
mov [ esp + 0x10 ] edx
xor esi esi
jmp r-xdata
mov [ esp + 0x1c ] dl
lea eax [ esp + 0x1c ]
push 0x2
shr edx 0x8
push eax
mov [ esp + 0x25 ] dl
push [ edi + 0x18 ]
call sub_410610
add esp 0xc
mov [ edi + 0x18 ] eax
mov eax [ esp + 0x34 ]
add ebx eax
sub ebp eax
mov [ esp + 0x14 ] ebx
sub [ edi + 0x40 ] eax
push ecx
push ebx
push [ edi + 0x18 ]
call sub_410610
add esp 0xc
mov [ edi + 0x18 ] eax
mov eax [ edx + 0x14 ]
sub eax [ edi + 0x40 ]
mov edx [ edx + 0x18 ]
mov [ esp + 0x38 ] eax
add eax ecx
cmp eax edx
mov eax [ esp + 0x38 ]
jbe r-xdata
add ebx ecx
sub ebp ecx
mov [ esp + 0x14 ] ebx
test eax eax
je r-xdata
push ecx
push ebx
push [ edi + 0x18 ]
call sub_410610
mov ecx [ esp + 0x44 ]
add esp 0xc
mov [ edi + 0x18 ] eax
mov eax [ esp + 0x34 ]
movzx eax [ ecx + ebx ]
inc ecx
mov [ esp + 0x34 ] eax
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
mov eax [ eax + 0x1c ]
mov ebx [ esp + 0x34 ]
mov [ eax + edx ] bl
inc [ edi + 0x40 ]
mov ebx [ esp + 0x14 ]
add ebx ecx
sub ebp ecx
mov [ esp + 0x14 ] ebx
test eax eax
jne r-xdata
push ecx
push ebx
push [ edi + 0x18 ]
call sub_410610
mov ecx [ esp + 0x44 ]
add esp 0xc
mov [ edi + 0x18 ] eax
mov eax [ esp + 0x34 ]
movzx eax [ ecx + ebx ]
inc ecx
mov [ esp + 0x34 ] eax
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
mov ebx [ esp + 0x34 ]
mov [ eax + edx ] bl
inc [ edi + 0x40 ]
mov ebx [ esp + 0x14 ]
shr edx 0x2
sub esi 0x3
mov [ esp + 0x10 ] edx
jmp r-xdata
mov edx [ esp + 0x4c ]
mov [ edi ] 0x13
cmp edx 0x6
je r-xdata
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x10 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
lea edi [ ecx + 0x7 ]
mov [ esp + 0x38 ] ecx
cmp esi edi
jae r-xdata
lea edi [ ecx + 0x3 ]
mov [ esp + 0x38 ] ecx
cmp esi edi
jae r-xdata
mov edx [ esp + 0x10 ]
mov edi [ esp + 0x20 ]
movzx ecx ah
mov eax [ esp + 0x34 ]
sub esi ecx
shr edx cl
mov [ esp + 0x10 ] edx
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x40 ]
mov edx 0x1
mov ecx [ eax ]
mov eax [ esp + 0x20 ]
shl edx cl
dec edx
and edx edi
mov eax [ eax + 0x4c ]
mov eax [ eax + edx * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
mov [ esp + 0x38 ] eax
cmp ecx esi
jbe r-xdata
mov edi [ esp + 0x20 ]
test al 0x40
je r-xdata
mov [ edi + 0x1bc4 ] 0xffffffff
mov [ edi ] 0xb
jmp r-xdata
mov edi [ esp + 0x20 ]
mov ebx [ esp + 0x14 ]
movzx ecx dh
mov edx [ esp + 0x10 ]
shr edx cl
sub esi ecx
mov [ edi + 0x1bc4 ] ecx
lea esp [ esp ]
mov esi 0x100
cmp edx 0xe
je r-xdata
mov eax [ ecx + 0xc ]
push ebp
sub eax ebp
cmp [ ebx + 0x10 ] 0x0
push eax
push [ ebx + 0x18 ]
je r-xdata
cmp edx 0x4
je r-xdata
mov [ edi ] 0x14
jmp r-xdata
cmp ecx [ esp + 0x18 ]
jbe r-xdata
jmp r-xdata
mov [ esp + 0x38 ] eax
mov eax [ edi + 0x40 ]
cmp ecx eax
jbe r-xdata
xor edx edx
xor esi esi
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x48 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
mov ecx [ esp + 0x54 ]
add esp 0xc
mov edx [ esp + 0x10 ]
mov [ edi + 0x18 ] eax
mov [ ecx + 0x30 ] eax
test ebp ebp
je r-xdata
mov ecx [ esp + 0x48 ]
mov eax edx
and al 0xf
cmp al 0x8
je r-xdata
mov edx ecx
sub edx eax
jmp r-xdata
jmp r-xdata
mov edi [ esp + 0x10 ]
jmp r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x48 ]
shr edx cl
mov eax edx
and eax 0x7f
add eax 0xb
shr edx 0x7
mov [ esp + 0x30 ] eax
mov eax 0xfffffff9
lea esp [ esp ]
shr edx cl
mov eax edx
and eax 0x7
add eax 0x3
shr edx 0x3
mov [ esp + 0x30 ] eax
mov eax 0xfffffffd
jmp r-xdata
lea ecx [ ecx ]
mov ecx [ esp + 0x48 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
movzx eax [ edi + eax * 2 + 0x6e ]
mov [ esp + 0x38 ] eax
mov eax edx
and eax 0x3
shr edx 0x2
add eax 0x3
sub esi 0x2
mov [ esp + 0x30 ] eax
jmp r-xdata
test ebp ebp
je r-xdata
movzx eax al
and eax 0xf
mov [ edi ] 0x15
mov [ edi + 0x48 ] eax
mov ecx [ esp + 0x48 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx esi
mov edi 0x1
add esi 0x8
dec ebp
movzx eax [ ebx ]
inc ebx
shl eax cl
add [ esp + 0x10 ] eax
movzx eax [ esp + 0x3a ]
mov [ esp + 0x14 ] ebx
movzx ebx dh
movzx ecx dl
add ecx ebx
shl edi cl
mov ecx ebx
dec edi
and edi [ esp + 0x10 ]
shr edi cl
add edi eax
mov eax [ esp + 0x20 ]
mov eax [ eax + 0x4c ]
mov eax [ eax + edi * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
add ecx ebx
cmp ecx esi
ja r-xdata
cmp [ esp + 0x4c ] 0x4
jne r-xdata
test ebp ebp
je r-xdata
xor esi esi
jmp r-xdata
call sub_410e10
mov edi [ esp + 0x54 ]
add esp 0xc
mov [ ebx + 0x18 ] eax
mov [ edi + 0x30 ] eax
jmp r-xdata
call sub_410610
mov edi [ esp + 0x54 ]
add esp 0xc
mov [ ebx + 0x18 ] eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov ecx eax
mov eax [ edi + 0x24 ]
sub esi 0x4
shr edx 0x4
mov ecx edx
mov [ esp + 0x10 ] edx
and ecx 0xf
add ecx 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
add eax [ esp + 0x30 ]
push edx
push ebx
push eax
call memcpy
mov ecx [ esp + 0x40 ]
add esp 0xc
mov ecx [ esp + 0x30 ]
test ecx ecx
je r-xdata
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi edi
jb r-xdata
mov edi [ esp + 0x20 ]
sub eax ecx
add esi eax
mov [ esp + 0x38 ] 0x0
mov eax [ esp + 0x30 ]
movzx eax [ ebx ]
mov ecx esi
shl eax cl
inc ebx
add edx eax
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edx
dec ebp
cmp esi edi
jb r-xdata
mov ecx [ edi + 0x64 ]
add ecx [ edi + 0x60 ]
add eax [ esp + 0x34 ]
mov ebx [ esp + 0x14 ]
mov [ esp + 0x10 ] edx
cmp eax ecx
ja r-xdata
movzx edx [ ebx ]
mov ecx esi
shl edx cl
inc ebx
add edi edx
mov [ esp + 0x14 ] ebx
add esi 0x8
mov [ esp + 0x10 ] edi
dec ebp
cmp esi [ esp + 0x38 ]
jb r-xdata
test ebp ebp
je r-xdata
mov eax [ esp + 0x2c ]
pop esi
pop ebp
pop ebx
pop edi
add esp 0x34
retn
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
mov ecx [ ebx + 0x4 ]
neg ecx
sbb ecx ecx
xor eax eax
and ecx 0x40
cmp edx 0xb
setne al
add ecx esi
dec eax
and eax 0x80
add eax ecx
add eax [ ebx + 0x3c ]
cmp [ esp + 0x3c ] 0x0
mov [ edi + 0x2c ] eax
jne r-xdata
mov edx [ ebx ]
cmp edx 0x13
je r-xdata
cmp ecx eax
jbe r-xdata
mov [ edi + 0x24 ] ecx
mov ecx [ esp + 0x20 ]
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x38 ]
test ebp ebp
je r-xdata
mov ecx [ esp + 0x38 ]
test ebp ebp
je r-xdata
mov ecx [ esp + 0x38 ]
pop esi
pop ebp
pop ebx
pop edi
add esp 0x34
retn
pop esi
pop ebp
pop ebx
mov eax 0xfffffffb
pop edi
add esp 0x34
retn
push 0x0
mov eax 0x1
shl eax cl
push 0x0
push 0x0
mov [ edi + 0x14 ] eax
call sub_410e10
mov edx [ esp + 0x1c ]
add esp 0xc
mov ecx [ esp + 0x48 ]
shr edx 0x8
not edx
mov [ edi + 0x18 ] eax
and edx 0x2
or edx 0x9
mov [ ecx + 0x30 ] eax
mov [ edi ] edx
xor edx edx
mov [ esp + 0x10 ] edx
xor esi esi
jmp r-xdata
mov ecx [ esp + 0x48 ]
mov [ ecx + 0x18 ] r--data
mov [ edi ] 0x1d
jmp r-xdata
mov eax [ edi + 0x68 ]
mov [ edi + eax * 2 + 0x70 ] dx
inc [ edi + 0x68 ]
dec ecx
jne r-xdata
sub_410210
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax 0xfffffffe
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
mov eax [ esi + 0x24 ]
push [ esi + 0x28 ]
call eax
add esp 0x8
mov [ esi + 0x1c ] 0x0
xor eax eax
pop esi
retn
push eax
push [ esi + 0x28 ]
call ecx
add esp 0x8
sub_410260
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov eax 0xfffffffa
retn
cmp [ eax ] 0x31
jne r-xdata
cmp [ esp + 0x10 ] 0x38
jne r-xdata
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
cmp [ esi + 0x20 ] 0x0
mov [ esi + 0x18 ] 0x0
jne r-xdata
lea eax [ esi - 0x2 ]
pop esi
retn
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov [ esi + 0x20 ] sub_4119c0
mov [ esi + 0x28 ] 0x0
mov eax [ esi + 0x20 ]
push edi
push 0x1bcc
push 0x1
push [ esi + 0x28 ]
call eax
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
mov [ esi + 0x24 ] sub_4119e0
push ebx
push [ esp + 0x14 ]
mov [ esi + 0x1c ] edi
push esi
mov [ edi + 0x34 ] 0x0
call sub_410380
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
lea eax [ edi - 0x4 ]
pop edi
pop esi
retn
mov eax ebx
pop ebx
pop edi
pop esi
retn
mov ecx [ esi + 0x24 ]
push edi
push [ esi + 0x28 ]
call ecx
add esp 0x8
mov [ esi + 0x1c ] 0x0
sub_410340
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax 0xfffffffe
retn
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov [ ecx + 0x28 ] 0x0
mov [ ecx + 0x2c ] 0x0
mov [ ecx + 0x30 ] 0x0
mov [ esp + 0x4 ] eax
jmp sub_410410
sub_410380
push ebp
mov ebp [ esp + 0x8 ]
push edi
test ebp ebp
je r-xdata
pop edi
mov eax 0xfffffffe
pop ebp
retn
mov edi [ ebp + 0x1c ]
test edi edi
je r-xdata
push ebx
push esi
mov esi [ esp + 0x18 ]
test esi esi
jns r-xdata
mov ebx esi
sar ebx 0x4
inc ebx
cmp esi 0x30
jge r-xdata
xor ebx ebx
neg esi
jmp r-xdata
test esi esi
je r-xdata
and esi 0xf
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
cmp esi 0x8
jl r-xdata
push ebp
mov [ edi + 0x8 ] ebx
mov [ edi + 0x24 ] esi
call sub_410340
add esp 0x4
pop esi
pop ebx
pop edi
pop ebp
retn
cmp [ edi + 0x24 ] esi
je r-xdata
pop esi
pop ebx
pop edi
mov eax 0xfffffffe
pop ebp
retn
cmp esi 0xf
jle r-xdata
push eax
push [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
call eax
add esp 0x8
mov [ edi + 0x34 ] 0x0
sub_410410
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax 0xfffffffe
retn
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov [ ecx + 0x1c ] 0x0
mov [ eax + 0x14 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x18 ] 0x0
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
lea eax [ ecx + 0x530 ]
mov [ ecx ] 0x0
mov [ ecx + 0x6c ] eax
mov [ ecx + 0x50 ] eax
mov [ ecx + 0x4c ] eax
xor eax eax
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0xc ] 0x0
mov [ ecx + 0x14 ] 0x8000
mov [ ecx + 0x20 ] 0x0
mov [ ecx + 0x38 ] 0x0
mov [ ecx + 0x3c ] 0x0
mov [ ecx + 0x1bc0 ] 0x1
mov [ ecx + 0x1bc4 ] 0xffffffff
retn
and edx 0x1
mov [ eax + 0x30 ] edx
sub_4104b0
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x18 ]
xor esi esi
mov eax [ ebp ]
test edi edi
je r-xdata
mov [ ebp ] eax
mov eax esi
pop edi
pop esi
pop ebp
retn
push ebx
pop ebx
mov [ ebp ] eax
mov eax esi
pop edi
pop esi
pop ebp
retn
mov ecx [ esp + 0x18 ]
cmp eax 0x2
sbb edx edx
and edx 0xffffff01
mov bl [ esi + ecx ]
add edx 0xff
movzx ecx bl
cmp ecx edx
jne r-xdata
test bl bl
je r-xdata
inc eax
jmp r-xdata
mov ecx 0x4
sub ecx eax
mov eax ecx
xor eax eax
jmp r-xdata
inc esi
cmp esi edi
jb r-xdata
cmp eax 0x4
jae r-xdata
sub_410520
mov edx [ esp + 0x4 ]
push esi
push edi
mov edi 0x1
mov esi [ edx + 0x1c ]
cmp [ esi + 0x34 ] 0x0
jne r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov ecx [ esi + 0x24 ]
mov eax edi
shl eax cl
push edi
push eax
push [ edx + 0x28 ]
mov eax [ edx + 0x20 ]
call eax
add esp 0xc
mov [ esi + 0x34 ] eax
test eax eax
jne r-xdata
mov edi [ esi + 0x28 ]
push ebx
mov ebx [ esp + 0x18 ]
cmp ebx edi
jb r-xdata
mov ecx [ esi + 0x24 ]
shl edi cl
mov [ esi + 0x28 ] edi
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x2c ] 0x0
mov eax edi
pop edi
pop esi
retn
sub edi [ esi + 0x30 ]
cmp edi ebx
jbe r-xdata
mov eax [ esp + 0x14 ]
push edi
sub eax edi
push eax
push [ esi + 0x34 ]
call memcpy
mov eax [ esi + 0x28 ]
add esp 0xc
mov [ esi + 0x2c ] eax
xor eax eax
mov [ esi + 0x30 ] 0x0
pop ebx
pop edi
pop esi
retn
push ebp
mov ebp [ esp + 0x18 ]
mov eax ebp
sub eax ebx
push edi
push eax
mov eax [ esi + 0x34 ]
add eax [ esi + 0x30 ]
push eax
call memcpy
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
add [ esi + 0x30 ] edi
mov ecx [ esi + 0x28 ]
cmp [ esi + 0x30 ] ecx
jne r-xdata
push ebx
sub ebp ebx
push ebp
push [ esi + 0x34 ]
call memcpy
mov eax [ esi + 0x28 ]
add esp 0xc
mov [ esi + 0x30 ] ebx
mov [ esi + 0x2c ] eax
xor eax eax
pop ebp
pop ebx
pop edi
pop esi
retn
mov eax [ esi + 0x2c ]
cmp eax ecx
jae r-xdata
mov [ esi + 0x30 ] 0x0
pop ebp
pop ebx
pop edi
xor eax eax
pop esi
retn
add eax edi
mov [ esi + 0x2c ] eax
sub_410630
mov edx [ esp + 0x4 ]
mov eax edx
and eax 0xff00
mov ecx edx
shl ecx 0x10
add eax ecx
mov ecx edx
shl eax 0x8
shr ecx 0x8
push ebx
mov ebx [ esp + 0xc ]
and ecx 0xff00
add eax ecx
shr edx 0x18
push esi
mov esi [ esp + 0x14 ]
add eax edx
not eax
push edi
test esi esi
je r-xdata
lea edi [ ebx - 0x4 ]
cmp esi 0x20
jb r-xdata
test bl 0x3
je r-xdata
cmp esi 0x4
jb r-xdata
push ebp
mov ebp esi
shr ebp 0x5
movzx ecx [ ebx ]
mov edx eax
shr edx 0x18
inc ebx
xor edx ecx
shl eax 0x8
xor eax [ edx * 4 + r--data ]
dec esi
jne r-xdata
add edi 0x4
test esi esi
je r-xdata
mov ebx esi
shr ebx 0x2
nop
xor eax [ edi + 0x4 ]
mov edx eax
mov ecx eax
shr edx 0x10
shr ecx 0x8
and edx 0xff
and ecx 0xff
mov edx [ edx * 4 + r--data ]
xor edx [ ecx * 4 + r--data ]
mov ecx eax
movzx eax al
shr ecx 0x18
xor edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
xor edx [ edi + 0x8 ]
mov ecx edx
mov eax edx
shr eax 0x8
and eax 0xff
shr ecx 0x10
and ecx 0xff
mov ebx [ ecx * 4 + r--data ]
xor ebx [ eax * 4 + r--data ]
mov eax edx
shr eax 0x18
xor ebx [ eax * 4 + r--data ]
movzx eax dl
xor ebx [ eax * 4 + r--data ]
xor ebx [ edi + 0xc ]
mov ecx ebx
mov eax ebx
shr eax 0x8
and eax 0xff
shr ecx 0x10
and ecx 0xff
mov edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
mov eax ebx
shr eax 0x18
xor edx [ eax * 4 + r--data ]
movzx eax bl
xor edx [ eax * 4 + r--data ]
xor edx [ edi + 0x10 ]
mov ecx edx
mov eax edx
shr eax 0x8
and eax 0xff
shr ecx 0x10
and ecx 0xff
mov ebx [ ecx * 4 + r--data ]
xor ebx [ eax * 4 + r--data ]
mov eax edx
shr eax 0x18
xor ebx [ eax * 4 + r--data ]
movzx eax dl
xor ebx [ eax * 4 + r--data ]
xor ebx [ edi + 0x14 ]
mov ecx ebx
mov eax ebx
shr eax 0x8
shr ecx 0x10
and eax 0xff
and ecx 0xff
mov edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
mov eax ebx
shr eax 0x18
xor edx [ eax * 4 + r--data ]
movzx eax bl
xor edx [ eax * 4 + r--data ]
xor edx [ edi + 0x18 ]
mov ecx edx
mov eax edx
shr ecx 0x10
shr eax 0x8
and ecx 0xff
and eax 0xff
mov ebx [ ecx * 4 + r--data ]
xor ebx [ eax * 4 + r--data ]
mov eax edx
shr eax 0x18
xor ebx [ eax * 4 + r--data ]
sub esi 0x20
movzx eax dl
xor ebx [ eax * 4 + r--data ]
xor ebx [ edi + 0x1c ]
add edi 0x20
mov ecx ebx
mov eax ebx
shr eax 0x8
shr ecx 0x10
and eax 0xff
and ecx 0xff
mov edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
mov eax ebx
shr eax 0x18
xor edx [ eax * 4 + r--data ]
movzx eax bl
xor edx [ eax * 4 + r--data ]
xor edx [ edi ]
mov eax edx
mov ecx edx
shr eax 0x10
and eax 0xff
shr ecx 0x8
and ecx 0xff
mov eax [ eax * 4 + r--data ]
xor eax [ ecx * 4 + r--data ]
mov ecx edx
shr ecx 0x18
xor eax [ ecx * 4 + r--data ]
movzx ecx dl
xor eax [ ecx * 4 + r--data ]
dec ebp
jne r-xdata
pop ebp
not eax
mov edx eax
mov ecx eax
shl ecx 0x10
and edx 0xff00
add edx ecx
mov ecx eax
shr ecx 0x8
pop edi
shl edx 0x8
and ecx 0xff00
add edx ecx
shr eax 0x18
pop esi
add eax edx
pop ebx
retn
nop
xor eax [ edi + 0x4 ]
add edi 0x4
mov edx eax
mov ecx eax
shr edx 0x10
sub esi 0x4
and edx 0xff
shr ecx 0x8
and ecx 0xff
mov edx [ edx * 4 + r--data ]
xor edx [ ecx * 4 + r--data ]
mov ecx eax
shr ecx 0x18
movzx eax al
xor edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
mov eax edx
dec ebx
jne r-xdata
movzx ecx [ edi ]
lea edi [ edi + 0x1 ]
mov edx eax
shl eax 0x8
shr edx 0x18
xor edx ecx
xor eax [ edx * 4 + r--data ]
dec esi
jne r-xdata
sub_410930
sub esp 0x100
push ebp
mov ebp [ esp + 0x110 ]
push edi
mov edi [ esp + 0x118 ]
test edi edi
jg r-xdata
mov ecx 0x1
mov [ esp + 0x8 ] 0xedb88320
mov eax ecx
nop
jl r-xdata
mov [ esp + eax * 4 + 0x8 ] ecx
inc eax
add ecx ecx
cmp eax 0x20
jl r-xdata
push ebx
push esi
xor esi esi
mov eax [ esp + 0x10c ]
pop edi
pop ebp
add esp 0x100
retn
test ebp ebp
jne r-xdata
mov [ esp + esi + 0x90 ] edx
add esi 0x4
cmp esi 0x80
jl r-xdata
mov edi edi
mov eax [ esp + esi + 0x10 ]
lea ecx [ esp + 0x10 ]
xor edx edx
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
add ecx 0x4
shr eax 0x1
jne r-xdata
xor edx [ ecx ]
mov eax [ esp + esi + 0x90 ]
lea ecx [ esp + 0x90 ]
xor edx edx
test eax eax
je r-xdata
test al 0x1
je r-xdata
mov [ esp + esi + 0x10 ] edx
add esi 0x4
cmp esi 0x80
jl r-xdata
test al 0x1
je r-xdata
mov ebx [ esp + 0x114 ]
jmp r-xdata
add ecx 0x4
shr eax 0x1
jne r-xdata
xor edx [ ecx ]
xor esi esi
mov [ esp + esi + 0x90 ] edx
add esi 0x4
cmp esi 0x80
jl r-xdata
test al 0x1
je r-xdata
mov eax [ esp + esi + 0x10 ]
lea ecx [ esp + 0x10 ]
xor edx edx
test eax eax
je r-xdata
mov eax ebp
and eax 0x1
or eax 0x0
je r-xdata
add ecx 0x4
shr eax 0x1
jne r-xdata
xor edx [ ecx ]
shrd ebp edi 0x1
sar edi 0x1
mov eax ebp
or eax edi
je r-xdata
xor ecx ecx
lea eax [ esp + 0x90 ]
test ebx ebx
je r-xdata
xor ebx [ esp + 0x118 ]
pop esi
mov eax ebx
pop ebx
pop edi
pop ebp
add esp 0x100
retn
xor esi esi
jmp r-xdata
mov ebx ecx
test bl 0x1
je r-xdata
mov eax [ esp + esi + 0x90 ]
lea ecx [ esp + 0x90 ]
xor edx edx
test eax eax
je r-xdata
add eax 0x4
shr ebx 0x1
jne r-xdata
xor ecx [ eax ]
mov [ esp + esi + 0x10 ] edx
add esi 0x4
cmp esi 0x80
jl r-xdata
test al 0x1
je r-xdata
mov eax ebp
and eax 0x1
or eax 0x0
je r-xdata
add ecx 0x4
shr eax 0x1
jne r-xdata
xor edx [ ecx ]
shrd ebp edi 0x1
sar edi 0x1
mov ecx ebp
or ecx edi
jne r-xdata
xor ecx ecx
lea eax [ esp + 0x10 ]
test ebx ebx
je r-xdata
mov ebx ecx
test bl 0x1
je r-xdata
add eax 0x4
shr ebx 0x1
jne r-xdata
xor ecx [ eax ]
sub_410af0
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
not eax
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
push esi
cmp edi 0x20
jb r-xdata
test bl 0x3
je r-xdata
cmp edi 0x4
jb r-xdata
push ebp
mov ebp edi
shr ebp 0x5
movzx ecx [ ebx ]
inc ebx
xor ecx eax
shr eax 0x8
and ecx 0xff
xor eax [ ecx * 4 + r--data ]
dec edi
jne r-xdata
pop esi
test edi edi
je r-xdata
mov esi edi
shr esi 0x2
lea esp [ esp ]
xor eax [ ebx ]
mov edx eax
mov ecx eax
shr edx 0x10
shr ecx 0x8
and edx 0xff
and ecx 0xff
mov edx [ edx * 4 + r--data ]
xor edx [ ecx * 4 + r--data ]
mov ecx eax
movzx eax al
shr ecx 0x18
xor edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
xor edx [ ebx + 0x4 ]
add ebx 0x8
mov ecx edx
mov [ esp + 0x18 ] ebx
mov esi [ esp + 0x18 ]
mov eax edx
shr eax 0x8
and eax 0xff
shr ecx 0x10
and ecx 0xff
mov ebx [ ecx * 4 + r--data ]
xor ebx [ eax * 4 + r--data ]
mov eax edx
shr eax 0x18
xor ebx [ eax * 4 + r--data ]
movzx eax dl
xor ebx [ eax * 4 + r--data ]
xor ebx [ esi ]
mov ecx ebx
mov eax ebx
shr eax 0x8
and eax 0xff
shr ecx 0x10
and ecx 0xff
mov edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
mov eax ebx
shr eax 0x18
xor edx [ eax * 4 + r--data ]
movzx eax bl
xor edx [ eax * 4 + r--data ]
xor edx [ esi + 0x4 ]
mov ecx edx
mov eax edx
shr eax 0x8
and eax 0xff
shr ecx 0x10
and ecx 0xff
mov ebx [ ecx * 4 + r--data ]
xor ebx [ eax * 4 + r--data ]
mov eax edx
shr eax 0x18
xor ebx [ eax * 4 + r--data ]
movzx eax dl
xor ebx [ eax * 4 + r--data ]
xor ebx [ esi + 0x8 ]
mov ecx ebx
mov eax ebx
shr ecx 0x10
shr eax 0x8
and ecx 0xff
and eax 0xff
mov edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
mov eax ebx
shr eax 0x18
xor edx [ eax * 4 + r--data ]
movzx eax bl
xor edx [ eax * 4 + r--data ]
xor edx [ esi + 0xc ]
mov ecx edx
mov eax edx
shr ecx 0x10
and ecx 0xff
shr eax 0x8
and eax 0xff
mov ebx [ ecx * 4 + r--data ]
xor ebx [ eax * 4 + r--data ]
sub edi 0x20
mov eax edx
shr eax 0x18
xor ebx [ eax * 4 + r--data ]
movzx eax dl
xor ebx [ eax * 4 + r--data ]
xor ebx [ esi + 0x10 ]
add esi 0x14
mov ecx ebx
mov [ esp + 0x18 ] esi
shr ecx 0x10
mov eax ebx
shr eax 0x8
and ecx 0xff
and eax 0xff
mov edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
mov eax ebx
shr eax 0x18
xor edx [ eax * 4 + r--data ]
movzx eax bl
mov ebx esi
xor edx [ eax * 4 + r--data ]
xor edx [ ebx ]
add ebx 0x4
mov eax edx
mov ecx edx
shr eax 0x10
and eax 0xff
shr ecx 0x8
and ecx 0xff
mov eax [ eax * 4 + r--data ]
xor eax [ ecx * 4 + r--data ]
mov ecx edx
shr ecx 0x18
xor eax [ ecx * 4 + r--data ]
movzx ecx dl
xor eax [ ecx * 4 + r--data ]
dec ebp
jne r-xdata
pop ebp
pop edi
not eax
pop ebx
retn
lea esp [ esp ]
xor eax [ ebx ]
sub edi 0x4
mov edx eax
mov ecx eax
shr edx 0x10
add ebx 0x4
and edx 0xff
shr ecx 0x8
and ecx 0xff
mov edx [ edx * 4 + r--data ]
xor edx [ ecx * 4 + r--data ]
mov ecx eax
shr ecx 0x18
movzx eax al
xor edx [ ecx * 4 + r--data ]
xor edx [ eax * 4 + r--data ]
mov eax edx
dec esi
jne r-xdata
movzx ecx [ ebx ]
lea ebx [ ebx + 0x1 ]
xor ecx eax
shr eax 0x8
and ecx 0xff
xor eax [ ecx * 4 + r--data ]
dec edi
jne r-xdata
sub_410db0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
mov ebx ebp
push esi
mov esi [ esp + 0x10 ]
sub ebx esi
push edi
mov edi 0x20
mov [ esi ] edx
add esi 0x4
dec edi
jne r-xdata
test al 0x1
je r-xdata
mov eax [ ebx + esi ]
xor edx edx
mov ecx ebp
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
add ecx 0x4
shr eax 0x1
jne r-xdata
xor edx [ ecx ]
sub_410df0
mov ecx [ esp + 0x8 ]
xor eax eax
test ecx ecx
je r-xdata
retn
mov edx [ esp + 0x4 ]
mov edi edi
add edx 0x4
shr ecx 0x1
jne r-xdata
xor eax [ edx ]
test cl 0x1
je r-xdata
sub_410e10
mov ecx [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
and ecx 0xffff
shr esi 0x10
cmp ebx 0x1
jne r-xdata
push edi
mov edi [ esp + 0x14 ]
test edi edi
jne r-xdata
mov eax [ esp + 0x10 ]
movzx eax [ eax ]
add ecx eax
cmp ecx 0xfff1
jb r-xdata
cmp ebx 0x10
jae r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
retn
add esi ecx
cmp esi 0xfff1
jb r-xdata
sub ecx 0xfff1
cmp ebx 0x15b0
jb r-xdata
test ebx ebx
je r-xdata
shl esi 0x10
or esi ecx
mov eax esi
pop esi
pop ebx
retn
sub esi 0xfff1
test ebx ebx
je r-xdata
mov eax 0x5e6ea9af
mul ebx
push ebp
mov ebp edx
shr ebp 0xb
jmp r-xdata
cmp ecx 0xfff1
jb r-xdata
movzx eax [ edi ]
lea edi [ edi + 0x1 ]
add ecx eax
add esi ecx
dec ebx
jne r-xdata
shl esi 0x10
or esi ecx
pop edi
mov eax esi
pop esi
pop ebx
retn
cmp ebx 0x10
jb r-xdata
sub ebx 0x15b0
mov edx 0x15b
jmp r-xdata
mov eax 0x80078071
mul esi
pop edi
shr edx 0xf
mov eax edx
shl eax 0x4
sub eax edx
add eax esi
shl eax 0x10
pop esi
or eax ecx
pop ebx
retn
sub ecx 0xfff1
test ebx ebx
je r-xdata
mov edx ebx
shr edx 0x4
jmp r-xdata
movzx eax [ edi ]
add ecx eax
movzx eax [ edi + 0x1 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x2 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x3 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x4 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x5 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x6 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x7 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x8 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x9 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xa ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xb ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xc ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xd ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xe ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xf ]
add esi ecx
add edi 0x10
add ecx eax
add esi ecx
dec edx
jne r-xdata
mov eax 0x80078071
mul ecx
mov eax 0x80078071
shr edx 0xf
imul edx edx 0xffff000f
add ecx edx
mul esi
shr edx 0xf
imul eax edx 0xffff000f
add esi eax
movzx eax [ edi ]
lea edi [ edi + 0x1 ]
add ecx eax
add esi ecx
dec ebx
jne r-xdata
movzx eax [ edi ]
sub ebx 0x10
add ecx eax
movzx eax [ edi + 0x1 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x2 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x3 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x4 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x5 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x6 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x7 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x8 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0x9 ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xa ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xb ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xc ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xd ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xe ]
add esi ecx
add ecx eax
movzx eax [ edi + 0xf ]
add esi ecx
add edi 0x10
add ecx eax
add esi ecx
dec edx
jne r-xdata
mov eax 0x80078071
mul ecx
shr edx 0xf
imul eax edx 0xffff000f
add ecx eax
mov eax 0x80078071
mul esi
shr edx 0xf
imul eax edx 0xffff000f
add esi eax
dec ebp
jne r-xdata
pop ebp
sub_411080
mov eax [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
test eax eax
jg r-xdata
push ebx
push esi
push edi
push 0x0
push 0xfff1
push eax
push ebp
call sub_4051b0
mov ebx [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
imul eax eax 0xfff1
movzx ecx bx
mov edi ecx
shr ebx 0x10
sub ebp eax
movzx eax si
add eax 0xfff0
imul edi ebp
add ecx eax
shr esi 0x10
mov eax 0x80078071
mul edi
add edi 0xfff1
shr edx 0xf
imul eax edx 0xfff1
sub ebx eax
lea eax [ esi + ebx ]
sub eax ebp
add eax edi
pop edi
pop esi
pop ebx
cmp ecx 0xfff1
jb r-xdata
jl r-xdata
cmp eax 0x1ffe2
jb r-xdata
sub ecx 0xfff1
cmp ecx 0xfff1
jb r-xdata
or eax 0xffffffff
pop ebp
retn
test ebp ebp
jae r-xdata
cmp eax 0xfff1
jb r-xdata
sub eax 0x1ffe2
sub ecx 0xfff1
shl eax 0x10
or eax ecx
pop ebp
retn
sub eax 0xfff1
sub_411130
sub esp 0x78
xor eax eax
xor ecx ecx
push ebx
push ebp
mov ebp [ esp + 0x88 ]
push esi
mov esi [ esp + 0x90 ]
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
push edi
test esi esi
je r-xdata
mov ebx [ esp + 0x9c ]
mov edi 0xf
mov eax [ ebx ]
mov [ esp + 0x18 ] eax
lea ecx [ ecx ]
cmp eax edi
jbe r-xdata
dec edi
cmp edi 0x1
jae r-xdata
movzx eax [ ebp + ecx * 2 ]
inc ecx
inc [ esp + eax * 2 + 0x48 ]
cmp ecx esi
jb r-xdata
test edi edi
jne r-xdata
mov eax edi
mov [ esp + 0x18 ] eax
cmp [ esp + edi * 2 + 0x48 ] 0x0
jne r-xdata
mov ebx 0x1
mov [ esp + 0x34 ] ebx
cmp edi ebx
jbe r-xdata
mov edx [ esp + 0x98 ]
mov [ esp + 0x10 ] 0x140
mov eax [ esp + 0x10 ]
pop edi
mov ecx [ edx ]
pop esi
pop ebp
mov [ ecx ] eax
add [ edx ] 0x4
mov ecx [ edx ]
mov [ ecx ] eax
add [ edx ] 0x4
xor eax eax
mov [ ebx ] 0x1
pop ebx
add esp 0x78
retn
cmp eax ebx
jae r-xdata
jmp r-xdata
mov edx 0x1
mov ecx edx
mov [ esp + 0x18 ] ebx
cmp [ esp + ebx * 2 + 0x48 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x78
retn
inc ecx
cmp ecx 0xf
jbe r-xdata
mov [ esp + 0x34 ] ebx
inc ebx
cmp ebx edi
jb r-xdata
movzx eax [ esp + ecx * 2 + 0x48 ]
add edx edx
sub edx eax
js r-xdata
test edx edx
jle r-xdata
xor eax eax
mov ecx 0x2
mov [ esp + 0x6a ] ax
lea esp [ esp ]
cmp [ esp + 0x8c ] 0x0
je r-xdata
mov ax [ esp + ecx + 0x68 ]
add ax [ esp + ecx + 0x48 ]
mov [ esp + ecx + 0x6a ] ax
add ecx 0x2
cmp ecx 0x1e
jb r-xdata
xor ecx ecx
test esi esi
je r-xdata
cmp edi 0x1
jne r-xdata
mov ebp [ esp + 0x8c ]
mov eax ebp
mov esi [ esp + 0xa0 ]
sub eax 0x0
je r-xdata
mov edx [ esp + 0xa0 ]
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x24 ] 0x13
dec eax
je r-xdata
inc ecx
cmp ecx esi
jb r-xdata
movzx eax [ esp + eax * 2 + 0x68 ]
mov [ edx + eax * 2 ] cx
movzx eax [ ebp + ecx * 2 ]
inc [ esp + eax * 2 + 0x68 ]
cmp ebp 0x2
jne r-xdata
cmp eax 0x354
ja r-xdata
mov eax r--data
sub eax 0x202
mov [ esp + 0x2c ] eax
mov eax r--data
sub eax 0x202
mov [ esp + 0x28 ] eax
mov eax 0x100
mov [ esp + 0x24 ] eax
jmp r-xdata
or eax 0xffffffff
mov [ esp + 0x2c ] r--data
mov [ esp + 0x28 ] r--data
mov [ esp + 0x24 ] eax
jmp r-xdata
movzx eax [ ebp + ecx * 2 ]
test ax ax
je r-xdata
mov ebp [ esp + 0x24 ]
mov al bl
sub al [ esp + 0x14 ]
mov [ esp + 0x11 ] al
movzx eax [ esi ]
mov ecx eax
cmp ecx ebp
jge r-xdata
cmp eax 0x250
jbe r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x78
retn
jmp r-xdata
mov ecx [ esp + 0x98 ]
mov edx 0x1
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x3c ] 0xffffffff
mov eax [ ecx ]
mov ecx [ esp + 0x18 ]
shl edx cl
mov [ esp + 0x1c ] eax
mov eax edx
mov [ esp + 0x30 ] edx
mov [ esp + 0x38 ] eax
lea ecx [ eax - 0x1 ]
mov [ esp + 0x40 ] ecx
cmp ebp 0x1
jne r-xdata
jle r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
mov [ esp + 0x10 ] 0x60
xor eax eax
mov eax [ esp + 0x28 ]
mov al [ eax + ecx * 2 ]
mov [ esp + 0x10 ] al
mov eax [ esp + 0x2c ]
mov ax [ eax + ecx * 2 ]
jmp r-xdata
mov [ esp + 0x12 ] ax
mov ecx ebx
sub ecx [ esp + 0x14 ]
mov esi 0x1
mov eax [ esp + 0x20 ]
shl esi cl
mov ecx [ esp + 0x14 ]
shr eax cl
mov ecx [ esp + 0x1c ]
add eax edx
mov [ esp + 0x44 ] edx
lea ebp [ esi * 4 ]
lea ecx [ ecx + eax * 4 ]
mov eax [ esp + 0x10 ]
sub ecx ebp
mov [ ecx ] eax
sub edx esi
jne r-xdata
lea ecx [ ebx - 0x1 ]
mov edx 0x1
shl edx cl
mov ecx [ esp + 0x20 ]
test ecx edx
je r-xdata
test edx edx
je r-xdata
lea ebx [ ebx ]
xor edx edx
lea eax [ edx - 0x1 ]
and eax ecx
add edx eax
jmp r-xdata
shr edx 0x1
test ecx edx
jne r-xdata
mov eax [ esp + 0x18 ]
cmp ebx eax
jbe r-xdata
cmp ebx edi
je r-xdata
mov esi [ esp + 0xa0 ]
mov eax 0xffff
add esi 0x2
mov [ esp + 0x20 ] edx
add [ esp + ebx * 2 + 0x48 ] ax
mov [ esp + 0xa0 ] esi
jne r-xdata
mov edx [ esp + 0x30 ]
lea ebx [ ebx ]
mov ebp [ esp + 0x40 ]
and ebp edx
mov edx [ esp + 0x30 ]
cmp ebp [ esp + 0x3c ]
je r-xdata
test edx edx
je r-xdata
movzx eax [ esi ]
mov ecx [ esp + 0x90 ]
movzx ebx [ ecx + eax * 2 ]
mov [ esp + 0x34 ] ebx
mov edx [ esp + 0x14 ]
test edx edx
jne r-xdata
mov ecx [ esp + 0x98 ]
mov eax [ esp + 0x38 ]
shl eax 0x2
pop edi
add [ ecx ] eax
mov ecx [ esp + 0x98 ]
mov eax [ esp + 0x14 ]
pop esi
pop ebp
mov [ ecx ] eax
xor eax eax
pop ebx
add esp 0x78
retn
sub bl [ esp + 0x14 ]
xor eax eax
mov ecx [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x40
mov [ esp + 0x11 ] bl
mov [ esp + 0x12 ] ax
mov eax [ esp + 0x10 ]
mov [ ecx + edx * 4 ] eax
mov eax [ esp + 0x44 ]
sub ebx edx
mov ecx [ esp + 0x1c ]
add edx ebx
lea ecx [ ecx + eax * 4 ]
mov eax 0x1
mov [ esp + 0x1c ] ecx
mov ecx ebx
shl eax cl
cmp edx edi
jae r-xdata
mov edx eax
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x38 ]
mov ecx ebx
mov edx 0x1
shl edx cl
mov ecx [ esp + 0x8c ]
add eax edx
mov [ esp + 0x30 ] edx
mov [ esp + 0x38 ] eax
cmp ecx 0x1
jne r-xdata
lea esi [ esp + 0x48 ]
lea esi [ esi + edx * 2 ]
cmp ecx 0x2
jne r-xdata
cmp eax 0x354
jmp r-xdata
mov esi [ esp + 0xa0 ]
inc edx
inc ebx
add esi 0x2
add eax eax
cmp edx edi
jb r-xdata
mov ecx [ esp + 0x98 ]
mov [ esp + 0x3c ] ebp
mov eax [ ecx ]
mov [ eax + ebp * 4 ] bl
mov eax [ ecx ]
mov ecx [ esp + 0x18 ]
mov ebx [ esp + 0x34 ]
mov [ eax + ebp * 4 + 0x1 ] cl
mov ecx [ esp + 0x98 ]
mov eax [ esp + 0x1c ]
mov ecx [ ecx ]
sub eax ecx
sar eax 0x2
mov [ ecx + ebp * 4 + 0x2 ] ax
jmp r-xdata
cmp eax 0x250
ja r-xdata
movzx ecx [ esi ]
sub eax ecx
test eax eax
jle r-xdata
sub_411590
sub esp 0x38
push ebx
push ebp
push esi
push edi
mov ecx [ esp + 0x4c ]
mov ebx [ ecx + 0x1c ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
dec edx
mov esi [ ecx + 0xc ]
add eax 0xfffffffb
add eax edx
mov ebp [ ebx + 0x3c ]
mov [ esp + 0x38 ] eax
dec esi
mov eax [ ecx + 0x10 ]
mov ecx eax
sub ecx [ esp + 0x50 ]
add eax 0xfffffeff
add eax esi
mov [ esp + 0x1c ] ebx
mov [ esp + 0x14 ] eax
add ecx esi
mov eax [ ebx + 0x28 ]
mov [ esp + 0x30 ] eax
mov eax [ ebx + 0x2c ]
mov [ esp + 0x44 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp + 0x20 ] eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x34 ] eax
mov eax [ ebx + 0x4c ]
mov [ esp + 0x28 ] eax
mov eax [ ebx + 0x50 ]
mov [ esp + 0x2c ] eax
mov eax 0x1
mov [ esp + 0x18 ] eax
mov [ esp + 0x40 ] ecx
mov ecx [ ebx + 0x54 ]
shl [ esp + 0x18 ] cl
mov ecx [ ebx + 0x58 ]
dec [ esp + 0x18 ]
shl eax cl
dec eax
mov [ esp + 0x10 ] edx
mov edi [ ebx + 0x38 ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x28 ]
and eax edi
mov ebx [ ecx + eax * 4 ]
mov eax ebx
shr eax 0x8
movzx ecx al
shr edi cl
sub ebp ecx
movzx edx bl
test bl bl
je r-xdata
movzx eax [ edx + 0x1 ]
mov ecx ebp
shl eax cl
add edx 0x2
add edi eax
mov [ esp + 0x10 ] edx
lea ecx [ ebp + 0x8 ]
movzx eax [ edx ]
shl eax cl
add edi eax
add ebp 0x10
inc esi
shr ebx 0x10
mov [ esi ] bl
jmp r-xdata
test dl 0x10
jne r-xdata
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
cmp edx [ esp + 0x38 ]
jae r-xdata
shr ebx 0x10
and edx 0xf
je r-xdata
test dl 0x40
jne r-xdata
mov eax ebp
sub ebx esi
shr eax 0x3
sub edx eax
shl eax 0x3
sub ebp eax
mov eax 0x1
mov ecx ebp
shl eax cl
mov ecx [ esp + 0x4c ]
dec eax
and edi eax
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
lea eax [ esi + 0x1 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x38 ]
sub eax edx
add eax 0x5
add ebx 0x101
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x1c ]
mov [ ecx + 0x10 ] ebx
mov [ eax + 0x38 ] edi
pop edi
pop esi
mov [ eax + 0x3c ] ebp
pop ebp
pop ebx
add esp 0x38
retn
cmp esi ebx
jb r-xdata
cmp ebp 0xf
jae r-xdata
cmp ebp edx
jae r-xdata
mov eax [ esp + 0x1c ]
test dl 0x20
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
je r-xdata
mov ecx edx
shr ebx 0x10
mov eax 0x1
shl eax cl
mov ecx [ esp + 0x28 ]
dec eax
and eax edi
add eax ebx
mov ebx [ ecx + eax * 4 ]
mov eax ebx
shr eax 0x8
movzx ecx al
shr edi cl
sub ebp ecx
movzx edx bl
test bl bl
jne r-xdata
cmp ebp 0xf
jae r-xdata
jmp r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x2c ]
and eax edi
mov edx [ ecx + eax * 4 ]
mov eax edx
shr eax 0x8
movzx ecx al
mov [ esp + 0x50 ] edx
sub ebp ecx
movzx edx dl
shr edi cl
test dl 0x10
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx ebp
movzx eax [ edx + 0x1 ]
add edx 0x2
shl eax cl
lea ecx [ ebp + 0x8 ]
add edi eax
mov [ esp + 0x10 ] edx
movzx eax [ edx ]
shl eax cl
add edi eax
add ebp 0x10
mov ecx edx
mov eax 0x1
shl eax cl
dec eax
and eax edi
shr edi cl
add ebx eax
sub ebp edx
mov eax [ esp + 0x10 ]
mov ecx ebp
inc eax
mov [ esp + 0x10 ] eax
movzx eax [ eax ]
shl eax cl
add edi eax
add ebp 0x8
mov ecx [ esp + 0x4c ]
mov [ ecx + 0x18 ] r--data
jmp r-xdata
mov [ eax ] 0xb
jmp r-xdata
shr [ esp + 0x50 ] 0x10
and edx 0xf
cmp ebp edx
jae r-xdata
test dl 0x40
jne r-xdata
mov [ eax ] 0x1d
mov ecx edx
mov eax 0x1
shl eax cl
sub ebp edx
dec eax
and eax edi
shr edi cl
add [ esp + 0x50 ] eax
mov eax esi
sub eax [ esp + 0x40 ]
mov edx [ esp + 0x50 ]
mov [ esp + 0x24 ] edi
cmp edx eax
jbe r-xdata
mov eax [ esp + 0x10 ]
mov ecx ebp
inc eax
add ebp 0x8
mov [ esp + 0x10 ] eax
movzx eax [ eax ]
shl eax cl
add edi eax
cmp ebp edx
jae r-xdata
mov ecx [ esp + 0x4c ]
mov eax [ esp + 0x1c ]
mov [ ecx + 0x18 ] r--data
jmp r-xdata
mov ecx edx
mov eax 0x1
mov edx [ esp + 0x50 ]
shl eax cl
mov ecx [ esp + 0x2c ]
dec eax
and eax edi
shr edx 0x10
add eax edx
mov edx [ ecx + eax * 4 ]
mov eax edx
shr eax 0x8
movzx ecx al
mov [ esp + 0x50 ] edx
sub ebp ecx
movzx edx dl
shr edi cl
test dl 0x10
je r-xdata
mov ecx esi
sub ecx edx
lea ecx [ ecx ]
mov ecx edx
sub ecx eax
cmp ecx [ esp + 0x44 ]
jbe r-xdata
mov eax [ esp + 0x10 ]
mov ecx ebp
inc eax
mov [ esp + 0x10 ] eax
movzx eax [ eax ]
shl eax cl
add edi eax
add ebp 0x8
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
movzx eax [ ecx + 0x1 ]
lea ecx [ ecx + 0x3 ]
mov [ esi + 0x1 ] al
sub ebx 0x3
movzx eax [ ecx - 0x1 ]
mov [ esi + 0x2 ] al
add esi 0x3
movzx eax [ ecx ]
mov [ esi ] al
cmp ebx 0x2
ja r-xdata
test ebx ebx
je r-xdata
mov edi [ esp + 0x34 ]
mov eax [ esp + 0x20 ]
dec edi
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
cmp [ eax + 0x1bc0 ] 0x0
jne r-xdata
mov al [ ecx + 0x1 ]
inc esi
mov [ esi ] al
cmp ebx 0x1
jbe r-xdata
cmp eax ecx
jae r-xdata
mov eax [ esp + 0x30 ]
sub eax ecx
add edi eax
cmp ecx ebx
jae r-xdata
mov ecx [ esp + 0x4c ]
mov [ ecx + 0x18 ] r--data
mov al [ ecx + 0x2 ]
inc esi
mov [ esi ] al
jmp r-xdata
sub eax ecx
add edi eax
cmp ecx ebx
jae r-xdata
sub eax ecx
sub ecx [ esp + 0x20 ]
add eax [ esp + 0x30 ]
add edi eax
cmp ecx ebx
jae r-xdata
cmp ebx 0x2
jbe r-xdata
sub ebx ecx
mov edi edi
sub ebx ecx
lea esp [ esp ]
sub ebx ecx
sub edi esi
test ebx ebx
je r-xdata
lea ecx [ ebx - 0x3 ]
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
inc edx
mov al [ edi + 0x1 ]
lea edi [ edi + 0x1 ]
inc esi
mov [ esi ] al
dec ecx
jne r-xdata
jmp r-xdata
mov al [ edi + 0x1 ]
lea edi [ edi + 0x1 ]
inc esi
mov [ esi ] al
dec ecx
jne r-xdata
mov edi esi
sub edi edx
mov al [ edi + esi + 0x1 ]
inc esi
mov [ esi ] al
dec ecx
jne r-xdata
mov edi [ esp + 0x34 ]
mov eax [ esp + 0x20 ]
dec edi
cmp eax ebx
jae r-xdata
mov edi [ esp + 0x24 ]
mov al [ edi + 0x1 ]
inc esi
mov [ esi ] al
cmp ebx 0x1
jbe r-xdata
movzx eax [ edi + 0x1 ]
sub ebx 0x3
mov [ esi + 0x1 ] al
movzx eax [ edi + 0x2 ]
add edi 0x3
mov [ esi + 0x2 ] al
add esi 0x3
movzx eax [ edi ]
mov [ esi ] al
dec edx
jne r-xdata
mov ecx eax
sub ebx eax
mov al [ edi + 0x2 ]
inc esi
mov [ esi ] al
mov al [ edi + 0x1 ]
lea edi [ edi + 0x1 ]
inc esi
mov [ esi ] al
dec ecx
jne r-xdata
jmp r-xdata
sub_4119ec
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov edx esi
test ecx ecx
jg r-xdata
push ecx
push eax
push edx
call sub_411a26
mov eax esi
pop esi
retn 0xc
jl r-xdata
push 0x2d
not eax
not ecx
pop edx
add eax 0x1
mov [ esi ] dx
lea edx [ esi + 0x2 ]
adc ecx 0x0
test eax eax
jae r-xdata
sub_411a26
mov edx [ esp + 0xc ]
sub esp 0x40
push ebx
mov ebx [ esp + 0x4c ]
push ebp
push esi
mov esi [ esp + 0x50 ]
mov ebp esi
push edi
lea edi [ esp + 0x10 ]
push 0x0
push 0xa
push edx
push ebx
call sub_405260
mov [ esp + 0x5c ] ebx
mov ebx eax
lea eax [ ecx + 0x30 ]
mov [ edi ] ax
mov eax ebx
add edi 0x2
or eax edx
jne r-xdata
sub edi 0x2
lea eax [ esp + 0x10 ]
mov cx [ edi ]
mov [ esi ] cx
lea esi [ esi + 0x2 ]
cmp edi eax
jne r-xdata
xor eax eax
pop edi
mov [ esi ] ax
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
sub_411a84
push esi
mov esi [ esp + 0x8 ]
xor ecx ecx
test esi esi
je r-xdata
mov eax ecx
pop esi
retn 0x4
jmp r-xdata
mov eax [ esi ]
cmp eax 0xffffffff
jne r-xdata
add esi 0x4
cmp eax 0xfffffff9
jl r-xdata
cmp eax 0xfffffffc
jle r-xdata
xor ecx ecx
inc ecx
cmp eax 0xfffffffd
je r-xdata
mov eax [ esi + 0x8 ]
add esi 0xc
cmp eax 0xfffffffe
jne r-xdata
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
add esi 0x10
jmp r-xdata
push eax
call sub_411a84
mov ecx eax
jmp r-xdata
sub_411ad4
sub esp 0x1c
mov edx [ esp + 0x20 ]
xor ecx ecx
push ebp
mov ebp [ esp + 0x30 ]
mov [ esp + 0x8 ] ecx
cmp ebp edx
je r-xdata
pop ebp
add esp 0x1c
retn 0x10
push esi
mov esi [ esp + 0x30 ]
test esi esi
je r-xdata
push [ esp + 0x2c ]
push ebp
push edx
push edi
mov edi [ esi ]
cmp edi 0xffffffff
je r-xdata
mov eax [ esp + 0x30 ]
pop edi
cmp ecx eax
jge r-xdata
push 0x4
pop eax
push ebx
pop esi
sub eax ecx
push eax
lea eax [ ecx + ebp ]
push eax
lea eax [ ecx + edx ]
push eax
jmp r-xdata
mov edi [ esi ]
add esi eax
mov eax [ esi ]
mov ebx [ edi + ebp ]
mov [ esp + 0x28 ] eax
lea esi [ esi + eax * 4 ]
lea eax [ edi + edx ]
add esi 0x10
cmp [ eax ] 0x0
mov [ esp + 0x38 ] eax
je r-xdata
cmp edi 0xfffffffa
je r-xdata
call memcpy
add esp 0xc
test ebx ebx
je r-xdata
push [ eax ]
call [ rw-data ]
mov eax [ esp + 0x38 ]
mov edi [ esi ]
add esi 0x14
mov ebx [ edi + ebp ]
lea eax [ edi + edx ]
mov ecx [ eax ]
mov [ esp + 0x38 ] eax
test ecx ecx
je r-xdata
cmp edi 0xfffffffb
je r-xdata
mov ebx [ esp + 0x28 ]
lea ebx [ ebx * 4 + 0x4 ]
push eax
push [ ebx - 0x10 ]
push [ ebx - 0x4 ]
push [ ebx - 0x8 ]
push [ ebx - 0x14 ]
call [ rw-data ]
mov ecx [ ebx - 0x18 ]
push 0x0
push eax
push ebx
mov [ eax - 0x18 ] ecx
call [ rw-data ]
test ebx ebx
je r-xdata
push ecx
call [ rw-data ]
mov eax [ esp + 0x38 ]
mov edi [ esi ]
add esi 0x10
mov ebx [ edi + ebp ]
lea eax [ edi + edx ]
mov ecx [ eax ]
mov [ esp + 0x38 ] eax
test ecx ecx
je r-xdata
cmp edi 0xfffffffc
je r-xdata
mov edx [ esp + 0x30 ]
lea ecx [ ebx + edi ]
mov edi [ esi ]
mov [ esp + 0x14 ] ecx
push 0x4
pop eax
cmp edi 0xffffffff
jne r-xdata
mov eax edi
sub eax ecx
push eax
lea eax [ ecx + ebp ]
push eax
mov eax [ esp + 0x38 ]
add eax ecx
push eax
call memcpy
add esp 0xc
push 0x4
push [ ebx + 0x24 ]
push eax
push [ ebx + 0x10 ]
push [ ebx + 0x20 ]
push [ ebx + 0x1c ]
call [ rw-data ]
mov eax [ esp + 0x38 ]
push 0x0
push [ eax ]
push [ edi + ebp ]
call [ rw-data ]
jmp r-xdata
test ebx ebx
je r-xdata
push ecx
call [ rw-data ]
mov eax [ esp + 0x38 ]
mov edi [ esi ]
add esi 0x14
mov ebx [ edi + ebp ]
lea eax [ edi + edx ]
cmp [ eax ] 0x0
mov [ esp + 0x38 ] eax
je r-xdata
cmp edi 0xfffffffd
je r-xdata
add esi eax
cmp edi 0xfffffff9
je r-xdata
pop ebx
mov ecx [ esp + 0x14 ]
cmp ecx edi
jge r-xdata
push 0x8
jmp r-xdata
push [ ebx + 0x2c ]
push [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x28 ]
sub eax 0x8
push eax
call [ rw-data ]
mov eax [ esp + 0x38 ]
push 0x0
push [ eax ]
push [ edi + ebp ]
call [ rw-data ]
test ebx ebx
je r-xdata
push [ eax ]
call [ rw-data ]
mov eax [ esp + 0x38 ]
mov edi [ esi ]
add esi eax
mov ebx [ esi ]
add esi eax
mov ecx [ esi ]
add esi eax
lea eax [ edi + ebp ]
push eax
push ecx
push ebx
lea eax [ edi + edx ]
push eax
call sub_411ad4
jmp r-xdata
cmp edi 0xfffffffe
je r-xdata
pop ebx
jmp r-xdata
push eax
push [ ebx - 0x10 ]
push [ ebx - 0x4 ]
push [ ebx - 0x8 ]
push [ ebx - 0x14 ]
call [ rw-data ]
push 0x0
push eax
push ebx
call [ rw-data ]
mov ebx [ esi ]
add esi eax
mov [ esp + 0x28 ] ebx
mov edi [ esi ]
add esi eax
mov [ esp + 0x24 ] edi
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
add esi 0x8
mov [ esp + 0x10 ] eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x38 ] esi
test ebx ebx
jle r-xdata
mov eax [ edi + ebp ]
lea ebx [ edi + edx ]
cmp [ ebx ] 0x0
mov [ esp + 0x38 ] eax
je r-xdata
imul ebx eax
jmp r-xdata
lea eax [ edi + edx ]
mov esi ebx
mov edi [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
mov eax ebp
mov ebp [ esp + 0x18 ]
sub eax edx
mov [ esp + 0x1c ] eax
mov ebx eax
test eax eax
je r-xdata
push [ ebx ]
call sub_40e230
and [ ebx ] 0x0
mov eax [ esp + 0x38 ]
lea eax [ ebx + ebp ]
push eax
push ecx
push edi
push ebp
call sub_411ad4
mov ecx [ esp + 0x20 ]
add ebp edi
dec esi
jne r-xdata
mov esi [ esp + 0x38 ]
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x3c ]
mov eax [ esp + 0x10 ]
push eax
push ebx
call sub_40e3c0
jmp r-xdata
sub_411daa
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push eax
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
pop eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ ebp + 0x8 ]
mov ecx [ esi ]
add esi 0x4
mov eax [ esi ]
push [ ecx + edi ]
lea esi [ esi + eax * 4 ]
add esi 0x10
cmp eax 0xfffffffa
je r-xdata
add esi 0x4
cmp eax 0xfffffff9
je r-xdata
mov eax [ esi ]
add esi 0x14
push [ eax + edi ]
call [ rw-data ]
jmp r-xdata
cmp eax 0xfffffffb
je r-xdata
mov eax [ esi ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
add esi 0x10
push [ eax + edi ]
call [ rw-data ]
jmp r-xdata
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi ]
add esi 0x14
push [ eax + edi ]
jmp r-xdata
cmp eax 0xfffffffd
je r-xdata
call [ rw-data ]
mov ecx [ esi ]
mov eax [ esi + 0x8 ]
add esi 0xc
push eax
lea eax [ ecx + edi ]
push eax
call sub_411daa
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ esi ]
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x4 ]
add esi 0x10
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp + 0xc ] esi
test ebx ebx
jle r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
mov esi [ ebp - 0x8 ]
lea eax [ edx + edi ]
mov [ ebp - 0x4 ] eax
mov edi eax
push [ eax + edi ]
call sub_40e230
jmp r-xdata
push ecx
push edi
call sub_411daa
mov ecx [ ebp - 0xc ]
add edi esi
dec ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
sub_411eaf
push ecx
push ecx
push ebx
mov ebx [ esp + 0x14 ]
mov eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
pop ebx
pop ecx
pop ecx
retn 0x8
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
push 0x4
pop edi
mov esi [ ebx ]
add ebx edi
mov ecx [ ebx ]
add ebx edi
mov eax [ ebx ]
add ebx edi
mov [ esp + 0x10 ] eax
mov eax [ ebx ]
add ebx edi
mov [ esp + 0x14 ] eax
mov eax [ ebx ]
add ebx edi
mov [ esp + 0x20 ] eax
test ecx ecx
jle r-xdata
cmp eax 0xfffffffa
je r-xdata
lea eax [ esi + ebp ]
push eax
push [ esp + 0x24 ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push ecx
call [ rw-data ]
lea edx [ ebp + 0x4 ]
mov edi ecx
add edx esi
mov esi [ ebx ]
add ebx edi
mov eax [ ebx + 0xc ]
mov ecx [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
add ebx 0x10
push eax
lea eax [ esi + ebp ]
push eax
push ecx
push edx
push edi
call [ rw-data ]
jmp r-xdata
cmp eax 0xfffffffb
je r-xdata
add ebx edi
cmp eax 0xfffffff9
je r-xdata
pop edi
pop esi
pop ebp
mov eax [ ebx ]
add ebx 0x4
mov [ edx ] eax
lea edx [ edx + 0x4 ]
dec edi
jne r-xdata
mov eax [ ebx ]
push 0x4
pop edi
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebx ]
add ebx edi
mov esi [ ebx ]
add ebx edi
mov ecx [ ebx ]
add ebx edi
mov eax [ ebx ]
add ebx edi
push eax
push ecx
lea eax [ edx + ebp ]
push eax
push esi
call [ rw-data ]
jmp r-xdata
cmp eax 0xfffffffc
je r-xdata
mov eax [ ebx ]
add ebx edi
add eax ebp
push eax
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
mov esi [ ebx + 0x4 ]
mov edi [ ebx ]
add ebx 0x10
push ecx
push edx
push esi
push edi
call [ rw-data ]
jmp r-xdata
cmp eax 0xfffffffd
je r-xdata
mov ecx [ ebx ]
add ebx 0x8
mov eax [ ebx ]
add ebx edi
push eax
lea eax [ ecx + ebp ]
push eax
call sub_411eaf
jmp r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov esi [ ebx ]
add ebx edi
mov ecx [ ebx ]
add ebx edi
mov eax [ ebx ]
add ebx edi
mov [ esp + 0x10 ] eax
mov eax [ ebx ]
add ebx edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] ebx
test esi esi
jle r-xdata
lea edi [ ecx + ebp ]
mov ebx eax
mov ebp [ esp + 0x10 ]
push ebx
push edi
call sub_411eaf
add edi ebp
dec esi
jne r-xdata
mov ebx [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
jmp r-xdata
sub_412024
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push [ edi + 0xc ]
call [ UnregisterWait@IAT ]
push [ edi + 0x10 ]
call [ CloseHandle@IAT ]
mov esi rw-data
push esi
call [ EnterCriticalSection@IAT ]
mov ecx [ edi ]
mov eax [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov [ rw-data ] eax
mov [ ecx + 0x4 ] eax
jmp r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
mov ebx [ edi + 0x8 ]
jmp r-xdata
mov eax [ edi ]
mov [ ecx ] eax
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
test ebx ebx
jne r-xdata
mov esi ebx
mov ebx [ ebx ]
push [ esi + 0x8 ]
call [ esi + 0x4 ]
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push edi
push ebx
push [ rw-data ]
call [ HeapFree@IAT ]
pop edi
pop esi
pop ebx
retn
sub_4120a2
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi rw-data
jne r-xdata
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
call [ TlsAlloc@IAT ]
push esi
mov [ rw-data ] eax
call [ InitializeCriticalSection@IAT ]
mov [ rw-data ] 0x1
push 0xc
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
push 0x14
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn 0x8
mov ecx [ esp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebx + 0x8 ]
mov [ eax ] ecx
mov [ ebx + 0x8 ] eax
push esi
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
mov [ ebx + 0x4 ] eax
mov [ rw-data ] ebx
call [ LeaveCriticalSection@IAT ]
mov esi [ GetCurrentProcess@IAT ]
lea edi [ ebx + 0x10 ]
push 0x0
push 0x0
push 0x100000
push edi
call esi
push eax
call [ GetCurrentThread@IAT ]
push eax
call esi
push eax
call [ DuplicateHandle@IAT ]
push 0x8
push 0xffffffff
push ebx
push sub_41219a
push [ edi ]
lea eax [ ebx + 0xc ]
push eax
call [ RegisterWaitForSingleObject@IAT ]
push ebx
push [ rw-data ]
call [ TlsSetValue@IAT ]
pop edi
mov [ eax ] ebx
sub_4121c0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
je r-xdata
push 0x1
call malloc
add esp 0x4
mov [ eax ] 0x0
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx esi
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push 0x0
push 0x0
sub ecx edx
push 0x0
sar ecx 0x1
push 0x0
lea ebp [ ecx + 0x1 ]
push ebp
push esi
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
lea ecx [ ebx + 0x1 ]
push ecx
call malloc
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push 0x0
push 0x0
push ebx
push edi
push ebp
push esi
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov [ eax + edi ] 0x0
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_412260
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
je r-xdata
push 0x1
call malloc
add esp 0x4
mov [ eax ] 0x0
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx esi
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push 0x0
push 0x0
sub ecx edx
push 0x0
sar ecx 0x1
push 0x0
lea ebp [ ecx + 0x1 ]
push ebp
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
lea ecx [ ebx + 0x1 ]
push ecx
call malloc
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push 0x0
push 0x0
push ebx
push edi
push ebp
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov [ eax + edi ] 0x0
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_4011d0
call sub_40536d
call sub_409c10
call sub_40a975
call sub_40ad50
call sub_40d584
call sub_409df0
retn
sub_401cf9
xor eax eax
push [ esp ]
call sub_40e230
add esp 0x4
retn
sub_401d61
xor eax eax
add esp 0x4
pop ebx
retn 0x4
sub_401d99
xor eax eax
pop ebx
retn 0xc
sub_402175
xor eax eax
pop ebx
retn 0x4
sub_403268
xor eax eax
pop ebp
retn 0x10
sub_40425d
push [ esp + 0x4 ]
call sub_409e20
jmp sub_40426a
sub_40426a
retn 0x4
sub_405060
push edx
push ecx
call sub_40e3c0
retn
sub_405068
push edx
push ecx
call sub_40e410
retn
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
LoadLibraryExW
jmp [ LoadLibraryExW@IAT ]
EnumResourceTypesW
jmp [ EnumResourceTypesW@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
RemoveDirectoryW
jmp [ RemoveDirectoryW@IAT ]
EnumResourceNamesW
jmp [ EnumResourceNamesW@IAT ]
GetTempFileNameW
jmp [ GetTempFileNameW@IAT ]
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
FindResourceW
jmp [ FindResourceW@IAT ]
GetNativeSystemInfo
jmp [ GetNativeSystemInfo@IAT ]
GetShortPathNameW
jmp [ GetShortPathNameW@IAT ]
GetWindowsDirectoryW
jmp [ GetWindowsDirectoryW@IAT ]
GetSystemDirectoryW
jmp [ GetSystemDirectoryW@IAT ]
sub_405100
movsx eax [ eax ]
retn
sub_405110
mov edx [ esp + 0x4 ]
mov [ eax ] edx
retn 0x4
sub_405160
push edx
push [ esp + 0x8 ]
call sub_40e9e0
pop edx
retn 0x4
sub_405170
push edx
push ecx
push [ rw-data ]
call TlsGetValue
mov eax [ eax ]
pop ecx
pop edx
retn
sub_405182
push eax
push [ rw-data ]
call TlsGetValue
mov edx [ eax ]
pop eax
retn
sub_4051a0
push eax
push edx
push [ esp + 0xc ]
call sub_40ea20
pop edx
pop eax
retn 0x4
sub_40525a
add [ eax ] al
int3
wcsncmp
jmp [ wcsncmp@IAT ]
memmove
jmp [ memmove@IAT ]
wcsstr
jmp [ wcsstr@IAT ]
_wcsnicmp
jmp [ _wcsnicmp@IAT ]
_wcsicmp
jmp [ _wcsicmp@IAT ]
wcscmp
jmp [ wcscmp@IAT ]
tolower
jmp [ tolower@IAT ]
free
jmp [ free@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
PathAddBackslashW
jmp [ PathAddBackslashW@IAT ]
PathRenameExtensionW
jmp [ PathRenameExtensionW@IAT ]
PathQuoteSpacesW
jmp [ PathQuoteSpacesW@IAT ]
PathRemoveArgsW
jmp [ PathRemoveArgsW@IAT ]
PathRemoveBackslashW
jmp [ PathRemoveBackslashW@IAT ]
sub_4053af
push rw-data
call [ InitializeCriticalSection@IAT ]
retn
sub_405526
cmp [ rw-data ] 0x0
jne r-xdata
jmp [ Sleep@IAT ]
push 0x1
call [ timeBeginPeriod@IAT ]
mov [ rw-data ] 0x1
sub_405d40
push [ esp + 0xc ]
push 0xffffffff
push 0x1
push 0x0
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_405b40
retn 0xc
sub_405f10
push [ esp + 0x8 ]
push 0x1
call sub_40e540
mov cx [ esp + 0x4 ]
mov [ eax ] cx
xor ecx ecx
mov [ eax + 0x2 ] cx
retn 0x8
sub_406000
push [ esp + 0x8 ]
push r--data
push [ esp + 0xc ]
call sub_405f30
retn 0x8
sub_4066a3
push es
pop es
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or al [ edx ]
or cl [ edx ]
or [ ecx ] cl
int3
sub_40691f
push es
pop es
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or al [ edx ]
or cl [ edx ]
or [ ecx ] cl
int3
sub_406bdb
push es
pop es
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or al [ edx ]
or cl [ edx ]
or [ ecx ] cl
int3
sub_406bf0
push 0xffffffff
push 0xffffffff
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_406930
retn 0x10
sub_408f32
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
call sub_4091c8
retn
push 0x1
push [ rw-data ]
call [ EnableWindow@IAT ]
sub_40927c
push [ esp + 0x4 ]
push [ rw-data ]
call sub_40d719
test eax eax
je r-xdata
retn 0x4
push [ eax ]
call [ CloseHandle@IAT ]
push [ esp + 0x4 ]
push [ rw-data ]
call sub_40d6ca
sub_40949e
push [ rw-data ]
call sub_40d5a8
push 0x0
call sub_40937a
pop ecx
retn
sub_40957e
mov eax [ esp + 0x4 ]
push 0xffffffff
push [ eax ]
call [ TerminateProcess@IAT ]
retn 0x4
sub_409623
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40963d
retn 0x10
sub_409b8a
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x8
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
push eax
push [ esp + 0x8 ]
call [ SetEnvironmentVariableW@IAT ]
mov eax r--data
sub_409bf0
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ esp + 0x4 ] sub_409bb0
jmp sub_409d10
sub_409c10
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] 0x0
retn
sub_409dd0
push [ esp + 0x4 ]
push [ rw-data ]
call sub_409d60
retn 0x4
sub_409df0
push [ rw-data ]
call [ HeapDestroy@IAT ]
retn
sub_409e00
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
retn
sub_409e20
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn 0x4
push eax
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
retn 0x4
sub_409e40
push [ esp + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
retn 0x4
sub_409e60
mov eax [ esp + 0x4 ]
test eax eax
jle r-xdata
xor eax eax
retn 0x4
push eax
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
retn 0x4
sub_409f60
mov edx [ esp + 0x4 ]
mov eax [ edx ]
mov edx [ edx + 0x4 ]
retn 0x4
sub_40a081
mov [ rw-data ] sub_40a0a0
mov [ rw-data ] sub_40a1f8
mov [ rw-data ] sub_40a18f
retn
sub_40a16d
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_40a278
test eax eax
jne r-xdata
retn 0x8
push eax
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40a303
sub_40a45c
mov eax [ esp + 0x4 ]
and [ eax ] 0x0
or [ eax + 0x14 ] 0xffffffff
retn 0x4
sub_40a56f
mov ecx [ esp + 0x4 ]
xor eax eax
jmp r-xdata
movzx edx [ ecx ]
test edx edx
jne r-xdata
imul eax eax 0x1003f
lea ecx [ ecx + 0x2 ]
add eax edx
retn
sub_40a5e9
mov [ rw-data ] sub_40a608
mov [ rw-data ] sub_40a924
mov [ rw-data ] sub_40a69a
retn
sub_40a703
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x10 ]
retn 0x4
sub_40a70d
mov eax [ esp + 0x4 ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x30 ] 0x1
mov eax [ eax + 0xc ]
and [ eax ] 0x0
retn 0x4
sub_40a975
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_40dcb5
sub_40aa05
xor eax eax
cmp [ esp + 0x4 ] eax
je r-xdata
retn 0x8
jmp [ SetFileAttributesW@IAT ]
sub_40aa16
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
test [ esp + 0x8 ] 0x2
je r-xdata
push [ esp + 0x4 ]
call [ DeleteFileW@IAT ]
jmp r-xdata
push 0x80
push [ esp + 0x8 ]
call [ SetFileAttributesW@IAT ]
retn 0x8
sub_40aa44
push 0x0
push [ esp + 0x8 ]
call sub_40aa16
retn 0x4
sub_40ac1a
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
retn 0x4
jmp [ SetCurrentDirectoryW@IAT ]
sub_40ad50
push [ rw-data ]
call sub_40dcb5
retn
sub_40ad60
push sub_40ac90
push 0x10
push 0x20
call sub_40d7ec
mov [ rw-data ] eax
retn
sub_40af70
push [ esp + 0xc ]
push 0x3
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40ad80
add esp 0x10
retn 0xc
sub_40b060
push [ esp + 0xc ]
push 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40ad80
add esp 0x10
retn 0xc
sub_40b240
push [ esp + 0x4 ]
push [ rw-data ]
call sub_40d719
test eax eax
je r-xdata
xor eax eax
retn 0x8
push [ eax + 0x18 ]
push [ esp + 0xc ]
push eax
call sub_40b140
retn 0x8
sub_40b454
mov ecx [ esp + 0x4 ]
lea eax [ ecx + 0x44 ]
push eax
lea eax [ ecx + 0x4 ]
push eax
call sub_40b4f6
pop ecx
pop ecx
retn 0x4
sub_40b46a
push [ esp + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
retn 0x4
sub_40b4b0
push 0x3
call sub_40d480
test eax eax
je r-xdata
xor eax eax
inc eax
retn
mov [ eax + 0x4 ] sub_40b47f
mov [ eax + 0x8 ] sub_40b4db
mov [ eax + 0xc ] sub_40b454
mov [ eax + 0x10 ] sub_40b46a
sub_40b4db
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
add eax 0x44
push eax
call sub_40c8f6
add esp 0xc
retn 0xc
sub_40b5d1
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
and [ ecx + 0x18 ] 0x0
and [ ecx + 0x14 ] 0x0
mov [ ecx ] 0x67452301
mov [ ecx + 0x4 ] 0xefcdab89
mov [ ecx + 0x8 ] 0x98badcfe
mov [ ecx + 0xc ] 0x10325476
mov [ ecx + 0x10 ] 0xc3d2e1f0
mov [ ecx + 0x5c ] eax
retn
sub_40c9ac
mov ecx [ esp + 0x4 ]
lea eax [ ecx + 0x44 ]
push eax
lea eax [ ecx + 0x4 ]
push eax
call sub_40caca
pop ecx
pop ecx
retn 0x4
sub_40c9c2
push [ esp + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
retn 0x4
sub_40ca03
push 0x1
call sub_40d480
test eax eax
je r-xdata
xor eax eax
inc eax
retn
mov [ eax + 0x4 ] sub_40c9d7
mov [ eax + 0x8 ] sub_40ca2e
mov [ eax + 0xc ] sub_40c9ac
mov [ eax + 0x10 ] sub_40c9c2
sub_40ca2e
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
add eax 0x44
push eax
call sub_40d272
add esp 0xc
retn 0xc
sub_40cb30
mov eax [ esp + 0x4 ]
and [ eax + 0x14 ] 0x0
and [ eax + 0x10 ] 0x0
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
retn
sub_40d32b
cmp [ esp + 0xc ] 0x0
ja memset
retn
sub_40d3c0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40d340
retn 0xc
sub_40d584
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
retn
retn
push [ rw-data ]
call [ TlsFree@IAT ]
sub_40dca2
push rw-data
call [ InitializeCriticalSection@IAT ]
and [ rw-data ] 0x0
retn
sub_40dce3
call [ esp + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax ] 0x4
xor eax eax
inc eax
retn 0xc
sub_40dcf7
push rw-data
call [ InitializeCriticalSection@IAT ]
retn
sub_40dddb
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
and [ esi + 0x18 ] 0x0
pop esi
retn 0x4
sub_40de61
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
sub ecx 0x8
jmp r-xdata
test eax eax
jne r-xdata
cmp eax ecx
je r-xdata
retn
lea eax [ ecx + 0x8 ]
retn
mov eax [ eax ]
sub_40de7d
mov [ rw-data ] sub_40dea6
mov [ rw-data ] sub_40df4d
mov [ rw-data ] sub_40e045
mov [ rw-data ] j_sub_40dff9
retn
j_sub_40dff9
jmp sub_40dff9
sub_40e110
push ebp
mov ebp esp
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
call sub_40e940
pop ebp
retn
sub_40e140
push ebp
mov ebp esp
mov eax [ rw-data ]
push eax
call [ HeapDestroy@IAT ]
mov ecx [ rw-data ]
push ecx
call [ TlsFree@IAT ]
pop ebp
retn
sub_40eb10
mov eax [ esp + 0x4 ]
mov [ eax + 0x4c ] r--data
mov [ eax + 0x54 ] 0x9
mov [ eax + 0x50 ] r--data
mov [ eax + 0x58 ] 0x5
retn
sub_410320
push [ esp + 0xc ]
push [ esp + 0xc ]
push 0xf
push [ esp + 0x10 ]
call sub_410260
add esp 0x10
retn
sub_410610
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov [ esp + 0x8 ] eax
jmp sub_410af0
retn
sub_4119c0
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
push eax
call [ malloc@IAT ]
add esp 0x4
retn
sub_4119e0
push [ esp + 0x8 ]
call [ free@IAT ]
pop ecx
retn
sub_41219a
cmp [ esp + 0x8 ] 0x0
jne r-xdata
retn 0x8
push [ esp + 0x4 ]
call sub_412024
pop ecx
sub_4121b0
push [ esp + 0x4 ]
call free
pop ecx
retn 0x4
sub_412250
push [ esp + 0x4 ]
call free
pop ecx
retn 0x4
