sub_401144
add [ eax ] al
add [ eax ] al
add eax 0x8a000800
mov al [ eax ]
add [ eax ] al
add [ eax ] al
xchg ecx eax
mov al [ eax ]
add eax 0xc2000800
mov es [ eax ]
add [ eax ] al
add [ eax ] al
leave
mov es [ eax ]
add eax 0xf2000800
xchg edx eax
inc eax
add [ eax ] al
add [ eax ] al
add cl bh
xchg edx eax
inc eax
add [ 0x22000800 ] al
xchg edi eax
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx ] ch
xchg edi eax
inc eax
add [ 0x52000800 ] al
fwait
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx - 0x65 ] bl
inc eax
add [ 0xffffffff82000800 ] al
lahf
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x500409f ] cl
add [ eax ] cl
add [ edx + 0x40a3 ] dh
add [ eax ] al
add [ ecx + 0x50040a3 ] bh
add [ eax ] cl
add dl ah
cmpsd [ esi ] [ edi ]
inc eax
add [ eax ] al
add [ eax ] al
add cl ch
cmpsd [ esi ] [ edi ]
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
pop [ eax + 0x7 ]
add [ eax ] cl
add ch al
dec edi
inc ecx
add [ edx - 0x2fffbeb0 ] bl
dec edi
inc ecx
add [ edi ] al
add [ eax ] cl
add [ eax - 0x5c ] dh
inc ecx
add [ eax + 0x7b0041aa ] al
movsb [ edi ] [ esi ]
inc ecx
add [ 0x50000800 ] al
mov eax 0x41
add [ eax ] al
push edi
mov eax 0x50041
or [ eax ] al
sbb al 0xbd
inc ecx
add [ eax ] al
add [ eax ] al
add [ edi * 4 + 0x50041 ] ah
or [ eax ] al
or al 0xc2
inc ecx
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 ] dl
inc ecx
add [ 0xffffffffa6000800 ] al
mov [ ecx ] 0x0
add [ eax ] al
add [ esi + 0x50041c6 ] ch
add [ eax ] cl
add [ eax ] bh

sub_401426
add [ eax ] al
push r-xdata
call Ordinal_MSVBVM60_100
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
add [ eax ] al
cmp [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
stosb [ edi ]
dec ecx
out 0xa0 eax
je r-xdata
cmpsd [ esi ] [ edi ]
pop edx
out dx eax
xchg esi eax
in al 0xbe
mov ecx [ edx - 0x55 ]
mov ch 0x79
adc [ eax + 0xe5bd587 ] eax
xor eax 0x4d305100
xchg edi eax
dec eax
test [ ecx + 0x21 ] eax
inc ecx
mov eax [ 0xffffffffe70cbe87 ]
mov [ edx - 0x18 ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
sub eax 0x30303043
sub eax 0x5f746547
dec ecx
inc ebx
push edx
add [ eax ] al
add [ eax ] al
add bh bh
int3
sub_404e18
aam 0xd5
in al dx
and al 0xa7
pop edx
out dx eax
xchg esi eax
in al 0xbe
mov ecx [ edx - 0x55 ]
mov ch 0x79
adc [ eax - 0x2fa42a79 ] eax
jo r-xdata
push eax
jb r-xdata
cmp al dh
dec edx
nop
inc ebp
mov [ edx - 0x3d ] es
insd
adc [ eax + 0x4f3aee16 ] ecx
lodsd [ esi ]
xor ebx [ ecx - 0x48ee309a ]
or al 0x0
stosb [ edi ]
add [ eax - 0x2d ] ah
xchg ebx eax
inc esi
outsd
jb r-xdata
insd
bound eax [ ebx + 0x6c ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
imul ebx [ eax + eax ] 0x33ad4f0a
cdq
iret
add [ eax ] al
add [ eax ] al
cmp eax 0xa0fafcfb
push 0x838a710
add [ ebx ] ch
xor esi [ ecx - 0x4b ]
inc ebx
cmp bl [ eax + edx * 2 + 0x72 ]
outsd
add [ eax ] al
insb
bound ebp [ esp + ecx * 2 + 0x4f ]
push ebp
pop ecx
jae r-xdata
je r-xdata
iretd
insd
and [ esi + 0x69 ] al
insb
jae r-xdata
add [ eax ] al
je r-xdata
add [ eax + edi * 2 + 0x74 ] dh
dec ecx
insb
popad
imul ebp [ ebp + 0x61 ] 0x6c00746e
bound ebp [ ebx + eax * 2 + 0x6c ]
popad
insd
popad
imul ebp [ esi + 0x74 ] 0x7962
add [ eax + edi * 2 + 0x74 ] dh
inc ebx
insb
popad
imul ebp [ ebp + 0x61 ] 0x7942746e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x6d ] ah
bound ecx [ ecx + 0x6e ]
jae r-xdata
popad
imul ebp [ ebp + 0x61 ] 0xda00746e
dec esi
lodsd [ esi ]
xor ebx [ ecx - 0x48ee309a ]
or al 0x0
stosb [ edi ]
add [ eax - 0x2d ] ah
xchg ebx eax
insb
bound ebp [ ebx + eax * 2 + 0x6c ]
popad
imul ebp [ ebp + 0x61 ] 0xe200746e
dec esi
or al 0x0
stosb [ edi ]
add [ eax - 0x2d ] ah
xchg ebx eax
arpl [ ebp + 0x62 ] bp
inc ebx
insb
dec ebp
imul esp [ ebx + 0x72 ] 0x666f736f
je r-xdata
add [ eax ] al
insb
bound ebp [ ebx + edx * 2 + 0x75 ]
bound ebx [ ecx + 0x65 ]
jae r-xdata
je r-xdata
insb
bound ebp [ edx + edx * 2 + 0x65 ]
jae r-xdata
jb r-xdata
outsd
outsb
push edx
popad
je r-xdata
jb r-xdata
add [ esi + ecx * 2 + 0x40 ] dl
push esi
imul esi [ ebx + 0x75 ] 0x53206c61
je r-xdata
add [ eax ] al
je r-xdata
imul esp [ ebx + 0x74 ] 0x626d6300
push ebx
dec edi
push ebp
pop ecx
jae r-xdata
add [ edx + 0x6c ] ch
jb r-xdata
bound edx [ edx + 0x65 ]
jae r-xdata
add [ fs : eax ] al
insb
bound ebp [ ecx + ebp * 2 + 0x6e ]
jae r-xdata
jae r-xdata
add [ fs : ebx + 0x6d ] ah
insb
add [ fs : eax ] al
insb
bound ebp [ ecx + ecx * 2 + 0x6e ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ esi + ecx * 2 + 0x40 ] ah
add [ esi + ecx * 2 - 0x1d2fffc0 ] bl
inc ecx
add [ eax ] al
imul ebp [ fs : edi + 0x5c ] 0x38394256
pop esp
push esi
inc edx
dec edi
dec esp
inc edx
add [ eax ] al
add [ esi + 0x42 ] dl
add [ eax ] al
push esp
dec esi
inc eax
xor [ fs : eax ] eax
add [ eax ] al
je r-xdata
lodsd [ esi ]
xor ebx [ ecx - 0x48ee309a ]
or al 0x0
stosb [ edi ]
add [ eax - 0x2d ] ah
xchg ebx eax
je r-xdata
dec esi
outsd
outsb
push edx
popad
je r-xdata
add [ eax ] al
arpl [ ebp + 0x62 ] bp
dec esi
inc edx
outsb
add [ fs : eax ] al
add [ eax ] al
je r-xdata
je r-xdata
je r-xdata
arpl [ eax + eax + 0x74 ] si
js r-xdata
jae r-xdata
jb r-xdata
je r-xdata
jb r-xdata
add [ eax ] al
arpl [ ebp + 0x62 ] bp
push edi
imul esi [ esi + ebp * 2 + 0x65 ] 0x7373
jae r-xdata
add [ fs : eax + edi * 2 + 0x74 ] dh
dec esi
jae r-xdata
jb r-xdata
loop r-xdata
arpl [ ebp + 0x62 ] bp
inc ecx
jb r-xdata
add dl dh
dec esi
jne r-xdata
jae r-xdata
dec edi
dec ebx
dec esi
outsd
add [ eax ] al
bound esp [ ebp + 0x6c ]
je r-xdata
jns r-xdata
imul esi [ esi + ebp * 2 + 0x65 ] 0x79427373
add [ eax ] al
add [ eax ] al
push esp
js r-xdata
add [ ebx + 0x6d ] ah
bound edx [ eax + 0x6f ]
insb
imul esp [ ebx + 0x65 ] 0x63000000
imul esi [ esi + ebp * 2 + 0x65 ] 0x7373
insb
bound ebp [ edi + edx * 2 + 0x69 ]
je r-xdata
push edx
insd
bound eax [ ecx + 0x72 ]
bound edx [ ecx + edi * 2 + 0x70 ]
add [ eax ] al
je r-xdata
insb
bound ebp [ edi + edx * 2 + 0x69 ]
je r-xdata
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
je r-xdata
jae r-xdata
bound edi [ fs : ecx ]
add [ eax ] al
add [ eax + edi * 2 + 0x74 ] dh
dec ecx
outsb
jae r-xdata
insd
bound edx [ eax + 0x72 ]
outsd
jo r-xdata
je r-xdata
add [ fs : eax ] al
je r-xdata
jae r-xdata
outsb
lodsd [ esi ]
xor ebx [ ecx - 0x48ee309a ]
or al 0x0
stosb [ edi ]
add [ eax - 0x2d ] ah
xchg ebx eax
je r-xdata
cmp [ eax ] eax
add [ ecx + 0x62 ] cl
insb
xor [ eax + eax ] esi
dec esp
popad
insb
bound ebp [ ebx + edx * 2 + 0x75 ]
bound esi [ edx + 0x6f ]
add [ eax ] al
add [ eax ] al
push esp
inc ebx
outsd
insd
insd
popad
outsb
xor al [ fs : eax ]
add [ eax ] al
add [ ebx + 0x6f ] al
insd
insd
popad
outsb
pop ecx
add [ eax ] al
add [ eax + edi * 2 + 0x74 ] dh
push ebx
xor [ eax ] eax
add [ eax ] al
dec esi
add [ eax ] al
add [ eax ] eax
add al 0x0
add [ eax ] eax
or [ eax ] al
add [ eax ] eax
adc al 0x0
or [ eax ] al
add [ eax ] al
add al [ eax ]
dec esp
dec edi
push ebp
add [ eax ] al
add [ ecx + 0x62 ] cl
insb
xor al [ eax ]
add [ ecx + 0x62 ] cl
insb
xor eax [ eax ]
add [ ecx + 0x62 ] cl
insb
add [ ecx + 0x62 ] cl
insb
jne r-xdata
xor eax 0x614c0000
bound esp [ ebp + 0x6c ]
add [ ss : eax ] al
add [ gs : eax ] al
push ebp
add [ eax ] al
add [ eax + edi * 2 + 0x74 ] dh
dec esp
popad
bound ebp [ edi + 0x72 ]
dec eax
outsd
jne r-xdata
bound eax [ ebp + 0x6d ]
jns r-xdata
jb r-xdata
bound esp [ ebp + 0x6c ]
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x74 ] dh
push edi
jae r-xdata
dec edi
jb r-xdata
add [ eax ] al
arpl [ ebp + 0x62 ] bp
push ebx
jne r-xdata
je r-xdata
dec esp
popad
inc esp
insd
popad
or [ eax ] al
add al 0x2c
add [ eax ] al
add [ eax ] eax
add al 0x0
push esp
outsd
je r-xdata
xor al 0x0
add [ ecx + 0x62 ] cl
insb
cmp [ eax ] al
add [ ecx + 0x62 ] cl
insb
dec esp
popad
dec esp
dec edi
bound esp [ ebp + 0x6c ]
xor [ eax ] edi
add [ eax + edi * 2 + 0x74 ] dh
inc ecx
jb r-xdata
jae r-xdata
bound esp [ ebp + 0x6c ]
je r-xdata
push edi
imul esi [ esi + ebp * 2 + 0x65 ] 0x79427373
add [ eax ] al
add [ eax ] al
je r-xdata
insb
dec ebx
add [ eax ] al
insb
bound ebp [ ebx + edx * 2 + 0x4f ]
dec ebx
dec esi
outsd
add [ eax ] al
add [ eax ] al
je r-xdata
arpl [ eax + eax + 0x63 ] si
insd
bound edx [ ebx + 0x4f ]
bound ebp [ esi + ecx * 2 + 0x42 ]
add [ eax ] al
add [ edx + 0x6c ] ch
push edx
jae r-xdata
jb r-xdata
inc edx
jns r-xdata
add [ eax ] al
add [ edx + 0x6c ] ch
insd
bound ecx [ esi + 0x42 ]
outsb
jae r-xdata
add [ eax ] eax
and [ eax ] al
adc al 0x0
add [ eax ] al
add eax 0x4001400
sub al 0x0
add [ ecx ] al
add [ eax + eax ] al
add [ eax ] eax
or [ eax ] al
add [ eax ] eax
or al 0x0
add [ eax ] eax
adc [ eax ] al
add [ eax ] eax
sub al 0x0
add [ ecx ] al
add [ eax + eax ] al
insb
add [ ecx + 0x62 ] cl
insb
xor [ eax ] esi
add [ ecx + 0x62 ] cl
insb
xor [ 0x62614c00 ] esi
insb
xor [ edi ] esi
add [ ecx + 0x62 ] cl
insb
xor dh [ eax ]
add [ eax + edi * 2 + 0x74 ] dh
push ebx
jne r-xdata
add [ eax ] al
insb
bound ebp [ ebx + edx * 2 + 0x4f ]
dec ebx
add [ eax ] al
insb
add [ ecx + 0x62 ] cl
insb
jne r-xdata
inc ecx
jb r-xdata
jb r-xdata
dec esp
popad
bound esp [ ebp + 0x6c ]
popad
outsb
add [ fs : eax ] al
add [ eax ] al
je r-xdata
inc esp
insd
add [ eax ] al
add [ ebx + 0x6d ] ah
bound ecx [ edi + ecx * 2 + 0x55 ]
adc [ eax ] al
add al 0x0
add [ eax ] al
add [ eax ] eax
add al 0x0
push esp
outsd
je r-xdata
xor dh [ ecx ]
add [ eax + edi * 2 + 0x74 ] dh
bound esp [ ebp + 0x6c ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
add al 0x2c
add [ eax ] al
add [ eax ] eax
adc al [ eax ]
add [ eax ] al
inc ebx
add [ ecx ] al
and [ eax ] al
sub eax 0x50002000
add [ ebp ] dl
push edx
add [ ebp ] al
add [ eax ] al
sbb al 0x0
adc [ eax ] al
add [ eax ] al
add al 0x0
adc [ eax ] al
add al 0x2c
add [ eax ] al
add [ eax ] eax
add al 0x0
add [ eax ] eax
or [ eax ] al
add [ eax ] eax
or al 0x0
add [ eax ] eax
inc ebx
outsd
insd
insd
popad
outsb
xor [ fs : edi + 0x43 ] ebx
insb
imul esp [ ebx + 0x6b ] 0x6f430000
insd
insd
popad
outsb
xor bl [ fs : edi + 0x43 ]
insb
imul esp [ ebx + 0x6b ] 0x100000
push 0x1000001
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x1 ] bl
add [ ecx ] cl
dec edi
lodsd [ esi ]
xor ebx [ ecx - 0x48ee309a ]
or al 0x0
stosb [ edi ]
add [ eax - 0x2d ] ah
xchg ebx eax
push es
add [ eax ] al
add [ ecx ] bl
add [ gs : ebx ] dh
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax + eax ] al
insb
add [ ecx + 0x62 ] cl
insb
xor [ edx ] esi
add [ ecx + 0x62 ] cl
insb
xor [ ebx ] esi
add [ eax ] bl
add [ eax + eax ] cl
add [ eax ] al
add eax [ eax ]
or al 0x0
add al 0x2c
sub_408660
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x1
mov [ ebp - 0x4 ] ecx
and al 0xfe
push eax
mov [ ebp + 0x8 ] eax
mov edx [ eax ]
call [ edx + 0x4 ]
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x364 ]
mov edi [ __vbaObjSet@IAT ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
lea ecx [ ebp - 0x18 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa8 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0xa8
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x364 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
lea ecx [ ebp - 0x18 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa8 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x3c4 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebp - 0x18 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
push 0xa8
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov [ ebp - 0x4 ] 0x0
push sub_408aa5
jmp sub_408aa4
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x348 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x3c4 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x3b8 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x348 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x33c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x3b8 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x33c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
sub_408aa5
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408ad0
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
mov edx [ esi ]
xor ebx ebx
push esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
call [ edx + 0x368 ]
mov edi [ __vbaObjSet@IAT ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call edi
mov esi eax
lea edx [ ebp - 0x18 ]
push edx
push esi
mov ecx [ esi ]
call [ ecx + 0xa8 ]
cmp eax ebx
fnclex
jge r-xdata
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0xa8
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x368 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
lea ecx [ ebp - 0x18 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
push 0xa8
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x3c8 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov [ ebp - 0x4 ] 0x0
push sub_408edd
jmp sub_408edc
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x3c8 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x34c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x34c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x3b4 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x3b4 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x338 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x338 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
sub_408edd
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408f00
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
mov edx [ esi ]
xor ebx ebx
push esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
call [ edx + 0x334 ]
mov edi [ __vbaObjSet@IAT ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call edi
mov esi eax
lea edx [ ebp - 0x18 ]
push edx
push esi
mov ecx [ esi ]
call [ ecx + 0xa8 ]
cmp eax ebx
fnclex
jge r-xdata
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0xa8
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x334 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
lea ecx [ ebp - 0x18 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
push 0xa8
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x384 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov [ ebp - 0x4 ] 0x0
push sub_40930d
jmp sub_40930c
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x384 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2fc ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x2fc ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x384 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x384 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2fc ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x2fc ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
sub_40930d
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409330
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
mov edx [ esi ]
xor ebx ebx
push esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
call [ edx + 0x328 ]
mov edi [ __vbaObjSet@IAT ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call edi
mov esi eax
lea edx [ ebp - 0x18 ]
push edx
push esi
mov ecx [ esi ]
call [ ecx + 0xa8 ]
cmp eax ebx
fnclex
jge r-xdata
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0xa8
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x328 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
lea ecx [ ebp - 0x18 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
push 0xa8
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x38c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov [ ebp - 0x4 ] 0x0
push sub_40973d
jmp sub_40973c
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x38c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x38c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x38c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
sub_40973d
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409760
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
mov edx [ esi ]
xor ebx ebx
push esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
call [ edx + 0x310 ]
mov edi [ __vbaObjSet@IAT ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call edi
mov esi eax
lea edx [ ebp - 0x18 ]
push edx
push esi
mov ecx [ esi ]
call [ ecx + 0xa8 ]
cmp eax ebx
fnclex
jge r-xdata
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0xa8
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x310 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
lea ecx [ ebp - 0x18 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
push 0xa8
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x380 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov [ ebp - 0x4 ] 0x0
push sub_409b6d
jmp sub_409b6c
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x380 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x304 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x304 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x380 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x380 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x304 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x304 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
sub_409b6d
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409b90
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
mov edx [ esi ]
xor ebx ebx
push esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
call [ edx + 0x32c ]
mov edi [ __vbaObjSet@IAT ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call edi
mov esi eax
lea edx [ ebp - 0x18 ]
push edx
push esi
mov ecx [ esi ]
call [ ecx + 0xa8 ]
cmp eax ebx
fnclex
jge r-xdata
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0xa8
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x32c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
lea ecx [ ebp - 0x18 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
push 0xa8
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x390 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov [ ebp - 0x4 ] 0x0
push sub_409f9d
jmp sub_409f9c
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x390 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x30c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x30c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x390 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x390 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x30c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x30c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
sub_409f9d
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409fc0
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
mov edx [ esi ]
xor ebx ebx
push esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
call [ edx + 0x36c ]
mov edi [ __vbaObjSet@IAT ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call edi
mov esi eax
lea edx [ ebp - 0x18 ]
push edx
push esi
mov ecx [ esi ]
call [ ecx + 0xa8 ]
cmp eax ebx
fnclex
jge r-xdata
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0xa8
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x36c ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
lea ecx [ ebp - 0x18 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
push 0xa8
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x388 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov [ ebp - 0x4 ] 0x0
push sub_40a3cd
jmp sub_40a3cc
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x388 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x300 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x300 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x388 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x388 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x300 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x300 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
sub_40a3cd
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40a3f0
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
mov edx [ esi ]
xor ebx ebx
push esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
call [ edx + 0x360 ]
mov edi [ __vbaObjSet@IAT ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call edi
mov esi eax
lea edx [ ebp - 0x18 ]
push edx
push esi
mov ecx [ esi ]
call [ ecx + 0xa8 ]
cmp eax ebx
fnclex
jge r-xdata
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0xa8
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x360 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
lea ecx [ ebp - 0x18 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x18 ]
neg esi
sbb esi esi
inc esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
test si si
je r-xdata
push 0xa8
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x3c0 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov [ ebp - 0x4 ] 0x0
push sub_40a7fd
jmp sub_40a7fc
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x3c0 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x344 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x344 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x3bc ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x94
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x3bc ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x9c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x340 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0xffffffff
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9c
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x340 ]
lea edx [ ebp - 0x1c ]
push eax
push edx
call edi
mov esi eax
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x94 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
push 0x94
push r-xdata
push esi
push eax
call ebx
sub_40a7fd
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40a820
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4dc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
and eax 0x1
mov [ ebp - 0x4 ] eax
and edi 0xfffffffe
push edi
mov [ ebp + 0x8 ] edi
mov ecx [ edi ]
call [ ecx + 0x4 ]
xor esi esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x84 ] esi
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x94 ] esi
mov [ ebp - 0x98 ] esi
mov [ ebp - 0x9c ] esi
mov [ ebp - 0xa0 ] esi
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] esi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0xb8 ] esi
mov [ ebp - 0xbc ] esi
mov [ ebp - 0xc4 ] esi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xcc ] esi
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xd4 ] esi
mov [ ebp - 0xd8 ] esi
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] esi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xe8 ] esi
mov [ ebp - 0xec ] esi
mov [ ebp - 0xf0 ] esi
mov [ ebp - 0xf4 ] esi
mov [ ebp - 0xfc ] esi
mov [ ebp - 0x100 ] esi
mov [ ebp - 0x108 ] esi
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x110 ] esi
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] esi
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x120 ] esi
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x128 ] esi
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] esi
mov [ ebp - 0x138 ] esi
mov [ ebp - 0x13c ] esi
mov [ ebp - 0x140 ] esi
mov [ ebp - 0x144 ] esi
mov [ ebp - 0x148 ] esi
mov [ ebp - 0x14c ] esi
mov [ ebp - 0x150 ] esi
mov edx [ edi ]
lea eax [ ebp - 0x170 ]
push eax
push edi
mov [ ebp - 0x154 ] esi
mov [ ebp - 0x158 ] esi
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x160 ] esi
mov [ ebp - 0x164 ] esi
mov [ ebp - 0x168 ] esi
mov [ ebp - 0x16c ] esi
mov [ ebp - 0x170 ] esi
mov [ ebp - 0x180 ] esi
mov [ ebp - 0x190 ] esi
mov [ ebp - 0x1a0 ] esi
mov [ ebp - 0x1b0 ] esi
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x1d0 ] esi
mov [ ebp - 0x1e0 ] esi
mov [ ebp - 0x1f0 ] esi
mov [ ebp - 0x200 ] esi
mov [ ebp - 0x210 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x250 ] esi
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x270 ] esi
mov [ ebp - 0x290 ] esi
mov [ ebp - 0x2a0 ] esi
mov [ ebp - 0x2c0 ] esi
mov [ ebp - 0x2d0 ] esi
mov [ ebp - 0x2f0 ] esi
mov [ ebp - 0x300 ] esi
mov [ ebp - 0x320 ] esi
mov [ ebp - 0x330 ] esi
mov [ ebp - 0x350 ] esi
mov [ ebp - 0x360 ] esi
mov [ ebp - 0x380 ] esi
mov [ ebp - 0x390 ] esi
mov [ ebp - 0x3b0 ] esi
mov [ ebp - 0x3b4 ] esi
mov [ ebp - 0x3b8 ] esi
mov [ ebp - 0x3d0 ] esi
mov [ ebp - 0x3d4 ] esi
mov [ ebp - 0x3d8 ] esi
mov [ ebp - 0x3dc ] esi
call [ edx + 0x218 ]
cmp eax esi
fnclex
jge r-xdata
mov eax [ ebp - 0x170 ]
lea ecx [ ebp - 0x3d8 ]
push eax
push ecx
mov [ ebp - 0x170 ] esi
call [ __vbaObjSet@IAT ]
push eax
lea edx [ ebp - 0xbc ]
lea eax [ ebp - 0x3dc ]
push edx
push eax
call [ __vbaForEachCollAd@IAT ]
mov ebx [ __vbaFreeVar@IAT ]
push 0x218
push r-xdata
push edi
push eax
call [ __vbaHresultCheckObj@IAT ]
call [ Ordinal_MSVBVM60_598@IAT ]
push r-xdata
push esi
call [ __vbaCastObj@IAT ]
lea ecx [ ebp - 0x48 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
push esi
lea edx [ ebp - 0x180 ]
push r-xdata
push edx
call [ Ordinal_MSVBVM60_716@IAT ]
lea eax [ ebp - 0x180 ]
push r-xdata
push eax
call [ __vbaCastObjVar@IAT ]
lea ecx [ ebp - 0x48 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
lea ecx [ edi + 0x5c ]
mov edi [ __vbaStrCopy@IAT ]
mov edx r-xdata
call edi
mov edx r-xdata
lea ecx [ ebp - 0x110 ]
mov [ ebp - 0x11c ] esi
call edi
mov edx [ ebp - 0x48 ]
push esi
push edx
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x104 ] esi
call [ __vbaObjIs@IAT ]
test ax ax
jne r-xdata
mov ecx [ ebp - 0xbc ]
push esi
push r-xdata
lea edx [ ebp - 0x180 ]
push ecx
push edx
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8008
call [ __vbaLateMemCallLd@IAT ]
add esp 0x10
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ __vbaVarTstEq@IAT ]
lea ecx [ ebp - 0x180 ]
mov di ax
call ebx
cmp di si
je r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
lea ecx [ ebp - 0x170 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
mov ecx 0xa
mov edi eax
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
mov edx [ edi ]
lea eax [ ebp - 0x1b0 ]
lea ecx [ ebp - 0x1a0 ]
push eax
push ecx
lea eax [ ebp - 0x190 ]
lea ecx [ ebp - 0x180 ]
push eax
push ecx
push 0x14
push edi
call [ edx + 0x44 ]
cmp eax esi
fnclex
jge r-xdata
push r-xdata
mov ecx 0x4002
sub esp 0x10
mov [ ebp - 0x210 ] ecx
mov edx esp
lea eax [ ebp - 0x11c ]
mov edi [ __vbaLateIdCallLd@IAT ]
mov [ ebp - 0x208 ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
push 0x1
push 0x5
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x48 ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x9c ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
mov ecx 0x4002
sub esp 0x10
mov [ ebp - 0x210 ] ecx
mov edx esp
lea eax [ ebp - 0x11c ]
mov [ ebp - 0x208 ] eax
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
push 0x6
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x48 ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x134 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
cmp [ ebp - 0x11c ] si
jne r-xdata
lea edx [ ebp - 0xbc ]
lea eax [ ebp - 0x3dc ]
push edx
push eax
call [ __vbaNextEachCollAd@IAT ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
sub esp 0x10
mov ecx 0x8
mov edx esp
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
push r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0xbc ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
call [ __vbaLateMemSt@IAT ]
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edi [ __vbaLateIdCallLd@IAT ]
add esp 0x14
push 0x44
push r-xdata
push edi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov esi [ __vbaStrMove@IAT ]
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0xd
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x134 ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaStrVarMove@IAT ]
mov esi [ __vbaStrMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x3d0 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0x3d0 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
jne r-xdata
cmp eax esi
je r-xdata
cmp [ ebp - 0x11c ] 0x0
jne r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx 0xa
mov [ ebp - 0x3bc ] eax
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x28
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov eax [ ebp - 0x3d0 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x134 ]
push ecx
push edx
call edi
add esp 0x30
call [ Ordinal_MSVBVM60_685@IAT ]
lea edx [ ebp - 0x170 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov ecx 0xa
mov [ ebp - 0x3bc ] eax
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x1e
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov edx [ ebp - 0x60 ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x9
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x24c ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
push 0x3
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
push 0x8
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x244 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
call [ __vbaLateIdCall@IAT ]
add esp 0x3c
jmp r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
call [ Ordinal_MSVBVM60_685@IAT ]
lea ecx [ ebp - 0x170 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
mov ecx 0xa
mov [ ebp - 0x3bc ] eax
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push ecx
lea ecx [ ebp - 0x1a0 ]
mov edx [ eax ]
push ecx
lea ecx [ ebp - 0x190 ]
push ecx
lea ecx [ ebp - 0x180 ]
push ecx
push 0xa
push eax
call [ edx + 0x44 ]
test eax eax
fnclex
jge r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x134 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x74 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
lea ecx [ ebp - 0x210 ]
push 0xa
lea edx [ ebp - 0x180 ]
lea eax [ ebp - 0x74 ]
push ecx
push edx
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x210 ] 0x4008
call [ Ordinal_MSVBVM60_617@IAT ]
lea eax [ ebp - 0x180 ]
jmp r-xdata
push r-xdata
push 0x0
call [ __vbaCastObj@IAT ]
push eax
lea eax [ ebp - 0x9c ]
push eax
call [ __vbaObjSet@IAT ]
push r-xdata
push 0x0
call [ __vbaCastObj@IAT ]
lea ecx [ ebp - 0x134 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push 0x2
push 0x1
lea edx [ ebp - 0x180 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0xd0 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x2
mov eax 0x3
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
push 0x2
push 0x19
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xb8 ]
push ecx
call [ __vbaLateIdCall@IAT ]
lea edx [ ebp - 0x110 ]
add esp 0x1c
mov [ ebp - 0x228 ] edx
lea edx [ ebp - 0x11c ]
mov [ ebp - 0x238 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4008
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ ebp - 0x240 ] 0x4002
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x240 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x23c ]
mov ecx esp
push 0x3
push 0xa
mov [ ecx ] edx
mov edx [ ebp - 0x238 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x234 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xb8 ]
push ecx
call [ __vbaLateIdCall@IAT ]
mov edx [ ebp - 0xd0 ]
add esp 0x3c
push 0x0
push edx
call [ __vbaObjIs@IAT ]
test ax ax
je r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x3
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0xd0 ]
push ecx
mov [ ebp - 0x12c ] 0x0
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea eax [ ebp - 0x1b0 ]
lea ecx [ ebp - 0x1a0 ]
push eax
lea edx [ ebp - 0x190 ]
push ecx
lea eax [ ebp - 0x180 ]
push edx
push eax
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
jmp r-xdata
mov edx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x110 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
jmp r-xdata
cmp [ ebp - 0x3c ] 0xffff
jne r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx 0xa
mov [ ebp - 0x3bc ] eax
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x50
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov eax [ ebp - 0x12c ]
test ax ax
mov [ ebp - 0xb0 ] eax
jle r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x13c ]
inc eax
neg eax
mov [ ebp - 0x3bc ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
cmp [ ebp - 0x3bc ] 0x0
je r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0xd0 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x2
mov eax 0x3
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x19
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
call [ __vbaLateIdCall@IAT ]
mov eax r-xdata
mov ecx 0x8
lea edx [ ebp - 0x11c ]
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x228 ] edx
add esp 0x1c
mov [ ebp - 0x230 ] 0x4002
mov edx esp
sub esp 0x10
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ edx + 0x4 ] ecx
mov ecx esp
push 0x2
push 0x16
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
call [ __vbaLateIdCall@IAT ]
lea edx [ ebp - 0x110 ]
add esp 0x1c
mov [ ebp - 0x228 ] edx
lea edx [ ebp - 0x11c ]
mov [ ebp - 0x238 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4008
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ ebp - 0x240 ] 0x4002
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x240 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x23c ]
mov ecx esp
push 0x3
push 0xa
mov [ ecx ] edx
mov edx [ ebp - 0x238 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x234 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
call [ __vbaLateIdCall@IAT ]
mov edx [ ebp - 0xd0 ]
add esp 0x3c
push 0x0
push edx
call [ __vbaObjIs@IAT ]
test ax ax
je r-xdata
xor eax eax
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x1
call [ __vbaUbound@IAT ]
mov ecx eax
call [ __vbaI2I4@IAT ]
mov [ ebp - 0x3e4 ] eax
mov [ ebp - 0x12c ] 0x0
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x4
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0xd0 ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
jmp r-xdata
movsx eax [ ebp - 0x12c ]
push 0x0
mov [ ebp - 0x438 ] eax
push eax
push 0x1
lea eax [ ebp - 0x1c ]
push r-xdata
push eax
push 0x4
push 0x0
call [ __vbaRedimPreserve@IAT ]
mov eax [ ebp - 0x1c ]
add esp 0x1c
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x208 ] r-xdata
test eax eax
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
cmp [ ebp - 0x11c ] 0x0
jne r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx 0xa
mov [ ebp - 0x3bc ] eax
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x28
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x43c ] eax
cmp [ eax ] 0x1
jne r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
lea edx [ ebp - 0x170 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov ecx 0xa
mov [ ebp - 0x3bc ] eax
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x1e
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov edx [ ebp - 0x60 ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x9
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x24c ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
push 0x3
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
push 0x8
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x244 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
call [ __vbaLateIdCall@IAT ]
add esp 0x3c
jmp r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x1c ]
cmp [ ecx ] 0x1
jne r-xdata
call [ __vbaErrorOverflow@IAT ]
nop
nop
nop
nop
nop
nop
nop
nop
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x5d0
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov ebx [ ebp + 0x8 ]
mov eax ebx
and eax 0x1
mov [ ebp - 0x4 ] eax
and ebx 0xfffffffe
push ebx
mov [ ebp + 0x8 ] ebx
mov ecx [ ebx ]
call [ ecx + 0x4 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x7c ] edi
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x84 ] edi
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] edi
mov [ ebp - 0x94 ] edi
mov [ ebp - 0x98 ] edi
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xa0 ] edi
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] edi
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0xb4 ] edi
mov [ ebp - 0xb8 ] edi
mov [ ebp - 0xbc ] edi
mov [ ebp - 0xc0 ] edi
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] edi
mov [ ebp - 0xcc ] edi
mov [ ebp - 0xd0 ] edi
mov [ ebp - 0xd4 ] edi
mov [ ebp - 0xd8 ] edi
mov [ ebp - 0xdc ] edi
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] edi
mov [ ebp - 0xe8 ] edi
mov [ ebp - 0xec ] edi
mov [ ebp - 0xf0 ] edi
mov [ ebp - 0xf4 ] edi
mov [ ebp - 0xf8 ] edi
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x100 ] edi
mov [ ebp - 0x104 ] edi
mov [ ebp - 0x108 ] edi
mov [ ebp - 0x10c ] edi
mov [ ebp - 0x110 ] edi
mov [ ebp - 0x114 ] edi
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x11c ] edi
mov [ ebp - 0x120 ] edi
mov [ ebp - 0x124 ] edi
mov [ ebp - 0x128 ] edi
mov [ ebp - 0x12c ] edi
mov [ ebp - 0x130 ] edi
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x138 ] edi
mov [ ebp - 0x13c ] edi
mov [ ebp - 0x140 ] edi
mov [ ebp - 0x144 ] edi
mov [ ebp - 0x148 ] edi
mov [ ebp - 0x14c ] edi
mov [ ebp - 0x150 ] edi
mov [ ebp - 0x154 ] edi
mov [ ebp - 0x158 ] edi
mov [ ebp - 0x15c ] edi
mov [ ebp - 0x160 ] edi
mov [ ebp - 0x164 ] edi
mov [ ebp - 0x168 ] edi
mov [ ebp - 0x16c ] edi
mov [ ebp - 0x170 ] edi
mov [ ebp - 0x174 ] edi
mov [ ebp - 0x178 ] edi
mov [ ebp - 0x17c ] edi
mov [ ebp - 0x180 ] edi
mov [ ebp - 0x184 ] edi
mov [ ebp - 0x188 ] edi
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x190 ] edi
mov [ ebp - 0x194 ] edi
mov [ ebp - 0x198 ] edi
mov [ ebp - 0x19c ] edi
mov [ ebp - 0x1a0 ] edi
mov [ ebp - 0x1a4 ] edi
mov [ ebp - 0x1a8 ] edi
mov [ ebp - 0x1ac ] edi
mov [ ebp - 0x1b0 ] edi
mov [ ebp - 0x1b4 ] edi
mov [ ebp - 0x1b8 ] edi
mov [ ebp - 0x1bc ] edi
mov [ ebp - 0x1c0 ] edi
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1c8 ] edi
mov [ ebp - 0x1cc ] edi
mov [ ebp - 0x1d0 ] edi
mov [ ebp - 0x1d4 ] edi
mov [ ebp - 0x1d8 ] edi
mov [ ebp - 0x1dc ] edi
mov [ ebp - 0x1e0 ] edi
mov [ ebp - 0x1e4 ] edi
mov [ ebp - 0x1e8 ] edi
mov [ ebp - 0x1ec ] edi
mov [ ebp - 0x1f0 ] edi
mov [ ebp - 0x1f4 ] edi
mov [ ebp - 0x1f8 ] edi
mov [ ebp - 0x1fc ] edi
mov [ ebp - 0x200 ] edi
mov [ ebp - 0x204 ] edi
mov [ ebp - 0x208 ] edi
mov [ ebp - 0x20c ] edi
mov [ ebp - 0x210 ] edi
mov [ ebp - 0x214 ] edi
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x220 ] edi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x228 ] edi
mov [ ebp - 0x22c ] edi
mov [ ebp - 0x230 ] edi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x238 ] edi
mov [ ebp - 0x23c ] edi
mov [ ebp - 0x240 ] edi
mov [ ebp - 0x244 ] edi
mov [ ebp - 0x248 ] edi
mov [ ebp - 0x24c ] edi
mov [ ebp - 0x250 ] edi
mov [ ebp - 0x254 ] edi
mov [ ebp - 0x258 ] edi
mov [ ebp - 0x25c ] edi
mov [ ebp - 0x260 ] edi
mov [ ebp - 0x264 ] edi
mov [ ebp - 0x268 ] edi
mov [ ebp - 0x26c ] edi
mov [ ebp - 0x270 ] edi
mov [ ebp - 0x274 ] edi
mov [ ebp - 0x278 ] edi
mov [ ebp - 0x27c ] edi
mov [ ebp - 0x280 ] edi
mov [ ebp - 0x284 ] edi
mov [ ebp - 0x288 ] edi
mov [ ebp - 0x28c ] edi
mov [ ebp - 0x290 ] edi
mov [ ebp - 0x294 ] edi
mov [ ebp - 0x298 ] edi
mov [ ebp - 0x29c ] edi
mov [ ebp - 0x2a0 ] edi
mov [ ebp - 0x2a4 ] edi
mov [ ebp - 0x2a8 ] edi
mov [ ebp - 0x2ac ] edi
mov [ ebp - 0x2b0 ] edi
mov [ ebp - 0x2b4 ] edi
mov [ ebp - 0x2b8 ] edi
mov [ ebp - 0x2bc ] edi
mov [ ebp - 0x2c0 ] edi
mov [ ebp - 0x2c4 ] edi
mov [ ebp - 0x2c8 ] edi
mov [ ebp - 0x2cc ] edi
mov [ ebp - 0x2d0 ] edi
mov [ ebp - 0x2d4 ] edi
mov [ ebp - 0x2d8 ] edi
mov [ ebp - 0x2dc ] edi
mov [ ebp - 0x2e0 ] edi
mov [ ebp - 0x2e4 ] edi
mov [ ebp - 0x2e8 ] edi
mov [ ebp - 0x2ec ] edi
mov [ ebp - 0x2f0 ] edi
mov [ ebp - 0x2f4 ] edi
mov [ ebp - 0x2f8 ] edi
mov [ ebp - 0x2fc ] edi
mov [ ebp - 0x300 ] edi
mov [ ebp - 0x304 ] edi
mov [ ebp - 0x308 ] edi
mov [ ebp - 0x30c ] edi
mov [ ebp - 0x310 ] edi
mov [ ebp - 0x314 ] edi
mov [ ebp - 0x318 ] edi
mov [ ebp - 0x31c ] edi
mov [ ebp - 0x320 ] edi
mov [ ebp - 0x324 ] edi
mov [ ebp - 0x328 ] edi
mov [ ebp - 0x32c ] edi
mov [ ebp - 0x330 ] edi
mov [ ebp - 0x334 ] edi
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x33c ] edi
mov [ ebp - 0x340 ] edi
mov [ ebp - 0x344 ] edi
mov [ ebp - 0x348 ] edi
mov [ ebp - 0x34c ] edi
mov [ ebp - 0x350 ] edi
mov [ ebp - 0x354 ] edi
mov [ ebp - 0x358 ] edi
mov [ ebp - 0x35c ] edi
mov [ ebp - 0x360 ] edi
mov [ ebp - 0x364 ] edi
mov [ ebp - 0x368 ] edi
mov [ ebp - 0x36c ] edi
mov [ ebp - 0x370 ] edi
mov [ ebp - 0x374 ] edi
mov [ ebp - 0x378 ] edi
mov [ ebp - 0x37c ] edi
mov [ ebp - 0x380 ] edi
mov [ ebp - 0x384 ] edi
mov [ ebp - 0x388 ] edi
mov [ ebp - 0x38c ] edi
mov [ ebp - 0x390 ] edi
mov [ ebp - 0x3a0 ] edi
mov [ ebp - 0x3b0 ] edi
mov [ ebp - 0x3c0 ] edi
mov [ ebp - 0x3d0 ] edi
mov [ ebp - 0x3e0 ] edi
mov eax [ rw-data ]
mov [ ebp - 0x414 ] edi
cmp eax edi
jne r-xdata
mov [ ebp - 0x12c ] ecx
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
xor eax eax
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0x12c ] eax
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0xb8 ]
lea eax [ ebp - 0x11c ]
push 0x3
mov [ ebp - 0x208 ] eax
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push ecx
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x24 ] eax
call ebx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov eax 0x1
add ax [ ebp - 0x12c ]
jo r-xdata
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xa0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xa0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0xc4 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x2
mov eax 0x3
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x19
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x78 ]
push ecx
call [ __vbaLateIdCall@IAT ]
mov edx [ ebp - 0x1c ]
add esp 0x2c
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
push edx
lea eax [ ebp - 0x138 ]
push eax
call [ __vbaAryLock@IAT ]
mov ecx [ ebp - 0x138 ]
test ecx ecx
je r-xdata
mov edx [ ecx + 0x14 ]
movsx eax ax
sub eax edx
mov edx [ ecx + 0x10 ]
cmp eax edx
mov [ ebp - 0x3bc ] eax
jb r-xdata
mov esi [ rw-data ]
lea eax [ ebp - 0x2b4 ]
push eax
push esi
mov edx [ esi ]
call [ edx + 0x1c ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
lea edx [ ecx * 4 ]
mov [ ebp - 0x43c ] edx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
cmp [ ebp - 0x24 ] 0xffff
jne r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx 0xa
mov [ ebp - 0x3bc ] eax
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x50
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov [ ebp - 0x12c ] eax
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x138 ]
cmp [ ecx ] 0x1
jne r-xdata
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x3bc ]
mov eax [ ebp - 0x2b4 ]
push eax
mov esi eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
cmp eax edi
fnclex
jge r-xdata
push 0x1c
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ ebp - 0x210 ]
mov edx [ ebp - 0x20c ]
sub esp 0x10
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0xd0 ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x43c ]
add ecx eax
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov cx [ ebp - 0x12c ]
add cx 0x1
jo r-xdata
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0xd0 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x2
mov eax 0x3
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x19
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
call [ __vbaLateIdCall@IAT ]
lea edx [ ebp - 0x110 ]
add esp 0x1c
mov [ ebp - 0x228 ] edx
lea edx [ ebp - 0x11c ]
mov [ ebp - 0x238 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4008
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ ebp - 0x240 ] 0x4002
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x240 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x23c ]
mov ecx esp
push 0x3
push 0xa
mov [ ecx ] edx
mov edx [ ebp - 0x238 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x234 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
call [ __vbaLateIdCall@IAT ]
mov edx [ ebp - 0xd0 ]
add esp 0x3c
push 0x0
push edx
call [ __vbaObjIs@IAT ]
test ax ax
je r-xdata
movsx eax [ ebp - 0x12c ]
push 0x0
mov [ ebp - 0x438 ] eax
push eax
push 0x1
lea eax [ ebp - 0x4c ]
push r-xdata
push eax
push 0x10
push 0x0
call [ __vbaRedimPreserve@IAT ]
lea edx [ ebp - 0x11c ]
add esp 0xc
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ebp - 0xc0 ] 0xffffffff
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xb8 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x13c ]
neg eax
neg eax
mov [ ebp - 0x3bc ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
cmp [ ebp - 0x3bc ] 0x0
je r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x12c ]
cmp ax [ ebp - 0x3e4 ]
jg r-xdata
cmp [ ebp - 0xf8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x78 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x13c ]
inc eax
neg eax
mov [ ebp - 0x3bc ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
cmp [ ebp - 0x3bc ] 0x0
je r-xdata
movsx eax [ ebp - 0x12c ]
mov edx [ ecx + 0x14 ]
sub eax edx
mov edx [ ecx + 0x10 ]
cmp eax edx
mov [ ebp - 0x3bc ] eax
jb r-xdata
mov ecx [ ecx + 0xc ]
mov edx [ ecx + eax ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x374 ]
mov esi [ __vbaObjSet@IAT ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push 0x50
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
cmp [ ebp - 0x11c ] 0x0
jne r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx 0xa
mov [ ebp - 0x3bc ] eax
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x28
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x4
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0xb8 ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x24 ] eax
call ebx
jmp r-xdata
lea eax [ ebp - 0x11c ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x228 ] eax
mov eax [ ebp - 0x4c ]
test eax eax
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov [ ebp - 0x8c ] 0x0
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x4
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
jmp r-xdata
movsx eax [ ebp - 0xf8 ]
push 0x0
mov [ ebp - 0x440 ] eax
push eax
push 0x1
lea eax [ ebp - 0xc8 ]
push r-xdata
mov ebx 0x8
push eax
push ebx
push 0x0
call [ __vbaRedimPreserve@IAT ]
lea ecx [ ebp - 0x11c ]
add esp 0xc
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x210 ] ebx
mov [ ebp - 0x240 ] ebx
mov ecx ebx
mov ebx esp
mov eax r-xdata
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebx ] ecx
mov ecx [ ebp - 0x38c ]
sub esp 0x10
lea edx [ ebp - 0x11c ]
mov [ ebx + 0x4 ] ecx
mov ecx esp
push 0x2
push 0x5
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x384 ]
mov [ ebp - 0x8c ] 0xffffffff
mov [ ebp - 0x230 ] 0x4002
mov [ ebx + 0xc ] eax
mov eax 0x4002
mov [ ecx ] eax
mov eax [ ebp - 0x3ac ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0xc4 ]
push eax
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x3a4 ]
mov [ ecx + 0xc ] edx
lea ecx [ ebp - 0x200 ]
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x15c ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov ebx eax
mov eax 0x8
neg ebx
sbb ebx ebx
sub esp 0x10
mov edx esp
mov ecx [ ebp - 0x354 ]
neg ebx
mov [ edx ] eax
mov eax [ ebp - 0x35c ]
neg ebx
mov [ edx + 0x4 ] eax
mov eax r-xdata
sub esp 0x10
mov [ edx + 0x8 ] eax
mov eax 0x4002
mov [ edx + 0xc ] ecx
mov edx esp
mov ecx [ ebp - 0x374 ]
mov [ edx ] eax
mov eax [ ebp - 0x37c ]
mov [ edx + 0x4 ] eax
lea eax [ ebp - 0x11c ]
mov [ edx + 0x8 ] eax
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0xc4 ]
push 0x2
push 0x5
lea eax [ ebp - 0x1f0 ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x158 ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
mov edx [ ebp - 0x32c ]
neg eax
neg eax
sub esp 0x10
and ebx eax
mov ecx esp
mov eax 0x8
sub esp 0x10
mov [ ecx ] eax
mov eax r-xdata
mov [ ecx + 0x4 ] edx
mov edx [ ebp - 0x34c ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x324 ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
push 0x2
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
push 0x5
mov [ ecx + 0x4 ] edx
lea edx [ ebp - 0x1e0 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x344 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xc4 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x154 ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
mov edx [ ebp - 0x2fc ]
neg eax
neg eax
sub esp 0x10
and ebx eax
mov ecx esp
mov eax 0x8
sub esp 0x10
mov [ ecx ] eax
mov eax r-xdata
mov [ ecx + 0x4 ] edx
mov edx [ ebp - 0x31c ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x2f4 ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x314 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xc4 ]
push 0x2
push 0x5
lea edx [ ebp - 0x1d0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x150 ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
mov edx [ ebp - 0x2cc ]
neg eax
neg eax
sub esp 0x10
and ebx eax
mov ecx esp
mov eax 0x8
sub esp 0x10
mov [ ecx ] eax
mov eax r-xdata
mov [ ecx + 0x4 ] edx
mov edx [ ebp - 0x2ec ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x2c4 ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
push 0x2
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
push 0x5
mov [ ecx + 0x4 ] edx
lea edx [ ebp - 0x1c0 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x2e4 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xc4 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
mov edx [ ebp - 0x29c ]
neg eax
neg eax
sub esp 0x10
and ebx eax
mov ecx esp
mov eax 0x8
sub esp 0x10
mov [ ecx ] eax
mov eax r-xdata
mov [ ecx + 0x4 ] edx
mov edx [ ebp - 0x2bc ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x294 ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x2b4 ]
push 0x2
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xc4 ]
push 0x5
lea edx [ ebp - 0x1b0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
mov edx [ ebp - 0x26c ]
neg eax
neg eax
sub esp 0x10
and ebx eax
mov ecx esp
mov eax 0x8
sub esp 0x10
mov [ ecx ] eax
mov eax r-xdata
mov [ ecx + 0x4 ] edx
mov edx [ ebp - 0x28c ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x264 ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
push 0x2
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
push 0x5
mov [ ecx + 0x4 ] edx
lea edx [ ebp - 0x1a0 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x284 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xc4 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
mov ecx [ ebp - 0x240 ]
neg eax
mov edx [ ebp - 0x23c ]
sub esp 0x10
neg eax
and ebx eax
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x238 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x234 ]
mov [ eax + 0x8 ] ecx
mov ecx esp
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x25c ]
mov eax 0x4002
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x254 ]
push 0x2
push 0x5
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xc4 ]
lea edx [ ebp - 0x190 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
mov ecx [ ebp - 0x210 ]
neg eax
mov edx [ ebp - 0x20c ]
sub esp 0x10
neg eax
and ebx eax
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0xc4 ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea edx [ ebp - 0x15c ]
neg eax
neg eax
and ebx eax
lea eax [ ebp - 0x158 ]
push edx
lea ecx [ ebp - 0x154 ]
push eax
lea edx [ ebp - 0x150 ]
push ecx
lea eax [ ebp - 0x14c ]
push edx
lea ecx [ ebp - 0x148 ]
push eax
lea edx [ ebp - 0x144 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
push eax
lea ecx [ ebp - 0x13c ]
push ecx
push 0x9
call [ __vbaFreeStrList@IAT ]
lea edx [ ebp - 0x200 ]
lea eax [ ebp - 0x1f0 ]
push edx
lea ecx [ ebp - 0x1e0 ]
push eax
lea edx [ ebp - 0x1d0 ]
push ecx
lea eax [ ebp - 0x1c0 ]
push edx
lea ecx [ ebp - 0x1b0 ]
push eax
lea edx [ ebp - 0x1a0 ]
push ecx
lea eax [ ebp - 0x190 ]
push edx
lea ecx [ ebp - 0x180 ]
push eax
push ecx
push 0x9
call [ __vbaFreeVarList@IAT ]
add esp 0x50
test bx bx
je r-xdata
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x138 ]
mov eax [ ebp - 0x3bc ]
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
call [ Ordinal_MSVBVM60_685@IAT ]
lea edx [ ebp - 0x170 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov ecx 0x80020004
mov [ ebp - 0x3bc ] eax
mov [ ebp - 0x1a8 ] ecx
mov eax 0xa
mov [ ebp - 0x198 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1b0 ] eax
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x1e
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov edx [ ebp - 0x60 ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x9
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x24c ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
push 0x3
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
push 0x8
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x244 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
call [ __vbaLateIdCall@IAT ]
add esp 0x3c
jmp r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x448 ] eax
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc4 ]
lea edx [ ebp - 0x180 ]
push ecx
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x50 ] eax
call ebx
cmp [ ebp - 0x50 ] 0xffff
jne r-xdata
mov ebx [ __vbaFreeVar@IAT ]
mov eax [ ebp - 0xc8 ]
lea edx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov ecx [ ecx + 0xc ]
lea edx [ ebp - 0x11c ]
sub esp 0x10
add ecx eax
mov [ ebp - 0x238 ] edx
mov edx [ ebp - 0x210 ]
mov eax esp
sub esp 0x10
mov [ ebp - 0x230 ] 0x4008
mov [ ebp - 0x228 ] ecx
mov [ eax ] edx
mov edx [ ebp - 0x20c ]
mov [ ebp - 0x240 ] 0x4002
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x208 ]
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x230 ]
mov eax esp
sub esp 0x10
mov [ eax ] edx
mov edx [ ebp - 0x22c ]
mov [ eax + 0x4 ] edx
mov edx esp
push 0x3
push 0xa
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ eax + 0xc ] ecx
mov eax [ ebp - 0x240 ]
mov ecx [ ebp - 0x23c ]
mov [ edx ] eax
mov eax [ ebp - 0x238 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x234 ]
mov [ edx + 0x8 ] eax
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x78 ]
push edx
call [ __vbaLateIdCall@IAT ]
add esp 0x3c
lea eax [ ebp - 0x138 ]
push eax
call [ __vbaAryUnlock@IAT ]
mov edx [ ebp - 0xa0 ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x9
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x24c ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
push 0x3
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x244 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push 0x8
push ecx
call [ __vbaLateIdCall@IAT ]
lea edx [ ebp - 0x11c ]
add esp 0x2c
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xc4 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xa4 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x3
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x378 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1a4 ]
cmp eax edi
fnclex
jge r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
cmp [ ebp - 0x11c ] 0x0
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x44c ] eax
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ebx eax
cmp [ eax ] 0x1
jne r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x32c ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
jmp r-xdata
push 0x1a4
push r-xdata
jmp r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx 0x80020004
mov [ ebp - 0x3bc ] eax
mov [ ebp - 0x1a8 ] ecx
mov eax 0xa
mov [ ebp - 0x198 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1b0 ] eax
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x32
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xe4 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xe0 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
mov eax r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x98 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x118 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
mov eax r-xdata
mov [ ebp - 0x208 ] eax
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
sub esp 0x10
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x230 ] 0x4002
mov [ edx + 0x4 ] ecx
mov ecx esp
push 0x2
push 0x5
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x10c ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xcc ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x450 ] eax
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
shl ecx 0x4
mov [ ebp - 0x448 ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x444 ] eax
cmp [ eax ] 0x1
jne r-xdata
mov ebx [ ebp - 0x440 ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ebx edx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x4 ] edi
fwait
push sub_41aa8a
jmp r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0xd0 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x124 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x2
mov eax 0x3
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x19
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
call [ __vbaLateIdCall@IAT ]
mov eax r-xdata
mov ecx 0x8
lea edx [ ebp - 0x110 ]
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x228 ] edx
lea edx [ ebp - 0x11c ]
add esp 0x1c
mov [ ebp - 0x238 ] edx
mov edx esp
sub esp 0x10
mov [ ebp - 0x230 ] 0x4008
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x240 ] 0x4002
mov [ edx + 0x4 ] ecx
mov ecx esp
sub esp 0x10
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x240 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x23c ]
mov ecx esp
push 0x3
push 0xa
mov [ ecx ] edx
mov edx [ ebp - 0x238 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x234 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
call [ __vbaLateIdCall@IAT ]
mov edx [ ebp - 0xd0 ]
add esp 0x3c
push 0x0
push edx
call [ __vbaObjIs@IAT ]
test ax ax
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x454 ] eax
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
shl ecx 0x4
mov [ ebp - 0x44c ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov edx [ ebp - 0x210 ]
mov eax [ ebp - 0x20c ]
sub esp 0x10
mov ecx esp
sub esp 0x10
mov [ ecx ] edx
mov edx [ ebp - 0x208 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x204 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x230 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x22c ]
mov ecx esp
push 0x2
push 0x5
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xb8 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x448 ]
add ecx eax
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov [ ebp - 0xf8 ] ecx
mov ecx [ ebp - 0x440 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
shl ebx 0x3
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x32c ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
retn
cmp [ ebp - 0x11c ] 0x0
jne r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx 0x80020004
mov [ ebp - 0x3bc ] eax
mov [ ebp - 0x1a8 ] ecx
mov eax 0xa
mov [ ebp - 0x198 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1b0 ] eax
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x3c
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov [ ebp - 0x12c ] edx
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
shl ecx 0x4
mov [ ebp - 0x450 ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov eax [ ebp - 0x210 ]
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0xb8 ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov ecx [ ebp - 0x4c ]
mov edx eax
mov eax [ ecx + 0xc ]
mov ecx [ ebp - 0x44c ]
lea ecx [ eax + ecx + 0x4 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0x4c ]
lea edx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
lea edx [ ecx * 8 ]
mov [ ebp - 0x444 ] edx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x210 ]
mov edx [ ebp - 0x20c ]
sub esp 0x10
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0xc4 ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0xc8 ]
mov ecx [ eax + 0xc ]
add ecx ebx
call [ __vbaStrCopy@IAT ]
mov ebx [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x13c ]
call ebx
lea ecx [ ebp - 0x180 ]
call [ __vbaFreeVar@IAT ]
mov eax [ ebp - 0xc8 ]
lea ecx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x328 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
push 0x1f4
push r-xdata
jmp r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
lea edx [ ebp - 0x170 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov ecx 0x80020004
mov [ ebp - 0x3bc ] eax
mov [ ebp - 0x1a8 ] ecx
mov eax 0xa
mov [ ebp - 0x198 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1b0 ] eax
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x46
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov edx [ ebp - 0x60 ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x9
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x24c ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
push 0x3
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
push 0x8
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x244 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
call [ __vbaLateIdCall@IAT ]
add esp 0x3c
jmp r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
shl ecx 0x4
mov [ ebp - 0x454 ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x210 ]
mov edx [ ebp - 0x20c ]
sub esp 0x10
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0xb8 ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x450 ]
lea ecx [ ecx + eax + 0x8 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov ecx [ ebp - 0x210 ]
mov edx [ ebp - 0x20c ]
sub esp 0x10
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x78 ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0xc8 ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x444 ]
lea ecx [ ecx + eax + 0x4 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call ebx
lea ecx [ ebp - 0x180 ]
call [ __vbaFreeVar@IAT ]
mov cx [ ebp - 0xf8 ]
add cx 0x1
jo r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x3
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x124 ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x210 ]
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0xb8 ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov ecx [ ebp - 0x4c ]
mov edx eax
mov eax [ ecx + 0xc ]
mov ecx [ ebp - 0x454 ]
lea ecx [ eax + ecx + 0xc ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov dx [ ebp - 0x12c ]
add dx 0x1
jo r-xdata
mov edx [ ebx ]
push ebx
call [ edx + 0x35c ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x328 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
cmp [ ebp - 0x3c ] 0xffff
jne r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx 0x80020004
mov [ ebp - 0x3bc ] eax
mov [ ebp - 0x1a8 ] ecx
mov eax 0xa
mov [ ebp - 0x198 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1b0 ] eax
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x50
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push 0x1f4
push r-xdata
jmp r-xdata
mov eax [ ebp - 0x58 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x124 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x13c ]
neg eax
neg eax
mov [ ebp - 0x3bc ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
cmp [ ebp - 0x3bc ] 0x0
je r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x36c ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x35c ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0xb4 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xb4 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x124 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xb4 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x120 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xb4 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xb4 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x84 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xb4 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x5c ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x2
mov eax 0x3
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x19
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x124 ]
push ecx
call [ __vbaLateIdCall@IAT ]
lea edx [ ebp - 0x58 ]
add esp 0x1c
mov [ ebp - 0x228 ] edx
lea edx [ ebp - 0x11c ]
mov [ ebp - 0x238 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4008
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ ebp - 0x240 ] 0x4002
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x240 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x23c ]
mov ecx esp
push 0x3
push 0xa
mov [ ecx ] edx
mov edx [ ebp - 0x238 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x234 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x124 ]
push ecx
call [ __vbaLateIdCall@IAT ]
add esp 0x3c
cmp [ ebp - 0x11c ] 0x0
jne r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
lea ecx [ ebp - 0x170 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
mov ecx 0x80020004
mov [ ebp - 0x3bc ] eax
mov [ ebp - 0x1a8 ] ecx
mov eax 0xa
mov [ ebp - 0x198 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1b0 ] eax
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push ecx
lea ecx [ ebp - 0x1a0 ]
mov edx [ eax ]
push ecx
lea ecx [ ebp - 0x190 ]
push ecx
lea ecx [ ebp - 0x180 ]
push ecx
push 0x50
push eax
call [ edx + 0x44 ]
test eax eax
fnclex
jge r-xdata
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x4
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x124 ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
jmp r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x124 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xfc ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x124 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x58 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push 0x1f4
push r-xdata
jmp r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
lea edx [ ebp - 0x170 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov ecx 0x80020004
mov [ ebp - 0x3bc ] eax
mov [ ebp - 0x1a8 ] ecx
mov eax 0xa
mov [ ebp - 0x198 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1b0 ] eax
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x5a
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov edx [ ebp - 0xb4 ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x9
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x24c ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
push 0x3
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
push 0x8
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x244 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
call [ __vbaLateIdCall@IAT ]
add esp 0x3c
jmp r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea eax [ ebp - 0x1b0 ]
lea ecx [ ebp - 0x1a0 ]
push eax
lea edx [ ebp - 0x190 ]
push ecx
lea eax [ ebp - 0x180 ]
push edx
push eax
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov edx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x358 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x36c ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x124 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xf4 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x124 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x38 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
mov eax r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x124 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xdc ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x124 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x114 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
mov eax r-xdata
mov [ ebp - 0x208 ] eax
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
sub esp 0x10
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x230 ] 0x4002
mov [ edx + 0x4 ] ecx
mov ecx esp
push 0x2
push 0x5
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x124 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x20 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x3
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push 0x1f4
push r-xdata
jmp r-xdata
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x3
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x120 ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x120 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x128 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0x128 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
jne r-xdata
mov edx [ ebx ]
push ebx
call [ edx + 0x368 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x358 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
xor eax eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x104 ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x4
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push 0x1f4
push r-xdata
jmp r-xdata
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x3
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x44 ]
push ecx
mov [ ebp - 0x12c ] 0x0
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
movsx eax ax
push 0x0
mov [ ebp - 0x438 ] eax
push eax
push 0x1
lea eax [ ebp - 0xd8 ]
push r-xdata
push eax
push 0x8
push 0x0
call [ __vbaRedimPreserve@IAT ]
mov ecx [ ebp - 0x438 ]
push 0x0
push ecx
push 0x1
lea edx [ ebp - 0x54 ]
push 0x8
push edx
push 0x4
push 0x180
call [ __vbaRedimPreserve@IAT ]
or eax 0xffffffff
add esp 0x38
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x104 ] eax
lea eax [ ebp - 0x11c ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x228 ] eax
mov eax [ ebp - 0xd8 ]
test eax eax
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x230 ] 0x4002
je r-xdata
cmp [ ebp - 0x3c ] 0xffff
mov [ ebp - 0x12c ] eax
jne r-xdata
cmp ax 0xffff
jne r-xdata
mov ecx [ ebp - 0x5c ]
lea edx [ ebp - 0x180 ]
push ecx
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
mov eax [ ebp - 0x3c ]
mov edx [ ebx ]
push ebx
call [ edx + 0x310 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x368 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x12c ] 0x0
mov [ edx + 0x4 ] ecx
push 0x3
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
movsx eax [ ebp - 0x12c ]
push 0x0
mov [ ebp - 0x438 ] eax
push eax
push 0x1
lea eax [ ebp - 0x7c ]
push 0x8
push eax
push 0x4
push 0x180
call [ __vbaRedimPreserve@IAT ]
mov eax [ ebp - 0x7c ]
add esp 0x1c
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x208 ] r-xdata
test eax eax
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x458 ] eax
cmp [ eax ] 0x1
jne r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push 0x1f4
push r-xdata
jmp r-xdata
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x12c ] 0x0
mov [ edx + 0x4 ] ecx
push 0x3
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
movsx eax [ ebp - 0x12c ]
push 0x0
mov [ ebp - 0x438 ] eax
push eax
push 0x1
lea eax [ ebp - 0xf0 ]
push r-xdata
push eax
push 0xc
push 0x0
mov [ ebp - 0x68 ] 0xffffffff
call [ __vbaRedimPreserve@IAT ]
mov eax [ ebp - 0xf0 ]
add esp 0x1c
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x208 ] r-xdata
test eax eax
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x464 ] eax
cmp [ eax ] 0x1
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
mov edx [ ebx ]
push ebx
call [ edx + 0x364 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x310 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
push r-xdata
push 0x0
mov [ ebp - 0x11c ] 0x0
call [ __vbaCastObj@IAT ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __vbaObjSet@IAT ]
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
cmp [ ebp - 0x11c ] 0x0
je r-xdata
movsx eax [ ebp - 0x12c ]
push 0x0
mov [ ebp - 0x438 ] eax
push eax
push 0x1
lea eax [ ebp - 0x28 ]
push r-xdata
push eax
push 0x14
push 0x0
call [ __vbaRedimPreserve@IAT ]
mov eax [ ebp - 0x28 ]
add esp 0x1c
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x208 ] r-xdata
test eax eax
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov [ ebp - 0x12c ] eax
jmp r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x460 ] eax
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
shl ecx 0x3
mov [ ebp - 0x458 ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push 0x1f4
push r-xdata
jmp r-xdata
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x130 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0xd0 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
push r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x210 ] ecx
mov eax r-xdata
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x1
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x60 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x2
mov eax 0x3
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x19
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
call [ __vbaLateIdCall@IAT ]
lea edx [ ebp - 0x110 ]
add esp 0x1c
mov [ ebp - 0x228 ] edx
lea edx [ ebp - 0x11c ]
mov [ ebp - 0x238 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4008
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ ebp - 0x240 ] 0x4002
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x240 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x23c ]
mov ecx esp
push 0x3
push 0xa
mov [ ecx ] edx
mov edx [ ebp - 0x238 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x234 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xd0 ]
push ecx
call [ __vbaLateIdCall@IAT ]
add esp 0x3c
cmp [ ebp - 0x11c ] 0x0
jne r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
lea ecx [ ebp - 0x170 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
mov ecx 0x80020004
mov [ ebp - 0x3bc ] eax
mov [ ebp - 0x1a8 ] ecx
mov eax 0xa
mov [ ebp - 0x198 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1b0 ] eax
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push ecx
lea ecx [ ebp - 0x1a0 ]
mov edx [ eax ]
push ecx
lea ecx [ ebp - 0x190 ]
push ecx
lea ecx [ ebp - 0x180 ]
push ecx
push 0x64
push eax
call [ edx + 0x44 ]
test eax eax
fnclex
jge r-xdata
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
cmp [ ebp - 0x3c ] 0xffff
jne r-xdata
lea edx [ ecx * 4 ]
mov [ ebp - 0x464 ] edx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
jmp r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
lea eax [ ecx * 8 ]
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov eax [ ebp - 0x210 ]
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x120 ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov ecx [ ebp - 0xd8 ]
mov edx eax
mov eax [ ebp - 0x458 ]
mov ecx [ ecx + 0xc ]
add ecx eax
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0xd8 ]
lea edx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov edx [ ebx ]
push ebx
call [ edx + 0x360 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x364 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
lea edx [ ebp - 0x170 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov ecx 0x80020004
mov [ ebp - 0x3bc ] eax
mov [ ebp - 0x1a8 ] ecx
mov eax 0xa
mov [ ebp - 0x198 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1b0 ] eax
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea edx [ ebp - 0x1b0 ]
mov eax [ ebp - 0x3bc ]
push edx
lea edx [ ebp - 0x1a0 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x180 ]
push edx
push 0x6e
push eax
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
mov edx [ ebp - 0x60 ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x9
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
sub esp 0x10
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x24c ]
mov [ ecx + 0xc ] eax
mov ecx esp
mov eax 0x4002
push 0x3
mov [ ecx ] eax
lea eax [ ebp - 0x11c ]
push 0x8
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x244 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x48 ]
push ecx
call [ __vbaLateIdCall@IAT ]
add esp 0x3c
jmp r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea eax [ ebp - 0x1b0 ]
lea ecx [ ebp - 0x1a0 ]
push eax
lea edx [ ebp - 0x190 ]
push ecx
lea eax [ ebp - 0x180 ]
push edx
push eax
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov edx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x210 ]
mov edx [ ebp - 0x20c ]
sub esp 0x10
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x44 ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0x7c ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x464 ]
add ecx eax
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x4
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x44 ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
mov ax [ ebp - 0x12c ]
add ax 0x1
jo r-xdata
lea edx [ ecx * 4 ]
mov [ ebp - 0x460 ] edx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov edx [ ebp - 0x210 ]
sub esp 0x10
mov ecx esp
mov [ ebp - 0x45c ] eax
mov eax [ ebp - 0x20c ]
sub esp 0x10
mov [ ecx ] edx
mov edx [ ebp - 0x208 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x204 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x230 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x22c ]
mov ecx esp
push 0x2
push 0x5
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x120 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0xd8 ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x45c ]
lea ecx [ ecx + eax + 0x4 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push 0x1f4
push r-xdata
jmp r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
mov ecx [ ebp - 0x3bc ]
push 0x44
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x70 ] 0x0
mov [ edx + 0x4 ] ecx
push 0x3
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
lea eax [ ecx + ecx * 4 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
sub esp 0x10
mov [ ebp - 0x12c ] edx
mov edx esp
lea eax [ ebp - 0x11c ]
mov [ ebp - 0x208 ] eax
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
push 0x4
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x468 ] eax
mov eax [ ebp - 0x210 ]
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x84 ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov ecx [ ebp - 0xf0 ]
mov edx eax
mov eax [ ebp - 0x468 ]
mov ecx [ ecx + 0xc ]
add ecx eax
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0xf0 ]
lea edx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov ecx [ ebp - 0x210 ]
mov edx [ ebp - 0x20c ]
sub esp 0x10
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x120 ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0x54 ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x460 ]
add ecx eax
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x4
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x120 ]
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
lea edx [ ebp - 0x180 ]
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
mov ax [ ebp - 0x12c ]
add ax 0x1
jo r-xdata
mov edx [ ebx ]
push ebx
call [ edx + 0x330 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x360 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x12c ] 0x0
jne r-xdata
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
lea eax [ ecx + ecx * 4 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x474 ] eax
mov eax [ ebp - 0x210 ]
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x5c ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov ecx [ ebp - 0x28 ]
mov edx eax
mov eax [ ebp - 0x474 ]
mov ecx [ ecx + 0xc ]
add ecx eax
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov ecx [ ebp - 0x84 ]
lea edx [ ebp - 0x180 ]
push ecx
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
cmp [ ebp - 0x3c ] 0xffff
jne r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x210 ]
mov edx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x46c ] eax
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x84 ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0xf0 ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x46c ]
lea ecx [ ecx + eax + 0x4 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0xf0 ]
lea ecx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push 0x1f4
push r-xdata
jmp r-xdata
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call [ __vbaObjSet@IAT ]
mov ebx [ __vbaVarDup@IAT ]
mov ecx 0xa
mov edi eax
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
lea edx [ ebp - 0x220 ]
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x218 ] r-xdata
mov [ ebp - 0x220 ] 0x8
call ebx
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call ebx
mov ecx [ edi ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
push eax
lea edx [ ebp - 0x190 ]
lea eax [ ebp - 0x180 ]
push edx
push eax
push 0x78
push edi
call [ ecx + 0x44 ]
test eax eax
fnclex
jge r-xdata
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x3
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
mov edx 0x4002
sub esp 0x10
mov [ ebp - 0x230 ] edx
mov [ ebp - 0x260 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x240 ] ecx
lea eax [ ebp - 0x11c ]
mov [ edx ] ecx
mov ecx [ ebp - 0x23c ]
mov [ ebp - 0x228 ] eax
mov eax r-xdata
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x238 ] eax
sub esp 0x10
mov [ ebp - 0x208 ] r-xdata
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x234 ]
mov ecx esp
push 0x2
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x25c ]
mov [ ecx ] edx
mov edx [ ebp - 0x254 ]
push 0x5
mov [ ecx + 0x4 ] eax
lea eax [ ebp - 0x11c ]
mov [ ebp - 0x210 ] 0x8
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x130 ]
push eax
mov [ ecx + 0xc ] edx
lea ecx [ ebp - 0x190 ]
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
mov ecx [ ebp - 0x20c ]
inc eax
sub esp 0x10
neg eax
mov [ ebp - 0x488 ] ax
mov eax [ ebp - 0x210 ]
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x130 ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov ecx [ ebp - 0x488 ]
lea edx [ ebp - 0x140 ]
neg eax
sbb eax eax
push edx
inc eax
neg eax
and ecx eax
lea eax [ ebp - 0x13c ]
push eax
push 0x2
mov [ ebp - 0x3bc ] cx
call [ __vbaFreeStrList@IAT ]
lea ecx [ ebp - 0x190 ]
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0x18
cmp [ ebp - 0x3bc ] 0x0
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
lea eax [ ecx + ecx * 4 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x210 ]
mov edx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x478 ] eax
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x5c ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x478 ]
lea ecx [ ecx + eax + 0x4 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x470 ] eax
mov eax [ ebp - 0x210 ]
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x84 ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov ecx [ ebp - 0xf0 ]
mov edx eax
mov eax [ ecx + 0xc ]
mov ecx [ ebp - 0x470 ]
lea ecx [ eax + ecx + 0x8 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov dx [ ebp - 0x12c ]
mov ecx 0x4002
add dx 0x1
mov [ ebp - 0x210 ] ecx
jo r-xdata
mov edx [ ebx ]
push ebx
call [ edx + 0x324 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x330 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x1b0 ]
lea edx [ ebp - 0x1a0 ]
push ecx
lea eax [ ebp - 0x190 ]
push edx
lea ecx [ ebp - 0x180 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
push 0x44
push r-xdata
push edi
push eax
call [ __vbaHresultCheckObj@IAT ]
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x100 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xac ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x100 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xd4 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
mov eax r-xdata
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov [ edx + 0x4 ] ecx
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
push 0x2
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x100 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xe8 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
lea edx [ ebp - 0x11c ]
sub esp 0x10
mov [ ebp - 0x228 ] edx
mov edx esp
mov ecx 0x8
mov eax r-xdata
mov [ ebp - 0x210 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
mov [ edx + 0x4 ] ecx
sub esp 0x10
mov [ ebp - 0x230 ] 0x4002
mov ecx esp
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
push 0x2
push 0x5
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ecx ] edx
mov edx [ ebp - 0x228 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x224 ]
mov [ ecx + 0x8 ] edx
lea edx [ ebp - 0x180 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x100 ]
push ecx
push edx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xa8 ]
call esi
lea ecx [ ebp - 0x180 ]
call ebx
jmp r-xdata
movsx eax [ ebp - 0x12c ]
push 0x0
mov [ ebp - 0x438 ] eax
push eax
push 0x1
lea eax [ ebp - 0xec ]
push r-xdata
push eax
push 0xc
push 0x0
mov [ ebp - 0x6c ] 0xffffffff
call [ __vbaRedimPreserve@IAT ]
mov eax [ ebp - 0xec ]
add esp 0x1c
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x208 ] r-xdata
test eax eax
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov [ ebp - 0x70 ] 0xffffffff
sub esp 0x10
mov [ ebp - 0x12c ] edx
mov edx esp
lea eax [ ebp - 0x11c ]
mov [ ebp - 0x208 ] eax
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
push 0x4
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
lea eax [ ecx + ecx * 4 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x47c ] eax
mov eax [ ebp - 0x210 ]
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x5c ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov ecx [ ebp - 0x28 ]
mov edx eax
mov eax [ ecx + 0xc ]
mov ecx [ ebp - 0x47c ]
lea ecx [ eax + ecx + 0x8 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push 0x1f4
push r-xdata
jmp r-xdata
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ ebp - 0x118 ]
mov edi [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x3d4 ]
call edi
mov edx [ ebp - 0x3d4 ]
mov ebx [ __vbaStrCmp@IAT ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
or eax 0xffffffff
cmp [ ebp - 0x3c ] ax
jne r-xdata
sub esp 0x10
mov ecx 0x4002
mov edx esp
mov [ ebp - 0x210 ] ecx
lea eax [ ebp - 0x11c ]
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] eax
push 0x4
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x5c ]
lea edx [ ebp - 0x180 ]
push ecx
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
cmp [ ebp - 0x3c ] 0xffff
jne r-xdata
lea eax [ ecx + ecx * 4 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x210 ]
mov edx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x480 ] eax
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x5c ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x480 ]
lea ecx [ ecx + eax + 0xc ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov edx [ ebx ]
push ebx
call [ edx + 0x354 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x324 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x204 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
lea ecx [ ebp - 0x88 ]
call edi
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
mov ecx [ ebp - 0x130 ]
lea edx [ ebp - 0x180 ]
push ecx
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x484 ] eax
mov eax [ ebp - 0x210 ]
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x5c ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov ecx [ ebp - 0x28 ]
mov edx eax
mov eax [ ecx + 0xc ]
mov ecx [ ebp - 0x484 ]
lea ecx [ eax + ecx + 0x10 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov dx [ ebp - 0x12c ]
mov ecx 0x4002
add dx 0x1
mov [ ebp - 0x210 ] ecx
jo r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
jmp r-xdata
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
lea ebx [ edx + 0x5c ]
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x140 ]
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x2
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0xc
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0xf4 ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x4
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0x14
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x140 ]
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x2
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0xc
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0x10c ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x4
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0x14
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x140 ]
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x2
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0xc
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0xcc ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x4
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0x14
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x140 ]
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x2
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0xc
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov ecx [ ebp - 0x38 ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x14c ]
lea eax [ ebp - 0x148 ]
push edx
lea ecx [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x140 ]
push ecx
lea eax [ ebp - 0x13c ]
push edx
push eax
push 0x5
call [ __vbaFreeStrList@IAT ]
mov ecx [ ebx ]
add esp 0x18
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx [ ebp - 0xdc ]
push eax
push edx
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea eax [ ebp - 0x14c ]
lea ecx [ ebp - 0x148 ]
push eax
lea edx [ ebp - 0x144 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x5
call [ __vbaFreeStrList@IAT ]
mov edx [ ebx ]
add esp 0x18
push edx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
mov eax [ ebp - 0x114 ]
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x14c ]
lea edx [ ebp - 0x148 ]
push ecx
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x5
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0x18
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov ecx [ ebp - 0x20 ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x14c ]
lea eax [ ebp - 0x148 ]
push edx
lea ecx [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x140 ]
push ecx
lea eax [ ebp - 0x13c ]
push edx
push eax
push 0x5
call [ __vbaFreeStrList@IAT ]
mov ecx [ ebx ]
add esp 0x18
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x140 ]
lea eax [ ebp - 0x13c ]
push edx
push eax
push 0x2
call [ __vbaFreeStrList@IAT ]
mov ecx [ ebx ]
add esp 0xc
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x144 ]
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x3
call [ __vbaFreeStrList@IAT ]
add esp 0x10
cmp [ ebp - 0x34 ] 0xffff
jne r-xdata
mov eax [ ebp - 0x4c ]
push eax
push 0x1
call [ __vbaUbound@IAT ]
mov ecx eax
call [ __vbaI2I4@IAT ]
mov [ ebp - 0x3ec ] eax
xor eax eax
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov edx [ ebx ]
push ebx
call [ edx + 0x314 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3a8 ] ecx
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
push 0x204
push r-xdata
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
lea ebx [ edx + 0x5c ]
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x144 ]
lea edx [ ebp - 0x140 ]
push ecx
lea eax [ ebp - 0x13c ]
push edx
push eax
push 0x3
call [ __vbaFreeStrList@IAT ]
add esp 0x10
cmp [ ebp - 0x104 ] 0xffff
jne r-xdata
mov edx [ ebp - 0xd8 ]
push edx
push 0x1
call [ __vbaUbound@IAT ]
mov ecx eax
call [ __vbaI2I4@IAT ]
mov [ ebp - 0x3f4 ] eax
xor ebx ebx
mov ecx [ ebp - 0x4c ]
test ecx ecx
je r-xdata
sub esp 0x10
mov [ ebp - 0x12c ] edx
mov edx esp
lea eax [ ebp - 0x11c ]
mov [ ebp - 0x208 ] eax
push 0x1
mov [ edx ] ecx
mov ecx [ ebp - 0x20c ]
push 0x4
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x204 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x438 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x48c ] eax
mov eax [ ebp - 0x210 ]
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x40 ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov ecx [ ebp - 0xec ]
mov edx eax
mov eax [ ebp - 0x48c ]
mov ecx [ ecx + 0xc ]
add ecx eax
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0xec ]
lea edx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x5c ]
lea ebx [ eax + 0x5c ]
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x144 ]
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x3
call [ __vbaFreeStrList@IAT ]
add esp 0x10
cmp [ ebp - 0x68 ] 0xffff
jne r-xdata
mov ecx [ ebp - 0x54 ]
push ecx
push 0x1
call [ __vbaUbound@IAT ]
mov ecx eax
call [ __vbaI2I4@IAT ]
mov [ ebp - 0x3fc ] eax
xor eax eax
mov ecx [ ebp - 0xd8 ]
test ecx ecx
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x4c ]
cmp [ ecx ] 0x1
jne r-xdata
mov ecx [ ebp - 0x40 ]
lea edx [ ebp - 0x180 ]
push ecx
push edx
call edi
add esp 0x20
push eax
call [ __vbaBoolVar@IAT ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x3c ] eax
call ebx
cmp [ ebp - 0x3c ] 0xffff
jne r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3bc ]
mov ecx [ ebp - 0x210 ]
mov edx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x490 ] eax
mov eax esp
sub esp 0x10
mov [ eax ] ecx
mov ecx [ ebp - 0x208 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x204 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x230 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x22c ]
mov eax esp
push 0x2
push 0x5
mov [ eax ] ecx
mov ecx [ ebp - 0x228 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x224 ]
mov [ eax + 0x8 ] ecx
lea ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x40 ]
push eax
push ecx
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov eax [ ebp - 0xec ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x490 ]
lea ecx [ ecx + eax + 0x4 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov eax [ ebp - 0xec ]
lea ecx [ ebp - 0x11c ]
test eax eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] 0x4002
je r-xdata
mov edx [ ebx ]
push ebx
call [ edx + 0x350 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3a8 ] ecx
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
jmp r-xdata
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov ecx [ ebx ]
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x144 ]
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x3
call [ __vbaFreeStrList@IAT ]
add esp 0x10
cmp [ ebp - 0x6c ] 0xffff
jne r-xdata
mov edx [ ebp - 0xf0 ]
push edx
push 0x1
call [ __vbaUbound@IAT ]
mov ecx eax
call [ __vbaI2I4@IAT ]
mov [ ebp - 0x404 ] eax
mov [ ebp - 0x12c ] 0x0
mov ecx [ ebp - 0x54 ]
test ecx ecx
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
mov [ ebp - 0x4a8 ] eax
cmp [ ecx ] 0x1
jne r-xdata
mov eax 0x1
add ax [ ebp - 0x12c ]
jo r-xdata
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
mov edx [ ecx + 0x14 ]
movsx ebx ax
mov eax [ ecx + 0x10 ]
sub ebx edx
cmp ebx eax
jb r-xdata
mov ecx [ ebp - 0x20c ]
sub esp 0x10
mov [ ebp - 0x494 ] eax
mov eax [ ebp - 0x210 ]
mov edx esp
sub esp 0x10
mov [ edx ] eax
mov eax [ ebp - 0x208 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x204 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x230 ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x22c ]
mov edx esp
push 0x2
push 0x5
mov [ edx ] eax
mov eax [ ebp - 0x228 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x224 ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x180 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x40 ]
push edx
push eax
call edi
add esp 0x30
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov ecx [ ebp - 0xec ]
mov edx eax
mov eax [ ecx + 0xc ]
mov ecx [ ebp - 0x494 ]
lea ecx [ eax + ecx + 0x8 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x180 ]
call ebx
mov dx [ ebp - 0x12c ]
mov ecx 0x4002
add dx 0x1
mov [ ebp - 0x210 ] ecx
jo r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x314 ]
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ ebx ]
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x144 ]
lea edx [ ebp - 0x140 ]
push ecx
lea eax [ ebp - 0x13c ]
push edx
push eax
push 0x3
call [ __vbaFreeStrList@IAT ]
mov ecx [ ebx ]
add esp 0x10
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx [ ebp - 0xac ]
push eax
push edx
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea eax [ ebp - 0x14c ]
lea ecx [ ebp - 0x148 ]
push eax
lea edx [ ebp - 0x144 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x5
call [ __vbaFreeStrList@IAT ]
mov edx [ ebx ]
add esp 0x18
push edx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
mov eax [ ebp - 0xd4 ]
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x14c ]
lea edx [ ebp - 0x148 ]
push ecx
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x5
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0x18
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov ecx [ ebp - 0xe8 ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x14c ]
lea eax [ ebp - 0x148 ]
push edx
lea ecx [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x140 ]
push ecx
lea eax [ ebp - 0x13c ]
push edx
push eax
push 0x5
call [ __vbaFreeStrList@IAT ]
mov ecx [ ebx ]
add esp 0x18
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx [ ebp - 0xa8 ]
push eax
push edx
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea eax [ ebp - 0x14c ]
lea ecx [ ebp - 0x148 ]
push eax
lea edx [ ebp - 0x144 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x5
call [ __vbaFreeStrList@IAT ]
mov edx [ ebx ]
add esp 0x18
push edx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea eax [ ebp - 0x144 ]
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x3
call [ __vbaFreeStrList@IAT ]
mov eax [ ebp - 0x28 ]
add esp 0x10
push eax
push 0x1
call [ __vbaUbound@IAT ]
mov ecx eax
call [ __vbaI2I4@IAT ]
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x12c ] 0x0
mov edx [ ebp - 0xec ]
push edx
push 0x1
call [ __vbaUbound@IAT ]
mov ecx eax
call [ __vbaI2I4@IAT ]
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x12c ] 0x0
mov ecx [ ebp - 0xf0 ]
test ecx ecx
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x54 ]
cmp [ ecx ] 0x1
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
cmp [ ecx ] 0x1
jne r-xdata
mov edx [ ecx + 0x14 ]
movsx eax bx
sub eax edx
mov edx [ ecx + 0x10 ]
cmp eax edx
mov [ ebp - 0x3bc ] eax
jb r-xdata
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x498 ] eax
mov eax [ ebp - 0x4c ]
cmp [ eax ] 0x1
jne r-xdata
shl ebx 0x4
mov eax ebx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x4c ]
mov edx [ ebx ]
push ebx
call [ edx + 0x334 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa8 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x350 ]
jmp r-xdata
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ ebx ]
push edx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea eax [ ebp - 0x144 ]
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x3
call [ __vbaFreeStrList@IAT ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
add esp 0x10
cmp [ ebp - 0x8c ] 0xffff
mov [ eax + 0x34 ] ecx
mov [ eax + 0x38 ] ecx
jne r-xdata
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xec ]
test eax eax
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xf0 ]
cmp [ ecx ] 0x1
jne r-xdata
mov eax 0x1
add ax [ ebp - 0x12c ]
jo r-xdata
mov eax [ ebp - 0x54 ]
test eax eax
je r-xdata
mov edx [ ecx + 0x14 ]
movsx ebx ax
mov eax [ ecx + 0x10 ]
sub ebx edx
cmp ebx eax
jb r-xdata
mov eax 0x1
add ax [ ebp - 0x12c ]
jo r-xdata
mov ecx [ ebp - 0xd8 ]
test ecx ecx
je r-xdata
mov edx [ ecx + 0x14 ]
mov eax [ ecx + 0x10 ]
movsx ebx bx
sub ebx edx
cmp ebx eax
jb r-xdata
shl eax 0x3
mov [ ebp - 0x4a8 ] eax
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
mov eax [ ebp - 0x3bc ]
cmp ax [ ebp - 0x3ec ]
mov [ ebp - 0x12c ] eax
jg r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x49c ] eax
mov eax [ ebp - 0x4c ]
cmp [ eax ] 0x1
jne r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ebx edx
cmp ebx ecx
jb r-xdata
mov ecx [ ecx + 0xc ]
mov edx [ ecx + eax + 0x8 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
inc eax
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] di
je r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x204 ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc8 ]
push eax
push 0x1
call [ __vbaUbound@IAT ]
mov ecx eax
call [ __vbaI2I4@IAT ]
mov [ ebp - 0x41c ] eax
mov [ ebp - 0xf8 ] 0x0
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4d8 ] eax
mov eax [ ebp - 0x28 ]
cmp [ eax ] 0x1
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4cc ] eax
mov eax [ ebp - 0xec ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebp - 0xf0 ]
test eax eax
je r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x90 ]
call [ __vbaStrCopy@IAT ]
mov edx [ ecx + 0x14 ]
movsx eax ax
sub eax edx
mov edx [ ecx + 0x10 ]
cmp eax edx
mov [ ebp - 0x3bc ] eax
jb r-xdata
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4c0 ] eax
cmp [ eax ] 0x1
jne r-xdata
lea eax [ ebx * 4 ]
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x54 ]
mov ebx eax
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
cmp [ ecx ] 0x1
jne r-xdata
lea eax [ ebx * 8 ]
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
test ecx ecx
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4a0 ] eax
mov eax [ ebp - 0x4c ]
cmp [ eax ] 0x1
jne r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ebx edx
cmp ebx ecx
jb r-xdata
shl ebx 0x4
mov [ ebp - 0x498 ] ebx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0x4c ]
mov edx [ ebx ]
push ebx
call [ edx + 0x30c ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x414 ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
lea ecx [ ebp - 0x3a0 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov edx [ ebx ]
add esp 0x14
push ebx
call [ edx + 0x334 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call esi
mov esi eax
push esi
mov ecx [ esi ]
call [ ecx + 0x1f4 ]
cmp eax edi
fnclex
jge r-xdata
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
jmp r-xdata
mov edx [ ebp - 0x108 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
mov eax [ ebp - 0x64 ]
push 0x0
lea edx [ ebp - 0x180 ]
push 0xffffffff
push edx
lea ecx [ ebp - 0x190 ]
push eax
push ecx
call [ Ordinal_MSVBVM60_711@IAT ]
lea edx [ ebp - 0x190 ]
push edx
push 0x2008
call [ __vbaAryVar@IAT ]
mov [ ebp - 0x3b8 ] eax
lea eax [ ebp - 0x3b8 ]
lea ecx [ ebp - 0x18 ]
push eax
push ecx
call [ __vbaAryCopy@IAT ]
lea edx [ ebp - 0x190 ]
lea eax [ ebp - 0x180 ]
push edx
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
mov ecx [ ebp - 0x18 ]
add esp 0xc
test ecx ecx
je r-xdata
mov edx [ ebp - 0xc8 ]
push edx
push 0x1
call [ __vbaUbound@IAT ]
mov ecx eax
call [ __vbaI2I4@IAT ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x420 ] 0x1
xor ebx ebx
mov eax [ ebp - 0xc8 ]
test eax eax
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4dc ] eax
mov eax [ ebp - 0x28 ]
cmp [ eax ] 0x1
jne r-xdata
mov edx [ eax + 0x14 ]
movsx ecx cx
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4d0 ] eax
mov eax [ ebp - 0xec ]
cmp [ eax ] 0x1
jne r-xdata
mov edx [ eax + 0x14 ]
movsx ecx cx
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4c4 ] eax
mov eax [ ebp - 0xf0 ]
cmp [ eax ] 0x1
jne r-xdata
lea eax [ eax + eax * 2 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xf0 ]
mov eax [ ebp - 0x3bc ]
cmp ax [ ebp - 0x3fc ]
mov [ ebp - 0x12c ] eax
jg r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ebx edx
cmp ebx ecx
jb r-xdata
mov edx [ ecx + 0xc ]
mov eax [ edx + eax ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
je r-xdata
cmp bx [ ebp - 0x3f4 ]
mov [ ebp - 0x12c ] ebx
jg r-xdata
mov ecx [ ebp - 0xd8 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xd8 ]
test ecx ecx
je r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ ecx + 0x14 ]
mov eax [ ecx + 0x10 ]
sub ebx edx
cmp ebx eax
jb r-xdata
mov ecx [ ecx + 0xc ]
mov ebx [ __vbaStrCmp@IAT ]
mov edx [ ecx + eax + 0x4 ]
push edx
push r-xdata
call ebx
mov edx eax
mov eax [ ebp - 0xd8 ]
neg edx
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x4a8 ]
sbb edx edx
mov ecx [ ecx + eax ]
inc edx
push ecx
push r-xdata
mov [ ebp - 0x4ac ] edx
call ebx
mov edx [ ebp - 0x4ac ]
neg eax
sbb eax eax
inc eax
test eax edx
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4a4 ] eax
cmp [ eax ] 0x1
jne r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ebx edx
cmp ebx ecx
jb r-xdata
shl ebx 0x4
mov [ ebp - 0x49c ] ebx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
mov edx [ ebx ]
push ebx
call [ edx + 0x30c ]
push eax
lea eax [ ebp - 0x2b8 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x420 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx [ ebp - 0x418 ]
push 0x90
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
push 0x1f4
push r-xdata
jmp r-xdata
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
jmp r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
lea ebx [ edx + 0x5c ]
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x148 ]
lea edx [ ebp - 0x144 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x4
call [ __vbaFreeStrList@IAT ]
mov edx [ ebx ]
add esp 0x14
push edx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
mov eax [ ebp + 0x8 ]
add eax 0x34
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call [ __vbaStrR8@IAT ]
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x150 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x154 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea eax [ ebp - 0x154 ]
lea ecx [ ebp - 0x150 ]
push eax
lea edx [ ebp - 0x14c ]
push ecx
lea eax [ ebp - 0x148 ]
push edx
lea ecx [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x140 ]
push ecx
lea eax [ ebp - 0x13c ]
push edx
push eax
push 0x7
call [ __vbaFreeStrList@IAT ]
mov ecx [ ebx ]
add esp 0x20
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x140 ]
lea eax [ ebp - 0x13c ]
push edx
push eax
push 0x2
call [ __vbaFreeStrList@IAT ]
mov ecx [ ebx ]
add esp 0xc
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x1a8 ] eax
push 0x2
lea ecx [ ebp - 0x180 ]
lea eax [ edx + 0x3c ]
mov [ ebp - 0x1b0 ] 0x8
mov [ ebp - 0x208 ] eax
lea eax [ ebp - 0x210 ]
push eax
push ecx
mov [ ebp - 0x210 ] 0x4005
call [ Ordinal_MSVBVM60_714@IAT ]
mov edx [ ebp + 0x8 ]
lea eax [ edx + 0x34 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp - 0x220 ]
push 0x2
lea ecx [ ebp - 0x190 ]
push eax
push ecx
mov [ ebp - 0x220 ] 0x4005
call [ Ordinal_MSVBVM60_714@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x180 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x1a0 ]
push ecx
push edx
mov [ ebp - 0x228 ] r-xdata
mov [ ebp - 0x230 ] 0x8
call [ __vbaVarSub@IAT ]
push eax
lea eax [ ebp - 0x1c0 ]
push eax
call [ __vbaVarCat@IAT ]
lea ecx [ ebp - 0x230 ]
push eax
lea edx [ ebp - 0x1d0 ]
push ecx
push edx
call [ __vbaVarCat@IAT ]
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea eax [ ebp - 0x144 ]
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x3
call [ __vbaFreeStrList@IAT ]
lea eax [ ebp - 0x1d0 ]
lea ecx [ ebp - 0x1c0 ]
push eax
lea edx [ ebp - 0x1b0 ]
push ecx
lea eax [ ebp - 0x190 ]
push edx
lea ecx [ ebp - 0x180 ]
push eax
push ecx
push 0x5
call [ __vbaFreeVarList@IAT ]
mov edx [ ebp + 0x8 ]
add esp 0x28
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x210 ] 0x4005
lea eax [ edx + 0x3c ]
push 0x2
mov [ ebp - 0x208 ] eax
lea eax [ ebp - 0x210 ]
push eax
push ecx
call [ Ordinal_MSVBVM60_714@IAT ]
mov edx [ ebp + 0x8 ]
push 0x2
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x220 ] 0x4005
lea eax [ edx + 0x34 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp - 0x220 ]
push eax
push ecx
call [ Ordinal_MSVBVM60_714@IAT ]
mov eax 0x80020004
mov ecx 0xa
mov [ ebp - 0x1e8 ] eax
mov [ ebp - 0x1f0 ] ecx
mov [ ebp - 0x1d8 ] eax
mov [ ebp - 0x1c8 ] eax
mov eax 0x8
lea edx [ ebp - 0x1f0 ]
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x1e0 ] ecx
mov [ ebp - 0x1d0 ] ecx
lea eax [ ebp - 0x1e0 ]
push edx
lea ecx [ ebp - 0x1d0 ]
push eax
push ecx
lea edx [ ebp - 0x230 ]
push 0x0
lea eax [ ebp - 0x180 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x1a0 ]
push ecx
push edx
mov [ ebp - 0x228 ] r-xdata
mov [ ebp - 0x238 ] r-xdata
call [ __vbaVarSub@IAT ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
call [ __vbaVarCat@IAT ]
lea ecx [ ebp - 0x240 ]
push eax
lea edx [ ebp - 0x1c0 ]
push ecx
push edx
call [ __vbaVarCat@IAT ]
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea eax [ ebp - 0x1f0 ]
lea ecx [ ebp - 0x1e0 ]
push eax
lea edx [ ebp - 0x1d0 ]
push ecx
lea eax [ ebp - 0x1c0 ]
push edx
lea ecx [ ebp - 0x1b0 ]
push eax
lea edx [ ebp - 0x190 ]
push ecx
lea eax [ ebp - 0x180 ]
push edx
push eax
push 0x7
call [ __vbaFreeVarList@IAT ]
mov ecx [ ebp + 0x8 ]
add esp 0x20
lea eax [ ecx + 0x3c ]
mov ecx [ ecx + 0x3c ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x108 ]
push eax
call [ __vbaR8Str@IAT ]
mov ecx [ ebp + 0x8 ]
fstp [ ecx + 0x3c ]
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc8 ]
test ecx ecx
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4ec ] eax
mov eax [ ebp - 0xc8 ]
cmp [ eax ] 0x1
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4e0 ] eax
mov eax [ ebp - 0x28 ]
cmp [ eax ] 0x1
jne r-xdata
movsx ecx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3c0 ] ecx
jb r-xdata
lea ecx [ ecx + ecx * 4 ]
shl ecx 0x2
mov [ ebp - 0x4d8 ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x3bc ]
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
movsx ecx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3c0 ] ecx
jb r-xdata
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0x4cc ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0xec ]
mov ecx [ ebp - 0x3bc ]
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
movsx ecx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
mov ecx [ ecx + 0xc ]
mov edx [ ecx + eax + 0x8 ]
lea ecx [ ebp - 0x90 ]
call [ __vbaStrCopy@IAT ]
mov edx [ ebp - 0x90 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebx * 4 ]
mov [ ebp - 0x4c0 ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
cmp [ ecx ] 0x1
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
cmp [ ecx ] 0x1
jne r-xdata
lea eax [ ebx * 8 ]
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
movsx ebx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ebx edx
cmp ebx ecx
jb r-xdata
shl ebx 0x4
mov [ ebp - 0x4a0 ] ebx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov ecx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ ebp - 0xb0 ]
cmp ax 0x1
jle r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x40 ]
lea eax [ edx + 0x3c ]
cmp ecx 0x40c38800
jne r-xdata
jmp __vbaFPException
mov edx [ ecx + 0x14 ]
mov eax [ ecx + 0x10 ]
mov ebx 0x2
sub ebx edx
cmp ebx eax
jb r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xc8 ]
cmp [ ecx ] 0x1
jne r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4f0 ] eax
mov eax [ ebp - 0xc8 ]
cmp [ eax ] 0x1
jne r-xdata
mov edx [ eax + 0x14 ]
movsx ecx cx
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3bc ] ecx
jb r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4e4 ] eax
mov eax [ ebp - 0x28 ]
cmp [ eax ] 0x1
jne r-xdata
movsx ecx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3c4 ] ecx
jb r-xdata
lea ecx [ ecx + ecx * 4 ]
shl ecx 0x2
mov [ ebp - 0x4dc ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x3c0 ]
test eax eax
je r-xdata
mov [ ebp - 0x12c ] eax
jmp r-xdata
movsx ecx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3c4 ] ecx
jb r-xdata
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0x4d0 ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0xec ]
mov ecx [ ebp - 0x3c0 ]
test eax eax
je r-xdata
mov [ ebp - 0x12c ] eax
jmp r-xdata
movsx ecx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3c0 ] ecx
jb r-xdata
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0x4c4 ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0xf0 ]
mov ecx [ ebp - 0x3bc ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
lea ebx [ edx + 0x5c ]
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4c0 ]
mov edx [ ecx + 0xc ]
mov ecx [ edx + eax ]
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x4
call [ __vbaFreeStrList@IAT ]
add esp 0x14
mov ecx [ ebp - 0xd8 ]
test ecx ecx
je r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ ecx + 0x14 ]
mov eax [ ecx + 0x10 ]
sub ebx edx
cmp ebx eax
jb r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4b0 ] eax
mov eax [ ebp - 0xd8 ]
cmp [ eax ] 0x1
jne r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ ecx + 0x14 ]
mov eax [ ecx + 0x10 ]
sub ebx edx
cmp ebx eax
jb r-xdata
mov ecx [ ecx + 0xc ]
mov edx [ ecx + eax ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
jne r-xdata
shl ebx 0x4
mov [ ebp - 0x4a4 ] ebx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
test eax eax
je r-xdata
mov eax [ ebx ]
push ebx
call [ eax + 0x308 ]
lea ecx [ ebp - 0x2b4 ]
push eax
push ecx
call esi
mov edx [ eax ]
lea ecx [ ebp - 0x414 ]
push ecx
push eax
mov [ ebp - 0x418 ] eax
call [ edx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x30c ]
jmp r-xdata
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx 0x80020004
mov edx 0xa
push r-xdata
push eax
mov [ ebp - 0x1a8 ] ecx
mov [ ebp - 0x1b0 ] edx
mov [ ebp - 0x198 ] ecx
mov [ ebp - 0x1a0 ] edx
mov [ ebp - 0x188 ] ecx
mov [ ebp - 0x190 ] edx
call [ __vbaStrI2@IAT ]
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov [ ebp - 0x178 ] eax
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
push ecx
lea edx [ ebp - 0x180 ]
push 0x0
push edx
mov [ ebp - 0x180 ] 0x8
call [ Ordinal_MSVBVM60_595@IAT ]
lea eax [ ebp - 0x140 ]
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x2
call [ __vbaFreeStrList@IAT ]
lea edx [ ebp - 0x1b0 ]
lea eax [ ebp - 0x1a0 ]
push edx
lea ecx [ ebp - 0x190 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x20
mov ecx 0xa
mov eax 0x80020004
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1a0 ] ecx
mov [ ebp - 0x190 ] ecx
lea edx [ ebp - 0x210 ]
lea ecx [ ebp - 0x180 ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x198 ] eax
mov [ ebp - 0x188 ] eax
mov [ ebp - 0x208 ] r-xdata
mov [ ebp - 0x210 ] 0x8
call [ __vbaVarDup@IAT ]
lea eax [ ebp - 0x1b0 ]
lea ecx [ ebp - 0x1a0 ]
push eax
lea edx [ ebp - 0x190 ]
push ecx
push edx
lea eax [ ebp - 0x180 ]
push 0x0
push eax
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x1b0 ]
lea edx [ ebp - 0x1a0 ]
push ecx
lea eax [ ebp - 0x190 ]
push edx
lea ecx [ ebp - 0x180 ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
lea eax [ ebx * 4 ]
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x18 ]
mov ax [ ebp - 0x420 ]
add ax bx
jo r-xdata
mov edx [ ecx + 0x14 ]
movsx eax bx
sub eax edx
mov edx [ ecx + 0x10 ]
cmp eax edx
mov [ ebp - 0x3bc ] eax
jb r-xdata
mov [ ebp - 0xf8 ] eax
jmp r-xdata
movsx ecx [ ebp - 0xf8 ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3c0 ] ecx
jb r-xdata
shl ecx 0x3
mov [ ebp - 0x4ec ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0xc8 ]
mov ecx [ ebp - 0x3bc ]
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
movsx ecx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3c8 ] ecx
jb r-xdata
lea ecx [ ecx + ecx * 4 ]
shl ecx 0x2
mov [ ebp - 0x4e0 ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x3c4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x12c ]
cmp cx [ ebp - 0x40c ]
jg r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3c4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x12c ]
cmp ax [ ebp - 0x404 ]
jg r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3c0 ]
test eax eax
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
cmp [ ecx ] 0x1
jne r-xdata
lea eax [ ebx * 8 ]
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ebx edx
cmp ebx ecx
jb r-xdata
lea eax [ ebx * 8 ]
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x5c ]
lea ebx [ eax + 0x5c ]
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx [ ebp - 0x4c ]
mov ecx [ ebp - 0x498 ]
push eax
mov eax [ edx + 0xc ]
mov edx [ eax + ecx ]
push edx
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx [ ebp - 0x49c ]
push eax
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0xc ]
mov eax [ ecx + edx + 0x4 ]
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov ecx [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4a0 ]
mov edx [ ecx + 0xc ]
mov ecx [ edx + eax + 0xc ]
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x150 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x154 ]
call esi
mov edx [ ebp - 0x4c ]
mov ecx [ ebp - 0x4a4 ]
push eax
mov eax [ edx + 0xc ]
mov edx [ eax + ecx + 0x8 ]
push edx
call edi
mov edx eax
lea ecx [ ebp - 0x158 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x15c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x160 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x164 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea eax [ ebp - 0x164 ]
lea ecx [ ebp - 0x160 ]
push eax
lea edx [ ebp - 0x15c ]
push ecx
lea eax [ ebp - 0x158 ]
push edx
lea ecx [ ebp - 0x154 ]
push eax
lea edx [ ebp - 0x150 ]
push ecx
lea eax [ ebp - 0x14c ]
push edx
lea ecx [ ebp - 0x148 ]
push eax
lea edx [ ebp - 0x144 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0xb
call [ __vbaFreeStrList@IAT ]
add esp 0x30
mov eax [ ebx ]
push ebx
call [ eax + 0x308 ]
lea ecx [ ebp - 0x2b8 ]
push eax
push ecx
call esi
mov edx [ eax ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov [ ebp - 0x420 ] eax
call [ edx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
mov edx [ ebp - 0x418 ]
push 0x90
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x2b4 ]
push eax
push ecx
call esi
mov esi eax
push esi
mov edx [ esi ]
call [ edx + 0x204 ]
jmp r-xdata
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x374 ]
mov esi [ __vbaObjSet@IAT ]
lea edx [ ebp - 0x170 ]
push eax
push edx
call esi
mov ecx [ ebx ]
mov edi eax
push ecx
push edi
mov eax [ edi ]
call [ eax + 0xa4 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ ecx + 0xc ]
mov edx [ ecx + eax ]
push edx
call [ __vbaR8Str@IAT ]
fmul [ r-xdata ]
mov ecx [ ebp + 0x8 ]
fstp [ ecx + 0x3c ]
fnstsw ax
test al 0xd
jne r-xdata
mov ebx eax
jmp r-xdata
shl eax 0x3
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xc8 ]
mov eax [ ebp - 0x3bc ]
mov ecx [ ebp - 0xf8 ]
cmp cx [ ebp - 0x41c ]
jg r-xdata
lea edx [ ecx * 8 ]
mov [ ebp - 0x4f0 ] edx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0xc8 ]
mov ecx [ ebp - 0x3c0 ]
test eax eax
je r-xdata
mov [ ebp - 0x12c ] eax
jmp r-xdata
movsx ecx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
sub ecx edx
mov edx [ eax + 0x10 ]
cmp ecx edx
mov [ ebp - 0x3cc ] ecx
jb r-xdata
lea ecx [ ecx + ecx * 4 ]
shl ecx 0x2
mov [ ebp - 0x4e4 ] ecx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x3c8 ]
test eax eax
je r-xdata
mov [ ebp - 0x4d4 ] eax
mov eax [ ebx ]
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0xec ]
push eax
mov eax [ ebp - 0x4cc ]
mov edx [ ecx + 0xc ]
mov ecx [ edx + eax + 0x4 ]
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx [ ebp - 0xec ]
mov ecx [ ebp - 0x4d0 ]
push eax
mov eax [ edx + 0xc ]
mov edx [ eax + ecx + 0x8 ]
push edx
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x150 ]
call esi
mov edx [ ebp - 0x4d4 ]
push eax
mov eax [ ebp - 0xec ]
mov ecx [ eax + 0xc ]
mov eax [ ecx + edx ]
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x154 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x158 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x158 ]
lea edx [ ebp - 0x154 ]
push ecx
lea eax [ ebp - 0x150 ]
push edx
lea ecx [ ebp - 0x14c ]
push eax
lea edx [ ebp - 0x148 ]
push ecx
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x8
call [ __vbaFreeStrList@IAT ]
mov eax 0x1
add esp 0x24
add ax [ ebp - 0x12c ]
jo r-xdata
mov [ ebp - 0x4c8 ] eax
mov eax [ ebx ]
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0xf0 ]
push eax
mov eax [ ebp - 0x4c4 ]
mov edx [ ecx + 0xc ]
mov ecx [ edx + eax ]
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx [ ebp - 0xf0 ]
mov ecx [ ebp - 0x4c8 ]
push eax
mov eax [ edx + 0xc ]
mov edx [ eax + ecx + 0x4 ]
push edx
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x150 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x154 ]
call esi
push eax
mov eax [ ebp - 0x90 ]
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x158 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x15c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x15c ]
lea edx [ ebp - 0x158 ]
push ecx
lea eax [ ebp - 0x154 ]
push edx
lea ecx [ ebp - 0x150 ]
push eax
lea edx [ ebp - 0x14c ]
push ecx
lea eax [ ebp - 0x148 ]
push edx
push eax
lea ecx [ ebp - 0x144 ]
lea edx [ ebp - 0x140 ]
push ecx
lea eax [ ebp - 0x13c ]
push edx
push eax
push 0x9
call [ __vbaFreeStrList@IAT ]
mov eax 0x1
add esp 0x28
add ax [ ebp - 0x12c ]
jo r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov [ ebp - 0x4b8 ] eax
mov eax [ ebp - 0xd8 ]
cmp [ eax ] 0x1
jne r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ ecx + 0x14 ]
mov eax [ ecx + 0x10 ]
sub ebx edx
cmp ebx eax
jb r-xdata
mov edx [ ecx + 0xc ]
mov eax [ edx + eax ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
test eax eax
jne r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ebx edx
cmp ebx ecx
jb r-xdata
lea edx [ ebx * 8 ]
mov [ ebp - 0x4b0 ] edx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0xd8 ]
mov ecx [ ecx + 0xc ]
mov edx [ ecx + eax + 0x4 ]
lea ecx [ ebp - 0x64 ]
call [ __vbaStrCopy@IAT ]
mov eax [ ebp - 0xd8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov edx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
cmp eax edi
fnclex
jge r-xdata
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
mov ebx [ ebp + 0x8 ]
push ebx
mov edx [ ebx ]
call [ edx + 0x370 ]
push eax
lea eax [ ebp - 0x170 ]
push eax
call esi
mov edi eax
lea edx [ ebp - 0x3b4 ]
push edx
push edi
mov ecx [ edi ]
call [ ecx + 0x88 ]
test eax eax
fnclex
jge r-xdata
push 0xa4
push r-xdata
push edi
push eax
call [ __vbaHresultCheckObj@IAT ]
cmp bx [ ebp - 0x424 ]
jg r-xdata
mov ecx [ ecx + 0xc ]
mov edx [ ecx + eax ]
push edx
call [ __vbaR8Str@IAT ]
mov ecx [ ebp + 0x8 ]
fadd [ ecx + 0x34 ]
fstp [ ecx + 0x34 ]
fnstsw ax
test al 0xd
jne r-xdata
mov edx [ eax + 0xc ]
mov ecx [ ebx ]
mov eax [ ebp - 0x4ec ]
push ecx
mov ecx [ edx + eax + 0x4 ]
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx [ ebp - 0xc8 ]
mov ecx [ ebp - 0x4f0 ]
push eax
mov eax [ edx + 0xc ]
mov edx [ eax + ecx ]
push edx
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea eax [ ebp - 0x14c ]
lea ecx [ ebp - 0x148 ]
push eax
lea edx [ ebp - 0x144 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x5
call [ __vbaFreeStrList@IAT ]
mov eax 0x1
add esp 0x18
add ax [ ebp - 0xf8 ]
jo r-xdata
mov ecx [ ebp - 0x12c ]
cmp cx [ ebp - 0x414 ]
jg r-xdata
lea eax [ ecx + ecx * 4 ]
shl eax 0x2
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0x3cc ]
test eax eax
je r-xdata
call [ __vbaGenerateBoundsError@IAT ]
cmp [ eax ] 0x1
jne r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ebx edx
cmp ebx ecx
jb r-xdata
lea eax [ ebx * 8 ]
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov ecx [ ebp - 0xd8 ]
lea eax [ ebx * 8 ]
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
test eax eax
je r-xdata
mov eax [ ebx ]
push ebx
call [ eax + 0x304 ]
lea ecx [ ebp - 0x2b4 ]
push eax
push ecx
call esi
mov edx [ eax ]
lea ecx [ ebp - 0x414 ]
push ecx
push eax
mov [ ebp - 0x418 ] eax
call [ edx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x308 ]
jmp r-xdata
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
xor eax eax
lea ecx [ ebp - 0x170 ]
cmp [ ebp - 0x3b4 ] ax
sete al
neg eax
mov edi eax
call [ __vbaFreeObj@IAT ]
test di di
je r-xdata
push 0x88
push r-xdata
push edi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ ebx ]
mov [ ebp - 0x4e8 ] eax
push ecx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
mov edx [ ebp - 0x28 ]
mov ecx [ ebp - 0x4d8 ]
push eax
mov eax [ edx + 0xc ]
mov edx [ eax + ecx ]
push edx
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
mov edx [ ebp - 0x4dc ]
push eax
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xc ]
mov eax [ ecx + edx + 0x8 ]
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x150 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x154 ]
call esi
mov ecx [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4e0 ]
mov edx [ ecx + 0xc ]
mov ecx [ edx + eax + 0xc ]
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x158 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x15c ]
call esi
mov edx [ ebp - 0x28 ]
mov ecx [ ebp - 0x4e4 ]
push eax
mov eax [ edx + 0xc ]
mov edx [ eax + ecx + 0x10 ]
push edx
call edi
mov edx eax
lea ecx [ ebp - 0x160 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x164 ]
call esi
mov edx [ ebp - 0x4e8 ]
push eax
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xc ]
mov eax [ ecx + edx + 0x4 ]
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x168 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x16c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x16c ]
lea edx [ ebp - 0x168 ]
push ecx
lea eax [ ebp - 0x164 ]
push edx
lea ecx [ ebp - 0x160 ]
push eax
lea edx [ ebp - 0x15c ]
push ecx
lea eax [ ebp - 0x158 ]
push edx
lea ecx [ ebp - 0x154 ]
push eax
lea edx [ ebp - 0x150 ]
push ecx
lea eax [ ebp - 0x14c ]
push edx
lea ecx [ ebp - 0x148 ]
push eax
lea edx [ ebp - 0x144 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0xd
call [ __vbaFreeStrList@IAT ]
mov eax 0x1
add esp 0x38
add ax [ ebp - 0x12c ]
jo r-xdata
movsx ebx [ ebp - 0x12c ]
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ebx edx
cmp ebx ecx
jb r-xdata
lea edx [ ebx * 8 ]
mov [ ebp - 0x4b8 ] edx
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
mov eax [ ebp - 0xd8 ]
mov ecx [ ecx + 0xc ]
mov edx [ ecx + eax + 0x4 ]
lea ecx [ ebp - 0x108 ]
call [ __vbaStrCopy@IAT ]
mov eax [ ebp - 0xd8 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4b4 ] eax
mov edx [ ecx + 0x5c ]
lea ebx [ ecx + 0x5c ]
push edx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx [ ebp - 0x4b0 ]
push eax
mov eax [ ebp - 0xd8 ]
mov ecx [ eax + 0xc ]
mov eax [ ecx + edx ]
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov ecx [ ebp - 0xd8 ]
push eax
mov eax [ ebp - 0x4b4 ]
mov edx [ ecx + 0xc ]
mov ecx [ edx + eax + 0x4 ]
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x150 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x150 ]
lea eax [ ebp - 0x14c ]
push edx
lea ecx [ ebp - 0x148 ]
push eax
lea edx [ ebp - 0x144 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x6
call [ __vbaFreeStrList@IAT ]
add esp 0x1c
mov eax [ ebx ]
push ebx
call [ eax + 0x304 ]
lea ecx [ ebp - 0x2b8 ]
push eax
push ecx
call esi
mov edx [ eax ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov [ ebp - 0x420 ] eax
call [ edx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
mov edx [ ebp - 0x418 ]
push 0x90
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edi [ __vbaCastObj@IAT ]
push r-xdata
push 0x0
call edi
lea ecx [ ebp - 0x48 ]
push eax
push ecx
call esi
push r-xdata
push 0x0
call edi
lea edx [ ebp - 0xd0 ]
push eax
push edx
call esi
push r-xdata
push 0x0
call edi
push eax
lea eax [ ebp - 0x60 ]
push eax
call esi
push r-xdata
push 0x0
call edi
lea ecx [ ebp - 0x134 ]
push eax
push ecx
call esi
push r-xdata
push 0x0
call edi
lea edx [ ebp - 0x9c ]
push eax
push edx
call esi
push r-xdata
push 0x0
call edi
push eax
lea eax [ ebp - 0xb4 ]
push eax
call esi
push r-xdata
push 0x0
call edi
lea ecx [ ebp - 0x124 ]
push eax
push ecx
call esi
push r-xdata
push 0x0
call edi
lea edx [ ebp - 0x5c ]
push eax
push edx
call esi
push r-xdata
push 0x0
call edi
push eax
lea eax [ ebp - 0x120 ]
push eax
call esi
push r-xdata
push 0x0
call edi
lea ecx [ ebp - 0x44 ]
push eax
push ecx
call esi
push r-xdata
push 0x0
call edi
lea edx [ ebp - 0x84 ]
push eax
push edx
call esi
push r-xdata
push 0x0
call edi
push eax
lea eax [ ebp - 0x130 ]
push eax
call esi
push r-xdata
push 0x0
call edi
lea ecx [ ebp - 0x100 ]
push eax
push ecx
call esi
mov [ ebp - 0x4 ] 0x0
fwait
push sub_41529e
jmp r-xdata
mov ecx [ ebx ]
push ebx
call [ ecx + 0x370 ]
lea edx [ ebp - 0x170 ]
push eax
push edx
call esi
mov edi eax
push 0xffffffff
push edi
mov eax [ edi ]
call [ eax + 0x8c ]
test eax eax
fnclex
jge r-xdata
lea eax [ ebx * 8 ]
jmp r-xdata
call [ __vbaGenerateBoundsError@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov edx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
lea ecx [ ebp - 0x3d4 ]
lea edx [ ebp - 0x3d0 ]
push ecx
push edx
push 0x2
call [ __vbaFreeStrList@IAT ]
lea eax [ ebp - 0x3dc ]
lea ecx [ ebp - 0x3d8 ]
push eax
push ecx
push 0x2
call [ __vbaFreeObjList@IAT ]
mov ebx [ __vbaAryDestruct@IAT ]
add esp 0x18
lea edx [ ebp - 0x18 ]
push edx
push 0x0
call ebx
lea eax [ ebp - 0x1c ]
push eax
push r-xdata
call ebx
mov esi [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x20 ]
call esi
lea ecx [ ebp - 0x28 ]
push ecx
push r-xdata
call ebx
lea ecx [ ebp - 0x2c ]
call esi
lea ecx [ ebp - 0x38 ]
call esi
mov edi [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x40 ]
call edi
lea ecx [ ebp - 0x44 ]
call edi
lea ecx [ ebp - 0x48 ]
call edi
lea edx [ ebp - 0x4c ]
push edx
push r-xdata
call ebx
lea eax [ ebp - 0x54 ]
push eax
push 0x0
call ebx
lea ecx [ ebp - 0x58 ]
call esi
lea ecx [ ebp - 0x5c ]
call edi
lea ecx [ ebp - 0x60 ]
call edi
lea ecx [ ebp - 0x64 ]
call esi
lea ecx [ ebp - 0x74 ]
call esi
lea ecx [ ebp - 0x78 ]
call edi
lea ecx [ ebp - 0x7c ]
push ecx
push 0x0
call ebx
lea ecx [ ebp - 0x80 ]
call esi
lea ecx [ ebp - 0x84 ]
call edi
lea ecx [ ebp - 0x88 ]
call esi
lea ecx [ ebp - 0x90 ]
call esi
lea ecx [ ebp - 0x94 ]
call esi
lea ecx [ ebp - 0x98 ]
call esi
lea ecx [ ebp - 0x9c ]
call edi
lea ecx [ ebp - 0xa0 ]
call edi
lea ecx [ ebp - 0xa4 ]
call esi
lea ecx [ ebp - 0xa8 ]
call esi
lea ecx [ ebp - 0xac ]
call esi
lea ecx [ ebp - 0xb4 ]
call edi
lea ecx [ ebp - 0xb8 ]
call edi
lea ecx [ ebp - 0xbc ]
call edi
lea ecx [ ebp - 0xc4 ]
call edi
lea edx [ ebp - 0xc8 ]
push edx
push r-xdata
call ebx
lea ecx [ ebp - 0xcc ]
call esi
lea ecx [ ebp - 0xd0 ]
call edi
lea ecx [ ebp - 0xd4 ]
call esi
lea eax [ ebp - 0xd8 ]
push eax
push r-xdata
call ebx
lea ecx [ ebp - 0xdc ]
call esi
lea ecx [ ebp - 0xe0 ]
call esi
lea ecx [ ebp - 0xe4 ]
call esi
lea ecx [ ebp - 0xe8 ]
call esi
lea ecx [ ebp - 0xec ]
push ecx
push r-xdata
call ebx
lea edx [ ebp - 0xf0 ]
push edx
push r-xdata
call ebx
lea ecx [ ebp - 0xf4 ]
call esi
lea ecx [ ebp - 0xfc ]
call esi
lea ecx [ ebp - 0x100 ]
call edi
lea ecx [ ebp - 0x108 ]
call esi
lea ecx [ ebp - 0x10c ]
call esi
lea ecx [ ebp - 0x110 ]
call esi
lea ecx [ ebp - 0x114 ]
call esi
lea ecx [ ebp - 0x118 ]
call esi
lea ecx [ ebp - 0x120 ]
call edi
lea ecx [ ebp - 0x124 ]
call edi
lea ecx [ ebp - 0x128 ]
call esi
lea ecx [ ebp - 0x130 ]
call edi
lea ecx [ ebp - 0x134 ]
call edi
retn
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
push 0x8c
push r-xdata
push edi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4bc ] eax
mov edx [ ecx + 0x5c ]
lea ebx [ ecx + 0x5c ]
push edx
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx [ ebp - 0x4b8 ]
push eax
mov eax [ ebp - 0xd8 ]
mov ecx [ eax + 0xc ]
mov eax [ ecx + edx ]
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov ecx [ ebp - 0xd8 ]
push eax
mov eax [ ebp - 0x4bc ]
mov edx [ ecx + 0xc ]
mov ecx [ edx + eax + 0x4 ]
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x14c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x150 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x150 ]
lea eax [ ebp - 0x14c ]
push edx
lea ecx [ ebp - 0x148 ]
push eax
lea edx [ ebp - 0x144 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x13c ]
push eax
push ecx
push 0x6
call [ __vbaFreeStrList@IAT ]
add esp 0x1c
mov eax [ ebx ]
push ebx
call [ eax + 0x300 ]
lea ecx [ ebp - 0x2b4 ]
push eax
push ecx
call esi
mov edx [ eax ]
lea ecx [ ebp - 0x414 ]
push ecx
push eax
mov [ ebp - 0x418 ] eax
call [ edx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x304 ]
jmp r-xdata
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ ebx ]
push ebx
call [ eax + 0x300 ]
lea ecx [ ebp - 0x2b8 ]
push eax
push ecx
call esi
mov edx [ eax ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov [ ebp - 0x420 ] eax
call [ edx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
mov edx [ ebp - 0x418 ]
push 0x90
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov edx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ ebx ]
push ebx
call [ eax + 0x2fc ]
lea ecx [ ebp - 0x2b4 ]
push eax
push ecx
call esi
mov edx [ eax ]
lea ecx [ ebp - 0x414 ]
push ecx
push eax
mov [ ebp - 0x418 ] eax
call [ edx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x300 ]
jmp r-xdata
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ ebx ]
push ebx
call [ eax + 0x2fc ]
lea ecx [ ebp - 0x2b8 ]
push eax
push ecx
call esi
mov edx [ eax ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov [ ebp - 0x420 ] eax
call [ edx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
mov edx [ ebp - 0x418 ]
push 0x90
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov edx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x2fc ]
jmp r-xdata
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x34c ]
lea edx [ ebp - 0x2b4 ]
push eax
push edx
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x414 ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x418 ]
push 0x90
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x34c ]
push eax
lea eax [ ebp - 0x2b8 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x420 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov ecx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x34c ]
jmp r-xdata
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x338 ]
lea edx [ ebp - 0x2b4 ]
push eax
push edx
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x414 ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x418 ]
push 0x90
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x338 ]
push eax
lea eax [ ebp - 0x2b8 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x420 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov ecx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x338 ]
jmp r-xdata
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x348 ]
lea edx [ ebp - 0x2b4 ]
push eax
push edx
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x414 ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x418 ]
push 0x90
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x348 ]
push eax
lea eax [ ebp - 0x2b8 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x420 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov ecx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x348 ]
jmp r-xdata
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x33c ]
lea edx [ ebp - 0x2b4 ]
push eax
push edx
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x414 ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x418 ]
push 0x90
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x33c ]
push eax
lea eax [ ebp - 0x2b8 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x420 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov ecx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x33c ]
jmp r-xdata
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x344 ]
lea edx [ ebp - 0x2b4 ]
push eax
push edx
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x414 ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x418 ]
push 0x90
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x344 ]
push eax
lea eax [ ebp - 0x2b8 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x420 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebp - 0x3d4 ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov ecx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x3d4 ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x344 ]
mov ecx [ ebp - 0x3d4 ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx r-xdata
lea ecx [ ebp - 0x118 ]
call edi
mov edx r-xdata
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x340 ]
lea edx [ ebp - 0x2b4 ]
push eax
push edx
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x414 ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0x90 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov edi [ __vbaStrCat@IAT ]
push r-xdata
push r-xdata
lea ebx [ edx + 0x5c ]
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x13c ]
call [ __vbaFreeStr@IAT ]
mov eax [ ebx ]
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x140 ]
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x2
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0xc
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x140 ]
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x2
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0xc
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0xe4 ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x4
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0x14
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0xe0 ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x4
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0x14
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0x98 ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x4
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0x14
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0x118 ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x4
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0x14
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x140 ]
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x2
call [ __vbaFreeStrList@IAT ]
add esp 0xc
mov eax [ ebx ]
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov ecx [ ebp - 0x88 ]
push eax
push ecx
call edi
mov edx eax
lea ecx [ ebp - 0x144 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x148 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x4
call [ __vbaFreeStrList@IAT ]
mov eax [ ebx ]
add esp 0x14
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x13c ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x140 ]
call esi
mov edx eax
mov ecx ebx
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x140 ]
lea edx [ ebp - 0x13c ]
push ecx
push edx
push 0x2
call [ __vbaFreeStrList@IAT ]
add esp 0xc
cmp [ ebp - 0xc0 ] 0xffff
jne r-xdata
mov edx r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x418 ]
push 0x90
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x340 ]
push eax
lea eax [ ebp - 0x2b8 ]
push eax
call esi
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x420 ] eax
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
xor ecx ecx
inc eax
neg eax
cmp [ ebp - 0x414 ] 0xffff
sete cl
neg ecx
and eax ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x428 ] ax
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x2b8 ]
lea eax [ ebp - 0x2b4 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
cmp [ ebp - 0x428 ] di
je r-xdata
mov ecx [ ebp - 0x420 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
fld [ ebx + 0x54 ]
fadd [ ebx + 0x34 ]
fnstsw ax
test al 0xd
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
lea edx [ ebp - 0x3e0 ]
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
mov [ ebp - 0x3d8 ] r-xdata
mov [ ebp - 0x3e0 ] 0x8
call [ __vbaVarDup@IAT ]
lea ecx [ ebp - 0x3d0 ]
lea edx [ ebp - 0x3c0 ]
push ecx
lea eax [ ebp - 0x3b0 ]
push edx
push eax
lea ecx [ ebp - 0x3a0 ]
push edi
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x3b0 ]
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
mov eax [ ebx ]
add esp 0x14
push ebx
call [ eax + 0x340 ]
lea ecx [ ebp - 0x2b4 ]
push eax
push ecx
call esi
mov esi eax
push esi
mov edx [ esi ]
call [ edx + 0x204 ]
cmp eax edi
fnclex
jge r-xdata
jmp __vbaFPException
call [ __vbaFpR8@IAT ]
fcomp [ ebx + 0x3c ]
fnstsw ax
test ah 0x41
jne r-xdata
mov esi [ __vbaStrCat@IAT ]
mov edi [ __vbaStrMove@IAT ]
fld [ ebx + 0x54 ]
fadd [ ebx + 0x34 ]
mov eax 0xa
push r-xdata
mov [ ebp - 0x3d0 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3b0 ] eax
sub esp 0x8
mov ecx 0x80020004
fnstsw ax
test al 0xd
jne r-xdata
xor eax eax
cmp [ ebp - 0x414 ] 0xffff
lea ecx [ ebp - 0x2b4 ]
sete al
neg eax
mov [ ebp - 0x420 ] ax
call [ __vbaFreeObj@IAT ]
cmp [ ebp - 0x420 ] 0x0
je r-xdata
mov edx [ ebp - 0x418 ]
push 0x88
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
fstp [ esp ]
mov [ ebp - 0x3c8 ] ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3a8 ] ecx
call [ __vbaStrR8@IAT ]
mov edi [ __vbaStrMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x1c ]
call edi
mov esi [ __vbaStrCat@IAT ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x20 ]
call edi
push eax
push r-xdata
call esi
mov [ ebp - 0x398 ] eax
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
push edx
lea eax [ ebp - 0x3a0 ]
push 0x0
push eax
mov [ ebp - 0x3a0 ] 0x8
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
push ecx
push edx
push 0x2
call [ __vbaFreeStrList@IAT ]
lea eax [ ebp - 0x3d0 ]
lea ecx [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3b0 ]
push ecx
lea eax [ ebp - 0x3a0 ]
push edx
push eax
push 0x4
call [ __vbaFreeVarList@IAT ]
mov ecx [ ebx ]
add esp 0x20
push ebx
call [ ecx + 0x370 ]
lea edx [ ebp - 0x2b4 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0x1a4 ]
test eax eax
fnclex
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
push ebx
call [ ecx + 0x370 ]
lea edx [ ebp - 0x2b4 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
push 0x0
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0x8c ]
test eax eax
fnclex
jge r-xdata
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
jmp r-xdata
mov edx [ ebp - 0x418 ]
push 0x1a4
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
lea edx [ ebp - 0x390 ]
push edx
push eax
mov ecx [ eax ]
mov [ ebp - 0x5d0 ] eax
call [ ecx + 0x1c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ __vbaFreeObj@IAT ]
mov edx [ ebp - 0x418 ]
push 0x8c
push r-xdata
push edx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebx ]
push ebx
call [ eax + 0x370 ]
lea ecx [ ebp - 0x2b4 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
mov edx [ eax ]
lea ecx [ ebp - 0x414 ]
push ecx
push eax
mov [ ebp - 0x418 ] eax
call [ edx + 0x88 ]
test eax eax
fnclex
jge r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x390 ]
test eax eax
mov [ ebp - 0x5d8 ] edx
mov [ ebp - 0x3d8 ] 0x80020004
mov [ ebp - 0x3e0 ] 0xa
jne r-xdata
mov ecx [ ebp - 0x5d0 ]
push 0x1c
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x374 ]
lea edx [ ebp - 0x2b4 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x418 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x418 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x3b0 ]
push eax
lea eax [ ebp - 0x2b8 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov [ ebp - 0x420 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x420 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x32c ]
push eax
lea eax [ ebp - 0x2bc ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov [ ebp - 0x428 ] eax
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x428 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x390 ]
push eax
lea eax [ ebp - 0x2c0 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x38 ]
push edx
push eax
mov [ ebp - 0x430 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x430 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x30c ]
push eax
lea eax [ ebp - 0x2c4 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x44 ]
push edx
push eax
mov [ ebp - 0x438 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x438 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x3ac ]
push eax
lea eax [ ebp - 0x2c8 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x50 ]
push edx
push eax
mov [ ebp - 0x440 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x440 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x328 ]
push eax
lea eax [ ebp - 0x2cc ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x5c ]
push edx
push eax
mov [ ebp - 0x448 ] eax
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x448 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x38c ]
push eax
lea eax [ ebp - 0x2d0 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x68 ]
push edx
push eax
mov [ ebp - 0x450 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x450 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x308 ]
push eax
lea eax [ ebp - 0x2d4 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x74 ]
push edx
push eax
mov [ ebp - 0x458 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x458 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x37c ]
push eax
lea eax [ ebp - 0x2d8 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x80 ]
push edx
push eax
mov [ ebp - 0x460 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x460 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x310 ]
push eax
lea eax [ ebp - 0x2dc ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x8c ]
push edx
push eax
mov [ ebp - 0x468 ] eax
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x468 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x380 ]
push eax
lea eax [ ebp - 0x2e0 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x98 ]
push edx
push eax
mov [ ebp - 0x470 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x470 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x304 ]
push eax
lea eax [ ebp - 0x2e4 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0xa4 ]
push edx
push eax
mov [ ebp - 0x478 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x478 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x3f4 ]
push eax
lea eax [ ebp - 0x2e8 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0xb0 ]
push edx
push eax
mov [ ebp - 0x480 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x480 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x36c ]
push eax
lea eax [ ebp - 0x2ec ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
push eax
mov [ ebp - 0x488 ] eax
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x488 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x388 ]
push eax
lea eax [ ebp - 0x2f0 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0xc8 ]
push edx
push eax
mov [ ebp - 0x490 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x490 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x300 ]
push eax
lea eax [ ebp - 0x2f4 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0xd4 ]
push edx
push eax
mov [ ebp - 0x498 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x498 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x3e4 ]
push eax
lea eax [ ebp - 0x2f8 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0xe0 ]
push edx
push eax
mov [ ebp - 0x4a0 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebx ]
push ebx
call [ edx + 0x35c ]
push eax
lea eax [ ebp - 0x2fc ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0xec ]
push edx
push eax
mov [ ebp - 0x4a8 ] eax
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x4a0 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x3e0 ]
push eax
lea eax [ ebp - 0x300 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0xf8 ]
push edx
push eax
mov [ ebp - 0x4b0 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x4a8 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x358 ]
push eax
lea eax [ ebp - 0x304 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x104 ]
push edx
push eax
mov [ ebp - 0x4b8 ] eax
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x4b0 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x3f0 ]
push eax
lea eax [ ebp - 0x308 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x110 ]
push edx
push eax
mov [ ebp - 0x4c0 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x4b8 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x368 ]
push eax
lea eax [ ebp - 0x30c ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x11c ]
push edx
push eax
mov [ ebp - 0x4c8 ] eax
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x4c0 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x34c ]
push eax
lea eax [ ebp - 0x310 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x128 ]
push edx
push eax
mov [ ebp - 0x4d0 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x4c8 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4d0 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x338 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x138 ]
push edx
push eax
mov [ ebp - 0x4d8 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebx ]
push ebx
call [ edx + 0x3ec ]
push eax
lea eax [ ebp - 0x318 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x144 ]
push edx
push eax
mov [ ebp - 0x4e0 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x4d8 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x364 ]
push eax
lea eax [ ebp - 0x31c ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x150 ]
push edx
push eax
mov [ ebp - 0x4e8 ] eax
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x4e0 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x348 ]
push eax
lea eax [ ebp - 0x320 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x15c ]
push edx
push eax
mov [ ebp - 0x4f0 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x4e8 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4f0 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x33c ]
push eax
lea eax [ ebp - 0x324 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x16c ]
push edx
push eax
mov [ ebp - 0x4f8 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebx ]
push ebx
call [ edx + 0x3e8 ]
push eax
lea eax [ ebp - 0x328 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x178 ]
push edx
push eax
mov [ ebp - 0x500 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x4f8 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x360 ]
push eax
lea eax [ ebp - 0x32c ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x184 ]
push edx
push eax
mov [ ebp - 0x508 ] eax
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x500 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x344 ]
push eax
lea eax [ ebp - 0x330 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x190 ]
push edx
push eax
mov [ ebp - 0x510 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x508 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x510 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x340 ]
push eax
lea eax [ ebp - 0x334 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x1a0 ]
push edx
push eax
mov [ ebp - 0x518 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebx ]
push ebx
call [ edx + 0x3dc ]
push eax
lea eax [ ebp - 0x338 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x1ac ]
push edx
push eax
mov [ ebp - 0x520 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x518 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x330 ]
push eax
lea eax [ ebp - 0x33c ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x1b8 ]
push edx
push eax
mov [ ebp - 0x528 ] eax
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x520 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x3d8 ]
push eax
lea eax [ ebp - 0x340 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x1c4 ]
push edx
push eax
mov [ ebp - 0x530 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x528 ]
push 0xa8
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x530 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x3a8 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x1d0 ]
push edx
push eax
mov [ ebp - 0x538 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebx ]
push ebx
call [ edx + 0x324 ]
push eax
lea eax [ ebp - 0x348 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x1dc ]
push edx
push eax
mov [ ebp - 0x540 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x538 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x540 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x39c ]
push eax
lea eax [ ebp - 0x34c ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x1e8 ]
push edx
push eax
mov [ ebp - 0x548 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x548 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x31c ]
push eax
lea eax [ ebp - 0x350 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x1f4 ]
push edx
push eax
mov [ ebp - 0x550 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x550 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x394 ]
push eax
lea eax [ ebp - 0x354 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x200 ]
push edx
push eax
mov [ ebp - 0x558 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x558 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x320 ]
push eax
lea eax [ ebp - 0x358 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x20c ]
push edx
push eax
mov [ ebp - 0x560 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebx ]
push ebx
call [ edx + 0x3d4 ]
push eax
lea eax [ ebp - 0x35c ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x218 ]
push edx
push eax
mov [ ebp - 0x568 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x560 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x568 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x3a4 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x224 ]
push edx
push eax
mov [ ebp - 0x570 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebx ]
push ebx
call [ edx + 0x354 ]
push eax
lea eax [ ebp - 0x364 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x230 ]
push edx
push eax
mov [ ebp - 0x578 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x570 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x578 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x3a0 ]
push eax
lea eax [ ebp - 0x368 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x23c ]
push edx
push eax
mov [ ebp - 0x580 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x580 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x314 ]
push eax
lea eax [ ebp - 0x36c ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x248 ]
push edx
push eax
mov [ ebp - 0x588 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x588 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x398 ]
push eax
lea eax [ ebp - 0x370 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x254 ]
push edx
push eax
mov [ ebp - 0x590 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x590 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x318 ]
push eax
lea eax [ ebp - 0x374 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x260 ]
push edx
push eax
mov [ ebp - 0x598 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ ebx ]
push ebx
call [ edx + 0x3d0 ]
push eax
lea eax [ ebp - 0x378 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x26c ]
push edx
push eax
mov [ ebp - 0x5a0 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x598 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x350 ]
push eax
lea eax [ ebp - 0x37c ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x278 ]
push edx
push eax
mov [ ebp - 0x5a8 ] eax
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x5a0 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x3cc ]
push eax
lea eax [ ebp - 0x380 ]
push eax
call [ __vbaObjSet@IAT ]
mov ecx [ eax ]
lea edx [ ebp - 0x284 ]
push edx
push eax
mov [ ebp - 0x5b0 ] eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x5a8 ]
push 0xa0
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebx ]
push ebx
call [ edx + 0x334 ]
push eax
lea eax [ ebp - 0x384 ]
push eax
call [ __vbaObjSet@IAT ]
mov ebx eax
lea edx [ ebp - 0x290 ]
push edx
push ebx
mov ecx [ ebx ]
call [ ecx + 0xa8 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x5b0 ]
push 0x50
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0xa8
push r-xdata
push ebx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x384 ]
lea edx [ ebp - 0x388 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov ebx eax
lea ecx [ ebp - 0x29c ]
push ecx
push ebx
mov eax [ ebx ]
call [ eax + 0x50 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x50
push r-xdata
push ebx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x2fc ]
push eax
lea eax [ ebp - 0x38c ]
push eax
call [ __vbaObjSet@IAT ]
mov ebx eax
lea edx [ ebp - 0x2a8 ]
push edx
push ebx
mov ecx [ ebx ]
call [ ecx + 0xa0 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ ebp - 0x5d8 ]
mov edx [ ebp - 0x3e0 ]
sub esp 0x10
mov ebx [ eax ]
mov eax [ ebp - 0x3dc ]
mov ecx esp
mov [ ecx ] edx
mov edx [ ebp - 0x3d8 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x3d4 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x1c ]
push ecx
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x24 ]
call edi
mov edx [ ebp - 0x20 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x28 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x30 ]
call edi
push eax
mov eax [ ebp - 0x2c ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x34 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x3c ]
call edi
mov ecx [ ebp - 0x38 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x40 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x48 ]
call edi
mov edx [ ebp - 0x44 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x4c ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x54 ]
call edi
push eax
mov eax [ ebp - 0x50 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x58 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x60 ]
call edi
mov ecx [ ebp - 0x5c ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x64 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x6c ]
call edi
mov edx [ ebp - 0x68 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x70 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x78 ]
call edi
push eax
mov eax [ ebp - 0x74 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x7c ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x84 ]
call edi
mov ecx [ ebp - 0x80 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x88 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x90 ]
call edi
mov edx [ ebp - 0x8c ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x94 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x9c ]
call edi
push eax
mov eax [ ebp - 0x98 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0xa0 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0xa8 ]
call edi
mov ecx [ ebp - 0xa4 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0xac ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0xb4 ]
call edi
mov edx [ ebp - 0xb0 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0xb8 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0xc0 ]
call edi
push eax
mov eax [ ebp - 0xbc ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0xc4 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0xcc ]
call edi
mov ecx [ ebp - 0xc8 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0xd0 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0xd8 ]
call edi
mov edx [ ebp - 0xd4 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0xdc ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0xe4 ]
call edi
push eax
mov eax [ ebp - 0xe0 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0xe8 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0xf0 ]
call edi
mov ecx [ ebp - 0xec ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0xf4 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0xfc ]
call edi
mov edx [ ebp - 0xf8 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x100 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x108 ]
call edi
push eax
mov eax [ ebp - 0x104 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x10c ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x114 ]
call edi
mov ecx [ ebp - 0x110 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x118 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x120 ]
call edi
mov edx [ ebp - 0x11c ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x124 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x12c ]
call edi
push eax
mov eax [ ebp - 0x128 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x130 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x134 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x13c ]
call edi
mov ecx [ ebp - 0x138 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x140 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x148 ]
call edi
mov edx [ ebp - 0x144 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x14c ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x154 ]
call edi
push eax
mov eax [ ebp - 0x150 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x158 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x160 ]
call edi
mov ecx [ ebp - 0x15c ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x164 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x168 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x170 ]
call edi
mov edx [ ebp - 0x16c ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x174 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x17c ]
call edi
push eax
mov eax [ ebp - 0x178 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x180 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x188 ]
call edi
mov ecx [ ebp - 0x184 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x18c ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x194 ]
call edi
mov edx [ ebp - 0x190 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x198 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x19c ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x1a4 ]
call edi
push eax
mov eax [ ebp - 0x1a0 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x1a8 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x1b0 ]
call edi
mov ecx [ ebp - 0x1ac ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x1b4 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x1bc ]
call edi
mov edx [ ebp - 0x1b8 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x1c0 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x1c8 ]
call edi
push eax
mov eax [ ebp - 0x1c4 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x1cc ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x1d4 ]
call edi
mov ecx [ ebp - 0x1d0 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x1d8 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x1e0 ]
call edi
mov edx [ ebp - 0x1dc ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x1e4 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x1ec ]
call edi
push eax
mov eax [ ebp - 0x1e8 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x1f0 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x1f8 ]
call edi
mov ecx [ ebp - 0x1f4 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x1fc ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x204 ]
call edi
mov edx [ ebp - 0x200 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x208 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x210 ]
call edi
push eax
mov eax [ ebp - 0x20c ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x214 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x21c ]
call edi
mov ecx [ ebp - 0x218 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x220 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x228 ]
call edi
mov edx [ ebp - 0x224 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x22c ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x234 ]
call edi
push eax
mov eax [ ebp - 0x230 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x238 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x240 ]
call edi
mov ecx [ ebp - 0x23c ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x244 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x24c ]
call edi
mov edx [ ebp - 0x248 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x250 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x258 ]
call edi
push eax
mov eax [ ebp - 0x254 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x25c ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x264 ]
call edi
mov ecx [ ebp - 0x260 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x268 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x270 ]
call edi
mov edx [ ebp - 0x26c ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x274 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x27c ]
call edi
push eax
mov eax [ ebp - 0x278 ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x280 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x288 ]
call edi
mov ecx [ ebp - 0x284 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x28c ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x294 ]
call edi
mov edx [ ebp - 0x290 ]
push eax
push edx
call esi
mov edx eax
lea ecx [ ebp - 0x298 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x2a0 ]
call edi
push eax
mov eax [ ebp - 0x29c ]
push eax
call esi
mov edx eax
lea ecx [ ebp - 0x2a4 ]
call edi
push eax
push r-xdata
call esi
mov edx eax
lea ecx [ ebp - 0x2ac ]
call edi
mov ecx [ ebp - 0x2a8 ]
push eax
push ecx
call esi
mov edx eax
lea ecx [ ebp - 0x2b0 ]
call edi
mov esi [ ebp - 0x5d8 ]
push eax
push esi
call [ ebx + 0x60 ]
test eax eax
fnclex
jge r-xdata
push 0xa0
push r-xdata
push ebx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea edx [ ebp - 0x8c ]
lea eax [ ebp - 0x90 ]
push edx
lea ecx [ ebp - 0x88 ]
push eax
lea edx [ ebp - 0x80 ]
push ecx
lea eax [ ebp - 0x84 ]
push edx
lea ecx [ ebp - 0x7c ]
push eax
lea edx [ ebp - 0x74 ]
push ecx
lea eax [ ebp - 0x78 ]
push edx
lea ecx [ ebp - 0x70 ]
push eax
lea edx [ ebp - 0x68 ]
push ecx
lea eax [ ebp - 0x6c ]
push edx
lea ecx [ ebp - 0x64 ]
push eax
lea edx [ ebp - 0x5c ]
push ecx
lea eax [ ebp - 0x60 ]
push edx
lea ecx [ ebp - 0x58 ]
push eax
lea edx [ ebp - 0x50 ]
push ecx
lea eax [ ebp - 0x54 ]
push edx
lea ecx [ ebp - 0x4c ]
push eax
lea edx [ ebp - 0x44 ]
push ecx
lea eax [ ebp - 0x48 ]
push edx
lea ecx [ ebp - 0x40 ]
push eax
lea edx [ ebp - 0x38 ]
push ecx
lea eax [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0x34 ]
push eax
lea edx [ ebp - 0x2c ]
push ecx
lea eax [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x28 ]
push eax
lea edx [ ebp - 0x20 ]
push ecx
lea eax [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x104 ]
push ecx
lea eax [ ebp - 0x108 ]
push edx
lea ecx [ ebp - 0x100 ]
push eax
lea edx [ ebp - 0xf8 ]
push ecx
lea eax [ ebp - 0xfc ]
push edx
lea ecx [ ebp - 0xf4 ]
push eax
lea edx [ ebp - 0xec ]
push ecx
lea eax [ ebp - 0xf0 ]
push edx
lea ecx [ ebp - 0xe8 ]
push eax
lea edx [ ebp - 0xe0 ]
push ecx
push edx
lea eax [ ebp - 0xe4 ]
lea ecx [ ebp - 0xdc ]
push eax
lea edx [ ebp - 0xd4 ]
push ecx
lea eax [ ebp - 0xd8 ]
push edx
lea ecx [ ebp - 0xd0 ]
push eax
lea edx [ ebp - 0xc8 ]
push ecx
lea eax [ ebp - 0xcc ]
push edx
lea ecx [ ebp - 0xc4 ]
push eax
lea edx [ ebp - 0xbc ]
push ecx
lea eax [ ebp - 0xc0 ]
push edx
lea ecx [ ebp - 0xb8 ]
push eax
lea edx [ ebp - 0xb0 ]
push ecx
lea eax [ ebp - 0xb4 ]
push edx
lea ecx [ ebp - 0xac ]
push eax
lea edx [ ebp - 0xa4 ]
push ecx
lea eax [ ebp - 0xa8 ]
push edx
lea ecx [ ebp - 0xa0 ]
push eax
lea edx [ ebp - 0x98 ]
push ecx
lea eax [ ebp - 0x9c ]
push edx
lea ecx [ ebp - 0x94 ]
push eax
lea edx [ ebp - 0x180 ]
push ecx
lea eax [ ebp - 0x178 ]
push edx
lea ecx [ ebp - 0x17c ]
push eax
lea edx [ ebp - 0x174 ]
push ecx
lea eax [ ebp - 0x16c ]
push edx
lea ecx [ ebp - 0x170 ]
push eax
lea edx [ ebp - 0x168 ]
push ecx
lea eax [ ebp - 0x164 ]
push edx
lea ecx [ ebp - 0x15c ]
push eax
lea edx [ ebp - 0x160 ]
push ecx
lea eax [ ebp - 0x158 ]
push edx
lea ecx [ ebp - 0x150 ]
push eax
lea edx [ ebp - 0x154 ]
push ecx
lea eax [ ebp - 0x14c ]
push edx
lea ecx [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x148 ]
push ecx
lea eax [ ebp - 0x140 ]
push edx
lea ecx [ ebp - 0x138 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
lea eax [ ebp - 0x134 ]
push edx
lea ecx [ ebp - 0x130 ]
push eax
push ecx
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x12c ]
push edx
lea ecx [ ebp - 0x124 ]
push eax
lea edx [ ebp - 0x11c ]
push ecx
lea eax [ ebp - 0x120 ]
push edx
lea ecx [ ebp - 0x118 ]
push eax
lea edx [ ebp - 0x110 ]
push ecx
lea eax [ ebp - 0x114 ]
push edx
lea ecx [ ebp - 0x10c ]
push eax
lea edx [ ebp - 0x1f4 ]
push ecx
lea eax [ ebp - 0x1f8 ]
push edx
lea ecx [ ebp - 0x1f0 ]
push eax
lea edx [ ebp - 0x1e8 ]
push ecx
lea eax [ ebp - 0x1ec ]
push edx
lea ecx [ ebp - 0x1e4 ]
push eax
lea edx [ ebp - 0x1dc ]
push ecx
lea eax [ ebp - 0x1e0 ]
push edx
lea ecx [ ebp - 0x1d8 ]
push eax
lea edx [ ebp - 0x1d0 ]
push ecx
lea eax [ ebp - 0x1d4 ]
push edx
lea ecx [ ebp - 0x1cc ]
push eax
lea edx [ ebp - 0x1c4 ]
push ecx
lea eax [ ebp - 0x1c8 ]
push edx
lea ecx [ ebp - 0x1c0 ]
push eax
lea edx [ ebp - 0x1b8 ]
push ecx
lea eax [ ebp - 0x1bc ]
push edx
lea ecx [ ebp - 0x1b4 ]
push eax
lea edx [ ebp - 0x1ac ]
push ecx
lea eax [ ebp - 0x1b0 ]
push edx
lea ecx [ ebp - 0x1a8 ]
push eax
lea edx [ ebp - 0x1a0 ]
push ecx
lea eax [ ebp - 0x1a4 ]
push edx
lea ecx [ ebp - 0x19c ]
push eax
lea edx [ ebp - 0x198 ]
push ecx
lea eax [ ebp - 0x190 ]
push edx
lea ecx [ ebp - 0x194 ]
push eax
lea edx [ ebp - 0x18c ]
push ecx
lea eax [ ebp - 0x184 ]
push edx
lea ecx [ ebp - 0x188 ]
push eax
lea edx [ ebp - 0x26c ]
push ecx
push edx
lea eax [ ebp - 0x270 ]
lea ecx [ ebp - 0x268 ]
push eax
lea edx [ ebp - 0x260 ]
push ecx
lea eax [ ebp - 0x264 ]
push edx
lea ecx [ ebp - 0x25c ]
push eax
lea edx [ ebp - 0x254 ]
push ecx
lea eax [ ebp - 0x258 ]
push edx
lea ecx [ ebp - 0x250 ]
push eax
lea edx [ ebp - 0x248 ]
push ecx
lea eax [ ebp - 0x24c ]
push edx
lea ecx [ ebp - 0x244 ]
push eax
lea edx [ ebp - 0x23c ]
push ecx
lea eax [ ebp - 0x240 ]
push edx
lea ecx [ ebp - 0x238 ]
push eax
lea edx [ ebp - 0x230 ]
push ecx
lea eax [ ebp - 0x234 ]
push edx
lea ecx [ ebp - 0x22c ]
push eax
lea edx [ ebp - 0x224 ]
push ecx
lea eax [ ebp - 0x228 ]
push edx
lea ecx [ ebp - 0x220 ]
push eax
lea edx [ ebp - 0x218 ]
push ecx
lea eax [ ebp - 0x21c ]
push edx
lea ecx [ ebp - 0x214 ]
push eax
lea edx [ ebp - 0x20c ]
push ecx
lea eax [ ebp - 0x210 ]
push edx
lea ecx [ ebp - 0x208 ]
push eax
lea edx [ ebp - 0x200 ]
push ecx
lea eax [ ebp - 0x204 ]
push edx
lea ecx [ ebp - 0x1fc ]
push eax
lea edx [ ebp - 0x2b0 ]
push ecx
lea eax [ ebp - 0x2a8 ]
push edx
lea ecx [ ebp - 0x2ac ]
push eax
lea edx [ ebp - 0x2a4 ]
push ecx
lea eax [ ebp - 0x29c ]
push edx
lea ecx [ ebp - 0x2a0 ]
push eax
lea edx [ ebp - 0x298 ]
push ecx
lea eax [ ebp - 0x290 ]
push edx
lea ecx [ ebp - 0x294 ]
push eax
lea edx [ ebp - 0x28c ]
push ecx
lea eax [ ebp - 0x284 ]
push edx
lea ecx [ ebp - 0x288 ]
push eax
push ecx
lea edx [ ebp - 0x280 ]
lea eax [ ebp - 0x278 ]
push edx
lea ecx [ ebp - 0x27c ]
push eax
lea edx [ ebp - 0x274 ]
push ecx
push edx
push 0xa6
call [ __vbaFreeStrList@IAT ]
lea eax [ ebp - 0x328 ]
lea ecx [ ebp - 0x324 ]
push eax
lea edx [ ebp - 0x320 ]
push ecx
lea eax [ ebp - 0x31c ]
push edx
lea ecx [ ebp - 0x318 ]
push eax
lea edx [ ebp - 0x314 ]
push ecx
lea eax [ ebp - 0x310 ]
push edx
lea ecx [ ebp - 0x30c ]
push eax
lea edx [ ebp - 0x308 ]
push ecx
lea eax [ ebp - 0x304 ]
push edx
lea ecx [ ebp - 0x300 ]
push eax
lea edx [ ebp - 0x2fc ]
push ecx
lea eax [ ebp - 0x2f8 ]
push edx
lea ecx [ ebp - 0x2f4 ]
push eax
lea edx [ ebp - 0x2f0 ]
push ecx
lea eax [ ebp - 0x2ec ]
push edx
lea ecx [ ebp - 0x2e8 ]
push eax
lea edx [ ebp - 0x2e4 ]
push ecx
lea eax [ ebp - 0x2e0 ]
push edx
lea ecx [ ebp - 0x2dc ]
push eax
lea edx [ ebp - 0x2d8 ]
push ecx
lea eax [ ebp - 0x2d4 ]
push edx
lea ecx [ ebp - 0x2d0 ]
push eax
lea edx [ ebp - 0x2cc ]
push ecx
lea eax [ ebp - 0x2c8 ]
push edx
lea ecx [ ebp - 0x2c4 ]
push eax
lea edx [ ebp - 0x2c0 ]
push ecx
lea eax [ ebp - 0x2bc ]
push edx
lea ecx [ ebp - 0x2b8 ]
push eax
lea edx [ ebp - 0x2b4 ]
push ecx
lea eax [ ebp - 0x390 ]
push edx
lea ecx [ ebp - 0x38c ]
push eax
lea edx [ ebp - 0x388 ]
push ecx
lea eax [ ebp - 0x384 ]
push edx
lea ecx [ ebp - 0x380 ]
push eax
push ecx
lea edx [ ebp - 0x37c ]
lea eax [ ebp - 0x378 ]
push edx
lea ecx [ ebp - 0x374 ]
push eax
lea edx [ ebp - 0x370 ]
push ecx
lea eax [ ebp - 0x36c ]
push edx
lea ecx [ ebp - 0x368 ]
push eax
lea edx [ ebp - 0x364 ]
push ecx
lea eax [ ebp - 0x360 ]
push edx
lea ecx [ ebp - 0x35c ]
push eax
lea edx [ ebp - 0x358 ]
push ecx
lea eax [ ebp - 0x354 ]
push edx
lea ecx [ ebp - 0x350 ]
push eax
lea edx [ ebp - 0x34c ]
push ecx
lea eax [ ebp - 0x348 ]
push edx
lea ecx [ ebp - 0x344 ]
push eax
lea edx [ ebp - 0x340 ]
push ecx
lea eax [ ebp - 0x33c ]
push edx
lea ecx [ ebp - 0x338 ]
push eax
lea edx [ ebp - 0x334 ]
push ecx
lea eax [ ebp - 0x330 ]
push edx
lea ecx [ ebp - 0x32c ]
push eax
push ecx
push 0x38
call [ __vbaFreeObjList@IAT ]
add esp 0x380
xor edi edi
push 0x60
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
sub_414fd0
lea edx [ ebp - 0x138 ]
push edx
call [ __vbaAryUnlock@IAT ]
lea eax [ ebp - 0x16c ]
lea ecx [ ebp - 0x168 ]
push eax
lea edx [ ebp - 0x164 ]
push ecx
lea eax [ ebp - 0x160 ]
push edx
lea ecx [ ebp - 0x15c ]
push eax
lea edx [ ebp - 0x158 ]
push ecx
lea eax [ ebp - 0x154 ]
push edx
lea ecx [ ebp - 0x150 ]
push eax
lea edx [ ebp - 0x14c ]
push ecx
lea eax [ ebp - 0x148 ]
push edx
lea ecx [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x140 ]
push ecx
lea eax [ ebp - 0x13c ]
push edx
push eax
push 0xd
call [ __vbaFreeStrList@IAT ]
add esp 0x38
lea ecx [ ebp - 0x170 ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x200 ]
lea edx [ ebp - 0x1f0 ]
push ecx
lea eax [ ebp - 0x1e0 ]
push edx
lea ecx [ ebp - 0x1d0 ]
push eax
lea edx [ ebp - 0x1c0 ]
push ecx
lea eax [ ebp - 0x1b0 ]
push edx
lea ecx [ ebp - 0x1a0 ]
push eax
lea edx [ ebp - 0x190 ]
push ecx
lea eax [ ebp - 0x180 ]
push edx
push eax
push 0x9
call [ __vbaFreeVarList@IAT ]
add esp 0x28
retn
sub_41529e
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41a47b
lea edx [ ebp - 0x2b0 ]
lea eax [ ebp - 0x2ac ]
push edx
lea ecx [ ebp - 0x2a8 ]
push eax
lea edx [ ebp - 0x2a4 ]
push ecx
lea eax [ ebp - 0x2a0 ]
push edx
lea ecx [ ebp - 0x29c ]
push eax
lea edx [ ebp - 0x298 ]
push ecx
lea eax [ ebp - 0x294 ]
push edx
lea ecx [ ebp - 0x290 ]
push eax
lea edx [ ebp - 0x28c ]
push ecx
lea eax [ ebp - 0x288 ]
push edx
lea ecx [ ebp - 0x284 ]
push eax
lea edx [ ebp - 0x280 ]
push ecx
lea eax [ ebp - 0x27c ]
push edx
lea ecx [ ebp - 0x278 ]
push eax
lea edx [ ebp - 0x274 ]
push ecx
lea eax [ ebp - 0x270 ]
push edx
lea ecx [ ebp - 0x26c ]
push eax
lea edx [ ebp - 0x268 ]
push ecx
lea eax [ ebp - 0x264 ]
push edx
lea ecx [ ebp - 0x260 ]
push eax
lea edx [ ebp - 0x25c ]
push ecx
lea eax [ ebp - 0x258 ]
push edx
lea ecx [ ebp - 0x254 ]
push eax
lea edx [ ebp - 0x250 ]
push ecx
lea eax [ ebp - 0x24c ]
push edx
lea ecx [ ebp - 0x248 ]
push eax
lea edx [ ebp - 0x244 ]
push ecx
lea eax [ ebp - 0x240 ]
push edx
lea ecx [ ebp - 0x23c ]
push eax
lea edx [ ebp - 0x238 ]
push ecx
lea eax [ ebp - 0x234 ]
push edx
lea ecx [ ebp - 0x230 ]
push eax
lea edx [ ebp - 0x22c ]
push ecx
lea eax [ ebp - 0x228 ]
push edx
lea ecx [ ebp - 0x224 ]
push eax
lea edx [ ebp - 0x220 ]
push ecx
lea eax [ ebp - 0x21c ]
push edx
lea ecx [ ebp - 0x218 ]
push eax
lea edx [ ebp - 0x214 ]
push ecx
push edx
lea eax [ ebp - 0x210 ]
lea ecx [ ebp - 0x20c ]
push eax
lea edx [ ebp - 0x208 ]
push ecx
lea eax [ ebp - 0x204 ]
push edx
lea ecx [ ebp - 0x200 ]
push eax
lea edx [ ebp - 0x1fc ]
push ecx
lea eax [ ebp - 0x1f8 ]
push edx
lea ecx [ ebp - 0x1f4 ]
push eax
lea edx [ ebp - 0x1f0 ]
push ecx
lea eax [ ebp - 0x1ec ]
push edx
lea ecx [ ebp - 0x1e8 ]
push eax
lea edx [ ebp - 0x1e4 ]
push ecx
lea eax [ ebp - 0x1e0 ]
push edx
lea ecx [ ebp - 0x1dc ]
push eax
lea edx [ ebp - 0x1d8 ]
push ecx
lea eax [ ebp - 0x1d4 ]
push edx
lea ecx [ ebp - 0x1d0 ]
push eax
lea edx [ ebp - 0x1cc ]
push ecx
lea eax [ ebp - 0x1c8 ]
push edx
lea ecx [ ebp - 0x1c4 ]
push eax
lea edx [ ebp - 0x1c0 ]
push ecx
lea eax [ ebp - 0x1bc ]
push edx
lea ecx [ ebp - 0x1b8 ]
push eax
lea edx [ ebp - 0x1b4 ]
push ecx
lea eax [ ebp - 0x1b0 ]
push edx
lea ecx [ ebp - 0x1ac ]
push eax
lea edx [ ebp - 0x1a8 ]
push ecx
lea eax [ ebp - 0x1a4 ]
push edx
lea ecx [ ebp - 0x1a0 ]
push eax
lea edx [ ebp - 0x19c ]
push ecx
lea eax [ ebp - 0x198 ]
push edx
lea ecx [ ebp - 0x194 ]
push eax
lea edx [ ebp - 0x190 ]
push ecx
lea eax [ ebp - 0x18c ]
push edx
lea ecx [ ebp - 0x188 ]
push eax
lea edx [ ebp - 0x184 ]
push ecx
lea eax [ ebp - 0x180 ]
push edx
lea ecx [ ebp - 0x17c ]
push eax
lea edx [ ebp - 0x178 ]
push ecx
lea eax [ ebp - 0x174 ]
push edx
push eax
lea ecx [ ebp - 0x170 ]
lea edx [ ebp - 0x16c ]
push ecx
lea eax [ ebp - 0x168 ]
push edx
lea ecx [ ebp - 0x164 ]
push eax
lea edx [ ebp - 0x160 ]
push ecx
lea eax [ ebp - 0x15c ]
push edx
lea ecx [ ebp - 0x158 ]
push eax
lea edx [ ebp - 0x154 ]
push ecx
lea eax [ ebp - 0x150 ]
push edx
lea ecx [ ebp - 0x14c ]
push eax
lea edx [ ebp - 0x148 ]
push ecx
lea eax [ ebp - 0x144 ]
push edx
lea ecx [ ebp - 0x140 ]
push eax
lea edx [ ebp - 0x13c ]
push ecx
lea eax [ ebp - 0x138 ]
push edx
lea ecx [ ebp - 0x134 ]
push eax
lea edx [ ebp - 0x130 ]
push ecx
lea eax [ ebp - 0x12c ]
push edx
lea ecx [ ebp - 0x128 ]
push eax
lea edx [ ebp - 0x124 ]
push ecx
lea eax [ ebp - 0x120 ]
push edx
lea ecx [ ebp - 0x11c ]
push eax
lea edx [ ebp - 0x118 ]
push ecx
lea eax [ ebp - 0x114 ]
push edx
lea ecx [ ebp - 0x110 ]
push eax
lea edx [ ebp - 0x10c ]
push ecx
lea eax [ ebp - 0x108 ]
push edx
lea ecx [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x100 ]
push ecx
lea eax [ ebp - 0xfc ]
push edx
lea ecx [ ebp - 0xf8 ]
push eax
lea edx [ ebp - 0xf4 ]
push ecx
lea eax [ ebp - 0xf0 ]
push edx
lea ecx [ ebp - 0xec ]
push eax
lea edx [ ebp - 0xe8 ]
push ecx
lea eax [ ebp - 0xe4 ]
push edx
lea ecx [ ebp - 0xe0 ]
push eax
lea edx [ ebp - 0xdc ]
push ecx
lea eax [ ebp - 0xd8 ]
push edx
lea ecx [ ebp - 0xd4 ]
push eax
lea edx [ ebp - 0xd0 ]
push ecx
push edx
lea eax [ ebp - 0xcc ]
lea ecx [ ebp - 0xc8 ]
push eax
lea edx [ ebp - 0xc4 ]
push ecx
lea eax [ ebp - 0xc0 ]
push edx
lea ecx [ ebp - 0xbc ]
push eax
lea edx [ ebp - 0xb8 ]
push ecx
lea eax [ ebp - 0xb4 ]
push edx
lea ecx [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xac ]
push ecx
lea eax [ ebp - 0xa8 ]
push edx
lea ecx [ ebp - 0xa4 ]
push eax
lea edx [ ebp - 0xa0 ]
push ecx
lea eax [ ebp - 0x9c ]
push edx
lea ecx [ ebp - 0x98 ]
push eax
lea edx [ ebp - 0x94 ]
push ecx
lea eax [ ebp - 0x90 ]
push edx
lea ecx [ ebp - 0x8c ]
push eax
lea edx [ ebp - 0x88 ]
push ecx
lea eax [ ebp - 0x84 ]
push edx
lea ecx [ ebp - 0x80 ]
push eax
lea edx [ ebp - 0x7c ]
push ecx
lea eax [ ebp - 0x78 ]
push edx
lea ecx [ ebp - 0x74 ]
push eax
lea edx [ ebp - 0x70 ]
push ecx
lea eax [ ebp - 0x6c ]
push edx
lea ecx [ ebp - 0x68 ]
push eax
lea edx [ ebp - 0x64 ]
push ecx
lea eax [ ebp - 0x60 ]
push edx
lea ecx [ ebp - 0x5c ]
push eax
lea edx [ ebp - 0x58 ]
push ecx
lea eax [ ebp - 0x54 ]
push edx
lea ecx [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x4c ]
push ecx
lea eax [ ebp - 0x48 ]
push edx
lea ecx [ ebp - 0x44 ]
push eax
lea edx [ ebp - 0x40 ]
push ecx
lea eax [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0x38 ]
push eax
lea edx [ ebp - 0x34 ]
push ecx
lea eax [ ebp - 0x30 ]
push edx
push eax
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
push ecx
lea eax [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x1c ]
push ecx
push edx
push 0xa6
call [ __vbaFreeStrList@IAT ]
lea eax [ ebp - 0x390 ]
lea ecx [ ebp - 0x38c ]
push eax
lea edx [ ebp - 0x388 ]
push ecx
lea eax [ ebp - 0x384 ]
push edx
lea ecx [ ebp - 0x380 ]
push eax
lea edx [ ebp - 0x37c ]
push ecx
lea eax [ ebp - 0x378 ]
push edx
lea ecx [ ebp - 0x374 ]
push eax
lea edx [ ebp - 0x370 ]
push ecx
lea eax [ ebp - 0x36c ]
push edx
lea ecx [ ebp - 0x368 ]
push eax
lea edx [ ebp - 0x364 ]
push ecx
lea eax [ ebp - 0x360 ]
push edx
lea ecx [ ebp - 0x35c ]
push eax
lea edx [ ebp - 0x358 ]
push ecx
lea eax [ ebp - 0x354 ]
push edx
lea ecx [ ebp - 0x350 ]
push eax
lea edx [ ebp - 0x34c ]
push ecx
lea eax [ ebp - 0x348 ]
push edx
lea ecx [ ebp - 0x344 ]
push eax
lea edx [ ebp - 0x340 ]
push ecx
lea eax [ ebp - 0x33c ]
push edx
lea ecx [ ebp - 0x338 ]
push eax
lea edx [ ebp - 0x334 ]
push ecx
lea eax [ ebp - 0x330 ]
push edx
lea ecx [ ebp - 0x32c ]
push eax
lea edx [ ebp - 0x328 ]
push ecx
lea eax [ ebp - 0x324 ]
push edx
lea ecx [ ebp - 0x320 ]
push eax
lea edx [ ebp - 0x31c ]
push ecx
lea eax [ ebp - 0x318 ]
push edx
lea ecx [ ebp - 0x314 ]
push eax
lea edx [ ebp - 0x310 ]
push ecx
lea eax [ ebp - 0x30c ]
push edx
lea ecx [ ebp - 0x308 ]
push eax
push ecx
lea edx [ ebp - 0x304 ]
lea eax [ ebp - 0x300 ]
push edx
lea ecx [ ebp - 0x2fc ]
push eax
lea edx [ ebp - 0x2f8 ]
push ecx
lea eax [ ebp - 0x2f4 ]
push edx
lea ecx [ ebp - 0x2f0 ]
push eax
lea edx [ ebp - 0x2ec ]
push ecx
lea eax [ ebp - 0x2e8 ]
push edx
lea ecx [ ebp - 0x2e4 ]
push eax
lea edx [ ebp - 0x2e0 ]
push ecx
lea eax [ ebp - 0x2dc ]
push edx
lea ecx [ ebp - 0x2d8 ]
push eax
lea edx [ ebp - 0x2d4 ]
push ecx
lea eax [ ebp - 0x2d0 ]
push edx
lea ecx [ ebp - 0x2cc ]
push eax
lea edx [ ebp - 0x2c8 ]
push ecx
lea eax [ ebp - 0x2c4 ]
push edx
lea ecx [ ebp - 0x2c0 ]
push eax
lea edx [ ebp - 0x2bc ]
push ecx
lea eax [ ebp - 0x2b8 ]
push edx
lea ecx [ ebp - 0x2b4 ]
push eax
push ecx
push 0x38
call [ __vbaFreeObjList@IAT ]
add esp 0x380
lea edx [ ebp - 0x3d0 ]
lea eax [ ebp - 0x3c0 ]
lea ecx [ ebp - 0x3b0 ]
push edx
push eax
lea edx [ ebp - 0x3a0 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
retn
sub_41aa8a
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41aab0
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x7c
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
mov eax [ rw-data ]
mov [ ebp - 0x18 ] 0x0
test eax eax
jne r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x310 ]
mov edi [ __vbaObjSet@IAT ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov [ ebp - 0x2c ] eax
mov eax [ eax ]
mov ebx [ ebp - 0x24 ]
sub esp 0x10
mov [ ebp - 0x3c ] eax
mov eax esp
mov edx 0xa
mov ecx 0x80020004
mov [ eax ] edx
mov edx [ ebp - 0x2c ]
push r-xdata
push edx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ eax + 0xc ] ecx
mov eax [ ebp - 0x3c ]
call [ eax + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x310 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x40 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x40 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x328 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x44 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x44 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x328 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x48 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x48 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x32c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x4c ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x4c ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ eax ]
push eax
call [ edx + 0x32c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x50 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x50 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x36c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x54 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x54 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x36c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x58 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x58 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x35c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x5c ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x5c ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x35c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x60 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x60 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x35c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x64 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x64 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x358 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x68 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x68 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x358 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x6c ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x6c ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x358 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x70 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x70 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x368 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x74 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x74 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x368 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x78 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x78 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x368 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x7c ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x7c ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x364 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x80 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x80 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x364 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x84 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x84 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x364 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x88 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x88 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x360 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x8c ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x8c ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x360 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
mov edx [ eax ]
sub esp 0x10
mov [ ebp - 0x90 ] edx
mov edx esp
mov ecx 0xa
mov [ ebp - 0x2c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov eax 0x80020004
push r-xdata
mov [ edx + 0x4 ] ebx
push ecx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x90 ]
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x360 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call edi
sub esp 0x10
mov esi eax
mov edx esp
mov eax 0xa
mov ecx [ esi ]
push r-xdata
mov [ edx ] eax
mov eax 0x80020004
push esi
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
call [ ecx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x2c ]
push 0x1ec
push r-xdata
push ecx
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1ec
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x334 ]
lea edx [ ebp - 0x18 ]
push eax
push edx
call edi
sub esp 0x10
mov esi eax
mov edx esp
mov eax 0xa
mov ecx [ esi ]
push r-xdata
mov [ edx ] eax
mov eax 0x80020004
push esi
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
call [ ecx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1ec
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x334 ]
lea edx [ ebp - 0x18 ]
push eax
push edx
call edi
sub esp 0x10
mov esi eax
mov edx esp
mov eax 0xa
mov ecx [ esi ]
push r-xdata
mov [ edx ] eax
mov eax 0x80020004
push esi
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
call [ ecx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1ec
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x330 ]
lea edx [ ebp - 0x18 ]
push eax
push edx
call edi
sub esp 0x10
mov esi eax
mov edx esp
mov eax 0xa
mov ecx [ esi ]
push r-xdata
mov [ edx ] eax
mov eax 0x80020004
push esi
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
call [ ecx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1ec
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x330 ]
lea edx [ ebp - 0x18 ]
push eax
push edx
call edi
sub esp 0x10
mov esi eax
mov edx esp
mov eax 0xa
mov ecx [ esi ]
mov [ ebp - 0x20 ] 0x80020004
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
push r-xdata
push esi
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
call [ ecx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1ec
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x330 ]
lea edx [ ebp - 0x18 ]
push eax
push edx
call edi
sub esp 0x10
mov esi eax
mov edx esp
mov eax 0xa
mov ecx [ esi ]
push r-xdata
mov [ edx ] eax
mov eax 0x80020004
push esi
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0xc ] eax
call [ ecx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1ec
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x330 ]
lea edx [ ebp - 0x18 ]
push eax
push edx
call edi
sub esp 0x10
mov ecx 0xa
mov esi esp
mov edi eax
mov eax 0x80020004
push r-xdata
mov edx [ edi ]
mov [ esi ] ecx
push edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0xc ] eax
call [ edx + 0x1ec ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov [ ebp - 0x4 ] 0x0
push sub_41b862
jmp sub_41b861
push 0x1ec
push r-xdata
push edi
push eax
call [ __vbaHresultCheckObj@IAT ]
sub_41b862
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41b890
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xa4
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x1
mov [ ebp - 0x4 ] ecx
and al 0xfe
push eax
mov [ ebp + 0x8 ] eax
mov edx [ eax ]
call [ edx + 0x4 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
xor eax eax
mov [ ebp - 0x1c ] ebx
mov si [ edi ]
mov [ ebp - 0x18 ] ebx
cmp si 0xbe
mov [ ebp - 0x24 ] ebx
sete al
xor ecx ecx
cmp si 0x8
sete cl
or eax ecx
mov [ ebp - 0x20 ] ebx
neg eax
sbb eax eax
xor edx edx
neg eax
cmp si 0x6e
mov [ ebp - 0x28 ] ebx
sete dl
or eax edx
mov [ ebp - 0x2c ] ebx
neg eax
sbb eax eax
xor ecx ecx
neg eax
cmp si 0x39
mov [ ebp - 0x3c ] ebx
setle cl
xor edx edx
cmp si 0x30
setge dl
and ecx edx
mov [ ebp - 0x4c ] ebx
neg ecx
sbb ecx ecx
mov [ ebp - 0x5c ] ebx
neg ecx
or eax ecx
mov [ ebp - 0x6c ] ebx
neg eax
sbb eax eax
xor ecx ecx
neg eax
cmp si 0x6a
mov [ ebp - 0x7c ] ebx
setle cl
xor edx edx
cmp si 0x5f
setge dl
and ecx edx
neg ecx
sbb ecx ecx
neg ecx
or eax ecx
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x54 ] ecx
mov esi 0x8
lea edx [ ebp - 0x7c ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x74 ] r-xdata
mov [ ebp - 0x7c ] esi
call [ __vbaVarDup@IAT ]
mov ax [ edi ]
push eax
call [ __vbaStrI2@IAT ]
mov edx eax
lea ecx [ ebp - 0x28 ]
call [ __vbaStrMove@IAT ]
push eax
push r-xdata
call [ __vbaStrCat@IAT ]
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x5c ]
push ecx
lea eax [ ebp - 0x4c ]
push edx
push eax
lea ecx [ ebp - 0x3c ]
push 0x30
push ecx
mov [ ebp - 0x3c ] esi
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x6c ]
lea eax [ ebp - 0x5c ]
push edx
lea ecx [ ebp - 0x4c ]
push eax
lea edx [ ebp - 0x3c ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x324 ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa0 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
lea edi [ ecx + 0x54 ]
fstp [ edi ]
fnstsw ax
test al 0xd
jne r-xdata
mov edx [ ebp - 0x28 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
mov edi [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x2c ]
call edi
cmp si bx
je r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
jmp __vbaFPException
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x320 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x7c ]
push 0x2
lea edx [ ebp - 0x3c ]
push ecx
push edx
mov esi eax
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x7c ] 0x4005
call [ Ordinal_MSVBVM60_714@IAT ]
mov edi [ esi ]
lea eax [ ebp - 0x3c ]
lea ecx [ ebp - 0x28 ]
push eax
push ecx
call [ __vbaStrVarVal@IAT ]
push eax
push esi
call [ edi + 0xa4 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x31c ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa0 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x324 ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa0 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x3c ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] ebx
fwait
push sub_41bd53
jmp sub_41bd52
push 0xa4
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x28 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2c ]
call edi
cmp si bx
je r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x3c ]
mov [ ebp - 0x34 ] eax
push 0x2
lea eax [ ebp - 0x4c ]
push edx
push eax
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x3c ] 0x8
call [ Ordinal_MSVBVM60_714@IAT ]
lea ecx [ ebp - 0x4c ]
push ecx
call [ __vbaR8Var@IAT ]
fstp [ ebp - 0x24 ]
lea ecx [ ebp - 0x2c ]
call edi
lea edx [ ebp - 0x4c ]
lea eax [ ebp - 0x3c ]
push edx
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
jmp r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x31c ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa0 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x3c ]
mov [ ebp - 0x34 ] eax
push 0x2
lea eax [ ebp - 0x4c ]
push edx
push eax
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x3c ] 0x8
call [ Ordinal_MSVBVM60_714@IAT ]
lea ecx [ ebp - 0x4c ]
push ecx
call [ __vbaR8Var@IAT ]
fstp [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call edi
lea edx [ ebp - 0x4c ]
lea eax [ ebp - 0x3c ]
push edx
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
jmp r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
sub_41bd24
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x6c ]
lea eax [ ebp - 0x5c ]
push edx
lea ecx [ ebp - 0x4c ]
push eax
lea edx [ ebp - 0x3c ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
retn
sub_41bd53
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41bd80
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xa8
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x1
mov [ ebp - 0x4 ] ecx
and al 0xfe
push eax
mov [ ebp + 0x8 ] eax
mov edx [ eax ]
call [ edx + 0x4 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
xor eax eax
mov [ ebp - 0x1c ] ebx
mov si [ edi ]
mov [ ebp - 0x18 ] ebx
cmp si 0xbe
mov [ ebp - 0x24 ] ebx
sete al
xor ecx ecx
cmp si 0x8
sete cl
or eax ecx
mov [ ebp - 0x20 ] ebx
neg eax
sbb eax eax
xor edx edx
neg eax
cmp si 0x6e
mov [ ebp - 0x2c ] ebx
sete dl
or eax edx
mov [ ebp - 0x30 ] ebx
neg eax
sbb eax eax
xor ecx ecx
neg eax
cmp si 0x39
mov [ ebp - 0x40 ] ebx
setle cl
xor edx edx
cmp si 0x30
setge dl
and ecx edx
mov [ ebp - 0x50 ] ebx
neg ecx
sbb ecx ecx
mov [ ebp - 0x60 ] ebx
neg ecx
or eax ecx
mov [ ebp - 0x70 ] ebx
neg eax
sbb eax eax
xor ecx ecx
neg eax
cmp si 0x6a
mov [ ebp - 0x80 ] ebx
setle cl
xor edx edx
cmp si 0x5f
setge dl
and ecx edx
neg ecx
sbb ecx ecx
neg ecx
or eax ecx
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] ecx
mov esi 0x8
lea edx [ ebp - 0x80 ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x78 ] r-xdata
mov [ ebp - 0x80 ] esi
call [ __vbaVarDup@IAT ]
mov ax [ edi ]
push eax
call [ __vbaStrI2@IAT ]
mov edx eax
lea ecx [ ebp - 0x2c ]
call [ __vbaStrMove@IAT ]
push eax
push r-xdata
call [ __vbaStrCat@IAT ]
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x60 ]
push ecx
lea eax [ ebp - 0x50 ]
push edx
push eax
lea ecx [ ebp - 0x40 ]
push 0x30
push ecx
mov [ ebp - 0x40 ] esi
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x70 ]
lea eax [ ebp - 0x60 ]
push edx
lea ecx [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x40 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x324 ]
lea edx [ ebp - 0x30 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x2c ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa0 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
lea edi [ ecx + 0x54 ]
fstp [ edi ]
fnstsw ax
test al 0xd
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x2c ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
mov edi [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x30 ]
call edi
cmp si bx
je r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
jmp __vbaFPException
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x320 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x80 ]
push 0x2
lea edx [ ebp - 0x40 ]
push ecx
push edx
mov esi eax
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x80 ] 0x4005
call [ Ordinal_MSVBVM60_714@IAT ]
mov edi [ esi ]
lea eax [ ebp - 0x40 ]
lea ecx [ ebp - 0x2c ]
push eax
push ecx
call [ __vbaStrVarVal@IAT ]
push eax
push esi
call [ edi + 0xa4 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x31c ]
lea edx [ ebp - 0x30 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x2c ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa0 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x324 ]
lea edx [ ebp - 0x30 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x2c ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa0 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x30 ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x40 ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] ebx
fwait
push sub_41c243
jmp sub_41c242
push 0xa4
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x2c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x2c ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x30 ]
call edi
cmp si bx
je r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x38 ] eax
push 0x2
lea eax [ ebp - 0x50 ]
push edx
push eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x40 ] 0x8
call [ Ordinal_MSVBVM60_714@IAT ]
lea ecx [ ebp - 0x50 ]
push ecx
call [ __vbaR8Var@IAT ]
fstp [ ebp - 0x24 ]
lea ecx [ ebp - 0x30 ]
call edi
lea edx [ ebp - 0x50 ]
lea eax [ ebp - 0x40 ]
push edx
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
jmp r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x31c ]
lea edx [ ebp - 0x30 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x2c ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa0 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x38 ] eax
push 0x2
lea eax [ ebp - 0x50 ]
push edx
push eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x40 ] 0x8
call [ Ordinal_MSVBVM60_714@IAT ]
lea ecx [ ebp - 0x50 ]
push ecx
call [ __vbaR8Var@IAT ]
fstp [ ebp - 0x1c ]
lea ecx [ ebp - 0x30 ]
call edi
lea edx [ ebp - 0x50 ]
lea eax [ ebp - 0x40 ]
push edx
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
jmp r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
sub_41c214
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x30 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x70 ]
lea eax [ ebp - 0x60 ]
push edx
lea ecx [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x40 ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
retn
sub_41c243
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41c270
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xa4
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x1
mov [ ebp - 0x4 ] ecx
and al 0xfe
push eax
mov [ ebp + 0x8 ] eax
mov edx [ eax ]
call [ edx + 0x4 ]
mov ebx [ ebp + 0xc ]
xor edi edi
xor eax eax
mov [ ebp - 0x1c ] edi
mov si [ ebx ]
mov [ ebp - 0x18 ] edi
cmp si 0xbe
mov [ ebp - 0x24 ] edi
sete al
xor ecx ecx
cmp si 0x8
sete cl
or eax ecx
mov [ ebp - 0x20 ] edi
neg eax
sbb eax eax
xor edx edx
neg eax
cmp si 0x6e
mov [ ebp - 0x28 ] edi
sete dl
or eax edx
mov [ ebp - 0x2c ] edi
neg eax
sbb eax eax
xor ecx ecx
neg eax
cmp si 0x39
mov [ ebp - 0x3c ] edi
setle cl
xor edx edx
cmp si 0x30
setge dl
and ecx edx
mov [ ebp - 0x4c ] edi
neg ecx
sbb ecx ecx
mov [ ebp - 0x5c ] edi
neg ecx
or eax ecx
mov [ ebp - 0x6c ] edi
neg eax
sbb eax eax
xor ecx ecx
neg eax
cmp si 0x6a
mov [ ebp - 0x7c ] edi
setle cl
xor edx edx
cmp si 0x5f
setge dl
and ecx edx
neg ecx
sbb ecx ecx
neg ecx
or eax ecx
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx 0x80020004
mov eax 0xa
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x54 ] ecx
mov esi 0x8
lea edx [ ebp - 0x7c ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x74 ] r-xdata
mov [ ebp - 0x7c ] esi
call [ __vbaVarDup@IAT ]
mov ax [ ebx ]
push eax
call [ __vbaStrI2@IAT ]
mov edx eax
lea ecx [ ebp - 0x28 ]
call [ __vbaStrMove@IAT ]
push eax
push r-xdata
call [ __vbaStrCat@IAT ]
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x5c ]
push ecx
lea eax [ ebp - 0x4c ]
push edx
push eax
lea ecx [ ebp - 0x3c ]
push 0x30
push ecx
mov [ ebp - 0x3c ] esi
call [ Ordinal_MSVBVM60_595@IAT ]
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x6c ]
lea eax [ ebp - 0x5c ]
push edx
lea ecx [ ebp - 0x4c ]
push eax
lea edx [ ebp - 0x3c ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x354 ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
lea ebx [ edx + 0x4c ]
fstp [ ebx ]
fnstsw ax
test al 0xd
jne r-xdata
mov edx [ ebp - 0x28 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
mov ebx [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x2c ]
call ebx
cmp si di
je r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
jmp __vbaFPException
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x318 ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea eax [ ebp - 0x7c ]
push 0x2
lea ecx [ ebp - 0x3c ]
push eax
push ecx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x7c ] 0x4005
call [ Ordinal_MSVBVM60_714@IAT ]
mov ebx [ esi ]
lea edx [ ebp - 0x3c ]
lea eax [ ebp - 0x28 ]
push edx
push eax
call [ __vbaStrVarVal@IAT ]
push eax
push esi
call [ ebx + 0xa4 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ eax ]
push eax
call [ edx + 0x314 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call [ __vbaObjSet@IAT ]
mov esi eax
lea edx [ ebp - 0x28 ]
push edx
push esi
mov ecx [ esi ]
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x354 ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov eax [ ebp - 0x2c ]
push 0x2
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x3c ]
lea ecx [ ebp - 0x4c ]
push eax
push ecx
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x3c ] 0x9
call [ Ordinal_MSVBVM60_714@IAT ]
lea edx [ ebp - 0x4c ]
push edx
call [ __vbaR8Var@IAT ]
fstp [ ebp - 0x24 ]
lea ecx [ ebp - 0x2c ]
call ebx
lea eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x3c ]
push eax
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
jmp r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x3c ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] edi
fwait
push sub_41c6dd
jmp sub_41c6dc
push 0xa4
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x28 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2c ]
call ebx
cmp si di
je r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x314 ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov eax [ ebp - 0x2c ]
push 0x2
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x3c ]
lea ecx [ ebp - 0x4c ]
push eax
push ecx
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x3c ] 0x9
call [ Ordinal_MSVBVM60_714@IAT ]
lea edx [ ebp - 0x4c ]
push edx
call [ __vbaR8Var@IAT ]
fstp [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call ebx
lea eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x3c ]
push eax
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
jmp r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
sub_41c6ae
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x6c ]
lea edx [ ebp - 0x5c ]
push ecx
lea eax [ ebp - 0x4c ]
push edx
lea ecx [ ebp - 0x3c ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
retn
sub_41c6dd
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41c710
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb4
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x1
mov [ ebp - 0x4 ] ecx
and al 0xfe
push eax
mov [ ebp + 0x8 ] eax
mov edx [ eax ]
call [ edx + 0x4 ]
mov eax [ ebp + 0xc ]
xor edi edi
xor ecx ecx
mov ebx 0x8
mov si [ eax ]
mov [ ebp - 0x1c ] edi
cmp si 0xbe
mov [ ebp - 0x18 ] edi
sete cl
xor edx edx
cmp si bx
sete dl
or ecx edx
mov [ ebp - 0x24 ] edi
neg ecx
sbb ecx ecx
xor eax eax
neg ecx
cmp si 0x6e
mov [ ebp - 0x20 ] edi
sete al
or ecx eax
mov [ ebp - 0x28 ] edi
neg ecx
sbb ecx ecx
xor edx edx
neg ecx
cmp si 0x39
mov [ ebp - 0x2c ] edi
setle dl
xor eax eax
cmp si 0x30
setge al
and edx eax
mov [ ebp - 0x3c ] edi
neg edx
sbb edx edx
mov [ ebp - 0x4c ] edi
neg edx
or ecx edx
mov [ ebp - 0x5c ] edi
neg ecx
sbb ecx ecx
xor edx edx
neg ecx
cmp si 0x6a
mov [ ebp - 0x6c ] edi
setle dl
xor eax eax
cmp si 0x5f
setge al
and edx eax
mov [ ebp - 0x7c ] edi
neg edx
sbb edx edx
mov [ ebp - 0x8c ] edi
neg edx
or ecx edx
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov esi [ __vbaVarDup@IAT ]
mov ecx 0x80020004
mov [ ebp - 0x64 ] ecx
mov eax 0xa
mov [ ebp - 0x54 ] ecx
lea edx [ ebp - 0x8c ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x84 ] r-xdata
mov [ ebp - 0x8c ] ebx
call esi
lea edx [ ebp - 0x7c ]
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x74 ] r-xdata
mov [ ebp - 0x7c ] ebx
call esi
lea ecx [ ebp - 0x6c ]
lea edx [ ebp - 0x5c ]
push ecx
lea eax [ ebp - 0x4c ]
push edx
push eax
lea ecx [ ebp - 0x3c ]
push 0x30
push ecx
call [ Ordinal_MSVBVM60_595@IAT ]
lea edx [ ebp - 0x6c ]
lea eax [ ebp - 0x5c ]
push edx
lea ecx [ ebp - 0x4c ]
push eax
lea edx [ ebp - 0x3c ]
push ecx
push edx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x354 ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
lea ebx [ edx + 0x4c ]
fstp [ ebx ]
fnstsw ax
test al 0xd
jne r-xdata
mov edx [ ebp - 0x28 ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
mov ebx [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x2c ]
call ebx
cmp si di
je r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
jmp __vbaFPException
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x318 ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea eax [ ebp - 0x7c ]
push 0x2
lea ecx [ ebp - 0x3c ]
push eax
push ecx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x7c ] 0x4005
call [ Ordinal_MSVBVM60_714@IAT ]
mov ebx [ esi ]
lea edx [ ebp - 0x3c ]
lea eax [ ebp - 0x28 ]
push edx
push eax
call [ __vbaStrVarVal@IAT ]
push eax
push esi
call [ ebx + 0xa4 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edx [ eax ]
push eax
call [ edx + 0x314 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call [ __vbaObjSet@IAT ]
mov esi eax
lea edx [ ebp - 0x28 ]
push edx
push esi
mov ecx [ esi ]
call [ ecx + 0xa0 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x354 ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov eax [ ebp - 0x2c ]
push 0x2
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x3c ]
lea ecx [ ebp - 0x4c ]
push eax
push ecx
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x3c ] 0x9
call [ Ordinal_MSVBVM60_714@IAT ]
lea edx [ ebp - 0x4c ]
push edx
call [ __vbaR8Var@IAT ]
fstp [ ebp - 0x24 ]
lea ecx [ ebp - 0x2c ]
call ebx
lea eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x3c ]
push eax
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
jmp r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x3c ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] edi
fwait
push sub_41cb6f
jmp sub_41cb6e
push 0xa4
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x28 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2c ]
call ebx
cmp si di
je r-xdata
push 0xa0
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x314 ]
lea edx [ ebp - 0x2c ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov eax [ ebp - 0x2c ]
push 0x2
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x3c ]
lea ecx [ ebp - 0x4c ]
push eax
push ecx
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x3c ] 0x9
call [ Ordinal_MSVBVM60_714@IAT ]
lea edx [ ebp - 0x4c ]
push edx
call [ __vbaR8Var@IAT ]
fstp [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call ebx
lea eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x3c ]
push eax
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
jmp r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
sub_41cb40
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x6c ]
lea edx [ ebp - 0x5c ]
push ecx
lea eax [ ebp - 0x4c ]
push edx
lea ecx [ ebp - 0x3c ]
push eax
push ecx
push 0x4
call [ __vbaFreeVarList@IAT ]
add esp 0x14
retn
sub_41cb6f
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_42027d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_420f70
add esp 0x4
call sub_421130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_421160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_421160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_420f70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_420f70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_420f70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_420f70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_420f70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_420f70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xe000
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4210a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xe000
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_42027d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_420f70
add esp 0x4
call sub_421130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_421160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_421160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_420f70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_420f70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_420f70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_420f70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_420f70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_420f70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xe000
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4210a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xe000
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_420f70
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_4210a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80de78ac
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_421130
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_421160
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401236
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x35 ] al
inc ecx
add bh bh
and eax __vbaChkstk@IAT
jmp [ __vbaExceptHandler@IAT ]
_adj_fdiv_m16i
jmp [ _adj_fdiv_m16i@IAT ]
_adj_fdiv_m32
jmp [ _adj_fdiv_m32@IAT ]
_adj_fdiv_m32i
jmp [ _adj_fdiv_m32i@IAT ]
_adj_fdiv_m64
jmp [ _adj_fdiv_m64@IAT ]
_adj_fdiv_r
jmp [ _adj_fdiv_r@IAT ]
_adj_fdivr_m16i
jmp [ _adj_fdivr_m16i@IAT ]
_adj_fdivr_m32
jmp [ _adj_fdivr_m32@IAT ]
_adj_fdivr_m32i
jmp [ _adj_fdivr_m32i@IAT ]
_adj_fdivr_m64
jmp [ _adj_fdivr_m64@IAT ]
_adj_fpatan
jmp [ _adj_fpatan@IAT ]
_adj_fprem
jmp [ _adj_fprem@IAT ]
_adj_fprem1
jmp [ _adj_fprem1@IAT ]
_adj_fptan
jmp [ _adj_fptan@IAT ]
_CIatan
jmp [ _CIatan@IAT ]
_CIcos
jmp [ _CIcos@IAT ]
_CIexp
jmp [ _CIexp@IAT ]
_CIlog
jmp [ _CIlog@IAT ]
_CIsin
jmp [ _CIsin@IAT ]
_CIsqrt
jmp [ _CIsqrt@IAT ]
_CItan
jmp [ _CItan@IAT ]
_allmul
jmp [ _allmul@IAT ]
__vbaFpR8
jmp [ __vbaFpR8@IAT ]
__vbaR8Var
jmp [ __vbaR8Var@IAT ]
__vbaStrVarVal
jmp [ __vbaStrVarVal@IAT ]
__vbaErrorOverflow
jmp [ __vbaErrorOverflow@IAT ]
__vbaAryDestruct
jmp [ __vbaAryDestruct@IAT ]
__vbaFreeObjList
jmp [ __vbaFreeObjList@IAT ]
__vbaStrI2
jmp [ __vbaStrI2@IAT ]
Ordinal_MSVBVM60_595
jmp [ Ordinal_MSVBVM60_595@IAT ]
Ordinal_MSVBVM60_714
jmp [ Ordinal_MSVBVM60_714@IAT ]
__vbaVarSub
jmp [ __vbaVarSub@IAT ]
__vbaVarCat
jmp [ __vbaVarCat@IAT ]
__vbaStrR8
jmp [ __vbaStrR8@IAT ]
Ordinal_MSVBVM60_711
jmp [ Ordinal_MSVBVM60_711@IAT ]
__vbaAryVar
jmp [ __vbaAryVar@IAT ]
__vbaAryCopy
jmp [ __vbaAryCopy@IAT ]
__vbaR8Str
jmp [ __vbaR8Str@IAT ]
__vbaStrCat
jmp [ __vbaStrCat@IAT ]
__vbaFreeStrList
jmp [ __vbaFreeStrList@IAT ]
__vbaAryUnlock
jmp [ __vbaAryUnlock@IAT ]
__vbaAryLock
jmp [ __vbaAryLock@IAT ]
__vbaUbound
jmp [ __vbaUbound@IAT ]
__vbaI2I4
jmp [ __vbaI2I4@IAT ]
__vbaGenerateBoundsError
jmp [ __vbaGenerateBoundsError@IAT ]
__vbaRedimPreserve
jmp [ __vbaRedimPreserve@IAT ]
__vbaBoolVar
jmp [ __vbaBoolVar@IAT ]
__vbaLateIdCall
jmp [ __vbaLateIdCall@IAT ]
__vbaFreeVarList
jmp [ __vbaFreeVarList@IAT ]
__vbaVarDup
jmp [ __vbaVarDup@IAT ]
Ordinal_MSVBVM60_685
jmp [ Ordinal_MSVBVM60_685@IAT ]
Ordinal_MSVBVM60_617
jmp [ Ordinal_MSVBVM60_617@IAT ]
__vbaStrVarMove
jmp [ __vbaStrVarMove@IAT ]
__vbaStrMove
jmp [ __vbaStrMove@IAT ]
__vbaLateIdCallLd
jmp [ __vbaLateIdCallLd@IAT ]
__vbaObjIs
jmp [ __vbaObjIs@IAT ]
__vbaStrCopy
jmp [ __vbaStrCopy@IAT ]
Ordinal_MSVBVM60_716
jmp [ Ordinal_MSVBVM60_716@IAT ]
__vbaCastObjVar
jmp [ __vbaCastObjVar@IAT ]
__vbaCastObj
jmp [ __vbaCastObj@IAT ]
Ordinal_MSVBVM60_598
jmp [ Ordinal_MSVBVM60_598@IAT ]
__vbaNextEachCollAd
jmp [ __vbaNextEachCollAd@IAT ]
__vbaLateMemSt
jmp [ __vbaLateMemSt@IAT ]
__vbaFreeVar
jmp [ __vbaFreeVar@IAT ]
__vbaLateMemCallLd
jmp [ __vbaLateMemCallLd@IAT ]
__vbaVarTstEq
jmp [ __vbaVarTstEq@IAT ]
__vbaForEachCollAd
jmp [ __vbaForEachCollAd@IAT ]
__vbaFreeObj
jmp [ __vbaFreeObj@IAT ]
__vbaFreeStr
jmp [ __vbaFreeStr@IAT ]
__vbaHresultCheckObj
jmp [ __vbaHresultCheckObj@IAT ]
__vbaNew2
jmp [ __vbaNew2@IAT ]
__vbaObjSet
jmp [ __vbaObjSet@IAT ]
__vbaStrCmp
jmp [ __vbaStrCmp@IAT ]
EVENT_SINK_QueryInterface
jmp [ EVENT_SINK_QueryInterface@IAT ]
EVENT_SINK_AddRef
jmp [ EVENT_SINK_AddRef@IAT ]
EVENT_SINK_Release
jmp [ EVENT_SINK_Release@IAT ]
Ordinal_MSVBVM60_302
jmp [ Ordinal_MSVBVM60_302@IAT ]
Ordinal_MSVBVM60_308
jmp [ Ordinal_MSVBVM60_308@IAT ]
Ordinal_MSVBVM60_100
jmp [ Ordinal_MSVBVM60_100@IAT ]
sub_4014ed
jmp [ eax + 0x726f4600 ]
sub_404e0f
push ebx
cld
mov bh 0x77
inc esi
test [ esi - 0x7e ] edx

sub_408a91
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
retn
sub_408aa4
retn
sub_408ec9
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
retn
sub_408edc
retn
sub_4092f9
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
retn
sub_40930c
retn
sub_409729
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
retn
sub_40973c
retn
sub_409b59
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
retn
sub_409b6c
retn
sub_409f89
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
retn
sub_409f9c
retn
sub_40a3b9
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
retn
sub_40a3cc
retn
sub_40a7e9
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeObj@IAT ]
retn
sub_40a7fc
retn
sub_41b857
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
retn
sub_41b861
retn
sub_41bd52
retn
sub_41c242
retn
sub_41c6dc
retn
sub_41cb6e
retn
